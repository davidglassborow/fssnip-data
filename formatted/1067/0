<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">iter</span> (<span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="f">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">unit</span>) (<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">x</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">s</span>) <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">Iter</span> <span class="o">:</span> (<span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="t">unit</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="t">unit</span>) <span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs2', 8)" onmouseover="showTip(event, 'fs2', 8)" class="f">f</span>)
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="f">iterBack</span> (<span onmouseout="hideTip(event, 'fs2', 10)" onmouseover="showTip(event, 'fs2', 10)" class="f">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 11)" onmouseover="showTip(event, 'fs3', 11)" class="t">unit</span>) (<span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="i">x</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">s</span>) <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">IterBack</span> <span class="o">:</span> (<span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 13)" onmouseover="showTip(event, 'fs3', 13)" class="t">unit</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 14)" onmouseover="showTip(event, 'fs3', 14)" class="t">unit</span>) <span onmouseout="hideTip(event, 'fs6', 15)" onmouseover="showTip(event, 'fs6', 15)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs2', 16)" onmouseover="showTip(event, 'fs2', 16)" class="f">f</span>)

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs7', 17)" onmouseover="showTip(event, 'fs7', 17)" class="f">empty</span> ()               <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">static</span> <span class="k">member</span> <span class="i">Empty</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">s</span>) ())
<span class="k">let</span> <span class="k">inline</span> (<span class="o">+&gt;</span>) <span onmouseout="hideTip(event, 'fs8', 18)" onmouseover="showTip(event, 'fs8', 18)" class="i">item</span> <span onmouseout="hideTip(event, 'fs9', 19)" onmouseover="showTip(event, 'fs9', 19)" class="i">col</span>          <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">AddFirst</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">s</span>) <span onmouseout="hideTip(event, 'fs9', 20)" onmouseover="showTip(event, 'fs9', 20)" class="i">col</span>,<span onmouseout="hideTip(event, 'fs8', 21)" onmouseover="showTip(event, 'fs8', 21)" class="i">item</span>)
<span class="k">let</span> <span class="k">inline</span> (<span class="o">&lt;+</span>) <span onmouseout="hideTip(event, 'fs10', 22)" onmouseover="showTip(event, 'fs10', 22)" class="i">col</span> <span onmouseout="hideTip(event, 'fs8', 23)" onmouseover="showTip(event, 'fs8', 23)" class="i">item</span>          <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">AddLast</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">s</span>) <span onmouseout="hideTip(event, 'fs10', 24)" onmouseover="showTip(event, 'fs10', 24)" class="i">col</span>,<span onmouseout="hideTip(event, 'fs8', 25)" onmouseover="showTip(event, 'fs8', 25)" class="i">item</span>)
<span class="k">let</span> <span class="k">inline</span> (<span class="o">&lt;+&gt;</span>) <span onmouseout="hideTip(event, 'fs11', 26)" onmouseover="showTip(event, 'fs11', 26)" class="i">col1</span> <span onmouseout="hideTip(event, 'fs12', 27)" onmouseover="showTip(event, 'fs12', 27)" class="i">col2</span>        <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">static</span> <span class="k">member</span> <span class="i">Concat</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">s</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">s</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">s</span>) <span onmouseout="hideTip(event, 'fs11', 28)" onmouseover="showTip(event, 'fs11', 28)" class="i">col1</span>,<span onmouseout="hideTip(event, 'fs12', 29)" onmouseover="showTip(event, 'fs12', 29)" class="i">col2</span>)
<span class="k">let</span> <span class="k">inline</span> (<span class="o">++&gt;</span>) <span onmouseout="hideTip(event, 'fs13', 30)" onmouseover="showTip(event, 'fs13', 30)" class="i">items</span> <span onmouseout="hideTip(event, 'fs14', 31)" onmouseover="showTip(event, 'fs14', 31)" class="i">col</span>        <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">AddManyFirst</span> <span class="o">:</span> #<span onmouseout="hideTip(event, 'fs15', 32)" onmouseover="showTip(event, 'fs15', 32)" class="t">seq</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">s</span>) <span onmouseout="hideTip(event, 'fs14', 33)" onmouseover="showTip(event, 'fs14', 33)" class="i">col</span>,<span onmouseout="hideTip(event, 'fs13', 34)" onmouseover="showTip(event, 'fs13', 34)" class="i">items</span>)
<span class="k">let</span> <span class="k">inline</span> (<span class="o">&lt;++</span>) <span onmouseout="hideTip(event, 'fs16', 35)" onmouseover="showTip(event, 'fs16', 35)" class="i">col</span> <span onmouseout="hideTip(event, 'fs13', 36)" onmouseover="showTip(event, 'fs13', 36)" class="i">items</span>        <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">AddManyLast</span> <span class="o">:</span> #<span onmouseout="hideTip(event, 'fs15', 37)" onmouseover="showTip(event, 'fs15', 37)" class="t">seq</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">s</span>) <span onmouseout="hideTip(event, 'fs16', 38)" onmouseover="showTip(event, 'fs16', 38)" class="i">col</span>,<span onmouseout="hideTip(event, 'fs13', 39)" onmouseover="showTip(event, 'fs13', 39)" class="i">items</span>)

<span class="c">//++ Advanced Operators</span>
<span class="c">//The following operators deal with adding or removing items from a data structure.</span>

<span class="c">///Returns the first elements of the data structure</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs17', 40)" onmouseover="showTip(event, 'fs17', 40)" class="f">takef</span> <span onmouseout="hideTip(event, 'fs18', 41)" onmouseover="showTip(event, 'fs18', 41)" class="i">n</span> <span onmouseout="hideTip(event, 'fs19', 42)" onmouseover="showTip(event, 'fs19', 42)" class="i">col</span>            <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">TakeFirst</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs20', 43)" onmouseover="showTip(event, 'fs20', 43)" class="t">int</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">s</span>) <span onmouseout="hideTip(event, 'fs19', 44)" onmouseover="showTip(event, 'fs19', 44)" class="i">col</span>,<span onmouseout="hideTip(event, 'fs18', 45)" onmouseover="showTip(event, 'fs18', 45)" class="i">n</span>)
<span class="c">///Returns the last elements of the data structure</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs21', 46)" onmouseover="showTip(event, 'fs21', 46)" class="f">takel</span> <span onmouseout="hideTip(event, 'fs18', 47)" onmouseover="showTip(event, 'fs18', 47)" class="i">n</span> <span onmouseout="hideTip(event, 'fs22', 48)" onmouseover="showTip(event, 'fs22', 48)" class="i">col</span>            <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">TakeLast</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs20', 49)" onmouseover="showTip(event, 'fs20', 49)" class="t">int</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">s</span>) <span onmouseout="hideTip(event, 'fs22', 50)" onmouseover="showTip(event, 'fs22', 50)" class="i">col</span>,<span onmouseout="hideTip(event, 'fs18', 51)" onmouseover="showTip(event, 'fs18', 51)" class="i">n</span>)
<span class="c">///Splits the data structure at the specified index.</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs23', 52)" onmouseover="showTip(event, 'fs23', 52)" class="f">split</span> <span onmouseout="hideTip(event, 'fs18', 53)" onmouseover="showTip(event, 'fs18', 53)" class="i">n</span> <span onmouseout="hideTip(event, 'fs24', 54)" onmouseover="showTip(event, 'fs24', 54)" class="i">col</span>            <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">Split</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs20', 55)" onmouseover="showTip(event, 'fs20', 55)" class="t">int</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">s</span> <span class="o">*</span> <span class="o">^</span><span class="i">s</span>) <span onmouseout="hideTip(event, 'fs24', 56)" onmouseover="showTip(event, 'fs24', 56)" class="i">col</span>,<span onmouseout="hideTip(event, 'fs18', 57)" onmouseover="showTip(event, 'fs18', 57)" class="i">n</span>)

<span class="c">///Gets the first element of the data structure</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs25', 58)" onmouseover="showTip(event, 'fs25', 58)" class="f">first</span> <span onmouseout="hideTip(event, 'fs26', 59)" onmouseover="showTip(event, 'fs26', 59)" class="i">col</span>              <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">First</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>) <span onmouseout="hideTip(event, 'fs26', 60)" onmouseover="showTip(event, 'fs26', 60)" class="i">col</span>)
<span class="c">///Gets the last element of the data structure</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs27', 61)" onmouseover="showTip(event, 'fs27', 61)" class="f">last</span> <span onmouseout="hideTip(event, 'fs28', 62)" onmouseover="showTip(event, 'fs28', 62)" class="i">col</span>               <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">Last</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>) <span onmouseout="hideTip(event, 'fs28', 63)" onmouseover="showTip(event, 'fs28', 63)" class="i">col</span>)
<span class="c">///Gets the element with the specified index from the data structure</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs29', 64)" onmouseover="showTip(event, 'fs29', 64)" class="f">get</span> <span onmouseout="hideTip(event, 'fs30', 65)" onmouseover="showTip(event, 'fs30', 65)" class="i">i</span> <span onmouseout="hideTip(event, 'fs31', 66)" onmouseover="showTip(event, 'fs31', 66)" class="i">col</span>              <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">Item</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs20', 67)" onmouseover="showTip(event, 'fs20', 67)" class="t">int</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">a</span>) <span onmouseout="hideTip(event, 'fs31', 68)" onmouseover="showTip(event, 'fs31', 68)" class="i">col</span>,<span onmouseout="hideTip(event, 'fs30', 69)" onmouseover="showTip(event, 'fs30', 69)" class="i">i</span>)
<span class="c">///Sets the element with the specified index from the data structure</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs32', 70)" onmouseover="showTip(event, 'fs32', 70)" class="f">set</span> <span onmouseout="hideTip(event, 'fs33', 71)" onmouseover="showTip(event, 'fs33', 71)" class="i">i</span> <span onmouseout="hideTip(event, 'fs34', 72)" onmouseover="showTip(event, 'fs34', 72)" class="i">v</span> <span onmouseout="hideTip(event, 'fs35', 73)" onmouseover="showTip(event, 'fs35', 73)" class="i">col</span>            <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span onmouseout="hideTip(event, 'fs36', 74)" onmouseover="showTip(event, 'fs36', 74)" class="i">Set</span> <span class="o">:</span> <span class="o">^</span><span class="i">k</span> <span class="o">*</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">s</span>) <span onmouseout="hideTip(event, 'fs35', 75)" onmouseover="showTip(event, 'fs35', 75)" class="i">col</span>,<span onmouseout="hideTip(event, 'fs33', 76)" onmouseover="showTip(event, 'fs33', 76)" class="i">i</span>,<span onmouseout="hideTip(event, 'fs34', 77)" onmouseover="showTip(event, 'fs34', 77)" class="i">v</span>)
<span class="c">///Removes the first element from the data structure.</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs37', 78)" onmouseover="showTip(event, 'fs37', 78)" class="f">dropf</span> <span onmouseout="hideTip(event, 'fs38', 79)" onmouseover="showTip(event, 'fs38', 79)" class="i">col</span>              <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">DropFirst</span> <span class="o">:</span> <span class="o">^</span><span class="i">s</span>) <span onmouseout="hideTip(event, 'fs38', 80)" onmouseover="showTip(event, 'fs38', 80)" class="i">col</span>)
<span class="c">///Removes the last element from the data structure.</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs39', 81)" onmouseover="showTip(event, 'fs39', 81)" class="f">dropl</span> <span onmouseout="hideTip(event, 'fs40', 82)" onmouseover="showTip(event, 'fs40', 82)" class="i">col</span>              <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">DropLast</span> <span class="o">:</span> <span class="o">^</span><span class="i">s</span>) <span onmouseout="hideTip(event, 'fs40', 83)" onmouseover="showTip(event, 'fs40', 83)" class="i">col</span>)

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs41', 84)" onmouseover="showTip(event, 'fs41', 84)" class="f">fromSeq</span> (<span onmouseout="hideTip(event, 'fs42', 85)" onmouseover="showTip(event, 'fs42', 85)" class="i">sq</span> <span class="o">:</span> #<span onmouseout="hideTip(event, 'fs15', 86)" onmouseover="showTip(event, 'fs15', 86)" class="t">seq</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">static</span> <span class="k">member</span> <span class="i">FromSeq</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs15', 87)" onmouseover="showTip(event, 'fs15', 87)" class="t">seq</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">s</span>) <span onmouseout="hideTip(event, 'fs42', 88)" onmouseover="showTip(event, 'fs42', 88)" class="i">sq</span>)
<span class="c">///Reverses the data structure.</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs43', 89)" onmouseover="showTip(event, 'fs43', 89)" class="f">reverse</span> <span onmouseout="hideTip(event, 'fs44', 90)" onmouseover="showTip(event, 'fs44', 90)" class="i">col</span>            <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">Reverse</span> <span class="o">:</span> <span class="o">^</span><span class="i">s</span>) <span onmouseout="hideTip(event, 'fs44', 91)" onmouseover="showTip(event, 'fs44', 91)" class="i">col</span>)
<span class="c">///Gets the length of the data structure.</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs45', 92)" onmouseover="showTip(event, 'fs45', 92)" class="f">length</span> <span onmouseout="hideTip(event, 'fs46', 93)" onmouseover="showTip(event, 'fs46', 93)" class="i">col</span>             <span class="o">=</span> (<span class="o">^</span><span class="i">s</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">Length</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs20', 94)" onmouseover="showTip(event, 'fs20', 94)" class="t">int</span>) <span onmouseout="hideTip(event, 'fs46', 95)" onmouseover="showTip(event, 'fs46', 95)" class="i">col</span>)
<span class="c">//++ Derived Operators</span>
<span class="c">// These operators use the above operators to apply functions on data structure, filter, etc.</span>

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs47', 96)" onmouseover="showTip(event, 'fs47', 96)" class="f">splice</span> <span onmouseout="hideTip(event, 'fs48', 97)" onmouseover="showTip(event, 'fs48', 97)" class="i">index</span> <span onmouseout="hideTip(event, 'fs49', 98)" onmouseover="showTip(event, 'fs49', 98)" class="i">inner</span> <span onmouseout="hideTip(event, 'fs50', 99)" onmouseover="showTip(event, 'fs50', 99)" class="i">outer</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 100)" onmouseover="showTip(event, 'fs51', 100)" class="i">part1</span>,<span onmouseout="hideTip(event, 'fs52', 101)" onmouseover="showTip(event, 'fs52', 101)" class="i">part2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs50', 102)" onmouseover="showTip(event, 'fs50', 102)" class="i">outer</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 103)" onmouseover="showTip(event, 'fs23', 103)" class="f">split</span> <span onmouseout="hideTip(event, 'fs48', 104)" onmouseover="showTip(event, 'fs48', 104)" class="i">index</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 105)" onmouseover="showTip(event, 'fs51', 105)" class="i">part1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 106)" onmouseover="showTip(event, 'fs51', 106)" class="i">part1</span> <span class="o">&lt;+&gt;</span> <span onmouseout="hideTip(event, 'fs49', 107)" onmouseover="showTip(event, 'fs49', 107)" class="i">inner</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 108)" onmouseover="showTip(event, 'fs53', 108)" class="i">closed</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 109)" onmouseover="showTip(event, 'fs51', 109)" class="i">part1</span> <span class="o">&lt;+&gt;</span> <span onmouseout="hideTip(event, 'fs52', 110)" onmouseover="showTip(event, 'fs52', 110)" class="i">part2</span>
    <span onmouseout="hideTip(event, 'fs53', 111)" onmouseover="showTip(event, 'fs53', 111)" class="i">closed</span>

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs54', 112)" onmouseover="showTip(event, 'fs54', 112)" class="f">droplMany</span> <span onmouseout="hideTip(event, 'fs18', 113)" onmouseover="showTip(event, 'fs18', 113)" class="i">n</span> <span onmouseout="hideTip(event, 'fs55', 114)" onmouseover="showTip(event, 'fs55', 114)" class="i">target</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 115)" onmouseover="showTip(event, 'fs56', 115)" class="i">len</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 116)" onmouseover="showTip(event, 'fs55', 116)" class="i">target</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs45', 117)" onmouseover="showTip(event, 'fs45', 117)" class="f">length</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 118)" onmouseover="showTip(event, 'fs57', 118)" class="i">first</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 119)" onmouseover="showTip(event, 'fs55', 119)" class="i">target</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs17', 120)" onmouseover="showTip(event, 'fs17', 120)" class="f">takef</span> (<span onmouseout="hideTip(event, 'fs56', 121)" onmouseover="showTip(event, 'fs56', 121)" class="i">len</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs18', 122)" onmouseover="showTip(event, 'fs18', 122)" class="i">n</span>)
    <span onmouseout="hideTip(event, 'fs57', 123)" onmouseover="showTip(event, 'fs57', 123)" class="i">first</span>

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs58', 124)" onmouseover="showTip(event, 'fs58', 124)" class="f">dropfMany</span> <span onmouseout="hideTip(event, 'fs18', 125)" onmouseover="showTip(event, 'fs18', 125)" class="i">n</span> <span onmouseout="hideTip(event, 'fs59', 126)" onmouseover="showTip(event, 'fs59', 126)" class="i">target</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 127)" onmouseover="showTip(event, 'fs56', 127)" class="i">len</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs59', 128)" onmouseover="showTip(event, 'fs59', 128)" class="i">target</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs45', 129)" onmouseover="showTip(event, 'fs45', 129)" class="f">length</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 130)" onmouseover="showTip(event, 'fs60', 130)" class="i">last</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs59', 131)" onmouseover="showTip(event, 'fs59', 131)" class="i">target</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs21', 132)" onmouseover="showTip(event, 'fs21', 132)" class="f">takel</span> (<span onmouseout="hideTip(event, 'fs56', 133)" onmouseover="showTip(event, 'fs56', 133)" class="i">len</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs18', 134)" onmouseover="showTip(event, 'fs18', 134)" class="i">n</span>)
    <span onmouseout="hideTip(event, 'fs60', 135)" onmouseover="showTip(event, 'fs60', 135)" class="i">last</span>

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs61', 136)" onmouseover="showTip(event, 'fs61', 136)" class="f">insertManyAt</span> <span onmouseout="hideTip(event, 'fs48', 137)" onmouseover="showTip(event, 'fs48', 137)" class="i">index</span> (<span onmouseout="hideTip(event, 'fs62', 138)" onmouseover="showTip(event, 'fs62', 138)" class="i">sq</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs15', 139)" onmouseover="showTip(event, 'fs15', 139)" class="t">seq</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs63', 140)" onmouseover="showTip(event, 'fs63', 140)" class="i">target</span> <span class="o">:</span> <span class="o">^</span><span class="i">s</span>) <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs64', 141)" onmouseover="showTip(event, 'fs64', 141)" class="i">ins</span>  <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs62', 142)" onmouseover="showTip(event, 'fs62', 142)" class="i">sq</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 143)" onmouseover="showTip(event, 'fs41', 143)" class="f">fromSeq</span>)
    <span onmouseout="hideTip(event, 'fs63', 144)" onmouseover="showTip(event, 'fs63', 144)" class="i">target</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs47', 145)" onmouseover="showTip(event, 'fs47', 145)" class="f">splice</span> <span onmouseout="hideTip(event, 'fs48', 146)" onmouseover="showTip(event, 'fs48', 146)" class="i">index</span> <span onmouseout="hideTip(event, 'fs64', 147)" onmouseover="showTip(event, 'fs64', 147)" class="i">ins</span>

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs65', 148)" onmouseover="showTip(event, 'fs65', 148)" class="f">removeAt</span> <span onmouseout="hideTip(event, 'fs48', 149)" onmouseover="showTip(event, 'fs48', 149)" class="i">index</span> <span onmouseout="hideTip(event, 'fs66', 150)" onmouseover="showTip(event, 'fs66', 150)" class="i">target</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs67', 151)" onmouseover="showTip(event, 'fs67', 151)" class="i">part1</span>,<span onmouseout="hideTip(event, 'fs68', 152)" onmouseover="showTip(event, 'fs68', 152)" class="i">part2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs66', 153)" onmouseover="showTip(event, 'fs66', 153)" class="i">target</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 154)" onmouseover="showTip(event, 'fs23', 154)" class="f">split</span> <span onmouseout="hideTip(event, 'fs48', 155)" onmouseover="showTip(event, 'fs48', 155)" class="i">index</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs67', 156)" onmouseover="showTip(event, 'fs67', 156)" class="i">part1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs67', 157)" onmouseover="showTip(event, 'fs67', 157)" class="i">part1</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs39', 158)" onmouseover="showTip(event, 'fs39', 158)" class="f">dropl</span>
    <span onmouseout="hideTip(event, 'fs67', 159)" onmouseover="showTip(event, 'fs67', 159)" class="i">part1</span> <span class="o">&lt;+&gt;</span> <span onmouseout="hideTip(event, 'fs68', 160)" onmouseover="showTip(event, 'fs68', 160)" class="i">part2</span>

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs69', 161)" onmouseover="showTip(event, 'fs69', 161)" class="f">removeManyAt</span> <span onmouseout="hideTip(event, 'fs48', 162)" onmouseover="showTip(event, 'fs48', 162)" class="i">index</span> <span onmouseout="hideTip(event, 'fs70', 163)" onmouseover="showTip(event, 'fs70', 163)" class="i">count</span> <span onmouseout="hideTip(event, 'fs71', 164)" onmouseover="showTip(event, 'fs71', 164)" class="i">target</span><span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs72', 165)" onmouseover="showTip(event, 'fs72', 165)" class="i">part1</span>,<span onmouseout="hideTip(event, 'fs73', 166)" onmouseover="showTip(event, 'fs73', 166)" class="i">part2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs71', 167)" onmouseover="showTip(event, 'fs71', 167)" class="i">target</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 168)" onmouseover="showTip(event, 'fs23', 168)" class="f">split</span> <span onmouseout="hideTip(event, 'fs48', 169)" onmouseover="showTip(event, 'fs48', 169)" class="i">index</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs72', 170)" onmouseover="showTip(event, 'fs72', 170)" class="i">part1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs72', 171)" onmouseover="showTip(event, 'fs72', 171)" class="i">part1</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs54', 172)" onmouseover="showTip(event, 'fs54', 172)" class="f">droplMany</span> <span onmouseout="hideTip(event, 'fs70', 173)" onmouseover="showTip(event, 'fs70', 173)" class="i">count</span>
    <span onmouseout="hideTip(event, 'fs72', 174)" onmouseover="showTip(event, 'fs72', 174)" class="i">part1</span> <span class="o">&lt;+&gt;</span> <span onmouseout="hideTip(event, 'fs73', 175)" onmouseover="showTip(event, 'fs73', 175)" class="i">part2</span>

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs74', 176)" onmouseover="showTip(event, 'fs74', 176)" class="f">insertAt</span> <span onmouseout="hideTip(event, 'fs48', 177)" onmouseover="showTip(event, 'fs48', 177)" class="i">index</span> <span onmouseout="hideTip(event, 'fs8', 178)" onmouseover="showTip(event, 'fs8', 178)" class="i">item</span> <span onmouseout="hideTip(event, 'fs75', 179)" onmouseover="showTip(event, 'fs75', 179)" class="i">target</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs76', 180)" onmouseover="showTip(event, 'fs76', 180)" class="i">part1</span>,<span onmouseout="hideTip(event, 'fs77', 181)" onmouseover="showTip(event, 'fs77', 181)" class="i">part2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs75', 182)" onmouseover="showTip(event, 'fs75', 182)" class="i">target</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 183)" onmouseover="showTip(event, 'fs23', 183)" class="f">split</span> <span onmouseout="hideTip(event, 'fs48', 184)" onmouseover="showTip(event, 'fs48', 184)" class="i">index</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs76', 185)" onmouseover="showTip(event, 'fs76', 185)" class="i">part1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs76', 186)" onmouseover="showTip(event, 'fs76', 186)" class="i">part1</span> <span class="o">&lt;+</span> <span onmouseout="hideTip(event, 'fs8', 187)" onmouseover="showTip(event, 'fs8', 187)" class="i">item</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs78', 188)" onmouseover="showTip(event, 'fs78', 188)" class="i">closed</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs76', 189)" onmouseover="showTip(event, 'fs76', 189)" class="i">part1</span> <span class="o">&lt;+&gt;</span> <span onmouseout="hideTip(event, 'fs77', 190)" onmouseover="showTip(event, 'fs77', 190)" class="i">part2</span>
    <span onmouseout="hideTip(event, 'fs78', 191)" onmouseover="showTip(event, 'fs78', 191)" class="i">closed</span>

<span class="c">///Applies the specified transformation on the data structure.</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs79', 192)" onmouseover="showTip(event, 'fs79', 192)" class="f">map</span> (<span onmouseout="hideTip(event, 'fs80', 193)" onmouseover="showTip(event, 'fs80', 193)" class="f">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">b</span>) <span onmouseout="hideTip(event, 'fs81', 194)" onmouseover="showTip(event, 'fs81', 194)" class="i">col</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs82', 195)" onmouseover="showTip(event, 'fs82', 195)" class="v">refRoot</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs83', 196)" onmouseover="showTip(event, 'fs83', 196)" class="f">ref</span> (<span onmouseout="hideTip(event, 'fs7', 197)" onmouseover="showTip(event, 'fs7', 197)" class="f">empty</span>() <span class="o">:</span> <span class="o">&#39;</span><span class="i">b</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs84', 198)" onmouseover="showTip(event, 'fs84', 198)" class="f">mapIter</span> <span onmouseout="hideTip(event, 'fs85', 199)" onmouseover="showTip(event, 'fs85', 199)" class="i">x</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs86', 200)" onmouseover="showTip(event, 'fs86', 200)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs85', 201)" onmouseover="showTip(event, 'fs85', 201)" class="i">x</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs80', 202)" onmouseover="showTip(event, 'fs80', 202)" class="f">f</span>
        <span onmouseout="hideTip(event, 'fs82', 203)" onmouseover="showTip(event, 'fs82', 203)" class="v">refRoot</span> <span class="o">:=</span> (<span class="o">!</span><span onmouseout="hideTip(event, 'fs82', 204)" onmouseover="showTip(event, 'fs82', 204)" class="v">refRoot</span> <span class="o">&lt;+</span> <span onmouseout="hideTip(event, 'fs86', 205)" onmouseover="showTip(event, 'fs86', 205)" class="i">x</span>)
    <span onmouseout="hideTip(event, 'fs81', 206)" onmouseover="showTip(event, 'fs81', 206)" class="i">col</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 207)" onmouseover="showTip(event, 'fs1', 207)" class="f">iter</span> <span onmouseout="hideTip(event, 'fs84', 208)" onmouseover="showTip(event, 'fs84', 208)" class="f">mapIter</span>
    <span class="o">!</span><span onmouseout="hideTip(event, 'fs82', 209)" onmouseover="showTip(event, 'fs82', 209)" class="v">refRoot</span>

<span class="c">///Filters the data structure using the specified predicate.</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs87', 210)" onmouseover="showTip(event, 'fs87', 210)" class="f">filter</span> (<span onmouseout="hideTip(event, 'fs88', 211)" onmouseover="showTip(event, 'fs88', 211)" class="f">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs89', 212)" onmouseover="showTip(event, 'fs89', 212)" class="t">bool</span>) (<span onmouseout="hideTip(event, 'fs90', 213)" onmouseover="showTip(event, 'fs90', 213)" class="i">col</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">s</span>) <span class="o">:</span> <span class="o">&#39;</span><span class="i">s</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs91', 214)" onmouseover="showTip(event, 'fs91', 214)" class="v">refRoot</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs83', 215)" onmouseover="showTip(event, 'fs83', 215)" class="f">ref</span> (<span onmouseout="hideTip(event, 'fs7', 216)" onmouseover="showTip(event, 'fs7', 216)" class="f">empty</span>() <span class="o">:</span> <span class="o">^</span><span class="i">s</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs92', 217)" onmouseover="showTip(event, 'fs92', 217)" class="f">filterIter</span> (<span onmouseout="hideTip(event, 'fs85', 218)" onmouseover="showTip(event, 'fs85', 218)" class="i">x</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>) <span class="o">=</span> 
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs88', 219)" onmouseover="showTip(event, 'fs88', 219)" class="f">f</span> <span onmouseout="hideTip(event, 'fs85', 220)" onmouseover="showTip(event, 'fs85', 220)" class="i">x</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs91', 221)" onmouseover="showTip(event, 'fs91', 221)" class="v">refRoot</span> <span class="o">:=</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs91', 222)" onmouseover="showTip(event, 'fs91', 222)" class="v">refRoot</span> <span class="o">&lt;+</span> <span onmouseout="hideTip(event, 'fs85', 223)" onmouseover="showTip(event, 'fs85', 223)" class="i">x</span> 
    <span onmouseout="hideTip(event, 'fs90', 224)" onmouseover="showTip(event, 'fs90', 224)" class="i">col</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 225)" onmouseover="showTip(event, 'fs1', 225)" class="f">iter</span> <span onmouseout="hideTip(event, 'fs92', 226)" onmouseover="showTip(event, 'fs92', 226)" class="f">filterIter</span>
    <span class="o">!</span><span onmouseout="hideTip(event, 'fs91', 227)" onmouseover="showTip(event, 'fs91', 227)" class="v">refRoot</span>

<span class="c">///Applies a a function on the data structure, keeping all elements which return Some, and dropping all those that return None.</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs93', 228)" onmouseover="showTip(event, 'fs93', 228)" class="f">choose</span> (<span onmouseout="hideTip(event, 'fs94', 229)" onmouseover="showTip(event, 'fs94', 229)" class="f">f</span> <span class="o">:</span> _ <span class="k">-&gt;</span> _ <span onmouseout="hideTip(event, 'fs95', 230)" onmouseover="showTip(event, 'fs95', 230)" class="t">option</span>) <span onmouseout="hideTip(event, 'fs96', 231)" onmouseover="showTip(event, 'fs96', 231)" class="i">col</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs97', 232)" onmouseover="showTip(event, 'fs97', 232)" class="v">refRoot</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs83', 233)" onmouseover="showTip(event, 'fs83', 233)" class="f">ref</span> (<span onmouseout="hideTip(event, 'fs7', 234)" onmouseover="showTip(event, 'fs7', 234)" class="f">empty</span>() <span class="o">:</span> <span class="o">&#39;</span><span class="i">b</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs98', 235)" onmouseover="showTip(event, 'fs98', 235)" class="f">chooseIter</span> <span onmouseout="hideTip(event, 'fs85', 236)" onmouseover="showTip(event, 'fs85', 236)" class="i">x</span> <span class="o">=</span> 
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs94', 237)" onmouseover="showTip(event, 'fs94', 237)" class="f">f</span> <span onmouseout="hideTip(event, 'fs85', 238)" onmouseover="showTip(event, 'fs85', 238)" class="i">x</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs99', 239)" onmouseover="showTip(event, 'fs99', 239)" class="p">None</span> <span class="k">-&gt;</span> ()
        | <span onmouseout="hideTip(event, 'fs100', 240)" onmouseover="showTip(event, 'fs100', 240)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs101', 241)" onmouseover="showTip(event, 'fs101', 241)" class="i">y</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs97', 242)" onmouseover="showTip(event, 'fs97', 242)" class="v">refRoot</span> <span class="o">:=</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs97', 243)" onmouseover="showTip(event, 'fs97', 243)" class="v">refRoot</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs101', 244)" onmouseover="showTip(event, 'fs101', 244)" class="i">y</span>
    <span onmouseout="hideTip(event, 'fs96', 245)" onmouseover="showTip(event, 'fs96', 245)" class="i">col</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 246)" onmouseover="showTip(event, 'fs1', 246)" class="f">iter</span> <span onmouseout="hideTip(event, 'fs98', 247)" onmouseover="showTip(event, 'fs98', 247)" class="f">chooseIter</span>
    <span class="o">!</span><span onmouseout="hideTip(event, 'fs97', 248)" onmouseover="showTip(event, 'fs97', 248)" class="v">refRoot</span>

<span class="c">///Constructs a linked list from the elements of this data structure</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs102', 249)" onmouseover="showTip(event, 'fs102', 249)" class="f">toList</span> <span onmouseout="hideTip(event, 'fs81', 250)" onmouseover="showTip(event, 'fs81', 250)" class="i">col</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs103', 251)" onmouseover="showTip(event, 'fs103', 251)" class="v">refList</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs83', 252)" onmouseover="showTip(event, 'fs83', 252)" class="f">ref</span> []
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs104', 253)" onmouseover="showTip(event, 'fs104', 253)" class="f">listIter</span> <span onmouseout="hideTip(event, 'fs105', 254)" onmouseover="showTip(event, 'fs105', 254)" class="i">x</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs103', 255)" onmouseover="showTip(event, 'fs103', 255)" class="v">refList</span> <span class="o">:=</span> <span onmouseout="hideTip(event, 'fs105', 256)" onmouseover="showTip(event, 'fs105', 256)" class="i">x</span> <span class="o">::</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs103', 257)" onmouseover="showTip(event, 'fs103', 257)" class="v">refList</span>
    <span onmouseout="hideTip(event, 'fs81', 258)" onmouseover="showTip(event, 'fs81', 258)" class="i">col</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 259)" onmouseover="showTip(event, 'fs1', 259)" class="f">iter</span> <span onmouseout="hideTip(event, 'fs104', 260)" onmouseover="showTip(event, 'fs104', 260)" class="f">listIter</span>
    <span class="o">!</span><span onmouseout="hideTip(event, 'fs103', 261)" onmouseover="showTip(event, 'fs103', 261)" class="v">refList</span>

<span class="c">///Folds over the data structure using the specified function.</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs106', 262)" onmouseover="showTip(event, 'fs106', 262)" class="f">fold</span> (<span onmouseout="hideTip(event, 'fs107', 263)" onmouseover="showTip(event, 'fs107', 263)" class="f">foldr</span> <span class="o">:</span> _<span class="k">-&gt;</span> _ <span class="k">-&gt;</span> _) (<span onmouseout="hideTip(event, 'fs108', 264)" onmouseover="showTip(event, 'fs108', 264)" class="i">start</span> <span class="o">:</span> _) <span onmouseout="hideTip(event, 'fs96', 265)" onmouseover="showTip(event, 'fs96', 265)" class="i">col</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs109', 266)" onmouseover="showTip(event, 'fs109', 266)" class="v">refState</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs83', 267)" onmouseover="showTip(event, 'fs83', 267)" class="f">ref</span> <span onmouseout="hideTip(event, 'fs108', 268)" onmouseover="showTip(event, 'fs108', 268)" class="i">start</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs110', 269)" onmouseover="showTip(event, 'fs110', 269)" class="f">foldIter</span> <span onmouseout="hideTip(event, 'fs105', 270)" onmouseover="showTip(event, 'fs105', 270)" class="i">x</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs109', 271)" onmouseover="showTip(event, 'fs109', 271)" class="v">refState</span> <span class="o">:=</span> <span onmouseout="hideTip(event, 'fs107', 272)" onmouseover="showTip(event, 'fs107', 272)" class="f">foldr</span> (<span onmouseout="hideTip(event, 'fs109', 273)" onmouseover="showTip(event, 'fs109', 273)" class="v">refState</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs111', 274)" onmouseover="showTip(event, 'fs111', 274)" class="i">Value</span>) <span onmouseout="hideTip(event, 'fs105', 275)" onmouseover="showTip(event, 'fs105', 275)" class="i">x</span>
    <span onmouseout="hideTip(event, 'fs96', 276)" onmouseover="showTip(event, 'fs96', 276)" class="i">col</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 277)" onmouseover="showTip(event, 'fs1', 277)" class="f">iter</span> <span onmouseout="hideTip(event, 'fs110', 278)" onmouseover="showTip(event, 'fs110', 278)" class="f">foldIter</span>
    <span class="o">!</span><span onmouseout="hideTip(event, 'fs109', 279)" onmouseover="showTip(event, 'fs109', 279)" class="v">refState</span>

<span class="c">///Folds over the data structure backwards, using the specified function.</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs112', 280)" onmouseover="showTip(event, 'fs112', 280)" class="f">foldBack</span> (<span onmouseout="hideTip(event, 'fs107', 281)" onmouseover="showTip(event, 'fs107', 281)" class="f">foldr</span> <span class="o">:</span>_ <span class="k">-&gt;</span> _ <span class="k">-&gt;</span> _) (<span onmouseout="hideTip(event, 'fs108', 282)" onmouseover="showTip(event, 'fs108', 282)" class="i">start</span> <span class="o">:</span>_) <span onmouseout="hideTip(event, 'fs113', 283)" onmouseover="showTip(event, 'fs113', 283)" class="i">col</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs109', 284)" onmouseover="showTip(event, 'fs109', 284)" class="v">refState</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs83', 285)" onmouseover="showTip(event, 'fs83', 285)" class="f">ref</span> <span onmouseout="hideTip(event, 'fs108', 286)" onmouseover="showTip(event, 'fs108', 286)" class="i">start</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs114', 287)" onmouseover="showTip(event, 'fs114', 287)" class="f">foldbIter</span> <span onmouseout="hideTip(event, 'fs105', 288)" onmouseover="showTip(event, 'fs105', 288)" class="i">x</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs109', 289)" onmouseover="showTip(event, 'fs109', 289)" class="v">refState</span> <span class="o">:=</span> <span onmouseout="hideTip(event, 'fs107', 290)" onmouseover="showTip(event, 'fs107', 290)" class="f">foldr</span> (<span onmouseout="hideTip(event, 'fs109', 291)" onmouseover="showTip(event, 'fs109', 291)" class="v">refState</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs111', 292)" onmouseover="showTip(event, 'fs111', 292)" class="i">Value</span>) <span onmouseout="hideTip(event, 'fs105', 293)" onmouseover="showTip(event, 'fs105', 293)" class="i">x</span> 
    <span onmouseout="hideTip(event, 'fs113', 294)" onmouseover="showTip(event, 'fs113', 294)" class="i">col</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs5', 295)" onmouseover="showTip(event, 'fs5', 295)" class="f">iterBack</span> <span onmouseout="hideTip(event, 'fs114', 296)" onmouseover="showTip(event, 'fs114', 296)" class="f">foldbIter</span>
    <span class="o">!</span><span onmouseout="hideTip(event, 'fs109', 297)" onmouseover="showTip(event, 'fs109', 297)" class="v">refState</span>

<span class="c">///Returns true if the specified predicate is true for all items in the data structure.</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs115', 298)" onmouseover="showTip(event, 'fs115', 298)" class="f">forall</span> (<span onmouseout="hideTip(event, 'fs116', 299)" onmouseover="showTip(event, 'fs116', 299)" class="f">pred</span> <span class="o">:</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs89', 300)" onmouseover="showTip(event, 'fs89', 300)" class="t">bool</span>) <span onmouseout="hideTip(event, 'fs117', 301)" onmouseover="showTip(event, 'fs117', 301)" class="i">col</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs117', 302)" onmouseover="showTip(event, 'fs117', 302)" class="i">col</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs106', 303)" onmouseover="showTip(event, 'fs106', 303)" class="f">fold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs118', 304)" onmouseover="showTip(event, 'fs118', 304)" class="i">cur</span> <span onmouseout="hideTip(event, 'fs8', 305)" onmouseover="showTip(event, 'fs8', 305)" class="i">item</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs118', 306)" onmouseover="showTip(event, 'fs118', 306)" class="i">cur</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs116', 307)" onmouseover="showTip(event, 'fs116', 307)" class="f">pred</span>(<span onmouseout="hideTip(event, 'fs8', 308)" onmouseover="showTip(event, 'fs8', 308)" class="i">item</span>)) <span class="k">true</span>

<span class="c">///Returns true if the specified predicate is true for any item in the data structure.</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs119', 309)" onmouseover="showTip(event, 'fs119', 309)" class="f">forany</span> (<span onmouseout="hideTip(event, 'fs116', 310)" onmouseover="showTip(event, 'fs116', 310)" class="f">pred</span> <span class="o">:</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs89', 311)" onmouseover="showTip(event, 'fs89', 311)" class="t">bool</span>) <span onmouseout="hideTip(event, 'fs117', 312)" onmouseover="showTip(event, 'fs117', 312)" class="i">col</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs117', 313)" onmouseover="showTip(event, 'fs117', 313)" class="i">col</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs106', 314)" onmouseover="showTip(event, 'fs106', 314)" class="f">fold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs118', 315)" onmouseover="showTip(event, 'fs118', 315)" class="i">cur</span> <span onmouseout="hideTip(event, 'fs8', 316)" onmouseover="showTip(event, 'fs8', 316)" class="i">item</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs118', 317)" onmouseover="showTip(event, 'fs118', 317)" class="i">cur</span> <span class="o">||</span> <span onmouseout="hideTip(event, 'fs116', 318)" onmouseover="showTip(event, 'fs116', 318)" class="f">pred</span>(<span onmouseout="hideTip(event, 'fs8', 319)" onmouseover="showTip(event, 'fs8', 319)" class="i">item</span>)) <span class="k">false</span>

<span class="c">///Counts the number of items for which the specified predicate is true.</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs120', 320)" onmouseover="showTip(event, 'fs120', 320)" class="f">count</span> (<span onmouseout="hideTip(event, 'fs116', 321)" onmouseover="showTip(event, 'fs116', 321)" class="f">pred</span> <span class="o">:</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs89', 322)" onmouseover="showTip(event, 'fs89', 322)" class="t">bool</span>) <span onmouseout="hideTip(event, 'fs117', 323)" onmouseover="showTip(event, 'fs117', 323)" class="i">col</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs117', 324)" onmouseover="showTip(event, 'fs117', 324)" class="i">col</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs106', 325)" onmouseover="showTip(event, 'fs106', 325)" class="f">fold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs121', 326)" onmouseover="showTip(event, 'fs121', 326)" class="i">cur</span> <span onmouseout="hideTip(event, 'fs8', 327)" onmouseover="showTip(event, 'fs8', 327)" class="i">item</span> <span class="k">-&gt;</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs116', 328)" onmouseover="showTip(event, 'fs116', 328)" class="f">pred</span>(<span onmouseout="hideTip(event, 'fs8', 329)" onmouseover="showTip(event, 'fs8', 329)" class="i">item</span>) <span class="k">then</span> <span onmouseout="hideTip(event, 'fs121', 330)" onmouseover="showTip(event, 'fs121', 330)" class="i">cur</span> <span class="o">+</span> <span class="n">1</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs121', 331)" onmouseover="showTip(event, 'fs121', 331)" class="i">cur</span>) <span class="n">0</span>

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs122', 332)" onmouseover="showTip(event, 'fs122', 332)" class="f">toArray</span> <span onmouseout="hideTip(event, 'fs123', 333)" onmouseover="showTip(event, 'fs123', 333)" class="i">col</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs124', 334)" onmouseover="showTip(event, 'fs124', 334)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs123', 335)" onmouseover="showTip(event, 'fs123', 335)" class="i">col</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs45', 336)" onmouseover="showTip(event, 'fs45', 336)" class="f">length</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs125', 337)" onmouseover="showTip(event, 'fs125', 337)" class="i">arr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs126', 338)" onmouseover="showTip(event, 'fs126', 338)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs127', 339)" onmouseover="showTip(event, 'fs127', 339)" class="f">zeroCreate</span> <span onmouseout="hideTip(event, 'fs124', 340)" onmouseover="showTip(event, 'fs124', 340)" class="i">l</span>
    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs30', 341)" onmouseover="showTip(event, 'fs30', 341)" class="i">i</span>,<span onmouseout="hideTip(event, 'fs128', 342)" onmouseover="showTip(event, 'fs128', 342)" class="i">item</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs129', 343)" onmouseover="showTip(event, 'fs129', 343)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs130', 344)" onmouseover="showTip(event, 'fs130', 344)" class="f">zip</span> {<span class="n">0</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs124', 345)" onmouseover="showTip(event, 'fs124', 345)" class="i">l</span>} <span onmouseout="hideTip(event, 'fs123', 346)" onmouseover="showTip(event, 'fs123', 346)" class="i">col</span> <span class="k">do</span>
        <span onmouseout="hideTip(event, 'fs125', 347)" onmouseover="showTip(event, 'fs125', 347)" class="i">arr</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs30', 348)" onmouseover="showTip(event, 'fs30', 348)" class="i">i</span>] <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs128', 349)" onmouseover="showTip(event, 'fs128', 349)" class="i">item</span>
    <span onmouseout="hideTip(event, 'fs125', 350)" onmouseover="showTip(event, 'fs125', 350)" class="i">arr</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val iter : f:(&#39;a -&gt; unit) -&gt; x:&#39;s -&gt; unit (requires member Iter)<br /><br />Full name: Script.iter</div>
<div class="tip" id="fs2">val f : (&#39;a -&gt; unit)</div>
<div class="tip" id="fs3">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs4">val x : &#39;s (requires member Iter)</div>
<div class="tip" id="fs5">val iterBack : f:(&#39;a -&gt; unit) -&gt; x:&#39;s -&gt; unit (requires member IterBack)<br /><br />Full name: Script.iterBack</div>
<div class="tip" id="fs6">val x : &#39;s (requires member IterBack)</div>
<div class="tip" id="fs7">val empty : unit -&gt; &#39;s (requires member get_Empty)<br /><br />Full name: Script.empty</div>
<div class="tip" id="fs8">val item : &#39;a</div>
<div class="tip" id="fs9">val col : &#39;s (requires member AddFirst)</div>
<div class="tip" id="fs10">val col : &#39;s (requires member AddLast)</div>
<div class="tip" id="fs11">val col1 : &#39;s (requires member Concat)</div>
<div class="tip" id="fs12">val col2 : &#39;s (requires member Concat)</div>
<div class="tip" id="fs13">val items : #seq&lt;&#39;b&gt;</div>
<div class="tip" id="fs14">val col : &#39;s (requires member AddManyFirst and &#39;a :&gt; seq&lt;&#39;b&gt;)</div>
<div class="tip" id="fs15">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = System.Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs16">val col : &#39;s (requires member AddManyLast and &#39;a :&gt; seq&lt;&#39;b&gt;)</div>
<div class="tip" id="fs17">val takef : n:int -&gt; col:&#39;s -&gt; &#39;s (requires member TakeFirst)<br /><br />Full name: Script.takef<br /><em><br /><br />Returns the first elements of the data structure</em></div>
<div class="tip" id="fs18">val n : int</div>
<div class="tip" id="fs19">val col : &#39;s (requires member TakeFirst)</div>
<div class="tip" id="fs20">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs21">val takel : n:int -&gt; col:&#39;s -&gt; &#39;s (requires member TakeLast)<br /><br />Full name: Script.takel<br /><em><br /><br />Returns the last elements of the data structure</em></div>
<div class="tip" id="fs22">val col : &#39;s (requires member TakeLast)</div>
<div class="tip" id="fs23">val split : n:int -&gt; col:&#39;s -&gt; &#39;s * &#39;s (requires member Split)<br /><br />Full name: Script.split<br /><em><br /><br />Splits the data structure at the specified index.</em></div>
<div class="tip" id="fs24">val col : &#39;s (requires member Split)</div>
<div class="tip" id="fs25">val first : col:&#39;s -&gt; &#39;a (requires member get_First)<br /><br />Full name: Script.first<br /><em><br /><br />Gets the first element of the data structure</em></div>
<div class="tip" id="fs26">val col : &#39;s (requires member get_First)</div>
<div class="tip" id="fs27">val last : col:&#39;s -&gt; &#39;a (requires member get_Last)<br /><br />Full name: Script.last<br /><em><br /><br />Gets the last element of the data structure</em></div>
<div class="tip" id="fs28">val col : &#39;s (requires member get_Last)</div>
<div class="tip" id="fs29">val get : i:int -&gt; col:&#39;s -&gt; &#39;a (requires member Item)<br /><br />Full name: Script.get<br /><em><br /><br />Gets the element with the specified index from the data structure</em></div>
<div class="tip" id="fs30">val i : int</div>
<div class="tip" id="fs31">val col : &#39;s (requires member Item)</div>
<div class="tip" id="fs32">val set : i:&#39;k -&gt; v:&#39;a -&gt; col:&#39;s -&gt; &#39;s (requires member Set)<br /><br />Full name: Script.set<br /><em><br /><br />Sets the element with the specified index from the data structure</em></div>
<div class="tip" id="fs33">val i : &#39;k</div>
<div class="tip" id="fs34">val v : &#39;a</div>
<div class="tip" id="fs35">val col : &#39;s (requires member Set)</div>
<div class="tip" id="fs36">Multiple items<br />module Set<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Set&lt;&#39;T (requires comparison)&gt; =<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;interface ICollection&lt;&#39;T&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Add : value:&#39;T -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Contains : value:&#39;T -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member IsProperSubsetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;member IsProperSupersetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Set&lt;_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;</div>
<div class="tip" id="fs37">val dropf : col:&#39;s -&gt; &#39;s (requires member get_DropFirst)<br /><br />Full name: Script.dropf<br /><em><br /><br />Removes the first element from the data structure.</em></div>
<div class="tip" id="fs38">val col : &#39;s (requires member get_DropFirst)</div>
<div class="tip" id="fs39">val dropl : col:&#39;s -&gt; &#39;s (requires member get_DropLast)<br /><br />Full name: Script.dropl<br /><em><br /><br />Removes the last element from the data structure.</em></div>
<div class="tip" id="fs40">val col : &#39;s (requires member get_DropLast)</div>
<div class="tip" id="fs41">val fromSeq : sq:#seq&lt;&#39;a0&gt; -&gt; &#39;s (requires member FromSeq)<br /><br />Full name: Script.fromSeq</div>
<div class="tip" id="fs42">val sq : #seq&lt;&#39;a0&gt;</div>
<div class="tip" id="fs43">val reverse : col:&#39;s -&gt; &#39;s (requires member get_Reverse)<br /><br />Full name: Script.reverse<br /><em><br /><br />Reverses the data structure.</em></div>
<div class="tip" id="fs44">val col : &#39;s (requires member get_Reverse)</div>
<div class="tip" id="fs45">val length : col:&#39;s -&gt; int (requires member get_Length)<br /><br />Full name: Script.length<br /><em><br /><br />Gets the length of the data structure.</em></div>
<div class="tip" id="fs46">val col : &#39;s (requires member get_Length)</div>
<div class="tip" id="fs47">val splice : index:int -&gt; inner:&#39;a -&gt; outer:&#39;a -&gt; &#39;a (requires member Concat and member Split)<br /><br />Full name: Script.splice</div>
<div class="tip" id="fs48">val index : int</div>
<div class="tip" id="fs49">val inner : &#39;a (requires member Concat and member Split)</div>
<div class="tip" id="fs50">val outer : &#39;a (requires member Concat and member Split)</div>
<div class="tip" id="fs51">val part1 : &#39;a (requires member Concat and member Split)</div>
<div class="tip" id="fs52">val part2 : &#39;a (requires member Concat and member Split)</div>
<div class="tip" id="fs53">val closed : &#39;a (requires member Concat and member Split)</div>
<div class="tip" id="fs54">val droplMany : n:int -&gt; target:&#39;a -&gt; &#39;a (requires member TakeFirst and member get_Length)<br /><br />Full name: Script.droplMany</div>
<div class="tip" id="fs55">val target : &#39;a (requires member TakeFirst and member get_Length)</div>
<div class="tip" id="fs56">val len : int</div>
<div class="tip" id="fs57">val first : &#39;a (requires member TakeFirst and member get_Length)</div>
<div class="tip" id="fs58">val dropfMany : n:int -&gt; target:&#39;a -&gt; &#39;a (requires member TakeLast and member get_Length)<br /><br />Full name: Script.dropfMany</div>
<div class="tip" id="fs59">val target : &#39;a (requires member TakeLast and member get_Length)</div>
<div class="tip" id="fs60">val last : &#39;a (requires member TakeLast and member get_Length)</div>
<div class="tip" id="fs61">val insertManyAt : index:int -&gt; sq:seq&lt;&#39;a&gt; -&gt; target:&#39;s -&gt; &#39;s (requires member Concat and member Split and member FromSeq)<br /><br />Full name: Script.insertManyAt</div>
<div class="tip" id="fs62">val sq : seq&lt;&#39;a&gt;</div>
<div class="tip" id="fs63">val target : &#39;s (requires member Concat and member Split and member FromSeq)</div>
<div class="tip" id="fs64">val ins : &#39;s (requires member Concat and member Split and member FromSeq)</div>
<div class="tip" id="fs65">val removeAt : index:int -&gt; target:&#39;a -&gt; &#39;a (requires member get_DropLast and member Split and member Concat)<br /><br />Full name: Script.removeAt</div>
<div class="tip" id="fs66">val target : &#39;a (requires member get_DropLast and member Split and member Concat)</div>
<div class="tip" id="fs67">val part1 : &#39;a (requires member get_DropLast and member Split and member Concat)</div>
<div class="tip" id="fs68">val part2 : &#39;a (requires member get_DropLast and member Split and member Concat)</div>
<div class="tip" id="fs69">val removeManyAt : index:int -&gt; count:int -&gt; target:&#39;a -&gt; &#39;a (requires member TakeFirst and member get_Length and member Split and member Concat)<br /><br />Full name: Script.removeManyAt</div>
<div class="tip" id="fs70">val count : int</div>
<div class="tip" id="fs71">val target : &#39;a (requires member TakeFirst and member get_Length and member Split and member Concat)</div>
<div class="tip" id="fs72">val part1 : &#39;a (requires member TakeFirst and member get_Length and member Split and member Concat)</div>
<div class="tip" id="fs73">val part2 : &#39;a (requires member TakeFirst and member get_Length and member Split and member Concat)</div>
<div class="tip" id="fs74">val insertAt : index:int -&gt; item:&#39;a -&gt; target:&#39;b -&gt; &#39;b (requires member Split and member AddLast and member Concat)<br /><br />Full name: Script.insertAt</div>
<div class="tip" id="fs75">val target : &#39;b (requires member Split and member AddLast and member Concat)</div>
<div class="tip" id="fs76">val part1 : &#39;b (requires member Split and member AddLast and member Concat)</div>
<div class="tip" id="fs77">val part2 : &#39;b (requires member Split and member AddLast and member Concat)</div>
<div class="tip" id="fs78">val closed : &#39;b (requires member Split and member AddLast and member Concat)</div>
<div class="tip" id="fs79">val map : f:(&#39;a -&gt; &#39;b) -&gt; col:&#39;a0 -&gt; &#39;b (requires member get_Empty and member AddLast and member Iter)<br /><br />Full name: Script.map<br /><em><br /><br />Applies the specified transformation on the data structure.</em></div>
<div class="tip" id="fs80">val f : (&#39;a -&gt; &#39;b) (requires member get_Empty and member AddLast)</div>
<div class="tip" id="fs81">val col : &#39;a (requires member Iter)</div>
<div class="tip" id="fs82">val refRoot : &#39;b ref (requires member get_Empty and member AddLast)</div>
<div class="tip" id="fs83">Multiple items<br />val ref : value:&#39;T -&gt; &#39;T ref<br /><br />Full name: Microsoft.FSharp.Core.Operators.ref<br /><br />--------------------<br />type &#39;T ref = Ref&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.ref&lt;_&gt;</div>
<div class="tip" id="fs84">val mapIter : (&#39;a -&gt; unit)</div>
<div class="tip" id="fs85">val x : &#39;a</div>
<div class="tip" id="fs86">val x : &#39;b (requires member get_Empty and member AddLast)</div>
<div class="tip" id="fs87">val filter : f:(&#39;a -&gt; bool) -&gt; col:&#39;s -&gt; &#39;s (requires member get_Empty and member AddLast and member Iter)<br /><br />Full name: Script.filter<br /><em><br /><br />Filters the data structure using the specified predicate.</em></div>
<div class="tip" id="fs88">val f : (&#39;a -&gt; bool)</div>
<div class="tip" id="fs89">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs90">val col : &#39;s (requires member get_Empty and member AddLast and member Iter)</div>
<div class="tip" id="fs91">val refRoot : &#39;s ref (requires member get_Empty and member AddLast and member Iter)</div>
<div class="tip" id="fs92">val filterIter : (&#39;a -&gt; unit)</div>
<div class="tip" id="fs93">val choose : f:(&#39;a -&gt; &#39;b option) -&gt; col:&#39;c -&gt; &#39;b0 (requires member ( + ) and member get_Empty and member Iter)<br /><br />Full name: Script.choose<br /><em><br /><br />Applies a a function on the data structure, keeping all elements which return Some, and dropping all those that return None.</em></div>
<div class="tip" id="fs94">val f : (&#39;a -&gt; &#39;b option) (requires member ( + ) and member get_Empty)</div>
<div class="tip" id="fs95">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs96">val col : &#39;c (requires member Iter)</div>
<div class="tip" id="fs97">val refRoot : &#39;b ref (requires member get_Empty and member ( + ))</div>
<div class="tip" id="fs98">val chooseIter : (&#39;a -&gt; unit)</div>
<div class="tip" id="fs99">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs100">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs101">val y : &#39;b (requires member ( + ) and member get_Empty)</div>
<div class="tip" id="fs102">val toList : col:&#39;a -&gt; &#39;b list (requires member Iter)<br /><br />Full name: Script.toList<br /><em><br /><br />Constructs a linked list from the elements of this data structure</em></div>
<div class="tip" id="fs103">val refList : &#39;b list ref</div>
<div class="tip" id="fs104">val listIter : (&#39;b -&gt; unit)</div>
<div class="tip" id="fs105">val x : &#39;b</div>
<div class="tip" id="fs106">val fold : foldr:(&#39;a -&gt; &#39;b -&gt; &#39;a) -&gt; start:&#39;a -&gt; col:&#39;c -&gt; &#39;a (requires member Iter)<br /><br />Full name: Script.fold<br /><em><br /><br />Folds over the data structure using the specified function.</em></div>
<div class="tip" id="fs107">val foldr : (&#39;a -&gt; &#39;b -&gt; &#39;a)</div>
<div class="tip" id="fs108">val start : &#39;a</div>
<div class="tip" id="fs109">val refState : &#39;a ref</div>
<div class="tip" id="fs110">val foldIter : (&#39;b -&gt; unit)</div>
<div class="tip" id="fs111">property Ref.Value: &#39;a</div>
<div class="tip" id="fs112">val foldBack : foldr:(&#39;a -&gt; &#39;b -&gt; &#39;a) -&gt; start:&#39;a -&gt; col:&#39;c -&gt; &#39;a (requires member IterBack)<br /><br />Full name: Script.foldBack<br /><em><br /><br />Folds over the data structure backwards, using the specified function.</em></div>
<div class="tip" id="fs113">val col : &#39;c (requires member IterBack)</div>
<div class="tip" id="fs114">val foldbIter : (&#39;b -&gt; unit)</div>
<div class="tip" id="fs115">val forall : pred:(&#39;a -&gt; bool) -&gt; col:&#39;b -&gt; bool (requires member Iter)<br /><br />Full name: Script.forall<br /><em><br /><br />Returns true if the specified predicate is true for all items in the data structure.</em></div>
<div class="tip" id="fs116">val pred : (&#39;a -&gt; bool)</div>
<div class="tip" id="fs117">val col : &#39;b (requires member Iter)</div>
<div class="tip" id="fs118">val cur : bool</div>
<div class="tip" id="fs119">val forany : pred:(&#39;a -&gt; bool) -&gt; col:&#39;b -&gt; bool (requires member Iter)<br /><br />Full name: Script.forany<br /><em><br /><br />Returns true if the specified predicate is true for any item in the data structure.</em></div>
<div class="tip" id="fs120">val count : pred:(&#39;a -&gt; bool) -&gt; col:&#39;b -&gt; int (requires member Iter)<br /><br />Full name: Script.count<br /><em><br /><br />Counts the number of items for which the specified predicate is true.</em></div>
<div class="tip" id="fs121">val cur : int</div>
<div class="tip" id="fs122">val toArray : col:&#39;a -&gt; &#39;b [] (requires member get_Length and &#39;a :&gt; seq&lt;&#39;b&gt;)<br /><br />Full name: Script.toArray</div>
<div class="tip" id="fs123">val col : &#39;a (requires member get_Length and &#39;a :&gt; seq&lt;&#39;b&gt;)</div>
<div class="tip" id="fs124">val l : int</div>
<div class="tip" id="fs125">val arr : &#39;b []</div>
<div class="tip" id="fs126">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs127">val zeroCreate : count:int -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.zeroCreate</div>
<div class="tip" id="fs128">val item : &#39;b</div>
<div class="tip" id="fs129">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs130">val zip : source1:seq&lt;&#39;T1&gt; -&gt; source2:seq&lt;&#39;T2&gt; -&gt; seq&lt;&#39;T1 * &#39;T2&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.zip</div>

