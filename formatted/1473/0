<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
<span class="l">74: </span>
<span class="l">75: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">//type Variable = | WA | NT | Q | NSW | V | SA | T</span>
<span class="c">//type Domain = | Red | Green | Blue</span>
<span class="c">//type BinaryConstraint = | NotEqualTo of left: Variable * right: Variable | NotValue of variable: Variable * value: Domain</span>
<span class="c">//</span>
<span class="c">//let X = [ WA; NT; Q; NSW; V; SA; T ] //is a set of variables </span>
<span class="c">//let D = [ Red; Green; Blue ] //is a set of the respective domains of Domains, and </span>
<span class="c">//let C = [ NotValue(WA, Red); NotEqualTo(WA, NT); NotEqualTo(WA, SA); NotEqualTo(NT, SA); NotEqualTo(NT, Q); NotEqualTo(SA, Q); NotEqualTo(SA, NSW); NotEqualTo(SA, V); NotEqualTo(Q, NSW); NotEqualTo(NSW, V); NotEqualTo(T, V) ] //is a set of constraints</span>
<span class="c">//</span>
<span class="c">//type CSP = {X: Variable list;  D: Domain list; C: BinaryConstraint list}</span>
<span class="c">//let csp = {X = X; D = D; C = C}</span>

<span class="c">/////////////////////////////////////////////</span>

<span class="k">type</span> <span class="t">Variable</span> <span class="o">=</span> | <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="p">WA</span> | <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="p">NT</span> | <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="p">Q</span> | <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="p">NSW</span> | <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="p">V</span> | <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="p">SA</span> | <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="p">T</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="t">Domain</span> <span class="o">=</span> | <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="p">Red</span> | <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="p">Green</span> | <span onmouseout="hideTip(event, 'fs11', 11)" onmouseover="showTip(event, 'fs11', 11)" class="p">Blue</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs12', 12)" onmouseover="showTip(event, 'fs12', 12)" class="t">BinaryConstraint</span> <span class="o">=</span> | <span onmouseout="hideTip(event, 'fs13', 13)" onmouseover="showTip(event, 'fs13', 13)" class="p">NotEqualTo</span> <span class="k">of</span> <span class="i">left</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs14', 14)" onmouseover="showTip(event, 'fs14', 14)" class="t">Variable</span> <span class="o">*</span> <span class="i">right</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs14', 15)" onmouseover="showTip(event, 'fs14', 15)" class="t">Variable</span> | <span onmouseout="hideTip(event, 'fs15', 16)" onmouseover="showTip(event, 'fs15', 16)" class="p">NotValue</span> <span class="k">of</span> <span class="i">variable</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="t">Variable</span> <span class="o">*</span> <span class="i">value</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 18)" onmouseover="showTip(event, 'fs8', 18)" class="t">Domain</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 19)" onmouseover="showTip(event, 'fs16', 19)" class="i">X</span> <span class="o">=</span> [ <span onmouseout="hideTip(event, 'fs1', 20)" onmouseover="showTip(event, 'fs1', 20)" class="p">WA</span>; <span onmouseout="hideTip(event, 'fs2', 21)" onmouseover="showTip(event, 'fs2', 21)" class="p">NT</span>; <span onmouseout="hideTip(event, 'fs3', 22)" onmouseover="showTip(event, 'fs3', 22)" class="p">Q</span>; <span onmouseout="hideTip(event, 'fs4', 23)" onmouseover="showTip(event, 'fs4', 23)" class="p">NSW</span>; <span onmouseout="hideTip(event, 'fs5', 24)" onmouseover="showTip(event, 'fs5', 24)" class="p">V</span>; <span onmouseout="hideTip(event, 'fs6', 25)" onmouseover="showTip(event, 'fs6', 25)" class="p">SA</span>; <span onmouseout="hideTip(event, 'fs7', 26)" onmouseover="showTip(event, 'fs7', 26)" class="p">T</span> ] <span class="c">//is a set of variables </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 27)" onmouseover="showTip(event, 'fs17', 27)" class="i">D</span> <span class="o">=</span> [ <span onmouseout="hideTip(event, 'fs9', 28)" onmouseover="showTip(event, 'fs9', 28)" class="p">Red</span>; <span onmouseout="hideTip(event, 'fs10', 29)" onmouseover="showTip(event, 'fs10', 29)" class="p">Green</span>; <span onmouseout="hideTip(event, 'fs11', 30)" onmouseover="showTip(event, 'fs11', 30)" class="p">Blue</span> ] <span class="c">//is a set of the respective domains of Domains, and </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 31)" onmouseover="showTip(event, 'fs18', 31)" class="i">C</span> <span class="o">=</span> [ <span onmouseout="hideTip(event, 'fs13', 32)" onmouseover="showTip(event, 'fs13', 32)" class="p">NotEqualTo</span>(<span onmouseout="hideTip(event, 'fs1', 33)" onmouseover="showTip(event, 'fs1', 33)" class="p">WA</span>, <span onmouseout="hideTip(event, 'fs2', 34)" onmouseover="showTip(event, 'fs2', 34)" class="p">NT</span>); <span onmouseout="hideTip(event, 'fs13', 35)" onmouseover="showTip(event, 'fs13', 35)" class="p">NotEqualTo</span>(<span onmouseout="hideTip(event, 'fs1', 36)" onmouseover="showTip(event, 'fs1', 36)" class="p">WA</span>, <span onmouseout="hideTip(event, 'fs6', 37)" onmouseover="showTip(event, 'fs6', 37)" class="p">SA</span>); <span onmouseout="hideTip(event, 'fs13', 38)" onmouseover="showTip(event, 'fs13', 38)" class="p">NotEqualTo</span>(<span onmouseout="hideTip(event, 'fs2', 39)" onmouseover="showTip(event, 'fs2', 39)" class="p">NT</span>, <span onmouseout="hideTip(event, 'fs6', 40)" onmouseover="showTip(event, 'fs6', 40)" class="p">SA</span>); <span onmouseout="hideTip(event, 'fs13', 41)" onmouseover="showTip(event, 'fs13', 41)" class="p">NotEqualTo</span>(<span onmouseout="hideTip(event, 'fs2', 42)" onmouseover="showTip(event, 'fs2', 42)" class="p">NT</span>, <span onmouseout="hideTip(event, 'fs3', 43)" onmouseover="showTip(event, 'fs3', 43)" class="p">Q</span>); <span onmouseout="hideTip(event, 'fs13', 44)" onmouseover="showTip(event, 'fs13', 44)" class="p">NotEqualTo</span>(<span onmouseout="hideTip(event, 'fs6', 45)" onmouseover="showTip(event, 'fs6', 45)" class="p">SA</span>, <span onmouseout="hideTip(event, 'fs3', 46)" onmouseover="showTip(event, 'fs3', 46)" class="p">Q</span>); <span onmouseout="hideTip(event, 'fs13', 47)" onmouseover="showTip(event, 'fs13', 47)" class="p">NotEqualTo</span>(<span onmouseout="hideTip(event, 'fs6', 48)" onmouseover="showTip(event, 'fs6', 48)" class="p">SA</span>, <span onmouseout="hideTip(event, 'fs4', 49)" onmouseover="showTip(event, 'fs4', 49)" class="p">NSW</span>); <span onmouseout="hideTip(event, 'fs13', 50)" onmouseover="showTip(event, 'fs13', 50)" class="p">NotEqualTo</span>(<span onmouseout="hideTip(event, 'fs6', 51)" onmouseover="showTip(event, 'fs6', 51)" class="p">SA</span>, <span onmouseout="hideTip(event, 'fs5', 52)" onmouseover="showTip(event, 'fs5', 52)" class="p">V</span>); <span onmouseout="hideTip(event, 'fs13', 53)" onmouseover="showTip(event, 'fs13', 53)" class="p">NotEqualTo</span>(<span onmouseout="hideTip(event, 'fs3', 54)" onmouseover="showTip(event, 'fs3', 54)" class="p">Q</span>, <span onmouseout="hideTip(event, 'fs4', 55)" onmouseover="showTip(event, 'fs4', 55)" class="p">NSW</span>); <span onmouseout="hideTip(event, 'fs13', 56)" onmouseover="showTip(event, 'fs13', 56)" class="p">NotEqualTo</span>(<span onmouseout="hideTip(event, 'fs4', 57)" onmouseover="showTip(event, 'fs4', 57)" class="p">NSW</span>, <span onmouseout="hideTip(event, 'fs5', 58)" onmouseover="showTip(event, 'fs5', 58)" class="p">V</span>); <span onmouseout="hideTip(event, 'fs13', 59)" onmouseover="showTip(event, 'fs13', 59)" class="p">NotEqualTo</span>(<span onmouseout="hideTip(event, 'fs7', 60)" onmouseover="showTip(event, 'fs7', 60)" class="p">T</span>, <span onmouseout="hideTip(event, 'fs5', 61)" onmouseover="showTip(event, 'fs5', 61)" class="p">V</span>) ] <span class="c">//is a set of constraints</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs19', 62)" onmouseover="showTip(event, 'fs19', 62)" class="t">CSP</span> <span class="o">=</span> {<span onmouseout="hideTip(event, 'fs20', 63)" onmouseover="showTip(event, 'fs20', 63)" class="i">X</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs14', 64)" onmouseover="showTip(event, 'fs14', 64)" class="t">Variable</span> <span onmouseout="hideTip(event, 'fs21', 65)" onmouseover="showTip(event, 'fs21', 65)" class="t">list</span>;  <span onmouseout="hideTip(event, 'fs22', 66)" onmouseover="showTip(event, 'fs22', 66)" class="i">D</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 67)" onmouseover="showTip(event, 'fs8', 67)" class="t">Domain</span> <span onmouseout="hideTip(event, 'fs21', 68)" onmouseover="showTip(event, 'fs21', 68)" class="t">list</span>; <span onmouseout="hideTip(event, 'fs23', 69)" onmouseover="showTip(event, 'fs23', 69)" class="i">C</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs12', 70)" onmouseover="showTip(event, 'fs12', 70)" class="t">BinaryConstraint</span> <span onmouseout="hideTip(event, 'fs21', 71)" onmouseover="showTip(event, 'fs21', 71)" class="t">list</span>}
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 72)" onmouseover="showTip(event, 'fs24', 72)" class="i">csp</span> <span class="o">=</span> {<span onmouseout="hideTip(event, 'fs20', 73)" onmouseover="showTip(event, 'fs20', 73)" class="i">X</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 74)" onmouseover="showTip(event, 'fs16', 74)" class="i">X</span>; <span onmouseout="hideTip(event, 'fs22', 75)" onmouseover="showTip(event, 'fs22', 75)" class="i">D</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 76)" onmouseover="showTip(event, 'fs17', 76)" class="i">D</span>; <span onmouseout="hideTip(event, 'fs23', 77)" onmouseover="showTip(event, 'fs23', 77)" class="i">C</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 78)" onmouseover="showTip(event, 'fs18', 78)" class="i">C</span>}

<span class="c">/////////////////////////////////////////////</span>

<span class="c">//type Variable = | X1 | X2 | X3</span>
<span class="c">//type Domain = | Red | Green | Blue</span>
<span class="c">//type BinaryConstraint = | NotEqualTo of left: Variable * right: Variable | NotValue of variable: Variable * value: Domain</span>
<span class="c">//</span>
<span class="c">//let X = [ X1; X2; X3 ] //is a set of variables </span>
<span class="c">//let D = [ Red; Green; Blue ] //is a set of the respective domains of Domains, and </span>
<span class="c">//let C = [ NotEqualTo(X1, X2); NotEqualTo(X1, X3); NotEqualTo(X2, X3) ] //is a set of constraints</span>
<span class="c">//</span>
<span class="c">//type CSP = {X: Variable list;  D: Domain list; C: BinaryConstraint list}</span>
<span class="c">//let csp = {X = X; D = D; C = C}</span>

<span class="c">/////////////////////////////////////////////</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 79)" onmouseover="showTip(event, 'fs25', 79)" class="f">combine</span> (<span onmouseout="hideTip(event, 'fs26', 80)" onmouseover="showTip(event, 'fs26', 80)" class="i">xs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs14', 81)" onmouseover="showTip(event, 'fs14', 81)" class="t">Variable</span> <span onmouseout="hideTip(event, 'fs21', 82)" onmouseover="showTip(event, 'fs21', 82)" class="t">list</span>, <span onmouseout="hideTip(event, 'fs27', 83)" onmouseover="showTip(event, 'fs27', 83)" class="i">ds</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 84)" onmouseover="showTip(event, 'fs8', 84)" class="t">Domain</span> <span onmouseout="hideTip(event, 'fs21', 85)" onmouseover="showTip(event, 'fs21', 85)" class="t">list</span>) <span class="o">=</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs28', 86)" onmouseover="showTip(event, 'fs28', 86)" class="f">combineRec</span> (<span onmouseout="hideTip(event, 'fs29', 87)" onmouseover="showTip(event, 'fs29', 87)" class="i">ys</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs14', 88)" onmouseover="showTip(event, 'fs14', 88)" class="t">Variable</span> <span onmouseout="hideTip(event, 'fs21', 89)" onmouseover="showTip(event, 'fs21', 89)" class="t">list</span>, <span onmouseout="hideTip(event, 'fs30', 90)" onmouseover="showTip(event, 'fs30', 90)" class="i">acc</span><span class="o">:</span> (<span onmouseout="hideTip(event, 'fs14', 91)" onmouseover="showTip(event, 'fs14', 91)" class="t">Variable</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs8', 92)" onmouseover="showTip(event, 'fs8', 92)" class="t">Domain</span>) <span onmouseout="hideTip(event, 'fs21', 93)" onmouseover="showTip(event, 'fs21', 93)" class="t">list</span>) <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs29', 94)" onmouseover="showTip(event, 'fs29', 94)" class="i">ys</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs31', 95)" onmouseover="showTip(event, 'fs31', 95)" class="i">y</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs29', 96)" onmouseover="showTip(event, 'fs29', 96)" class="i">ys</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs32', 97)" onmouseover="showTip(event, 'fs32', 97)" class="i">seq</span> { <span class="k">for</span> <span onmouseout="hideTip(event, 'fs33', 98)" onmouseover="showTip(event, 'fs33', 98)" class="i">d</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs27', 99)" onmouseover="showTip(event, 'fs27', 99)" class="i">ds</span> <span class="k">do</span>
                           <span class="k">for</span> <span onmouseout="hideTip(event, 'fs34', 100)" onmouseover="showTip(event, 'fs34', 100)" class="i">c</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs28', 101)" onmouseover="showTip(event, 'fs28', 101)" class="f">combineRec</span>(<span onmouseout="hideTip(event, 'fs29', 102)" onmouseover="showTip(event, 'fs29', 102)" class="i">ys</span>, <span onmouseout="hideTip(event, 'fs35', 103)" onmouseover="showTip(event, 'fs35', 103)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 104)" onmouseover="showTip(event, 'fs36', 104)" class="f">append</span> <span onmouseout="hideTip(event, 'fs30', 105)" onmouseover="showTip(event, 'fs30', 105)" class="i">acc</span> [(<span onmouseout="hideTip(event, 'fs31', 106)" onmouseover="showTip(event, 'fs31', 106)" class="i">y</span>, <span onmouseout="hideTip(event, 'fs33', 107)" onmouseover="showTip(event, 'fs33', 107)" class="i">d</span>)]) <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs34', 108)" onmouseover="showTip(event, 'fs34', 108)" class="i">c</span> }
        | [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs37', 109)" onmouseover="showTip(event, 'fs37', 109)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 110)" onmouseover="showTip(event, 'fs38', 110)" class="f">ofList</span> [<span onmouseout="hideTip(event, 'fs30', 111)" onmouseover="showTip(event, 'fs30', 111)" class="i">acc</span>]
    <span onmouseout="hideTip(event, 'fs28', 112)" onmouseover="showTip(event, 'fs28', 112)" class="f">combineRec</span> (<span onmouseout="hideTip(event, 'fs26', 113)" onmouseover="showTip(event, 'fs26', 113)" class="i">xs</span>, [])

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 114)" onmouseover="showTip(event, 'fs39', 114)" class="f">evaluate</span> (<span onmouseout="hideTip(event, 'fs40', 115)" onmouseover="showTip(event, 'fs40', 115)" class="i">xs</span><span class="o">:</span>(<span onmouseout="hideTip(event, 'fs14', 116)" onmouseover="showTip(event, 'fs14', 116)" class="t">Variable</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs8', 117)" onmouseover="showTip(event, 'fs8', 117)" class="t">Domain</span>) <span onmouseout="hideTip(event, 'fs21', 118)" onmouseover="showTip(event, 'fs21', 118)" class="t">list</span> <span onmouseout="hideTip(event, 'fs32', 119)" onmouseover="showTip(event, 'fs32', 119)" class="t">seq</span>, <span onmouseout="hideTip(event, 'fs41', 120)" onmouseover="showTip(event, 'fs41', 120)" class="i">cs</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs12', 121)" onmouseover="showTip(event, 'fs12', 121)" class="t">BinaryConstraint</span> <span onmouseout="hideTip(event, 'fs21', 122)" onmouseover="showTip(event, 'fs21', 122)" class="t">list</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 123)" onmouseover="showTip(event, 'fs42', 123)" class="f">notEqualTo</span> (<span onmouseout="hideTip(event, 'fs43', 124)" onmouseover="showTip(event, 'fs43', 124)" class="i">left</span>, <span onmouseout="hideTip(event, 'fs44', 125)" onmouseover="showTip(event, 'fs44', 125)" class="i">right</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs43', 126)" onmouseover="showTip(event, 'fs43', 126)" class="i">left</span> <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs44', 127)" onmouseover="showTip(event, 'fs44', 127)" class="i">right</span>
    <span onmouseout="hideTip(event, 'fs32', 128)" onmouseover="showTip(event, 'fs32', 128)" class="i">seq</span>{ <span class="k">for</span> <span onmouseout="hideTip(event, 'fs45', 129)" onmouseover="showTip(event, 'fs45', 129)" class="i">x</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs40', 130)" onmouseover="showTip(event, 'fs40', 130)" class="i">xs</span> <span class="k">-&gt;</span>
          [<span class="k">for</span> <span onmouseout="hideTip(event, 'fs46', 131)" onmouseover="showTip(event, 'fs46', 131)" class="i">c</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs41', 132)" onmouseover="showTip(event, 'fs41', 132)" class="i">cs</span> <span class="k">-&gt;</span>
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs46', 133)" onmouseover="showTip(event, 'fs46', 133)" class="i">c</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs15', 134)" onmouseover="showTip(event, 'fs15', 134)" class="p">NotValue</span>(<span onmouseout="hideTip(event, 'fs47', 135)" onmouseover="showTip(event, 'fs47', 135)" class="i">variable</span>, <span onmouseout="hideTip(event, 'fs48', 136)" onmouseover="showTip(event, 'fs48', 136)" class="i">value</span>) <span class="k">-&gt;</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs49', 137)" onmouseover="showTip(event, 'fs49', 137)" class="i">v</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs45', 138)" onmouseover="showTip(event, 'fs45', 138)" class="i">x</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs35', 139)" onmouseover="showTip(event, 'fs35', 139)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 140)" onmouseover="showTip(event, 'fs50', 140)" class="f">find</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs51', 141)" onmouseover="showTip(event, 'fs51', 141)" class="i">v</span>, _) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 142)" onmouseover="showTip(event, 'fs51', 142)" class="i">v</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs47', 143)" onmouseover="showTip(event, 'fs47', 143)" class="i">variable</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs52', 144)" onmouseover="showTip(event, 'fs52', 144)" class="f">snd</span>
                <span onmouseout="hideTip(event, 'fs42', 145)" onmouseover="showTip(event, 'fs42', 145)" class="f">notEqualTo</span>(<span onmouseout="hideTip(event, 'fs49', 146)" onmouseover="showTip(event, 'fs49', 146)" class="i">v</span>, <span onmouseout="hideTip(event, 'fs48', 147)" onmouseover="showTip(event, 'fs48', 147)" class="i">value</span>)
            | <span onmouseout="hideTip(event, 'fs13', 148)" onmouseover="showTip(event, 'fs13', 148)" class="p">NotEqualTo</span>(<span onmouseout="hideTip(event, 'fs53', 149)" onmouseover="showTip(event, 'fs53', 149)" class="i">left</span>, <span onmouseout="hideTip(event, 'fs54', 150)" onmouseover="showTip(event, 'fs54', 150)" class="i">right</span>) <span class="k">-&gt;</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs55', 151)" onmouseover="showTip(event, 'fs55', 151)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs45', 152)" onmouseover="showTip(event, 'fs45', 152)" class="i">x</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs35', 153)" onmouseover="showTip(event, 'fs35', 153)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 154)" onmouseover="showTip(event, 'fs50', 154)" class="f">find</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs51', 155)" onmouseover="showTip(event, 'fs51', 155)" class="i">v</span>, _) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 156)" onmouseover="showTip(event, 'fs51', 156)" class="i">v</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 157)" onmouseover="showTip(event, 'fs53', 157)" class="i">left</span>)  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs52', 158)" onmouseover="showTip(event, 'fs52', 158)" class="f">snd</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 159)" onmouseover="showTip(event, 'fs56', 159)" class="i">b</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs45', 160)" onmouseover="showTip(event, 'fs45', 160)" class="i">x</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs35', 161)" onmouseover="showTip(event, 'fs35', 161)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 162)" onmouseover="showTip(event, 'fs50', 162)" class="f">find</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs51', 163)" onmouseover="showTip(event, 'fs51', 163)" class="i">v</span>, _) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 164)" onmouseover="showTip(event, 'fs51', 164)" class="i">v</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs54', 165)" onmouseover="showTip(event, 'fs54', 165)" class="i">right</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs52', 166)" onmouseover="showTip(event, 'fs52', 166)" class="f">snd</span> 
                <span onmouseout="hideTip(event, 'fs42', 167)" onmouseover="showTip(event, 'fs42', 167)" class="f">notEqualTo</span>(<span onmouseout="hideTip(event, 'fs55', 168)" onmouseover="showTip(event, 'fs55', 168)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs56', 169)" onmouseover="showTip(event, 'fs56', 169)" class="i">b</span>)] }

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 170)" onmouseover="showTip(event, 'fs57', 170)" class="f">depthFirst</span> (<span onmouseout="hideTip(event, 'fs26', 171)" onmouseover="showTip(event, 'fs26', 171)" class="i">xs</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs14', 172)" onmouseover="showTip(event, 'fs14', 172)" class="t">Variable</span> <span onmouseout="hideTip(event, 'fs21', 173)" onmouseover="showTip(event, 'fs21', 173)" class="t">list</span>, <span onmouseout="hideTip(event, 'fs27', 174)" onmouseover="showTip(event, 'fs27', 174)" class="i">ds</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 175)" onmouseover="showTip(event, 'fs8', 175)" class="t">Domain</span> <span onmouseout="hideTip(event, 'fs21', 176)" onmouseover="showTip(event, 'fs21', 176)" class="t">list</span>, <span onmouseout="hideTip(event, 'fs41', 177)" onmouseover="showTip(event, 'fs41', 177)" class="i">cs</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs12', 178)" onmouseover="showTip(event, 'fs12', 178)" class="t">BinaryConstraint</span> <span onmouseout="hideTip(event, 'fs21', 179)" onmouseover="showTip(event, 'fs21', 179)" class="t">list</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 180)" onmouseover="showTip(event, 'fs58', 180)" class="f">all</span> <span onmouseout="hideTip(event, 'fs59', 181)" onmouseover="showTip(event, 'fs59', 181)" class="i">xs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs59', 182)" onmouseover="showTip(event, 'fs59', 182)" class="i">xs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs37', 183)" onmouseover="showTip(event, 'fs37', 183)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 184)" onmouseover="showTip(event, 'fs60', 184)" class="f">forall</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs61', 185)" onmouseover="showTip(event, 'fs61', 185)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs61', 186)" onmouseover="showTip(event, 'fs61', 186)" class="i">x</span>)
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs62', 187)" onmouseover="showTip(event, 'fs62', 187)" class="f">depthFirstRec</span> (<span onmouseout="hideTip(event, 'fs63', 188)" onmouseover="showTip(event, 'fs63', 188)" class="i">ys</span><span class="o">:</span>((<span onmouseout="hideTip(event, 'fs14', 189)" onmouseover="showTip(event, 'fs14', 189)" class="t">Variable</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs8', 190)" onmouseover="showTip(event, 'fs8', 190)" class="t">Domain</span>) <span onmouseout="hideTip(event, 'fs21', 191)" onmouseover="showTip(event, 'fs21', 191)" class="t">list</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs64', 192)" onmouseover="showTip(event, 'fs64', 192)" class="t">bool</span> <span onmouseout="hideTip(event, 'fs21', 193)" onmouseover="showTip(event, 'fs21', 193)" class="t">list</span>) <span onmouseout="hideTip(event, 'fs32', 194)" onmouseover="showTip(event, 'fs32', 194)" class="t">seq</span>) <span class="o">=</span>
        <span class="k">if</span> (<span onmouseout="hideTip(event, 'fs37', 195)" onmouseover="showTip(event, 'fs37', 195)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 196)" onmouseover="showTip(event, 'fs65', 196)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs63', 197)" onmouseover="showTip(event, 'fs63', 197)" class="i">ys</span>) <span class="k">then</span> []
        <span class="k">else</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs66', 198)" onmouseover="showTip(event, 'fs66', 198)" class="i">y</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs63', 199)" onmouseover="showTip(event, 'fs63', 199)" class="i">ys</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs37', 200)" onmouseover="showTip(event, 'fs37', 200)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs67', 201)" onmouseover="showTip(event, 'fs67', 201)" class="f">head</span>            
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs58', 202)" onmouseover="showTip(event, 'fs58', 202)" class="f">all</span>(<span onmouseout="hideTip(event, 'fs52', 203)" onmouseover="showTip(event, 'fs52', 203)" class="f">snd</span> <span onmouseout="hideTip(event, 'fs66', 204)" onmouseover="showTip(event, 'fs66', 204)" class="i">y</span>) <span class="k">then</span> <span onmouseout="hideTip(event, 'fs68', 205)" onmouseover="showTip(event, 'fs68', 205)" class="f">fst</span> <span onmouseout="hideTip(event, 'fs66', 206)" onmouseover="showTip(event, 'fs66', 206)" class="i">y</span> 
            <span class="k">else</span> <span onmouseout="hideTip(event, 'fs62', 207)" onmouseover="showTip(event, 'fs62', 207)" class="f">depthFirstRec</span>(<span onmouseout="hideTip(event, 'fs63', 208)" onmouseover="showTip(event, 'fs63', 208)" class="i">ys</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs37', 209)" onmouseover="showTip(event, 'fs37', 209)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 210)" onmouseover="showTip(event, 'fs69', 210)" class="f">skip</span> <span class="n">1</span>)    
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs70', 211)" onmouseover="showTip(event, 'fs70', 211)" class="i">xds</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 212)" onmouseover="showTip(event, 'fs25', 212)" class="f">combine</span>(<span onmouseout="hideTip(event, 'fs26', 213)" onmouseover="showTip(event, 'fs26', 213)" class="i">xs</span>, <span onmouseout="hideTip(event, 'fs27', 214)" onmouseover="showTip(event, 'fs27', 214)" class="i">ds</span>)
    <span onmouseout="hideTip(event, 'fs62', 215)" onmouseover="showTip(event, 'fs62', 215)" class="f">depthFirstRec</span> (<span onmouseout="hideTip(event, 'fs37', 216)" onmouseover="showTip(event, 'fs37', 216)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 217)" onmouseover="showTip(event, 'fs71', 217)" class="f">zip</span> <span onmouseout="hideTip(event, 'fs70', 218)" onmouseover="showTip(event, 'fs70', 218)" class="i">xds</span> (<span onmouseout="hideTip(event, 'fs39', 219)" onmouseover="showTip(event, 'fs39', 219)" class="f">evaluate</span>(<span onmouseout="hideTip(event, 'fs70', 220)" onmouseover="showTip(event, 'fs70', 220)" class="i">xds</span>, <span onmouseout="hideTip(event, 'fs41', 221)" onmouseover="showTip(event, 'fs41', 221)" class="i">cs</span>)))

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs72', 222)" onmouseover="showTip(event, 'fs72', 222)" class="f">backtrackingSearch</span> (<span onmouseout="hideTip(event, 'fs73', 223)" onmouseover="showTip(event, 'fs73', 223)" class="i">csp</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs19', 224)" onmouseover="showTip(event, 'fs19', 224)" class="t">CSP</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs57', 225)" onmouseover="showTip(event, 'fs57', 225)" class="f">depthFirst</span>(<span onmouseout="hideTip(event, 'fs73', 226)" onmouseover="showTip(event, 'fs73', 226)" class="i">csp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 227)" onmouseover="showTip(event, 'fs20', 227)" class="i">X</span>, <span onmouseout="hideTip(event, 'fs73', 228)" onmouseover="showTip(event, 'fs73', 228)" class="i">csp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 229)" onmouseover="showTip(event, 'fs22', 229)" class="i">D</span>, <span onmouseout="hideTip(event, 'fs73', 230)" onmouseover="showTip(event, 'fs73', 230)" class="i">csp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 231)" onmouseover="showTip(event, 'fs23', 231)" class="i">C</span>)

<span class="c">//main</span>
<span onmouseout="hideTip(event, 'fs74', 232)" onmouseover="showTip(event, 'fs74', 232)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs72', 233)" onmouseover="showTip(event, 'fs72', 233)" class="f">backtrackingSearch</span> <span onmouseout="hideTip(event, 'fs24', 234)" onmouseover="showTip(event, 'fs24', 234)" class="i">csp</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">union case Variable.WA: Variable</div>
<div class="tip" id="fs2">union case Variable.NT: Variable</div>
<div class="tip" id="fs3">union case Variable.Q: Variable</div>
<div class="tip" id="fs4">union case Variable.NSW: Variable</div>
<div class="tip" id="fs5">union case Variable.V: Variable</div>
<div class="tip" id="fs6">union case Variable.SA: Variable</div>
<div class="tip" id="fs7">union case Variable.T: Variable</div>
<div class="tip" id="fs8">type Domain =<br />&#160;&#160;| Red<br />&#160;&#160;| Green<br />&#160;&#160;| Blue<br /><br />Full name: Script.Domain</div>
<div class="tip" id="fs9">union case Domain.Red: Domain</div>
<div class="tip" id="fs10">union case Domain.Green: Domain</div>
<div class="tip" id="fs11">union case Domain.Blue: Domain</div>
<div class="tip" id="fs12">type BinaryConstraint =<br />&#160;&#160;| NotEqualTo of left: Variable * right: Variable<br />&#160;&#160;| NotValue of variable: Variable * value: Domain<br /><br />Full name: Script.BinaryConstraint</div>
<div class="tip" id="fs13">union case BinaryConstraint.NotEqualTo: left: Variable * right: Variable -&gt; BinaryConstraint</div>
<div class="tip" id="fs14">type Variable =<br />&#160;&#160;| WA<br />&#160;&#160;| NT<br />&#160;&#160;| Q<br />&#160;&#160;| NSW<br />&#160;&#160;| V<br />&#160;&#160;| SA<br />&#160;&#160;| T<br /><br />Full name: Script.Variable</div>
<div class="tip" id="fs15">union case BinaryConstraint.NotValue: variable: Variable * value: Domain -&gt; BinaryConstraint</div>
<div class="tip" id="fs16">val X : Variable list<br /><br />Full name: Script.X</div>
<div class="tip" id="fs17">val D : Domain list<br /><br />Full name: Script.D</div>
<div class="tip" id="fs18">val C : BinaryConstraint list<br /><br />Full name: Script.C</div>
<div class="tip" id="fs19">type CSP =<br />&#160;&#160;{X: Variable list;<br />&#160;&#160;&#160;D: Domain list;<br />&#160;&#160;&#160;C: BinaryConstraint list;}<br /><br />Full name: Script.CSP</div>
<div class="tip" id="fs20">CSP.X: Variable list</div>
<div class="tip" id="fs21">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs22">CSP.D: Domain list</div>
<div class="tip" id="fs23">CSP.C: BinaryConstraint list</div>
<div class="tip" id="fs24">val csp : CSP<br /><br />Full name: Script.csp</div>
<div class="tip" id="fs25">val combine : xs:Variable list * ds:Domain list -&gt; seq&lt;(Variable * Domain) list&gt;<br /><br />Full name: Script.combine</div>
<div class="tip" id="fs26">val xs : Variable list</div>
<div class="tip" id="fs27">val ds : Domain list</div>
<div class="tip" id="fs28">val combineRec : (Variable list * (Variable * Domain) list -&gt; seq&lt;(Variable * Domain) list&gt;)</div>
<div class="tip" id="fs29">val ys : Variable list</div>
<div class="tip" id="fs30">val acc : (Variable * Domain) list</div>
<div class="tip" id="fs31">val y : Variable</div>
<div class="tip" id="fs32">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = System.Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs33">val d : Domain</div>
<div class="tip" id="fs34">val c : (Variable * Domain) list</div>
<div class="tip" id="fs35">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs36">val append : list1:&#39;T list -&gt; list2:&#39;T list -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.append</div>
<div class="tip" id="fs37">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs38">val ofList : source:&#39;T list -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.ofList</div>
<div class="tip" id="fs39">val evaluate : xs:seq&lt;(Variable * Domain) list&gt; * cs:BinaryConstraint list -&gt; seq&lt;bool list&gt;<br /><br />Full name: Script.evaluate</div>
<div class="tip" id="fs40">val xs : seq&lt;(Variable * Domain) list&gt;</div>
<div class="tip" id="fs41">val cs : BinaryConstraint list</div>
<div class="tip" id="fs42">val notEqualTo : (&#39;a * &#39;a -&gt; bool) (requires equality)</div>
<div class="tip" id="fs43">val left : &#39;a (requires equality)</div>
<div class="tip" id="fs44">val right : &#39;a (requires equality)</div>
<div class="tip" id="fs45">val x : (Variable * Domain) list</div>
<div class="tip" id="fs46">val c : BinaryConstraint</div>
<div class="tip" id="fs47">val variable : Variable</div>
<div class="tip" id="fs48">val value : Domain</div>
<div class="tip" id="fs49">val v : Domain</div>
<div class="tip" id="fs50">val find : predicate:(&#39;T -&gt; bool) -&gt; list:&#39;T list -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.List.find</div>
<div class="tip" id="fs51">val v : Variable</div>
<div class="tip" id="fs52">val snd : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T2<br /><br />Full name: Microsoft.FSharp.Core.Operators.snd</div>
<div class="tip" id="fs53">val left : Variable</div>
<div class="tip" id="fs54">val right : Variable</div>
<div class="tip" id="fs55">val a : Domain</div>
<div class="tip" id="fs56">val b : Domain</div>
<div class="tip" id="fs57">val depthFirst : xs:Variable list * ds:Domain list * cs:BinaryConstraint list -&gt; (Variable * Domain) list<br /><br />Full name: Script.depthFirst</div>
<div class="tip" id="fs58">val all : (seq&lt;bool&gt; -&gt; bool)</div>
<div class="tip" id="fs59">val xs : seq&lt;bool&gt;</div>
<div class="tip" id="fs60">val forall : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.Seq.forall</div>
<div class="tip" id="fs61">val x : bool</div>
<div class="tip" id="fs62">val depthFirstRec : (seq&lt;(Variable * Domain) list * bool list&gt; -&gt; (Variable * Domain) list)</div>
<div class="tip" id="fs63">val ys : seq&lt;(Variable * Domain) list * bool list&gt;</div>
<div class="tip" id="fs64">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs65">val isEmpty : source:seq&lt;&#39;T&gt; -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.Seq.isEmpty</div>
<div class="tip" id="fs66">val y : (Variable * Domain) list * bool list</div>
<div class="tip" id="fs67">val head : source:seq&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.Seq.head</div>
<div class="tip" id="fs68">val fst : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T1<br /><br />Full name: Microsoft.FSharp.Core.Operators.fst</div>
<div class="tip" id="fs69">val skip : count:int -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.skip</div>
<div class="tip" id="fs70">val xds : seq&lt;(Variable * Domain) list&gt;</div>
<div class="tip" id="fs71">val zip : source1:seq&lt;&#39;T1&gt; -&gt; source2:seq&lt;&#39;T2&gt; -&gt; seq&lt;&#39;T1 * &#39;T2&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.zip</div>
<div class="tip" id="fs72">val backtrackingSearch : csp:CSP -&gt; (Variable * Domain) list<br /><br />Full name: Script.backtrackingSearch</div>
<div class="tip" id="fs73">val csp : CSP</div>
<div class="tip" id="fs74">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>

