<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">namespace</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">Graph</span><span class="o">.</span><span class="i">TransitiveReduction</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Collections</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="i">Generic</span>

<span class="c">/// Adjacency list representation of a graph, mapping each vertex to its successors</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="t">Graph</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">a</span> <span class="o">:</span> <span class="i">comparison</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="t">Map</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span>, <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="t">Set</span><span class="o">&gt;</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="t">Tree</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">a</span> <span class="o">:</span> <span class="i">comparison</span><span class="o">&gt;</span> <span class="o">=</span> 
    { <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="i">root</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> ; <span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="i">sub</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="t">Tree</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="t">list</span> }

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="f">ToSeq</span>() <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="i">seq</span> { <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 20)" onmouseover="showTip(event, 'fs9', 20)" class="i">root</span>
              <span class="k">for</span> <span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="i">t</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs12', 22)" onmouseover="showTip(event, 'fs12', 22)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 23)" onmouseover="showTip(event, 'fs10', 23)" class="i">sub</span> <span class="k">do</span>
                <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs15', 24)" onmouseover="showTip(event, 'fs15', 24)" class="i">t</span> }

    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs16', 25)" onmouseover="showTip(event, 'fs16', 25)" class="t">IEnumerable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="k">with</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs12', 26)" onmouseover="showTip(event, 'fs12', 26)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 27)" onmouseover="showTip(event, 'fs17', 27)" class="f">GetEnumerator</span>() <span class="o">:</span> <span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="t">IEnumerator</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">=</span> 
           <span onmouseout="hideTip(event, 'fs12', 29)" onmouseover="showTip(event, 'fs12', 29)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 30)" onmouseover="showTip(event, 'fs19', 30)" class="f">ToSeq</span>()<span class="o">.</span><span class="f">GetEnumerator</span>()
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs12', 31)" onmouseover="showTip(event, 'fs12', 31)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 32)" onmouseover="showTip(event, 'fs20', 32)" class="f">GetEnumerator</span>() <span class="o">:</span> <span onmouseout="hideTip(event, 'fs18', 33)" onmouseover="showTip(event, 'fs18', 33)" class="t">IEnumerator</span> <span class="o">=</span>
            (<span onmouseout="hideTip(event, 'fs12', 34)" onmouseover="showTip(event, 'fs12', 34)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 35)" onmouseover="showTip(event, 'fs19', 35)" class="f">ToSeq</span>() <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs16', 36)" onmouseover="showTip(event, 'fs16', 36)" class="t">IEnumerable</span>)<span class="o">.</span><span class="f">GetEnumerator</span>()

<span class="prep">#nowarn</span> <span class="s">&quot;40&quot;</span>

<span class="k">module</span> <span onmouseout="hideTip(event, 'fs5', 37)" onmouseover="showTip(event, 'fs5', 37)" class="t">Graph</span> <span class="o">=</span> 
    <span class="c">/// Reachable nodes from the given root</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 38)" onmouseover="showTip(event, 'fs21', 38)" class="f">reachableF</span> (<span onmouseout="hideTip(event, 'fs22', 39)" onmouseover="showTip(event, 'fs22', 39)" class="i">g</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 40)" onmouseover="showTip(event, 'fs5', 40)" class="t">Graph</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>) <span onmouseout="hideTip(event, 'fs23', 41)" onmouseover="showTip(event, 'fs23', 41)" class="f">k</span> (<span onmouseout="hideTip(event, 'fs24', 42)" onmouseover="showTip(event, 'fs24', 42)" class="i">root</span><span class="o">:</span><span class="o">&#39;</span><span class="i">a</span>) <span class="o">=</span> 
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs22', 43)" onmouseover="showTip(event, 'fs22', 43)" class="i">g</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 44)" onmouseover="showTip(event, 'fs25', 44)" class="f">TryFind</span> <span onmouseout="hideTip(event, 'fs24', 45)" onmouseover="showTip(event, 'fs24', 45)" class="i">root</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs26', 46)" onmouseover="showTip(event, 'fs26', 46)" class="p">None</span>    <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 47)" onmouseover="showTip(event, 'fs7', 47)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 48)" onmouseover="showTip(event, 'fs27', 48)" class="i">empty</span>
        | <span onmouseout="hideTip(event, 'fs28', 49)" onmouseover="showTip(event, 'fs28', 49)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs29', 50)" onmouseover="showTip(event, 'fs29', 50)" class="i">nn</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs30', 51)" onmouseover="showTip(event, 'fs30', 51)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 52)" onmouseover="showTip(event, 'fs31', 52)" class="f">map</span> <span onmouseout="hideTip(event, 'fs23', 53)" onmouseover="showTip(event, 'fs23', 53)" class="f">k</span> <span onmouseout="hideTip(event, 'fs29', 54)" onmouseover="showTip(event, 'fs29', 54)" class="i">nn</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs7', 55)" onmouseover="showTip(event, 'fs7', 55)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 56)" onmouseover="showTip(event, 'fs32', 56)" class="f">unionMany</span>

    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs33', 57)" onmouseover="showTip(event, 'fs33', 57)" class="f">fix</span> <span onmouseout="hideTip(event, 'fs34', 58)" onmouseover="showTip(event, 'fs34', 58)" class="f">f</span> <span onmouseout="hideTip(event, 'fs35', 59)" onmouseover="showTip(event, 'fs35', 59)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 60)" onmouseover="showTip(event, 'fs34', 60)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs33', 61)" onmouseover="showTip(event, 'fs33', 61)" class="f">fix</span> <span onmouseout="hideTip(event, 'fs34', 62)" onmouseover="showTip(event, 'fs34', 62)" class="f">f</span>) <span onmouseout="hideTip(event, 'fs35', 63)" onmouseover="showTip(event, 'fs35', 63)" class="i">x</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 64)" onmouseover="showTip(event, 'fs36', 64)" class="f">reachable</span> <span onmouseout="hideTip(event, 'fs22', 65)" onmouseover="showTip(event, 'fs22', 65)" class="i">g</span> <span onmouseout="hideTip(event, 'fs24', 66)" onmouseover="showTip(event, 'fs24', 66)" class="i">root</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 67)" onmouseover="showTip(event, 'fs33', 67)" class="f">fix</span> (<span onmouseout="hideTip(event, 'fs21', 68)" onmouseover="showTip(event, 'fs21', 68)" class="f">reachableF</span> <span onmouseout="hideTip(event, 'fs22', 69)" onmouseover="showTip(event, 'fs22', 69)" class="i">g</span>) <span onmouseout="hideTip(event, 'fs24', 70)" onmouseover="showTip(event, 'fs24', 70)" class="i">root</span>

    <span class="c">/// Builds a table of the dfs for every node in the graph</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 71)" onmouseover="showTip(event, 'fs37', 71)" class="f">reachableAll</span> <span onmouseout="hideTip(event, 'fs38', 72)" onmouseover="showTip(event, 'fs38', 72)" class="i">g</span> <span class="o">=</span>
        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs39', 73)" onmouseover="showTip(event, 'fs39', 73)" class="i">m</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 74)" onmouseover="showTip(event, 'fs38', 74)" class="i">g</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs6', 75)" onmouseover="showTip(event, 'fs6', 75)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 76)" onmouseover="showTip(event, 'fs40', 76)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs41', 77)" onmouseover="showTip(event, 'fs41', 77)" class="i">n</span> _ <span class="k">-&gt;</span> <span class="k">lazy</span>(<span onmouseout="hideTip(event, 'fs21', 78)" onmouseover="showTip(event, 'fs21', 78)" class="f">reachableF</span> <span onmouseout="hideTip(event, 'fs38', 79)" onmouseover="showTip(event, 'fs38', 79)" class="i">g</span> <span onmouseout="hideTip(event, 'fs42', 80)" onmouseover="showTip(event, 'fs42', 80)" class="f">k</span> <span onmouseout="hideTip(event, 'fs41', 81)" onmouseover="showTip(event, 'fs41', 81)" class="i">n</span>))
        <span class="k">and</span> <span onmouseout="hideTip(event, 'fs42', 82)" onmouseover="showTip(event, 'fs42', 82)" class="f">k</span>   <span onmouseout="hideTip(event, 'fs41', 83)" onmouseover="showTip(event, 'fs41', 83)" class="i">n</span>  <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 84)" onmouseover="showTip(event, 'fs39', 84)" class="i">m</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs41', 85)" onmouseover="showTip(event, 'fs41', 85)" class="i">n</span>]<span class="o">.</span><span class="i">Value</span>
        <span onmouseout="hideTip(event, 'fs39', 86)" onmouseover="showTip(event, 'fs39', 86)" class="i">m</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs6', 87)" onmouseover="showTip(event, 'fs6', 87)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 88)" onmouseover="showTip(event, 'fs40', 88)" class="f">map</span>(<span class="k">fun</span> _ <span onmouseout="hideTip(event, 'fs43', 89)" onmouseover="showTip(event, 'fs43', 89)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs43', 90)" onmouseover="showTip(event, 'fs43', 90)" class="i">e</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 91)" onmouseover="showTip(event, 'fs44', 91)" class="i">Value</span>)
                 
    <span class="c">/// The transitive reduction of a graph is the minimal set of edges with the same transitive closure</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs45', 92)" onmouseover="showTip(event, 'fs45', 92)" class="f">transitiveReductionHelper</span> (<span onmouseout="hideTip(event, 'fs46', 93)" onmouseover="showTip(event, 'fs46', 93)" class="i">dfss</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs6', 94)" onmouseover="showTip(event, 'fs6', 94)" class="t">Map</span><span class="o">&lt;</span>_,_<span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs22', 95)" onmouseover="showTip(event, 'fs22', 95)" class="i">g</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs5', 96)" onmouseover="showTip(event, 'fs5', 96)" class="t">Graph</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 97)" onmouseover="showTip(event, 'fs5', 97)" class="t">Graph</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">=</span>

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs47', 98)" onmouseover="showTip(event, 'fs47', 98)" class="f">reachable</span> <span onmouseout="hideTip(event, 'fs41', 99)" onmouseover="showTip(event, 'fs41', 99)" class="i">n</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 100)" onmouseover="showTip(event, 'fs7', 100)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 101)" onmouseover="showTip(event, 'fs48', 101)" class="f">add</span> <span onmouseout="hideTip(event, 'fs41', 102)" onmouseover="showTip(event, 'fs41', 102)" class="i">n</span> (<span onmouseout="hideTip(event, 'fs46', 103)" onmouseover="showTip(event, 'fs46', 103)" class="i">dfss</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs41', 104)" onmouseover="showTip(event, 'fs41', 104)" class="i">n</span>])

        <span onmouseout="hideTip(event, 'fs22', 105)" onmouseover="showTip(event, 'fs22', 105)" class="i">g</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs6', 106)" onmouseover="showTip(event, 'fs6', 106)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 107)" onmouseover="showTip(event, 'fs40', 107)" class="f">map</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs41', 108)" onmouseover="showTip(event, 'fs41', 108)" class="i">n</span> <span onmouseout="hideTip(event, 'fs49', 109)" onmouseover="showTip(event, 'fs49', 109)" class="i">ss</span> <span class="k">-&gt;</span> 
                <span onmouseout="hideTip(event, 'fs49', 110)" onmouseover="showTip(event, 'fs49', 110)" class="i">ss</span>
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 111)" onmouseover="showTip(event, 'fs30', 111)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 112)" onmouseover="showTip(event, 'fs31', 112)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs50', 113)" onmouseover="showTip(event, 'fs50', 113)" class="i">s</span> <span class="k">-&gt;</span> 
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs30', 114)" onmouseover="showTip(event, 'fs30', 114)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 115)" onmouseover="showTip(event, 'fs51', 115)" class="f">exists</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs52', 116)" onmouseover="showTip(event, 'fs52', 116)" class="i">s&#39;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs52', 117)" onmouseover="showTip(event, 'fs52', 117)" class="i">s&#39;</span> <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs50', 118)" onmouseover="showTip(event, 'fs50', 118)" class="i">s</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs47', 119)" onmouseover="showTip(event, 'fs47', 119)" class="f">reachable</span>(<span onmouseout="hideTip(event, 'fs52', 120)" onmouseover="showTip(event, 'fs52', 120)" class="i">s&#39;</span>)<span class="o">.</span><span class="f">Contains</span> <span onmouseout="hideTip(event, 'fs50', 121)" onmouseover="showTip(event, 'fs50', 121)" class="i">s</span>) <span onmouseout="hideTip(event, 'fs49', 122)" onmouseover="showTip(event, 'fs49', 122)" class="i">ss</span>
                    <span class="k">then</span> <span onmouseout="hideTip(event, 'fs26', 123)" onmouseover="showTip(event, 'fs26', 123)" class="p">None</span>
                     <span class="k">else</span> <span onmouseout="hideTip(event, 'fs28', 124)" onmouseover="showTip(event, 'fs28', 124)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs50', 125)" onmouseover="showTip(event, 'fs50', 125)" class="i">s</span>
                     )
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 126)" onmouseover="showTip(event, 'fs30', 126)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 127)" onmouseover="showTip(event, 'fs53', 127)" class="f">choose</span> <span onmouseout="hideTip(event, 'fs54', 128)" onmouseover="showTip(event, 'fs54', 128)" class="f">id</span>
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs7', 129)" onmouseover="showTip(event, 'fs7', 129)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 130)" onmouseover="showTip(event, 'fs55', 130)" class="f">ofSeq</span>)

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 131)" onmouseover="showTip(event, 'fs56', 131)" class="f">transitiveReduction</span> <span onmouseout="hideTip(event, 'fs38', 132)" onmouseover="showTip(event, 'fs38', 132)" class="i">g</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs45', 133)" onmouseover="showTip(event, 'fs45', 133)" class="f">transitiveReductionHelper</span> (<span onmouseout="hideTip(event, 'fs37', 134)" onmouseover="showTip(event, 'fs37', 134)" class="f">reachableAll</span> <span onmouseout="hideTip(event, 'fs38', 135)" onmouseover="showTip(event, 'fs38', 135)" class="i">g</span>) <span onmouseout="hideTip(event, 'fs38', 136)" onmouseover="showTip(event, 'fs38', 136)" class="i">g</span>

<span class="k">module</span> <span onmouseout="hideTip(event, 'fs57', 137)" onmouseover="showTip(event, 'fs57', 137)" class="t">Example</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 138)" onmouseover="showTip(event, 'fs58', 138)" class="i">g1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 139)" onmouseover="showTip(event, 'fs6', 139)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 140)" onmouseover="showTip(event, 'fs59', 140)" class="f">ofSeq</span> <span class="o">&lt;|</span>
                [ <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs7', 141)" onmouseover="showTip(event, 'fs7', 141)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 142)" onmouseover="showTip(event, 'fs55', 142)" class="f">ofSeq</span> [|<span class="n">1</span>;<span class="n">2</span>;<span class="n">3</span>|]
                  <span class="n">1</span>, <span onmouseout="hideTip(event, 'fs7', 143)" onmouseover="showTip(event, 'fs7', 143)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 144)" onmouseover="showTip(event, 'fs55', 144)" class="f">ofSeq</span> [|<span class="n">2</span>|]
                  <span class="n">2</span>, <span onmouseout="hideTip(event, 'fs7', 145)" onmouseover="showTip(event, 'fs7', 145)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 146)" onmouseover="showTip(event, 'fs55', 146)" class="f">ofSeq</span> [|<span class="n">3</span>|]
                  <span class="n">3</span>, <span onmouseout="hideTip(event, 'fs7', 147)" onmouseover="showTip(event, 'fs7', 147)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 148)" onmouseover="showTip(event, 'fs55', 148)" class="f">ofSeq</span> [| |]
                ]        

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 149)" onmouseover="showTip(event, 'fs60', 149)" class="i">g1&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 150)" onmouseover="showTip(event, 'fs1', 150)" class="t">Graph</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 151)" onmouseover="showTip(event, 'fs56', 151)" class="f">transitiveReduction</span> <span onmouseout="hideTip(event, 'fs58', 152)" onmouseover="showTip(event, 'fs58', 152)" class="i">g1</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />module Graph<br /><br />from Graph.TransitiveReduction<br /><br />--------------------<br />type Graph&lt;&#39;a (requires comparison)&gt; = Map&lt;&#39;a,Set&lt;&#39;a&gt;&gt;<br /><br />Full name: Graph.TransitiveReduction.Graph&lt;_&gt;<br /><em><br /><br />&#160;Adjacency list representation of a graph, mapping each vertex to its successors</em></div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace System.Collections</div>
<div class="tip" id="fs4">namespace System.Collections.Generic</div>
<div class="tip" id="fs5">type Graph&lt;&#39;a (requires comparison)&gt; = Map&lt;&#39;a,Set&lt;&#39;a&gt;&gt;<br /><br />Full name: Graph.TransitiveReduction.Graph&lt;_&gt;<br /><em><br /><br />&#160;Adjacency list representation of a graph, mapping each vertex to its successors</em></div>
<div class="tip" id="fs6">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member Remove : key:&#39;Key -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Map&lt;_,_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs7">Multiple items<br />module Set<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Set&lt;&#39;T (requires comparison)&gt; =<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;interface ICollection&lt;&#39;T&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Add : value:&#39;T -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Contains : value:&#39;T -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member IsProperSubsetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;member IsProperSupersetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Set&lt;_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;</div>
<div class="tip" id="fs8">type Tree&lt;&#39;a (requires comparison)&gt; =<br />&#160;&#160;{root: &#39;a;<br />&#160;&#160;&#160;sub: Tree&lt;&#39;a&gt; list;}<br />&#160;&#160;interface IEnumerable&lt;&#39;a&gt;<br />&#160;&#160;member ToSeq : unit -&gt; seq&lt;&#39;a&gt;<br /><br />Full name: Graph.TransitiveReduction.Tree&lt;_&gt;</div>
<div class="tip" id="fs9">Tree.root: &#39;a</div>
<div class="tip" id="fs10">Tree.sub: Tree&lt;&#39;a&gt; list</div>
<div class="tip" id="fs11">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs12">val this : Tree&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs13">member Tree.ToSeq : unit -&gt; seq&lt;&#39;a&gt;<br /><br />Full name: Graph.TransitiveReduction.Tree`1.ToSeq</div>
<div class="tip" id="fs14">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs15">val t : Tree&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs16">Multiple items<br />type IEnumerable =<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br /><br />Full name: System.Collections.IEnumerable<br /><br />--------------------<br />type IEnumerable&lt;&#39;T&gt; =<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator&lt;&#39;T&gt;<br /><br />Full name: System.Collections.Generic.IEnumerable&lt;_&gt;</div>
<div class="tip" id="fs17">override Tree.GetEnumerator : unit -&gt; IEnumerator&lt;&#39;a&gt;<br /><br />Full name: Graph.TransitiveReduction.Tree`1.GetEnumerator</div>
<div class="tip" id="fs18">Multiple items<br />type IEnumerator =<br />&#160;&#160;member Current : obj<br />&#160;&#160;member MoveNext : unit -&gt; bool<br />&#160;&#160;member Reset : unit -&gt; unit<br /><br />Full name: System.Collections.IEnumerator<br /><br />--------------------<br />type IEnumerator&lt;&#39;T&gt; =<br />&#160;&#160;member Current : &#39;T<br /><br />Full name: System.Collections.Generic.IEnumerator&lt;_&gt;</div>
<div class="tip" id="fs19">member Tree.ToSeq : unit -&gt; seq&lt;&#39;a&gt;</div>
<div class="tip" id="fs20">override Tree.GetEnumerator : unit -&gt; IEnumerator<br /><br />Full name: Graph.TransitiveReduction.Tree`1.GetEnumerator</div>
<div class="tip" id="fs21">val reachableF : g:Graph&lt;&#39;a&gt; -&gt; k:(&#39;a -&gt; Set&lt;&#39;a0&gt;) -&gt; root:&#39;a -&gt; Set&lt;&#39;a0&gt; (requires comparison and comparison)<br /><br />Full name: Graph.TransitiveReduction.Graph.reachableF<br /><em><br /><br />&#160;Reachable nodes from the given root</em></div>
<div class="tip" id="fs22">val g : Graph&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs23">val k : (&#39;a -&gt; Set&lt;&#39;a0&gt;) (requires comparison and comparison)</div>
<div class="tip" id="fs24">val root : &#39;a (requires comparison)</div>
<div class="tip" id="fs25">member Map.TryFind : key:&#39;Key -&gt; &#39;Value option</div>
<div class="tip" id="fs26">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs27">val empty&lt;&#39;T (requires comparison)&gt; : Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Set.empty</div>
<div class="tip" id="fs28">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs29">val nn : Set&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs30">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs31">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs32">val unionMany : sets:seq&lt;Set&lt;&#39;T&gt;&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Set.unionMany</div>
<div class="tip" id="fs33">val fix : f:((&#39;a -&gt; &#39;b) -&gt; &#39;a -&gt; &#39;b) -&gt; x:&#39;a -&gt; &#39;b<br /><br />Full name: Graph.TransitiveReduction.Graph.fix</div>
<div class="tip" id="fs34">val f : ((&#39;a -&gt; &#39;b) -&gt; &#39;a -&gt; &#39;b)</div>
<div class="tip" id="fs35">val x : &#39;a</div>
<div class="tip" id="fs36">val reachable : g:Graph&lt;&#39;a&gt; -&gt; root:&#39;a -&gt; Set&lt;&#39;b&gt; (requires comparison and comparison)<br /><br />Full name: Graph.TransitiveReduction.Graph.reachable</div>
<div class="tip" id="fs37">val reachableAll : g:Map&lt;&#39;a,Set&lt;&#39;a&gt;&gt; -&gt; Map&lt;&#39;a,Set&lt;&#39;b&gt;&gt; (requires comparison and comparison)<br /><br />Full name: Graph.TransitiveReduction.Graph.reachableAll<br /><em><br /><br />&#160;Builds a table of the dfs for every node in the graph</em></div>
<div class="tip" id="fs38">val g : Map&lt;&#39;a,Set&lt;&#39;a&gt;&gt; (requires comparison)</div>
<div class="tip" id="fs39">val m : Map&lt;&#39;a,Lazy&lt;Set&lt;&#39;b&gt;&gt;&gt; (requires comparison and comparison)</div>
<div class="tip" id="fs40">val map : mapping:(&#39;Key -&gt; &#39;T -&gt; &#39;U) -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; Map&lt;&#39;Key,&#39;U&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.map</div>
<div class="tip" id="fs41">val n : &#39;a (requires comparison)</div>
<div class="tip" id="fs42">val k : (&#39;a -&gt; Set&lt;&#39;b&gt;) (requires comparison and comparison)</div>
<div class="tip" id="fs43">val e : Lazy&lt;Set&lt;&#39;b&gt;&gt; (requires comparison)</div>
<div class="tip" id="fs44">property Lazy.Value: Set&lt;&#39;b&gt;</div>
<div class="tip" id="fs45">val transitiveReductionHelper : dfss:Map&lt;&#39;a,Set&lt;&#39;a&gt;&gt; -&gt; g:Graph&lt;&#39;a&gt; -&gt; Graph&lt;&#39;a&gt; (requires comparison)<br /><br />Full name: Graph.TransitiveReduction.Graph.transitiveReductionHelper<br /><em><br /><br />&#160;The transitive reduction of a graph is the minimal set of edges with the same transitive closure</em></div>
<div class="tip" id="fs46">val dfss : Map&lt;&#39;a,Set&lt;&#39;a&gt;&gt; (requires comparison)</div>
<div class="tip" id="fs47">val reachable : (&#39;a -&gt; Set&lt;&#39;a&gt;) (requires comparison)</div>
<div class="tip" id="fs48">val add : value:&#39;T -&gt; set:Set&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Set.add</div>
<div class="tip" id="fs49">val ss : Set&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs50">val s : &#39;a (requires comparison)</div>
<div class="tip" id="fs51">val exists : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.Seq.exists</div>
<div class="tip" id="fs52">val s&#39; : &#39;a (requires comparison)</div>
<div class="tip" id="fs53">val choose : chooser:(&#39;T -&gt; &#39;U option) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.choose</div>
<div class="tip" id="fs54">val id : x:&#39;T -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.id</div>
<div class="tip" id="fs55">val ofSeq : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Set.ofSeq</div>
<div class="tip" id="fs56">val transitiveReduction : g:Map&lt;&#39;a,Set&lt;&#39;a&gt;&gt; -&gt; Graph&lt;&#39;a&gt; (requires comparison)<br /><br />Full name: Graph.TransitiveReduction.Graph.transitiveReduction</div>
<div class="tip" id="fs57">module Example<br /><br />from Graph.TransitiveReduction</div>
<div class="tip" id="fs58">val g1 : Map&lt;int,Set&lt;int&gt;&gt;<br /><br />Full name: Graph.TransitiveReduction.Example.g1</div>
<div class="tip" id="fs59">val ofSeq : elements:seq&lt;&#39;Key * &#39;T&gt; -&gt; Map&lt;&#39;Key,&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.ofSeq</div>
<div class="tip" id="fs60">val g1&#39; : Graph&lt;int&gt;<br /><br />Full name: Graph.TransitiveReduction.Example.g1&#39;</div>

