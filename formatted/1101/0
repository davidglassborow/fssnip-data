<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Threading</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Windows</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="f">launch_window_on_new_thread</span>(<span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">title</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="v">w</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="f">ref</span> <span class="k">null</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="v">c</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="f">ref</span> <span class="k">null</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="i">h</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="t">ManualResetEventSlim</span>()
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="v">isAlive</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 14)" onmouseover="showTip(event, 'fs7', 14)" class="f">ref</span> <span class="k">true</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="f">launcher</span>() <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs6', 16)" onmouseover="showTip(event, 'fs6', 16)" class="v">w</span> <span class="o">:=</span> <span class="k">new</span> <span class="i">Window</span>()
        (<span class="o">!</span><span onmouseout="hideTip(event, 'fs6', 17)" onmouseover="showTip(event, 'fs6', 17)" class="v">w</span>)<span class="o">.</span><span class="i">Loaded</span><span class="o">.</span><span class="i">Add</span>(<span class="k">fun</span> _ <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs8', 18)" onmouseover="showTip(event, 'fs8', 18)" class="i">c</span> <span class="o">:=</span> <span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="i">SynchronizationContext</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="i">Current</span>
            <span onmouseout="hideTip(event, 'fs9', 21)" onmouseover="showTip(event, 'fs9', 21)" class="i">h</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="i">Set</span>())
        (<span class="o">!</span><span onmouseout="hideTip(event, 'fs6', 23)" onmouseover="showTip(event, 'fs6', 23)" class="v">w</span>)<span class="o">.</span><span class="i">Title</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs5', 24)" onmouseover="showTip(event, 'fs5', 24)" class="i">title</span>
        (<span class="o">!</span><span onmouseout="hideTip(event, 'fs6', 25)" onmouseover="showTip(event, 'fs6', 25)" class="v">w</span>)<span class="o">.</span><span class="i">ShowDialog</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="f">ignore</span>
        <span onmouseout="hideTip(event, 'fs11', 27)" onmouseover="showTip(event, 'fs11', 27)" class="v">isAlive</span> <span class="o">:=</span> <span class="k">false</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="i">thread</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="t">Thread</span>(<span onmouseout="hideTip(event, 'fs12', 30)" onmouseover="showTip(event, 'fs12', 30)" class="f">launcher</span>)
    <span onmouseout="hideTip(event, 'fs17', 31)" onmouseover="showTip(event, 'fs17', 31)" class="i">thread</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 32)" onmouseover="showTip(event, 'fs19', 32)" class="f">SetApartmentState</span>(<span onmouseout="hideTip(event, 'fs20', 33)" onmouseover="showTip(event, 'fs20', 33)" class="t">ApartmentState</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 34)" onmouseover="showTip(event, 'fs21', 34)" class="i">STA</span>)
    <span onmouseout="hideTip(event, 'fs17', 35)" onmouseover="showTip(event, 'fs17', 35)" class="i">thread</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 36)" onmouseover="showTip(event, 'fs22', 36)" class="i">IsBackground</span> <span class="o">&lt;-</span> <span class="k">true</span>
    <span onmouseout="hideTip(event, 'fs17', 37)" onmouseover="showTip(event, 'fs17', 37)" class="i">thread</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 38)" onmouseover="showTip(event, 'fs23', 38)" class="f">Start</span>()
    <span onmouseout="hideTip(event, 'fs9', 39)" onmouseover="showTip(event, 'fs9', 39)" class="i">h</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 40)" onmouseover="showTip(event, 'fs24', 40)" class="f">Wait</span>()
    <span onmouseout="hideTip(event, 'fs9', 41)" onmouseover="showTip(event, 'fs9', 41)" class="i">h</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 42)" onmouseover="showTip(event, 'fs25', 42)" class="f">Dispose</span>()
    <span class="o">!</span><span onmouseout="hideTip(event, 'fs6', 43)" onmouseover="showTip(event, 'fs6', 43)" class="v">w</span>,<span class="o">!</span><span onmouseout="hideTip(event, 'fs8', 44)" onmouseover="showTip(event, 'fs8', 44)" class="v">c</span>,<span onmouseout="hideTip(event, 'fs11', 45)" onmouseover="showTip(event, 'fs11', 45)" class="v">isAlive</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Threading</div>
<div class="tip" id="fs3">namespace System.Windows</div>
<div class="tip" id="fs4">val launch_window_on_new_thread : title:&#39;a -&gt; &#39;b * &#39;c * bool ref (requires &#39;b : null and &#39;c : null)<br /><br />Full name: Script.launch_window_on_new_thread</div>
<div class="tip" id="fs5">val title : &#39;a</div>
<div class="tip" id="fs6">val w : &#39;b ref (requires &#39;b : null)</div>
<div class="tip" id="fs7">Multiple items<br />val ref : value:&#39;T -&gt; &#39;T ref<br /><br />Full name: Microsoft.FSharp.Core.Operators.ref<br /><br />--------------------<br />type &#39;T ref = Ref&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.ref&lt;_&gt;</div>
<div class="tip" id="fs8">val c : &#39;c ref (requires &#39;c : null)</div>
<div class="tip" id="fs9">val h : ManualResetEventSlim</div>
<div class="tip" id="fs10">Multiple items<br />type ManualResetEventSlim =<br />&#160;&#160;new : unit -&gt; ManualResetEventSlim + 2 overloads<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member IsSet : bool with get, set<br />&#160;&#160;member Reset : unit -&gt; unit<br />&#160;&#160;member Set : unit -&gt; unit<br />&#160;&#160;member SpinCount : int with get, set<br />&#160;&#160;member Wait : unit -&gt; unit + 5 overloads<br />&#160;&#160;member WaitHandle : WaitHandle<br /><br />Full name: System.Threading.ManualResetEventSlim<br /><br />--------------------<br />ManualResetEventSlim() : unit<br />ManualResetEventSlim(initialState: bool) : unit<br />ManualResetEventSlim(initialState: bool, spinCount: int) : unit</div>
<div class="tip" id="fs11">val isAlive : bool ref</div>
<div class="tip" id="fs12">val launcher : (unit -&gt; unit)</div>
<div class="tip" id="fs13">Multiple items<br />type SynchronizationContext =<br />&#160;&#160;new : unit -&gt; SynchronizationContext<br />&#160;&#160;member CreateCopy : unit -&gt; SynchronizationContext<br />&#160;&#160;member IsWaitNotificationRequired : unit -&gt; bool<br />&#160;&#160;member OperationCompleted : unit -&gt; unit<br />&#160;&#160;member OperationStarted : unit -&gt; unit<br />&#160;&#160;member Post : d:SendOrPostCallback * state:obj -&gt; unit<br />&#160;&#160;member Send : d:SendOrPostCallback * state:obj -&gt; unit<br />&#160;&#160;member Wait : waitHandles:nativeint[] * waitAll:bool * millisecondsTimeout:int -&gt; int<br />&#160;&#160;static member Current : SynchronizationContext<br />&#160;&#160;static member SetSynchronizationContext : syncContext:SynchronizationContext -&gt; unit<br /><br />Full name: System.Threading.SynchronizationContext<br /><br />--------------------<br />SynchronizationContext() : unit</div>
<div class="tip" id="fs14">property SynchronizationContext.Current: SynchronizationContext</div>
<div class="tip" id="fs15">ManualResetEventSlim.Set() : unit</div>
<div class="tip" id="fs16">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>
<div class="tip" id="fs17">val thread : Thread</div>
<div class="tip" id="fs18">Multiple items<br />type Thread =<br />&#160;&#160;inherit CriticalFinalizerObject<br />&#160;&#160;new : start:ThreadStart -&gt; Thread + 3 overloads<br />&#160;&#160;member Abort : unit -&gt; unit + 1 overload<br />&#160;&#160;member ApartmentState : ApartmentState with get, set<br />&#160;&#160;member CurrentCulture : CultureInfo with get, set<br />&#160;&#160;member CurrentUICulture : CultureInfo with get, set<br />&#160;&#160;member DisableComObjectEagerCleanup : unit -&gt; unit<br />&#160;&#160;member ExecutionContext : ExecutionContext<br />&#160;&#160;member GetApartmentState : unit -&gt; ApartmentState<br />&#160;&#160;member GetCompressedStack : unit -&gt; CompressedStack<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.Threading.Thread<br /><br />--------------------<br />Thread(start: ThreadStart) : unit<br />Thread(start: ParameterizedThreadStart) : unit<br />Thread(start: ThreadStart, maxStackSize: int) : unit<br />Thread(start: ParameterizedThreadStart, maxStackSize: int) : unit</div>
<div class="tip" id="fs19">Thread.SetApartmentState(state: ApartmentState) : unit</div>
<div class="tip" id="fs20">type ApartmentState =<br />&#160;&#160;| STA = 0<br />&#160;&#160;| MTA = 1<br />&#160;&#160;| Unknown = 2<br /><br />Full name: System.Threading.ApartmentState</div>
<div class="tip" id="fs21">field ApartmentState.STA = 0</div>
<div class="tip" id="fs22">property Thread.IsBackground: bool</div>
<div class="tip" id="fs23">Thread.Start() : unit<br />Thread.Start(parameter: obj) : unit</div>
<div class="tip" id="fs24">ManualResetEventSlim.Wait() : unit<br />ManualResetEventSlim.Wait(millisecondsTimeout: int) : bool<br />ManualResetEventSlim.Wait(timeout: System.TimeSpan) : bool<br />ManualResetEventSlim.Wait(cancellationToken: CancellationToken) : unit<br />ManualResetEventSlim.Wait(millisecondsTimeout: int, cancellationToken: CancellationToken) : bool<br />ManualResetEventSlim.Wait(timeout: System.TimeSpan, cancellationToken: CancellationToken) : bool</div>
<div class="tip" id="fs25">ManualResetEventSlim.Dispose() : unit</div>

