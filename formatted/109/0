<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
<span class="l">6: </span>
<span class="l">7: </span>
<span class="l">8: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span class="t">ReflectiveListBuilder</span> <span class="o">=</span> 
    <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">BuildList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">args</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">obj</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">list</span>) <span class="o">=</span> 
        [ <span class="k">for</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">a</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs2', 6)" onmouseover="showTip(event, 'fs2', 6)" class="i">args</span> <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">a</span> <span class="o">:?&gt;</span> <span class="o">&#39;</span><span class="i">a</span> ] 
    <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="f">BuildTypedList</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">lType</span> (<span onmouseout="hideTip(event, 'fs2', 10)" onmouseover="showTip(event, 'fs2', 10)" class="i">args</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 11)" onmouseover="showTip(event, 'fs3', 11)" class="t">obj</span> <span onmouseout="hideTip(event, 'fs4', 12)" onmouseover="showTip(event, 'fs4', 12)" class="t">list</span>) <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="t">ReflectiveListBuilder</span><span class="o">&gt;</span>
            <span class="o">.</span><span class="f">GetMethod</span>(<span class="s">&quot;BuildList&quot;</span>)
            <span class="o">.</span><span class="f">MakeGenericMethod</span>([|<span onmouseout="hideTip(event, 'fs7', 15)" onmouseover="showTip(event, 'fs7', 15)" class="i">lType</span>|])
            <span class="o">.</span><span class="f">Invoke</span>(<span class="k">null</span>, [|<span onmouseout="hideTip(event, 'fs2', 16)" onmouseover="showTip(event, 'fs2', 16)" class="i">args</span>|])
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">static member ReflectiveListBuilder.BuildList : args:obj list -&gt; &#39;a list<br /><br />Full name: Script.ReflectiveListBuilder.BuildList</div>
<div class="tip" id="fs2">val args : obj list</div>
<div class="tip" id="fs3">type obj = System.Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs4">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs5">val a : obj</div>
<div class="tip" id="fs6">static member ReflectiveListBuilder.BuildTypedList : lType:System.Type -&gt; args:obj list -&gt; obj<br /><br />Full name: Script.ReflectiveListBuilder.BuildTypedList</div>
<div class="tip" id="fs7">val lType : System.Type</div>
<div class="tip" id="fs8">val typeof&lt;&#39;T&gt; : System.Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs9">type ReflectiveListBuilder =<br />&#160;&#160;static member BuildList : args:obj list -&gt; &#39;a list<br />&#160;&#160;static member BuildTypedList : lType:Type -&gt; args:obj list -&gt; obj<br /><br />Full name: Script.ReflectiveListBuilder</div>

