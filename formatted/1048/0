<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>

<span class="c">/// Each survey question in LivePerson has it&#39;s own unique id/name.</span>
<span class="c">/// E.g. NPS survey question is something like: </span>
<span class="c">///         &quot;How likely are you to suggest&quot; might be &quot;survey889802129&quot;</span>
<span class="c">/// Even though the question stays the same, each LOB in chat has it&#39;s</span>
<span class="c">/// own ID/name for the NPS question, which makes it a pain to pull them all</span>
<span class="c">/// together to run numbers.</span>
<span class="c">/// For example, the following are all the same question, in different lines of business:</span>
        <span class="c">//NPS</span>
        <span class="c">//	Appliance		survey889802123</span>
        <span class="c">//	Bath			survey889802129</span>
        <span class="c">//	Carpet			survey095702179</span>
        <span class="c">//	Cart			survey889802135</span>
        <span class="c">//	Cust Serv		survey889802153</span>
        <span class="c">//	Flooring		survey889802159</span>
        <span class="c">//	Husky			survey889802164</span>
        <span class="c">//	Outdoors		survey889802169</span>
        <span class="c">//	Water Heat		survey889802174</span>

<span class="c">// First I define a type that stands for any list of survey names/id&#39;s, with a method to test</span>
<span class="c">// a survey name to see if it exists in my list.</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">SurveyList</span>(<span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">repList</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">seq</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">string</span><span class="o">&gt;</span>) <span class="o">=</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="f">contains</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="i">surveyName</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="f">exists</span> ((<span class="o">=</span>) <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">surveyName</span>) <span onmouseout="hideTip(event, 'fs3', 12)" onmouseover="showTip(event, 'fs3', 12)" class="i">repList</span>

<span class="c">// Create a SurveyList of all the NPS survey ID names.</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="i">npsSurveyList</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 14)" onmouseover="showTip(event, 'fs2', 14)" class="t">SurveyList</span>([<span class="s">&quot;survey889802123&quot;</span>; <span class="s">&quot;survey889802129&quot;</span>;<span class="s">&quot;survey095702179&quot;</span>;
                                <span class="s">&quot;survey889802135&quot;</span>;<span class="s">&quot;survey889802153&quot;</span>;<span class="s">&quot;survey889802159&quot;</span>;
                                <span class="s">&quot;survey889802164&quot;</span>;<span class="s">&quot;survey889802169&quot;</span>;<span class="s">&quot;survey889802174&quot;</span>])

<span class="c">// I could have built everything above into the Active Pattern below,</span>
<span class="c">// but I liked having &quot;if npsSurveyList.contains surveyName&quot; because</span>
<span class="c">// it&#39;s clear to me.</span>
<span class="c">// Create an Active Pattern that matches an NPS survey:</span>
<span class="k">let</span> (|<span class="p">IsNpsSurveyScore</span>|<span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="p">None</span>|) <span onmouseout="hideTip(event, 'fs8', 16)" onmouseover="showTip(event, 'fs8', 16)" class="i">surveyName</span> <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">npsSurveyList</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="f">contains</span> <span onmouseout="hideTip(event, 'fs8', 19)" onmouseover="showTip(event, 'fs8', 19)" class="i">surveyName</span> <span class="k">then</span> <span class="p">IsNpsSurveyScore</span> <span class="k">else</span> <span class="p">None</span>

<span class="c">// Pretending I got the name of a varValue from a transcript</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="i">varValueName</span> <span class="o">=</span> <span class="s">&quot;survey889802123&quot;</span>

<span class="c">// Match the name with a list of possible names, then return a string about what the thing is.</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="i">whatIsIt</span> <span class="o">=</span>
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs14', 22)" onmouseover="showTip(event, 'fs14', 22)" class="i">varValueName</span> <span class="k">with</span>
    | <span class="s">&quot;skill&quot;</span> <span class="k">-&gt;</span> <span class="s">&quot;This is the agent&#39;s skill.&quot;</span>
    | <span class="s">&quot;OrderTotal&quot;</span> <span class="k">-&gt;</span> <span class="s">&quot;This is the dollar value of the order&quot;</span>
    | <span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="p">IsNpsSurveyScore</span> <span class="k">-&gt;</span> <span class="s">&quot;This is an NPS survey score&quot;</span>
    | _ <span class="k">-&gt;</span> <span class="s">&quot;None of the above&quot;</span>

<span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="f">WriteLine</span>(<span onmouseout="hideTip(event, 'fs15', 26)" onmouseover="showTip(event, 'fs15', 26)" class="i">whatIsIt</span>) <span class="c">// Prints &quot;This is an NPS survey score&quot;</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">Multiple items<br />type SurveyList =<br />&#160;&#160;new : repList:seq&lt;string&gt; -&gt; SurveyList<br />&#160;&#160;member contains : surveyName:string -&gt; bool<br /><br />Full name: Script.SurveyList<br /><em><br /><br />&#160;Each survey question in LivePerson has it&#39;s own unique id/name.<br />&#160;E.g. NPS survey question is something like: <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;How likely are you to suggest&quot; might be &quot;survey889802129&quot;<br />&#160;Even though the question stays the same, each LOB in chat has it&#39;s<br />&#160;own ID/name for the NPS question, which makes it a pain to pull them all<br />&#160;together to run numbers.<br />&#160;For example, the following are all the same question, in different lines of business:</em><br /><br />--------------------<br />new : repList:seq&lt;string&gt; -&gt; SurveyList</div>
<div class="tip" id="fs3">val repList : seq&lt;string&gt;</div>
<div class="tip" id="fs4">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs5">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs6">val this : SurveyList</div>
<div class="tip" id="fs7">member SurveyList.contains : surveyName:string -&gt; bool<br /><br />Full name: Script.SurveyList.contains</div>
<div class="tip" id="fs8">val surveyName : string</div>
<div class="tip" id="fs9">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs10">val exists : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.Seq.exists</div>
<div class="tip" id="fs11">val npsSurveyList : SurveyList<br /><br />Full name: Script.npsSurveyList</div>
<div class="tip" id="fs12">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs13">member SurveyList.contains : surveyName:string -&gt; bool</div>
<div class="tip" id="fs14">val varValueName : string<br /><br />Full name: Script.varValueName</div>
<div class="tip" id="fs15">val whatIsIt : string<br /><br />Full name: Script.whatIsIt</div>
<div class="tip" id="fs16">active recognizer IsNpsSurveyScore: string -&gt; Choice&lt;unit,unit&gt;<br /><br />Full name: Script.( |IsNpsSurveyScore|None| )</div>
<div class="tip" id="fs17">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs18">Console.WriteLine() : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: obj) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: decimal) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>

