<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// Inspired by http://www.cs.utexas.edu/~wcook/Drafts/2006/MemoMixins.pdf</span>

<span class="c">// State Monad combined with Continuation Monad (StateT Monad transformer)</span>
<span class="k">type</span> <span class="t">StateContMonad</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">s</span>, <span class="o">&#39;</span><span class="i">a</span>, <span class="o">&#39;</span><span class="i">r</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="p">StateContMonad</span> <span class="k">of</span> (<span class="o">&#39;</span><span class="i">s</span> <span class="k">-&gt;</span> (<span class="o">&#39;</span><span class="i">s</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">r</span>) <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">r</span>)

<span class="c">// Computation Builder</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">StateContBuilder</span>() <span class="o">=</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">self</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="f">Return</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">value</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs1', 6)" onmouseover="showTip(event, 'fs1', 6)" class="p">StateContMonad</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">state</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="f">k</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="f">k</span> <span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="i">state</span> <span onmouseout="hideTip(event, 'fs5', 11)" onmouseover="showTip(event, 'fs5', 11)" class="i">value</span>)
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs3', 12)" onmouseover="showTip(event, 'fs3', 12)" class="i">self</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs1', 14)" onmouseover="showTip(event, 'fs1', 14)" class="p">StateContMonad</span> <span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="f">contStateMonad</span>, <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="f">f</span>) <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs1', 17)" onmouseover="showTip(event, 'fs1', 17)" class="p">StateContMonad</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="i">state</span> <span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="f">k</span> <span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs9', 20)" onmouseover="showTip(event, 'fs9', 20)" class="f">contStateMonad</span> <span onmouseout="hideTip(event, 'fs11', 21)" onmouseover="showTip(event, 'fs11', 21)" class="i">state</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="i">state&#39;</span> <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="i">value</span> <span class="k">-&gt;</span> 
                <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs1', 24)" onmouseover="showTip(event, 'fs1', 24)" class="p">StateContMonad</span> <span onmouseout="hideTip(event, 'fs15', 25)" onmouseover="showTip(event, 'fs15', 25)" class="f">contMonad&#39;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 26)" onmouseover="showTip(event, 'fs10', 26)" class="f">f</span> <span onmouseout="hideTip(event, 'fs14', 27)" onmouseover="showTip(event, 'fs14', 27)" class="i">value</span>
                <span onmouseout="hideTip(event, 'fs15', 28)" onmouseover="showTip(event, 'fs15', 28)" class="f">contMonad&#39;</span> <span onmouseout="hideTip(event, 'fs13', 29)" onmouseover="showTip(event, 'fs13', 29)" class="i">state&#39;</span> <span onmouseout="hideTip(event, 'fs12', 30)" onmouseover="showTip(event, 'fs12', 30)" class="f">k</span>))
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs3', 31)" onmouseover="showTip(event, 'fs3', 31)" class="i">self</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 32)" onmouseover="showTip(event, 'fs16', 32)" class="f">Delay</span>( <span onmouseout="hideTip(event, 'fs17', 33)" onmouseover="showTip(event, 'fs17', 33)" class="f">f</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs18', 34)" onmouseover="showTip(event, 'fs18', 34)" class="t">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs1', 35)" onmouseover="showTip(event, 'fs1', 35)" class="t">StateContMonad</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">s</span>, <span class="o">&#39;</span><span class="i">a</span>, <span class="o">&#39;</span><span class="i">r</span><span class="o">&gt;</span> ) <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs1', 36)" onmouseover="showTip(event, 'fs1', 36)" class="p">StateContMonad</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs19', 37)" onmouseover="showTip(event, 'fs19', 37)" class="i">state</span> <span onmouseout="hideTip(event, 'fs20', 38)" onmouseover="showTip(event, 'fs20', 38)" class="f">k</span> <span class="k">-&gt;</span> 
            <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs1', 39)" onmouseover="showTip(event, 'fs1', 39)" class="p">StateContMonad</span> <span onmouseout="hideTip(event, 'fs21', 40)" onmouseover="showTip(event, 'fs21', 40)" class="f">contStateMonad</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 41)" onmouseover="showTip(event, 'fs17', 41)" class="f">f</span> ()
            <span onmouseout="hideTip(event, 'fs21', 42)" onmouseover="showTip(event, 'fs21', 42)" class="f">contStateMonad</span> <span onmouseout="hideTip(event, 'fs19', 43)" onmouseover="showTip(event, 'fs19', 43)" class="i">state</span> <span onmouseout="hideTip(event, 'fs20', 44)" onmouseover="showTip(event, 'fs20', 44)" class="f">k</span>)
 
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 45)" onmouseover="showTip(event, 'fs22', 45)" class="i">memo</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs2', 46)" onmouseover="showTip(event, 'fs2', 46)" class="t">StateContBuilder</span>()
 
<span class="c">// Tell me Y </span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs23', 47)" onmouseover="showTip(event, 'fs23', 47)" class="f">Y</span> <span onmouseout="hideTip(event, 'fs24', 48)" onmouseover="showTip(event, 'fs24', 48)" class="f">f</span> <span onmouseout="hideTip(event, 'fs25', 49)" onmouseover="showTip(event, 'fs25', 49)" class="i">v</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 50)" onmouseover="showTip(event, 'fs24', 50)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs23', 51)" onmouseover="showTip(event, 'fs23', 51)" class="f">Y</span> <span onmouseout="hideTip(event, 'fs24', 52)" onmouseover="showTip(event, 'fs24', 52)" class="f">f</span>) <span onmouseout="hideTip(event, 'fs25', 53)" onmouseover="showTip(event, 'fs25', 53)" class="i">v</span>

<span class="c">// Map functions</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 54)" onmouseover="showTip(event, 'fs26', 54)" class="f">check</span> (<span onmouseout="hideTip(event, 'fs27', 55)" onmouseover="showTip(event, 'fs27', 55)" class="i">value</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs1', 56)" onmouseover="showTip(event, 'fs1', 56)" class="t">StateContMonad</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs28', 57)" onmouseover="showTip(event, 'fs28', 57)" class="t">Map</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span>, <span class="o">&#39;</span><span class="i">r</span><span class="o">&gt;</span>, <span onmouseout="hideTip(event, 'fs29', 58)" onmouseover="showTip(event, 'fs29', 58)" class="t">option</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">r</span><span class="o">&gt;</span>, <span class="o">&#39;</span><span class="i">r</span><span class="o">&gt;</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs1', 59)" onmouseover="showTip(event, 'fs1', 59)" class="p">StateContMonad</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs30', 60)" onmouseover="showTip(event, 'fs30', 60)" class="i">map</span> <span onmouseout="hideTip(event, 'fs31', 61)" onmouseover="showTip(event, 'fs31', 61)" class="f">k</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 62)" onmouseover="showTip(event, 'fs31', 62)" class="f">k</span> <span onmouseout="hideTip(event, 'fs30', 63)" onmouseover="showTip(event, 'fs30', 63)" class="i">map</span> (<span onmouseout="hideTip(event, 'fs28', 64)" onmouseover="showTip(event, 'fs28', 64)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 65)" onmouseover="showTip(event, 'fs32', 65)" class="f">tryFind</span> <span onmouseout="hideTip(event, 'fs27', 66)" onmouseover="showTip(event, 'fs27', 66)" class="i">value</span> <span onmouseout="hideTip(event, 'fs30', 67)" onmouseover="showTip(event, 'fs30', 67)" class="i">map</span>))

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 68)" onmouseover="showTip(event, 'fs33', 68)" class="f">store</span> (<span onmouseout="hideTip(event, 'fs34', 69)" onmouseover="showTip(event, 'fs34', 69)" class="i">argument</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>, <span onmouseout="hideTip(event, 'fs35', 70)" onmouseover="showTip(event, 'fs35', 70)" class="i">result</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">r</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs1', 71)" onmouseover="showTip(event, 'fs1', 71)" class="t">StateContMonad</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs28', 72)" onmouseover="showTip(event, 'fs28', 72)" class="t">Map</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span>, <span class="o">&#39;</span><span class="i">r</span><span class="o">&gt;</span>, <span onmouseout="hideTip(event, 'fs18', 73)" onmouseover="showTip(event, 'fs18', 73)" class="t">unit</span>, <span class="o">&#39;</span><span class="i">r</span><span class="o">&gt;</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs1', 74)" onmouseover="showTip(event, 'fs1', 74)" class="p">StateContMonad</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs30', 75)" onmouseover="showTip(event, 'fs30', 75)" class="i">map</span> <span onmouseout="hideTip(event, 'fs36', 76)" onmouseover="showTip(event, 'fs36', 76)" class="f">k</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs36', 77)" onmouseover="showTip(event, 'fs36', 77)" class="f">k</span> (<span onmouseout="hideTip(event, 'fs28', 78)" onmouseover="showTip(event, 'fs28', 78)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 79)" onmouseover="showTip(event, 'fs37', 79)" class="f">add</span> <span onmouseout="hideTip(event, 'fs34', 80)" onmouseover="showTip(event, 'fs34', 80)" class="i">argument</span> <span onmouseout="hideTip(event, 'fs35', 81)" onmouseover="showTip(event, 'fs35', 81)" class="i">result</span> <span onmouseout="hideTip(event, 'fs30', 82)" onmouseover="showTip(event, 'fs30', 82)" class="i">map</span>) ())

<span class="c">// Memoization Mixin</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 83)" onmouseover="showTip(event, 'fs38', 83)" class="f">memoize</span> <span onmouseout="hideTip(event, 'fs39', 84)" onmouseover="showTip(event, 'fs39', 84)" class="f">f</span> <span onmouseout="hideTip(event, 'fs34', 85)" onmouseover="showTip(event, 'fs34', 85)" class="i">argument</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs22', 86)" onmouseover="showTip(event, 'fs22', 86)" class="i">memo</span> {
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs40', 87)" onmouseover="showTip(event, 'fs40', 87)" class="i">checkResult</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 88)" onmouseover="showTip(event, 'fs26', 88)" class="f">check</span> <span onmouseout="hideTip(event, 'fs34', 89)" onmouseover="showTip(event, 'fs34', 89)" class="i">argument</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs40', 90)" onmouseover="showTip(event, 'fs40', 90)" class="i">checkResult</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs41', 91)" onmouseover="showTip(event, 'fs41', 91)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs42', 92)" onmouseover="showTip(event, 'fs42', 92)" class="i">result</span> <span class="k">-&gt;</span> <span class="k">return</span> <span onmouseout="hideTip(event, 'fs42', 93)" onmouseover="showTip(event, 'fs42', 93)" class="i">result</span>
        | <span onmouseout="hideTip(event, 'fs43', 94)" onmouseover="showTip(event, 'fs43', 94)" class="p">None</span> <span class="k">-&gt;</span>
            <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs42', 95)" onmouseover="showTip(event, 'fs42', 95)" class="i">result</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 96)" onmouseover="showTip(event, 'fs39', 96)" class="f">f</span> <span onmouseout="hideTip(event, 'fs34', 97)" onmouseover="showTip(event, 'fs34', 97)" class="i">argument</span>
            <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs33', 98)" onmouseover="showTip(event, 'fs33', 98)" class="f">store</span> (<span onmouseout="hideTip(event, 'fs34', 99)" onmouseover="showTip(event, 'fs34', 99)" class="i">argument</span>, <span onmouseout="hideTip(event, 'fs42', 100)" onmouseover="showTip(event, 'fs42', 100)" class="i">result</span>)
            <span class="k">return</span> <span onmouseout="hideTip(event, 'fs42', 101)" onmouseover="showTip(event, 'fs42', 101)" class="i">result</span>
    }


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 102)" onmouseover="showTip(event, 'fs44', 102)" class="f">execute</span> <span onmouseout="hideTip(event, 'fs45', 103)" onmouseover="showTip(event, 'fs45', 103)" class="f">f</span> <span onmouseout="hideTip(event, 'fs46', 104)" onmouseover="showTip(event, 'fs46', 104)" class="i">n</span> <span class="o">=</span> 
    <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs1', 105)" onmouseover="showTip(event, 'fs1', 105)" class="p">StateContMonad</span> <span onmouseout="hideTip(event, 'fs47', 106)" onmouseover="showTip(event, 'fs47', 106)" class="f">contStateMonad</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 107)" onmouseover="showTip(event, 'fs23', 107)" class="f">Y</span> (<span onmouseout="hideTip(event, 'fs38', 108)" onmouseover="showTip(event, 'fs38', 108)" class="f">memoize</span> <span class="o">&lt;&lt;</span> <span onmouseout="hideTip(event, 'fs45', 109)" onmouseover="showTip(event, 'fs45', 109)" class="f">f</span>) <span onmouseout="hideTip(event, 'fs46', 110)" onmouseover="showTip(event, 'fs46', 110)" class="i">n</span>
    <span onmouseout="hideTip(event, 'fs47', 111)" onmouseover="showTip(event, 'fs47', 111)" class="f">contStateMonad</span> <span onmouseout="hideTip(event, 'fs28', 112)" onmouseover="showTip(event, 'fs28', 112)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 113)" onmouseover="showTip(event, 'fs48', 113)" class="i">empty</span> (<span class="k">fun</span> _ <span onmouseout="hideTip(event, 'fs14', 114)" onmouseover="showTip(event, 'fs14', 114)" class="i">value</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 115)" onmouseover="showTip(event, 'fs14', 115)" class="i">value</span>)
 
<span class="c">// Example</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs49', 116)" onmouseover="showTip(event, 'fs49', 116)" class="f">big</span> (<span onmouseout="hideTip(event, 'fs50', 117)" onmouseover="showTip(event, 'fs50', 117)" class="i">value</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs51', 118)" onmouseover="showTip(event, 'fs51', 118)" class="t">int</span>) <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs52', 119)" onmouseover="showTip(event, 'fs52', 119)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 120)" onmouseover="showTip(event, 'fs53', 120)" class="i">Numerics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs54', 121)" onmouseover="showTip(event, 'fs54', 121)" class="t">BigInteger</span>(<span onmouseout="hideTip(event, 'fs50', 122)" onmouseover="showTip(event, 'fs50', 122)" class="i">value</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs55', 123)" onmouseover="showTip(event, 'fs55', 123)" class="f">fib</span> <span onmouseout="hideTip(event, 'fs56', 124)" onmouseover="showTip(event, 'fs56', 124)" class="f">f</span> <span onmouseout="hideTip(event, 'fs57', 125)" onmouseover="showTip(event, 'fs57', 125)" class="i">n</span> <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs57', 126)" onmouseover="showTip(event, 'fs57', 126)" class="i">n</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 127)" onmouseover="showTip(event, 'fs49', 127)" class="f">big</span> <span class="n">0</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs22', 128)" onmouseover="showTip(event, 'fs22', 128)" class="i">memo</span> { <span class="k">return</span> <span onmouseout="hideTip(event, 'fs49', 129)" onmouseover="showTip(event, 'fs49', 129)" class="f">big</span> <span class="n">0</span> }
    <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs57', 130)" onmouseover="showTip(event, 'fs57', 130)" class="i">n</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 131)" onmouseover="showTip(event, 'fs49', 131)" class="f">big</span> <span class="n">1</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs22', 132)" onmouseover="showTip(event, 'fs22', 132)" class="i">memo</span> { <span class="k">return</span> <span onmouseout="hideTip(event, 'fs49', 133)" onmouseover="showTip(event, 'fs49', 133)" class="f">big</span> <span class="n">1</span> }
    <span class="k">else</span>
        <span onmouseout="hideTip(event, 'fs22', 134)" onmouseover="showTip(event, 'fs22', 134)" class="i">memo</span> {
            <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs58', 135)" onmouseover="showTip(event, 'fs58', 135)" class="i">nMinus1Fib</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs56', 136)" onmouseover="showTip(event, 'fs56', 136)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs57', 137)" onmouseover="showTip(event, 'fs57', 137)" class="i">n</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs49', 138)" onmouseover="showTip(event, 'fs49', 138)" class="f">big</span> <span class="n">1</span>)
            <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs59', 139)" onmouseover="showTip(event, 'fs59', 139)" class="i">nMinus2Fib</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs56', 140)" onmouseover="showTip(event, 'fs56', 140)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs57', 141)" onmouseover="showTip(event, 'fs57', 141)" class="i">n</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs49', 142)" onmouseover="showTip(event, 'fs49', 142)" class="f">big</span> <span class="n">2</span>)
            <span class="k">return</span> <span onmouseout="hideTip(event, 'fs58', 143)" onmouseover="showTip(event, 'fs58', 143)" class="i">nMinus1Fib</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs59', 144)" onmouseover="showTip(event, 'fs59', 144)" class="i">nMinus2Fib</span>
        }
 
<span onmouseout="hideTip(event, 'fs44', 145)" onmouseover="showTip(event, 'fs44', 145)" class="f">execute</span> <span onmouseout="hideTip(event, 'fs55', 146)" onmouseover="showTip(event, 'fs55', 146)" class="f">fib</span> (<span onmouseout="hideTip(event, 'fs49', 147)" onmouseover="showTip(event, 'fs49', 147)" class="f">big</span> <span class="n">100000</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />union case StateContMonad.StateContMonad: (&#39;s -&gt; (&#39;s -&gt; &#39;a -&gt; &#39;r) -&gt; &#39;r) -&gt; StateContMonad&lt;&#39;s,&#39;a,&#39;r&gt;<br /><br />--------------------<br />type StateContMonad&lt;&#39;s,&#39;a,&#39;r&gt; = | StateContMonad of (&#39;s -&gt; (&#39;s -&gt; &#39;a -&gt; &#39;r) -&gt; &#39;r)<br /><br />Full name: Script.StateContMonad&lt;_,_,_&gt;</div>
<div class="tip" id="fs2">Multiple items<br />type StateContBuilder =<br />&#160;&#160;new : unit -&gt; StateContBuilder<br />&#160;&#160;member Bind : StateContMonad&lt;&#39;a,&#39;b,&#39;c&gt; * f:(&#39;b -&gt; StateContMonad&lt;&#39;a,&#39;d,&#39;c&gt;) -&gt; StateContMonad&lt;&#39;a,&#39;d,&#39;c&gt;<br />&#160;&#160;member Delay : f:(unit -&gt; StateContMonad&lt;&#39;s,&#39;a,&#39;r&gt;) -&gt; StateContMonad&lt;&#39;s,&#39;a,&#39;r&gt;<br />&#160;&#160;member Return : value:&#39;e -&gt; StateContMonad&lt;&#39;f,&#39;e,&#39;g&gt;<br /><br />Full name: Script.StateContBuilder<br /><br />--------------------<br />new : unit -&gt; StateContBuilder</div>
<div class="tip" id="fs3">val self : StateContBuilder</div>
<div class="tip" id="fs4">member StateContBuilder.Return : value:&#39;e -&gt; StateContMonad&lt;&#39;f,&#39;e,&#39;g&gt;<br /><br />Full name: Script.StateContBuilder.Return</div>
<div class="tip" id="fs5">val value : &#39;e</div>
<div class="tip" id="fs6">val state : &#39;f</div>
<div class="tip" id="fs7">val k : (&#39;f -&gt; &#39;e -&gt; &#39;g)</div>
<div class="tip" id="fs8">member StateContBuilder.Bind : StateContMonad&lt;&#39;a,&#39;b,&#39;c&gt; * f:(&#39;b -&gt; StateContMonad&lt;&#39;a,&#39;d,&#39;c&gt;) -&gt; StateContMonad&lt;&#39;a,&#39;d,&#39;c&gt;<br /><br />Full name: Script.StateContBuilder.Bind</div>
<div class="tip" id="fs9">val contStateMonad : (&#39;a -&gt; (&#39;a -&gt; &#39;b -&gt; &#39;c) -&gt; &#39;c)</div>
<div class="tip" id="fs10">val f : (&#39;b -&gt; StateContMonad&lt;&#39;a,&#39;d,&#39;c&gt;)</div>
<div class="tip" id="fs11">val state : &#39;a</div>
<div class="tip" id="fs12">val k : (&#39;a -&gt; &#39;d -&gt; &#39;c)</div>
<div class="tip" id="fs13">val state&#39; : &#39;a</div>
<div class="tip" id="fs14">val value : &#39;b</div>
<div class="tip" id="fs15">val contMonad&#39; : (&#39;a -&gt; (&#39;a -&gt; &#39;d -&gt; &#39;c) -&gt; &#39;c)</div>
<div class="tip" id="fs16">member StateContBuilder.Delay : f:(unit -&gt; StateContMonad&lt;&#39;s,&#39;a,&#39;r&gt;) -&gt; StateContMonad&lt;&#39;s,&#39;a,&#39;r&gt;<br /><br />Full name: Script.StateContBuilder.Delay</div>
<div class="tip" id="fs17">val f : (unit -&gt; StateContMonad&lt;&#39;s,&#39;a,&#39;r&gt;)</div>
<div class="tip" id="fs18">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs19">val state : &#39;s</div>
<div class="tip" id="fs20">val k : (&#39;s -&gt; &#39;a -&gt; &#39;r)</div>
<div class="tip" id="fs21">val contStateMonad : (&#39;s -&gt; (&#39;s -&gt; &#39;a -&gt; &#39;r) -&gt; &#39;r)</div>
<div class="tip" id="fs22">val memo : StateContBuilder<br /><br />Full name: Script.memo</div>
<div class="tip" id="fs23">val Y : f:((&#39;a -&gt; &#39;b) -&gt; &#39;a -&gt; &#39;b) -&gt; v:&#39;a -&gt; &#39;b<br /><br />Full name: Script.Y</div>
<div class="tip" id="fs24">val f : ((&#39;a -&gt; &#39;b) -&gt; &#39;a -&gt; &#39;b)</div>
<div class="tip" id="fs25">val v : &#39;a</div>
<div class="tip" id="fs26">val check : value:&#39;a -&gt; StateContMonad&lt;Map&lt;&#39;a,&#39;r&gt;,&#39;r option,&#39;r&gt; (requires comparison)<br /><br />Full name: Script.check</div>
<div class="tip" id="fs27">val value : &#39;a (requires comparison)</div>
<div class="tip" id="fs28">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member Remove : key:&#39;Key -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Map&lt;_,_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs29">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs30">val map : Map&lt;&#39;a,&#39;r&gt; (requires comparison)</div>
<div class="tip" id="fs31">val k : (Map&lt;&#39;a,&#39;r&gt; -&gt; &#39;r option -&gt; &#39;r) (requires comparison)</div>
<div class="tip" id="fs32">val tryFind : key:&#39;Key -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; &#39;T option (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.tryFind</div>
<div class="tip" id="fs33">val store : argument:&#39;a * result:&#39;r -&gt; StateContMonad&lt;Map&lt;&#39;a,&#39;r&gt;,unit,&#39;r&gt; (requires comparison)<br /><br />Full name: Script.store</div>
<div class="tip" id="fs34">val argument : &#39;a (requires comparison)</div>
<div class="tip" id="fs35">val result : &#39;r</div>
<div class="tip" id="fs36">val k : (Map&lt;&#39;a,&#39;r&gt; -&gt; unit -&gt; &#39;r) (requires comparison)</div>
<div class="tip" id="fs37">val add : key:&#39;Key -&gt; value:&#39;T -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; Map&lt;&#39;Key,&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.add</div>
<div class="tip" id="fs38">val memoize : f:(&#39;a -&gt; StateContMonad&lt;Map&lt;&#39;a,&#39;b&gt;,&#39;b,&#39;b&gt;) -&gt; argument:&#39;a -&gt; StateContMonad&lt;Map&lt;&#39;a,&#39;b&gt;,&#39;b,&#39;b&gt; (requires comparison)<br /><br />Full name: Script.memoize</div>
<div class="tip" id="fs39">val f : (&#39;a -&gt; StateContMonad&lt;Map&lt;&#39;a,&#39;b&gt;,&#39;b,&#39;b&gt;) (requires comparison)</div>
<div class="tip" id="fs40">val checkResult : &#39;b option</div>
<div class="tip" id="fs41">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs42">val result : &#39;b</div>
<div class="tip" id="fs43">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs44">val execute : f:((&#39;a -&gt; StateContMonad&lt;Map&lt;&#39;a,&#39;b&gt;,&#39;b,&#39;b&gt;) -&gt; &#39;a -&gt; StateContMonad&lt;Map&lt;&#39;a,&#39;b&gt;,&#39;b,&#39;b&gt;) -&gt; n:&#39;a -&gt; &#39;b (requires comparison)<br /><br />Full name: Script.execute</div>
<div class="tip" id="fs45">val f : ((&#39;a -&gt; StateContMonad&lt;Map&lt;&#39;a,&#39;b&gt;,&#39;b,&#39;b&gt;) -&gt; &#39;a -&gt; StateContMonad&lt;Map&lt;&#39;a,&#39;b&gt;,&#39;b,&#39;b&gt;) (requires comparison)</div>
<div class="tip" id="fs46">val n : &#39;a (requires comparison)</div>
<div class="tip" id="fs47">val contStateMonad : (Map&lt;&#39;a,&#39;b&gt; -&gt; (Map&lt;&#39;a,&#39;b&gt; -&gt; &#39;b -&gt; &#39;b) -&gt; &#39;b) (requires comparison)</div>
<div class="tip" id="fs48">val empty&lt;&#39;Key,&#39;T (requires comparison)&gt; : Map&lt;&#39;Key,&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.empty</div>
<div class="tip" id="fs49">val big : value:int -&gt; System.Numerics.BigInteger<br /><br />Full name: Script.big</div>
<div class="tip" id="fs50">val value : int</div>
<div class="tip" id="fs51">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs52">namespace System</div>
<div class="tip" id="fs53">namespace System.Numerics</div>
<div class="tip" id="fs54">Multiple items<br />type BigInteger =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : value:int -&gt; BigInteger + 7 overloads<br />&#160;&#160;&#160;&#160;member CompareTo : other:int64 -&gt; int + 3 overloads<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 3 overloads<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member IsEven : bool<br />&#160;&#160;&#160;&#160;member IsOne : bool<br />&#160;&#160;&#160;&#160;member IsPowerOfTwo : bool<br />&#160;&#160;&#160;&#160;member IsZero : bool<br />&#160;&#160;&#160;&#160;member Sign : int<br />&#160;&#160;&#160;&#160;member ToByteArray : unit -&gt; byte[]<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Numerics.BigInteger<br /><br />--------------------<br />System.Numerics.BigInteger()<br />System.Numerics.BigInteger(value: int) : unit<br />System.Numerics.BigInteger(value: uint32) : unit<br />System.Numerics.BigInteger(value: int64) : unit<br />System.Numerics.BigInteger(value: uint64) : unit<br />System.Numerics.BigInteger(value: float32) : unit<br />System.Numerics.BigInteger(value: float) : unit<br />System.Numerics.BigInteger(value: decimal) : unit<br />System.Numerics.BigInteger(value: byte []) : unit</div>
<div class="tip" id="fs55">val fib : f:(System.Numerics.BigInteger -&gt; StateContMonad&lt;&#39;a,System.Numerics.BigInteger,&#39;b&gt;) -&gt; n:System.Numerics.BigInteger -&gt; StateContMonad&lt;&#39;a,System.Numerics.BigInteger,&#39;b&gt;<br /><br />Full name: Script.fib</div>
<div class="tip" id="fs56">val f : (System.Numerics.BigInteger -&gt; StateContMonad&lt;&#39;a,System.Numerics.BigInteger,&#39;b&gt;)</div>
<div class="tip" id="fs57">val n : System.Numerics.BigInteger</div>
<div class="tip" id="fs58">val nMinus1Fib : System.Numerics.BigInteger</div>
<div class="tip" id="fs59">val nMinus2Fib : System.Numerics.BigInteger</div>

