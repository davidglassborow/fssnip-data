<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">///</span>
<span class="k">module</span> <span class="t">Target</span> <span class="o">=</span> 
    
  <span class="c">/// There are three types of compilation</span>
  <span class="c">/// targets. Eval for code compiled through</span>
  <span class="c">/// the eval function, Global for code</span>
  <span class="c">/// that is compiled in the global scope</span>
  <span class="c">/// and Function for code inside function bodies</span>
  <span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Mode</span>
    <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="p">Eval</span>
    | <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="p">Global</span>
    | <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="p">Function</span>

  <span class="c">/// Record that represents a compilation target</span>
  <span class="c">/// which is a grouping of the following properties:</span>
  <span class="c">/// </span>
  <span class="c">/// * Ast - The syntax tree to compile</span>
  <span class="c">/// * Mode - The target mode (eval, global or function)</span>
  <span class="c">/// * DelegateType - The target delegate signature we&#39;re targeting</span>
  <span class="c">/// * ParameterTypes - The parameter types of the delegate signature&#39;s invoke method</span>
  <span class="c">/// * Environment - The IronJS environment object we&#39;re compiling for</span>
  <span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">T</span> <span class="o">=</span> {
    <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">Ast</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">Ast</span><span class="o">.</span><span class="i">Tree</span>
    <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">Mode</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="t">Mode</span>
    <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">DelegateType</span><span class="o">:</span> <span class="i">Type</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="t">option</span>
    <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">ParameterTypes</span><span class="o">:</span> <span class="i">Type</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="t">array</span>
    <span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="i">Environment</span><span class="o">:</span> <span class="i">Env</span>
  }

  <span class="c">/// The amount of parameters for this target</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="f">parameterCount</span> (<span onmouseout="hideTip(event, 'fs14', 16)" onmouseover="showTip(event, 'fs14', 16)" class="i">t</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs5', 17)" onmouseover="showTip(event, 'fs5', 17)" class="t">T</span>) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 19)" onmouseover="showTip(event, 'fs10', 19)" class="i">ParameterTypes</span><span class="o">.</span><span class="i">Length</span>

  <span class="c">/// Extracts the parameter types from a delegate</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="f">getParameterTypes</span> <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs16', 21)" onmouseover="showTip(event, 'fs16', 21)" class="p">None</span> <span class="k">-&gt;</span> [||]
    | <span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="i">delegateType</span><span class="o">:</span><span class="i">Type</span>) <span class="k">-&gt;</span> 
      <span onmouseout="hideTip(event, 'fs18', 24)" onmouseover="showTip(event, 'fs18', 24)" class="i">delegateType</span> 
      <span class="o">$</span> <span onmouseout="hideTip(event, 'fs19', 25)" onmouseover="showTip(event, 'fs19', 25)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 26)" onmouseover="showTip(event, 'fs20', 26)" class="i">Reflection</span><span class="o">.</span><span class="i">getDelegateParameterTypes</span> 
      <span class="o">$</span> <span onmouseout="hideTip(event, 'fs19', 27)" onmouseover="showTip(event, 'fs19', 27)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 28)" onmouseover="showTip(event, 'fs21', 28)" class="i">Array</span><span class="o">.</span><span class="i">skip</span> <span class="n">2</span>

  <span class="c">/// Creates a new T record</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 29)" onmouseover="showTip(event, 'fs22', 29)" class="f">create</span> <span onmouseout="hideTip(event, 'fs23', 30)" onmouseover="showTip(event, 'fs23', 30)" class="i">ast</span> <span onmouseout="hideTip(event, 'fs24', 31)" onmouseover="showTip(event, 'fs24', 31)" class="i">mode</span> <span onmouseout="hideTip(event, 'fs25', 32)" onmouseover="showTip(event, 'fs25', 32)" class="i">delegateType</span> <span onmouseout="hideTip(event, 'fs26', 33)" onmouseover="showTip(event, 'fs26', 33)" class="i">env</span> <span class="o">=</span>
    {
      <span class="i">Ast</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 34)" onmouseover="showTip(event, 'fs23', 34)" class="i">ast</span>
      <span onmouseout="hideTip(event, 'fs1', 35)" onmouseover="showTip(event, 'fs1', 35)" class="i">Mode</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 36)" onmouseover="showTip(event, 'fs24', 36)" class="i">mode</span>
      <span class="i">Environment</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 37)" onmouseover="showTip(event, 'fs26', 37)" class="i">env</span>
      <span class="i">DelegateType</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 38)" onmouseover="showTip(event, 'fs25', 38)" class="i">delegateType</span>
      <span class="i">ParameterTypes</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 39)" onmouseover="showTip(event, 'fs25', 39)" class="i">delegateType</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 40)" onmouseover="showTip(event, 'fs15', 40)" class="f">getParameterTypes</span>
    }
    
  <span class="c">/// Creates a new T record with Eval mode</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 41)" onmouseover="showTip(event, 'fs27', 41)" class="f">createEval</span> <span onmouseout="hideTip(event, 'fs23', 42)" onmouseover="showTip(event, 'fs23', 42)" class="i">ast</span> <span onmouseout="hideTip(event, 'fs26', 43)" onmouseover="showTip(event, 'fs26', 43)" class="i">env</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs26', 44)" onmouseover="showTip(event, 'fs26', 44)" class="i">env</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs22', 45)" onmouseover="showTip(event, 'fs22', 45)" class="f">create</span> <span onmouseout="hideTip(event, 'fs23', 46)" onmouseover="showTip(event, 'fs23', 46)" class="i">ast</span> <span onmouseout="hideTip(event, 'fs1', 47)" onmouseover="showTip(event, 'fs1', 47)" class="t">Mode</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 48)" onmouseover="showTip(event, 'fs2', 48)" class="p">Eval</span> <span onmouseout="hideTip(event, 'fs16', 49)" onmouseover="showTip(event, 'fs16', 49)" class="p">None</span>

  <span class="c">/// Creates a new T record with Global mode</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 50)" onmouseover="showTip(event, 'fs28', 50)" class="f">createGlobal</span> <span onmouseout="hideTip(event, 'fs23', 51)" onmouseover="showTip(event, 'fs23', 51)" class="i">ast</span> <span onmouseout="hideTip(event, 'fs26', 52)" onmouseover="showTip(event, 'fs26', 52)" class="i">env</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs26', 53)" onmouseover="showTip(event, 'fs26', 53)" class="i">env</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs22', 54)" onmouseover="showTip(event, 'fs22', 54)" class="f">create</span> <span onmouseout="hideTip(event, 'fs23', 55)" onmouseover="showTip(event, 'fs23', 55)" class="i">ast</span> <span onmouseout="hideTip(event, 'fs1', 56)" onmouseover="showTip(event, 'fs1', 56)" class="t">Mode</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 57)" onmouseover="showTip(event, 'fs3', 57)" class="p">Global</span> <span onmouseout="hideTip(event, 'fs16', 58)" onmouseover="showTip(event, 'fs16', 58)" class="p">None</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">type Mode =<br />&#160;&#160;| Eval<br />&#160;&#160;| Global<br />&#160;&#160;| Function<br /><br />Full name: Script.Target.Mode<br /><em><br /><br />&#160;There are three types of compilation<br />&#160;targets. Eval for code compiled through<br />&#160;the eval function, Global for code<br />&#160;that is compiled in the global scope<br />&#160;and Function for code inside function bodies</em></div>
<div class="tip" id="fs2">union case Mode.Eval: Mode</div>
<div class="tip" id="fs3">union case Mode.Global: Mode</div>
<div class="tip" id="fs4">union case Mode.Function: Mode</div>
<div class="tip" id="fs5">type T =<br />&#160;&#160;{Ast: obj;<br />&#160;&#160;&#160;Mode: Mode;<br />&#160;&#160;&#160;DelegateType: obj;<br />&#160;&#160;&#160;ParameterTypes: obj;<br />&#160;&#160;&#160;Environment: obj;}<br /><br />Full name: Script.Target.T<br /><em><br /><br />&#160;Record that represents a compilation target<br />&#160;which is a grouping of the following properties:<br />&#160;<br />&#160;* Ast - The syntax tree to compile<br />&#160;* Mode - The target mode (eval, global or function)<br />&#160;* DelegateType - The target delegate signature we&#39;re targeting<br />&#160;* ParameterTypes - The parameter types of the delegate signature&#39;s invoke method<br />&#160;* Environment - The IronJS environment object we&#39;re compiling for</em></div>
<div class="tip" id="fs6">T.Ast: obj</div>
<div class="tip" id="fs7">Multiple items<br />T.Mode: Mode<br /><br />--------------------<br />type Mode =<br />&#160;&#160;| Eval<br />&#160;&#160;| Global<br />&#160;&#160;| Function<br /><br />Full name: Script.Target.Mode<br /><em><br /><br />&#160;There are three types of compilation<br />&#160;targets. Eval for code compiled through<br />&#160;the eval function, Global for code<br />&#160;that is compiled in the global scope<br />&#160;and Function for code inside function bodies</em></div>
<div class="tip" id="fs8">T.DelegateType: obj</div>
<div class="tip" id="fs9">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs10">T.ParameterTypes: obj</div>
<div class="tip" id="fs11">type &#39;T array = &#39;T []<br /><br />Full name: Microsoft.FSharp.Core.array&lt;_&gt;</div>
<div class="tip" id="fs12">T.Environment: obj</div>
<div class="tip" id="fs13">val parameterCount : t:T -&gt; &#39;a<br /><br />Full name: Script.Target.parameterCount<br /><em><br /><br />&#160;The amount of parameters for this target</em></div>
<div class="tip" id="fs14">val t : T</div>
<div class="tip" id="fs15">val getParameterTypes : _arg1:obj option -&gt; obj []<br /><br />Full name: Script.Target.getParameterTypes<br /><em><br /><br />&#160;Extracts the parameter types from a delegate</em></div>
<div class="tip" id="fs16">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs17">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs18">val delegateType : obj</div>
<div class="tip" id="fs19">namespace Microsoft.FSharp</div>
<div class="tip" id="fs20">namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs21">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs22">val create : ast:&#39;a -&gt; mode:Mode -&gt; delegateType:obj option -&gt; env:&#39;b -&gt; T<br /><br />Full name: Script.Target.create<br /><em><br /><br />&#160;Creates a new T record</em></div>
<div class="tip" id="fs23">val ast : &#39;a</div>
<div class="tip" id="fs24">val mode : Mode</div>
<div class="tip" id="fs25">val delegateType : obj option</div>
<div class="tip" id="fs26">val env : &#39;a</div>
<div class="tip" id="fs27">val createEval : ast:&#39;a -&gt; env:&#39;b -&gt; T<br /><br />Full name: Script.Target.createEval<br /><em><br /><br />&#160;Creates a new T record with Eval mode</em></div>
<div class="tip" id="fs28">val createGlobal : ast:&#39;a -&gt; env:&#39;b -&gt; T<br /><br />Full name: Script.Target.createGlobal<br /><em><br /><br />&#160;Creates a new T record with Global mode</em></div>

