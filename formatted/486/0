<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">namespace</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">FSharp</span><span class="o">.</span><span class="i">Converters</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Windows</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">Windows</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="i">Data</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs1', 9)" onmouseover="showTip(event, 'fs1', 9)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="i">Reflection</span>

[&lt;<span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="t">AutoOpen</span>&gt;]
<span class="k">module</span> <span class="t">FunctionLibrary</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="f">nullFunction</span> <span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="i">value</span> _ _ _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">value</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="f">stringToInt</span> (<span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="i">a</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="t">Object</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="t">Convert</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="f">ToInt32</span>(<span onmouseout="hideTip(event, 'fs11', 20)" onmouseover="showTip(event, 'fs11', 20)" class="i">a</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="f">intToBool</span> <span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="i">i</span> <span class="o">=</span> <span class="n">0</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="f">boolToVisibility</span> <span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="i">b</span> <span class="k">-&gt;</span> 
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs18', 26)" onmouseover="showTip(event, 'fs18', 26)" class="i">b</span> <span class="k">then</span> <span class="i">Visibility</span><span class="o">.</span><span class="i">Visible</span>
        <span class="k">else</span> <span class="i">Visibility</span><span class="o">.</span><span class="i">Collapsed</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 27)" onmouseover="showTip(event, 'fs19', 27)" class="f">convert</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs20', 28)" onmouseover="showTip(event, 'fs20', 28)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs21', 29)" onmouseover="showTip(event, 'fs21', 29)" class="i">obj</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs2', 30)" onmouseover="showTip(event, 'fs2', 30)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 31)" onmouseover="showTip(event, 'fs12', 31)" class="t">Object</span>) (<span onmouseout="hideTip(event, 'fs22', 32)" onmouseover="showTip(event, 'fs22', 32)" class="i">t</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs23', 33)" onmouseover="showTip(event, 'fs23', 33)" class="t">Type</span>) (<span onmouseout="hideTip(event, 'fs24', 34)" onmouseover="showTip(event, 'fs24', 34)" class="i">para</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs2', 35)" onmouseover="showTip(event, 'fs2', 35)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 36)" onmouseover="showTip(event, 'fs12', 36)" class="t">Object</span>) (<span onmouseout="hideTip(event, 'fs25', 37)" onmouseover="showTip(event, 'fs25', 37)" class="i">culture</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs26', 38)" onmouseover="showTip(event, 'fs26', 38)" class="i">Globalization</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 39)" onmouseover="showTip(event, 'fs27', 39)" class="t">CultureInfo</span>)  <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs21', 40)" onmouseover="showTip(event, 'fs21', 40)" class="i">obj</span> <span class="o">:?&gt;</span> <span class="o">&#39;</span><span class="i">T</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs20', 41)" onmouseover="showTip(event, 'fs20', 41)" class="f">f</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs28', 42)" onmouseover="showTip(event, 'fs28', 42)" class="f">box</span>
    

<span class="c">/// abstract class for converter</span>
[&lt;<span onmouseout="hideTip(event, 'fs29', 43)" onmouseover="showTip(event, 'fs29', 43)" class="t">AbstractClass</span>&gt;]
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs30', 44)" onmouseover="showTip(event, 'fs30', 44)" class="t">ConverterBase</span>(<span onmouseout="hideTip(event, 'fs31', 45)" onmouseover="showTip(event, 'fs31', 45)" class="f">convertFunction</span>, <span onmouseout="hideTip(event, 'fs32', 46)" onmouseover="showTip(event, 'fs32', 46)" class="f">convertBackFunction</span>) <span class="o">=</span>    
    <span class="c">/// constructor take nullFunction as inputs</span>
    <span class="k">new</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 47)" onmouseover="showTip(event, 'fs30', 47)" class="t">ConverterBase</span>(<span onmouseout="hideTip(event, 'fs8', 48)" onmouseover="showTip(event, 'fs8', 48)" class="f">nullFunction</span>, <span onmouseout="hideTip(event, 'fs8', 49)" onmouseover="showTip(event, 'fs8', 49)" class="f">nullFunction</span>)

    <span class="c">// implement the IValueConverter</span>
    <span class="k">interface</span> <span class="i">IValueConverter</span> <span class="k">with</span>
        <span class="c">/// convert a value to new value</span>
        <span class="k">override</span> <span onmouseout="hideTip(event, 'fs33', 50)" onmouseover="showTip(event, 'fs33', 50)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 51)" onmouseover="showTip(event, 'fs34', 51)" class="f">Convert</span>(<span onmouseout="hideTip(event, 'fs35', 52)" onmouseover="showTip(event, 'fs35', 52)" class="i">value</span>, <span onmouseout="hideTip(event, 'fs36', 53)" onmouseover="showTip(event, 'fs36', 53)" class="i">targetType</span>, <span onmouseout="hideTip(event, 'fs37', 54)" onmouseover="showTip(event, 'fs37', 54)" class="i">parameter</span>, <span onmouseout="hideTip(event, 'fs38', 55)" onmouseover="showTip(event, 'fs38', 55)" class="i">culture</span>) <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs33', 56)" onmouseover="showTip(event, 'fs33', 56)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 57)" onmouseover="showTip(event, 'fs39', 57)" class="i">Convert</span> <span onmouseout="hideTip(event, 'fs35', 58)" onmouseover="showTip(event, 'fs35', 58)" class="i">value</span> <span onmouseout="hideTip(event, 'fs36', 59)" onmouseover="showTip(event, 'fs36', 59)" class="i">targetType</span> <span onmouseout="hideTip(event, 'fs37', 60)" onmouseover="showTip(event, 'fs37', 60)" class="i">parameter</span> <span onmouseout="hideTip(event, 'fs38', 61)" onmouseover="showTip(event, 'fs38', 61)" class="i">culture</span>

        <span class="c">/// convert a value back</span>
        <span class="k">override</span> <span onmouseout="hideTip(event, 'fs33', 62)" onmouseover="showTip(event, 'fs33', 62)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 63)" onmouseover="showTip(event, 'fs40', 63)" class="f">ConvertBack</span>(<span onmouseout="hideTip(event, 'fs9', 64)" onmouseover="showTip(event, 'fs9', 64)" class="i">value</span>, <span onmouseout="hideTip(event, 'fs41', 65)" onmouseover="showTip(event, 'fs41', 65)" class="i">targetType</span>, <span onmouseout="hideTip(event, 'fs42', 66)" onmouseover="showTip(event, 'fs42', 66)" class="i">parameter</span>, <span onmouseout="hideTip(event, 'fs43', 67)" onmouseover="showTip(event, 'fs43', 67)" class="i">culture</span>) <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs33', 68)" onmouseover="showTip(event, 'fs33', 68)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 69)" onmouseover="showTip(event, 'fs44', 69)" class="i">ConvertBack</span> <span onmouseout="hideTip(event, 'fs9', 70)" onmouseover="showTip(event, 'fs9', 70)" class="i">value</span> <span onmouseout="hideTip(event, 'fs41', 71)" onmouseover="showTip(event, 'fs41', 71)" class="i">targetType</span> <span onmouseout="hideTip(event, 'fs42', 72)" onmouseover="showTip(event, 'fs42', 72)" class="i">parameter</span> <span onmouseout="hideTip(event, 'fs43', 73)" onmouseover="showTip(event, 'fs43', 73)" class="i">culture</span>
    
    <span class="k">abstract</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs45', 74)" onmouseover="showTip(event, 'fs45', 74)" class="i">Convert</span> <span class="o">:</span> (<span onmouseout="hideTip(event, 'fs46', 75)" onmouseover="showTip(event, 'fs46', 75)" class="t">obj</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs23', 76)" onmouseover="showTip(event, 'fs23', 76)" class="t">Type</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs46', 77)" onmouseover="showTip(event, 'fs46', 77)" class="t">obj</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs26', 78)" onmouseover="showTip(event, 'fs26', 78)" class="i">Globalization</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 79)" onmouseover="showTip(event, 'fs27', 79)" class="t">CultureInfo</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs46', 80)" onmouseover="showTip(event, 'fs46', 80)" class="t">obj</span>)
    <span class="k">default</span> <span onmouseout="hideTip(event, 'fs33', 81)" onmouseover="showTip(event, 'fs33', 81)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 82)" onmouseover="showTip(event, 'fs47', 82)" class="i">Convert</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 83)" onmouseover="showTip(event, 'fs31', 83)" class="f">convertFunction</span>

    <span class="k">abstract</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs48', 84)" onmouseover="showTip(event, 'fs48', 84)" class="i">ConvertBack</span> <span class="o">:</span> (<span onmouseout="hideTip(event, 'fs46', 85)" onmouseover="showTip(event, 'fs46', 85)" class="t">obj</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs23', 86)" onmouseover="showTip(event, 'fs23', 86)" class="t">Type</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs46', 87)" onmouseover="showTip(event, 'fs46', 87)" class="t">obj</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs26', 88)" onmouseover="showTip(event, 'fs26', 88)" class="i">Globalization</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 89)" onmouseover="showTip(event, 'fs27', 89)" class="t">CultureInfo</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs46', 90)" onmouseover="showTip(event, 'fs46', 90)" class="t">obj</span>)
    <span class="k">default</span> <span onmouseout="hideTip(event, 'fs33', 91)" onmouseover="showTip(event, 'fs33', 91)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 92)" onmouseover="showTip(event, 'fs49', 92)" class="i">ConvertBack</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 93)" onmouseover="showTip(event, 'fs32', 93)" class="f">convertBackFunction</span>

<span class="c">/// Sample concrete implementation</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs50', 94)" onmouseover="showTip(event, 'fs50', 94)" class="t">StringToVisiblityConverter</span>() <span class="o">=</span>
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs30', 95)" onmouseover="showTip(event, 'fs30', 95)" class="t">ConverterBase</span>(<span onmouseout="hideTip(event, 'fs10', 96)" onmouseover="showTip(event, 'fs10', 96)" class="f">stringToInt</span><span class="o">&gt;</span><span class="o">&gt;</span><span onmouseout="hideTip(event, 'fs15', 97)" onmouseover="showTip(event, 'fs15', 97)" class="f">intToBool</span><span class="o">&gt;</span><span class="o">&gt;</span><span onmouseout="hideTip(event, 'fs17', 98)" onmouseover="showTip(event, 'fs17', 98)" class="f">boolToVisibility</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs19', 99)" onmouseover="showTip(event, 'fs19', 99)" class="f">convert</span>, <span onmouseout="hideTip(event, 'fs8', 100)" onmouseover="showTip(event, 'fs8', 100)" class="f">nullFunction</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace Microsoft.FSharp</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace System.Windows</div>
<div class="tip" id="fs4">Multiple items<br />namespace System.Data<br /><br />--------------------<br />namespace Microsoft.FSharp.Data</div>
<div class="tip" id="fs5">namespace Microsoft</div>
<div class="tip" id="fs6">namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs7">Multiple items<br />type AutoOpenAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AutoOpenAttribute<br />&#160;&#160;new : path:string -&gt; AutoOpenAttribute<br />&#160;&#160;member Path : string<br /><br />Full name: Microsoft.FSharp.Core.AutoOpenAttribute<br /><br />--------------------<br />new : unit -&gt; AutoOpenAttribute<br />new : path:string -&gt; AutoOpenAttribute</div>
<div class="tip" id="fs8">val nullFunction : value:&#39;a -&gt; &#39;b -&gt; &#39;c -&gt; &#39;d -&gt; &#39;a<br /><br />Full name: FSharp.Converters.FunctionLibrary.nullFunction</div>
<div class="tip" id="fs9">val value : &#39;a</div>
<div class="tip" id="fs10">val stringToInt : a:Object -&gt; int<br /><br />Full name: FSharp.Converters.FunctionLibrary.stringToInt</div>
<div class="tip" id="fs11">val a : Object</div>
<div class="tip" id="fs12">Multiple items<br />type Object =<br />&#160;&#160;new : unit -&gt; obj<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetType : unit -&gt; Type<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;static member Equals : objA:obj * objB:obj -&gt; bool<br />&#160;&#160;static member ReferenceEquals : objA:obj * objB:obj -&gt; bool<br /><br />Full name: System.Object<br /><br />--------------------<br />Object() : unit</div>
<div class="tip" id="fs13">type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>
<div class="tip" id="fs14">Convert.ToInt32(value: DateTime) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: string) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: decimal) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: float) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: float32) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: uint64) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: int64) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: int) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: uint32) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: uint16) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs15">val intToBool : i:int -&gt; bool<br /><br />Full name: FSharp.Converters.FunctionLibrary.intToBool</div>
<div class="tip" id="fs16">val i : int</div>
<div class="tip" id="fs17">val boolToVisibility : b:bool -&gt; &#39;a<br /><br />Full name: FSharp.Converters.FunctionLibrary.boolToVisibility</div>
<div class="tip" id="fs18">val b : bool</div>
<div class="tip" id="fs19">val convert : f:(&#39;T -&gt; obj) -&gt; obj:Object -&gt; t:Type -&gt; para:Object -&gt; culture:Globalization.CultureInfo -&gt; obj<br /><br />Full name: FSharp.Converters.FunctionLibrary.convert</div>
<div class="tip" id="fs20">val f : (&#39;T -&gt; obj)</div>
<div class="tip" id="fs21">Multiple items<br />val obj : Object<br /><br />--------------------<br />type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs22">val t : Type</div>
<div class="tip" id="fs23">type Type =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Assembly : Assembly<br />&#160;&#160;member AssemblyQualifiedName : string<br />&#160;&#160;member Attributes : TypeAttributes<br />&#160;&#160;member BaseType : Type<br />&#160;&#160;member ContainsGenericParameters : bool<br />&#160;&#160;member DeclaringMethod : MethodBase<br />&#160;&#160;member DeclaringType : Type<br />&#160;&#160;member Equals : o:obj -&gt; bool + 1 overload<br />&#160;&#160;member FindInterfaces : filter:TypeFilter * filterCriteria:obj -&gt; Type[]<br />&#160;&#160;member FindMembers : memberType:MemberTypes * bindingAttr:BindingFlags * filter:MemberFilter * filterCriteria:obj -&gt; MemberInfo[]<br />&#160;&#160;...<br /><br />Full name: System.Type</div>
<div class="tip" id="fs24">val para : Object</div>
<div class="tip" id="fs25">val culture : Globalization.CultureInfo</div>
<div class="tip" id="fs26">namespace System.Globalization</div>
<div class="tip" id="fs27">Multiple items<br />type CultureInfo =<br />&#160;&#160;new : name:string -&gt; CultureInfo + 3 overloads<br />&#160;&#160;member Calendar : Calendar<br />&#160;&#160;member ClearCachedData : unit -&gt; unit<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareInfo : CompareInfo<br />&#160;&#160;member CultureTypes : CultureTypes<br />&#160;&#160;member DateTimeFormat : DateTimeFormatInfo with get, set<br />&#160;&#160;member DisplayName : string<br />&#160;&#160;member EnglishName : string<br />&#160;&#160;member Equals : value:obj -&gt; bool<br />&#160;&#160;...<br /><br />Full name: System.Globalization.CultureInfo<br /><br />--------------------<br />Globalization.CultureInfo(name: string) : unit<br />Globalization.CultureInfo(culture: int) : unit<br />Globalization.CultureInfo(name: string, useUserOverride: bool) : unit<br />Globalization.CultureInfo(culture: int, useUserOverride: bool) : unit</div>
<div class="tip" id="fs28">val box : value:&#39;T -&gt; obj<br /><br />Full name: Microsoft.FSharp.Core.Operators.box</div>
<div class="tip" id="fs29">Multiple items<br />type AbstractClassAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AbstractClassAttribute<br /><br />Full name: Microsoft.FSharp.Core.AbstractClassAttribute<br /><br />--------------------<br />new : unit -&gt; AbstractClassAttribute</div>
<div class="tip" id="fs30">Multiple items<br />type ConverterBase =<br />&#160;&#160;interface obj<br />&#160;&#160;new : unit -&gt; ConverterBase<br />&#160;&#160;new : convertFunction:(obj -&gt; Type -&gt; obj -&gt; CultureInfo -&gt; obj) * convertBackFunction:(obj -&gt; Type -&gt; obj -&gt; CultureInfo -&gt; obj) -&gt; ConverterBase<br />&#160;&#160;abstract member Convert : (obj -&gt; Type -&gt; obj -&gt; CultureInfo -&gt; obj)<br />&#160;&#160;abstract member ConvertBack : (obj -&gt; Type -&gt; obj -&gt; CultureInfo -&gt; obj)<br />&#160;&#160;override Convert : value:&#39;f * targetType:&#39;g * parameter:&#39;h * culture:&#39;i -&gt; &#39;j<br />&#160;&#160;override ConvertBack : value:&#39;a * targetType:&#39;b * parameter:&#39;c * culture:&#39;d -&gt; &#39;e<br />&#160;&#160;override Convert : (obj -&gt; Type -&gt; obj -&gt; CultureInfo -&gt; obj)<br />&#160;&#160;override ConvertBack : (obj -&gt; Type -&gt; obj -&gt; CultureInfo -&gt; obj)<br /><br />Full name: FSharp.Converters.ConverterBase<br /><em><br /><br />&#160;abstract class for converter</em><br /><br />--------------------<br />new : unit -&gt; ConverterBase<br /><em><br /><br />&#160;constructor take nullFunction as inputs</em><br />new : convertFunction:(obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj) * convertBackFunction:(obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj) -&gt; ConverterBase</div>
<div class="tip" id="fs31">val convertFunction : (obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj)</div>
<div class="tip" id="fs32">val convertBackFunction : (obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj)</div>
<div class="tip" id="fs33">val this : ConverterBase</div>
<div class="tip" id="fs34">Multiple items<br />override ConverterBase.Convert : value:&#39;f * targetType:&#39;g * parameter:&#39;h * culture:&#39;i -&gt; &#39;j<br /><br />Full name: FSharp.Converters.ConverterBase.Convert<br /><em><br /><br />&#160;convert a value to new value</em><br /><br />--------------------<br />type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>
<div class="tip" id="fs35">val value : &#39;f</div>
<div class="tip" id="fs36">val targetType : &#39;g</div>
<div class="tip" id="fs37">val parameter : &#39;h</div>
<div class="tip" id="fs38">val culture : &#39;i</div>
<div class="tip" id="fs39">Multiple items<br />property ConverterBase.Convert: obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj<br /><br />--------------------<br />override ConverterBase.Convert : value:&#39;f * targetType:&#39;g * parameter:&#39;h * culture:&#39;i -&gt; &#39;j<br /><em><br /><br />&#160;convert a value to new value</em></div>
<div class="tip" id="fs40">override ConverterBase.ConvertBack : value:&#39;a * targetType:&#39;b * parameter:&#39;c * culture:&#39;d -&gt; &#39;e<br /><br />Full name: FSharp.Converters.ConverterBase.ConvertBack<br /><em><br /><br />&#160;convert a value back</em></div>
<div class="tip" id="fs41">val targetType : &#39;b</div>
<div class="tip" id="fs42">val parameter : &#39;c</div>
<div class="tip" id="fs43">val culture : &#39;d</div>
<div class="tip" id="fs44">Multiple items<br />property ConverterBase.ConvertBack: obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj<br /><br />--------------------<br />override ConverterBase.ConvertBack : value:&#39;a * targetType:&#39;b * parameter:&#39;c * culture:&#39;d -&gt; &#39;e<br /><em><br /><br />&#160;convert a value back</em></div>
<div class="tip" id="fs45">Multiple items<br />abstract member ConverterBase.Convert : (obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj)<br /><br />Full name: FSharp.Converters.ConverterBase.Convert<br /><br />--------------------<br />type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>
<div class="tip" id="fs46">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs47">Multiple items<br />override ConverterBase.Convert : (obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj)<br /><br />Full name: FSharp.Converters.ConverterBase.Convert<br /><br />--------------------<br />type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>
<div class="tip" id="fs48">abstract member ConverterBase.ConvertBack : (obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj)<br /><br />Full name: FSharp.Converters.ConverterBase.ConvertBack</div>
<div class="tip" id="fs49">override ConverterBase.ConvertBack : (obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj)<br /><br />Full name: FSharp.Converters.ConverterBase.ConvertBack</div>
<div class="tip" id="fs50">Multiple items<br />type StringToVisiblityConverter =<br />&#160;&#160;inherit ConverterBase<br />&#160;&#160;new : unit -&gt; StringToVisiblityConverter<br /><br />Full name: FSharp.Converters.StringToVisiblityConverter<br /><em><br /><br />&#160;Sample concrete implementation</em><br /><br />--------------------<br />new : unit -&gt; StringToVisiblityConverter</div>

