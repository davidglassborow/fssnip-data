<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">ConverterBase</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Windows</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">Windows</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="i">Data</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="f">nullFunction</span> <span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="i">value</span> <span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="i">target</span> <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">param</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="i">culture</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 13)" onmouseover="showTip(event, 'fs6', 13)" class="i">value</span>

<span class="c">/// abstract class for converter</span>
[&lt;<span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="t">AbstractClass</span>&gt;]
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="t">ConverterBase</span>(<span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="f">convertFunction</span>, <span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="f">convertBackFunction</span>) <span class="o">=</span>    
    <span class="c">/// constructor take nullFunction as inputs</span>
    <span class="k">new</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="t">ConverterBase</span>(<span onmouseout="hideTip(event, 'fs5', 19)" onmouseover="showTip(event, 'fs5', 19)" class="f">nullFunction</span>, <span onmouseout="hideTip(event, 'fs5', 20)" onmouseover="showTip(event, 'fs5', 20)" class="f">nullFunction</span>)

    <span class="c">// implement the IValueConverter</span>
    <span class="k">interface</span> <span class="i">IValueConverter</span> <span class="k">with</span>
        <span class="c">/// convert a value to new value</span>
        <span class="k">override</span> <span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="f">Convert</span>(<span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="i">value</span>, <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="i">targetType</span>, <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="i">parameter</span>, <span onmouseout="hideTip(event, 'fs19', 26)" onmouseover="showTip(event, 'fs19', 26)" class="i">culture</span>) <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs14', 27)" onmouseover="showTip(event, 'fs14', 27)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 28)" onmouseover="showTip(event, 'fs20', 28)" class="i">Convert</span> <span onmouseout="hideTip(event, 'fs16', 29)" onmouseover="showTip(event, 'fs16', 29)" class="i">value</span> <span onmouseout="hideTip(event, 'fs17', 30)" onmouseover="showTip(event, 'fs17', 30)" class="i">targetType</span> <span onmouseout="hideTip(event, 'fs18', 31)" onmouseover="showTip(event, 'fs18', 31)" class="i">parameter</span> <span onmouseout="hideTip(event, 'fs19', 32)" onmouseover="showTip(event, 'fs19', 32)" class="i">culture</span>

        <span class="c">/// convert a value back</span>
        <span class="k">override</span> <span onmouseout="hideTip(event, 'fs14', 33)" onmouseover="showTip(event, 'fs14', 33)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 34)" onmouseover="showTip(event, 'fs21', 34)" class="f">ConvertBack</span>(<span onmouseout="hideTip(event, 'fs6', 35)" onmouseover="showTip(event, 'fs6', 35)" class="i">value</span>, <span onmouseout="hideTip(event, 'fs22', 36)" onmouseover="showTip(event, 'fs22', 36)" class="i">targetType</span>, <span onmouseout="hideTip(event, 'fs23', 37)" onmouseover="showTip(event, 'fs23', 37)" class="i">parameter</span>, <span onmouseout="hideTip(event, 'fs9', 38)" onmouseover="showTip(event, 'fs9', 38)" class="i">culture</span>) <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs14', 39)" onmouseover="showTip(event, 'fs14', 39)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 40)" onmouseover="showTip(event, 'fs24', 40)" class="i">ConvertBack</span> <span onmouseout="hideTip(event, 'fs6', 41)" onmouseover="showTip(event, 'fs6', 41)" class="i">value</span> <span onmouseout="hideTip(event, 'fs22', 42)" onmouseover="showTip(event, 'fs22', 42)" class="i">targetType</span> <span onmouseout="hideTip(event, 'fs23', 43)" onmouseover="showTip(event, 'fs23', 43)" class="i">parameter</span> <span onmouseout="hideTip(event, 'fs9', 44)" onmouseover="showTip(event, 'fs9', 44)" class="i">culture</span>
    
    <span class="k">abstract</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs25', 45)" onmouseover="showTip(event, 'fs25', 45)" class="i">Convert</span> <span class="o">:</span> (<span onmouseout="hideTip(event, 'fs26', 46)" onmouseover="showTip(event, 'fs26', 46)" class="t">obj</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs27', 47)" onmouseover="showTip(event, 'fs27', 47)" class="t">Type</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs26', 48)" onmouseover="showTip(event, 'fs26', 48)" class="t">obj</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs28', 49)" onmouseover="showTip(event, 'fs28', 49)" class="i">Globalization</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 50)" onmouseover="showTip(event, 'fs29', 50)" class="t">CultureInfo</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs26', 51)" onmouseover="showTip(event, 'fs26', 51)" class="t">obj</span>)
    <span class="k">default</span> <span onmouseout="hideTip(event, 'fs14', 52)" onmouseover="showTip(event, 'fs14', 52)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 53)" onmouseover="showTip(event, 'fs30', 53)" class="i">Convert</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 54)" onmouseover="showTip(event, 'fs12', 54)" class="f">convertFunction</span>

    <span class="k">abstract</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs31', 55)" onmouseover="showTip(event, 'fs31', 55)" class="i">ConvertBack</span> <span class="o">:</span> (<span onmouseout="hideTip(event, 'fs26', 56)" onmouseover="showTip(event, 'fs26', 56)" class="t">obj</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs27', 57)" onmouseover="showTip(event, 'fs27', 57)" class="t">Type</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs26', 58)" onmouseover="showTip(event, 'fs26', 58)" class="t">obj</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs28', 59)" onmouseover="showTip(event, 'fs28', 59)" class="i">Globalization</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 60)" onmouseover="showTip(event, 'fs29', 60)" class="t">CultureInfo</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs26', 61)" onmouseover="showTip(event, 'fs26', 61)" class="t">obj</span>)
    <span class="k">default</span> <span onmouseout="hideTip(event, 'fs14', 62)" onmouseover="showTip(event, 'fs14', 62)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 63)" onmouseover="showTip(event, 'fs32', 63)" class="i">ConvertBack</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 64)" onmouseover="showTip(event, 'fs13', 64)" class="f">convertBackFunction</span>


<span class="c">/// Sample concrete implementation</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs33', 65)" onmouseover="showTip(event, 'fs33', 65)" class="t">UpperCaseConverter</span>() <span class="o">=</span>
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs11', 66)" onmouseover="showTip(event, 'fs11', 66)" class="t">ConverterBase</span>()
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 67)" onmouseover="showTip(event, 'fs34', 67)" class="f">convertFunc</span> <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs35', 68)" onmouseover="showTip(event, 'fs35', 68)" class="i">v</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs26', 69)" onmouseover="showTip(event, 'fs26', 69)" class="t">obj</span>) _ _ _ <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs36', 70)" onmouseover="showTip(event, 'fs36', 70)" class="f">string</span> <span onmouseout="hideTip(event, 'fs35', 71)" onmouseover="showTip(event, 'fs35', 71)" class="i">v</span>)<span class="o">.</span><span class="f">ToUpper</span>() <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs26', 72)" onmouseover="showTip(event, 'fs26', 72)" class="t">obj</span>
    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs37', 73)" onmouseover="showTip(event, 'fs37', 73)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 74)" onmouseover="showTip(event, 'fs38', 74)" class="i">Convert</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 75)" onmouseover="showTip(event, 'fs34', 75)" class="f">convertFunc</span> 
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module ConverterBase</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace System.Windows</div>
<div class="tip" id="fs4">Multiple items<br />namespace System.Data<br /><br />--------------------<br />namespace Microsoft.FSharp.Data</div>
<div class="tip" id="fs5">val nullFunction : value:&#39;a -&gt; target:&#39;b -&gt; param:&#39;c -&gt; culture:&#39;d -&gt; &#39;a<br /><br />Full name: ConverterBase.nullFunction</div>
<div class="tip" id="fs6">val value : &#39;a</div>
<div class="tip" id="fs7">val target : &#39;b</div>
<div class="tip" id="fs8">val param : &#39;c</div>
<div class="tip" id="fs9">val culture : &#39;d</div>
<div class="tip" id="fs10">Multiple items<br />type AbstractClassAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AbstractClassAttribute<br /><br />Full name: Microsoft.FSharp.Core.AbstractClassAttribute<br /><br />--------------------<br />new : unit -&gt; AbstractClassAttribute</div>
<div class="tip" id="fs11">Multiple items<br />type ConverterBase =<br />&#160;&#160;interface obj<br />&#160;&#160;new : unit -&gt; ConverterBase<br />&#160;&#160;new : convertFunction:(obj -&gt; Type -&gt; obj -&gt; CultureInfo -&gt; obj) * convertBackFunction:(obj -&gt; Type -&gt; obj -&gt; CultureInfo -&gt; obj) -&gt; ConverterBase<br />&#160;&#160;abstract member Convert : (obj -&gt; Type -&gt; obj -&gt; CultureInfo -&gt; obj)<br />&#160;&#160;abstract member ConvertBack : (obj -&gt; Type -&gt; obj -&gt; CultureInfo -&gt; obj)<br />&#160;&#160;override Convert : value:&#39;f * targetType:&#39;g * parameter:&#39;h * culture:&#39;i -&gt; &#39;j<br />&#160;&#160;override ConvertBack : value:&#39;a * targetType:&#39;b * parameter:&#39;c * culture:&#39;d -&gt; &#39;e<br />&#160;&#160;override Convert : (obj -&gt; Type -&gt; obj -&gt; CultureInfo -&gt; obj)<br />&#160;&#160;override ConvertBack : (obj -&gt; Type -&gt; obj -&gt; CultureInfo -&gt; obj)<br /><br />Full name: ConverterBase.ConverterBase<br /><em><br /><br />&#160;abstract class for converter</em><br /><br />--------------------<br />new : unit -&gt; ConverterBase<br /><em><br /><br />&#160;constructor take nullFunction as inputs</em><br />new : convertFunction:(obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj) * convertBackFunction:(obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj) -&gt; ConverterBase</div>
<div class="tip" id="fs12">val convertFunction : (obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj)</div>
<div class="tip" id="fs13">val convertBackFunction : (obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj)</div>
<div class="tip" id="fs14">val this : ConverterBase</div>
<div class="tip" id="fs15">Multiple items<br />override ConverterBase.Convert : value:&#39;f * targetType:&#39;g * parameter:&#39;h * culture:&#39;i -&gt; &#39;j<br /><br />Full name: ConverterBase.ConverterBase.Convert<br /><em><br /><br />&#160;convert a value to new value</em><br /><br />--------------------<br />type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>
<div class="tip" id="fs16">val value : &#39;f</div>
<div class="tip" id="fs17">val targetType : &#39;g</div>
<div class="tip" id="fs18">val parameter : &#39;h</div>
<div class="tip" id="fs19">val culture : &#39;i</div>
<div class="tip" id="fs20">Multiple items<br />property ConverterBase.Convert: obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj<br /><br />--------------------<br />override ConverterBase.Convert : value:&#39;f * targetType:&#39;g * parameter:&#39;h * culture:&#39;i -&gt; &#39;j<br /><em><br /><br />&#160;convert a value to new value</em></div>
<div class="tip" id="fs21">override ConverterBase.ConvertBack : value:&#39;a * targetType:&#39;b * parameter:&#39;c * culture:&#39;d -&gt; &#39;e<br /><br />Full name: ConverterBase.ConverterBase.ConvertBack<br /><em><br /><br />&#160;convert a value back</em></div>
<div class="tip" id="fs22">val targetType : &#39;b</div>
<div class="tip" id="fs23">val parameter : &#39;c</div>
<div class="tip" id="fs24">Multiple items<br />property ConverterBase.ConvertBack: obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj<br /><br />--------------------<br />override ConverterBase.ConvertBack : value:&#39;a * targetType:&#39;b * parameter:&#39;c * culture:&#39;d -&gt; &#39;e<br /><em><br /><br />&#160;convert a value back</em></div>
<div class="tip" id="fs25">Multiple items<br />abstract member ConverterBase.Convert : (obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj)<br /><br />Full name: ConverterBase.ConverterBase.Convert<br /><br />--------------------<br />type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>
<div class="tip" id="fs26">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs27">type Type =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Assembly : Assembly<br />&#160;&#160;member AssemblyQualifiedName : string<br />&#160;&#160;member Attributes : TypeAttributes<br />&#160;&#160;member BaseType : Type<br />&#160;&#160;member ContainsGenericParameters : bool<br />&#160;&#160;member DeclaringMethod : MethodBase<br />&#160;&#160;member DeclaringType : Type<br />&#160;&#160;member Equals : o:obj -&gt; bool + 1 overload<br />&#160;&#160;member FindInterfaces : filter:TypeFilter * filterCriteria:obj -&gt; Type[]<br />&#160;&#160;member FindMembers : memberType:MemberTypes * bindingAttr:BindingFlags * filter:MemberFilter * filterCriteria:obj -&gt; MemberInfo[]<br />&#160;&#160;...<br /><br />Full name: System.Type</div>
<div class="tip" id="fs28">namespace System.Globalization</div>
<div class="tip" id="fs29">Multiple items<br />type CultureInfo =<br />&#160;&#160;new : name:string -&gt; CultureInfo + 3 overloads<br />&#160;&#160;member Calendar : Calendar<br />&#160;&#160;member ClearCachedData : unit -&gt; unit<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareInfo : CompareInfo<br />&#160;&#160;member CultureTypes : CultureTypes<br />&#160;&#160;member DateTimeFormat : DateTimeFormatInfo with get, set<br />&#160;&#160;member DisplayName : string<br />&#160;&#160;member EnglishName : string<br />&#160;&#160;member Equals : value:obj -&gt; bool<br />&#160;&#160;...<br /><br />Full name: System.Globalization.CultureInfo<br /><br />--------------------<br />Globalization.CultureInfo(name: string) : unit<br />Globalization.CultureInfo(culture: int) : unit<br />Globalization.CultureInfo(name: string, useUserOverride: bool) : unit<br />Globalization.CultureInfo(culture: int, useUserOverride: bool) : unit</div>
<div class="tip" id="fs30">Multiple items<br />override ConverterBase.Convert : (obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj)<br /><br />Full name: ConverterBase.ConverterBase.Convert<br /><br />--------------------<br />type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>
<div class="tip" id="fs31">abstract member ConverterBase.ConvertBack : (obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj)<br /><br />Full name: ConverterBase.ConverterBase.ConvertBack</div>
<div class="tip" id="fs32">override ConverterBase.ConvertBack : (obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj)<br /><br />Full name: ConverterBase.ConverterBase.ConvertBack</div>
<div class="tip" id="fs33">Multiple items<br />type UpperCaseConverter =<br />&#160;&#160;inherit ConverterBase<br />&#160;&#160;new : unit -&gt; UpperCaseConverter<br />&#160;&#160;override Convert : (obj -&gt; Type -&gt; obj -&gt; CultureInfo -&gt; obj)<br /><br />Full name: ConverterBase.UpperCaseConverter<br /><em><br /><br />&#160;Sample concrete implementation</em><br /><br />--------------------<br />new : unit -&gt; UpperCaseConverter</div>
<div class="tip" id="fs34">val convertFunc : (obj -&gt; &#39;a -&gt; &#39;b -&gt; &#39;c -&gt; obj)</div>
<div class="tip" id="fs35">val v : obj</div>
<div class="tip" id="fs36">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs37">val this : UpperCaseConverter</div>
<div class="tip" id="fs38">Multiple items<br />override UpperCaseConverter.Convert : (obj -&gt; Type -&gt; obj -&gt; Globalization.CultureInfo -&gt; obj)<br /><br />Full name: ConverterBase.UpperCaseConverter.Convert<br /><br />--------------------<br />type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>

