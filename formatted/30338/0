<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Generic</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 5)" onmouseover="showTip(event, 'fs1', 5)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">ComponentModel</span>

<span class="c">// SortableBindingList in F# adapted from msmolcic on Stack Overflow</span>
<span class="c">// https://stackoverflow.com/questions/23661195/datagridview-using-sortablebindinglist</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="t">SortableBindingList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">list</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="t">IEnumerable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>) <span class="o">=</span>
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="t">BindingList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="t">List</span>(<span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">list</span>))

    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="v">isSorted</span> <span class="o">=</span> <span class="k">false</span>
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="v">sortDirection</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="t">ListSortDirection</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 16)" onmouseover="showTip(event, 'fs14', 16)" class="i">Ascending</span>
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs15', 17)" onmouseover="showTip(event, 'fs15', 17)" class="v">sortProperty</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs16', 18)" onmouseover="showTip(event, 'fs16', 18)" class="t">PropertyDescriptor</span> <span onmouseout="hideTip(event, 'fs17', 19)" onmouseover="showTip(event, 'fs17', 19)" class="t">option</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 20)" onmouseover="showTip(event, 'fs18', 20)" class="p">None</span>

    <span class="k">new</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 21)" onmouseover="showTip(event, 'fs5', 21)" class="t">SortableBindingList</span>(<span onmouseout="hideTip(event, 'fs19', 22)" onmouseover="showTip(event, 'fs19', 22)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 23)" onmouseover="showTip(event, 'fs20', 23)" class="i">empty</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>)

    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs21', 24)" onmouseover="showTip(event, 'fs21', 24)" class="i">l</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 25)" onmouseover="showTip(event, 'fs22', 25)" class="f">ApplySortCore</span>(<span onmouseout="hideTip(event, 'fs23', 26)" onmouseover="showTip(event, 'fs23', 26)" class="i">prop</span>, <span onmouseout="hideTip(event, 'fs24', 27)" onmouseover="showTip(event, 'fs24', 27)" class="i">direction</span>) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 28)" onmouseover="showTip(event, 'fs25', 28)" class="f">raiseEx</span> () <span class="o">=</span>
            <span class="k">new</span> <span onmouseout="hideTip(event, 'fs26', 29)" onmouseover="showTip(event, 'fs26', 29)" class="t">NotSupportedException</span>(<span class="s">&quot;Cannot sort by &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs23', 30)" onmouseover="showTip(event, 'fs23', 30)" class="i">prop</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 31)" onmouseover="showTip(event, 'fs27', 31)" class="i">Name</span> <span class="o">+</span>
                <span class="s">&quot;. This&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs23', 32)" onmouseover="showTip(event, 'fs23', 32)" class="i">prop</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 33)" onmouseover="showTip(event, 'fs28', 33)" class="i">PropertyType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 34)" onmouseover="showTip(event, 'fs29', 34)" class="f">ToString</span>() <span class="o">+</span> <span class="s">&quot; does not implement IComparable&quot;</span>)
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 35)" onmouseover="showTip(event, 'fs30', 35)" class="f">raise</span>

        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs23', 36)" onmouseover="showTip(event, 'fs23', 36)" class="i">prop</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 37)" onmouseover="showTip(event, 'fs28', 37)" class="i">PropertyType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 38)" onmouseover="showTip(event, 'fs31', 38)" class="f">GetInterface</span>(<span class="s">&quot;IComparable&quot;</span>) <span class="k">with</span>
        | <span class="k">null</span> <span class="k">-&gt;</span>
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs23', 39)" onmouseover="showTip(event, 'fs23', 39)" class="i">prop</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 40)" onmouseover="showTip(event, 'fs28', 40)" class="i">PropertyType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 41)" onmouseover="showTip(event, 'fs32', 41)" class="i">IsValueType</span> <span class="k">then</span>
                <span class="k">match</span> <span onmouseout="hideTip(event, 'fs33', 42)" onmouseover="showTip(event, 'fs33', 42)" class="t">Nullable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 43)" onmouseover="showTip(event, 'fs34', 43)" class="f">GetUnderlyingType</span>(<span onmouseout="hideTip(event, 'fs23', 44)" onmouseover="showTip(event, 'fs23', 44)" class="i">prop</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 45)" onmouseover="showTip(event, 'fs28', 45)" class="i">PropertyType</span>) <span class="k">with</span>
                | <span class="k">null</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 46)" onmouseover="showTip(event, 'fs25', 46)" class="f">raiseEx</span>()
                | <span onmouseout="hideTip(event, 'fs35', 47)" onmouseover="showTip(event, 'fs35', 47)" class="i">t</span> <span class="k">-&gt;</span> 
                    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs35', 48)" onmouseover="showTip(event, 'fs35', 48)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 49)" onmouseover="showTip(event, 'fs31', 49)" class="f">GetInterface</span>(<span class="s">&quot;IComparable&quot;</span>) <span class="k">with</span> 
                    | <span class="k">null</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 50)" onmouseover="showTip(event, 'fs25', 50)" class="f">raiseEx</span>() 
                    | _ <span class="k">-&gt;</span> () <span class="c">// Just fall through the match case and apply the sort</span>
        | _ <span class="k">-&gt;</span> () <span class="c">// Just fall through the match case and apply the sort</span>
        
        <span class="c">// IComparable interface is supported, so apply the sort</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 51)" onmouseover="showTip(event, 'fs36', 51)" class="i">query</span> <span class="o">=</span> <span class="k">base</span><span class="o">.</span><span class="i">Items</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs7', 52)" onmouseover="showTip(event, 'fs7', 52)" class="t">IEnumerable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>
        <span onmouseout="hideTip(event, 'fs15', 53)" onmouseover="showTip(event, 'fs15', 53)" class="v">sortProperty</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs37', 54)" onmouseover="showTip(event, 'fs37', 54)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs23', 55)" onmouseover="showTip(event, 'fs23', 55)" class="i">prop</span>
        <span onmouseout="hideTip(event, 'fs12', 56)" onmouseover="showTip(event, 'fs12', 56)" class="v">sortDirection</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs24', 57)" onmouseover="showTip(event, 'fs24', 57)" class="i">direction</span>

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 58)" onmouseover="showTip(event, 'fs38', 58)" class="i">sorted</span> <span class="o">=</span>
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs24', 59)" onmouseover="showTip(event, 'fs24', 59)" class="i">direction</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs13', 60)" onmouseover="showTip(event, 'fs13', 60)" class="t">ListSortDirection</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 61)" onmouseover="showTip(event, 'fs14', 61)" class="i">Ascending</span> <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs36', 62)" onmouseover="showTip(event, 'fs36', 62)" class="i">query</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs19', 63)" onmouseover="showTip(event, 'fs19', 63)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 64)" onmouseover="showTip(event, 'fs39', 64)" class="f">sortBy</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs40', 65)" onmouseover="showTip(event, 'fs40', 65)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs23', 66)" onmouseover="showTip(event, 'fs23', 66)" class="i">prop</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 67)" onmouseover="showTip(event, 'fs41', 67)" class="f">GetValue</span>(<span onmouseout="hideTip(event, 'fs40', 68)" onmouseover="showTip(event, 'fs40', 68)" class="i">i</span>) <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs42', 69)" onmouseover="showTip(event, 'fs42', 69)" class="t">IComparable</span>)
            | _ <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs36', 70)" onmouseover="showTip(event, 'fs36', 70)" class="i">query</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs19', 71)" onmouseover="showTip(event, 'fs19', 71)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 72)" onmouseover="showTip(event, 'fs43', 72)" class="f">sortByDescending</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs40', 73)" onmouseover="showTip(event, 'fs40', 73)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs23', 74)" onmouseover="showTip(event, 'fs23', 74)" class="i">prop</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 75)" onmouseover="showTip(event, 'fs41', 75)" class="f">GetValue</span>(<span onmouseout="hideTip(event, 'fs40', 76)" onmouseover="showTip(event, 'fs40', 76)" class="i">i</span>) <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs42', 77)" onmouseover="showTip(event, 'fs42', 77)" class="t">IComparable</span>)
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs44', 78)" onmouseover="showTip(event, 'fs44', 78)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 79)" onmouseover="showTip(event, 'fs45', 79)" class="f">ofSeq</span>
        
        <span class="c">// Can&#39;t access protected &quot;Items&quot; within lambda, so use this for loop construct</span>
        <span class="k">for</span> <span onmouseout="hideTip(event, 'fs46', 80)" onmouseover="showTip(event, 'fs46', 80)" class="i">i</span> <span class="k">in</span> [<span class="n">0</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs44', 81)" onmouseover="showTip(event, 'fs44', 81)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 82)" onmouseover="showTip(event, 'fs47', 82)" class="f">length</span> <span onmouseout="hideTip(event, 'fs38', 83)" onmouseover="showTip(event, 'fs38', 83)" class="i">sorted</span> <span class="o">-</span> <span class="n">1</span>] <span class="k">do</span>
            <span onmouseout="hideTip(event, 'fs21', 84)" onmouseover="showTip(event, 'fs21', 84)" class="i">l</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 85)" onmouseover="showTip(event, 'fs48', 85)" class="i">Items</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs46', 86)" onmouseover="showTip(event, 'fs46', 86)" class="i">i</span>] <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs38', 87)" onmouseover="showTip(event, 'fs38', 87)" class="i">sorted</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs46', 88)" onmouseover="showTip(event, 'fs46', 88)" class="i">i</span>] 
        <span onmouseout="hideTip(event, 'fs11', 89)" onmouseover="showTip(event, 'fs11', 89)" class="v">isSorted</span> <span class="o">&lt;-</span> <span class="k">true</span>
        <span onmouseout="hideTip(event, 'fs21', 90)" onmouseover="showTip(event, 'fs21', 90)" class="i">l</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 91)" onmouseover="showTip(event, 'fs49', 91)" class="f">OnListChanged</span>(<span class="k">new</span> <span onmouseout="hideTip(event, 'fs50', 92)" onmouseover="showTip(event, 'fs50', 92)" class="t">ListChangedEventArgs</span>(<span onmouseout="hideTip(event, 'fs51', 93)" onmouseover="showTip(event, 'fs51', 93)" class="t">ListChangedType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 94)" onmouseover="showTip(event, 'fs52', 94)" class="i">Reset</span>, <span class="o">-</span><span class="n">1</span>))

    <span class="k">override</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 95)" onmouseover="showTip(event, 'fs53', 95)" class="i">SortPropertyCore</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs15', 96)" onmouseover="showTip(event, 'fs15', 96)" class="v">sortProperty</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs37', 97)" onmouseover="showTip(event, 'fs37', 97)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs54', 98)" onmouseover="showTip(event, 'fs54', 98)" class="i">sp</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs54', 99)" onmouseover="showTip(event, 'fs54', 99)" class="i">sp</span>
        | _ <span class="k">-&gt;</span>
             <span class="k">new</span> <span onmouseout="hideTip(event, 'fs1', 100)" onmouseover="showTip(event, 'fs1', 100)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 101)" onmouseover="showTip(event, 'fs55', 101)" class="t">NullReferenceException</span>(<span class="s">&quot;Sortable property was null.&quot;</span>)
             <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 102)" onmouseover="showTip(event, 'fs30', 102)" class="f">raise</span>

    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs56', 103)" onmouseover="showTip(event, 'fs56', 103)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 104)" onmouseover="showTip(event, 'fs57', 104)" class="i">SortDirectionCore</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 105)" onmouseover="showTip(event, 'fs12', 105)" class="v">sortDirection</span>
    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs56', 106)" onmouseover="showTip(event, 'fs56', 106)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 107)" onmouseover="showTip(event, 'fs58', 107)" class="i">SupportsSortingCore</span> <span class="o">=</span> <span class="k">true</span>
    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs56', 108)" onmouseover="showTip(event, 'fs56', 108)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 109)" onmouseover="showTip(event, 'fs59', 109)" class="i">IsSortedCore</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 110)" onmouseover="showTip(event, 'fs11', 110)" class="v">isSorted</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Collections</div>
<div class="tip" id="fs3">namespace System.Collections.Generic</div>
<div class="tip" id="fs4">namespace System.ComponentModel</div>
<div class="tip" id="fs5">Multiple items<br />type SortableBindingList&lt;&#39;T&gt; =<br />&#160;&#160;inherit BindingList&lt;&#39;T&gt;<br />&#160;&#160;new : unit -&gt; SortableBindingList&lt;&#39;T&gt;<br />&#160;&#160;new : list:IEnumerable&lt;&#39;T&gt; -&gt; SortableBindingList&lt;&#39;T&gt;<br />&#160;&#160;override ApplySortCore : prop:PropertyDescriptor * direction:ListSortDirection -&gt; unit<br />&#160;&#160;override IsSortedCore : bool<br />&#160;&#160;override SortDirectionCore : ListSortDirection<br />&#160;&#160;override SortPropertyCore : PropertyDescriptor<br />&#160;&#160;override SupportsSortingCore : bool<br /><br />Full name: Script.SortableBindingList&lt;_&gt;<br /><br />--------------------<br />new : unit -&gt; SortableBindingList&lt;&#39;T&gt;<br />new : list:IEnumerable&lt;&#39;T&gt; -&gt; SortableBindingList&lt;&#39;T&gt;</div>
<div class="tip" id="fs6">Multiple items<br />val list : IEnumerable&lt;&#39;T&gt;<br /><br />--------------------<br />type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs7">type IEnumerable&lt;&#39;T&gt; =<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator&lt;&#39;T&gt;<br /><br />Full name: System.Collections.Generic.IEnumerable&lt;_&gt;</div>
<div class="tip" id="fs8">Multiple items<br />type BindingList&lt;&#39;T&gt; =<br />&#160;&#160;inherit Collection&lt;&#39;T&gt;<br />&#160;&#160;new : unit -&gt; BindingList&lt;&#39;T&gt; + 1 overload<br />&#160;&#160;member AddNew : unit -&gt; &#39;T<br />&#160;&#160;member AllowEdit : bool with get, set<br />&#160;&#160;member AllowNew : bool with get, set<br />&#160;&#160;member AllowRemove : bool with get, set<br />&#160;&#160;member CancelNew : itemIndex:int -&gt; unit<br />&#160;&#160;member EndNew : itemIndex:int -&gt; unit<br />&#160;&#160;member RaiseListChangedEvents : bool with get, set<br />&#160;&#160;member ResetBindings : unit -&gt; unit<br />&#160;&#160;member ResetItem : position:int -&gt; unit<br />&#160;&#160;...<br /><br />Full name: System.ComponentModel.BindingList&lt;_&gt;<br /><br />--------------------<br />BindingList() : unit<br />BindingList(list: IList&lt;&#39;T&gt;) : unit</div>
<div class="tip" id="fs9">Multiple items<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; List&lt;&#39;T&gt; + 2 overloads<br />&#160;&#160;member Add : item:&#39;T -&gt; unit<br />&#160;&#160;member AddRange : collection:IEnumerable&lt;&#39;T&gt; -&gt; unit<br />&#160;&#160;member AsReadOnly : unit -&gt; ReadOnlyCollection&lt;&#39;T&gt;<br />&#160;&#160;member BinarySearch : item:&#39;T -&gt; int + 2 overloads<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Contains : item:&#39;T -&gt; bool<br />&#160;&#160;member ConvertAll&lt;&#39;TOutput&gt; : converter:Converter&lt;&#39;T, &#39;TOutput&gt; -&gt; List&lt;&#39;TOutput&gt;<br />&#160;&#160;member CopyTo : array:&#39;T[] -&gt; unit + 2 overloads<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br /><br />Full name: System.Collections.Generic.List&lt;_&gt;<br /><br />--------------------<br />List() : unit<br />List(capacity: int) : unit<br />List(collection: IEnumerable&lt;&#39;T&gt;) : unit</div>
<div class="tip" id="fs10">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs11">val mutable isSorted : bool</div>
<div class="tip" id="fs12">val mutable sortDirection : ListSortDirection</div>
<div class="tip" id="fs13">type ListSortDirection =<br />&#160;&#160;| Ascending = 0<br />&#160;&#160;| Descending = 1<br /><br />Full name: System.ComponentModel.ListSortDirection</div>
<div class="tip" id="fs14">field ListSortDirection.Ascending = 0</div>
<div class="tip" id="fs15">val mutable sortProperty : PropertyDescriptor option</div>
<div class="tip" id="fs16">type PropertyDescriptor =<br />&#160;&#160;inherit MemberDescriptor<br />&#160;&#160;member AddValueChanged : component:obj * handler:EventHandler -&gt; unit<br />&#160;&#160;member CanResetValue : component:obj -&gt; bool<br />&#160;&#160;member ComponentType : Type<br />&#160;&#160;member Converter : TypeConverter<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetChildProperties : unit -&gt; PropertyDescriptorCollection + 3 overloads<br />&#160;&#160;member GetEditor : editorBaseType:Type -&gt; obj<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetValue : component:obj -&gt; obj<br />&#160;&#160;member IsLocalizable : bool<br />&#160;&#160;...<br /><br />Full name: System.ComponentModel.PropertyDescriptor</div>
<div class="tip" id="fs17">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs18">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs19">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs20">val empty&lt;&#39;T&gt; : seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.empty</div>
<div class="tip" id="fs21">val l : SortableBindingList&lt;&#39;T&gt;</div>
<div class="tip" id="fs22">override SortableBindingList.ApplySortCore : prop:PropertyDescriptor * direction:ListSortDirection -&gt; unit<br /><br />Full name: Script.SortableBindingList`1.ApplySortCore</div>
<div class="tip" id="fs23">val prop : PropertyDescriptor</div>
<div class="tip" id="fs24">val direction : ListSortDirection</div>
<div class="tip" id="fs25">val raiseEx : (unit -&gt; &#39;a)</div>
<div class="tip" id="fs26">Multiple items<br />type NotSupportedException =<br />&#160;&#160;inherit SystemException<br />&#160;&#160;new : unit -&gt; NotSupportedException + 2 overloads<br /><br />Full name: System.NotSupportedException<br /><br />--------------------<br />NotSupportedException() : unit<br />NotSupportedException(message: string) : unit<br />NotSupportedException(message: string, innerException: exn) : unit</div>
<div class="tip" id="fs27">property MemberDescriptor.Name: string</div>
<div class="tip" id="fs28">property PropertyDescriptor.PropertyType: Type</div>
<div class="tip" id="fs29">Type.ToString() : string</div>
<div class="tip" id="fs30">val raise : exn:Exception -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.raise</div>
<div class="tip" id="fs31">Type.GetInterface(name: string) : Type<br />Type.GetInterface(name: string, ignoreCase: bool) : Type</div>
<div class="tip" id="fs32">property Type.IsValueType: bool</div>
<div class="tip" id="fs33">Multiple items<br />type Nullable =<br />&#160;&#160;static member Compare&lt;&#39;T&gt; : n1:Nullable&lt;&#39;T&gt; * n2:Nullable&lt;&#39;T&gt; -&gt; int<br />&#160;&#160;static member Equals&lt;&#39;T&gt; : n1:Nullable&lt;&#39;T&gt; * n2:Nullable&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;static member GetUnderlyingType : nullableType:Type -&gt; Type<br /><br />Full name: System.Nullable<br /><br />--------------------<br />type Nullable&lt;&#39;T (requires default constructor and value type and &#39;T :&gt; ValueType)&gt; =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : value:&#39;T -&gt; Nullable&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;member Equals : other:obj -&gt; bool<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetValueOrDefault : unit -&gt; &#39;T + 1 overload<br />&#160;&#160;&#160;&#160;member HasValue : bool<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;&#160;&#160;member Value : &#39;T<br />&#160;&#160;end<br /><br />Full name: System.Nullable&lt;_&gt;<br /><br />--------------------<br />Nullable()<br />Nullable(value: &#39;T) : unit</div>
<div class="tip" id="fs34">Nullable.GetUnderlyingType(nullableType: Type) : Type</div>
<div class="tip" id="fs35">val t : Type</div>
<div class="tip" id="fs36">val query : IEnumerable&lt;&#39;T&gt;</div>
<div class="tip" id="fs37">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs38">val sorted : &#39;T []</div>
<div class="tip" id="fs39">val sortBy : projection:(&#39;T -&gt; &#39;Key) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.sortBy</div>
<div class="tip" id="fs40">val i : &#39;T</div>
<div class="tip" id="fs41">PropertyDescriptor.GetValue(component: obj) : obj</div>
<div class="tip" id="fs42">Multiple items<br />type IComparable =<br />&#160;&#160;member CompareTo : obj:obj -&gt; int<br /><br />Full name: System.IComparable<br /><br />--------------------<br />type IComparable&lt;&#39;T&gt; =<br />&#160;&#160;member CompareTo : other:&#39;T -&gt; int<br /><br />Full name: System.IComparable&lt;_&gt;</div>
<div class="tip" id="fs43">val sortByDescending : projection:(&#39;T -&gt; &#39;Key) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.sortByDescending</div>
<div class="tip" id="fs44">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs45">val ofSeq : source:seq&lt;&#39;T&gt; -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.ofSeq</div>
<div class="tip" id="fs46">val i : int</div>
<div class="tip" id="fs47">val length : array:&#39;T [] -&gt; int<br /><br />Full name: Microsoft.FSharp.Collections.Array.length</div>
<div class="tip" id="fs48">property Collections.ObjectModel.Collection.Items: IList&lt;&#39;T&gt;</div>
<div class="tip" id="fs49">BindingList.OnListChanged(e: ListChangedEventArgs) : unit</div>
<div class="tip" id="fs50">Multiple items<br />type ListChangedEventArgs =<br />&#160;&#160;inherit EventArgs<br />&#160;&#160;new : listChangedType:ListChangedType * newIndex:int -&gt; ListChangedEventArgs + 3 overloads<br />&#160;&#160;member ListChangedType : ListChangedType<br />&#160;&#160;member NewIndex : int<br />&#160;&#160;member OldIndex : int<br />&#160;&#160;member PropertyDescriptor : PropertyDescriptor<br /><br />Full name: System.ComponentModel.ListChangedEventArgs<br /><br />--------------------<br />ListChangedEventArgs(listChangedType: ListChangedType, newIndex: int) : unit<br />ListChangedEventArgs(listChangedType: ListChangedType, propDesc: PropertyDescriptor) : unit<br />ListChangedEventArgs(listChangedType: ListChangedType, newIndex: int, propDesc: PropertyDescriptor) : unit<br />ListChangedEventArgs(listChangedType: ListChangedType, newIndex: int, oldIndex: int) : unit</div>
<div class="tip" id="fs51">type ListChangedType =<br />&#160;&#160;| Reset = 0<br />&#160;&#160;| ItemAdded = 1<br />&#160;&#160;| ItemDeleted = 2<br />&#160;&#160;| ItemMoved = 3<br />&#160;&#160;| ItemChanged = 4<br />&#160;&#160;| PropertyDescriptorAdded = 5<br />&#160;&#160;| PropertyDescriptorDeleted = 6<br />&#160;&#160;| PropertyDescriptorChanged = 7<br /><br />Full name: System.ComponentModel.ListChangedType</div>
<div class="tip" id="fs52">field ListChangedType.Reset = 0</div>
<div class="tip" id="fs53">override SortableBindingList.SortPropertyCore : PropertyDescriptor<br /><br />Full name: Script.SortableBindingList`1.SortPropertyCore</div>
<div class="tip" id="fs54">val sp : PropertyDescriptor</div>
<div class="tip" id="fs55">Multiple items<br />type NullReferenceException =<br />&#160;&#160;inherit SystemException<br />&#160;&#160;new : unit -&gt; NullReferenceException + 2 overloads<br /><br />Full name: System.NullReferenceException<br /><br />--------------------<br />NullReferenceException() : unit<br />NullReferenceException(message: string) : unit<br />NullReferenceException(message: string, innerException: exn) : unit</div>
<div class="tip" id="fs56">val __ : SortableBindingList&lt;&#39;T&gt;</div>
<div class="tip" id="fs57">override SortableBindingList.SortDirectionCore : ListSortDirection<br /><br />Full name: Script.SortableBindingList`1.SortDirectionCore</div>
<div class="tip" id="fs58">override SortableBindingList.SupportsSortingCore : bool<br /><br />Full name: Script.SortableBindingList`1.SupportsSortingCore</div>
<div class="tip" id="fs59">override SortableBindingList.IsSortedCore : bool<br /><br />Full name: Script.SortableBindingList`1.IsSortedCore</div>

