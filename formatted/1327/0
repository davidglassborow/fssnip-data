<h2><a name="Type-definition" class="anchor" href="#Type-definition">Type definition</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
<span class="l">6: </span>
<span class="l">7: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span class="o">&#39;</span><span class="i">a</span> <span class="t">binary_tree</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="p">Empty</span>
    | <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="p">Node</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">a</span> <span class="o">*</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">binary_tree</span> <span class="o">*</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="t">binary_tree</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">example_tree</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs2', 6)" onmouseover="showTip(event, 'fs2', 6)" class="p">Node</span>(<span class="s">&#39;a&#39;</span>, <span onmouseout="hideTip(event, 'fs2', 7)" onmouseover="showTip(event, 'fs2', 7)" class="p">Node</span>(<span class="s">&#39;b&#39;</span>, <span onmouseout="hideTip(event, 'fs2', 8)" onmouseover="showTip(event, 'fs2', 8)" class="p">Node</span>(<span class="s">&#39;d&#39;</span>, <span onmouseout="hideTip(event, 'fs1', 9)" onmouseover="showTip(event, 'fs1', 9)" class="p">Empty</span>, <span onmouseout="hideTip(event, 'fs1', 10)" onmouseover="showTip(event, 'fs1', 10)" class="p">Empty</span>), <span onmouseout="hideTip(event, 'fs2', 11)" onmouseover="showTip(event, 'fs2', 11)" class="p">Node</span>(<span class="s">&#39;e&#39;</span>, <span onmouseout="hideTip(event, 'fs1', 12)" onmouseover="showTip(event, 'fs1', 12)" class="p">Empty</span>, <span onmouseout="hideTip(event, 'fs1', 13)" onmouseover="showTip(event, 'fs1', 13)" class="p">Empty</span>)),
         <span onmouseout="hideTip(event, 'fs2', 14)" onmouseover="showTip(event, 'fs2', 14)" class="p">Node</span>(<span class="s">&#39;c&#39;</span>, <span onmouseout="hideTip(event, 'fs1', 15)" onmouseover="showTip(event, 'fs1', 15)" class="p">Empty</span>, <span onmouseout="hideTip(event, 'fs2', 16)" onmouseover="showTip(event, 'fs2', 16)" class="p">Node</span>(<span class="s">&#39;f&#39;</span>, <span onmouseout="hideTip(event, 'fs2', 17)" onmouseover="showTip(event, 'fs2', 17)" class="p">Node</span>(<span class="s">&#39;g&#39;</span>, <span onmouseout="hideTip(event, 'fs1', 18)" onmouseover="showTip(event, 'fs1', 18)" class="p">Empty</span>, <span onmouseout="hideTip(event, 'fs1', 19)" onmouseover="showTip(event, 'fs1', 19)" class="p">Empty</span>), <span onmouseout="hideTip(event, 'fs1', 20)" onmouseover="showTip(event, 'fs1', 20)" class="p">Empty</span>)))
</code></pre></td>
</tr>
</table>
<h2><a name="Counting-leaves" class="anchor" href="#Counting-leaves">Counting leaves</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs5', 21)" onmouseover="showTip(event, 'fs5', 21)" class="f">count_leaves</span> <span onmouseout="hideTip(event, 'fs6', 22)" onmouseover="showTip(event, 'fs6', 22)" class="i">tree</span> <span class="o">=</span>
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs6', 23)" onmouseover="showTip(event, 'fs6', 23)" class="i">tree</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs1', 24)" onmouseover="showTip(event, 'fs1', 24)" class="p">Empty</span> <span class="k">-&gt;</span> <span class="n">0</span>
        | <span onmouseout="hideTip(event, 'fs2', 25)" onmouseover="showTip(event, 'fs2', 25)" class="p">Node</span>(_,<span onmouseout="hideTip(event, 'fs1', 26)" onmouseover="showTip(event, 'fs1', 26)" class="p">Empty</span>,<span onmouseout="hideTip(event, 'fs1', 27)" onmouseover="showTip(event, 'fs1', 27)" class="p">Empty</span>) <span class="k">-&gt;</span> <span class="n">1</span>
        | <span onmouseout="hideTip(event, 'fs2', 28)" onmouseover="showTip(event, 'fs2', 28)" class="p">Node</span>(_,<span onmouseout="hideTip(event, 'fs7', 29)" onmouseover="showTip(event, 'fs7', 29)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs8', 30)" onmouseover="showTip(event, 'fs8', 30)" class="i">b</span>) <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs5', 31)" onmouseover="showTip(event, 'fs5', 31)" class="f">count_leaves</span> <span onmouseout="hideTip(event, 'fs7', 32)" onmouseover="showTip(event, 'fs7', 32)" class="i">a</span>) <span class="o">+</span> (<span onmouseout="hideTip(event, 'fs5', 33)" onmouseover="showTip(event, 'fs5', 33)" class="f">count_leaves</span>  <span onmouseout="hideTip(event, 'fs8', 34)" onmouseover="showTip(event, 'fs8', 34)" class="i">b</span>)
</code></pre></td>
</tr>
</table>
<h2><a name="Generating-layout" class="anchor" href="#Generating-layout">Generating layout</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs9', 35)" onmouseover="showTip(event, 'fs9', 35)" class="t">pos_binary_tree</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs10', 36)" onmouseover="showTip(event, 'fs10', 36)" class="p">E</span> <span class="c">(* represents the empty tree *)</span>
    | <span onmouseout="hideTip(event, 'fs11', 37)" onmouseover="showTip(event, 'fs11', 37)" class="p">N</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">a</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs12', 38)" onmouseover="showTip(event, 'fs12', 38)" class="t">int</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs12', 39)" onmouseover="showTip(event, 'fs12', 39)" class="t">int</span> <span class="o">*</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs9', 40)" onmouseover="showTip(event, 'fs9', 40)" class="t">pos_binary_tree</span> <span class="o">*</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs9', 41)" onmouseover="showTip(event, 'fs9', 41)" class="t">pos_binary_tree</span> 
    <span class="c">(*N(w,x,y,l,r) represents a (non-empty) binary tree with root w &quot;positioned&quot; at (x,y), and subtrees l and r *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 42)" onmouseover="showTip(event, 'fs13', 42)" class="f">make_pos_binary_tree</span>  (<span onmouseout="hideTip(event, 'fs6', 43)" onmouseover="showTip(event, 'fs6', 43)" class="i">tree</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs3', 44)" onmouseover="showTip(event, 'fs3', 44)" class="t">binary_tree</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span class="o">=</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs14', 45)" onmouseover="showTip(event, 'fs14', 45)" class="f">layout</span> <span onmouseout="hideTip(event, 'fs15', 46)" onmouseover="showTip(event, 'fs15', 46)" class="i">t</span> <span onmouseout="hideTip(event, 'fs16', 47)" onmouseover="showTip(event, 'fs16', 47)" class="i">x</span> <span onmouseout="hideTip(event, 'fs17', 48)" onmouseover="showTip(event, 'fs17', 48)" class="i">depth</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs15', 49)" onmouseover="showTip(event, 'fs15', 49)" class="i">t</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs1', 50)" onmouseover="showTip(event, 'fs1', 50)" class="p">Empty</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs16', 51)" onmouseover="showTip(event, 'fs16', 51)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs10', 52)" onmouseover="showTip(event, 'fs10', 52)" class="p">E</span>)
            | <span onmouseout="hideTip(event, 'fs2', 53)" onmouseover="showTip(event, 'fs2', 53)" class="p">Node</span>(<span onmouseout="hideTip(event, 'fs18', 54)" onmouseover="showTip(event, 'fs18', 54)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs19', 55)" onmouseover="showTip(event, 'fs19', 55)" class="i">l</span>,<span onmouseout="hideTip(event, 'fs20', 56)" onmouseover="showTip(event, 'fs20', 56)" class="i">r</span>) <span class="k">-&gt;</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 57)" onmouseover="showTip(event, 'fs21', 57)" class="i">x&#39;</span>,<span onmouseout="hideTip(event, 'fs22', 58)" onmouseover="showTip(event, 'fs22', 58)" class="i">lTree</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 59)" onmouseover="showTip(event, 'fs14', 59)" class="f">layout</span> <span onmouseout="hideTip(event, 'fs19', 60)" onmouseover="showTip(event, 'fs19', 60)" class="i">l</span> <span onmouseout="hideTip(event, 'fs16', 61)" onmouseover="showTip(event, 'fs16', 61)" class="i">x</span> (<span onmouseout="hideTip(event, 'fs17', 62)" onmouseover="showTip(event, 'fs17', 62)" class="i">depth</span><span class="o">+</span><span class="n">1</span>)
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 63)" onmouseover="showTip(event, 'fs23', 63)" class="i">x&#39;&#39;</span>,<span onmouseout="hideTip(event, 'fs24', 64)" onmouseover="showTip(event, 'fs24', 64)" class="i">rTree</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 65)" onmouseover="showTip(event, 'fs14', 65)" class="f">layout</span> <span onmouseout="hideTip(event, 'fs20', 66)" onmouseover="showTip(event, 'fs20', 66)" class="i">r</span> (<span onmouseout="hideTip(event, 'fs21', 67)" onmouseover="showTip(event, 'fs21', 67)" class="i">x&#39;</span><span class="o">+</span><span class="n">1</span>) (<span onmouseout="hideTip(event, 'fs17', 68)" onmouseover="showTip(event, 'fs17', 68)" class="i">depth</span><span class="o">+</span><span class="n">1</span>)
                (<span onmouseout="hideTip(event, 'fs23', 69)" onmouseover="showTip(event, 'fs23', 69)" class="i">x&#39;&#39;</span>,<span onmouseout="hideTip(event, 'fs11', 70)" onmouseover="showTip(event, 'fs11', 70)" class="p">N</span>(<span onmouseout="hideTip(event, 'fs18', 71)" onmouseover="showTip(event, 'fs18', 71)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs21', 72)" onmouseover="showTip(event, 'fs21', 72)" class="i">x&#39;</span>,<span onmouseout="hideTip(event, 'fs17', 73)" onmouseover="showTip(event, 'fs17', 73)" class="i">depth</span>,<span onmouseout="hideTip(event, 'fs22', 74)" onmouseover="showTip(event, 'fs22', 74)" class="i">lTree</span>,<span onmouseout="hideTip(event, 'fs24', 75)" onmouseover="showTip(event, 'fs24', 75)" class="i">rTree</span>))
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 76)" onmouseover="showTip(event, 'fs25', 76)" class="i">finalX</span>,<span onmouseout="hideTip(event, 'fs26', 77)" onmouseover="showTip(event, 'fs26', 77)" class="i">finalTree</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 78)" onmouseover="showTip(event, 'fs14', 78)" class="f">layout</span> <span onmouseout="hideTip(event, 'fs6', 79)" onmouseover="showTip(event, 'fs6', 79)" class="i">tree</span> <span class="n">1</span> <span class="n">1</span>
    <span onmouseout="hideTip(event, 'fs26', 80)" onmouseover="showTip(event, 'fs26', 80)" class="i">finalTree</span>
</code></pre></td>
</tr>
</table>
<h2><a name="Example-and-rendering" class="anchor" href="#Example-and-rendering">Example and rendering</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 81)" onmouseover="showTip(event, 'fs27', 81)" class="i">laidOutTree</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 82)" onmouseover="showTip(event, 'fs13', 82)" class="f">make_pos_binary_tree</span> <span onmouseout="hideTip(event, 'fs4', 83)" onmouseover="showTip(event, 'fs4', 83)" class="i">example_tree</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 84)" onmouseover="showTip(event, 'fs28', 84)" class="i">canvas</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 85)" onmouseover="showTip(event, 'fs29', 85)" class="t">Array2D</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 86)" onmouseover="showTip(event, 'fs30', 86)" class="f">init</span> <span class="n">50</span> <span class="n">50</span> (<span class="k">fun</span> _ _ <span class="k">-&gt;</span> <span class="s">&#39; &#39;</span>)

<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs31', 87)" onmouseover="showTip(event, 'fs31', 87)" class="f">draw</span> <span onmouseout="hideTip(event, 'fs32', 88)" onmouseover="showTip(event, 'fs32', 88)" class="i">tree</span> <span class="o">=</span>
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs32', 89)" onmouseover="showTip(event, 'fs32', 89)" class="i">tree</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs10', 90)" onmouseover="showTip(event, 'fs10', 90)" class="p">E</span> <span class="k">-&gt;</span> ()
        | <span onmouseout="hideTip(event, 'fs11', 91)" onmouseover="showTip(event, 'fs11', 91)" class="p">N</span>(<span onmouseout="hideTip(event, 'fs33', 92)" onmouseover="showTip(event, 'fs33', 92)" class="i">v</span>,<span onmouseout="hideTip(event, 'fs16', 93)" onmouseover="showTip(event, 'fs16', 93)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs34', 94)" onmouseover="showTip(event, 'fs34', 94)" class="i">y</span>,<span onmouseout="hideTip(event, 'fs35', 95)" onmouseover="showTip(event, 'fs35', 95)" class="i">l</span>,<span onmouseout="hideTip(event, 'fs36', 96)" onmouseover="showTip(event, 'fs36', 96)" class="i">r</span>) <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs28', 97)" onmouseover="showTip(event, 'fs28', 97)" class="i">canvas</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs34', 98)" onmouseover="showTip(event, 'fs34', 98)" class="i">y</span>,<span onmouseout="hideTip(event, 'fs16', 99)" onmouseover="showTip(event, 'fs16', 99)" class="i">x</span>] <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs33', 100)" onmouseover="showTip(event, 'fs33', 100)" class="i">v</span>
            <span onmouseout="hideTip(event, 'fs31', 101)" onmouseover="showTip(event, 'fs31', 101)" class="f">draw</span> <span onmouseout="hideTip(event, 'fs35', 102)" onmouseover="showTip(event, 'fs35', 102)" class="i">l</span>
            <span onmouseout="hideTip(event, 'fs31', 103)" onmouseover="showTip(event, 'fs31', 103)" class="f">draw</span> <span onmouseout="hideTip(event, 'fs36', 104)" onmouseover="showTip(event, 'fs36', 104)" class="i">r</span>

<span onmouseout="hideTip(event, 'fs31', 105)" onmouseover="showTip(event, 'fs31', 105)" class="f">draw</span> <span onmouseout="hideTip(event, 'fs27', 106)" onmouseover="showTip(event, 'fs27', 106)" class="i">laidOutTree</span>

<span class="k">for</span> <span onmouseout="hideTip(event, 'fs37', 107)" onmouseover="showTip(event, 'fs37', 107)" class="i">y</span> <span class="k">in</span> <span class="n">0..</span><span class="n">49</span> <span class="k">do</span>
    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs38', 108)" onmouseover="showTip(event, 'fs38', 108)" class="i">x</span> <span class="k">in</span> <span class="n">0..</span><span class="n">49</span> <span class="k">do</span>
        <span onmouseout="hideTip(event, 'fs39', 109)" onmouseover="showTip(event, 'fs39', 109)" class="i">stdout</span><span class="o">.</span><span class="f">Write</span>(<span onmouseout="hideTip(event, 'fs28', 110)" onmouseover="showTip(event, 'fs28', 110)" class="i">canvas</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs37', 111)" onmouseover="showTip(event, 'fs37', 111)" class="i">y</span>,<span onmouseout="hideTip(event, 'fs38', 112)" onmouseover="showTip(event, 'fs38', 112)" class="i">x</span>])
    <span onmouseout="hideTip(event, 'fs39', 113)" onmouseover="showTip(event, 'fs39', 113)" class="i">stdout</span><span class="o">.</span><span class="f">WriteLine</span>()
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">union case binary_tree.Empty: &#39;a binary_tree</div>
<div class="tip" id="fs2">union case binary_tree.Node: &#39;a * &#39;a binary_tree * &#39;a binary_tree -&gt; &#39;a binary_tree</div>
<div class="tip" id="fs3">type &#39;a binary_tree =<br />&#160;&#160;| Empty<br />&#160;&#160;| Node of &#39;a * &#39;a binary_tree * &#39;a binary_tree<br /><br />Full name: Script.binary_tree&lt;_&gt;</div>
<div class="tip" id="fs4">val example_tree : char binary_tree<br /><br />Full name: Script.example_tree</div>
<div class="tip" id="fs5">val count_leaves : tree:&#39;a binary_tree -&gt; int<br /><br />Full name: Script.count_leaves</div>
<div class="tip" id="fs6">val tree : &#39;a binary_tree</div>
<div class="tip" id="fs7">val a : &#39;a binary_tree</div>
<div class="tip" id="fs8">val b : &#39;a binary_tree</div>
<div class="tip" id="fs9">type &#39;a pos_binary_tree =<br />&#160;&#160;| E<br />&#160;&#160;| N of &#39;a * int * int * &#39;a pos_binary_tree * &#39;a pos_binary_tree<br /><br />Full name: Script.pos_binary_tree&lt;_&gt;</div>
<div class="tip" id="fs10">union case pos_binary_tree.E: &#39;a pos_binary_tree</div>
<div class="tip" id="fs11">union case pos_binary_tree.N: &#39;a * int * int * &#39;a pos_binary_tree * &#39;a pos_binary_tree -&gt; &#39;a pos_binary_tree</div>
<div class="tip" id="fs12">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs13">val make_pos_binary_tree : tree:&#39;a binary_tree -&gt; &#39;a pos_binary_tree<br /><br />Full name: Script.make_pos_binary_tree</div>
<div class="tip" id="fs14">val layout : (&#39;b binary_tree -&gt; int -&gt; int -&gt; int * &#39;b pos_binary_tree)</div>
<div class="tip" id="fs15">val t : &#39;b binary_tree</div>
<div class="tip" id="fs16">val x : int</div>
<div class="tip" id="fs17">val depth : int</div>
<div class="tip" id="fs18">val a : &#39;b</div>
<div class="tip" id="fs19">val l : &#39;b binary_tree</div>
<div class="tip" id="fs20">val r : &#39;b binary_tree</div>
<div class="tip" id="fs21">val x&#39; : int</div>
<div class="tip" id="fs22">val lTree : &#39;b pos_binary_tree</div>
<div class="tip" id="fs23">val x&#39;&#39; : int</div>
<div class="tip" id="fs24">val rTree : &#39;b pos_binary_tree</div>
<div class="tip" id="fs25">val finalX : int</div>
<div class="tip" id="fs26">val finalTree : &#39;a pos_binary_tree</div>
<div class="tip" id="fs27">val laidOutTree : char pos_binary_tree<br /><br />Full name: Script.laidOutTree</div>
<div class="tip" id="fs28">val canvas : char [,]<br /><br />Full name: Script.canvas</div>
<div class="tip" id="fs29">module Array2D<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs30">val init : length1:int -&gt; length2:int -&gt; initializer:(int -&gt; int -&gt; &#39;T) -&gt; &#39;T [,]<br /><br />Full name: Microsoft.FSharp.Collections.Array2D.init</div>
<div class="tip" id="fs31">val draw : tree:char pos_binary_tree -&gt; unit<br /><br />Full name: Script.draw</div>
<div class="tip" id="fs32">val tree : char pos_binary_tree</div>
<div class="tip" id="fs33">val v : char</div>
<div class="tip" id="fs34">val y : int</div>
<div class="tip" id="fs35">val l : char pos_binary_tree</div>
<div class="tip" id="fs36">val r : char pos_binary_tree</div>
<div class="tip" id="fs37">val y : int32</div>
<div class="tip" id="fs38">val x : int32</div>
<div class="tip" id="fs39">val stdout&lt;&#39;T&gt; : System.IO.TextWriter<br /><br />Full name: Microsoft.FSharp.Core.Operators.stdout</div>

