<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp">  <span class="c">// Define an immutable stack</span>
  <span class="k">type</span> <span class="t">ImmutableStack</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="p">Empty</span> 
    | <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="p">Stack</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">T</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">ImmutableStack</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="f">Push</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 7)" onmouseover="showTip(event, 'fs2', 7)" class="p">Stack</span>(<span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs4', 9)" onmouseover="showTip(event, 'fs4', 9)" class="i">s</span>)

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs4', 10)" onmouseover="showTip(event, 'fs4', 10)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="i">Pop</span> <span class="o">=</span> 
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs4', 12)" onmouseover="showTip(event, 'fs4', 12)" class="i">s</span> <span class="k">with</span>
      | <span onmouseout="hideTip(event, 'fs1', 13)" onmouseover="showTip(event, 'fs1', 13)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="f">failwith</span> <span class="s">&quot;Underflow&quot;</span>
      | <span onmouseout="hideTip(event, 'fs2', 15)" onmouseover="showTip(event, 'fs2', 15)" class="p">Stack</span>(_,<span onmouseout="hideTip(event, 'fs9', 16)" onmouseover="showTip(event, 'fs9', 16)" class="i">st</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 17)" onmouseover="showTip(event, 'fs9', 17)" class="i">st</span>

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs4', 18)" onmouseover="showTip(event, 'fs4', 18)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 19)" onmouseover="showTip(event, 'fs10', 19)" class="i">Top</span> <span class="o">=</span> 
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs4', 20)" onmouseover="showTip(event, 'fs4', 20)" class="i">s</span> <span class="k">with</span>
      | <span onmouseout="hideTip(event, 'fs1', 21)" onmouseover="showTip(event, 'fs1', 21)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs8', 22)" onmouseover="showTip(event, 'fs8', 22)" class="f">failwith</span> <span class="s">&quot;Contain no elements&quot;</span>
      | <span onmouseout="hideTip(event, 'fs2', 23)" onmouseover="showTip(event, 'fs2', 23)" class="p">Stack</span>(<span onmouseout="hideTip(event, 'fs11', 24)" onmouseover="showTip(event, 'fs11', 24)" class="i">t</span>,_) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 25)" onmouseover="showTip(event, 'fs11', 25)" class="i">t</span>

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs4', 26)" onmouseover="showTip(event, 'fs4', 26)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 27)" onmouseover="showTip(event, 'fs12', 27)" class="i">IEmpty</span> <span class="o">=</span> 
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs4', 28)" onmouseover="showTip(event, 'fs4', 28)" class="i">s</span> <span class="k">with</span>
      | <span onmouseout="hideTip(event, 'fs1', 29)" onmouseover="showTip(event, 'fs1', 29)" class="p">Empty</span> <span class="k">-&gt;</span> <span class="k">true</span>
      | _ <span class="k">-&gt;</span> <span class="k">false</span>

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs4', 30)" onmouseover="showTip(event, 'fs4', 30)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 31)" onmouseover="showTip(event, 'fs13', 31)" class="i">All</span> <span class="o">=</span> 
      <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs14', 32)" onmouseover="showTip(event, 'fs14', 32)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs15', 33)" onmouseover="showTip(event, 'fs15', 33)" class="i">acc</span> <span class="o">=</span> <span class="k">function</span>
      | <span onmouseout="hideTip(event, 'fs1', 34)" onmouseover="showTip(event, 'fs1', 34)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 35)" onmouseover="showTip(event, 'fs15', 35)" class="i">acc</span>
      | <span onmouseout="hideTip(event, 'fs2', 36)" onmouseover="showTip(event, 'fs2', 36)" class="p">Stack</span>(<span onmouseout="hideTip(event, 'fs16', 37)" onmouseover="showTip(event, 'fs16', 37)" class="i">t</span>,<span onmouseout="hideTip(event, 'fs17', 38)" onmouseover="showTip(event, 'fs17', 38)" class="i">st</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 39)" onmouseover="showTip(event, 'fs14', 39)" class="f">loop</span> (<span onmouseout="hideTip(event, 'fs16', 40)" onmouseover="showTip(event, 'fs16', 40)" class="i">t</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs15', 41)" onmouseover="showTip(event, 'fs15', 41)" class="i">acc</span>) <span onmouseout="hideTip(event, 'fs17', 42)" onmouseover="showTip(event, 'fs17', 42)" class="i">st</span>
      <span onmouseout="hideTip(event, 'fs14', 43)" onmouseover="showTip(event, 'fs14', 43)" class="f">loop</span> [] <span onmouseout="hideTip(event, 'fs4', 44)" onmouseover="showTip(event, 'fs4', 44)" class="i">s</span>

  <span class="c">// Return an ImmutableStack&lt;&#39;a&gt; object</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 45)" onmouseover="showTip(event, 'fs18', 45)" class="i">s</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 46)" onmouseover="showTip(event, 'fs3', 46)" class="t">ImmutableStack</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs1', 47)" onmouseover="showTip(event, 'fs1', 47)" class="p">Empty</span>
  
  <span class="c">// Return Stack (5,Empty)</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 48)" onmouseover="showTip(event, 'fs19', 48)" class="i">s&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 49)" onmouseover="showTip(event, 'fs18', 49)" class="i">s</span><span class="o">.</span><span class="f">Push</span> <span class="n">5</span>

  <span class="c">// Return Stack (4,Stack (5,Empty))</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 50)" onmouseover="showTip(event, 'fs20', 50)" class="i">s&#39;&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 51)" onmouseover="showTip(event, 'fs19', 51)" class="i">s&#39;</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 52)" onmouseover="showTip(event, 'fs21', 52)" class="f">Push</span> <span class="n">4</span>

  <span class="c">// Print out a list [5; 4]</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 53)" onmouseover="showTip(event, 'fs22', 53)" class="i">printAll</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 54)" onmouseover="showTip(event, 'fs20', 54)" class="i">s&#39;&#39;</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 55)" onmouseover="showTip(event, 'fs23', 55)" class="i">All</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">union case ImmutableStack.Empty: ImmutableStack&lt;&#39;T&gt;</div>
<div class="tip" id="fs2">union case ImmutableStack.Stack: &#39;T * ImmutableStack&lt;&#39;T&gt; -&gt; ImmutableStack&lt;&#39;T&gt;</div>
<div class="tip" id="fs3">type ImmutableStack&lt;&#39;T&gt; =<br />&#160;&#160;| Empty<br />&#160;&#160;| Stack of &#39;T * ImmutableStack&lt;&#39;T&gt;<br />&#160;&#160;member Push : x:&#39;T -&gt; ImmutableStack&lt;&#39;T&gt;<br />&#160;&#160;member All : &#39;T list<br />&#160;&#160;member IEmpty : bool<br />&#160;&#160;member Pop : ImmutableStack&lt;&#39;T&gt;<br />&#160;&#160;member Top : &#39;T<br /><br />Full name: Script.ImmutableStack&lt;_&gt;</div>
<div class="tip" id="fs4">val s : ImmutableStack&lt;&#39;T&gt;</div>
<div class="tip" id="fs5">member ImmutableStack.Push : x:&#39;T -&gt; ImmutableStack&lt;&#39;T&gt;<br /><br />Full name: Script.ImmutableStack`1.Push</div>
<div class="tip" id="fs6">val x : &#39;T</div>
<div class="tip" id="fs7">member ImmutableStack.Pop : ImmutableStack&lt;&#39;T&gt;<br /><br />Full name: Script.ImmutableStack`1.Pop</div>
<div class="tip" id="fs8">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs9">val st : ImmutableStack&lt;&#39;T&gt;</div>
<div class="tip" id="fs10">member ImmutableStack.Top : &#39;T<br /><br />Full name: Script.ImmutableStack`1.Top</div>
<div class="tip" id="fs11">val t : &#39;T</div>
<div class="tip" id="fs12">member ImmutableStack.IEmpty : bool<br /><br />Full name: Script.ImmutableStack`1.IEmpty</div>
<div class="tip" id="fs13">member ImmutableStack.All : &#39;T list<br /><br />Full name: Script.ImmutableStack`1.All</div>
<div class="tip" id="fs14">val loop : (&#39;a list -&gt; ImmutableStack&lt;&#39;a&gt; -&gt; &#39;a list)</div>
<div class="tip" id="fs15">val acc : &#39;a list</div>
<div class="tip" id="fs16">val t : &#39;a</div>
<div class="tip" id="fs17">val st : ImmutableStack&lt;&#39;a&gt;</div>
<div class="tip" id="fs18">val s : ImmutableStack&lt;&#39;a&gt;<br /><br />Full name: Script.s</div>
<div class="tip" id="fs19">val s&#39; : ImmutableStack&lt;int&gt;<br /><br />Full name: Script.s&#39;</div>
<div class="tip" id="fs20">val s&#39;&#39; : ImmutableStack&lt;int&gt;<br /><br />Full name: Script.s&#39;&#39;</div>
<div class="tip" id="fs21">member ImmutableStack.Push : x:&#39;T -&gt; ImmutableStack&lt;&#39;T&gt;</div>
<div class="tip" id="fs22">val printAll : int list<br /><br />Full name: Script.printAll</div>
<div class="tip" id="fs23">property ImmutableStack.All: int list</div>

