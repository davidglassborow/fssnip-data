<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">str</span> <span class="o">=</span> <span class="s">&quot;00:01:30&quot;</span>

<span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">fold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">previous</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">current</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">previous</span> <span class="o">*</span> <span class="n">60.0</span> <span class="o">+</span> (<span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="t">Convert</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="f">ToDouble</span> <span onmouseout="hideTip(event, 'fs5', 10)" onmouseover="showTip(event, 'fs5', 10)" class="i">current</span>)) <span class="n">0.0</span> (<span onmouseout="hideTip(event, 'fs1', 11)" onmouseover="showTip(event, 'fs1', 11)" class="i">str</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="f">Split</span>(<span class="s">&#39;:&#39;</span>))

<span class="c">// error FS0041: A unique overload for method &#39;ToDouble&#39; could not be determined based on type information prior to this program point. A type annotation may be needed.</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val str : string<br /><br />Full name: Script.str</div>
<div class="tip" id="fs2">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs3">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; array:&#39;T [] -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.Array.fold</div>
<div class="tip" id="fs4">val previous : float</div>
<div class="tip" id="fs5">val current : string</div>
<div class="tip" id="fs6">namespace System</div>
<div class="tip" id="fs7">type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>
<div class="tip" id="fs8">System.Convert.ToDouble(value: System.DateTime) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: bool) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: string) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: decimal) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: float) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: float32) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: uint64) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: int64) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: uint32) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: int) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs9">System.String.Split([&lt;System.ParamArray&gt;] separator: char []) : string []<br />System.String.Split(separator: string [], options: System.StringSplitOptions) : string []<br />System.String.Split(separator: char [], options: System.StringSplitOptions) : string []<br />System.String.Split(separator: char [], count: int) : string []<br />System.String.Split(separator: string [], count: int, options: System.StringSplitOptions) : string []<br />System.String.Split(separator: char [], count: int, options: System.StringSplitOptions) : string []</div>

