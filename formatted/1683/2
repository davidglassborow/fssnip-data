<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp">    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="f">isFractional</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">n</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">n</span> <span class="o">&lt;&gt;</span> (<span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="t">Decimal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="f">Truncate</span> <span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="i">n</span>)

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="f">correct</span> <span onmouseout="hideTip(event, 'fs3', 9)" onmouseover="showTip(event, 'fs3', 9)" class="i">n</span> <span class="o">=</span>
        <span class="c">//round after 20th digit after decimal point to fix propagation of floating point errors</span>
        <span onmouseout="hideTip(event, 'fs4', 10)" onmouseover="showTip(event, 'fs4', 10)" class="t">Decimal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="f">Round</span>(<span onmouseout="hideTip(event, 'fs3', 12)" onmouseover="showTip(event, 'fs3', 12)" class="i">n</span>, <span class="n">20</span>) 

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="f">resultAndWhetherItHasFractionalSubResults</span> (<span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">n</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="t">list</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="t">decimal</span><span class="o">&gt;</span>) <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="i">result</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 18)" onmouseover="showTip(event, 'fs9', 18)" class="i">n</span><span class="o">.</span>[<span class="n">0</span>] <span class="o">+</span> <span class="n">13M</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs9', 19)" onmouseover="showTip(event, 'fs9', 19)" class="i">n</span><span class="o">.</span>[<span class="n">1</span>] <span class="o">/</span> <span onmouseout="hideTip(event, 'fs9', 20)" onmouseover="showTip(event, 'fs9', 20)" class="i">n</span><span class="o">.</span>[<span class="n">2</span>] <span class="o">+</span> <span onmouseout="hideTip(event, 'fs9', 21)" onmouseover="showTip(event, 'fs9', 21)" class="i">n</span><span class="o">.</span>[<span class="n">3</span>] <span class="o">+</span> <span class="n">12M</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs9', 22)" onmouseover="showTip(event, 'fs9', 22)" class="i">n</span><span class="o">.</span>[<span class="n">4</span>]  <span class="o">-</span> <span onmouseout="hideTip(event, 'fs9', 23)" onmouseover="showTip(event, 'fs9', 23)" class="i">n</span><span class="o">.</span>[<span class="n">5</span>] <span class="o">-</span> <span class="n">11M</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs9', 24)" onmouseover="showTip(event, 'fs9', 24)" class="i">n</span><span class="o">.</span>[<span class="n">6</span>] <span class="o">*</span> <span onmouseout="hideTip(event, 'fs9', 25)" onmouseover="showTip(event, 'fs9', 25)" class="i">n</span><span class="o">.</span>[<span class="n">7</span>] <span class="o">/</span> <span onmouseout="hideTip(event, 'fs9', 26)" onmouseover="showTip(event, 'fs9', 26)" class="i">n</span><span class="o">.</span>[<span class="n">8</span>] <span class="o">-</span> <span class="n">10M</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 27)" onmouseover="showTip(event, 'fs13', 27)" class="i">hasFractionalSubResults</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 28)" onmouseover="showTip(event, 'fs2', 28)" class="f">isFractional</span> (<span onmouseout="hideTip(event, 'fs6', 29)" onmouseover="showTip(event, 'fs6', 29)" class="f">correct</span>(<span onmouseout="hideTip(event, 'fs9', 30)" onmouseover="showTip(event, 'fs9', 30)" class="i">n</span><span class="o">.</span>[<span class="n">1</span>] <span class="o">/</span> <span onmouseout="hideTip(event, 'fs9', 31)" onmouseover="showTip(event, 'fs9', 31)" class="i">n</span><span class="o">.</span>[<span class="n">2</span>])) <span class="o">||</span> <span onmouseout="hideTip(event, 'fs2', 32)" onmouseover="showTip(event, 'fs2', 32)" class="f">isFractional</span> (<span onmouseout="hideTip(event, 'fs6', 33)" onmouseover="showTip(event, 'fs6', 33)" class="f">correct</span>(<span onmouseout="hideTip(event, 'fs9', 34)" onmouseover="showTip(event, 'fs9', 34)" class="i">n</span><span class="o">.</span>[<span class="n">7</span>] <span class="o">/</span> <span onmouseout="hideTip(event, 'fs9', 35)" onmouseover="showTip(event, 'fs9', 35)" class="i">n</span><span class="o">.</span>[<span class="n">8</span>]))
        (<span onmouseout="hideTip(event, 'fs6', 36)" onmouseover="showTip(event, 'fs6', 36)" class="f">correct</span> <span onmouseout="hideTip(event, 'fs12', 37)" onmouseover="showTip(event, 'fs12', 37)" class="i">result</span>, <span onmouseout="hideTip(event, 'fs13', 38)" onmouseover="showTip(event, 'fs13', 38)" class="i">hasFractionalSubResults</span>) <span class="c">//return tuple</span>
        
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 39)" onmouseover="showTip(event, 'fs14', 39)" class="i">``1st solution in blog post``</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 40)" onmouseover="showTip(event, 'fs8', 40)" class="f">resultAndWhetherItHasFractionalSubResults</span> ([<span class="n">1</span>; <span class="n">2</span>; <span class="n">6</span>; <span class="n">4</span>; <span class="n">7</span>; <span class="n">8</span>; <span class="n">3</span>; <span class="n">5</span>; <span class="n">9</span>]  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 41)" onmouseover="showTip(event, 'fs15', 41)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 42)" onmouseover="showTip(event, 'fs16', 42)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs17', 43)" onmouseover="showTip(event, 'fs17', 43)" class="i">n</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs17', 44)" onmouseover="showTip(event, 'fs17', 44)" class="i">n</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs11', 45)" onmouseover="showTip(event, 'fs11', 45)" class="f">decimal</span>))

    <span class="c">// source: http://stackoverflow.com/questions/286427/calculating-permutations-in-f</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs18', 46)" onmouseover="showTip(event, 'fs18', 46)" class="f">permute</span> <span onmouseout="hideTip(event, 'fs19', 47)" onmouseover="showTip(event, 'fs19', 47)" class="i">list</span> <span onmouseout="hideTip(event, 'fs20', 48)" onmouseover="showTip(event, 'fs20', 48)" class="i">taken</span> <span class="o">=</span> 
      <span onmouseout="hideTip(event, 'fs21', 49)" onmouseover="showTip(event, 'fs21', 49)" class="i">seq</span> { 
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs22', 50)" onmouseover="showTip(event, 'fs22', 50)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 51)" onmouseover="showTip(event, 'fs23', 51)" class="f">count</span> <span onmouseout="hideTip(event, 'fs20', 52)" onmouseover="showTip(event, 'fs20', 52)" class="i">taken</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 53)" onmouseover="showTip(event, 'fs15', 53)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 54)" onmouseover="showTip(event, 'fs24', 54)" class="f">length</span> <span onmouseout="hideTip(event, 'fs19', 55)" onmouseover="showTip(event, 'fs19', 55)" class="i">list</span> 
            <span class="k">then</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs15', 56)" onmouseover="showTip(event, 'fs15', 56)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 57)" onmouseover="showTip(event, 'fs25', 57)" class="i">empty</span> 
        <span class="k">else</span>
            <span class="k">for</span> <span onmouseout="hideTip(event, 'fs26', 58)" onmouseover="showTip(event, 'fs26', 58)" class="i">element</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs19', 59)" onmouseover="showTip(event, 'fs19', 59)" class="i">list</span> <span class="k">do</span>
              <span class="k">if</span> <span onmouseout="hideTip(event, 'fs27', 60)" onmouseover="showTip(event, 'fs27', 60)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs22', 61)" onmouseover="showTip(event, 'fs22', 61)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 62)" onmouseover="showTip(event, 'fs28', 62)" class="f">contains</span> <span onmouseout="hideTip(event, 'fs26', 63)" onmouseover="showTip(event, 'fs26', 63)" class="i">element</span> <span onmouseout="hideTip(event, 'fs20', 64)" onmouseover="showTip(event, 'fs20', 64)" class="i">taken</span>) <span class="k">then</span> 
                <span class="k">for</span> <span onmouseout="hideTip(event, 'fs29', 65)" onmouseover="showTip(event, 'fs29', 65)" class="i">permutation</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs18', 66)" onmouseover="showTip(event, 'fs18', 66)" class="f">permute</span> <span onmouseout="hideTip(event, 'fs19', 67)" onmouseover="showTip(event, 'fs19', 67)" class="i">list</span> (<span onmouseout="hideTip(event, 'fs22', 68)" onmouseover="showTip(event, 'fs22', 68)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 69)" onmouseover="showTip(event, 'fs30', 69)" class="f">add</span> <span onmouseout="hideTip(event, 'fs26', 70)" onmouseover="showTip(event, 'fs26', 70)" class="i">element</span> <span onmouseout="hideTip(event, 'fs20', 71)" onmouseover="showTip(event, 'fs20', 71)" class="i">taken</span>)  <span class="k">do</span>
                  <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs26', 72)" onmouseover="showTip(event, 'fs26', 72)" class="i">element</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs29', 73)" onmouseover="showTip(event, 'fs29', 73)" class="i">permutation</span> 
        } <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 74)" onmouseover="showTip(event, 'fs15', 74)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 75)" onmouseover="showTip(event, 'fs31', 75)" class="f">ofSeq</span>
    
    <span class="c">//returns solutions as tuple in the form of ((input, (result, hasFractionalSubResults))</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 76)" onmouseover="showTip(event, 'fs32', 76)" class="f">solutions</span> <span onmouseout="hideTip(event, 'fs33', 77)" onmouseover="showTip(event, 'fs33', 77)" class="i">allowFractionalSubResults</span><span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 78)" onmouseover="showTip(event, 'fs34', 78)" class="i">numbers</span> <span class="o">=</span> [<span class="n">1</span>; <span class="n">2</span>; <span class="n">3</span>; <span class="n">4</span>; <span class="n">5</span>; <span class="n">6</span>; <span class="n">7</span>; <span class="n">8</span>; <span class="n">9</span>] <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 79)" onmouseover="showTip(event, 'fs15', 79)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 80)" onmouseover="showTip(event, 'fs16', 80)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs17', 81)" onmouseover="showTip(event, 'fs17', 81)" class="i">n</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs17', 82)" onmouseover="showTip(event, 'fs17', 82)" class="i">n</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs11', 83)" onmouseover="showTip(event, 'fs11', 83)" class="f">decimal</span>)
        <span onmouseout="hideTip(event, 'fs18', 84)" onmouseover="showTip(event, 'fs18', 84)" class="f">permute</span> <span onmouseout="hideTip(event, 'fs34', 85)" onmouseover="showTip(event, 'fs34', 85)" class="i">numbers</span> <span onmouseout="hideTip(event, 'fs22', 86)" onmouseover="showTip(event, 'fs22', 86)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 87)" onmouseover="showTip(event, 'fs35', 87)" class="i">empty</span> 
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 88)" onmouseover="showTip(event, 'fs15', 88)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 89)" onmouseover="showTip(event, 'fs16', 89)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs36', 90)" onmouseover="showTip(event, 'fs36', 90)" class="i">input</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs36', 91)" onmouseover="showTip(event, 'fs36', 91)" class="i">input</span>, <span onmouseout="hideTip(event, 'fs8', 92)" onmouseover="showTip(event, 'fs8', 92)" class="f">resultAndWhetherItHasFractionalSubResults</span> <span onmouseout="hideTip(event, 'fs36', 93)" onmouseover="showTip(event, 'fs36', 93)" class="i">input</span>)) 
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 94)" onmouseover="showTip(event, 'fs15', 94)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 95)" onmouseover="showTip(event, 'fs37', 95)" class="f">filter</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs36', 96)" onmouseover="showTip(event, 'fs36', 96)" class="i">input</span>, (<span onmouseout="hideTip(event, 'fs12', 97)" onmouseover="showTip(event, 'fs12', 97)" class="i">result</span>, <span onmouseout="hideTip(event, 'fs13', 98)" onmouseover="showTip(event, 'fs13', 98)" class="i">hasFractionalSubResults</span>)) <span class="k">-&gt;</span> <span class="i">result</span> <span class="o">=</span> <span class="n">66M</span> <span class="o">&amp;&amp;</span> (<span onmouseout="hideTip(event, 'fs33', 99)" onmouseover="showTip(event, 'fs33', 99)" class="i">allowFractionalSubResults</span> <span class="o">||</span> (<span onmouseout="hideTip(event, 'fs27', 100)" onmouseover="showTip(event, 'fs27', 100)" class="f">not</span> <span onmouseout="hideTip(event, 'fs13', 101)" onmouseover="showTip(event, 'fs13', 101)" class="i">hasFractionalSubResults</span>)))


    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 102)" onmouseover="showTip(event, 'fs38', 102)" class="i">``solutions WITH fractional sub-results``</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 103)" onmouseover="showTip(event, 'fs32', 103)" class="f">solutions</span>  <span class="k">true</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 104)" onmouseover="showTip(event, 'fs39', 104)" class="i">``number of solutions WITH fractional sub-results``</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 105)" onmouseover="showTip(event, 'fs38', 105)" class="i">``solutions WITH fractional sub-results``</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 106)" onmouseover="showTip(event, 'fs15', 106)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 107)" onmouseover="showTip(event, 'fs24', 107)" class="f">length</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 108)" onmouseover="showTip(event, 'fs40', 108)" class="i">``solutions WITHOUT fractional sub-results``</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 109)" onmouseover="showTip(event, 'fs32', 109)" class="f">solutions</span>  <span class="k">false</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 110)" onmouseover="showTip(event, 'fs41', 110)" class="i">``number of solutions WITHOUT fractional sub-results``</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 111)" onmouseover="showTip(event, 'fs40', 111)" class="i">``solutions WITHOUT fractional sub-results``</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 112)" onmouseover="showTip(event, 'fs15', 112)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 113)" onmouseover="showTip(event, 'fs24', 113)" class="f">length</span>
</code></pre></td>
</tr>
</table>
<p><strong><em></em></strong>OUTPUT<strong><em></em></strong><strong><em></em></strong><strong></strong>*</p>
<p>...</p>
<p>val ( 1st solution in blog post ) : decimal * bool =
(66.00000000000000000000M, true)</p>
<p>...</p>
<p>val ( solutions WITH fractional sub-results ) :
(decimal list <em> (decimal </em> bool)) list =
[([1M; 2M; 6M; 4M; 7M; 8M; 3M; 5M; 9M], (66.00000000000000000000M, true));
([1M; 2M; 6M; 4M; 7M; 8M; 5M; 3M; 9M], (66.00000000000000000000M, true));
([1M; 3M; 2M; 4M; 5M; 8M; 7M; 9M; 6M], (66.0M, true));
([1M; 3M; 2M; 4M; 5M; 8M; 9M; 7M; 6M], (66.0M, true));
([1M; 3M; 2M; 9M; 5M; 6M; 4M; 7M; 8M], (66.0M, true));
([1M; 3M; 2M; 9M; 5M; 6M; 7M; 4M; 8M], (66.0M, true));
([1M; 3M; 4M; 7M; 6M; 5M; 2M; 9M; 8M], (66.00M, true));
([1M; 3M; 4M; 7M; 6M; 5M; 9M; 2M; 8M], (66.00M, true));
([1M; 3M; 6M; 2M; 7M; 9M; 4M; 5M; 8M], (66.0M, true));
([1M; 3M; 6M; 2M; 7M; 9M; 5M; 4M; 8M], (66.0M, true));
([1M; 3M; 9M; 4M; 7M; 8M; 2M; 5M; 6M], (66.00000000000000000000M, true));
([1M; 3M; 9M; 4M; 7M; 8M; 5M; 2M; 6M], (66.00000000000000000000M, true));
([1M; 4M; 8M; 2M; 7M; 9M; 3M; 5M; 6M], (66.0M, true));
([1M; 4M; 8M; 2M; 7M; 9M; 5M; 3M; 6M], (66.0M, true));
([1M; 5M; 2M; 3M; 4M; 8M; 7M; 9M; 6M], (66.0M, true));
([1M; 5M; 2M; 3M; 4M; 8M; 9M; 7M; 6M], (66.0M, true));
([1M; 5M; 2M; 8M; 4M; 7M; 3M; 9M; 6M], (66.0M, true));
([1M; 5M; 2M; 8M; 4M; 7M; 9M; 3M; 6M], (66.0M, true));
([1M; 5M; 3M; 9M; 4M; 2M; 7M; 8M; 6M], (66.00000000000000000000M, true));
([1M; 5M; 3M; 9M; 4M; 2M; 8M; 7M; 6M], (66.00000000000000000000M, true));
([1M; 8M; 3M; 7M; 4M; 5M; 2M; 6M; 9M], (66.00000000000000000000M, true));
([1M; 8M; 3M; 7M; 4M; 5M; 6M; 2M; 9M], (66.00000000000000000000M, true));
([1M; 9M; 6M; 4M; 5M; 8M; 3M; 7M; 2M], (66.0M, true));
([1M; 9M; 6M; 4M; 5M; 8M; 7M; 3M; 2M], (66.0M, true));
([1M; 9M; 6M; 7M; 5M; 2M; 3M; 4M; 8M], (66.0M, true));
([1M; 9M; 6M; 7M; 5M; 2M; 4M; 3M; 8M], (66.0M, true));
([2M; 1M; 4M; 3M; 7M; 9M; 5M; 6M; 8M], (66.00M, true));
([2M; 1M; 4M; 3M; 7M; 9M; 6M; 5M; 8M], (66.00M, true));
([2M; 3M; 6M; 1M; 7M; 9M; 4M; 5M; 8M], (66.0M, true));
([2M; 3M; 6M; 1M; 7M; 9M; 5M; 4M; 8M], (66.0M, true));
([2M; 4M; 8M; 1M; 7M; 9M; 3M; 5M; 6M], (66.0M, true));
([2M; 4M; 8M; 1M; 7M; 9M; 5M; 3M; 6M], (66.0M, true));
([2M; 6M; 9M; 8M; 5M; 1M; 4M; 7M; 3M], (66.00000000000000000000M, true));
([2M; 6M; 9M; 8M; 5M; 1M; 7M; 4M; 3M], (66.00000000000000000000M, true));
([2M; 8M; 6M; 9M; 4M; 1M; 5M; 7M; 3M], (66.00000000000000000000M, true));
([2M; 8M; 6M; 9M; 4M; 1M; 7M; 5M; 3M], (66.00000000000000000000M, true));
([2M; 9M; 6M; 3M; 5M; 1M; 4M; 7M; 8M], (66.0M, true));
([2M; 9M; 6M; 3M; 5M; 1M; 7M; 4M; 8M], (66.0M, true));
([3M; 1M; 4M; 2M; 7M; 9M; 5M; 6M; 8M], (66.00M, true));
([3M; 1M; 4M; 2M; 7M; 9M; 6M; 5M; 8M], (66.00M, true));
([3M; 2M; 1M; 5M; 4M; 7M; 8M; 9M; 6M], (66M, true));
([3M; 2M; 1M; 5M; 4M; 7M; 9M; 8M; 6M], (66M, true));
([3M; 2M; 4M; 8M; 5M; 1M; 7M; 9M; 6M], (66.0M, true));
([3M; 2M; 4M; 8M; 5M; 1M; 9M; 7M; 6M], (66.0M, true));
([3M; 2M; 8M; 6M; 5M; 1M; 7M; 9M; 4M], (66.00M, true));
([3M; 2M; 8M; 6M; 5M; 1M; 9M; 7M; 4M], (66.00M, true));
([3M; 5M; 2M; 1M; 4M; 8M; 7M; 9M; 6M], (66.0M, true));
([3M; 5M; 2M; 1M; 4M; 8M; 9M; 7M; 6M], (66.0M, true));
([3M; 6M; 4M; 9M; 5M; 8M; 1M; 7M; 2M], (66.0M, true));
([3M; 6M; 4M; 9M; 5M; 8M; 7M; 1M; 2M], (66.0M, true));
([3M; 9M; 2M; 8M; 1M; 5M; 6M; 7M; 4M], (66.0M, true));
([3M; 9M; 2M; 8M; 1M; 5M; 7M; 6M; 4M], (66.0M, true));
([3M; 9M; 6M; 2M; 5M; 1M; 4M; 7M; 8M], (66.0M, true));
([3M; 9M; 6M; 2M; 5M; 1M; 7M; 4M; 8M], (66.0M, true));
([4M; 2M; 6M; 1M; 7M; 8M; 3M; 5M; 9M], (66.00000000000000000000M, true));
([4M; 2M; 6M; 1M; 7M; 8M; 5M; 3M; 9M], (66.00000000000000000000M, true));
([4M; 3M; 2M; 1M; 5M; 8M; 7M; 9M; 6M], (66.0M, true));
([4M; 3M; 2M; 1M; 5M; 8M; 9M; 7M; 6M], (66.0M, true));
([4M; 3M; 9M; 1M; 7M; 8M; 2M; 5M; 6M], (66.00000000000000000000M, true));
([4M; 3M; 9M; 1M; 7M; 8M; 5M; 2M; 6M], (66.00000000000000000000M, true));
([4M; 9M; 6M; 1M; 5M; 8M; 3M; 7M; 2M], (66.0M, true));
([4M; 9M; 6M; 1M; 5M; 8M; 7M; 3M; 2M], (66.0M, true));
([5M; 1M; 2M; 9M; 6M; 7M; 3M; 4M; 8M], (66.0M, true));
([5M; 1M; 2M; 9M; 6M; 7M; 4M; 3M; 8M], (66.0M, true));
([5M; 2M; 1M; 3M; 4M; 7M; 8M; 9M; 6M], (66M, true));
([5M; 2M; 1M; 3M; 4M; 7M; 9M; 8M; 6M], (66M, true));
([5M; 3M; 1M; 7M; 2M; 6M; 8M; 9M; 4M], (66M, true));
([5M; 3M; 1M; 7M; 2M; 6M; 9M; 8M; 4M], (66M, false));
([5M; 4M; 1M; 9M; 2M; 7M; 3M; 8M; 6M], (66M, true));
([5M; 4M; 1M; 9M; 2M; 7M; 8M; 3M; 6M], (66M, true));
([5M; 4M; 8M; 9M; 6M; 7M; 1M; 3M; 2M], (66.0M, true));
([5M; 4M; 8M; 9M; 6M; 7M; 3M; 1M; 2M], (66.0M, true));
([5M; 7M; 2M; 8M; 3M; 9M; 1M; 6M; 4M], (66.0M, true));
([5M; 7M; 2M; 8M; 3M; 9M; 6M; 1M; 4M], (66.0M, true));
([5M; 9M; 3M; 6M; 2M; 1M; 7M; 8M; 4M], (66M, false));
([5M; 9M; 3M; 6M; 2M; 1M; 8M; 7M; 4M], (66M, true));
([6M; 2M; 8M; 3M; 5M; 1M; 7M; 9M; 4M], (66.00M, true));
([6M; 2M; 8M; 3M; 5M; 1M; 9M; 7M; 4M], (66.00M, true));
([6M; 3M; 1M; 9M; 2M; 5M; 7M; 8M; 4M], (66M, false));
([6M; 3M; 1M; 9M; 2M; 5M; 8M; 7M; 4M], (66M, true));
([6M; 9M; 3M; 5M; 2M; 1M; 7M; 8M; 4M], (66M, false));
([6M; 9M; 3M; 5M; 2M; 1M; 8M; 7M; 4M], (66M, true));
([7M; 1M; 4M; 9M; 6M; 5M; 2M; 3M; 8M], (66.00M, true));
([7M; 1M; 4M; 9M; 6M; 5M; 3M; 2M; 8M], (66.00M, true));
([7M; 2M; 8M; 9M; 6M; 5M; 1M; 3M; 4M], (66.00M, true));
([7M; 2M; 8M; 9M; 6M; 5M; 3M; 1M; 4M], (66.00M, true));
([7M; 3M; 1M; 5M; 2M; 6M; 8M; 9M; 4M], (66M, true));
([7M; 3M; 1M; 5M; 2M; 6M; 9M; 8M; 4M], (66M, false));
([7M; 3M; 2M; 8M; 5M; 9M; 1M; 6M; 4M], (66.0M, true));
([7M; 3M; 2M; 8M; 5M; 9M; 6M; 1M; 4M], (66.0M, true));
([7M; 3M; 4M; 1M; 6M; 5M; 2M; 9M; 8M], (66.00M, ...)); ...]
val ( number of solutions WITH fractional sub-results ) : int = 136
val ( solutions WITHOUT fractional sub-results ) :
(decimal list <em> (decimal </em> bool)) list =
[([5M; 3M; 1M; 7M; 2M; 6M; 9M; 8M; 4M], (66M, false));
([5M; 9M; 3M; 6M; 2M; 1M; 7M; 8M; 4M], (66M, false));
([6M; 3M; 1M; 9M; 2M; 5M; 7M; 8M; 4M], (66M, false));
([6M; 9M; 3M; 5M; 2M; 1M; 7M; 8M; 4M], (66M, false));
([7M; 3M; 1M; 5M; 2M; 6M; 9M; 8M; 4M], (66M, false));
([9M; 3M; 1M; 6M; 2M; 5M; 7M; 8M; 4M], (66M, false))]
val ( number of solutions WITHOUT fractional sub-results ) : int = 6
end</p>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">val isFractional : n:decimal -&gt; bool<br /><br />Full name: Script.isFractional</div>
<div class="tip" id="fs3">val n : decimal</div>
<div class="tip" id="fs4">Multiple items<br />type Decimal =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : value:int -&gt; decimal + 7 overloads<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : value:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 3 overloads<br />&#160;&#160;&#160;&#160;static val Zero : decimal<br />&#160;&#160;&#160;&#160;static val One : decimal<br />&#160;&#160;&#160;&#160;static val MinusOne : decimal<br />&#160;&#160;&#160;&#160;static val MaxValue : decimal<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Decimal<br /><br />--------------------<br />Decimal()<br />Decimal(value: int) : unit<br />Decimal(value: uint32) : unit<br />Decimal(value: int64) : unit<br />Decimal(value: uint64) : unit<br />Decimal(value: float32) : unit<br />Decimal(value: float) : unit<br />Decimal(bits: int []) : unit<br />Decimal(lo: int, mid: int, hi: int, isNegative: bool, scale: byte) : unit</div>
<div class="tip" id="fs5">Decimal.Truncate(d: decimal) : decimal</div>
<div class="tip" id="fs6">val correct : n:decimal -&gt; decimal<br /><br />Full name: Script.correct</div>
<div class="tip" id="fs7">Decimal.Round(d: decimal) : decimal<br />Decimal.Round(d: decimal, mode: MidpointRounding) : decimal<br />Decimal.Round(d: decimal, decimals: int) : decimal<br />Decimal.Round(d: decimal, decimals: int, mode: MidpointRounding) : decimal</div>
<div class="tip" id="fs8">val resultAndWhetherItHasFractionalSubResults : n:decimal list -&gt; decimal * bool<br /><br />Full name: Script.resultAndWhetherItHasFractionalSubResults</div>
<div class="tip" id="fs9">val n : decimal list</div>
<div class="tip" id="fs10">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs11">Multiple items<br />val decimal : value:&#39;T -&gt; decimal (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.decimal<br /><br />--------------------<br />type decimal = Decimal<br /><br />Full name: Microsoft.FSharp.Core.decimal<br /><br />--------------------<br />type decimal&lt;&#39;Measure&gt; = decimal<br /><br />Full name: Microsoft.FSharp.Core.decimal&lt;_&gt;</div>
<div class="tip" id="fs12">val result : decimal</div>
<div class="tip" id="fs13">val hasFractionalSubResults : bool</div>
<div class="tip" id="fs14">val ( 1st solution in blog post ) : decimal * bool<br /><br />Full name: Script.( 1st solution in blog post )</div>
<div class="tip" id="fs15">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs16">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs17">val n : int</div>
<div class="tip" id="fs18">val permute : list:&#39;a list -&gt; taken:Set&lt;&#39;a&gt; -&gt; &#39;a list list (requires comparison)<br /><br />Full name: Script.permute</div>
<div class="tip" id="fs19">Multiple items<br />val list : &#39;a list (requires comparison)<br /><br />--------------------<br />type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs20">val taken : Set&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs21">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs22">Multiple items<br />module Set<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Set&lt;&#39;T (requires comparison)&gt; =<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;interface ICollection&lt;&#39;T&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Add : value:&#39;T -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Contains : value:&#39;T -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member IsProperSubsetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;member IsProperSupersetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Set&lt;_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;</div>
<div class="tip" id="fs23">val count : set:Set&lt;&#39;T&gt; -&gt; int (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Set.count</div>
<div class="tip" id="fs24">val length : list:&#39;T list -&gt; int<br /><br />Full name: Microsoft.FSharp.Collections.List.length</div>
<div class="tip" id="fs25">val empty&lt;&#39;T&gt; : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.empty</div>
<div class="tip" id="fs26">val element : &#39;a (requires comparison)</div>
<div class="tip" id="fs27">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs28">val contains : element:&#39;T -&gt; set:Set&lt;&#39;T&gt; -&gt; bool (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Set.contains</div>
<div class="tip" id="fs29">val permutation : &#39;a list (requires comparison)</div>
<div class="tip" id="fs30">val add : value:&#39;T -&gt; set:Set&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Set.add</div>
<div class="tip" id="fs31">val ofSeq : source:seq&lt;&#39;T&gt; -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.ofSeq</div>
<div class="tip" id="fs32">val solutions : allowFractionalSubResults:bool -&gt; (decimal list * (decimal * bool)) list<br /><br />Full name: Script.solutions</div>
<div class="tip" id="fs33">val allowFractionalSubResults : bool</div>
<div class="tip" id="fs34">val numbers : decimal list</div>
<div class="tip" id="fs35">val empty&lt;&#39;T (requires comparison)&gt; : Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Set.empty</div>
<div class="tip" id="fs36">val input : decimal list</div>
<div class="tip" id="fs37">val filter : predicate:(&#39;T -&gt; bool) -&gt; list:&#39;T list -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.filter</div>
<div class="tip" id="fs38">val ( solutions WITH fractional sub-results ) : (decimal list * (decimal * bool)) list<br /><br />Full name: Script.( solutions WITH fractional sub-results )</div>
<div class="tip" id="fs39">val ( number of solutions WITH fractional sub-results ) : int<br /><br />Full name: Script.( number of solutions WITH fractional sub-results )</div>
<div class="tip" id="fs40">val ( solutions WITHOUT fractional sub-results ) : (decimal list * (decimal * bool)) list<br /><br />Full name: Script.( solutions WITHOUT fractional sub-results )</div>
<div class="tip" id="fs41">val ( number of solutions WITHOUT fractional sub-results ) : int<br /><br />Full name: Script.( number of solutions WITHOUT fractional sub-results )</div>

