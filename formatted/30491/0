<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">Reflection</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="f">toString</span> (<span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">x</span><span class="o">:</span><span class="o">&#39;</span><span class="i">a</span>) <span class="o">=</span> 
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">FSharpValue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="f">GetUnionFields</span>(<span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>) <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">case</span>, _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="i">case</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">Name</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="t">SpecialCharactersUnion</span> <span class="o">=</span> 
    | <span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="p">Ola</span>
    | <span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="p">Nao</span>
    | <span onmouseout="hideTip(event, 'fs14', 16)" onmouseover="showTip(event, 'fs14', 16)" class="p">RegularCharactersButWithSpaces</span>
    | <span onmouseout="hideTip(event, 'fs15', 17)" onmouseover="showTip(event, 'fs15', 17)" class="p">Normal</span>
    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs16', 18)" onmouseover="showTip(event, 'fs16', 18)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 19)" onmouseover="showTip(event, 'fs17', 19)" class="f">ToString</span>() <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs16', 20)" onmouseover="showTip(event, 'fs16', 20)" class="i">this</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="p">Ola</span> <span class="k">-&gt;</span> <span class="s">&quot;Ol&#225;&quot;</span>
        | <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="p">Nao</span> <span class="k">-&gt;</span> <span class="s">&quot;N&#227;o&quot;</span>
        | <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="p">RegularCharactersButWithSpaces</span> <span class="k">-&gt;</span> <span class="s">&quot;Regular Characters But With Spaces&quot;</span>
        | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 24)" onmouseover="showTip(event, 'fs4', 24)" class="f">toString</span> <span onmouseout="hideTip(event, 'fs16', 25)" onmouseover="showTip(event, 'fs16', 25)" class="i">this</span>

<span class="c">//Usage:</span>
<span class="c">// Everytime a union case tostring gets called, the special cases will override it and present a string with the special characters.</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace Microsoft</div>
<div class="tip" id="fs2">namespace Microsoft.FSharp</div>
<div class="tip" id="fs3">namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs4">val toString : x:&#39;a -&gt; string<br /><br />Full name: Script.toString</div>
<div class="tip" id="fs5">val x : &#39;a</div>
<div class="tip" id="fs6">type FSharpValue =<br />&#160;&#160;static member GetExceptionFields : exn:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetRecordField : record:obj * info:PropertyInfo -&gt; obj<br />&#160;&#160;static member GetRecordFields : record:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetTupleField : tuple:obj * index:int -&gt; obj<br />&#160;&#160;static member GetTupleFields : tuple:obj -&gt; obj []<br />&#160;&#160;static member GetUnionFields : value:obj * unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo * obj []<br />&#160;&#160;static member MakeFunction : functionType:Type * implementation:(obj -&gt; obj) -&gt; obj<br />&#160;&#160;static member MakeRecord : recordType:Type * values:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;static member MakeTuple : tupleElements:obj [] * tupleType:Type -&gt; obj<br />&#160;&#160;static member MakeUnion : unionCase:UnionCaseInfo * args:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpValue</div>
<div class="tip" id="fs7">static member FSharpValue.GetUnionFields : value:obj * unionType:System.Type * ?allowAccessToPrivateRepresentation:bool -&gt; UnionCaseInfo * obj []<br />static member FSharpValue.GetUnionFields : value:obj * unionType:System.Type * ?bindingFlags:System.Reflection.BindingFlags -&gt; UnionCaseInfo * obj []</div>
<div class="tip" id="fs8">val typeof&lt;&#39;T&gt; : System.Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs9">val case : UnionCaseInfo</div>
<div class="tip" id="fs10">property UnionCaseInfo.Name: string</div>
<div class="tip" id="fs11">type SpecialCharactersUnion =<br />&#160;&#160;| Ola<br />&#160;&#160;| Nao<br />&#160;&#160;| RegularCharactersButWithSpaces<br />&#160;&#160;| Normal<br />&#160;&#160;override ToString : unit -&gt; string<br /><br />Full name: Script.SpecialCharactersUnion</div>
<div class="tip" id="fs12">union case SpecialCharactersUnion.Ola: SpecialCharactersUnion</div>
<div class="tip" id="fs13">union case SpecialCharactersUnion.Nao: SpecialCharactersUnion</div>
<div class="tip" id="fs14">union case SpecialCharactersUnion.RegularCharactersButWithSpaces: SpecialCharactersUnion</div>
<div class="tip" id="fs15">union case SpecialCharactersUnion.Normal: SpecialCharactersUnion</div>
<div class="tip" id="fs16">val this : SpecialCharactersUnion</div>
<div class="tip" id="fs17">override SpecialCharactersUnion.ToString : unit -&gt; string<br /><br />Full name: Script.SpecialCharactersUnion.ToString</div>

