<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">IO</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">CodeDom</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 5)" onmouseover="showTip(event, 'fs1', 5)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">CodeDom</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="i">Compiler</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">s</span> <span class="o">=</span> <span class="s">&quot;&quot;&quot;\&lt;a\s.+?href=(&quot;|&#39;)(?&lt;link&gt;.+?)\1&quot;&quot;&quot;</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="i">primitive</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="t">CodePrimitiveExpression</span>(<span onmouseout="hideTip(event, 'fs5', 11)" onmouseover="showTip(event, 'fs5', 11)" class="i">s</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="i">provider</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="t">CodeDomProvider</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="f">CreateProvider</span>(<span class="s">&quot;CSharp&quot;</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="i">options</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="t">CodeGeneratorOptions</span>()
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="i">writer</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="t">StringWriter</span> ()
<span class="k">try</span>
    <span class="k">try</span>
        <span onmouseout="hideTip(event, 'fs8', 19)" onmouseover="showTip(event, 'fs8', 19)" class="i">provider</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="f">GenerateCodeFromExpression</span>(<span onmouseout="hideTip(event, 'fs6', 21)" onmouseover="showTip(event, 'fs6', 21)" class="i">primitive</span>, <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="i">writer</span>, <span onmouseout="hideTip(event, 'fs11', 23)" onmouseover="showTip(event, 'fs11', 23)" class="i">options</span>)
        <span onmouseout="hideTip(event, 'fs13', 24)" onmouseover="showTip(event, 'fs13', 24)" class="i">writer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 25)" onmouseover="showTip(event, 'fs16', 25)" class="f">Flush</span>()
        <span onmouseout="hideTip(event, 'fs13', 26)" onmouseover="showTip(event, 'fs13', 26)" class="i">writer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 27)" onmouseover="showTip(event, 'fs17', 27)" class="f">GetStringBuilder</span>()<span class="o">.</span><span class="f">ToString</span>()
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">&quot;</span>
    <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="i">exn</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="i">exn</span>
<span class="k">finally</span>
    <span onmouseout="hideTip(event, 'fs13', 32)" onmouseover="showTip(event, 'fs13', 32)" class="i">writer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 33)" onmouseover="showTip(event, 'fs20', 33)" class="f">Close</span>()
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.IO</div>
<div class="tip" id="fs3">namespace System.CodeDom</div>
<div class="tip" id="fs4">namespace System.CodeDom.Compiler</div>
<div class="tip" id="fs5">val s : string<br /><br />Full name: Script.s</div>
<div class="tip" id="fs6">val primitive : CodePrimitiveExpression<br /><br />Full name: Script.primitive</div>
<div class="tip" id="fs7">Multiple items<br />type CodePrimitiveExpression =<br />&#160;&#160;inherit CodeExpression<br />&#160;&#160;new : unit -&gt; CodePrimitiveExpression + 1 overload<br />&#160;&#160;member Value : obj with get, set<br /><br />Full name: System.CodeDom.CodePrimitiveExpression<br /><br />--------------------<br />CodePrimitiveExpression() : unit<br />CodePrimitiveExpression(value: obj) : unit</div>
<div class="tip" id="fs8">val provider : CodeDomProvider<br /><br />Full name: Script.provider</div>
<div class="tip" id="fs9">type CodeDomProvider =<br />&#160;&#160;inherit Component<br />&#160;&#160;member CompileAssemblyFromDom : options:CompilerParameters * [&lt;ParamArray&gt;] compilationUnits:CodeCompileUnit[] -&gt; CompilerResults<br />&#160;&#160;member CompileAssemblyFromFile : options:CompilerParameters * [&lt;ParamArray&gt;] fileNames:string[] -&gt; CompilerResults<br />&#160;&#160;member CompileAssemblyFromSource : options:CompilerParameters * [&lt;ParamArray&gt;] sources:string[] -&gt; CompilerResults<br />&#160;&#160;member CreateCompiler : unit -&gt; ICodeCompiler<br />&#160;&#160;member CreateEscapedIdentifier : value:string -&gt; string<br />&#160;&#160;member CreateGenerator : unit -&gt; ICodeGenerator + 2 overloads<br />&#160;&#160;member CreateParser : unit -&gt; ICodeParser<br />&#160;&#160;member CreateValidIdentifier : value:string -&gt; string<br />&#160;&#160;member FileExtension : string<br />&#160;&#160;member GenerateCodeFromCompileUnit : compileUnit:CodeCompileUnit * writer:TextWriter * options:CodeGeneratorOptions -&gt; unit<br />&#160;&#160;...<br /><br />Full name: System.CodeDom.Compiler.CodeDomProvider</div>
<div class="tip" id="fs10">CodeDomProvider.CreateProvider(language: string) : CodeDomProvider<br />CodeDomProvider.CreateProvider(language: string, providerOptions: System.Collections.Generic.IDictionary&lt;string,string&gt;) : CodeDomProvider</div>
<div class="tip" id="fs11">val options : CodeGeneratorOptions<br /><br />Full name: Script.options</div>
<div class="tip" id="fs12">Multiple items<br />type CodeGeneratorOptions =<br />&#160;&#160;new : unit -&gt; CodeGeneratorOptions<br />&#160;&#160;member BlankLinesBetweenMembers : bool with get, set<br />&#160;&#160;member BracingStyle : string with get, set<br />&#160;&#160;member ElseOnClosing : bool with get, set<br />&#160;&#160;member IndentString : string with get, set<br />&#160;&#160;member Item : string -&gt; obj with get, set<br />&#160;&#160;member VerbatimOrder : bool with get, set<br /><br />Full name: System.CodeDom.Compiler.CodeGeneratorOptions<br /><br />--------------------<br />CodeGeneratorOptions() : unit</div>
<div class="tip" id="fs13">val writer : StringWriter<br /><br />Full name: Script.writer</div>
<div class="tip" id="fs14">Multiple items<br />type StringWriter =<br />&#160;&#160;inherit TextWriter<br />&#160;&#160;new : unit -&gt; StringWriter + 3 overloads<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member Encoding : Encoding<br />&#160;&#160;member GetStringBuilder : unit -&gt; StringBuilder<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;member Write : value:char -&gt; unit + 2 overloads<br /><br />Full name: System.IO.StringWriter<br /><br />--------------------<br />StringWriter() : unit<br />StringWriter(formatProvider: System.IFormatProvider) : unit<br />StringWriter(sb: System.Text.StringBuilder) : unit<br />StringWriter(sb: System.Text.StringBuilder, formatProvider: System.IFormatProvider) : unit</div>
<div class="tip" id="fs15">CodeDomProvider.GenerateCodeFromExpression(expression: CodeExpression, writer: TextWriter, options: CodeGeneratorOptions) : unit</div>
<div class="tip" id="fs16">TextWriter.Flush() : unit</div>
<div class="tip" id="fs17">StringWriter.GetStringBuilder() : System.Text.StringBuilder</div>
<div class="tip" id="fs18">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs19">Multiple items<br />val exn : exn<br /><br />--------------------<br />type exn = System.Exception<br /><br />Full name: Microsoft.FSharp.Core.exn</div>
<div class="tip" id="fs20">StringWriter.Close() : unit</div>

