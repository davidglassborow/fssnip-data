<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Seq</span> <span class="o">=</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">Collections</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="f">ofBitArray</span> (<span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">bitArray</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">BitArray</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="i">seq</span> { 
        <span class="k">for</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="i">i</span><span class="o">=</span><span class="n">0</span> <span class="k">to</span> <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="i">bitArray</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">Length</span> <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs5', 11)" onmouseover="showTip(event, 'fs5', 11)" class="i">bitArray</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="f">Get</span>(<span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="i">i</span>) 
    }
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace System.Collections</div>
<div class="tip" id="fs4">val ofBitArray : bitArray:BitArray -&gt; seq&lt;bool&gt;<br /><br />Full name: Script.Seq.ofBitArray</div>
<div class="tip" id="fs5">val bitArray : BitArray</div>
<div class="tip" id="fs6">Multiple items<br />type BitArray =<br />&#160;&#160;new : length:int -&gt; BitArray + 5 overloads<br />&#160;&#160;member And : value:BitArray -&gt; BitArray<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit<br />&#160;&#160;member Count : int<br />&#160;&#160;member Get : index:int -&gt; bool<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member IsReadOnly : bool<br />&#160;&#160;member IsSynchronized : bool<br />&#160;&#160;member Item : int -&gt; bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Collections.BitArray<br /><br />--------------------<br />BitArray(length: int) : unit<br />BitArray(bytes: byte []) : unit<br />BitArray(values: bool []) : unit<br />BitArray(values: int []) : unit<br />BitArray(bits: BitArray) : unit<br />BitArray(length: int, defaultValue: bool) : unit</div>
<div class="tip" id="fs7">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs8">val i : int</div>
<div class="tip" id="fs9">property BitArray.Length: int</div>
<div class="tip" id="fs10">BitArray.Get(index: int) : bool</div>

