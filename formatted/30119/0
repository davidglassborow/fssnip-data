<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">IO</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">Security</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">Cryptography</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 7)" onmouseover="showTip(event, 'fs1', 7)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">Text</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 9)" onmouseover="showTip(event, 'fs1', 9)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="i">Diagnostics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="i">Contracts</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="f">EncryptStringWith</span> (<span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="i">plain</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="t">string</span>) (<span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="i">key</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="t">string</span>) (<span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="i">iv</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs10', 18)" onmouseover="showTip(event, 'fs10', 18)" class="t">string</span>) <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="i">enc</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="t">ASCIIEncoding</span>()
    <span class="k">use</span> <span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="i">encrypted</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="t">MemoryStream</span>()
    <span class="k">use</span> <span onmouseout="hideTip(event, 'fs17', 23)" onmouseover="showTip(event, 'fs17', 23)" class="i">encode</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs18', 24)" onmouseover="showTip(event, 'fs18', 24)" class="t">ToBase64Transform</span>()
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 25)" onmouseover="showTip(event, 'fs19', 25)" class="i">errdesc</span> <span class="o">=</span> <span class="s">&quot;Failure when encrypting the string: &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs9', 26)" onmouseover="showTip(event, 'fs9', 26)" class="i">plain</span> <span class="o">+</span> <span class="s">&quot;</span><span class="e">\r</span><span class="s"></span><span class="e">\n</span><span class="s">&quot;</span>
    <span class="k">try</span>
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs20', 27)" onmouseover="showTip(event, 'fs20', 27)" class="i">encryptor</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 28)" onmouseover="showTip(event, 'fs21', 28)" class="t">Rijndael</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 29)" onmouseover="showTip(event, 'fs22', 29)" class="f">Create</span>()<span class="o">.</span><span class="f">CreateEncryptor</span>(<span onmouseout="hideTip(event, 'fs13', 30)" onmouseover="showTip(event, 'fs13', 30)" class="i">enc</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 31)" onmouseover="showTip(event, 'fs23', 31)" class="f">GetBytes</span>(<span onmouseout="hideTip(event, 'fs11', 32)" onmouseover="showTip(event, 'fs11', 32)" class="i">key</span>), <span onmouseout="hideTip(event, 'fs13', 33)" onmouseover="showTip(event, 'fs13', 33)" class="i">enc</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 34)" onmouseover="showTip(event, 'fs23', 34)" class="f">GetBytes</span>(<span onmouseout="hideTip(event, 'fs12', 35)" onmouseover="showTip(event, 'fs12', 35)" class="i">iv</span>))
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs24', 36)" onmouseover="showTip(event, 'fs24', 36)" class="i">tmpcrypt</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs25', 37)" onmouseover="showTip(event, 'fs25', 37)" class="t">CryptoStream</span>(<span onmouseout="hideTip(event, 'fs15', 38)" onmouseover="showTip(event, 'fs15', 38)" class="i">encrypted</span>, <span onmouseout="hideTip(event, 'fs20', 39)" onmouseover="showTip(event, 'fs20', 39)" class="i">encryptor</span>, <span onmouseout="hideTip(event, 'fs26', 40)" onmouseover="showTip(event, 'fs26', 40)" class="t">CryptoStreamMode</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 41)" onmouseover="showTip(event, 'fs27', 41)" class="i">Write</span>)
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs28', 42)" onmouseover="showTip(event, 'fs28', 42)" class="i">encodestream</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs25', 43)" onmouseover="showTip(event, 'fs25', 43)" class="t">CryptoStream</span>(<span onmouseout="hideTip(event, 'fs24', 44)" onmouseover="showTip(event, 'fs24', 44)" class="i">tmpcrypt</span>, <span onmouseout="hideTip(event, 'fs17', 45)" onmouseover="showTip(event, 'fs17', 45)" class="i">encode</span>, <span onmouseout="hideTip(event, 'fs26', 46)" onmouseover="showTip(event, 'fs26', 46)" class="t">CryptoStreamMode</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 47)" onmouseover="showTip(event, 'fs27', 47)" class="i">Write</span>)
            
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 48)" onmouseover="showTip(event, 'fs29', 48)" class="i">encryptedbytes</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 49)" onmouseover="showTip(event, 'fs13', 49)" class="i">enc</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 50)" onmouseover="showTip(event, 'fs23', 50)" class="f">GetBytes</span>(<span onmouseout="hideTip(event, 'fs9', 51)" onmouseover="showTip(event, 'fs9', 51)" class="i">plain</span>);
        <span onmouseout="hideTip(event, 'fs28', 52)" onmouseover="showTip(event, 'fs28', 52)" class="i">encodestream</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 53)" onmouseover="showTip(event, 'fs30', 53)" class="f">Write</span>(<span onmouseout="hideTip(event, 'fs29', 54)" onmouseover="showTip(event, 'fs29', 54)" class="i">encryptedbytes</span>, <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs29', 55)" onmouseover="showTip(event, 'fs29', 55)" class="i">encryptedbytes</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 56)" onmouseover="showTip(event, 'fs31', 56)" class="i">Length</span>);
        <span onmouseout="hideTip(event, 'fs28', 57)" onmouseover="showTip(event, 'fs28', 57)" class="i">encodestream</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 58)" onmouseover="showTip(event, 'fs32', 58)" class="f">Close</span>() <span class="c">// lazy, has to close explicitly before use. use is not enough.</span>
    <span class="k">with</span>
        | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs33', 59)" onmouseover="showTip(event, 'fs33', 59)" class="t">CryptographicException</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs34', 60)" onmouseover="showTip(event, 'fs34', 60)" class="i">ex</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs35', 61)" onmouseover="showTip(event, 'fs35', 61)" class="f">failwith</span>(<span onmouseout="hideTip(event, 'fs19', 62)" onmouseover="showTip(event, 'fs19', 62)" class="i">errdesc</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs34', 63)" onmouseover="showTip(event, 'fs34', 63)" class="i">ex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 64)" onmouseover="showTip(event, 'fs36', 64)" class="f">ToString</span>())
        | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs37', 65)" onmouseover="showTip(event, 'fs37', 65)" class="t">FormatException</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs38', 66)" onmouseover="showTip(event, 'fs38', 66)" class="i">ex</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs35', 67)" onmouseover="showTip(event, 'fs35', 67)" class="f">failwith</span>(<span onmouseout="hideTip(event, 'fs19', 68)" onmouseover="showTip(event, 'fs19', 68)" class="i">errdesc</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs38', 69)" onmouseover="showTip(event, 'fs38', 69)" class="i">ex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 70)" onmouseover="showTip(event, 'fs36', 70)" class="f">ToString</span>())
    <span onmouseout="hideTip(event, 'fs15', 71)" onmouseover="showTip(event, 'fs15', 71)" class="i">encrypted</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 72)" onmouseover="showTip(event, 'fs39', 72)" class="f">ToArray</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs40', 73)" onmouseover="showTip(event, 'fs40', 73)" class="t">Convert</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 74)" onmouseover="showTip(event, 'fs41', 74)" class="f">ToBase64String</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.IO</div>
<div class="tip" id="fs3">namespace System.Security</div>
<div class="tip" id="fs4">namespace System.Security.Cryptography</div>
<div class="tip" id="fs5">namespace System.Text</div>
<div class="tip" id="fs6">namespace System.Diagnostics</div>
<div class="tip" id="fs7">namespace System.Diagnostics.Contracts</div>
<div class="tip" id="fs8">val EncryptStringWith : plain:string -&gt; key:string -&gt; iv:string -&gt; string<br /><br />Full name: Script.EncryptStringWith</div>
<div class="tip" id="fs9">val plain : string</div>
<div class="tip" id="fs10">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs11">val key : string</div>
<div class="tip" id="fs12">val iv : string</div>
<div class="tip" id="fs13">val enc : ASCIIEncoding</div>
<div class="tip" id="fs14">Multiple items<br />type ASCIIEncoding =<br />&#160;&#160;inherit Encoding<br />&#160;&#160;new : unit -&gt; ASCIIEncoding<br />&#160;&#160;member GetByteCount : chars:string -&gt; int + 2 overloads<br />&#160;&#160;member GetBytes : chars:char * charCount:int * bytes:byte * byteCount:int -&gt; int + 2 overloads<br />&#160;&#160;member GetCharCount : bytes:byte * count:int -&gt; int + 1 overload<br />&#160;&#160;member GetChars : bytes:byte * byteCount:int * chars:char * charCount:int -&gt; int + 1 overload<br />&#160;&#160;member GetDecoder : unit -&gt; Decoder<br />&#160;&#160;member GetEncoder : unit -&gt; Encoder<br />&#160;&#160;member GetMaxByteCount : charCount:int -&gt; int<br />&#160;&#160;member GetMaxCharCount : byteCount:int -&gt; int<br />&#160;&#160;member GetString : bytes:byte[] * byteIndex:int * byteCount:int -&gt; string<br />&#160;&#160;...<br /><br />Full name: System.Text.ASCIIEncoding<br /><br />--------------------<br />ASCIIEncoding() : unit</div>
<div class="tip" id="fs15">val encrypted : MemoryStream</div>
<div class="tip" id="fs16">Multiple items<br />type MemoryStream =<br />&#160;&#160;inherit Stream<br />&#160;&#160;new : unit -&gt; MemoryStream + 6 overloads<br />&#160;&#160;member CanRead : bool<br />&#160;&#160;member CanSeek : bool<br />&#160;&#160;member CanWrite : bool<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member Flush : unit -&gt; unit<br />&#160;&#160;member GetBuffer : unit -&gt; byte[]<br />&#160;&#160;member Length : int64<br />&#160;&#160;member Position : int64 with get, set<br />&#160;&#160;member Read : buffer:byte[] * offset:int * count:int -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.IO.MemoryStream<br /><br />--------------------<br />MemoryStream() : unit<br />MemoryStream(capacity: int) : unit<br />MemoryStream(buffer: byte []) : unit<br />MemoryStream(buffer: byte [], writable: bool) : unit<br />MemoryStream(buffer: byte [], index: int, count: int) : unit<br />MemoryStream(buffer: byte [], index: int, count: int, writable: bool) : unit<br />MemoryStream(buffer: byte [], index: int, count: int, writable: bool, publiclyVisible: bool) : unit</div>
<div class="tip" id="fs17">val encode : ToBase64Transform</div>
<div class="tip" id="fs18">Multiple items<br />type ToBase64Transform =<br />&#160;&#160;new : unit -&gt; ToBase64Transform<br />&#160;&#160;member CanReuseTransform : bool<br />&#160;&#160;member CanTransformMultipleBlocks : bool<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member InputBlockSize : int<br />&#160;&#160;member OutputBlockSize : int<br />&#160;&#160;member TransformBlock : inputBuffer:byte[] * inputOffset:int * inputCount:int * outputBuffer:byte[] * outputOffset:int -&gt; int<br />&#160;&#160;member TransformFinalBlock : inputBuffer:byte[] * inputOffset:int * inputCount:int -&gt; byte[]<br /><br />Full name: System.Security.Cryptography.ToBase64Transform<br /><br />--------------------<br />ToBase64Transform() : unit</div>
<div class="tip" id="fs19">val errdesc : string</div>
<div class="tip" id="fs20">val encryptor : ICryptoTransform</div>
<div class="tip" id="fs21">type Rijndael =<br />&#160;&#160;inherit SymmetricAlgorithm<br />&#160;&#160;static member Create : unit -&gt; Rijndael + 1 overload<br /><br />Full name: System.Security.Cryptography.Rijndael</div>
<div class="tip" id="fs22">Rijndael.Create() : Rijndael<br />Rijndael.Create(algName: string) : Rijndael</div>
<div class="tip" id="fs23">Encoding.GetBytes(s: string) : byte []<br />Encoding.GetBytes(chars: char []) : byte []<br />Encoding.GetBytes(chars: char [], index: int, count: int) : byte []<br />ASCIIEncoding.GetBytes(chars: nativeptr&lt;char&gt;, charCount: int, bytes: nativeptr&lt;byte&gt;, byteCount: int) : int<br />ASCIIEncoding.GetBytes(chars: char [], charIndex: int, charCount: int, bytes: byte [], byteIndex: int) : int<br />ASCIIEncoding.GetBytes(chars: string, charIndex: int, charCount: int, bytes: byte [], byteIndex: int) : int</div>
<div class="tip" id="fs24">val tmpcrypt : CryptoStream</div>
<div class="tip" id="fs25">Multiple items<br />type CryptoStream =<br />&#160;&#160;inherit Stream<br />&#160;&#160;new : stream:Stream * transform:ICryptoTransform * mode:CryptoStreamMode -&gt; CryptoStream<br />&#160;&#160;member CanRead : bool<br />&#160;&#160;member CanSeek : bool<br />&#160;&#160;member CanWrite : bool<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Flush : unit -&gt; unit<br />&#160;&#160;member FlushFinalBlock : unit -&gt; unit<br />&#160;&#160;member HasFlushedFinalBlock : bool<br />&#160;&#160;member Length : int64<br />&#160;&#160;member Position : int64 with get, set<br />&#160;&#160;...<br /><br />Full name: System.Security.Cryptography.CryptoStream<br /><br />--------------------<br />CryptoStream(stream: Stream, transform: ICryptoTransform, mode: CryptoStreamMode) : unit</div>
<div class="tip" id="fs26">type CryptoStreamMode =<br />&#160;&#160;| Read = 0<br />&#160;&#160;| Write = 1<br /><br />Full name: System.Security.Cryptography.CryptoStreamMode</div>
<div class="tip" id="fs27">field CryptoStreamMode.Write = 1</div>
<div class="tip" id="fs28">val encodestream : CryptoStream</div>
<div class="tip" id="fs29">val encryptedbytes : byte []</div>
<div class="tip" id="fs30">CryptoStream.Write(buffer: byte [], offset: int, count: int) : unit</div>
<div class="tip" id="fs31">property Array.Length: int</div>
<div class="tip" id="fs32">Stream.Close() : unit</div>
<div class="tip" id="fs33">Multiple items<br />type CryptographicException =<br />&#160;&#160;inherit SystemException<br />&#160;&#160;new : unit -&gt; CryptographicException + 4 overloads<br /><br />Full name: System.Security.Cryptography.CryptographicException<br /><br />--------------------<br />CryptographicException() : unit<br />CryptographicException(message: string) : unit<br />CryptographicException(hr: int) : unit<br />CryptographicException(format: string, insert: string) : unit<br />CryptographicException(message: string, inner: exn) : unit</div>
<div class="tip" id="fs34">val ex : CryptographicException</div>
<div class="tip" id="fs35">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs36">Exception.ToString() : string</div>
<div class="tip" id="fs37">Multiple items<br />type FormatException =<br />&#160;&#160;inherit SystemException<br />&#160;&#160;new : unit -&gt; FormatException + 2 overloads<br /><br />Full name: System.FormatException<br /><br />--------------------<br />FormatException() : unit<br />FormatException(message: string) : unit<br />FormatException(message: string, innerException: exn) : unit</div>
<div class="tip" id="fs38">val ex : FormatException</div>
<div class="tip" id="fs39">MemoryStream.ToArray() : byte []</div>
<div class="tip" id="fs40">type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>
<div class="tip" id="fs41">Convert.ToBase64String(inArray: byte []) : string<br />Convert.ToBase64String(inArray: byte [], options: Base64FormattingOptions) : string<br />Convert.ToBase64String(inArray: byte [], offset: int, length: int) : string<br />Convert.ToBase64String(inArray: byte [], offset: int, length: int, options: Base64FormattingOptions) : string</div>

