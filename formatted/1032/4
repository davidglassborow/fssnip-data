<h2><a name="Micro-ORM" class="anchor" href="#Micro-ORM">Micro ORM</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">namespace</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">XMicroOrm</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Data</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">Reflection</span>

[&lt;<span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="t">AutoOpen</span>&gt;]
<span class="k">module</span> <span class="t">Extensions</span> <span class="o">=</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 9)" onmouseover="showTip(event, 'fs2', 9)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 10)" onmouseover="showTip(event, 'fs3', 10)" class="i">Data</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">Common</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="t">DbProviderFactory</span> <span class="k">with</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="f">CreateConnection</span>(<span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="i">connectionString</span>) <span class="o">=</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 16)" onmouseover="showTip(event, 'fs13', 16)" class="i">cnn</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 17)" onmouseover="showTip(event, 'fs10', 17)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="f">CreateConnection</span>()
            <span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="i">cnn</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="i">ConnectionString</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="i">connectionString</span>
            <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="i">cnn</span>

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 23)" onmouseover="showTip(event, 'fs2', 23)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 24)" onmouseover="showTip(event, 'fs3', 24)" class="i">Data</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 25)" onmouseover="showTip(event, 'fs16', 25)" class="t">IDbConnection</span> <span class="k">with</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs17', 26)" onmouseover="showTip(event, 'fs17', 26)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 27)" onmouseover="showTip(event, 'fs18', 27)" class="f">CreateCommand</span>(<span onmouseout="hideTip(event, 'fs19', 28)" onmouseover="showTip(event, 'fs19', 28)" class="i">connection</span>, <span onmouseout="hideTip(event, 'fs20', 29)" onmouseover="showTip(event, 'fs20', 29)" class="i">commandText</span>) <span class="o">=</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 30)" onmouseover="showTip(event, 'fs21', 30)" class="i">cmd</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 31)" onmouseover="showTip(event, 'fs17', 31)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 32)" onmouseover="showTip(event, 'fs22', 32)" class="f">CreateCommand</span>()
            <span onmouseout="hideTip(event, 'fs21', 33)" onmouseover="showTip(event, 'fs21', 33)" class="i">cmd</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 34)" onmouseover="showTip(event, 'fs23', 34)" class="i">Connection</span>  <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs19', 35)" onmouseover="showTip(event, 'fs19', 35)" class="i">connection</span>
            <span onmouseout="hideTip(event, 'fs21', 36)" onmouseover="showTip(event, 'fs21', 36)" class="i">cmd</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 37)" onmouseover="showTip(event, 'fs24', 37)" class="i">CommandText</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs20', 38)" onmouseover="showTip(event, 'fs20', 38)" class="i">commandText</span>
            <span onmouseout="hideTip(event, 'fs21', 39)" onmouseover="showTip(event, 'fs21', 39)" class="i">cmd</span>

[&lt;<span onmouseout="hideTip(event, 'fs7', 40)" onmouseover="showTip(event, 'fs7', 40)" class="t">AutoOpen</span>&gt;]
<span class="k">module</span> <span class="c">(* internal *)</span> <span class="t">Helper</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 41)" onmouseover="showTip(event, 'fs25', 41)" class="f">toOptionDynamic</span> (<span onmouseout="hideTip(event, 'fs26', 42)" onmouseover="showTip(event, 'fs26', 42)" class="i">typ</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs27', 43)" onmouseover="showTip(event, 'fs27', 43)" class="t">Type</span>) (<span onmouseout="hideTip(event, 'fs28', 44)" onmouseover="showTip(event, 'fs28', 44)" class="i">value</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs29', 45)" onmouseover="showTip(event, 'fs29', 45)" class="t">obj</span>) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 46)" onmouseover="showTip(event, 'fs30', 46)" class="i">opttyp</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 47)" onmouseover="showTip(event, 'fs31', 47)" class="i">typedefof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs32', 48)" onmouseover="showTip(event, 'fs32', 48)" class="t">Option</span><span class="o">&lt;</span>_<span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span><span class="f">MakeGenericType</span>([|<span onmouseout="hideTip(event, 'fs26', 49)" onmouseover="showTip(event, 'fs26', 49)" class="i">typ</span>|])
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 50)" onmouseover="showTip(event, 'fs33', 50)" class="i">tag</span>, <span onmouseout="hideTip(event, 'fs34', 51)" onmouseover="showTip(event, 'fs34', 51)" class="i">varr</span> <span class="o">=</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs35', 52)" onmouseover="showTip(event, 'fs35', 52)" class="t">DBNull</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 53)" onmouseover="showTip(event, 'fs36', 53)" class="i">Value</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 54)" onmouseover="showTip(event, 'fs37', 54)" class="f">Equals</span>(<span onmouseout="hideTip(event, 'fs28', 55)" onmouseover="showTip(event, 'fs28', 55)" class="i">value</span>) <span class="k">then</span> <span class="n">0</span>, [||] <span class="k">else</span> <span class="n">1</span>, [|<span onmouseout="hideTip(event, 'fs28', 56)" onmouseover="showTip(event, 'fs28', 56)" class="i">value</span>|]
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 57)" onmouseover="showTip(event, 'fs38', 57)" class="i">case</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 58)" onmouseover="showTip(event, 'fs39', 58)" class="t">FSharpType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 59)" onmouseover="showTip(event, 'fs40', 59)" class="f">GetUnionCases</span>(<span onmouseout="hideTip(event, 'fs30', 60)" onmouseover="showTip(event, 'fs30', 60)" class="i">opttyp</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 61)" onmouseover="showTip(event, 'fs41', 61)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 62)" onmouseover="showTip(event, 'fs42', 62)" class="f">find</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs43', 63)" onmouseover="showTip(event, 'fs43', 63)" class="i">uc</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs43', 64)" onmouseover="showTip(event, 'fs43', 64)" class="i">uc</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 65)" onmouseover="showTip(event, 'fs44', 65)" class="i">Tag</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 66)" onmouseover="showTip(event, 'fs33', 66)" class="i">tag</span>)
        <span onmouseout="hideTip(event, 'fs45', 67)" onmouseover="showTip(event, 'fs45', 67)" class="t">FSharpValue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 68)" onmouseover="showTip(event, 'fs46', 68)" class="f">MakeUnion</span>(<span onmouseout="hideTip(event, 'fs38', 69)" onmouseover="showTip(event, 'fs38', 69)" class="i">case</span>, <span onmouseout="hideTip(event, 'fs34', 70)" onmouseover="showTip(event, 'fs34', 70)" class="i">varr</span>)

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs47', 71)" onmouseover="showTip(event, 'fs47', 71)" class="f">optionTypeArg</span> (<span onmouseout="hideTip(event, 'fs26', 72)" onmouseover="showTip(event, 'fs26', 72)" class="i">typ</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs27', 73)" onmouseover="showTip(event, 'fs27', 73)" class="t">Type</span>) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 74)" onmouseover="showTip(event, 'fs48', 74)" class="i">isOp</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 75)" onmouseover="showTip(event, 'fs26', 75)" class="i">typ</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 76)" onmouseover="showTip(event, 'fs49', 76)" class="i">IsGenericType</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs26', 77)" onmouseover="showTip(event, 'fs26', 77)" class="i">typ</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 78)" onmouseover="showTip(event, 'fs50', 78)" class="f">GetGenericTypeDefinition</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 79)" onmouseover="showTip(event, 'fs31', 79)" class="i">typedefof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs32', 80)" onmouseover="showTip(event, 'fs32', 80)" class="t">Option</span><span class="o">&lt;</span>_<span class="o">&gt;</span><span class="o">&gt;</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs48', 81)" onmouseover="showTip(event, 'fs48', 81)" class="i">isOp</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs51', 82)" onmouseover="showTip(event, 'fs51', 82)" class="p">Some</span> (<span onmouseout="hideTip(event, 'fs26', 83)" onmouseover="showTip(event, 'fs26', 83)" class="i">typ</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 84)" onmouseover="showTip(event, 'fs52', 84)" class="f">GetGenericArguments</span>()<span class="o">.</span>[<span class="n">0</span>]) <span class="k">else</span> <span onmouseout="hideTip(event, 'fs53', 85)" onmouseover="showTip(event, 'fs53', 85)" class="p">None</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs54', 86)" onmouseover="showTip(event, 'fs54', 86)" class="t">DbEntityField</span> <span class="o">=</span> { <span onmouseout="hideTip(event, 'fs55', 87)" onmouseover="showTip(event, 'fs55', 87)" class="i">Index</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs56', 88)" onmouseover="showTip(event, 'fs56', 88)" class="t">int</span>; <span onmouseout="hideTip(event, 'fs57', 89)" onmouseover="showTip(event, 'fs57', 89)" class="i">Name</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs58', 90)" onmouseover="showTip(event, 'fs58', 90)" class="t">string</span>; <span onmouseout="hideTip(event, 'fs59', 91)" onmouseover="showTip(event, 'fs59', 91)" class="i">Type</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs59', 92)" onmouseover="showTip(event, 'fs59', 92)" class="t">Type</span> }

<span class="k">module</span> <span onmouseout="hideTip(event, 'fs60', 93)" onmouseover="showTip(event, 'fs60', 93)" class="t">DbEntity</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs61', 94)" onmouseover="showTip(event, 'fs61', 94)" class="i">name</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">R</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs62', 95)" onmouseover="showTip(event, 'fs62', 95)" class="i">not</span> <span class="k">struct</span><span class="o">&gt;</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 96)" onmouseover="showTip(event, 'fs63', 96)" class="i">rty</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs64', 97)" onmouseover="showTip(event, 'fs64', 97)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span>
        <span class="k">assert</span> (<span onmouseout="hideTip(event, 'fs39', 98)" onmouseover="showTip(event, 'fs39', 98)" class="t">FSharpType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 99)" onmouseover="showTip(event, 'fs65', 99)" class="f">IsRecord</span>(<span onmouseout="hideTip(event, 'fs63', 100)" onmouseover="showTip(event, 'fs63', 100)" class="i">rty</span>))
        <span onmouseout="hideTip(event, 'fs63', 101)" onmouseover="showTip(event, 'fs63', 101)" class="i">rty</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 102)" onmouseover="showTip(event, 'fs66', 102)" class="i">Name</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs67', 103)" onmouseover="showTip(event, 'fs67', 103)" class="i">fields</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">R</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs62', 104)" onmouseover="showTip(event, 'fs62', 104)" class="i">not</span> <span class="k">struct</span><span class="o">&gt;</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 105)" onmouseover="showTip(event, 'fs63', 105)" class="i">rty</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs64', 106)" onmouseover="showTip(event, 'fs64', 106)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span>
        <span class="k">assert</span> (<span onmouseout="hideTip(event, 'fs39', 107)" onmouseover="showTip(event, 'fs39', 107)" class="t">FSharpType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 108)" onmouseover="showTip(event, 'fs65', 108)" class="f">IsRecord</span>(<span onmouseout="hideTip(event, 'fs63', 109)" onmouseover="showTip(event, 'fs63', 109)" class="i">rty</span>))
        <span onmouseout="hideTip(event, 'fs39', 110)" onmouseover="showTip(event, 'fs39', 110)" class="t">FSharpType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 111)" onmouseover="showTip(event, 'fs68', 111)" class="f">GetRecordFields</span>(<span onmouseout="hideTip(event, 'fs63', 112)" onmouseover="showTip(event, 'fs63', 112)" class="i">rty</span>)
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 113)" onmouseover="showTip(event, 'fs41', 113)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 114)" onmouseover="showTip(event, 'fs69', 114)" class="f">mapi</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs70', 115)" onmouseover="showTip(event, 'fs70', 115)" class="i">i</span> <span onmouseout="hideTip(event, 'fs71', 116)" onmouseover="showTip(event, 'fs71', 116)" class="i">p</span> <span class="k">-&gt;</span> {<span class="i">Index</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs70', 117)" onmouseover="showTip(event, 'fs70', 117)" class="i">i</span>; <span class="i">Name</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs71', 118)" onmouseover="showTip(event, 'fs71', 118)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 119)" onmouseover="showTip(event, 'fs66', 119)" class="i">Name</span>; <span onmouseout="hideTip(event, 'fs27', 120)" onmouseover="showTip(event, 'fs27', 120)" class="i">Type</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs71', 121)" onmouseover="showTip(event, 'fs71', 121)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 122)" onmouseover="showTip(event, 'fs72', 122)" class="i">PropertyType</span>})

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs73', 123)" onmouseover="showTip(event, 'fs73', 123)" class="f">read</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">R</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs62', 124)" onmouseover="showTip(event, 'fs62', 124)" class="i">not</span> <span class="k">struct</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs74', 125)" onmouseover="showTip(event, 'fs74', 125)" class="i">cnn</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs16', 126)" onmouseover="showTip(event, 'fs16', 126)" class="t">IDbConnection</span>) <span onmouseout="hideTip(event, 'fs75', 127)" onmouseover="showTip(event, 'fs75', 127)" class="i">sql</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 128)" onmouseover="showTip(event, 'fs63', 128)" class="i">rty</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs64', 129)" onmouseover="showTip(event, 'fs64', 129)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span>
        <span class="k">assert</span> (<span onmouseout="hideTip(event, 'fs39', 130)" onmouseover="showTip(event, 'fs39', 130)" class="t">FSharpType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 131)" onmouseover="showTip(event, 'fs65', 131)" class="f">IsRecord</span>(<span onmouseout="hideTip(event, 'fs63', 132)" onmouseover="showTip(event, 'fs63', 132)" class="i">rty</span>))
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs76', 133)" onmouseover="showTip(event, 'fs76', 133)" class="f">makeEntity</span> <span class="o">=</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs77', 134)" onmouseover="showTip(event, 'fs77', 134)" class="f">mk</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs45', 135)" onmouseover="showTip(event, 'fs45', 135)" class="t">FSharpValue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs78', 136)" onmouseover="showTip(event, 'fs78', 136)" class="f">PreComputeRecordConstructor</span>(<span onmouseout="hideTip(event, 'fs63', 137)" onmouseover="showTip(event, 'fs63', 137)" class="i">rty</span>)
            (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs79', 138)" onmouseover="showTip(event, 'fs79', 138)" class="i">vals</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs77', 139)" onmouseover="showTip(event, 'fs77', 139)" class="f">mk</span> <span onmouseout="hideTip(event, 'fs79', 140)" onmouseover="showTip(event, 'fs79', 140)" class="i">vals</span> <span class="o">:?&gt;</span> <span class="o">&#39;</span><span class="i">R</span>)
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs80', 141)" onmouseover="showTip(event, 'fs80', 141)" class="i">fields</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs81', 142)" onmouseover="showTip(event, 'fs81', 142)" class="f">dict</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs82', 143)" onmouseover="showTip(event, 'fs82', 143)" class="i">seq</span> { <span class="k">for</span> <span onmouseout="hideTip(event, 'fs83', 144)" onmouseover="showTip(event, 'fs83', 144)" class="i">fld</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs67', 145)" onmouseover="showTip(event, 'fs67', 145)" class="i">fields</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs83', 146)" onmouseover="showTip(event, 'fs83', 146)" class="i">fld</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 147)" onmouseover="showTip(event, 'fs57', 147)" class="i">Name</span>, <span onmouseout="hideTip(event, 'fs83', 148)" onmouseover="showTip(event, 'fs83', 148)" class="i">fld</span> }
        <span onmouseout="hideTip(event, 'fs82', 149)" onmouseover="showTip(event, 'fs82', 149)" class="i">seq</span> { <span class="k">use</span> <span onmouseout="hideTip(event, 'fs21', 150)" onmouseover="showTip(event, 'fs21', 150)" class="i">cmd</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs74', 151)" onmouseover="showTip(event, 'fs74', 151)" class="i">cnn</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 152)" onmouseover="showTip(event, 'fs22', 152)" class="f">CreateCommand</span>(<span onmouseout="hideTip(event, 'fs74', 153)" onmouseover="showTip(event, 'fs74', 153)" class="i">cnn</span>, <span onmouseout="hideTip(event, 'fs75', 154)" onmouseover="showTip(event, 'fs75', 154)" class="i">sql</span>)
              <span class="k">use</span> <span onmouseout="hideTip(event, 'fs84', 155)" onmouseover="showTip(event, 'fs84', 155)" class="i">reader</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 156)" onmouseover="showTip(event, 'fs21', 156)" class="i">cmd</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs85', 157)" onmouseover="showTip(event, 'fs85', 157)" class="f">ExecuteReader</span>()
              <span class="k">while</span> <span onmouseout="hideTip(event, 'fs84', 158)" onmouseover="showTip(event, 'fs84', 158)" class="i">reader</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs86', 159)" onmouseover="showTip(event, 'fs86', 159)" class="f">Read</span>() <span class="k">do</span>
              <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs82', 160)" onmouseover="showTip(event, 'fs82', 160)" class="i">seq</span> { <span class="n">0..</span><span onmouseout="hideTip(event, 'fs84', 161)" onmouseover="showTip(event, 'fs84', 161)" class="i">reader</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs87', 162)" onmouseover="showTip(event, 'fs87', 162)" class="i">FieldCount</span><span class="o">-</span><span class="n">1</span> }
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 163)" onmouseover="showTip(event, 'fs41', 163)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs88', 164)" onmouseover="showTip(event, 'fs88', 164)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs70', 165)" onmouseover="showTip(event, 'fs70', 165)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs84', 166)" onmouseover="showTip(event, 'fs84', 166)" class="i">reader</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 167)" onmouseover="showTip(event, 'fs89', 167)" class="f">GetName</span>(<span onmouseout="hideTip(event, 'fs70', 168)" onmouseover="showTip(event, 'fs70', 168)" class="i">i</span>), <span onmouseout="hideTip(event, 'fs84', 169)" onmouseover="showTip(event, 'fs84', 169)" class="i">reader</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs90', 170)" onmouseover="showTip(event, 'fs90', 170)" class="f">GetValue</span>(<span onmouseout="hideTip(event, 'fs70', 171)" onmouseover="showTip(event, 'fs70', 171)" class="i">i</span>))
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 172)" onmouseover="showTip(event, 'fs41', 172)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs91', 173)" onmouseover="showTip(event, 'fs91', 173)" class="f">sortBy</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs92', 174)" onmouseover="showTip(event, 'fs92', 174)" class="i">n</span>, _) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs80', 175)" onmouseover="showTip(event, 'fs80', 175)" class="i">fields</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs92', 176)" onmouseover="showTip(event, 'fs92', 176)" class="i">n</span>]<span class="o">.</span><span class="i">Index</span>)
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 177)" onmouseover="showTip(event, 'fs41', 177)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs88', 178)" onmouseover="showTip(event, 'fs88', 178)" class="f">map</span>    (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs92', 179)" onmouseover="showTip(event, 'fs92', 179)" class="i">n</span>, <span onmouseout="hideTip(event, 'fs93', 180)" onmouseover="showTip(event, 'fs93', 180)" class="i">v</span>) <span class="k">-&gt;</span> <span class="k">match</span> <span onmouseout="hideTip(event, 'fs47', 181)" onmouseover="showTip(event, 'fs47', 181)" class="f">optionTypeArg</span> <span onmouseout="hideTip(event, 'fs80', 182)" onmouseover="showTip(event, 'fs80', 182)" class="i">fields</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs92', 183)" onmouseover="showTip(event, 'fs92', 183)" class="i">n</span>]<span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 184)" onmouseover="showTip(event, 'fs27', 184)" class="i">Type</span> <span class="k">with</span>
                                                 | <span onmouseout="hideTip(event, 'fs51', 185)" onmouseover="showTip(event, 'fs51', 185)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs94', 186)" onmouseover="showTip(event, 'fs94', 186)" class="i">t</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 187)" onmouseover="showTip(event, 'fs25', 187)" class="f">toOptionDynamic</span> <span onmouseout="hideTip(event, 'fs94', 188)" onmouseover="showTip(event, 'fs94', 188)" class="i">t</span> <span onmouseout="hideTip(event, 'fs93', 189)" onmouseover="showTip(event, 'fs93', 189)" class="i">v</span>
                                                 | <span onmouseout="hideTip(event, 'fs53', 190)" onmouseover="showTip(event, 'fs53', 190)" class="p">None</span>   <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs93', 191)" onmouseover="showTip(event, 'fs93', 191)" class="i">v</span>)
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 192)" onmouseover="showTip(event, 'fs41', 192)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs95', 193)" onmouseover="showTip(event, 'fs95', 193)" class="f">toArray</span>
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs76', 194)" onmouseover="showTip(event, 'fs76', 194)" class="f">makeEntity</span> }
</code></pre></td>
</tr>
</table>
<h2><a name="Usage" class="anchor" href="#Usage">Usage</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">namespace</span> <span class="i">Sample</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 195)" onmouseover="showTip(event, 'fs2', 195)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 196)" onmouseover="showTip(event, 'fs2', 196)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 197)" onmouseover="showTip(event, 'fs3', 197)" class="i">Data</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 198)" onmouseover="showTip(event, 'fs8', 198)" class="i">Common</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 199)" onmouseover="showTip(event, 'fs1', 199)" class="i">XMicroOrm</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs96', 200)" onmouseover="showTip(event, 'fs96', 200)" class="t">Customer</span> <span class="o">=</span>
    { <span onmouseout="hideTip(event, 'fs97', 201)" onmouseover="showTip(event, 'fs97', 201)" class="i">CustomerID</span>    <span class="o">:</span> <span onmouseout="hideTip(event, 'fs56', 202)" onmouseover="showTip(event, 'fs56', 202)" class="t">int</span>;
      <span onmouseout="hideTip(event, 'fs98', 203)" onmouseover="showTip(event, 'fs98', 203)" class="i">PersonID</span>      <span class="o">:</span> <span onmouseout="hideTip(event, 'fs56', 204)" onmouseover="showTip(event, 'fs56', 204)" class="t">int</span> <span onmouseout="hideTip(event, 'fs99', 205)" onmouseover="showTip(event, 'fs99', 205)" class="t">option</span>;
      <span onmouseout="hideTip(event, 'fs100', 206)" onmouseover="showTip(event, 'fs100', 206)" class="i">StoreID</span>       <span class="o">:</span> <span onmouseout="hideTip(event, 'fs56', 207)" onmouseover="showTip(event, 'fs56', 207)" class="t">int</span> <span onmouseout="hideTip(event, 'fs99', 208)" onmouseover="showTip(event, 'fs99', 208)" class="t">option</span>;
      <span onmouseout="hideTip(event, 'fs101', 209)" onmouseover="showTip(event, 'fs101', 209)" class="i">TerritoryID</span>   <span class="o">:</span> <span onmouseout="hideTip(event, 'fs56', 210)" onmouseover="showTip(event, 'fs56', 210)" class="t">int</span> <span onmouseout="hideTip(event, 'fs99', 211)" onmouseover="showTip(event, 'fs99', 211)" class="t">option</span>;
      <span onmouseout="hideTip(event, 'fs102', 212)" onmouseover="showTip(event, 'fs102', 212)" class="i">AccountNumber</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs58', 213)" onmouseover="showTip(event, 'fs58', 213)" class="t">string</span>;
      <span onmouseout="hideTip(event, 'fs103', 214)" onmouseover="showTip(event, 'fs103', 214)" class="i">rowguid</span>       <span class="o">:</span> <span onmouseout="hideTip(event, 'fs104', 215)" onmouseover="showTip(event, 'fs104', 215)" class="t">Guid</span>;
      <span onmouseout="hideTip(event, 'fs105', 216)" onmouseover="showTip(event, 'fs105', 216)" class="i">ModifiedDate</span>  <span class="o">:</span> <span onmouseout="hideTip(event, 'fs106', 217)" onmouseover="showTip(event, 'fs106', 217)" class="t">DateTime</span> }

<span class="k">module</span> <span onmouseout="hideTip(event, 'fs107', 218)" onmouseover="showTip(event, 'fs107', 218)" class="t">Program</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs108', 219)" onmouseover="showTip(event, 'fs108', 219)" class="i">provider</span> <span class="o">=</span> <span class="s">@&quot;System.Data.SqlClient&quot;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs109', 220)" onmouseover="showTip(event, 'fs109', 220)" class="i">cnnstr</span> <span class="o">=</span> <span class="s">@&quot;Data Source=(LocalDB)\v11.0;Integrated Security=True;&quot;</span>
               <span class="o">+</span> <span class="s">@&quot;AttachDbFilename=D:\AdventureWorks2012_Data.mdf&quot;</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs110', 221)" onmouseover="showTip(event, 'fs110', 221)" class="f">main</span> _ <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs111', 222)" onmouseover="showTip(event, 'fs111', 222)" class="i">factory</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs112', 223)" onmouseover="showTip(event, 'fs112', 223)" class="t">DbProviderFactories</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs113', 224)" onmouseover="showTip(event, 'fs113', 224)" class="f">GetFactory</span>(<span onmouseout="hideTip(event, 'fs108', 225)" onmouseover="showTip(event, 'fs108', 225)" class="i">provider</span>)
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs114', 226)" onmouseover="showTip(event, 'fs114', 226)" class="i">cnn</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs111', 227)" onmouseover="showTip(event, 'fs111', 227)" class="i">factory</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs115', 228)" onmouseover="showTip(event, 'fs115', 228)" class="f">CreateConnection</span>(<span onmouseout="hideTip(event, 'fs109', 229)" onmouseover="showTip(event, 'fs109', 229)" class="i">cnnstr</span>)
        <span onmouseout="hideTip(event, 'fs114', 230)" onmouseover="showTip(event, 'fs114', 230)" class="i">cnn</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs116', 231)" onmouseover="showTip(event, 'fs116', 231)" class="f">Open</span>()

        <span class="s">@&quot;SELECT * FROM Sales.Customer&quot;</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs60', 232)" onmouseover="showTip(event, 'fs60', 232)" class="t">DbEntity</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs117', 233)" onmouseover="showTip(event, 'fs117', 233)" class="f">read</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs96', 234)" onmouseover="showTip(event, 'fs96', 234)" class="t">Customer</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs114', 235)" onmouseover="showTip(event, 'fs114', 235)" class="i">cnn</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 236)" onmouseover="showTip(event, 'fs41', 236)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs118', 237)" onmouseover="showTip(event, 'fs118', 237)" class="f">take</span> <span class="n">10</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 238)" onmouseover="showTip(event, 'fs41', 238)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs119', 239)" onmouseover="showTip(event, 'fs119', 239)" class="f">iter</span> (<span onmouseout="hideTip(event, 'fs120', 240)" onmouseover="showTip(event, 'fs120', 240)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">&quot;</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace XMicroOrm</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace System.Data</div>
<div class="tip" id="fs4">namespace Microsoft</div>
<div class="tip" id="fs5">namespace Microsoft.FSharp</div>
<div class="tip" id="fs6">namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs7">Multiple items<br />type AutoOpenAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AutoOpenAttribute<br />&#160;&#160;new : path:string -&gt; AutoOpenAttribute<br />&#160;&#160;member Path : string<br /><br />Full name: Microsoft.FSharp.Core.AutoOpenAttribute<br /><br />--------------------<br />new : unit -&gt; AutoOpenAttribute<br />new : path:string -&gt; AutoOpenAttribute</div>
<div class="tip" id="fs8">namespace System.Data.Common</div>
<div class="tip" id="fs9">type DbProviderFactory =<br />&#160;&#160;member CanCreateDataSourceEnumerator : bool<br />&#160;&#160;member CreateCommand : unit -&gt; DbCommand<br />&#160;&#160;member CreateCommandBuilder : unit -&gt; DbCommandBuilder<br />&#160;&#160;member CreateConnection : unit -&gt; DbConnection<br />&#160;&#160;member CreateConnectionStringBuilder : unit -&gt; DbConnectionStringBuilder<br />&#160;&#160;member CreateDataAdapter : unit -&gt; DbDataAdapter<br />&#160;&#160;member CreateDataSourceEnumerator : unit -&gt; DbDataSourceEnumerator<br />&#160;&#160;member CreateParameter : unit -&gt; DbParameter<br />&#160;&#160;member CreatePermission : state:PermissionState -&gt; CodeAccessPermission<br /><br />Full name: System.Data.Common.DbProviderFactory</div>
<div class="tip" id="fs10">val f : Common.DbProviderFactory</div>
<div class="tip" id="fs11">member Common.DbProviderFactory.CreateConnection : connectionString:string -&gt; Common.DbConnection<br /><br />Full name: XMicroOrm.Extensions.CreateConnection</div>
<div class="tip" id="fs12">val connectionString : string</div>
<div class="tip" id="fs13">val cnn : Common.DbConnection</div>
<div class="tip" id="fs14">Common.DbProviderFactory.CreateConnection() : Common.DbConnection<br />member Common.DbProviderFactory.CreateConnection : connectionString:string -&gt; Common.DbConnection</div>
<div class="tip" id="fs15">property Common.DbConnection.ConnectionString: string</div>
<div class="tip" id="fs16">type IDbConnection =<br />&#160;&#160;member BeginTransaction : unit -&gt; IDbTransaction + 1 overload<br />&#160;&#160;member ChangeDatabase : databaseName:string -&gt; unit<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member ConnectionString : string with get, set<br />&#160;&#160;member ConnectionTimeout : int<br />&#160;&#160;member CreateCommand : unit -&gt; IDbCommand<br />&#160;&#160;member Database : string<br />&#160;&#160;member Open : unit -&gt; unit<br />&#160;&#160;member State : ConnectionState<br /><br />Full name: System.Data.IDbConnection</div>
<div class="tip" id="fs17">val f : IDbConnection</div>
<div class="tip" id="fs18">member IDbConnection.CreateCommand : connection:IDbConnection * commandText:string -&gt; IDbCommand<br /><br />Full name: XMicroOrm.Extensions.CreateCommand</div>
<div class="tip" id="fs19">val connection : IDbConnection</div>
<div class="tip" id="fs20">val commandText : string</div>
<div class="tip" id="fs21">val cmd : IDbCommand</div>
<div class="tip" id="fs22">IDbConnection.CreateCommand() : IDbCommand<br />member IDbConnection.CreateCommand : connection:IDbConnection * commandText:string -&gt; IDbCommand</div>
<div class="tip" id="fs23">property IDbCommand.Connection: IDbConnection</div>
<div class="tip" id="fs24">property IDbCommand.CommandText: string</div>
<div class="tip" id="fs25">val toOptionDynamic : typ:Type -&gt; value:obj -&gt; obj<br /><br />Full name: XMicroOrm.Helper.toOptionDynamic</div>
<div class="tip" id="fs26">val typ : Type</div>
<div class="tip" id="fs27">type Type =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Assembly : Assembly<br />&#160;&#160;member AssemblyQualifiedName : string<br />&#160;&#160;member Attributes : TypeAttributes<br />&#160;&#160;member BaseType : Type<br />&#160;&#160;member ContainsGenericParameters : bool<br />&#160;&#160;member DeclaringMethod : MethodBase<br />&#160;&#160;member DeclaringType : Type<br />&#160;&#160;member Equals : o:obj -&gt; bool + 1 overload<br />&#160;&#160;member FindInterfaces : filter:TypeFilter * filterCriteria:obj -&gt; Type[]<br />&#160;&#160;member FindMembers : memberType:MemberTypes * bindingAttr:BindingFlags * filter:MemberFilter * filterCriteria:obj -&gt; MemberInfo[]<br />&#160;&#160;...<br /><br />Full name: System.Type</div>
<div class="tip" id="fs28">val value : obj</div>
<div class="tip" id="fs29">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs30">val opttyp : Type</div>
<div class="tip" id="fs31">val typedefof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typedefof</div>
<div class="tip" id="fs32">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs33">val tag : int</div>
<div class="tip" id="fs34">val varr : obj []</div>
<div class="tip" id="fs35">type DBNull =<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;member ToString : unit -&gt; string + 1 overload<br />&#160;&#160;static val Value : DBNull<br /><br />Full name: System.DBNull</div>
<div class="tip" id="fs36">field DBNull.Value</div>
<div class="tip" id="fs37">Object.Equals(obj: obj) : bool</div>
<div class="tip" id="fs38">val case : UnionCaseInfo</div>
<div class="tip" id="fs39">type FSharpType =<br />&#160;&#160;static member GetExceptionFields : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetFunctionElements : functionType:Type -&gt; Type * Type<br />&#160;&#160;static member GetRecordFields : recordType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetTupleElements : tupleType:Type -&gt; Type []<br />&#160;&#160;static member GetUnionCases : unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo []<br />&#160;&#160;static member IsExceptionRepresentation : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsFunction : typ:Type -&gt; bool<br />&#160;&#160;static member IsModule : typ:Type -&gt; bool<br />&#160;&#160;static member IsRecord : typ:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsTuple : typ:Type -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpType</div>
<div class="tip" id="fs40">static member FSharpType.GetUnionCases : unionType:Type * ?allowAccessToPrivateRepresentation:bool -&gt; UnionCaseInfo []<br />static member FSharpType.GetUnionCases : unionType:Type * ?bindingFlags:Reflection.BindingFlags -&gt; UnionCaseInfo []</div>
<div class="tip" id="fs41">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs42">val find : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.Seq.find</div>
<div class="tip" id="fs43">val uc : UnionCaseInfo</div>
<div class="tip" id="fs44">property UnionCaseInfo.Tag: int</div>
<div class="tip" id="fs45">type FSharpValue =<br />&#160;&#160;static member GetExceptionFields : exn:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetRecordField : record:obj * info:PropertyInfo -&gt; obj<br />&#160;&#160;static member GetRecordFields : record:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetTupleField : tuple:obj * index:int -&gt; obj<br />&#160;&#160;static member GetTupleFields : tuple:obj -&gt; obj []<br />&#160;&#160;static member GetUnionFields : value:obj * unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo * obj []<br />&#160;&#160;static member MakeFunction : functionType:Type * implementation:(obj -&gt; obj) -&gt; obj<br />&#160;&#160;static member MakeRecord : recordType:Type * values:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;static member MakeTuple : tupleElements:obj [] * tupleType:Type -&gt; obj<br />&#160;&#160;static member MakeUnion : unionCase:UnionCaseInfo * args:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpValue</div>
<div class="tip" id="fs46">static member FSharpValue.MakeUnion : unionCase:UnionCaseInfo * args:obj [] * ?allowAccessToPrivateRepresentation:bool -&gt; obj<br />static member FSharpValue.MakeUnion : unionCase:UnionCaseInfo * args:obj [] * ?bindingFlags:Reflection.BindingFlags -&gt; obj</div>
<div class="tip" id="fs47">val optionTypeArg : typ:Type -&gt; Type option<br /><br />Full name: XMicroOrm.Helper.optionTypeArg</div>
<div class="tip" id="fs48">val isOp : bool</div>
<div class="tip" id="fs49">property Type.IsGenericType: bool</div>
<div class="tip" id="fs50">Type.GetGenericTypeDefinition() : Type</div>
<div class="tip" id="fs51">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs52">Type.GetGenericArguments() : Type []</div>
<div class="tip" id="fs53">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs54">type DbEntityField =<br />&#160;&#160;{Index: int;<br />&#160;&#160;&#160;Name: string;<br />&#160;&#160;&#160;Type: Type;}<br /><br />Full name: XMicroOrm.DbEntityField</div>
<div class="tip" id="fs55">DbEntityField.Index: int</div>
<div class="tip" id="fs56">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs57">DbEntityField.Name: string</div>
<div class="tip" id="fs58">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs59">Multiple items<br />DbEntityField.Type: Type<br /><br />--------------------<br />type Type =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Assembly : Assembly<br />&#160;&#160;member AssemblyQualifiedName : string<br />&#160;&#160;member Attributes : TypeAttributes<br />&#160;&#160;member BaseType : Type<br />&#160;&#160;member ContainsGenericParameters : bool<br />&#160;&#160;member DeclaringMethod : MethodBase<br />&#160;&#160;member DeclaringType : Type<br />&#160;&#160;member Equals : o:obj -&gt; bool + 1 overload<br />&#160;&#160;member FindInterfaces : filter:TypeFilter * filterCriteria:obj -&gt; Type[]<br />&#160;&#160;member FindMembers : memberType:MemberTypes * bindingAttr:BindingFlags * filter:MemberFilter * filterCriteria:obj -&gt; MemberInfo[]<br />&#160;&#160;...<br /><br />Full name: System.Type</div>
<div class="tip" id="fs60">module DbEntity<br /><br />from XMicroOrm</div>
<div class="tip" id="fs61">val name&lt;&#39;R (requires reference type)&gt; : string<br /><br />Full name: XMicroOrm.DbEntity.name</div>
<div class="tip" id="fs62">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs63">val rty : Type</div>
<div class="tip" id="fs64">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs65">static member FSharpType.IsRecord : typ:Type * ?allowAccessToPrivateRepresentation:bool -&gt; bool<br />static member FSharpType.IsRecord : typ:Type * ?bindingFlags:Reflection.BindingFlags -&gt; bool</div>
<div class="tip" id="fs66">property Reflection.MemberInfo.Name: string</div>
<div class="tip" id="fs67">val fields&lt;&#39;R (requires reference type)&gt; : seq&lt;DbEntityField&gt;<br /><br />Full name: XMicroOrm.DbEntity.fields</div>
<div class="tip" id="fs68">static member FSharpType.GetRecordFields : recordType:Type * ?allowAccessToPrivateRepresentation:bool -&gt; Reflection.PropertyInfo []<br />static member FSharpType.GetRecordFields : recordType:Type * ?bindingFlags:Reflection.BindingFlags -&gt; Reflection.PropertyInfo []</div>
<div class="tip" id="fs69">val mapi : mapping:(int -&gt; &#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.mapi</div>
<div class="tip" id="fs70">val i : int</div>
<div class="tip" id="fs71">val p : Reflection.PropertyInfo</div>
<div class="tip" id="fs72">property Reflection.PropertyInfo.PropertyType: Type</div>
<div class="tip" id="fs73">val read : cnn:IDbConnection -&gt; sql:string -&gt; seq&lt;&#39;R&gt; (requires reference type)<br /><br />Full name: XMicroOrm.DbEntity.read</div>
<div class="tip" id="fs74">val cnn : IDbConnection</div>
<div class="tip" id="fs75">val sql : string</div>
<div class="tip" id="fs76">val makeEntity : (obj [] -&gt; &#39;R) (requires reference type)</div>
<div class="tip" id="fs77">val mk : (obj [] -&gt; obj)</div>
<div class="tip" id="fs78">static member FSharpValue.PreComputeRecordConstructor : recordType:Type * ?allowAccessToPrivateRepresentation:bool -&gt; (obj [] -&gt; obj)<br />static member FSharpValue.PreComputeRecordConstructor : recordType:Type * ?bindingFlags:Reflection.BindingFlags -&gt; (obj [] -&gt; obj)</div>
<div class="tip" id="fs79">val vals : obj []</div>
<div class="tip" id="fs80">val fields : Collections.Generic.IDictionary&lt;string,DbEntityField&gt;</div>
<div class="tip" id="fs81">val dict : keyValuePairs:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Collections.Generic.IDictionary&lt;&#39;Key,&#39;Value&gt; (requires equality)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.dict</div>
<div class="tip" id="fs82">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs83">val fld : DbEntityField</div>
<div class="tip" id="fs84">val reader : IDataReader</div>
<div class="tip" id="fs85">IDbCommand.ExecuteReader() : IDataReader<br />IDbCommand.ExecuteReader(behavior: CommandBehavior) : IDataReader</div>
<div class="tip" id="fs86">IDataReader.Read() : bool</div>
<div class="tip" id="fs87">property IDataRecord.FieldCount: int</div>
<div class="tip" id="fs88">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs89">IDataRecord.GetName(i: int) : string</div>
<div class="tip" id="fs90">IDataRecord.GetValue(i: int) : obj</div>
<div class="tip" id="fs91">val sortBy : projection:(&#39;T -&gt; &#39;Key) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.sortBy</div>
<div class="tip" id="fs92">val n : string</div>
<div class="tip" id="fs93">val v : obj</div>
<div class="tip" id="fs94">val t : Type</div>
<div class="tip" id="fs95">val toArray : source:seq&lt;&#39;T&gt; -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Seq.toArray</div>
<div class="tip" id="fs96">type Customer =<br />&#160;&#160;{CustomerID: int;<br />&#160;&#160;&#160;PersonID: int option;<br />&#160;&#160;&#160;StoreID: int option;<br />&#160;&#160;&#160;TerritoryID: int option;<br />&#160;&#160;&#160;AccountNumber: string;<br />&#160;&#160;&#160;rowguid: Guid;<br />&#160;&#160;&#160;ModifiedDate: DateTime;}<br /><br />Full name: Sample.Customer</div>
<div class="tip" id="fs97">Customer.CustomerID: int</div>
<div class="tip" id="fs98">Customer.PersonID: int option</div>
<div class="tip" id="fs99">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs100">Customer.StoreID: int option</div>
<div class="tip" id="fs101">Customer.TerritoryID: int option</div>
<div class="tip" id="fs102">Customer.AccountNumber: string</div>
<div class="tip" id="fs103">Customer.rowguid: Guid</div>
<div class="tip" id="fs104">Multiple items<br />type Guid =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : b:byte[] -&gt; Guid + 4 overloads<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : o:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member ToByteArray : unit -&gt; byte[]<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 2 overloads<br />&#160;&#160;&#160;&#160;static val Empty : Guid<br />&#160;&#160;&#160;&#160;static member NewGuid : unit -&gt; Guid<br />&#160;&#160;&#160;&#160;static member Parse : input:string -&gt; Guid<br />&#160;&#160;&#160;&#160;static member ParseExact : input:string * format:string -&gt; Guid<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Guid<br /><br />--------------------<br />Guid()<br />Guid(b: byte []) : unit<br />Guid(g: string) : unit<br />Guid(a: int, b: int16, c: int16, d: byte []) : unit<br />Guid(a: uint32, b: uint16, c: uint16, d: byte, e: byte, f: byte, g: byte, h: byte, i: byte, j: byte, k: byte) : unit<br />Guid(a: int, b: int16, c: int16, d: byte, e: byte, f: byte, g: byte, h: byte, i: byte, j: byte, k: byte) : unit</div>
<div class="tip" id="fs105">Customer.ModifiedDate: DateTime</div>
<div class="tip" id="fs106">Multiple items<br />type DateTime =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : ticks:int64 -&gt; DateTime + 10 overloads<br />&#160;&#160;&#160;&#160;member Add : value:TimeSpan -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddDays : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddHours : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMilliseconds : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMinutes : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMonths : months:int -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddSeconds : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddTicks : value:int64 -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddYears : value:int -&gt; DateTime<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.DateTime<br /><br />--------------------<br />DateTime()<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(ticks: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(ticks: int64, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, calendar: Globalization.Calendar) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, calendar: Globalization.Calendar) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs107">module Program<br /><br />from Sample</div>
<div class="tip" id="fs108">val provider : string<br /><br />Full name: Sample.Program.provider</div>
<div class="tip" id="fs109">val cnnstr : string<br /><br />Full name: Sample.Program.cnnstr</div>
<div class="tip" id="fs110">val main : &#39;a -&gt; unit<br /><br />Full name: Sample.Program.main</div>
<div class="tip" id="fs111">val factory : DbProviderFactory</div>
<div class="tip" id="fs112">type DbProviderFactories =<br />&#160;&#160;static member GetFactory : providerInvariantName:string -&gt; DbProviderFactory + 1 overload<br />&#160;&#160;static member GetFactoryClasses : unit -&gt; DataTable<br /><br />Full name: System.Data.Common.DbProviderFactories</div>
<div class="tip" id="fs113">DbProviderFactories.GetFactory(providerRow: Data.DataRow) : DbProviderFactory<br />DbProviderFactories.GetFactory(providerInvariantName: string) : DbProviderFactory</div>
<div class="tip" id="fs114">val cnn : DbConnection</div>
<div class="tip" id="fs115">DbProviderFactory.CreateConnection() : DbConnection<br />member DbProviderFactory.CreateConnection : connectionString:string -&gt; DbConnection</div>
<div class="tip" id="fs116">DbConnection.Open() : unit</div>
<div class="tip" id="fs117">val read : cnn:Data.IDbConnection -&gt; sql:string -&gt; seq&lt;&#39;R&gt; (requires reference type)<br /><br />Full name: XMicroOrm.DbEntity.read</div>
<div class="tip" id="fs118">val take : count:int -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.take</div>
<div class="tip" id="fs119">val iter : action:(&#39;T -&gt; unit) -&gt; source:seq&lt;&#39;T&gt; -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.Seq.iter</div>
<div class="tip" id="fs120">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>

