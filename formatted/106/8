<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Seq</span> <span class="o">=</span>
    <span class="c">/// Takes elements into a sublist until the predicate returns false (exclusive)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="f">partitionWhile</span> (<span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">func</span> <span class="o">:</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">bool</span>) (<span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">sequence</span> <span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">seq</span>) <span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="t">list</span> <span class="o">*</span> _ <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="t">seq</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">en</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 10)" onmouseover="showTip(event, 'fs5', 10)" class="i">sequence</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="f">GetEnumerator</span> ()
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="v">wasGood</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="f">ref</span> <span class="k">true</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="i">sublist</span> <span class="o">=</span> 
            [
                <span class="k">while</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="v">wasGood</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs8', 16)" onmouseover="showTip(event, 'fs8', 16)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="f">MoveNext</span>() <span class="k">do</span>
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs3', 18)" onmouseover="showTip(event, 'fs3', 18)" class="f">func</span> <span onmouseout="hideTip(event, 'fs8', 19)" onmouseover="showTip(event, 'fs8', 19)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="i">Current</span> <span class="k">then</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 21)" onmouseover="showTip(event, 'fs8', 21)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 22)" onmouseover="showTip(event, 'fs14', 22)" class="i">Current</span>
                    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs10', 23)" onmouseover="showTip(event, 'fs10', 23)" class="v">wasGood</span> <span class="o">:=</span> <span class="k">false</span>
            ]
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 24)" onmouseover="showTip(event, 'fs15', 24)" class="i">remainder</span> <span class="o">=</span> 
            <span onmouseout="hideTip(event, 'fs6', 25)" onmouseover="showTip(event, 'fs6', 25)" class="i">seq</span> { 
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="f">not</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs10', 27)" onmouseover="showTip(event, 'fs10', 27)" class="v">wasGood</span> <span class="k">then</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 28)" onmouseover="showTip(event, 'fs8', 28)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 29)" onmouseover="showTip(event, 'fs14', 29)" class="i">Current</span>
                    <span class="k">while</span> <span onmouseout="hideTip(event, 'fs8', 30)" onmouseover="showTip(event, 'fs8', 30)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 31)" onmouseover="showTip(event, 'fs13', 31)" class="f">MoveNext</span>() <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 32)" onmouseover="showTip(event, 'fs8', 32)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 33)" onmouseover="showTip(event, 'fs14', 33)" class="i">Current</span> 
                }
        <span onmouseout="hideTip(event, 'fs12', 34)" onmouseover="showTip(event, 'fs12', 34)" class="i">sublist</span>, <span onmouseout="hideTip(event, 'fs15', 35)" onmouseover="showTip(event, 'fs15', 35)" class="i">remainder</span>

    <span class="c">///Takes elements into a sublist until the predicate returns true (exclusive)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 36)" onmouseover="showTip(event, 'fs17', 36)" class="f">partitionUntil</span> (<span onmouseout="hideTip(event, 'fs3', 37)" onmouseover="showTip(event, 'fs3', 37)" class="f">func</span> <span class="o">:</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 38)" onmouseover="showTip(event, 'fs4', 38)" class="t">bool</span>) (<span onmouseout="hideTip(event, 'fs5', 39)" onmouseover="showTip(event, 'fs5', 39)" class="i">sequence</span> <span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs6', 40)" onmouseover="showTip(event, 'fs6', 40)" class="t">seq</span>) <span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs7', 41)" onmouseover="showTip(event, 'fs7', 41)" class="t">list</span> <span class="o">*</span> _ <span onmouseout="hideTip(event, 'fs6', 42)" onmouseover="showTip(event, 'fs6', 42)" class="t">seq</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 43)" onmouseover="showTip(event, 'fs8', 43)" class="i">en</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 44)" onmouseover="showTip(event, 'fs5', 44)" class="i">sequence</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 45)" onmouseover="showTip(event, 'fs9', 45)" class="f">GetEnumerator</span> ()
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 46)" onmouseover="showTip(event, 'fs18', 46)" class="v">satisfied</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 47)" onmouseover="showTip(event, 'fs11', 47)" class="f">ref</span> <span class="k">false</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 48)" onmouseover="showTip(event, 'fs12', 48)" class="i">sublist</span> <span class="o">=</span> 
            [
                <span class="k">while</span> <span onmouseout="hideTip(event, 'fs16', 49)" onmouseover="showTip(event, 'fs16', 49)" class="f">not</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs18', 50)" onmouseover="showTip(event, 'fs18', 50)" class="v">satisfied</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs8', 51)" onmouseover="showTip(event, 'fs8', 51)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 52)" onmouseover="showTip(event, 'fs13', 52)" class="f">MoveNext</span>() <span class="k">do</span>
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs16', 53)" onmouseover="showTip(event, 'fs16', 53)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs3', 54)" onmouseover="showTip(event, 'fs3', 54)" class="f">func</span> <span onmouseout="hideTip(event, 'fs8', 55)" onmouseover="showTip(event, 'fs8', 55)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 56)" onmouseover="showTip(event, 'fs14', 56)" class="i">Current</span>) <span class="k">then</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 57)" onmouseover="showTip(event, 'fs8', 57)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 58)" onmouseover="showTip(event, 'fs14', 58)" class="i">Current</span>
                    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs18', 59)" onmouseover="showTip(event, 'fs18', 59)" class="v">satisfied</span> <span class="o">:=</span> <span class="k">true</span>
            ]
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 60)" onmouseover="showTip(event, 'fs15', 60)" class="i">remainder</span> <span class="o">=</span> 
            <span onmouseout="hideTip(event, 'fs6', 61)" onmouseover="showTip(event, 'fs6', 61)" class="i">seq</span> { 
                    <span class="k">if</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs18', 62)" onmouseover="showTip(event, 'fs18', 62)" class="v">satisfied</span> <span class="k">then</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 63)" onmouseover="showTip(event, 'fs8', 63)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 64)" onmouseover="showTip(event, 'fs14', 64)" class="i">Current</span>
                    <span class="k">while</span> <span onmouseout="hideTip(event, 'fs8', 65)" onmouseover="showTip(event, 'fs8', 65)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 66)" onmouseover="showTip(event, 'fs13', 66)" class="f">MoveNext</span>() <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 67)" onmouseover="showTip(event, 'fs8', 67)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 68)" onmouseover="showTip(event, 'fs14', 68)" class="i">Current</span> 
                }
        <span onmouseout="hideTip(event, 'fs12', 69)" onmouseover="showTip(event, 'fs12', 69)" class="i">sublist</span>, <span onmouseout="hideTip(event, 'fs15', 70)" onmouseover="showTip(event, 'fs15', 70)" class="i">remainder</span>

    <span class="c">///Takes elements into a sublist until the predicate returns true (inclusive)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 71)" onmouseover="showTip(event, 'fs19', 71)" class="f">partitionUntilAfter</span> (<span onmouseout="hideTip(event, 'fs3', 72)" onmouseover="showTip(event, 'fs3', 72)" class="f">func</span> <span class="o">:</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 73)" onmouseover="showTip(event, 'fs4', 73)" class="t">bool</span>) (<span onmouseout="hideTip(event, 'fs5', 74)" onmouseover="showTip(event, 'fs5', 74)" class="i">sequence</span> <span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs6', 75)" onmouseover="showTip(event, 'fs6', 75)" class="t">seq</span>) <span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs7', 76)" onmouseover="showTip(event, 'fs7', 76)" class="t">list</span> <span class="o">*</span> _ <span onmouseout="hideTip(event, 'fs6', 77)" onmouseover="showTip(event, 'fs6', 77)" class="t">seq</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 78)" onmouseover="showTip(event, 'fs8', 78)" class="i">en</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 79)" onmouseover="showTip(event, 'fs5', 79)" class="i">sequence</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 80)" onmouseover="showTip(event, 'fs9', 80)" class="f">GetEnumerator</span> ()
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 81)" onmouseover="showTip(event, 'fs18', 81)" class="v">satisfied</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 82)" onmouseover="showTip(event, 'fs11', 82)" class="f">ref</span> <span class="k">false</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 83)" onmouseover="showTip(event, 'fs12', 83)" class="i">sublist</span> <span class="o">=</span> 
            [
                <span class="k">while</span> <span onmouseout="hideTip(event, 'fs16', 84)" onmouseover="showTip(event, 'fs16', 84)" class="f">not</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs18', 85)" onmouseover="showTip(event, 'fs18', 85)" class="v">satisfied</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs8', 86)" onmouseover="showTip(event, 'fs8', 86)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 87)" onmouseover="showTip(event, 'fs13', 87)" class="f">MoveNext</span>() <span class="k">do</span>
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs3', 88)" onmouseover="showTip(event, 'fs3', 88)" class="f">func</span> <span onmouseout="hideTip(event, 'fs8', 89)" onmouseover="showTip(event, 'fs8', 89)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 90)" onmouseover="showTip(event, 'fs14', 90)" class="i">Current</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs18', 91)" onmouseover="showTip(event, 'fs18', 91)" class="v">satisfied</span> <span class="o">:=</span> <span class="k">true</span>
                    <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 92)" onmouseover="showTip(event, 'fs8', 92)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 93)" onmouseover="showTip(event, 'fs14', 93)" class="i">Current</span>
            ]
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 94)" onmouseover="showTip(event, 'fs15', 94)" class="i">remainder</span> <span class="o">=</span> 
            <span onmouseout="hideTip(event, 'fs6', 95)" onmouseover="showTip(event, 'fs6', 95)" class="i">seq</span> { 
                    <span class="k">while</span> <span onmouseout="hideTip(event, 'fs8', 96)" onmouseover="showTip(event, 'fs8', 96)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 97)" onmouseover="showTip(event, 'fs13', 97)" class="f">MoveNext</span>() <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 98)" onmouseover="showTip(event, 'fs8', 98)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 99)" onmouseover="showTip(event, 'fs14', 99)" class="i">Current</span> 
                }
        <span onmouseout="hideTip(event, 'fs12', 100)" onmouseover="showTip(event, 'fs12', 100)" class="i">sublist</span>, <span onmouseout="hideTip(event, 'fs15', 101)" onmouseover="showTip(event, 'fs15', 101)" class="i">remainder</span>

<span class="k">module</span> <span onmouseout="hideTip(event, 'fs20', 102)" onmouseover="showTip(event, 'fs20', 102)" class="t">List</span> <span class="o">=</span>
    <span class="c">/// Takes elements into a sublist until the predicate returns false (exclusive)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 103)" onmouseover="showTip(event, 'fs21', 103)" class="f">partitionWhile</span> (<span onmouseout="hideTip(event, 'fs3', 104)" onmouseover="showTip(event, 'fs3', 104)" class="f">func</span> <span class="o">:</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 105)" onmouseover="showTip(event, 'fs4', 105)" class="t">bool</span>) (<span onmouseout="hideTip(event, 'fs5', 106)" onmouseover="showTip(event, 'fs5', 106)" class="i">sequence</span> <span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs6', 107)" onmouseover="showTip(event, 'fs6', 107)" class="t">seq</span>) <span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs7', 108)" onmouseover="showTip(event, 'fs7', 108)" class="t">list</span> <span class="o">*</span> _ <span onmouseout="hideTip(event, 'fs7', 109)" onmouseover="showTip(event, 'fs7', 109)" class="t">list</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 110)" onmouseover="showTip(event, 'fs8', 110)" class="i">en</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 111)" onmouseover="showTip(event, 'fs5', 111)" class="i">sequence</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 112)" onmouseover="showTip(event, 'fs9', 112)" class="f">GetEnumerator</span> ()
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 113)" onmouseover="showTip(event, 'fs10', 113)" class="v">wasGood</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 114)" onmouseover="showTip(event, 'fs11', 114)" class="f">ref</span> <span class="k">true</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 115)" onmouseover="showTip(event, 'fs12', 115)" class="i">sublist</span> <span class="o">=</span> 
            [
                <span class="k">while</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs10', 116)" onmouseover="showTip(event, 'fs10', 116)" class="v">wasGood</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs8', 117)" onmouseover="showTip(event, 'fs8', 117)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 118)" onmouseover="showTip(event, 'fs13', 118)" class="f">MoveNext</span>() <span class="k">do</span>
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs3', 119)" onmouseover="showTip(event, 'fs3', 119)" class="f">func</span> <span onmouseout="hideTip(event, 'fs8', 120)" onmouseover="showTip(event, 'fs8', 120)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 121)" onmouseover="showTip(event, 'fs14', 121)" class="i">Current</span> <span class="k">then</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 122)" onmouseover="showTip(event, 'fs8', 122)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 123)" onmouseover="showTip(event, 'fs14', 123)" class="i">Current</span>
                    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs10', 124)" onmouseover="showTip(event, 'fs10', 124)" class="v">wasGood</span> <span class="o">:=</span> <span class="k">false</span>
            ]
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 125)" onmouseover="showTip(event, 'fs22', 125)" class="i">remainder</span> <span class="o">=</span> 
            [
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs16', 126)" onmouseover="showTip(event, 'fs16', 126)" class="f">not</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs10', 127)" onmouseover="showTip(event, 'fs10', 127)" class="v">wasGood</span> <span class="k">then</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 128)" onmouseover="showTip(event, 'fs8', 128)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 129)" onmouseover="showTip(event, 'fs14', 129)" class="i">Current</span>
                <span class="k">while</span> <span onmouseout="hideTip(event, 'fs8', 130)" onmouseover="showTip(event, 'fs8', 130)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 131)" onmouseover="showTip(event, 'fs13', 131)" class="f">MoveNext</span>() <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 132)" onmouseover="showTip(event, 'fs8', 132)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 133)" onmouseover="showTip(event, 'fs14', 133)" class="i">Current</span> 
            ]
        <span onmouseout="hideTip(event, 'fs12', 134)" onmouseover="showTip(event, 'fs12', 134)" class="i">sublist</span>, <span onmouseout="hideTip(event, 'fs22', 135)" onmouseover="showTip(event, 'fs22', 135)" class="i">remainder</span>

    <span class="c">///Takes elements into a sublist until the predicate returns true (exclusive)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 136)" onmouseover="showTip(event, 'fs23', 136)" class="f">partitionUntil</span> (<span onmouseout="hideTip(event, 'fs3', 137)" onmouseover="showTip(event, 'fs3', 137)" class="f">func</span> <span class="o">:</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 138)" onmouseover="showTip(event, 'fs4', 138)" class="t">bool</span>) (<span onmouseout="hideTip(event, 'fs5', 139)" onmouseover="showTip(event, 'fs5', 139)" class="i">sequence</span> <span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs6', 140)" onmouseover="showTip(event, 'fs6', 140)" class="t">seq</span>) <span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs7', 141)" onmouseover="showTip(event, 'fs7', 141)" class="t">list</span> <span class="o">*</span> _ <span onmouseout="hideTip(event, 'fs7', 142)" onmouseover="showTip(event, 'fs7', 142)" class="t">list</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 143)" onmouseover="showTip(event, 'fs8', 143)" class="i">en</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 144)" onmouseover="showTip(event, 'fs5', 144)" class="i">sequence</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 145)" onmouseover="showTip(event, 'fs9', 145)" class="f">GetEnumerator</span> ()
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 146)" onmouseover="showTip(event, 'fs18', 146)" class="v">satisfied</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 147)" onmouseover="showTip(event, 'fs11', 147)" class="f">ref</span> <span class="k">false</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 148)" onmouseover="showTip(event, 'fs12', 148)" class="i">sublist</span> <span class="o">=</span> 
            [
                <span class="k">while</span> <span onmouseout="hideTip(event, 'fs16', 149)" onmouseover="showTip(event, 'fs16', 149)" class="f">not</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs18', 150)" onmouseover="showTip(event, 'fs18', 150)" class="v">satisfied</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs8', 151)" onmouseover="showTip(event, 'fs8', 151)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 152)" onmouseover="showTip(event, 'fs13', 152)" class="f">MoveNext</span>() <span class="k">do</span>
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs16', 153)" onmouseover="showTip(event, 'fs16', 153)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs3', 154)" onmouseover="showTip(event, 'fs3', 154)" class="f">func</span> <span onmouseout="hideTip(event, 'fs8', 155)" onmouseover="showTip(event, 'fs8', 155)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 156)" onmouseover="showTip(event, 'fs14', 156)" class="i">Current</span>) <span class="k">then</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 157)" onmouseover="showTip(event, 'fs8', 157)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 158)" onmouseover="showTip(event, 'fs14', 158)" class="i">Current</span>
                    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs18', 159)" onmouseover="showTip(event, 'fs18', 159)" class="v">satisfied</span> <span class="o">:=</span> <span class="k">true</span>
            ]
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 160)" onmouseover="showTip(event, 'fs22', 160)" class="i">remainder</span> <span class="o">=</span> 
            [
                <span class="k">if</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs18', 161)" onmouseover="showTip(event, 'fs18', 161)" class="v">satisfied</span> <span class="k">then</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 162)" onmouseover="showTip(event, 'fs8', 162)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 163)" onmouseover="showTip(event, 'fs14', 163)" class="i">Current</span>
                <span class="k">while</span> <span onmouseout="hideTip(event, 'fs8', 164)" onmouseover="showTip(event, 'fs8', 164)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 165)" onmouseover="showTip(event, 'fs13', 165)" class="f">MoveNext</span>() <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 166)" onmouseover="showTip(event, 'fs8', 166)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 167)" onmouseover="showTip(event, 'fs14', 167)" class="i">Current</span> 
            ]
        <span onmouseout="hideTip(event, 'fs12', 168)" onmouseover="showTip(event, 'fs12', 168)" class="i">sublist</span>, <span onmouseout="hideTip(event, 'fs22', 169)" onmouseover="showTip(event, 'fs22', 169)" class="i">remainder</span>

    <span class="c">///Takes elements into a sublist until the predicate returns true (inclusive)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 170)" onmouseover="showTip(event, 'fs24', 170)" class="f">partitionUntilAfter</span> (<span onmouseout="hideTip(event, 'fs3', 171)" onmouseover="showTip(event, 'fs3', 171)" class="f">func</span> <span class="o">:</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 172)" onmouseover="showTip(event, 'fs4', 172)" class="t">bool</span>) (<span onmouseout="hideTip(event, 'fs5', 173)" onmouseover="showTip(event, 'fs5', 173)" class="i">sequence</span> <span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs6', 174)" onmouseover="showTip(event, 'fs6', 174)" class="t">seq</span>) <span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs7', 175)" onmouseover="showTip(event, 'fs7', 175)" class="t">list</span> <span class="o">*</span> _ <span onmouseout="hideTip(event, 'fs7', 176)" onmouseover="showTip(event, 'fs7', 176)" class="t">list</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 177)" onmouseover="showTip(event, 'fs8', 177)" class="i">en</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 178)" onmouseover="showTip(event, 'fs5', 178)" class="i">sequence</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 179)" onmouseover="showTip(event, 'fs9', 179)" class="f">GetEnumerator</span> ()
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 180)" onmouseover="showTip(event, 'fs18', 180)" class="v">satisfied</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 181)" onmouseover="showTip(event, 'fs11', 181)" class="f">ref</span> <span class="k">false</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 182)" onmouseover="showTip(event, 'fs12', 182)" class="i">sublist</span> <span class="o">=</span> 
            [
                <span class="k">while</span> <span onmouseout="hideTip(event, 'fs16', 183)" onmouseover="showTip(event, 'fs16', 183)" class="f">not</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs18', 184)" onmouseover="showTip(event, 'fs18', 184)" class="v">satisfied</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs8', 185)" onmouseover="showTip(event, 'fs8', 185)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 186)" onmouseover="showTip(event, 'fs13', 186)" class="f">MoveNext</span>() <span class="k">do</span>
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs3', 187)" onmouseover="showTip(event, 'fs3', 187)" class="f">func</span> <span onmouseout="hideTip(event, 'fs8', 188)" onmouseover="showTip(event, 'fs8', 188)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 189)" onmouseover="showTip(event, 'fs14', 189)" class="i">Current</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs18', 190)" onmouseover="showTip(event, 'fs18', 190)" class="v">satisfied</span> <span class="o">:=</span> <span class="k">true</span>
                    <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 191)" onmouseover="showTip(event, 'fs8', 191)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 192)" onmouseover="showTip(event, 'fs14', 192)" class="i">Current</span>
            ]
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 193)" onmouseover="showTip(event, 'fs22', 193)" class="i">remainder</span> <span class="o">=</span> 
            [
                <span class="k">while</span> <span onmouseout="hideTip(event, 'fs8', 194)" onmouseover="showTip(event, 'fs8', 194)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 195)" onmouseover="showTip(event, 'fs13', 195)" class="f">MoveNext</span>() <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs8', 196)" onmouseover="showTip(event, 'fs8', 196)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 197)" onmouseover="showTip(event, 'fs14', 197)" class="i">Current</span> 
            ]
        <span onmouseout="hideTip(event, 'fs12', 198)" onmouseover="showTip(event, 'fs12', 198)" class="i">sublist</span>, <span onmouseout="hideTip(event, 'fs22', 199)" onmouseover="showTip(event, 'fs22', 199)" class="i">remainder</span>

[&lt;<span class="i">Fact</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 200)" onmouseover="showTip(event, 'fs25', 200)" class="f">``Seq.partitionWhile should return a proper subset and remainder``</span> () <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 201)" onmouseover="showTip(event, 'fs26', 201)" class="i">testSeq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 202)" onmouseover="showTip(event, 'fs6', 202)" class="i">seq</span> { <span class="k">for</span> <span onmouseout="hideTip(event, 'fs27', 203)" onmouseover="showTip(event, 'fs27', 203)" class="i">i</span> <span class="k">in</span> <span class="n">1</span> <span class="o">..</span> <span class="n">6</span> <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs27', 204)" onmouseover="showTip(event, 'fs27', 204)" class="i">i</span> }
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 205)" onmouseover="showTip(event, 'fs28', 205)" class="i">sub</span>, <span onmouseout="hideTip(event, 'fs29', 206)" onmouseover="showTip(event, 'fs29', 206)" class="i">remainder</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 207)" onmouseover="showTip(event, 'fs26', 207)" class="i">testSeq</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 208)" onmouseover="showTip(event, 'fs30', 208)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 209)" onmouseover="showTip(event, 'fs2', 209)" class="f">partitionWhile</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs31', 210)" onmouseover="showTip(event, 'fs31', 210)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 211)" onmouseover="showTip(event, 'fs31', 211)" class="i">x</span> <span class="o">&lt;=</span> <span class="n">3</span>)
    <span class="i">Assert</span><span class="o">.</span><span class="i">Equal</span>( [<span class="n">1</span>; <span class="n">2</span>; <span class="n">3</span>], <span onmouseout="hideTip(event, 'fs28', 212)" onmouseover="showTip(event, 'fs28', 212)" class="i">sub</span> )
    <span class="i">Assert</span><span class="o">.</span><span class="i">Equal</span>( [<span class="n">4</span>; <span class="n">5</span>; <span class="n">6</span>], <span onmouseout="hideTip(event, 'fs29', 213)" onmouseover="showTip(event, 'fs29', 213)" class="i">remainder</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 214)" onmouseover="showTip(event, 'fs30', 214)" class="i">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 215)" onmouseover="showTip(event, 'fs32', 215)" class="i">toList</span> )

[&lt;<span class="i">Fact</span>&gt;] 
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 216)" onmouseover="showTip(event, 'fs33', 216)" class="f">``Seq.partitionWhile should return an empty list and remainder when give an empty sequence``</span> () <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 217)" onmouseover="showTip(event, 'fs34', 217)" class="i">testSeq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 218)" onmouseover="showTip(event, 'fs30', 218)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 219)" onmouseover="showTip(event, 'fs35', 219)" class="i">empty</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 220)" onmouseover="showTip(event, 'fs28', 220)" class="i">sub</span>, <span onmouseout="hideTip(event, 'fs29', 221)" onmouseover="showTip(event, 'fs29', 221)" class="i">remainder</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 222)" onmouseover="showTip(event, 'fs34', 222)" class="i">testSeq</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 223)" onmouseover="showTip(event, 'fs30', 223)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 224)" onmouseover="showTip(event, 'fs2', 224)" class="f">partitionWhile</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs31', 225)" onmouseover="showTip(event, 'fs31', 225)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 226)" onmouseover="showTip(event, 'fs31', 226)" class="i">x</span> <span class="o">&lt;=</span> <span class="n">3</span>)
    <span class="i">Assert</span><span class="o">.</span><span class="i">Empty</span> <span onmouseout="hideTip(event, 'fs28', 227)" onmouseover="showTip(event, 'fs28', 227)" class="i">sub</span>
    <span class="i">Assert</span><span class="o">.</span><span class="i">Empty</span> <span onmouseout="hideTip(event, 'fs29', 228)" onmouseover="showTip(event, 'fs29', 228)" class="i">remainder</span>

[&lt;<span class="i">Fact</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 229)" onmouseover="showTip(event, 'fs36', 229)" class="i">``Seq.partitionUntil should return a proper subset and remainder``</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 230)" onmouseover="showTip(event, 'fs26', 230)" class="i">testSeq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 231)" onmouseover="showTip(event, 'fs6', 231)" class="i">seq</span> { <span class="k">for</span> <span onmouseout="hideTip(event, 'fs27', 232)" onmouseover="showTip(event, 'fs27', 232)" class="i">i</span> <span class="k">in</span> <span class="n">1</span> <span class="o">..</span> <span class="n">6</span> <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs27', 233)" onmouseover="showTip(event, 'fs27', 233)" class="i">i</span> }
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 234)" onmouseover="showTip(event, 'fs28', 234)" class="i">sub</span>, <span onmouseout="hideTip(event, 'fs29', 235)" onmouseover="showTip(event, 'fs29', 235)" class="i">remainder</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 236)" onmouseover="showTip(event, 'fs26', 236)" class="i">testSeq</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 237)" onmouseover="showTip(event, 'fs30', 237)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 238)" onmouseover="showTip(event, 'fs17', 238)" class="f">partitionUntil</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs31', 239)" onmouseover="showTip(event, 'fs31', 239)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 240)" onmouseover="showTip(event, 'fs31', 240)" class="i">x</span> <span class="o">&gt;</span> <span class="n">3</span>)
    <span class="i">Assert</span><span class="o">.</span><span class="i">Equal</span>( [<span class="n">1</span>; <span class="n">2</span>; <span class="n">3</span>], <span onmouseout="hideTip(event, 'fs28', 241)" onmouseover="showTip(event, 'fs28', 241)" class="i">sub</span> )
    <span class="i">Assert</span><span class="o">.</span><span class="i">Equal</span>( [<span class="n">4</span>; <span class="n">5</span>; <span class="n">6</span>], <span onmouseout="hideTip(event, 'fs29', 242)" onmouseover="showTip(event, 'fs29', 242)" class="i">remainder</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 243)" onmouseover="showTip(event, 'fs30', 243)" class="i">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 244)" onmouseover="showTip(event, 'fs32', 244)" class="i">toList</span> )

[&lt;<span class="i">Fact</span>&gt;] 
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 245)" onmouseover="showTip(event, 'fs37', 245)" class="f">``Seq.partitionUntil should return an empty list and remainder when give an empty sequence``</span> () <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 246)" onmouseover="showTip(event, 'fs34', 246)" class="i">testSeq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 247)" onmouseover="showTip(event, 'fs30', 247)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 248)" onmouseover="showTip(event, 'fs35', 248)" class="i">empty</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 249)" onmouseover="showTip(event, 'fs28', 249)" class="i">sub</span>, <span onmouseout="hideTip(event, 'fs29', 250)" onmouseover="showTip(event, 'fs29', 250)" class="i">remainder</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 251)" onmouseover="showTip(event, 'fs34', 251)" class="i">testSeq</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 252)" onmouseover="showTip(event, 'fs30', 252)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 253)" onmouseover="showTip(event, 'fs17', 253)" class="f">partitionUntil</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs31', 254)" onmouseover="showTip(event, 'fs31', 254)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 255)" onmouseover="showTip(event, 'fs31', 255)" class="i">x</span> <span class="o">&gt;</span> <span class="n">3</span>)
    <span class="i">Assert</span><span class="o">.</span><span class="i">Empty</span> <span onmouseout="hideTip(event, 'fs28', 256)" onmouseover="showTip(event, 'fs28', 256)" class="i">sub</span>
    <span class="i">Assert</span><span class="o">.</span><span class="i">Empty</span> <span onmouseout="hideTip(event, 'fs29', 257)" onmouseover="showTip(event, 'fs29', 257)" class="i">remainder</span>

[&lt;<span class="i">Fact</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 258)" onmouseover="showTip(event, 'fs38', 258)" class="f">``Seq.partitionUntilAfter should return a proper subset and remainder``</span> () <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 259)" onmouseover="showTip(event, 'fs26', 259)" class="i">testSeq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 260)" onmouseover="showTip(event, 'fs6', 260)" class="i">seq</span> { <span class="k">for</span> <span onmouseout="hideTip(event, 'fs27', 261)" onmouseover="showTip(event, 'fs27', 261)" class="i">i</span> <span class="k">in</span> <span class="n">1</span> <span class="o">..</span> <span class="n">6</span> <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs27', 262)" onmouseover="showTip(event, 'fs27', 262)" class="i">i</span> }
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 263)" onmouseover="showTip(event, 'fs28', 263)" class="i">sub</span>, <span onmouseout="hideTip(event, 'fs29', 264)" onmouseover="showTip(event, 'fs29', 264)" class="i">remainder</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 265)" onmouseover="showTip(event, 'fs26', 265)" class="i">testSeq</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 266)" onmouseover="showTip(event, 'fs30', 266)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 267)" onmouseover="showTip(event, 'fs19', 267)" class="f">partitionUntilAfter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs31', 268)" onmouseover="showTip(event, 'fs31', 268)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 269)" onmouseover="showTip(event, 'fs31', 269)" class="i">x</span> <span class="o">&gt;</span> <span class="n">2</span>)
    <span class="i">Assert</span><span class="o">.</span><span class="i">Equal</span>( [<span class="n">1</span>; <span class="n">2</span>; <span class="n">3</span>], <span onmouseout="hideTip(event, 'fs28', 270)" onmouseover="showTip(event, 'fs28', 270)" class="i">sub</span> )
    <span class="i">Assert</span><span class="o">.</span><span class="i">Equal</span>( [<span class="n">4</span>; <span class="n">5</span>; <span class="n">6</span>], <span onmouseout="hideTip(event, 'fs29', 271)" onmouseover="showTip(event, 'fs29', 271)" class="i">remainder</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 272)" onmouseover="showTip(event, 'fs30', 272)" class="i">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 273)" onmouseover="showTip(event, 'fs32', 273)" class="i">toList</span> )

[&lt;<span class="i">Fact</span>&gt;] 
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 274)" onmouseover="showTip(event, 'fs39', 274)" class="f">``Seq.partitionUntilAfter should return an empty list and remainder when give an empty sequence``</span> () <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 275)" onmouseover="showTip(event, 'fs34', 275)" class="i">testSeq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 276)" onmouseover="showTip(event, 'fs30', 276)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 277)" onmouseover="showTip(event, 'fs35', 277)" class="i">empty</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 278)" onmouseover="showTip(event, 'fs28', 278)" class="i">sub</span>, <span onmouseout="hideTip(event, 'fs29', 279)" onmouseover="showTip(event, 'fs29', 279)" class="i">remainder</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 280)" onmouseover="showTip(event, 'fs34', 280)" class="i">testSeq</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 281)" onmouseover="showTip(event, 'fs30', 281)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 282)" onmouseover="showTip(event, 'fs19', 282)" class="f">partitionUntilAfter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs31', 283)" onmouseover="showTip(event, 'fs31', 283)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 284)" onmouseover="showTip(event, 'fs31', 284)" class="i">x</span> <span class="o">&gt;</span> <span class="n">2</span>)
    <span class="i">Assert</span><span class="o">.</span><span class="i">Empty</span> <span onmouseout="hideTip(event, 'fs28', 285)" onmouseover="showTip(event, 'fs28', 285)" class="i">sub</span>
    <span class="i">Assert</span><span class="o">.</span><span class="i">Empty</span> <span onmouseout="hideTip(event, 'fs29', 286)" onmouseover="showTip(event, 'fs29', 286)" class="i">remainder</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs2">val partitionWhile : func:(&#39;a -&gt; bool) -&gt; sequence:seq&lt;&#39;a&gt; -&gt; &#39;a list * seq&lt;&#39;a&gt;<br /><br />Full name: Script.Seq.partitionWhile<br /><em><br /><br />&#160;Takes elements into a sublist until the predicate returns false (exclusive)</em></div>
<div class="tip" id="fs3">val func : (&#39;a -&gt; bool)</div>
<div class="tip" id="fs4">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs5">val sequence : seq&lt;&#39;a&gt;</div>
<div class="tip" id="fs6">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = System.Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs7">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs8">val en : System.Collections.Generic.IEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs9">System.Collections.Generic.IEnumerable.GetEnumerator() : System.Collections.Generic.IEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs10">val wasGood : bool ref</div>
<div class="tip" id="fs11">Multiple items<br />val ref : value:&#39;T -&gt; &#39;T ref<br /><br />Full name: Microsoft.FSharp.Core.Operators.ref<br /><br />--------------------<br />type &#39;T ref = Ref&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.ref&lt;_&gt;</div>
<div class="tip" id="fs12">val sublist : &#39;a list</div>
<div class="tip" id="fs13">System.Collections.IEnumerator.MoveNext() : bool</div>
<div class="tip" id="fs14">property System.Collections.Generic.IEnumerator.Current: &#39;a</div>
<div class="tip" id="fs15">val remainder : seq&lt;&#39;a&gt;</div>
<div class="tip" id="fs16">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs17">val partitionUntil : func:(&#39;a -&gt; bool) -&gt; sequence:seq&lt;&#39;a&gt; -&gt; &#39;a list * seq&lt;&#39;a&gt;<br /><br />Full name: Script.Seq.partitionUntil<br /><em><br /><br />Takes elements into a sublist until the predicate returns true (exclusive)</em></div>
<div class="tip" id="fs18">val satisfied : bool ref</div>
<div class="tip" id="fs19">val partitionUntilAfter : func:(&#39;a -&gt; bool) -&gt; sequence:seq&lt;&#39;a&gt; -&gt; &#39;a list * seq&lt;&#39;a&gt;<br /><br />Full name: Script.Seq.partitionUntilAfter<br /><em><br /><br />Takes elements into a sublist until the predicate returns true (inclusive)</em></div>
<div class="tip" id="fs20">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs21">val partitionWhile : func:(&#39;a -&gt; bool) -&gt; sequence:seq&lt;&#39;a&gt; -&gt; &#39;a list * &#39;a list<br /><br />Full name: Script.List.partitionWhile<br /><em><br /><br />&#160;Takes elements into a sublist until the predicate returns false (exclusive)</em></div>
<div class="tip" id="fs22">val remainder : &#39;a list</div>
<div class="tip" id="fs23">val partitionUntil : func:(&#39;a -&gt; bool) -&gt; sequence:seq&lt;&#39;a&gt; -&gt; &#39;a list * &#39;a list<br /><br />Full name: Script.List.partitionUntil<br /><em><br /><br />Takes elements into a sublist until the predicate returns true (exclusive)</em></div>
<div class="tip" id="fs24">val partitionUntilAfter : func:(&#39;a -&gt; bool) -&gt; sequence:seq&lt;&#39;a&gt; -&gt; &#39;a list * &#39;a list<br /><br />Full name: Script.List.partitionUntilAfter<br /><em><br /><br />Takes elements into a sublist until the predicate returns true (inclusive)</em></div>
<div class="tip" id="fs25">val ( Seq.partitionWhile should return a proper subset and remainder ) : unit -&gt; &#39;a<br /><br />Full name: Script.( Seq.partitionWhile should return a proper subset and remainder )</div>
<div class="tip" id="fs26">val testSeq : seq&lt;int&gt;</div>
<div class="tip" id="fs27">val i : int</div>
<div class="tip" id="fs28">val sub : int list</div>
<div class="tip" id="fs29">val remainder : seq&lt;int&gt;</div>
<div class="tip" id="fs30">Multiple items<br />module Seq<br /><br />from Script<br /><br />--------------------<br />module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs31">val x : int</div>
<div class="tip" id="fs32">val toList : source:seq&lt;&#39;T&gt; -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.Seq.toList</div>
<div class="tip" id="fs33">val ( Seq.partitionWhile should return an empty list and remainder when give an empty sequence ) : unit -&gt; &#39;a<br /><br />Full name: Script.( Seq.partitionWhile should return an empty list and remainder when give an empty sequence )</div>
<div class="tip" id="fs34">val testSeq : seq&lt;&#39;b&gt;</div>
<div class="tip" id="fs35">val empty&lt;&#39;T&gt; : seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.empty</div>
<div class="tip" id="fs36">val ( Seq.partitionUntil should return a proper subset and remainder ) : obj<br /><br />Full name: Script.( Seq.partitionUntil should return a proper subset and remainder )</div>
<div class="tip" id="fs37">val ( Seq.partitionUntil should return an empty list and remainder when give an empty sequence ) : unit -&gt; &#39;a<br /><br />Full name: Script.( Seq.partitionUntil should return an empty list and remainder when give an empty sequence )</div>
<div class="tip" id="fs38">val ( Seq.partitionUntilAfter should return a proper subset and remainder ) : unit -&gt; &#39;a<br /><br />Full name: Script.( Seq.partitionUntilAfter should return a proper subset and remainder )</div>
<div class="tip" id="fs39">val ( Seq.partitionUntilAfter should return an empty list and remainder when give an empty sequence ) : unit -&gt; &#39;a<br /><br />Full name: Script.( Seq.partitionUntilAfter should return an empty list and remainder when give an empty sequence )</div>

