<h2><a name="ByteString" class="anchor" href="#ByteString">ByteString</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Diagnostics</span>

<span class="c">/// ByteString is a functional ArraySegment&lt;byte&gt; that also implements IEnumerable&lt;byte&gt;.</span>
<span class="c">/// NOTE: This type should really be moved into a set of extension types missing from F#.</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="t">ByteString</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="p">BS</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="t">byte</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">array</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="t">int</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="t">int</span>
  <span class="k">with</span>
  <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs1', 10)" onmouseover="showTip(event, 'fs1', 10)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="i">Generic</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="t">IEnumerable</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs5', 14)" onmouseover="showTip(event, 'fs5', 14)" class="t">byte</span><span class="o">&gt;</span> <span class="k">with</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="f">GetEnumerator</span>() <span class="o">=</span>
      <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs4', 17)" onmouseover="showTip(event, 'fs4', 17)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="i">l</span>)) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 21)" onmouseover="showTip(event, 'fs11', 21)" class="i">this</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="i">inner</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 23)" onmouseover="showTip(event, 'fs17', 23)" class="i">seq</span> { <span class="k">for</span> <span onmouseout="hideTip(event, 'fs18', 24)" onmouseover="showTip(event, 'fs18', 24)" class="i">i</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs14', 25)" onmouseover="showTip(event, 'fs14', 25)" class="i">o</span><span class="o">..</span><span onmouseout="hideTip(event, 'fs15', 26)" onmouseover="showTip(event, 'fs15', 26)" class="i">l</span> <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs13', 27)" onmouseover="showTip(event, 'fs13', 27)" class="i">a</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="i">i</span>] }
      <span onmouseout="hideTip(event, 'fs16', 29)" onmouseover="showTip(event, 'fs16', 29)" class="i">inner</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 30)" onmouseover="showTip(event, 'fs19', 30)" class="f">GetEnumerator</span>()
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs11', 31)" onmouseover="showTip(event, 'fs11', 31)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 32)" onmouseover="showTip(event, 'fs20', 32)" class="f">GetEnumerator</span>() <span class="o">=</span>
      <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs4', 33)" onmouseover="showTip(event, 'fs4', 33)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs13', 34)" onmouseover="showTip(event, 'fs13', 34)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs14', 35)" onmouseover="showTip(event, 'fs14', 35)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs15', 36)" onmouseover="showTip(event, 'fs15', 36)" class="i">l</span>)) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 37)" onmouseover="showTip(event, 'fs11', 37)" class="i">this</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 38)" onmouseover="showTip(event, 'fs16', 38)" class="i">inner</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 39)" onmouseover="showTip(event, 'fs17', 39)" class="i">seq</span> { <span class="k">for</span> <span onmouseout="hideTip(event, 'fs18', 40)" onmouseover="showTip(event, 'fs18', 40)" class="i">i</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs14', 41)" onmouseover="showTip(event, 'fs14', 41)" class="i">o</span><span class="o">..</span><span onmouseout="hideTip(event, 'fs15', 42)" onmouseover="showTip(event, 'fs15', 42)" class="i">l</span> <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs13', 43)" onmouseover="showTip(event, 'fs13', 43)" class="i">a</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs18', 44)" onmouseover="showTip(event, 'fs18', 44)" class="i">i</span>] }
      <span onmouseout="hideTip(event, 'fs16', 45)" onmouseover="showTip(event, 'fs16', 45)" class="i">inner</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 46)" onmouseover="showTip(event, 'fs19', 46)" class="f">GetEnumerator</span>() <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs1', 47)" onmouseover="showTip(event, 'fs1', 47)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 48)" onmouseover="showTip(event, 'fs8', 48)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 49)" onmouseover="showTip(event, 'fs21', 49)" class="t">IEnumerator</span>

  <span class="k">static</span> <span class="k">member</span> <span class="i">op_Equality</span> (<span onmouseout="hideTip(event, 'fs4', 50)" onmouseover="showTip(event, 'fs4', 50)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 51)" onmouseover="showTip(event, 'fs22', 51)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 52)" onmouseover="showTip(event, 'fs14', 52)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs15', 53)" onmouseover="showTip(event, 'fs15', 53)" class="i">l</span>), <span onmouseout="hideTip(event, 'fs4', 54)" onmouseover="showTip(event, 'fs4', 54)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs23', 55)" onmouseover="showTip(event, 'fs23', 55)" class="i">x&#39;</span>,<span onmouseout="hideTip(event, 'fs24', 56)" onmouseover="showTip(event, 'fs24', 56)" class="i">o&#39;</span>,<span onmouseout="hideTip(event, 'fs25', 57)" onmouseover="showTip(event, 'fs25', 57)" class="i">l&#39;</span>)) <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs26', 58)" onmouseover="showTip(event, 'fs26', 58)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs15', 59)" onmouseover="showTip(event, 'fs15', 59)" class="i">l</span> <span class="o">=</span> <span class="i">l&#39;</span>) <span class="k">then</span> <span class="k">false</span>
    <span class="k">else</span> (<span onmouseout="hideTip(event, 'fs15', 60)" onmouseover="showTip(event, 'fs15', 60)" class="i">l</span> <span class="o">=</span> <span class="n">0</span> <span class="o">&amp;&amp;</span> <span class="i">l&#39;</span> <span class="o">=</span> <span class="n">0</span>) <span class="o">||</span> (<span onmouseout="hideTip(event, 'fs22', 61)" onmouseover="showTip(event, 'fs22', 61)" class="i">x</span> <span class="o">=</span> <span class="i">x&#39;</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs14', 62)" onmouseover="showTip(event, 'fs14', 62)" class="i">o</span> <span class="o">=</span> <span class="i">o&#39;</span>) <span class="c">// TODO: Add byte by byte comparison</span>

  <span class="c">/// Implements the [] operator, which is not available on anything but the List&lt;_&gt; type.</span>
  <span class="k">static</span> <span class="k">member</span> <span class="i">op_Nil</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 63)" onmouseover="showTip(event, 'fs4', 63)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs27', 64)" onmouseover="showTip(event, 'fs27', 64)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 65)" onmouseover="showTip(event, 'fs28', 65)" class="i">empty</span>,<span class="n">0</span>,<span class="n">0</span>)

  <span class="c">/// Implements the :: operator, which is not available on anything but the List&lt;_&gt; type.</span>
  <span class="c">/// op_Cons uses Buffer.SetByte and Buffer.BlockCopy for efficient array operations.</span>
  <span class="c">/// Please note that a new array is created and both the head and tail are copied in,</span>
  <span class="c">/// disregarding any additional bytes in the original tail array.</span>
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs29', 66)" onmouseover="showTip(event, 'fs29', 66)" class="f">op_Cons</span> (<span onmouseout="hideTip(event, 'fs30', 67)" onmouseover="showTip(event, 'fs30', 67)" class="i">hd</span>, <span onmouseout="hideTip(event, 'fs4', 68)" onmouseover="showTip(event, 'fs4', 68)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 69)" onmouseover="showTip(event, 'fs22', 69)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 70)" onmouseover="showTip(event, 'fs14', 70)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs15', 71)" onmouseover="showTip(event, 'fs15', 71)" class="i">l</span>)) <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs15', 72)" onmouseover="showTip(event, 'fs15', 72)" class="i">l</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs3', 73)" onmouseover="showTip(event, 'fs3', 73)" class="t">ByteString</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 74)" onmouseover="showTip(event, 'fs31', 74)" class="f">singleton</span> <span onmouseout="hideTip(event, 'fs30', 75)" onmouseover="showTip(event, 'fs30', 75)" class="i">hd</span>
    <span class="k">else</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 76)" onmouseover="showTip(event, 'fs32', 76)" class="i">buffer</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 77)" onmouseover="showTip(event, 'fs27', 77)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 78)" onmouseover="showTip(event, 'fs33', 78)" class="f">zeroCreate</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs5', 79)" onmouseover="showTip(event, 'fs5', 79)" class="t">byte</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs15', 80)" onmouseover="showTip(event, 'fs15', 80)" class="i">l</span> <span class="o">+</span> <span class="n">1</span>)
         <span onmouseout="hideTip(event, 'fs34', 81)" onmouseover="showTip(event, 'fs34', 81)" class="t">Buffer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 82)" onmouseover="showTip(event, 'fs35', 82)" class="f">SetByte</span>(<span onmouseout="hideTip(event, 'fs32', 83)" onmouseover="showTip(event, 'fs32', 83)" class="i">buffer</span>,<span class="n">0</span>,<span onmouseout="hideTip(event, 'fs30', 84)" onmouseover="showTip(event, 'fs30', 84)" class="i">hd</span>)
         <span onmouseout="hideTip(event, 'fs34', 85)" onmouseover="showTip(event, 'fs34', 85)" class="t">Buffer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 86)" onmouseover="showTip(event, 'fs36', 86)" class="f">BlockCopy</span>(<span onmouseout="hideTip(event, 'fs22', 87)" onmouseover="showTip(event, 'fs22', 87)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 88)" onmouseover="showTip(event, 'fs14', 88)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs32', 89)" onmouseover="showTip(event, 'fs32', 89)" class="i">buffer</span>,<span class="n">1</span>,<span onmouseout="hideTip(event, 'fs15', 90)" onmouseover="showTip(event, 'fs15', 90)" class="i">l</span>)
         <span onmouseout="hideTip(event, 'fs4', 91)" onmouseover="showTip(event, 'fs4', 91)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs32', 92)" onmouseover="showTip(event, 'fs32', 92)" class="i">buffer</span>,<span class="n">0</span>,<span onmouseout="hideTip(event, 'fs15', 93)" onmouseover="showTip(event, 'fs15', 93)" class="i">l</span><span class="o">+</span><span class="n">1</span>)

  <span class="c">/// Implements the @ operator, which is not available on anything but the List&lt;_&gt; type.</span>
  <span class="c">/// op_Append uses Buffer.BlockCopy for efficient array operations.</span>
  <span class="c">/// Please note that a new array is created and both arrays are copied in,</span>
  <span class="c">/// disregarding any additional bytes in the original, underlying arrays.</span>
  <span class="k">static</span> <span class="k">member</span> <span class="i">op_Append</span> (<span onmouseout="hideTip(event, 'fs37', 94)" onmouseover="showTip(event, 'fs37', 94)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs38', 95)" onmouseover="showTip(event, 'fs38', 95)" class="i">b</span>) <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs3', 96)" onmouseover="showTip(event, 'fs3', 96)" class="t">ByteString</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 97)" onmouseover="showTip(event, 'fs39', 97)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs37', 98)" onmouseover="showTip(event, 'fs37', 98)" class="i">a</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs38', 99)" onmouseover="showTip(event, 'fs38', 99)" class="i">b</span>
    <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs3', 100)" onmouseover="showTip(event, 'fs3', 100)" class="t">ByteString</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 101)" onmouseover="showTip(event, 'fs39', 101)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs38', 102)" onmouseover="showTip(event, 'fs38', 102)" class="i">b</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs37', 103)" onmouseover="showTip(event, 'fs37', 103)" class="i">a</span>
    <span class="k">else</span> <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs4', 104)" onmouseover="showTip(event, 'fs4', 104)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 105)" onmouseover="showTip(event, 'fs22', 105)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 106)" onmouseover="showTip(event, 'fs14', 106)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs15', 107)" onmouseover="showTip(event, 'fs15', 107)" class="i">l</span>)) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs37', 108)" onmouseover="showTip(event, 'fs37', 108)" class="i">a</span>
         <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs4', 109)" onmouseover="showTip(event, 'fs4', 109)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs23', 110)" onmouseover="showTip(event, 'fs23', 110)" class="i">x&#39;</span>,<span onmouseout="hideTip(event, 'fs24', 111)" onmouseover="showTip(event, 'fs24', 111)" class="i">o&#39;</span>,<span onmouseout="hideTip(event, 'fs25', 112)" onmouseover="showTip(event, 'fs25', 112)" class="i">l&#39;</span>)) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 113)" onmouseover="showTip(event, 'fs38', 113)" class="i">b</span>
         <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 114)" onmouseover="showTip(event, 'fs32', 114)" class="i">buffer</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 115)" onmouseover="showTip(event, 'fs27', 115)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 116)" onmouseover="showTip(event, 'fs33', 116)" class="f">zeroCreate</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs5', 117)" onmouseover="showTip(event, 'fs5', 117)" class="t">byte</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs15', 118)" onmouseover="showTip(event, 'fs15', 118)" class="i">l</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs25', 119)" onmouseover="showTip(event, 'fs25', 119)" class="i">l&#39;</span>)
         <span onmouseout="hideTip(event, 'fs34', 120)" onmouseover="showTip(event, 'fs34', 120)" class="t">Buffer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 121)" onmouseover="showTip(event, 'fs36', 121)" class="f">BlockCopy</span>(<span onmouseout="hideTip(event, 'fs22', 122)" onmouseover="showTip(event, 'fs22', 122)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 123)" onmouseover="showTip(event, 'fs14', 123)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs32', 124)" onmouseover="showTip(event, 'fs32', 124)" class="i">buffer</span>,<span class="n">0</span>,<span onmouseout="hideTip(event, 'fs15', 125)" onmouseover="showTip(event, 'fs15', 125)" class="i">l</span>)
         <span onmouseout="hideTip(event, 'fs34', 126)" onmouseover="showTip(event, 'fs34', 126)" class="t">Buffer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 127)" onmouseover="showTip(event, 'fs36', 127)" class="f">BlockCopy</span>(<span onmouseout="hideTip(event, 'fs23', 128)" onmouseover="showTip(event, 'fs23', 128)" class="i">x&#39;</span>,<span onmouseout="hideTip(event, 'fs24', 129)" onmouseover="showTip(event, 'fs24', 129)" class="i">o&#39;</span>,<span onmouseout="hideTip(event, 'fs32', 130)" onmouseover="showTip(event, 'fs32', 130)" class="i">buffer</span>,<span onmouseout="hideTip(event, 'fs15', 131)" onmouseover="showTip(event, 'fs15', 131)" class="i">l</span>,<span onmouseout="hideTip(event, 'fs25', 132)" onmouseover="showTip(event, 'fs25', 132)" class="i">l&#39;</span>)
         <span onmouseout="hideTip(event, 'fs4', 133)" onmouseover="showTip(event, 'fs4', 133)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs32', 134)" onmouseover="showTip(event, 'fs32', 134)" class="i">buffer</span>,<span class="n">0</span>,<span onmouseout="hideTip(event, 'fs15', 135)" onmouseover="showTip(event, 'fs15', 135)" class="i">l</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs25', 136)" onmouseover="showTip(event, 'fs25', 136)" class="i">l&#39;</span>)

  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs40', 137)" onmouseover="showTip(event, 'fs40', 137)" class="i">empty</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 138)" onmouseover="showTip(event, 'fs3', 138)" class="t">ByteString</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 139)" onmouseover="showTip(event, 'fs41', 139)" class="i">op_Nil</span>
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs42', 140)" onmouseover="showTip(event, 'fs42', 140)" class="f">singleton</span> <span onmouseout="hideTip(event, 'fs43', 141)" onmouseover="showTip(event, 'fs43', 141)" class="i">c</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 142)" onmouseover="showTip(event, 'fs4', 142)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs27', 143)" onmouseover="showTip(event, 'fs27', 143)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 144)" onmouseover="showTip(event, 'fs44', 144)" class="f">create</span> <span class="n">1</span> <span onmouseout="hideTip(event, 'fs43', 145)" onmouseover="showTip(event, 'fs43', 145)" class="i">c</span>, <span class="n">0</span>, <span class="n">1</span>)
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs45', 146)" onmouseover="showTip(event, 'fs45', 146)" class="f">create</span> <span onmouseout="hideTip(event, 'fs46', 147)" onmouseover="showTip(event, 'fs46', 147)" class="i">bs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 148)" onmouseover="showTip(event, 'fs4', 148)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs46', 149)" onmouseover="showTip(event, 'fs46', 149)" class="i">bs</span>, <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs46', 150)" onmouseover="showTip(event, 'fs46', 150)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 151)" onmouseover="showTip(event, 'fs47', 151)" class="i">Length</span>)
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs48', 152)" onmouseover="showTip(event, 'fs48', 152)" class="f">ofSegment</span> (<span onmouseout="hideTip(event, 'fs49', 153)" onmouseover="showTip(event, 'fs49', 153)" class="i">segment</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs50', 154)" onmouseover="showTip(event, 'fs50', 154)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs5', 155)" onmouseover="showTip(event, 'fs5', 155)" class="t">byte</span><span class="o">&gt;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 156)" onmouseover="showTip(event, 'fs4', 156)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs49', 157)" onmouseover="showTip(event, 'fs49', 157)" class="i">segment</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 158)" onmouseover="showTip(event, 'fs51', 158)" class="i">Array</span>, <span onmouseout="hideTip(event, 'fs49', 159)" onmouseover="showTip(event, 'fs49', 159)" class="i">segment</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 160)" onmouseover="showTip(event, 'fs52', 160)" class="i">Offset</span>, <span onmouseout="hideTip(event, 'fs49', 161)" onmouseover="showTip(event, 'fs49', 161)" class="i">segment</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 162)" onmouseover="showTip(event, 'fs53', 162)" class="i">Count</span>)
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs54', 163)" onmouseover="showTip(event, 'fs54', 163)" class="f">ofSeq</span> <span onmouseout="hideTip(event, 'fs55', 164)" onmouseover="showTip(event, 'fs55', 164)" class="i">s</span> <span class="o">=</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 165)" onmouseover="showTip(event, 'fs56', 165)" class="i">arr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 166)" onmouseover="showTip(event, 'fs27', 166)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 167)" onmouseover="showTip(event, 'fs57', 167)" class="f">ofSeq</span> <span onmouseout="hideTip(event, 'fs55', 168)" onmouseover="showTip(event, 'fs55', 168)" class="i">s</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs4', 169)" onmouseover="showTip(event, 'fs4', 169)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs56', 170)" onmouseover="showTip(event, 'fs56', 170)" class="i">arr</span>, <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs56', 171)" onmouseover="showTip(event, 'fs56', 171)" class="i">arr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 172)" onmouseover="showTip(event, 'fs47', 172)" class="i">Length</span>)
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs58', 173)" onmouseover="showTip(event, 'fs58', 173)" class="f">ofList</span> <span onmouseout="hideTip(event, 'fs59', 174)" onmouseover="showTip(event, 'fs59', 174)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 175)" onmouseover="showTip(event, 'fs4', 175)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs27', 176)" onmouseover="showTip(event, 'fs27', 176)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 177)" onmouseover="showTip(event, 'fs60', 177)" class="f">ofList</span> <span onmouseout="hideTip(event, 'fs59', 178)" onmouseover="showTip(event, 'fs59', 178)" class="i">l</span>, <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs59', 179)" onmouseover="showTip(event, 'fs59', 179)" class="i">l</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 180)" onmouseover="showTip(event, 'fs61', 180)" class="i">Length</span>)
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs62', 181)" onmouseover="showTip(event, 'fs62', 181)" class="f">ofString</span> (<span onmouseout="hideTip(event, 'fs63', 182)" onmouseover="showTip(event, 'fs63', 182)" class="i">s</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs64', 183)" onmouseover="showTip(event, 'fs64', 183)" class="t">string</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs63', 184)" onmouseover="showTip(event, 'fs63', 184)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 185)" onmouseover="showTip(event, 'fs65', 185)" class="f">ToCharArray</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs27', 186)" onmouseover="showTip(event, 'fs27', 186)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 187)" onmouseover="showTip(event, 'fs66', 187)" class="f">map</span> <span onmouseout="hideTip(event, 'fs5', 188)" onmouseover="showTip(event, 'fs5', 188)" class="f">byte</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs3', 189)" onmouseover="showTip(event, 'fs3', 189)" class="t">ByteString</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs67', 190)" onmouseover="showTip(event, 'fs67', 190)" class="f">create</span>
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs68', 191)" onmouseover="showTip(event, 'fs68', 191)" class="f">toList</span> (<span onmouseout="hideTip(event, 'fs4', 192)" onmouseover="showTip(event, 'fs4', 192)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 193)" onmouseover="showTip(event, 'fs22', 193)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 194)" onmouseover="showTip(event, 'fs14', 194)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs15', 195)" onmouseover="showTip(event, 'fs15', 195)" class="i">l</span>)) <span class="o">=</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs69', 196)" onmouseover="showTip(event, 'fs69', 196)" class="i">len</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 197)" onmouseover="showTip(event, 'fs15', 197)" class="i">l</span><span class="o">-</span><span class="n">1</span> <span class="k">in</span> [ <span class="k">for</span> <span onmouseout="hideTip(event, 'fs18', 198)" onmouseover="showTip(event, 'fs18', 198)" class="i">i</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs14', 199)" onmouseover="showTip(event, 'fs14', 199)" class="i">o</span><span class="o">..</span><span onmouseout="hideTip(event, 'fs69', 200)" onmouseover="showTip(event, 'fs69', 200)" class="i">len</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs22', 201)" onmouseover="showTip(event, 'fs22', 201)" class="i">x</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs18', 202)" onmouseover="showTip(event, 'fs18', 202)" class="i">i</span>] ]
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs70', 203)" onmouseover="showTip(event, 'fs70', 203)" class="f">toString</span> (<span onmouseout="hideTip(event, 'fs4', 204)" onmouseover="showTip(event, 'fs4', 204)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 205)" onmouseover="showTip(event, 'fs22', 205)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 206)" onmouseover="showTip(event, 'fs14', 206)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs15', 207)" onmouseover="showTip(event, 'fs15', 207)" class="i">l</span>)) <span class="o">=</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs69', 208)" onmouseover="showTip(event, 'fs69', 208)" class="i">len</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 209)" onmouseover="showTip(event, 'fs15', 209)" class="i">l</span><span class="o">-</span><span class="n">1</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs1', 210)" onmouseover="showTip(event, 'fs1', 210)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 211)" onmouseover="showTip(event, 'fs71', 211)" class="i">Text</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 212)" onmouseover="showTip(event, 'fs72', 212)" class="t">Encoding</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 213)" onmouseover="showTip(event, 'fs73', 213)" class="i">ASCII</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 214)" onmouseover="showTip(event, 'fs74', 214)" class="f">GetString</span>(<span onmouseout="hideTip(event, 'fs22', 215)" onmouseover="showTip(event, 'fs22', 215)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 216)" onmouseover="showTip(event, 'fs14', 216)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs15', 217)" onmouseover="showTip(event, 'fs15', 217)" class="i">l</span>)
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs75', 218)" onmouseover="showTip(event, 'fs75', 218)" class="f">isEmpty</span> (<span onmouseout="hideTip(event, 'fs4', 219)" onmouseover="showTip(event, 'fs4', 219)" class="p">BS</span>(_,_,<span onmouseout="hideTip(event, 'fs15', 220)" onmouseover="showTip(event, 'fs15', 220)" class="i">l</span>)) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs76', 221)" onmouseover="showTip(event, 'fs76', 221)" class="t">Debug</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs77', 222)" onmouseover="showTip(event, 'fs77', 222)" class="f">Assert</span>(<span onmouseout="hideTip(event, 'fs15', 223)" onmouseover="showTip(event, 'fs15', 223)" class="i">l</span> <span class="o">&gt;</span><span class="o">=</span> <span class="n">0</span>); <span onmouseout="hideTip(event, 'fs15', 224)" onmouseover="showTip(event, 'fs15', 224)" class="i">l</span> <span class="o">&lt;=</span> <span class="n">0</span>
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs78', 225)" onmouseover="showTip(event, 'fs78', 225)" class="f">length</span> (<span onmouseout="hideTip(event, 'fs4', 226)" onmouseover="showTip(event, 'fs4', 226)" class="p">BS</span>(_,_,<span onmouseout="hideTip(event, 'fs15', 227)" onmouseover="showTip(event, 'fs15', 227)" class="i">l</span>)) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs76', 228)" onmouseover="showTip(event, 'fs76', 228)" class="t">Debug</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs77', 229)" onmouseover="showTip(event, 'fs77', 229)" class="f">Assert</span>(<span onmouseout="hideTip(event, 'fs15', 230)" onmouseover="showTip(event, 'fs15', 230)" class="i">l</span> <span class="o">&gt;</span><span class="o">=</span> <span class="n">0</span>); <span onmouseout="hideTip(event, 'fs15', 231)" onmouseover="showTip(event, 'fs15', 231)" class="i">l</span>
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs79', 232)" onmouseover="showTip(event, 'fs79', 232)" class="f">head</span> (<span onmouseout="hideTip(event, 'fs4', 233)" onmouseover="showTip(event, 'fs4', 233)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 234)" onmouseover="showTip(event, 'fs22', 234)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 235)" onmouseover="showTip(event, 'fs14', 235)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs15', 236)" onmouseover="showTip(event, 'fs15', 236)" class="i">l</span>)) <span class="o">=</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs15', 237)" onmouseover="showTip(event, 'fs15', 237)" class="i">l</span> <span class="o">&lt;=</span> <span class="n">0</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs80', 238)" onmouseover="showTip(event, 'fs80', 238)" class="f">failwith</span> <span class="s">&quot;&quot;</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs22', 239)" onmouseover="showTip(event, 'fs22', 239)" class="i">x</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs14', 240)" onmouseover="showTip(event, 'fs14', 240)" class="i">o</span>]
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs81', 241)" onmouseover="showTip(event, 'fs81', 241)" class="f">tail</span> (<span onmouseout="hideTip(event, 'fs4', 242)" onmouseover="showTip(event, 'fs4', 242)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 243)" onmouseover="showTip(event, 'fs22', 243)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 244)" onmouseover="showTip(event, 'fs14', 244)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs15', 245)" onmouseover="showTip(event, 'fs15', 245)" class="i">l</span>)) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 246)" onmouseover="showTip(event, 'fs4', 246)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 247)" onmouseover="showTip(event, 'fs22', 247)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 248)" onmouseover="showTip(event, 'fs14', 248)" class="i">o</span><span class="o">+</span><span class="n">1</span>,<span onmouseout="hideTip(event, 'fs15', 249)" onmouseover="showTip(event, 'fs15', 249)" class="i">l</span><span class="o">-</span><span class="n">1</span>)
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs82', 250)" onmouseover="showTip(event, 'fs82', 250)" class="f">cons</span> <span onmouseout="hideTip(event, 'fs30', 251)" onmouseover="showTip(event, 'fs30', 251)" class="i">hd</span> <span onmouseout="hideTip(event, 'fs83', 252)" onmouseover="showTip(event, 'fs83', 252)" class="i">tl</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 253)" onmouseover="showTip(event, 'fs3', 253)" class="t">ByteString</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs84', 254)" onmouseover="showTip(event, 'fs84', 254)" class="f">op_Cons</span>(<span onmouseout="hideTip(event, 'fs30', 255)" onmouseover="showTip(event, 'fs30', 255)" class="i">hd</span>, <span onmouseout="hideTip(event, 'fs83', 256)" onmouseover="showTip(event, 'fs83', 256)" class="i">tl</span>)
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs85', 257)" onmouseover="showTip(event, 'fs85', 257)" class="f">append</span> <span onmouseout="hideTip(event, 'fs37', 258)" onmouseover="showTip(event, 'fs37', 258)" class="i">a</span> <span onmouseout="hideTip(event, 'fs38', 259)" onmouseover="showTip(event, 'fs38', 259)" class="i">b</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 260)" onmouseover="showTip(event, 'fs3', 260)" class="t">ByteString</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs86', 261)" onmouseover="showTip(event, 'fs86', 261)" class="i">op_Append</span>(<span onmouseout="hideTip(event, 'fs37', 262)" onmouseover="showTip(event, 'fs37', 262)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs38', 263)" onmouseover="showTip(event, 'fs38', 263)" class="i">b</span>)
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs87', 264)" onmouseover="showTip(event, 'fs87', 264)" class="f">take</span> <span onmouseout="hideTip(event, 'fs88', 265)" onmouseover="showTip(event, 'fs88', 265)" class="i">n</span> (<span onmouseout="hideTip(event, 'fs4', 266)" onmouseover="showTip(event, 'fs4', 266)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 267)" onmouseover="showTip(event, 'fs22', 267)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 268)" onmouseover="showTip(event, 'fs14', 268)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs15', 269)" onmouseover="showTip(event, 'fs15', 269)" class="i">l</span>)) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs76', 270)" onmouseover="showTip(event, 'fs76', 270)" class="t">Debug</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs77', 271)" onmouseover="showTip(event, 'fs77', 271)" class="f">Assert</span>(<span onmouseout="hideTip(event, 'fs15', 272)" onmouseover="showTip(event, 'fs15', 272)" class="i">l</span> <span class="o">&gt;</span><span class="o">=</span> <span onmouseout="hideTip(event, 'fs88', 273)" onmouseover="showTip(event, 'fs88', 273)" class="i">n</span>); <span onmouseout="hideTip(event, 'fs4', 274)" onmouseover="showTip(event, 'fs4', 274)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 275)" onmouseover="showTip(event, 'fs22', 275)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 276)" onmouseover="showTip(event, 'fs14', 276)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs88', 277)" onmouseover="showTip(event, 'fs88', 277)" class="i">n</span>)
  
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs89', 278)" onmouseover="showTip(event, 'fs89', 278)" class="f">split</span> <span onmouseout="hideTip(event, 'fs90', 279)" onmouseover="showTip(event, 'fs90', 279)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs91', 280)" onmouseover="showTip(event, 'fs91', 280)" class="i">bs</span> <span class="o">=</span>
    <span class="c">// List-style</span>
<span class="c">//    let rec loop l acc =</span>
<span class="c">//      if ByteString.isEmpty l then (ByteString.take acc bs, ByteString.empty)</span>
<span class="c">//      else</span>
<span class="c">//        let hd, tl = ByteString.head l, ByteString.tail l</span>
<span class="c">//        if ByteString.isEmpty tl &amp;&amp; not (pred hd) then (ByteString.take acc bs, ByteString.empty)</span>
<span class="c">//        elif pred hd then (ByteString.take acc bs, l)</span>
<span class="c">//        else loop tl (acc+1)</span>
<span class="c">//    loop bs 0</span>
    <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs4', 281)" onmouseover="showTip(event, 'fs4', 281)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 282)" onmouseover="showTip(event, 'fs22', 282)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 283)" onmouseover="showTip(event, 'fs14', 283)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs15', 284)" onmouseover="showTip(event, 'fs15', 284)" class="i">l</span>)) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs91', 285)" onmouseover="showTip(event, 'fs91', 285)" class="i">bs</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs92', 286)" onmouseover="showTip(event, 'fs92', 286)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs93', 287)" onmouseover="showTip(event, 'fs93', 287)" class="i">acc</span> <span class="o">=</span>
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs15', 288)" onmouseover="showTip(event, 'fs15', 288)" class="i">l</span><span class="o">-</span><span onmouseout="hideTip(event, 'fs93', 289)" onmouseover="showTip(event, 'fs93', 289)" class="i">acc</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span> (<span onmouseout="hideTip(event, 'fs4', 290)" onmouseover="showTip(event, 'fs4', 290)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 291)" onmouseover="showTip(event, 'fs22', 291)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 292)" onmouseover="showTip(event, 'fs14', 292)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs93', 293)" onmouseover="showTip(event, 'fs93', 293)" class="i">acc</span>), <span onmouseout="hideTip(event, 'fs3', 294)" onmouseover="showTip(event, 'fs3', 294)" class="t">ByteString</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs94', 295)" onmouseover="showTip(event, 'fs94', 295)" class="i">empty</span>)
      <span class="k">else</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs15', 296)" onmouseover="showTip(event, 'fs15', 296)" class="i">l</span><span class="o">-</span>(<span onmouseout="hideTip(event, 'fs93', 297)" onmouseover="showTip(event, 'fs93', 297)" class="i">acc</span><span class="o">+</span><span class="n">1</span>) <span class="o">=</span> <span class="n">0</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs26', 298)" onmouseover="showTip(event, 'fs26', 298)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs90', 299)" onmouseover="showTip(event, 'fs90', 299)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs22', 300)" onmouseover="showTip(event, 'fs22', 300)" class="i">x</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs14', 301)" onmouseover="showTip(event, 'fs14', 301)" class="i">o</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs93', 302)" onmouseover="showTip(event, 'fs93', 302)" class="i">acc</span>]) <span class="k">then</span> (<span onmouseout="hideTip(event, 'fs4', 303)" onmouseover="showTip(event, 'fs4', 303)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 304)" onmouseover="showTip(event, 'fs22', 304)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 305)" onmouseover="showTip(event, 'fs14', 305)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs93', 306)" onmouseover="showTip(event, 'fs93', 306)" class="i">acc</span>), <span onmouseout="hideTip(event, 'fs3', 307)" onmouseover="showTip(event, 'fs3', 307)" class="t">ByteString</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs94', 308)" onmouseover="showTip(event, 'fs94', 308)" class="i">empty</span>)
        <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs90', 309)" onmouseover="showTip(event, 'fs90', 309)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs22', 310)" onmouseover="showTip(event, 'fs22', 310)" class="i">x</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs14', 311)" onmouseover="showTip(event, 'fs14', 311)" class="i">o</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs93', 312)" onmouseover="showTip(event, 'fs93', 312)" class="i">acc</span>] <span class="k">then</span> (<span onmouseout="hideTip(event, 'fs4', 313)" onmouseover="showTip(event, 'fs4', 313)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 314)" onmouseover="showTip(event, 'fs22', 314)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 315)" onmouseover="showTip(event, 'fs14', 315)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs93', 316)" onmouseover="showTip(event, 'fs93', 316)" class="i">acc</span>), <span onmouseout="hideTip(event, 'fs4', 317)" onmouseover="showTip(event, 'fs4', 317)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 318)" onmouseover="showTip(event, 'fs22', 318)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 319)" onmouseover="showTip(event, 'fs14', 319)" class="i">o</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs93', 320)" onmouseover="showTip(event, 'fs93', 320)" class="i">acc</span>,<span onmouseout="hideTip(event, 'fs15', 321)" onmouseover="showTip(event, 'fs15', 321)" class="i">l</span><span class="o">-</span><span onmouseout="hideTip(event, 'fs93', 322)" onmouseover="showTip(event, 'fs93', 322)" class="i">acc</span>))
        <span class="k">else</span> <span onmouseout="hideTip(event, 'fs92', 323)" onmouseover="showTip(event, 'fs92', 323)" class="f">loop</span> (<span onmouseout="hideTip(event, 'fs93', 324)" onmouseover="showTip(event, 'fs93', 324)" class="i">acc</span><span class="o">+</span><span class="n">1</span>)
    <span onmouseout="hideTip(event, 'fs92', 325)" onmouseover="showTip(event, 'fs92', 325)" class="f">loop</span> <span class="n">0</span>

  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs95', 326)" onmouseover="showTip(event, 'fs95', 326)" class="f">splitAt</span> <span onmouseout="hideTip(event, 'fs88', 327)" onmouseover="showTip(event, 'fs88', 327)" class="i">n</span> <span onmouseout="hideTip(event, 'fs91', 328)" onmouseover="showTip(event, 'fs91', 328)" class="i">bs</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs96', 329)" onmouseover="showTip(event, 'fs96', 329)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs18', 330)" onmouseover="showTip(event, 'fs18', 330)" class="i">i</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 331)" onmouseover="showTip(event, 'fs18', 331)" class="i">i</span> <span class="o">&gt;</span><span class="o">=</span> <span onmouseout="hideTip(event, 'fs88', 332)" onmouseover="showTip(event, 'fs88', 332)" class="i">n</span>
    <span class="c">// List-style</span>
<span class="c">//    let rec loop l acc =</span>
<span class="c">//      if ByteString.isEmpty l then (ByteString.take acc bs, ByteString.empty)</span>
<span class="c">//      else</span>
<span class="c">//        let hd, tl = ByteString.head l, ByteString.tail l</span>
<span class="c">//        if ByteString.isEmpty tl &amp;&amp; not (pred acc) then (ByteString.take acc bs, ByteString.empty)</span>
<span class="c">//        elif pred acc then (ByteString.take acc bs, l)</span>
<span class="c">//        else loop tl (acc+1)</span>
<span class="c">//    loop bs 0</span>
    <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs4', 333)" onmouseover="showTip(event, 'fs4', 333)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 334)" onmouseover="showTip(event, 'fs22', 334)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 335)" onmouseover="showTip(event, 'fs14', 335)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs15', 336)" onmouseover="showTip(event, 'fs15', 336)" class="i">l</span>)) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs91', 337)" onmouseover="showTip(event, 'fs91', 337)" class="i">bs</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs92', 338)" onmouseover="showTip(event, 'fs92', 338)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs93', 339)" onmouseover="showTip(event, 'fs93', 339)" class="i">acc</span> <span class="o">=</span>
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs15', 340)" onmouseover="showTip(event, 'fs15', 340)" class="i">l</span><span class="o">-</span><span onmouseout="hideTip(event, 'fs93', 341)" onmouseover="showTip(event, 'fs93', 341)" class="i">acc</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span> (<span onmouseout="hideTip(event, 'fs4', 342)" onmouseover="showTip(event, 'fs4', 342)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 343)" onmouseover="showTip(event, 'fs22', 343)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 344)" onmouseover="showTip(event, 'fs14', 344)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs93', 345)" onmouseover="showTip(event, 'fs93', 345)" class="i">acc</span>), <span onmouseout="hideTip(event, 'fs3', 346)" onmouseover="showTip(event, 'fs3', 346)" class="t">ByteString</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs94', 347)" onmouseover="showTip(event, 'fs94', 347)" class="i">empty</span>)
      <span class="k">else</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs15', 348)" onmouseover="showTip(event, 'fs15', 348)" class="i">l</span><span class="o">-</span>(<span onmouseout="hideTip(event, 'fs93', 349)" onmouseover="showTip(event, 'fs93', 349)" class="i">acc</span><span class="o">+</span><span class="n">1</span>) <span class="o">=</span> <span class="n">0</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs26', 350)" onmouseover="showTip(event, 'fs26', 350)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs96', 351)" onmouseover="showTip(event, 'fs96', 351)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs93', 352)" onmouseover="showTip(event, 'fs93', 352)" class="i">acc</span>) <span class="k">then</span> (<span onmouseout="hideTip(event, 'fs4', 353)" onmouseover="showTip(event, 'fs4', 353)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 354)" onmouseover="showTip(event, 'fs22', 354)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 355)" onmouseover="showTip(event, 'fs14', 355)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs93', 356)" onmouseover="showTip(event, 'fs93', 356)" class="i">acc</span>), <span onmouseout="hideTip(event, 'fs3', 357)" onmouseover="showTip(event, 'fs3', 357)" class="t">ByteString</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs94', 358)" onmouseover="showTip(event, 'fs94', 358)" class="i">empty</span>)
        <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs96', 359)" onmouseover="showTip(event, 'fs96', 359)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs93', 360)" onmouseover="showTip(event, 'fs93', 360)" class="i">acc</span> <span class="k">then</span> (<span onmouseout="hideTip(event, 'fs4', 361)" onmouseover="showTip(event, 'fs4', 361)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 362)" onmouseover="showTip(event, 'fs22', 362)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 363)" onmouseover="showTip(event, 'fs14', 363)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs93', 364)" onmouseover="showTip(event, 'fs93', 364)" class="i">acc</span>), <span onmouseout="hideTip(event, 'fs4', 365)" onmouseover="showTip(event, 'fs4', 365)" class="p">BS</span>(<span onmouseout="hideTip(event, 'fs22', 366)" onmouseover="showTip(event, 'fs22', 366)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs14', 367)" onmouseover="showTip(event, 'fs14', 367)" class="i">o</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs93', 368)" onmouseover="showTip(event, 'fs93', 368)" class="i">acc</span>,<span onmouseout="hideTip(event, 'fs15', 369)" onmouseover="showTip(event, 'fs15', 369)" class="i">l</span><span class="o">-</span><span onmouseout="hideTip(event, 'fs93', 370)" onmouseover="showTip(event, 'fs93', 370)" class="i">acc</span>))
        <span class="k">else</span> <span onmouseout="hideTip(event, 'fs92', 371)" onmouseover="showTip(event, 'fs92', 371)" class="f">loop</span> (<span onmouseout="hideTip(event, 'fs93', 372)" onmouseover="showTip(event, 'fs93', 372)" class="i">acc</span><span class="o">+</span><span class="n">1</span>)
    <span onmouseout="hideTip(event, 'fs92', 373)" onmouseover="showTip(event, 'fs92', 373)" class="f">loop</span> <span class="n">0</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Diagnostics</div>
<div class="tip" id="fs3">type ByteString =<br />&#160;&#160;| BS of byte array * int * int<br />&#160;&#160;interface IEnumerable&lt;byte&gt;<br />&#160;&#160;static member append : a:ByteString -&gt; b:ByteString -&gt; ByteString<br />&#160;&#160;static member cons : hd:byte -&gt; tl:ByteString -&gt; ByteString<br />&#160;&#160;static member create : bs:byte array -&gt; ByteString<br />&#160;&#160;static member empty : ByteString<br />&#160;&#160;static member ( [] ) : ByteString<br />&#160;&#160;static member head : ByteString -&gt; byte<br />&#160;&#160;static member isEmpty : ByteString -&gt; bool<br />&#160;&#160;static member length : ByteString -&gt; int<br />&#160;&#160;static member ofList : l:byte list -&gt; ByteString<br />&#160;&#160;static member ofSegment : segment:ArraySegment&lt;byte&gt; -&gt; ByteString<br />&#160;&#160;static member ofSeq : s:seq&lt;byte&gt; -&gt; ByteString<br />&#160;&#160;static member ofString : s:string -&gt; ByteString<br />&#160;&#160;static member ( @ ) : a:ByteString * b:ByteString -&gt; ByteString<br />&#160;&#160;static member op_Cons : hd:byte * ByteString -&gt; ByteString<br />&#160;&#160;static member ( = ) : ByteString * ByteString -&gt; bool<br />&#160;&#160;static member singleton : c:byte -&gt; ByteString<br />&#160;&#160;static member split : pred:(byte -&gt; bool) -&gt; bs:ByteString -&gt; ByteString * ByteString<br />&#160;&#160;static member splitAt : n:int -&gt; bs:ByteString -&gt; ByteString * ByteString<br />&#160;&#160;static member tail : ByteString -&gt; ByteString<br />&#160;&#160;static member take : n:int -&gt; ByteString -&gt; ByteString<br />&#160;&#160;static member toList : ByteString -&gt; byte list<br />&#160;&#160;static member toString : ByteString -&gt; string<br /><br />Full name: FSharp.Collections.ByteString.ByteString<br /><em><br /><br />&#160;ByteString is a functional ArraySegment&lt;byte&gt; that also implements IEnumerable&lt;byte&gt;.<br />&#160;NOTE: This type should really be moved into a set of extension types missing from F#.</em></div>
<div class="tip" id="fs4">union case ByteString.BS: byte array * int * int -&gt; ByteString</div>
<div class="tip" id="fs5">Multiple items<br />val byte : value:&#39;T -&gt; byte (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.byte<br /><br />--------------------<br />type byte = Byte<br /><br />Full name: Microsoft.FSharp.Core.byte</div>
<div class="tip" id="fs6">type &#39;T array = &#39;T []<br /><br />Full name: Microsoft.FSharp.Core.array&lt;_&gt;</div>
<div class="tip" id="fs7">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs8">namespace System.Collections</div>
<div class="tip" id="fs9">namespace System.Collections.Generic</div>
<div class="tip" id="fs10">type IEnumerable&lt;&#39;T&gt; =<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator&lt;&#39;T&gt;<br /><br />Full name: System.Collections.Generic.IEnumerable&lt;_&gt;</div>
<div class="tip" id="fs11">val this : ByteString</div>
<div class="tip" id="fs12">override ByteString.GetEnumerator : unit -&gt; Collections.Generic.IEnumerator&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.ByteString.GetEnumerator</div>
<div class="tip" id="fs13">val a : byte array</div>
<div class="tip" id="fs14">val o : int</div>
<div class="tip" id="fs15">val l : int</div>
<div class="tip" id="fs16">val inner : seq&lt;byte&gt;</div>
<div class="tip" id="fs17">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs18">val i : int</div>
<div class="tip" id="fs19">Collections.Generic.IEnumerable.GetEnumerator() : Collections.Generic.IEnumerator&lt;byte&gt;</div>
<div class="tip" id="fs20">override ByteString.GetEnumerator : unit -&gt; Collections.IEnumerator<br /><br />Full name: FSharp.Collections.ByteString.ByteString.GetEnumerator</div>
<div class="tip" id="fs21">type IEnumerator =<br />&#160;&#160;member Current : obj<br />&#160;&#160;member MoveNext : unit -&gt; bool<br />&#160;&#160;member Reset : unit -&gt; unit<br /><br />Full name: System.Collections.IEnumerator</div>
<div class="tip" id="fs22">val x : byte array</div>
<div class="tip" id="fs23">val x&#39; : byte array</div>
<div class="tip" id="fs24">val o&#39; : int</div>
<div class="tip" id="fs25">val l&#39; : int</div>
<div class="tip" id="fs26">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs27">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs28">val empty&lt;&#39;T&gt; : &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.empty</div>
<div class="tip" id="fs29">static member ByteString.op_Cons : hd:byte * ByteString -&gt; ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.op_Cons<br /><em><br /><br />&#160;Implements the :: operator, which is not available on anything but the List&lt;_&gt; type.<br />&#160;op_Cons uses Buffer.SetByte and Buffer.BlockCopy for efficient array operations.<br />&#160;Please note that a new array is created and both the head and tail are copied in,<br />&#160;disregarding any additional bytes in the original tail array.</em></div>
<div class="tip" id="fs30">val hd : byte</div>
<div class="tip" id="fs31">static member ByteString.singleton : c:byte -&gt; ByteString</div>
<div class="tip" id="fs32">val buffer : byte []</div>
<div class="tip" id="fs33">val zeroCreate : count:int -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.zeroCreate</div>
<div class="tip" id="fs34">type Buffer =<br />&#160;&#160;static member BlockCopy : src:Array * srcOffset:int * dst:Array * dstOffset:int * count:int -&gt; unit<br />&#160;&#160;static member ByteLength : array:Array -&gt; int<br />&#160;&#160;static member GetByte : array:Array * index:int -&gt; byte<br />&#160;&#160;static member SetByte : array:Array * index:int * value:byte -&gt; unit<br /><br />Full name: System.Buffer</div>
<div class="tip" id="fs35">Buffer.SetByte(array: Array, index: int, value: byte) : unit</div>
<div class="tip" id="fs36">Buffer.BlockCopy(src: Array, srcOffset: int, dst: Array, dstOffset: int, count: int) : unit</div>
<div class="tip" id="fs37">val a : ByteString</div>
<div class="tip" id="fs38">val b : ByteString</div>
<div class="tip" id="fs39">static member ByteString.isEmpty : ByteString -&gt; bool</div>
<div class="tip" id="fs40">static member ByteString.empty : ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.empty</div>
<div class="tip" id="fs41">property ByteString.op_Nil: ByteString<br /><em><br /><br />&#160;Implements the [] operator, which is not available on anything but the List&lt;_&gt; type.</em></div>
<div class="tip" id="fs42">static member ByteString.singleton : c:byte -&gt; ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.singleton</div>
<div class="tip" id="fs43">val c : byte</div>
<div class="tip" id="fs44">val create : count:int -&gt; value:&#39;T -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.create</div>
<div class="tip" id="fs45">static member ByteString.create : bs:byte array -&gt; ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.create</div>
<div class="tip" id="fs46">val bs : byte array</div>
<div class="tip" id="fs47">property Array.Length: int</div>
<div class="tip" id="fs48">static member ByteString.ofSegment : segment:ArraySegment&lt;byte&gt; -&gt; ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.ofSegment</div>
<div class="tip" id="fs49">val segment : ArraySegment&lt;byte&gt;</div>
<div class="tip" id="fs50">Multiple items<br />type ArraySegment&lt;&#39;T&gt; =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : array:&#39;T[] -&gt; ArraySegment&lt;&#39;T&gt; + 1 overload<br />&#160;&#160;&#160;&#160;member Array : &#39;T[]<br />&#160;&#160;&#160;&#160;member Count : int<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member Offset : int<br />&#160;&#160;end<br /><br />Full name: System.ArraySegment&lt;_&gt;<br /><br />--------------------<br />ArraySegment()<br />ArraySegment(array: &#39;T []) : unit<br />ArraySegment(array: &#39;T [], offset: int, count: int) : unit</div>
<div class="tip" id="fs51">property ArraySegment.Array: byte []</div>
<div class="tip" id="fs52">property ArraySegment.Offset: int</div>
<div class="tip" id="fs53">property ArraySegment.Count: int</div>
<div class="tip" id="fs54">static member ByteString.ofSeq : s:seq&lt;byte&gt; -&gt; ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.ofSeq</div>
<div class="tip" id="fs55">val s : seq&lt;byte&gt;</div>
<div class="tip" id="fs56">val arr : byte []</div>
<div class="tip" id="fs57">val ofSeq : source:seq&lt;&#39;T&gt; -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.ofSeq</div>
<div class="tip" id="fs58">static member ByteString.ofList : l:byte list -&gt; ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.ofList</div>
<div class="tip" id="fs59">val l : byte list</div>
<div class="tip" id="fs60">val ofList : list:&#39;T list -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.ofList</div>
<div class="tip" id="fs61">property List.Length: int</div>
<div class="tip" id="fs62">static member ByteString.ofString : s:string -&gt; ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.ofString</div>
<div class="tip" id="fs63">val s : string</div>
<div class="tip" id="fs64">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs65">String.ToCharArray() : char []<br />String.ToCharArray(startIndex: int, length: int) : char []</div>
<div class="tip" id="fs66">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.map</div>
<div class="tip" id="fs67">static member ByteString.create : bs:byte array -&gt; ByteString</div>
<div class="tip" id="fs68">static member ByteString.toList : ByteString -&gt; byte list<br /><br />Full name: FSharp.Collections.ByteString.ByteString.toList</div>
<div class="tip" id="fs69">val len : int</div>
<div class="tip" id="fs70">static member ByteString.toString : ByteString -&gt; string<br /><br />Full name: FSharp.Collections.ByteString.ByteString.toString</div>
<div class="tip" id="fs71">namespace System.Text</div>
<div class="tip" id="fs72">type Encoding =<br />&#160;&#160;member BodyName : string<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CodePage : int<br />&#160;&#160;member DecoderFallback : DecoderFallback with get, set<br />&#160;&#160;member EncoderFallback : EncoderFallback with get, set<br />&#160;&#160;member EncodingName : string<br />&#160;&#160;member Equals : value:obj -&gt; bool<br />&#160;&#160;member GetByteCount : chars:char[] -&gt; int + 3 overloads<br />&#160;&#160;member GetBytes : chars:char[] -&gt; byte[] + 5 overloads<br />&#160;&#160;member GetCharCount : bytes:byte[] -&gt; int + 2 overloads<br />&#160;&#160;...<br /><br />Full name: System.Text.Encoding</div>
<div class="tip" id="fs73">property Text.Encoding.ASCII: Text.Encoding</div>
<div class="tip" id="fs74">Text.Encoding.GetString(bytes: byte []) : string<br />Text.Encoding.GetString(bytes: byte [], index: int, count: int) : string</div>
<div class="tip" id="fs75">static member ByteString.isEmpty : ByteString -&gt; bool<br /><br />Full name: FSharp.Collections.ByteString.ByteString.isEmpty</div>
<div class="tip" id="fs76">type Debug =<br />&#160;&#160;static member Assert : condition:bool -&gt; unit + 3 overloads<br />&#160;&#160;static member AutoFlush : bool with get, set<br />&#160;&#160;static member Close : unit -&gt; unit<br />&#160;&#160;static member Fail : message:string -&gt; unit + 1 overload<br />&#160;&#160;static member Flush : unit -&gt; unit<br />&#160;&#160;static member Indent : unit -&gt; unit<br />&#160;&#160;static member IndentLevel : int with get, set<br />&#160;&#160;static member IndentSize : int with get, set<br />&#160;&#160;static member Listeners : TraceListenerCollection<br />&#160;&#160;static member Print : message:string -&gt; unit + 1 overload<br />&#160;&#160;...<br /><br />Full name: System.Diagnostics.Debug</div>
<div class="tip" id="fs77">Debug.Assert(condition: bool) : unit<br />Debug.Assert(condition: bool, message: string) : unit<br />Debug.Assert(condition: bool, message: string, detailMessage: string) : unit<br />Debug.Assert(condition: bool, message: string, detailMessageFormat: string, [&lt;ParamArray&gt;] args: obj []) : unit</div>
<div class="tip" id="fs78">static member ByteString.length : ByteString -&gt; int<br /><br />Full name: FSharp.Collections.ByteString.ByteString.length</div>
<div class="tip" id="fs79">static member ByteString.head : ByteString -&gt; byte<br /><br />Full name: FSharp.Collections.ByteString.ByteString.head</div>
<div class="tip" id="fs80">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs81">static member ByteString.tail : ByteString -&gt; ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.tail</div>
<div class="tip" id="fs82">static member ByteString.cons : hd:byte -&gt; tl:ByteString -&gt; ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.cons</div>
<div class="tip" id="fs83">val tl : ByteString</div>
<div class="tip" id="fs84">static member ByteString.op_Cons : hd:byte * ByteString -&gt; ByteString<br /><em><br /><br />&#160;Implements the :: operator, which is not available on anything but the List&lt;_&gt; type.<br />&#160;op_Cons uses Buffer.SetByte and Buffer.BlockCopy for efficient array operations.<br />&#160;Please note that a new array is created and both the head and tail are copied in,<br />&#160;disregarding any additional bytes in the original tail array.</em></div>
<div class="tip" id="fs85">static member ByteString.append : a:ByteString -&gt; b:ByteString -&gt; ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.append</div>
<div class="tip" id="fs86">static member ByteString.( @ ) : a:ByteString * b:ByteString -&gt; ByteString<br /><em><br /><br />&#160;Implements the @ operator, which is not available on anything but the List&lt;_&gt; type.<br />&#160;op_Append uses Buffer.BlockCopy for efficient array operations.<br />&#160;Please note that a new array is created and both arrays are copied in,<br />&#160;disregarding any additional bytes in the original, underlying arrays.</em></div>
<div class="tip" id="fs87">static member ByteString.take : n:int -&gt; ByteString -&gt; ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.take</div>
<div class="tip" id="fs88">val n : int</div>
<div class="tip" id="fs89">static member ByteString.split : pred:(byte -&gt; bool) -&gt; bs:ByteString -&gt; ByteString * ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.split</div>
<div class="tip" id="fs90">val pred : (byte -&gt; bool)</div>
<div class="tip" id="fs91">val bs : ByteString</div>
<div class="tip" id="fs92">val loop : (int -&gt; ByteString * ByteString)</div>
<div class="tip" id="fs93">val acc : int</div>
<div class="tip" id="fs94">property ByteString.empty: ByteString</div>
<div class="tip" id="fs95">static member ByteString.splitAt : n:int -&gt; bs:ByteString -&gt; ByteString * ByteString<br /><br />Full name: FSharp.Collections.ByteString.ByteString.splitAt</div>
<div class="tip" id="fs96">val pred : (int -&gt; bool)</div>

