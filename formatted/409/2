<h2><a name="ByteString" class="anchor" href="#ByteString">ByteString</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">/// An ArraySegment with structural comparison and equality.</span>
[&lt;<span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">CustomEquality</span>; <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">CustomComparison</span>&gt;]
[&lt;<span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">SerializableAttribute</span>&gt;]
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">ArraySegment</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">a</span> <span class="o">:</span> <span class="i">comparison</span><span class="o">&gt;</span> <span class="o">=</span>
  <span class="k">struct</span>
    <span class="k">val</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">Array</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>[]
    <span class="k">val</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">Offset</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="t">int</span>
    <span class="k">val</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="i">Count</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="t">int</span>
    <span class="k">new</span> (<span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">array</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>[]) <span class="o">=</span> { <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="i">Array</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="i">array</span>; <span class="i">Offset</span> <span class="o">=</span> <span class="n">0</span>; <span class="i">Count</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="i">array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="i">Length</span> }
    <span class="k">new</span> (<span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="i">array</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>[], <span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="i">offset</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 17)" onmouseover="showTip(event, 'fs7', 17)" class="t">int</span>, <span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="i">count</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 19)" onmouseover="showTip(event, 'fs7', 19)" class="t">int</span>) <span class="o">=</span> { <span onmouseout="hideTip(event, 'fs10', 20)" onmouseover="showTip(event, 'fs10', 20)" class="i">Array</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 21)" onmouseover="showTip(event, 'fs9', 21)" class="i">array</span>; <span class="i">Offset</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 22)" onmouseover="showTip(event, 'fs12', 22)" class="i">offset</span>; <span class="i">Count</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 23)" onmouseover="showTip(event, 'fs13', 23)" class="i">count</span> }
    <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs14', 24)" onmouseover="showTip(event, 'fs14', 24)" class="f">Compare</span> (<span onmouseout="hideTip(event, 'fs15', 25)" onmouseover="showTip(event, 'fs15', 25)" class="i">a</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 26)" onmouseover="showTip(event, 'fs4', 26)" class="t">ArraySegment</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>, <span onmouseout="hideTip(event, 'fs16', 27)" onmouseover="showTip(event, 'fs16', 27)" class="i">b</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 28)" onmouseover="showTip(event, 'fs4', 28)" class="t">ArraySegment</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>) <span class="o">=</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 29)" onmouseover="showTip(event, 'fs17', 29)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 32)" onmouseover="showTip(event, 'fs15', 32)" class="i">a</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 33)" onmouseover="showTip(event, 'fs20', 33)" class="i">Array</span>, <span onmouseout="hideTip(event, 'fs15', 34)" onmouseover="showTip(event, 'fs15', 34)" class="i">a</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 35)" onmouseover="showTip(event, 'fs6', 35)" class="i">Offset</span>, <span onmouseout="hideTip(event, 'fs15', 36)" onmouseover="showTip(event, 'fs15', 36)" class="i">a</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 37)" onmouseover="showTip(event, 'fs8', 37)" class="i">Count</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 38)" onmouseover="showTip(event, 'fs21', 38)" class="i">x&#39;</span>,<span onmouseout="hideTip(event, 'fs22', 39)" onmouseover="showTip(event, 'fs22', 39)" class="i">o&#39;</span>,<span onmouseout="hideTip(event, 'fs23', 40)" onmouseover="showTip(event, 'fs23', 40)" class="i">l&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 41)" onmouseover="showTip(event, 'fs16', 41)" class="i">b</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 42)" onmouseover="showTip(event, 'fs20', 42)" class="i">Array</span>, <span onmouseout="hideTip(event, 'fs16', 43)" onmouseover="showTip(event, 'fs16', 43)" class="i">b</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 44)" onmouseover="showTip(event, 'fs6', 44)" class="i">Offset</span>, <span onmouseout="hideTip(event, 'fs16', 45)" onmouseover="showTip(event, 'fs16', 45)" class="i">b</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 46)" onmouseover="showTip(event, 'fs8', 46)" class="i">Count</span>
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs17', 47)" onmouseover="showTip(event, 'fs17', 47)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 48)" onmouseover="showTip(event, 'fs21', 48)" class="i">x&#39;</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs18', 49)" onmouseover="showTip(event, 'fs18', 49)" class="i">o</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 50)" onmouseover="showTip(event, 'fs22', 50)" class="i">o&#39;</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs19', 51)" onmouseover="showTip(event, 'fs19', 51)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 52)" onmouseover="showTip(event, 'fs23', 52)" class="i">l&#39;</span> <span class="k">then</span> <span class="n">0</span>
      <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs17', 53)" onmouseover="showTip(event, 'fs17', 53)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 54)" onmouseover="showTip(event, 'fs21', 54)" class="i">x&#39;</span> <span class="k">then</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs18', 55)" onmouseover="showTip(event, 'fs18', 55)" class="i">o</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 56)" onmouseover="showTip(event, 'fs22', 56)" class="i">o&#39;</span> <span class="k">then</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs19', 57)" onmouseover="showTip(event, 'fs19', 57)" class="i">l</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs23', 58)" onmouseover="showTip(event, 'fs23', 58)" class="i">l&#39;</span> <span class="k">then</span> <span class="o">-</span><span class="n">1</span> <span class="k">else</span> <span class="n">1</span>
        <span class="k">else</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs18', 59)" onmouseover="showTip(event, 'fs18', 59)" class="i">o</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs22', 60)" onmouseover="showTip(event, 'fs22', 60)" class="i">o&#39;</span> <span class="k">then</span> <span class="o">-</span><span class="n">1</span> <span class="k">else</span> <span class="n">1</span> 
      <span class="k">else</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 61)" onmouseover="showTip(event, 'fs24', 61)" class="f">foldr</span> <span onmouseout="hideTip(event, 'fs25', 62)" onmouseover="showTip(event, 'fs25', 62)" class="i">res</span> <span onmouseout="hideTip(event, 'fs26', 63)" onmouseover="showTip(event, 'fs26', 63)" class="i">b</span> <span onmouseout="hideTip(event, 'fs27', 64)" onmouseover="showTip(event, 'fs27', 64)" class="i">b&#39;</span> <span class="o">=</span>
              <span class="k">if</span> <span onmouseout="hideTip(event, 'fs25', 65)" onmouseover="showTip(event, 'fs25', 65)" class="i">res</span> <span class="o">&lt;&gt;</span> <span class="n">0</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs25', 66)" onmouseover="showTip(event, 'fs25', 66)" class="i">res</span>
              <span class="k">else</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs26', 67)" onmouseover="showTip(event, 'fs26', 67)" class="i">b</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 68)" onmouseover="showTip(event, 'fs27', 68)" class="i">b&#39;</span> <span class="k">then</span> <span class="n">0</span>
                   <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs26', 69)" onmouseover="showTip(event, 'fs26', 69)" class="i">b</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs27', 70)" onmouseover="showTip(event, 'fs27', 70)" class="i">b&#39;</span> <span class="k">then</span> <span class="o">-</span><span class="n">1</span>
                   <span class="k">else</span> <span class="n">1</span>
           <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 71)" onmouseover="showTip(event, 'fs28', 71)" class="i">left</span> <span class="o">=</span> [| <span class="k">for</span> <span onmouseout="hideTip(event, 'fs29', 72)" onmouseover="showTip(event, 'fs29', 72)" class="i">i</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs18', 73)" onmouseover="showTip(event, 'fs18', 73)" class="i">o</span><span class="o">..</span>(<span onmouseout="hideTip(event, 'fs18', 74)" onmouseover="showTip(event, 'fs18', 74)" class="i">o</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs19', 75)" onmouseover="showTip(event, 'fs19', 75)" class="i">l</span><span class="o">-</span><span class="n">1</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs17', 76)" onmouseover="showTip(event, 'fs17', 76)" class="i">x</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs29', 77)" onmouseover="showTip(event, 'fs29', 77)" class="i">i</span>] |]
           <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 78)" onmouseover="showTip(event, 'fs30', 78)" class="i">right</span> <span class="o">=</span> [| <span class="k">for</span> <span onmouseout="hideTip(event, 'fs31', 79)" onmouseover="showTip(event, 'fs31', 79)" class="i">i&#39;</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs22', 80)" onmouseover="showTip(event, 'fs22', 80)" class="i">o&#39;</span><span class="o">..</span>(<span onmouseout="hideTip(event, 'fs22', 81)" onmouseover="showTip(event, 'fs22', 81)" class="i">o&#39;</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs23', 82)" onmouseover="showTip(event, 'fs23', 82)" class="i">l&#39;</span><span class="o">-</span><span class="n">1</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 83)" onmouseover="showTip(event, 'fs21', 83)" class="i">x&#39;</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs31', 84)" onmouseover="showTip(event, 'fs31', 84)" class="i">i&#39;</span>] |]
           <span onmouseout="hideTip(event, 'fs10', 85)" onmouseover="showTip(event, 'fs10', 85)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 86)" onmouseover="showTip(event, 'fs32', 86)" class="f">fold2</span> <span onmouseout="hideTip(event, 'fs24', 87)" onmouseover="showTip(event, 'fs24', 87)" class="f">foldr</span> <span class="n">0</span> <span onmouseout="hideTip(event, 'fs28', 88)" onmouseover="showTip(event, 'fs28', 88)" class="i">left</span> <span onmouseout="hideTip(event, 'fs30', 89)" onmouseover="showTip(event, 'fs30', 89)" class="i">right</span>
    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs33', 90)" onmouseover="showTip(event, 'fs33', 90)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 91)" onmouseover="showTip(event, 'fs34', 91)" class="f">Equals</span>(<span onmouseout="hideTip(event, 'fs35', 92)" onmouseover="showTip(event, 'fs35', 92)" class="i">other</span>) <span class="o">=</span> 
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs35', 93)" onmouseover="showTip(event, 'fs35', 93)" class="i">other</span> <span class="k">with</span>
      | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs4', 94)" onmouseover="showTip(event, 'fs4', 94)" class="t">ArraySegment</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs36', 95)" onmouseover="showTip(event, 'fs36', 95)" class="i">other&#39;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 96)" onmouseover="showTip(event, 'fs4', 96)" class="t">ArraySegment</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 97)" onmouseover="showTip(event, 'fs37', 97)" class="f">Compare</span>(<span onmouseout="hideTip(event, 'fs33', 98)" onmouseover="showTip(event, 'fs33', 98)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs36', 99)" onmouseover="showTip(event, 'fs36', 99)" class="i">other&#39;</span>) <span class="o">=</span> <span class="n">0</span>
      | _ <span class="k">-&gt;</span> <span class="k">false</span>
    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs33', 100)" onmouseover="showTip(event, 'fs33', 100)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 101)" onmouseover="showTip(event, 'fs38', 101)" class="f">GetHashCode</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 102)" onmouseover="showTip(event, 'fs39', 102)" class="f">hash</span> <span onmouseout="hideTip(event, 'fs33', 103)" onmouseover="showTip(event, 'fs33', 103)" class="i">x</span>
    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs40', 104)" onmouseover="showTip(event, 'fs40', 104)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 105)" onmouseover="showTip(event, 'fs41', 105)" class="t">IComparable</span> <span class="k">with</span>
      <span class="k">member</span> <span onmouseout="hideTip(event, 'fs33', 106)" onmouseover="showTip(event, 'fs33', 106)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 107)" onmouseover="showTip(event, 'fs42', 107)" class="f">CompareTo</span>(<span onmouseout="hideTip(event, 'fs35', 108)" onmouseover="showTip(event, 'fs35', 108)" class="i">other</span>) <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs35', 109)" onmouseover="showTip(event, 'fs35', 109)" class="i">other</span> <span class="k">with</span>
        | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs4', 110)" onmouseover="showTip(event, 'fs4', 110)" class="t">ArraySegment</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs36', 111)" onmouseover="showTip(event, 'fs36', 111)" class="i">other&#39;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 112)" onmouseover="showTip(event, 'fs4', 112)" class="t">ArraySegment</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 113)" onmouseover="showTip(event, 'fs37', 113)" class="f">Compare</span>(<span onmouseout="hideTip(event, 'fs33', 114)" onmouseover="showTip(event, 'fs33', 114)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs36', 115)" onmouseover="showTip(event, 'fs36', 115)" class="i">other&#39;</span>)
        | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs43', 116)" onmouseover="showTip(event, 'fs43', 116)" class="f">invalidArg</span> <span class="s">&quot;other&quot;</span> <span class="s">&quot;Cannot compare a value of another type.&quot;</span>
  <span class="k">end</span>
  
<span class="k">module</span> <span onmouseout="hideTip(event, 'fs44', 117)" onmouseover="showTip(event, 'fs44', 117)" class="t">ByteString</span> <span class="o">=</span>
  <span class="k">open</span> <span onmouseout="hideTip(event, 'fs40', 118)" onmouseover="showTip(event, 'fs40', 118)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 119)" onmouseover="showTip(event, 'fs45', 119)" class="i">Diagnostics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 120)" onmouseover="showTip(event, 'fs46', 120)" class="i">Contracts</span>

  <span class="c">/// An alias constructor to make it easier to create ArraySegment&lt;byte&gt;.</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs47', 121)" onmouseover="showTip(event, 'fs47', 121)" class="f">BS</span> (<span onmouseout="hideTip(event, 'fs48', 122)" onmouseover="showTip(event, 'fs48', 122)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs18', 123)" onmouseover="showTip(event, 'fs18', 123)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs19', 124)" onmouseover="showTip(event, 'fs19', 124)" class="i">l</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 125)" onmouseover="showTip(event, 'fs4', 125)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 126)" onmouseover="showTip(event, 'fs49', 126)" class="t">byte</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs48', 127)" onmouseover="showTip(event, 'fs48', 127)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs18', 128)" onmouseover="showTip(event, 'fs18', 128)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs19', 129)" onmouseover="showTip(event, 'fs19', 129)" class="i">l</span>)
  <span class="c">/// An active pattern for conveniently retrieving the properties of the ArraySegment&lt;byte&gt;.</span>
  <span class="k">let</span> (|<span onmouseout="hideTip(event, 'fs47', 130)" onmouseover="showTip(event, 'fs47', 130)" class="p">BS</span>|) (<span onmouseout="hideTip(event, 'fs50', 131)" onmouseover="showTip(event, 'fs50', 131)" class="i">x</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 132)" onmouseover="showTip(event, 'fs4', 132)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 133)" onmouseover="showTip(event, 'fs49', 133)" class="t">byte</span><span class="o">&gt;</span>) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs50', 134)" onmouseover="showTip(event, 'fs50', 134)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 135)" onmouseover="showTip(event, 'fs51', 135)" class="i">Array</span>, <span onmouseout="hideTip(event, 'fs50', 136)" onmouseover="showTip(event, 'fs50', 136)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 137)" onmouseover="showTip(event, 'fs6', 137)" class="i">Offset</span>, <span onmouseout="hideTip(event, 'fs50', 138)" onmouseover="showTip(event, 'fs50', 138)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 139)" onmouseover="showTip(event, 'fs8', 139)" class="i">Count</span>
  
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs52', 140)" onmouseover="showTip(event, 'fs52', 140)" class="i">empty</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 141)" onmouseover="showTip(event, 'fs4', 141)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 142)" onmouseover="showTip(event, 'fs49', 142)" class="t">byte</span><span class="o">&gt;</span>()
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 143)" onmouseover="showTip(event, 'fs53', 143)" class="f">singleton</span> <span onmouseout="hideTip(event, 'fs54', 144)" onmouseover="showTip(event, 'fs54', 144)" class="i">c</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 145)" onmouseover="showTip(event, 'fs55', 145)" class="f">BS</span>(<span onmouseout="hideTip(event, 'fs10', 146)" onmouseover="showTip(event, 'fs10', 146)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 147)" onmouseover="showTip(event, 'fs56', 147)" class="f">create</span> <span class="n">1</span> <span onmouseout="hideTip(event, 'fs54', 148)" onmouseover="showTip(event, 'fs54', 148)" class="i">c</span>, <span class="n">0</span>, <span class="n">1</span>)
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 149)" onmouseover="showTip(event, 'fs57', 149)" class="f">create</span> <span onmouseout="hideTip(event, 'fs58', 150)" onmouseover="showTip(event, 'fs58', 150)" class="i">bs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 151)" onmouseover="showTip(event, 'fs55', 151)" class="f">BS</span>(<span onmouseout="hideTip(event, 'fs58', 152)" onmouseover="showTip(event, 'fs58', 152)" class="i">bs</span>, <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs58', 153)" onmouseover="showTip(event, 'fs58', 153)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 154)" onmouseover="showTip(event, 'fs11', 154)" class="i">Length</span>)
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs59', 155)" onmouseover="showTip(event, 'fs59', 155)" class="f">ofSeq</span> <span onmouseout="hideTip(event, 'fs60', 156)" onmouseover="showTip(event, 'fs60', 156)" class="i">s</span> <span class="o">=</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs61', 157)" onmouseover="showTip(event, 'fs61', 157)" class="i">arr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 158)" onmouseover="showTip(event, 'fs10', 158)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 159)" onmouseover="showTip(event, 'fs62', 159)" class="f">ofSeq</span> <span onmouseout="hideTip(event, 'fs60', 160)" onmouseover="showTip(event, 'fs60', 160)" class="i">s</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs55', 161)" onmouseover="showTip(event, 'fs55', 161)" class="f">BS</span>(<span onmouseout="hideTip(event, 'fs61', 162)" onmouseover="showTip(event, 'fs61', 162)" class="i">arr</span>, <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs61', 163)" onmouseover="showTip(event, 'fs61', 163)" class="i">arr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 164)" onmouseover="showTip(event, 'fs11', 164)" class="i">Length</span>)
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 165)" onmouseover="showTip(event, 'fs63', 165)" class="f">ofList</span> <span onmouseout="hideTip(event, 'fs64', 166)" onmouseover="showTip(event, 'fs64', 166)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 167)" onmouseover="showTip(event, 'fs55', 167)" class="f">BS</span>(<span onmouseout="hideTip(event, 'fs10', 168)" onmouseover="showTip(event, 'fs10', 168)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 169)" onmouseover="showTip(event, 'fs65', 169)" class="f">ofList</span> <span onmouseout="hideTip(event, 'fs64', 170)" onmouseover="showTip(event, 'fs64', 170)" class="i">l</span>, <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs64', 171)" onmouseover="showTip(event, 'fs64', 171)" class="i">l</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 172)" onmouseover="showTip(event, 'fs66', 172)" class="i">Length</span>)
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs67', 173)" onmouseover="showTip(event, 'fs67', 173)" class="f">ofString</span> (<span onmouseout="hideTip(event, 'fs68', 174)" onmouseover="showTip(event, 'fs68', 174)" class="i">s</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs69', 175)" onmouseover="showTip(event, 'fs69', 175)" class="t">string</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs68', 176)" onmouseover="showTip(event, 'fs68', 176)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 177)" onmouseover="showTip(event, 'fs70', 177)" class="f">ToCharArray</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 178)" onmouseover="showTip(event, 'fs10', 178)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 179)" onmouseover="showTip(event, 'fs71', 179)" class="f">map</span> <span onmouseout="hideTip(event, 'fs49', 180)" onmouseover="showTip(event, 'fs49', 180)" class="f">byte</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 181)" onmouseover="showTip(event, 'fs57', 181)" class="f">create</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs72', 182)" onmouseover="showTip(event, 'fs72', 182)" class="f">toSeq</span> (<span onmouseout="hideTip(event, 'fs73', 183)" onmouseover="showTip(event, 'fs73', 183)" class="i">bs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 184)" onmouseover="showTip(event, 'fs4', 184)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 185)" onmouseover="showTip(event, 'fs49', 185)" class="t">byte</span><span class="o">&gt;</span>) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs74', 186)" onmouseover="showTip(event, 'fs74', 186)" class="i">seq</span> { <span class="k">for</span> <span onmouseout="hideTip(event, 'fs29', 187)" onmouseover="showTip(event, 'fs29', 187)" class="i">i</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs73', 188)" onmouseover="showTip(event, 'fs73', 188)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 189)" onmouseover="showTip(event, 'fs6', 189)" class="i">Offset</span><span class="o">..</span>(<span onmouseout="hideTip(event, 'fs73', 190)" onmouseover="showTip(event, 'fs73', 190)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 191)" onmouseover="showTip(event, 'fs6', 191)" class="i">Offset</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs73', 192)" onmouseover="showTip(event, 'fs73', 192)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 193)" onmouseover="showTip(event, 'fs8', 193)" class="i">Count</span> <span class="o">-</span> <span class="n">1</span>) <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs73', 194)" onmouseover="showTip(event, 'fs73', 194)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 195)" onmouseover="showTip(event, 'fs51', 195)" class="i">Array</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs29', 196)" onmouseover="showTip(event, 'fs29', 196)" class="i">i</span>] }
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs75', 197)" onmouseover="showTip(event, 'fs75', 197)" class="f">toList</span> (<span onmouseout="hideTip(event, 'fs73', 198)" onmouseover="showTip(event, 'fs73', 198)" class="i">bs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 199)" onmouseover="showTip(event, 'fs4', 199)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 200)" onmouseover="showTip(event, 'fs49', 200)" class="t">byte</span><span class="o">&gt;</span>) <span class="o">=</span>
    [ <span class="k">for</span> <span onmouseout="hideTip(event, 'fs29', 201)" onmouseover="showTip(event, 'fs29', 201)" class="i">i</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs73', 202)" onmouseover="showTip(event, 'fs73', 202)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 203)" onmouseover="showTip(event, 'fs6', 203)" class="i">Offset</span><span class="o">..</span>(<span onmouseout="hideTip(event, 'fs73', 204)" onmouseover="showTip(event, 'fs73', 204)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 205)" onmouseover="showTip(event, 'fs6', 205)" class="i">Offset</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs73', 206)" onmouseover="showTip(event, 'fs73', 206)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 207)" onmouseover="showTip(event, 'fs8', 207)" class="i">Count</span> <span class="o">-</span> <span class="n">1</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs73', 208)" onmouseover="showTip(event, 'fs73', 208)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 209)" onmouseover="showTip(event, 'fs51', 209)" class="i">Array</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs29', 210)" onmouseover="showTip(event, 'fs29', 210)" class="i">i</span>] ]
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs76', 211)" onmouseover="showTip(event, 'fs76', 211)" class="f">toString</span> (<span onmouseout="hideTip(event, 'fs73', 212)" onmouseover="showTip(event, 'fs73', 212)" class="i">bs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 213)" onmouseover="showTip(event, 'fs4', 213)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 214)" onmouseover="showTip(event, 'fs49', 214)" class="t">byte</span><span class="o">&gt;</span>) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs40', 215)" onmouseover="showTip(event, 'fs40', 215)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs77', 216)" onmouseover="showTip(event, 'fs77', 216)" class="i">Text</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs78', 217)" onmouseover="showTip(event, 'fs78', 217)" class="t">Encoding</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 218)" onmouseover="showTip(event, 'fs79', 218)" class="i">ASCII</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs80', 219)" onmouseover="showTip(event, 'fs80', 219)" class="f">GetString</span>(<span onmouseout="hideTip(event, 'fs73', 220)" onmouseover="showTip(event, 'fs73', 220)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 221)" onmouseover="showTip(event, 'fs51', 221)" class="i">Array</span>, <span onmouseout="hideTip(event, 'fs73', 222)" onmouseover="showTip(event, 'fs73', 222)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 223)" onmouseover="showTip(event, 'fs6', 223)" class="i">Offset</span>, <span onmouseout="hideTip(event, 'fs73', 224)" onmouseover="showTip(event, 'fs73', 224)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 225)" onmouseover="showTip(event, 'fs8', 225)" class="i">Count</span>)
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs81', 226)" onmouseover="showTip(event, 'fs81', 226)" class="f">isEmpty</span> (<span onmouseout="hideTip(event, 'fs73', 227)" onmouseover="showTip(event, 'fs73', 227)" class="i">bs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 228)" onmouseover="showTip(event, 'fs4', 228)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 229)" onmouseover="showTip(event, 'fs49', 229)" class="t">byte</span><span class="o">&gt;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs82', 230)" onmouseover="showTip(event, 'fs82', 230)" class="t">Contract</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs83', 231)" onmouseover="showTip(event, 'fs83', 231)" class="f">Requires</span>(<span onmouseout="hideTip(event, 'fs73', 232)" onmouseover="showTip(event, 'fs73', 232)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 233)" onmouseover="showTip(event, 'fs8', 233)" class="i">Count</span> <span class="o">&gt;</span><span class="o">=</span> <span class="n">0</span>); <span onmouseout="hideTip(event, 'fs73', 234)" onmouseover="showTip(event, 'fs73', 234)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 235)" onmouseover="showTip(event, 'fs8', 235)" class="i">Count</span> <span class="o">&lt;=</span> <span class="n">0</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs84', 236)" onmouseover="showTip(event, 'fs84', 236)" class="f">length</span> (<span onmouseout="hideTip(event, 'fs73', 237)" onmouseover="showTip(event, 'fs73', 237)" class="i">bs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 238)" onmouseover="showTip(event, 'fs4', 238)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 239)" onmouseover="showTip(event, 'fs49', 239)" class="t">byte</span><span class="o">&gt;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs82', 240)" onmouseover="showTip(event, 'fs82', 240)" class="t">Contract</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs83', 241)" onmouseover="showTip(event, 'fs83', 241)" class="f">Requires</span>(<span onmouseout="hideTip(event, 'fs73', 242)" onmouseover="showTip(event, 'fs73', 242)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 243)" onmouseover="showTip(event, 'fs8', 243)" class="i">Count</span> <span class="o">&gt;</span><span class="o">=</span> <span class="n">0</span>); <span onmouseout="hideTip(event, 'fs73', 244)" onmouseover="showTip(event, 'fs73', 244)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 245)" onmouseover="showTip(event, 'fs8', 245)" class="i">Count</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs85', 246)" onmouseover="showTip(event, 'fs85', 246)" class="f">index</span> (<span onmouseout="hideTip(event, 'fs73', 247)" onmouseover="showTip(event, 'fs73', 247)" class="i">bs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 248)" onmouseover="showTip(event, 'fs4', 248)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 249)" onmouseover="showTip(event, 'fs49', 249)" class="t">byte</span><span class="o">&gt;</span>) <span onmouseout="hideTip(event, 'fs86', 250)" onmouseover="showTip(event, 'fs86', 250)" class="i">pos</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs82', 251)" onmouseover="showTip(event, 'fs82', 251)" class="t">Contract</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs83', 252)" onmouseover="showTip(event, 'fs83', 252)" class="f">Requires</span>(<span onmouseout="hideTip(event, 'fs73', 253)" onmouseover="showTip(event, 'fs73', 253)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 254)" onmouseover="showTip(event, 'fs6', 254)" class="i">Offset</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs86', 255)" onmouseover="showTip(event, 'fs86', 255)" class="i">pos</span> <span class="o">&lt;=</span> <span onmouseout="hideTip(event, 'fs73', 256)" onmouseover="showTip(event, 'fs73', 256)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 257)" onmouseover="showTip(event, 'fs8', 257)" class="i">Count</span>)
    <span onmouseout="hideTip(event, 'fs73', 258)" onmouseover="showTip(event, 'fs73', 258)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 259)" onmouseover="showTip(event, 'fs51', 259)" class="i">Array</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs73', 260)" onmouseover="showTip(event, 'fs73', 260)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 261)" onmouseover="showTip(event, 'fs6', 261)" class="i">Offset</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs86', 262)" onmouseover="showTip(event, 'fs86', 262)" class="i">pos</span>]
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs87', 263)" onmouseover="showTip(event, 'fs87', 263)" class="f">head</span> (<span onmouseout="hideTip(event, 'fs73', 264)" onmouseover="showTip(event, 'fs73', 264)" class="i">bs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 265)" onmouseover="showTip(event, 'fs4', 265)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 266)" onmouseover="showTip(event, 'fs49', 266)" class="t">byte</span><span class="o">&gt;</span>) <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs73', 267)" onmouseover="showTip(event, 'fs73', 267)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 268)" onmouseover="showTip(event, 'fs8', 268)" class="i">Count</span> <span class="o">&lt;=</span> <span class="n">0</span> <span class="k">then</span>
      <span onmouseout="hideTip(event, 'fs88', 269)" onmouseover="showTip(event, 'fs88', 269)" class="f">failwith</span> <span class="s">&quot;Cannot take the head of an empty byte string.&quot;</span>
    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs73', 270)" onmouseover="showTip(event, 'fs73', 270)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 271)" onmouseover="showTip(event, 'fs51', 271)" class="i">Array</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs73', 272)" onmouseover="showTip(event, 'fs73', 272)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 273)" onmouseover="showTip(event, 'fs6', 273)" class="i">Offset</span>]
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs89', 274)" onmouseover="showTip(event, 'fs89', 274)" class="f">tail</span> (<span onmouseout="hideTip(event, 'fs73', 275)" onmouseover="showTip(event, 'fs73', 275)" class="i">bs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 276)" onmouseover="showTip(event, 'fs4', 276)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 277)" onmouseover="showTip(event, 'fs49', 277)" class="t">byte</span><span class="o">&gt;</span>) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs82', 278)" onmouseover="showTip(event, 'fs82', 278)" class="t">Contract</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs83', 279)" onmouseover="showTip(event, 'fs83', 279)" class="f">Requires</span>(<span onmouseout="hideTip(event, 'fs73', 280)" onmouseover="showTip(event, 'fs73', 280)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 281)" onmouseover="showTip(event, 'fs8', 281)" class="i">Count</span> <span class="o">&gt;</span><span class="o">=</span> <span class="n">1</span>)
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs73', 282)" onmouseover="showTip(event, 'fs73', 282)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 283)" onmouseover="showTip(event, 'fs8', 283)" class="i">Count</span> <span class="o">=</span> <span class="n">1</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs52', 284)" onmouseover="showTip(event, 'fs52', 284)" class="i">empty</span>
    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs55', 285)" onmouseover="showTip(event, 'fs55', 285)" class="f">BS</span>(<span onmouseout="hideTip(event, 'fs73', 286)" onmouseover="showTip(event, 'fs73', 286)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 287)" onmouseover="showTip(event, 'fs51', 287)" class="i">Array</span>, <span onmouseout="hideTip(event, 'fs73', 288)" onmouseover="showTip(event, 'fs73', 288)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 289)" onmouseover="showTip(event, 'fs6', 289)" class="i">Offset</span><span class="o">+</span><span class="n">1</span>, <span onmouseout="hideTip(event, 'fs73', 290)" onmouseover="showTip(event, 'fs73', 290)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 291)" onmouseover="showTip(event, 'fs8', 291)" class="i">Count</span><span class="o">-</span><span class="n">1</span>)
  
  <span class="c">/// cons uses Buffer.SetByte and Buffer.BlockCopy for efficient array operations.</span>
  <span class="c">/// Please note that a new array is created and both the head and tail are copied in,</span>
  <span class="c">/// disregarding any additional bytes in the original tail array.</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs90', 292)" onmouseover="showTip(event, 'fs90', 292)" class="f">cons</span> <span onmouseout="hideTip(event, 'fs91', 293)" onmouseover="showTip(event, 'fs91', 293)" class="i">hd</span> (<span onmouseout="hideTip(event, 'fs73', 294)" onmouseover="showTip(event, 'fs73', 294)" class="i">bs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 295)" onmouseover="showTip(event, 'fs4', 295)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 296)" onmouseover="showTip(event, 'fs49', 296)" class="t">byte</span><span class="o">&gt;</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 297)" onmouseover="showTip(event, 'fs48', 297)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs18', 298)" onmouseover="showTip(event, 'fs18', 298)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs19', 299)" onmouseover="showTip(event, 'fs19', 299)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs73', 300)" onmouseover="showTip(event, 'fs73', 300)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 301)" onmouseover="showTip(event, 'fs51', 301)" class="i">Array</span>, <span onmouseout="hideTip(event, 'fs73', 302)" onmouseover="showTip(event, 'fs73', 302)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 303)" onmouseover="showTip(event, 'fs6', 303)" class="i">Offset</span>, <span onmouseout="hideTip(event, 'fs73', 304)" onmouseover="showTip(event, 'fs73', 304)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 305)" onmouseover="showTip(event, 'fs8', 305)" class="i">Count</span> <span class="k">in</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs19', 306)" onmouseover="showTip(event, 'fs19', 306)" class="i">l</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs53', 307)" onmouseover="showTip(event, 'fs53', 307)" class="f">singleton</span> <span onmouseout="hideTip(event, 'fs91', 308)" onmouseover="showTip(event, 'fs91', 308)" class="i">hd</span>
    <span class="k">else</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs92', 309)" onmouseover="showTip(event, 'fs92', 309)" class="i">buffer</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 310)" onmouseover="showTip(event, 'fs10', 310)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs93', 311)" onmouseover="showTip(event, 'fs93', 311)" class="f">init</span> (<span onmouseout="hideTip(event, 'fs19', 312)" onmouseover="showTip(event, 'fs19', 312)" class="i">l</span> <span class="o">+</span> <span class="n">1</span>) <span onmouseout="hideTip(event, 'fs49', 313)" onmouseover="showTip(event, 'fs49', 313)" class="f">byte</span>
         <span onmouseout="hideTip(event, 'fs94', 314)" onmouseover="showTip(event, 'fs94', 314)" class="t">Buffer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs95', 315)" onmouseover="showTip(event, 'fs95', 315)" class="f">SetByte</span>(<span onmouseout="hideTip(event, 'fs92', 316)" onmouseover="showTip(event, 'fs92', 316)" class="i">buffer</span>,<span class="n">0</span>,<span onmouseout="hideTip(event, 'fs91', 317)" onmouseover="showTip(event, 'fs91', 317)" class="i">hd</span>)
         <span onmouseout="hideTip(event, 'fs94', 318)" onmouseover="showTip(event, 'fs94', 318)" class="t">Buffer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs96', 319)" onmouseover="showTip(event, 'fs96', 319)" class="f">BlockCopy</span>(<span onmouseout="hideTip(event, 'fs48', 320)" onmouseover="showTip(event, 'fs48', 320)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs18', 321)" onmouseover="showTip(event, 'fs18', 321)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs92', 322)" onmouseover="showTip(event, 'fs92', 322)" class="i">buffer</span>,<span class="n">1</span>,<span onmouseout="hideTip(event, 'fs19', 323)" onmouseover="showTip(event, 'fs19', 323)" class="i">l</span>)
         <span onmouseout="hideTip(event, 'fs55', 324)" onmouseover="showTip(event, 'fs55', 324)" class="f">BS</span>(<span onmouseout="hideTip(event, 'fs92', 325)" onmouseover="showTip(event, 'fs92', 325)" class="i">buffer</span>,<span class="n">0</span>,<span onmouseout="hideTip(event, 'fs19', 326)" onmouseover="showTip(event, 'fs19', 326)" class="i">l</span><span class="o">+</span><span class="n">1</span>)
  
  <span class="c">/// append uses Buffer.BlockCopy for efficient array operations.</span>
  <span class="c">/// Please note that a new array is created and both arrays are copied in,</span>
  <span class="c">/// disregarding any additional bytes in the original, underlying arrays.</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs97', 327)" onmouseover="showTip(event, 'fs97', 327)" class="f">append</span> <span onmouseout="hideTip(event, 'fs98', 328)" onmouseover="showTip(event, 'fs98', 328)" class="i">a</span> <span onmouseout="hideTip(event, 'fs99', 329)" onmouseover="showTip(event, 'fs99', 329)" class="i">b</span> <span class="o">=</span> 
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs81', 330)" onmouseover="showTip(event, 'fs81', 330)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs98', 331)" onmouseover="showTip(event, 'fs98', 331)" class="i">a</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs99', 332)" onmouseover="showTip(event, 'fs99', 332)" class="i">b</span>
    <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs81', 333)" onmouseover="showTip(event, 'fs81', 333)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs99', 334)" onmouseover="showTip(event, 'fs99', 334)" class="i">b</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs98', 335)" onmouseover="showTip(event, 'fs98', 335)" class="i">a</span>
    <span class="k">else</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 336)" onmouseover="showTip(event, 'fs48', 336)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs18', 337)" onmouseover="showTip(event, 'fs18', 337)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs19', 338)" onmouseover="showTip(event, 'fs19', 338)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs98', 339)" onmouseover="showTip(event, 'fs98', 339)" class="i">a</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 340)" onmouseover="showTip(event, 'fs51', 340)" class="i">Array</span>, <span onmouseout="hideTip(event, 'fs98', 341)" onmouseover="showTip(event, 'fs98', 341)" class="i">a</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 342)" onmouseover="showTip(event, 'fs6', 342)" class="i">Offset</span>, <span onmouseout="hideTip(event, 'fs98', 343)" onmouseover="showTip(event, 'fs98', 343)" class="i">a</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 344)" onmouseover="showTip(event, 'fs8', 344)" class="i">Count</span>
         <span class="k">let</span> <span onmouseout="hideTip(event, 'fs100', 345)" onmouseover="showTip(event, 'fs100', 345)" class="i">x&#39;</span>,<span onmouseout="hideTip(event, 'fs22', 346)" onmouseover="showTip(event, 'fs22', 346)" class="i">o&#39;</span>,<span onmouseout="hideTip(event, 'fs23', 347)" onmouseover="showTip(event, 'fs23', 347)" class="i">l&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs99', 348)" onmouseover="showTip(event, 'fs99', 348)" class="i">b</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 349)" onmouseover="showTip(event, 'fs51', 349)" class="i">Array</span>, <span onmouseout="hideTip(event, 'fs99', 350)" onmouseover="showTip(event, 'fs99', 350)" class="i">b</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 351)" onmouseover="showTip(event, 'fs6', 351)" class="i">Offset</span>, <span onmouseout="hideTip(event, 'fs99', 352)" onmouseover="showTip(event, 'fs99', 352)" class="i">b</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 353)" onmouseover="showTip(event, 'fs8', 353)" class="i">Count</span>
         <span class="k">let</span> <span onmouseout="hideTip(event, 'fs92', 354)" onmouseover="showTip(event, 'fs92', 354)" class="i">buffer</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 355)" onmouseover="showTip(event, 'fs10', 355)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs93', 356)" onmouseover="showTip(event, 'fs93', 356)" class="f">init</span> (<span onmouseout="hideTip(event, 'fs19', 357)" onmouseover="showTip(event, 'fs19', 357)" class="i">l</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs23', 358)" onmouseover="showTip(event, 'fs23', 358)" class="i">l&#39;</span>) <span onmouseout="hideTip(event, 'fs49', 359)" onmouseover="showTip(event, 'fs49', 359)" class="f">byte</span>
         <span onmouseout="hideTip(event, 'fs94', 360)" onmouseover="showTip(event, 'fs94', 360)" class="t">Buffer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs96', 361)" onmouseover="showTip(event, 'fs96', 361)" class="f">BlockCopy</span>(<span onmouseout="hideTip(event, 'fs48', 362)" onmouseover="showTip(event, 'fs48', 362)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs18', 363)" onmouseover="showTip(event, 'fs18', 363)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs92', 364)" onmouseover="showTip(event, 'fs92', 364)" class="i">buffer</span>,<span class="n">0</span>,<span onmouseout="hideTip(event, 'fs19', 365)" onmouseover="showTip(event, 'fs19', 365)" class="i">l</span>)
         <span onmouseout="hideTip(event, 'fs94', 366)" onmouseover="showTip(event, 'fs94', 366)" class="t">Buffer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs96', 367)" onmouseover="showTip(event, 'fs96', 367)" class="f">BlockCopy</span>(<span onmouseout="hideTip(event, 'fs100', 368)" onmouseover="showTip(event, 'fs100', 368)" class="i">x&#39;</span>,<span onmouseout="hideTip(event, 'fs22', 369)" onmouseover="showTip(event, 'fs22', 369)" class="i">o&#39;</span>,<span onmouseout="hideTip(event, 'fs92', 370)" onmouseover="showTip(event, 'fs92', 370)" class="i">buffer</span>,<span onmouseout="hideTip(event, 'fs19', 371)" onmouseover="showTip(event, 'fs19', 371)" class="i">l</span>,<span onmouseout="hideTip(event, 'fs23', 372)" onmouseover="showTip(event, 'fs23', 372)" class="i">l&#39;</span>)
         <span onmouseout="hideTip(event, 'fs55', 373)" onmouseover="showTip(event, 'fs55', 373)" class="f">BS</span>(<span onmouseout="hideTip(event, 'fs92', 374)" onmouseover="showTip(event, 'fs92', 374)" class="i">buffer</span>,<span class="n">0</span>,<span onmouseout="hideTip(event, 'fs19', 375)" onmouseover="showTip(event, 'fs19', 375)" class="i">l</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs23', 376)" onmouseover="showTip(event, 'fs23', 376)" class="i">l&#39;</span>)
  
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs101', 377)" onmouseover="showTip(event, 'fs101', 377)" class="f">fold</span> <span onmouseout="hideTip(event, 'fs102', 378)" onmouseover="showTip(event, 'fs102', 378)" class="f">f</span> <span onmouseout="hideTip(event, 'fs103', 379)" onmouseover="showTip(event, 'fs103', 379)" class="i">seed</span> <span onmouseout="hideTip(event, 'fs73', 380)" onmouseover="showTip(event, 'fs73', 380)" class="i">bs</span> <span class="o">=</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs104', 381)" onmouseover="showTip(event, 'fs104', 381)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs73', 382)" onmouseover="showTip(event, 'fs73', 382)" class="i">bs</span> <span onmouseout="hideTip(event, 'fs105', 383)" onmouseover="showTip(event, 'fs105', 383)" class="i">acc</span> <span class="o">=</span>
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs81', 384)" onmouseover="showTip(event, 'fs81', 384)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs73', 385)" onmouseover="showTip(event, 'fs73', 385)" class="i">bs</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs105', 386)" onmouseover="showTip(event, 'fs105', 386)" class="i">acc</span> 
      <span class="k">else</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs91', 387)" onmouseover="showTip(event, 'fs91', 387)" class="i">hd</span>, <span onmouseout="hideTip(event, 'fs106', 388)" onmouseover="showTip(event, 'fs106', 388)" class="i">tl</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs87', 389)" onmouseover="showTip(event, 'fs87', 389)" class="f">head</span> <span onmouseout="hideTip(event, 'fs73', 390)" onmouseover="showTip(event, 'fs73', 390)" class="i">bs</span>, <span onmouseout="hideTip(event, 'fs89', 391)" onmouseover="showTip(event, 'fs89', 391)" class="f">tail</span> <span onmouseout="hideTip(event, 'fs73', 392)" onmouseover="showTip(event, 'fs73', 392)" class="i">bs</span>
        <span onmouseout="hideTip(event, 'fs104', 393)" onmouseover="showTip(event, 'fs104', 393)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs106', 394)" onmouseover="showTip(event, 'fs106', 394)" class="i">tl</span> (<span onmouseout="hideTip(event, 'fs102', 395)" onmouseover="showTip(event, 'fs102', 395)" class="f">f</span> <span onmouseout="hideTip(event, 'fs105', 396)" onmouseover="showTip(event, 'fs105', 396)" class="i">acc</span> <span onmouseout="hideTip(event, 'fs91', 397)" onmouseover="showTip(event, 'fs91', 397)" class="i">hd</span>)
    <span onmouseout="hideTip(event, 'fs104', 398)" onmouseover="showTip(event, 'fs104', 398)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs73', 399)" onmouseover="showTip(event, 'fs73', 399)" class="i">bs</span> <span onmouseout="hideTip(event, 'fs103', 400)" onmouseover="showTip(event, 'fs103', 400)" class="i">seed</span>

  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs107', 401)" onmouseover="showTip(event, 'fs107', 401)" class="f">span</span> <span onmouseout="hideTip(event, 'fs108', 402)" onmouseover="showTip(event, 'fs108', 402)" class="f">pred</span> (<span onmouseout="hideTip(event, 'fs73', 403)" onmouseover="showTip(event, 'fs73', 403)" class="i">bs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 404)" onmouseover="showTip(event, 'fs4', 404)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 405)" onmouseover="showTip(event, 'fs49', 405)" class="t">byte</span><span class="o">&gt;</span>) <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs81', 406)" onmouseover="showTip(event, 'fs81', 406)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs73', 407)" onmouseover="showTip(event, 'fs73', 407)" class="i">bs</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs52', 408)" onmouseover="showTip(event, 'fs52', 408)" class="i">empty</span>, <span onmouseout="hideTip(event, 'fs52', 409)" onmouseover="showTip(event, 'fs52', 409)" class="i">empty</span>
    <span class="k">else</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 410)" onmouseover="showTip(event, 'fs48', 410)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs18', 411)" onmouseover="showTip(event, 'fs18', 411)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs19', 412)" onmouseover="showTip(event, 'fs19', 412)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs73', 413)" onmouseover="showTip(event, 'fs73', 413)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 414)" onmouseover="showTip(event, 'fs51', 414)" class="i">Array</span>, <span onmouseout="hideTip(event, 'fs73', 415)" onmouseover="showTip(event, 'fs73', 415)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 416)" onmouseover="showTip(event, 'fs6', 416)" class="i">Offset</span>, <span onmouseout="hideTip(event, 'fs73', 417)" onmouseover="showTip(event, 'fs73', 417)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 418)" onmouseover="showTip(event, 'fs8', 418)" class="i">Count</span>
      <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs109', 419)" onmouseover="showTip(event, 'fs109', 419)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs110', 420)" onmouseover="showTip(event, 'fs110', 420)" class="i">acc</span> <span class="o">=</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs19', 421)" onmouseover="showTip(event, 'fs19', 421)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs110', 422)" onmouseover="showTip(event, 'fs110', 422)" class="i">acc</span> <span class="o">+</span> <span class="n">1</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs108', 423)" onmouseover="showTip(event, 'fs108', 423)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs48', 424)" onmouseover="showTip(event, 'fs48', 424)" class="i">x</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs18', 425)" onmouseover="showTip(event, 'fs18', 425)" class="i">o</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs110', 426)" onmouseover="showTip(event, 'fs110', 426)" class="i">acc</span>] <span class="k">then</span> <span onmouseout="hideTip(event, 'fs73', 427)" onmouseover="showTip(event, 'fs73', 427)" class="i">bs</span>, <span onmouseout="hideTip(event, 'fs52', 428)" onmouseover="showTip(event, 'fs52', 428)" class="i">empty</span>
        <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs111', 429)" onmouseover="showTip(event, 'fs111', 429)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs108', 430)" onmouseover="showTip(event, 'fs108', 430)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs48', 431)" onmouseover="showTip(event, 'fs48', 431)" class="i">x</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs18', 432)" onmouseover="showTip(event, 'fs18', 432)" class="i">o</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs110', 433)" onmouseover="showTip(event, 'fs110', 433)" class="i">acc</span>]) <span class="k">then</span> <span onmouseout="hideTip(event, 'fs55', 434)" onmouseover="showTip(event, 'fs55', 434)" class="f">BS</span>(<span onmouseout="hideTip(event, 'fs48', 435)" onmouseover="showTip(event, 'fs48', 435)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs18', 436)" onmouseover="showTip(event, 'fs18', 436)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs110', 437)" onmouseover="showTip(event, 'fs110', 437)" class="i">acc</span>), <span onmouseout="hideTip(event, 'fs55', 438)" onmouseover="showTip(event, 'fs55', 438)" class="f">BS</span>(<span onmouseout="hideTip(event, 'fs48', 439)" onmouseover="showTip(event, 'fs48', 439)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs18', 440)" onmouseover="showTip(event, 'fs18', 440)" class="i">o</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs110', 441)" onmouseover="showTip(event, 'fs110', 441)" class="i">acc</span>,<span onmouseout="hideTip(event, 'fs19', 442)" onmouseover="showTip(event, 'fs19', 442)" class="i">l</span><span class="o">-</span><span onmouseout="hideTip(event, 'fs110', 443)" onmouseover="showTip(event, 'fs110', 443)" class="i">acc</span>)
        <span class="k">else</span> <span onmouseout="hideTip(event, 'fs109', 444)" onmouseover="showTip(event, 'fs109', 444)" class="f">loop</span> (<span onmouseout="hideTip(event, 'fs110', 445)" onmouseover="showTip(event, 'fs110', 445)" class="i">acc</span><span class="o">+</span><span class="n">1</span>)
      <span onmouseout="hideTip(event, 'fs109', 446)" onmouseover="showTip(event, 'fs109', 446)" class="f">loop</span> <span class="n">0</span>
  
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs112', 447)" onmouseover="showTip(event, 'fs112', 447)" class="f">split</span> <span onmouseout="hideTip(event, 'fs108', 448)" onmouseover="showTip(event, 'fs108', 448)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs73', 449)" onmouseover="showTip(event, 'fs73', 449)" class="i">bs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs107', 450)" onmouseover="showTip(event, 'fs107', 450)" class="f">span</span> (<span onmouseout="hideTip(event, 'fs111', 451)" onmouseover="showTip(event, 'fs111', 451)" class="f">not</span> <span class="o">&lt;&lt;</span> <span onmouseout="hideTip(event, 'fs108', 452)" onmouseover="showTip(event, 'fs108', 452)" class="f">pred</span>) <span onmouseout="hideTip(event, 'fs73', 453)" onmouseover="showTip(event, 'fs73', 453)" class="i">bs</span>
  
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs113', 454)" onmouseover="showTip(event, 'fs113', 454)" class="f">splitAt</span> <span onmouseout="hideTip(event, 'fs114', 455)" onmouseover="showTip(event, 'fs114', 455)" class="i">n</span> (<span onmouseout="hideTip(event, 'fs73', 456)" onmouseover="showTip(event, 'fs73', 456)" class="i">bs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 457)" onmouseover="showTip(event, 'fs4', 457)" class="t">ArraySegment</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs49', 458)" onmouseover="showTip(event, 'fs49', 458)" class="t">byte</span><span class="o">&gt;</span>) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs82', 459)" onmouseover="showTip(event, 'fs82', 459)" class="t">Contract</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs83', 460)" onmouseover="showTip(event, 'fs83', 460)" class="f">Requires</span>(<span onmouseout="hideTip(event, 'fs114', 461)" onmouseover="showTip(event, 'fs114', 461)" class="i">n</span> <span class="o">&gt;</span><span class="o">=</span> <span class="n">0</span>)
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs81', 462)" onmouseover="showTip(event, 'fs81', 462)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs73', 463)" onmouseover="showTip(event, 'fs73', 463)" class="i">bs</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs52', 464)" onmouseover="showTip(event, 'fs52', 464)" class="i">empty</span>, <span onmouseout="hideTip(event, 'fs52', 465)" onmouseover="showTip(event, 'fs52', 465)" class="i">empty</span>
    <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs114', 466)" onmouseover="showTip(event, 'fs114', 466)" class="i">n</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs52', 467)" onmouseover="showTip(event, 'fs52', 467)" class="i">empty</span>, <span onmouseout="hideTip(event, 'fs73', 468)" onmouseover="showTip(event, 'fs73', 468)" class="i">bs</span>
    <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs114', 469)" onmouseover="showTip(event, 'fs114', 469)" class="i">n</span> <span class="o">&gt;</span><span class="o">=</span> <span onmouseout="hideTip(event, 'fs73', 470)" onmouseover="showTip(event, 'fs73', 470)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 471)" onmouseover="showTip(event, 'fs8', 471)" class="i">Count</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs73', 472)" onmouseover="showTip(event, 'fs73', 472)" class="i">bs</span>, <span onmouseout="hideTip(event, 'fs52', 473)" onmouseover="showTip(event, 'fs52', 473)" class="i">empty</span>
    <span class="k">else</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 474)" onmouseover="showTip(event, 'fs48', 474)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs18', 475)" onmouseover="showTip(event, 'fs18', 475)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs19', 476)" onmouseover="showTip(event, 'fs19', 476)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs73', 477)" onmouseover="showTip(event, 'fs73', 477)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 478)" onmouseover="showTip(event, 'fs51', 478)" class="i">Array</span>, <span onmouseout="hideTip(event, 'fs73', 479)" onmouseover="showTip(event, 'fs73', 479)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 480)" onmouseover="showTip(event, 'fs6', 480)" class="i">Offset</span>, <span onmouseout="hideTip(event, 'fs73', 481)" onmouseover="showTip(event, 'fs73', 481)" class="i">bs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 482)" onmouseover="showTip(event, 'fs8', 482)" class="i">Count</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs55', 483)" onmouseover="showTip(event, 'fs55', 483)" class="f">BS</span>(<span onmouseout="hideTip(event, 'fs48', 484)" onmouseover="showTip(event, 'fs48', 484)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs18', 485)" onmouseover="showTip(event, 'fs18', 485)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs114', 486)" onmouseover="showTip(event, 'fs114', 486)" class="i">n</span>), <span onmouseout="hideTip(event, 'fs55', 487)" onmouseover="showTip(event, 'fs55', 487)" class="f">BS</span>(<span onmouseout="hideTip(event, 'fs48', 488)" onmouseover="showTip(event, 'fs48', 488)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs18', 489)" onmouseover="showTip(event, 'fs18', 489)" class="i">o</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs114', 490)" onmouseover="showTip(event, 'fs114', 490)" class="i">n</span>,<span onmouseout="hideTip(event, 'fs19', 491)" onmouseover="showTip(event, 'fs19', 491)" class="i">l</span><span class="o">-</span><span onmouseout="hideTip(event, 'fs114', 492)" onmouseover="showTip(event, 'fs114', 492)" class="i">n</span>)
  
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs115', 493)" onmouseover="showTip(event, 'fs115', 493)" class="f">skip</span> <span onmouseout="hideTip(event, 'fs114', 494)" onmouseover="showTip(event, 'fs114', 494)" class="i">n</span> <span onmouseout="hideTip(event, 'fs73', 495)" onmouseover="showTip(event, 'fs73', 495)" class="i">bs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs113', 496)" onmouseover="showTip(event, 'fs113', 496)" class="f">splitAt</span> <span onmouseout="hideTip(event, 'fs114', 497)" onmouseover="showTip(event, 'fs114', 497)" class="i">n</span> <span onmouseout="hideTip(event, 'fs73', 498)" onmouseover="showTip(event, 'fs73', 498)" class="i">bs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs116', 499)" onmouseover="showTip(event, 'fs116', 499)" class="f">snd</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs117', 500)" onmouseover="showTip(event, 'fs117', 500)" class="f">skipWhile</span> <span onmouseout="hideTip(event, 'fs108', 501)" onmouseover="showTip(event, 'fs108', 501)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs73', 502)" onmouseover="showTip(event, 'fs73', 502)" class="i">bs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs107', 503)" onmouseover="showTip(event, 'fs107', 503)" class="f">span</span> <span onmouseout="hideTip(event, 'fs108', 504)" onmouseover="showTip(event, 'fs108', 504)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs73', 505)" onmouseover="showTip(event, 'fs73', 505)" class="i">bs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs116', 506)" onmouseover="showTip(event, 'fs116', 506)" class="f">snd</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs118', 507)" onmouseover="showTip(event, 'fs118', 507)" class="f">skipUntil</span> <span onmouseout="hideTip(event, 'fs108', 508)" onmouseover="showTip(event, 'fs108', 508)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs73', 509)" onmouseover="showTip(event, 'fs73', 509)" class="i">bs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs112', 510)" onmouseover="showTip(event, 'fs112', 510)" class="f">split</span> <span onmouseout="hideTip(event, 'fs108', 511)" onmouseover="showTip(event, 'fs108', 511)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs73', 512)" onmouseover="showTip(event, 'fs73', 512)" class="i">bs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs116', 513)" onmouseover="showTip(event, 'fs116', 513)" class="f">snd</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs119', 514)" onmouseover="showTip(event, 'fs119', 514)" class="f">take</span> <span onmouseout="hideTip(event, 'fs114', 515)" onmouseover="showTip(event, 'fs114', 515)" class="i">n</span> <span onmouseout="hideTip(event, 'fs73', 516)" onmouseover="showTip(event, 'fs73', 516)" class="i">bs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs113', 517)" onmouseover="showTip(event, 'fs113', 517)" class="f">splitAt</span> <span onmouseout="hideTip(event, 'fs114', 518)" onmouseover="showTip(event, 'fs114', 518)" class="i">n</span> <span onmouseout="hideTip(event, 'fs73', 519)" onmouseover="showTip(event, 'fs73', 519)" class="i">bs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs120', 520)" onmouseover="showTip(event, 'fs120', 520)" class="f">fst</span> 
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs121', 521)" onmouseover="showTip(event, 'fs121', 521)" class="f">takeWhile</span> <span onmouseout="hideTip(event, 'fs108', 522)" onmouseover="showTip(event, 'fs108', 522)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs73', 523)" onmouseover="showTip(event, 'fs73', 523)" class="i">bs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs107', 524)" onmouseover="showTip(event, 'fs107', 524)" class="f">span</span> <span onmouseout="hideTip(event, 'fs108', 525)" onmouseover="showTip(event, 'fs108', 525)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs73', 526)" onmouseover="showTip(event, 'fs73', 526)" class="i">bs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs120', 527)" onmouseover="showTip(event, 'fs120', 527)" class="f">fst</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs122', 528)" onmouseover="showTip(event, 'fs122', 528)" class="f">takeUntil</span> <span onmouseout="hideTip(event, 'fs108', 529)" onmouseover="showTip(event, 'fs108', 529)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs73', 530)" onmouseover="showTip(event, 'fs73', 530)" class="i">bs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs112', 531)" onmouseover="showTip(event, 'fs112', 531)" class="f">split</span> <span onmouseout="hideTip(event, 'fs108', 532)" onmouseover="showTip(event, 'fs108', 532)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs73', 533)" onmouseover="showTip(event, 'fs73', 533)" class="i">bs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs120', 534)" onmouseover="showTip(event, 'fs120', 534)" class="f">fst</span> 
</code></pre></td>
</tr>
</table>
<h2><a name="Tests" class="anchor" href="#Tests">Tests</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs40', 535)" onmouseover="showTip(event, 'fs40', 535)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs123', 536)" onmouseover="showTip(event, 'fs123', 536)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs124', 537)" onmouseover="showTip(event, 'fs124', 537)" class="i">Collections</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs123', 538)" onmouseover="showTip(event, 'fs123', 538)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs124', 539)" onmouseover="showTip(event, 'fs124', 539)" class="i">Collections</span><span class="o">.</span><span class="i">ByteString</span>
<span class="k">open</span> <span class="i">NUnit</span><span class="o">.</span><span class="i">Framework</span>
<span class="k">open</span> <span class="i">FsUnit</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span class="i">``test ByteString_length should return the length of the byte string``</span>() <span class="o">=</span>
  <span class="k">let</span> <span class="i">input</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs57', 540)" onmouseover="showTip(event, 'fs57', 540)" class="i">create</span> <span class="s">&quot;Hello, world!&quot;B</span>
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">length</span> <span class="i">input</span>
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="n">13</span>

<span class="k">let</span> <span class="i">spanAndSplitTests</span> <span class="o">=</span> [|
  [| <span onmouseout="hideTip(event, 'fs125', 541)" onmouseover="showTip(event, 'fs125', 541)" class="i">box</span> <span class="s">&quot;Howdy! Want to play?&quot;B</span>; <span onmouseout="hideTip(event, 'fs125', 542)" onmouseover="showTip(event, 'fs125', 542)" class="i">box</span> <span class="n">&#39; &#39;B</span>; <span onmouseout="hideTip(event, 'fs125', 543)" onmouseover="showTip(event, 'fs125', 543)" class="i">box</span> <span class="n">6</span> |]
  [| <span onmouseout="hideTip(event, 'fs125', 544)" onmouseover="showTip(event, 'fs125', 544)" class="i">box</span> <span class="s">&quot;Howdy! Want to play?&quot;B</span>; <span onmouseout="hideTip(event, 'fs125', 545)" onmouseover="showTip(event, 'fs125', 545)" class="i">box</span> <span class="n">&#39;?&#39;B</span>; <span onmouseout="hideTip(event, 'fs125', 546)" onmouseover="showTip(event, 'fs125', 546)" class="i">box</span> <span class="n">19</span> |]
  [| <span onmouseout="hideTip(event, 'fs125', 547)" onmouseover="showTip(event, 'fs125', 547)" class="i">box</span> <span class="s">&quot;Howdy! Want to play?&quot;B</span>; <span onmouseout="hideTip(event, 'fs125', 548)" onmouseover="showTip(event, 'fs125', 548)" class="i">box</span> <span class="n">&#39;\r&#39;B</span>; <span onmouseout="hideTip(event, 'fs125', 549)" onmouseover="showTip(event, 'fs125', 549)" class="i">box</span> <span class="n">20</span> |]
|]

[&lt;<span class="i">Test</span>&gt;]
[&lt;<span class="i">TestCaseSource</span>(<span class="s">&quot;spanAndSplitTests&quot;</span>)&gt;]
<span class="k">let</span> <span class="i">``test ByteString_span correctly breaks the ByteString on the specified predicate``</span>(<span class="i">input</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs49', 550)" onmouseover="showTip(event, 'fs49', 550)" class="i">byte</span> [], <span class="i">breakChar</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs49', 551)" onmouseover="showTip(event, 'fs49', 551)" class="i">byte</span>, <span class="i">breakIndex</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs7', 552)" onmouseover="showTip(event, 'fs7', 552)" class="i">int</span>) <span class="o">=</span>
  <span class="k">let</span> <span class="i">str</span> <span class="o">=</span> <span class="i">create</span> <span class="i">input</span>
  <span class="k">let</span> <span class="i">expected</span> <span class="o">=</span> <span class="k">if</span> <span class="i">input</span><span class="o">.</span><span class="i">Length</span> <span class="o">=</span> <span class="i">breakIndex</span> <span class="k">then</span> <span class="i">str</span>, <span class="i">empty</span>
                 <span class="k">else</span> <span class="i">BS</span>(<span class="i">input</span>, <span class="n">0</span>, <span class="i">breakIndex</span>), <span class="i">BS</span>(<span class="i">input</span>, <span class="i">breakIndex</span>, <span class="i">input</span><span class="o">.</span><span class="i">Length</span> <span class="o">-</span> <span class="i">breakIndex</span>)
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">span</span> ((<span class="o">&lt;&gt;</span>) <span class="i">breakChar</span>) <span class="i">str</span>
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="i">expected</span>

[&lt;<span class="i">Test</span>&gt;]
[&lt;<span class="i">TestCaseSource</span>(<span class="s">&quot;spanAndSplitTests&quot;</span>)&gt;]
<span class="k">let</span> <span class="i">``test ByteString_split correctly breaks the ByteString on the specified predicate``</span>(<span class="i">input</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs49', 553)" onmouseover="showTip(event, 'fs49', 553)" class="i">byte</span> [], <span class="i">breakChar</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs49', 554)" onmouseover="showTip(event, 'fs49', 554)" class="i">byte</span>, <span class="i">breakIndex</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs7', 555)" onmouseover="showTip(event, 'fs7', 555)" class="i">int</span>) <span class="o">=</span>
  <span class="k">let</span> <span class="i">str</span> <span class="o">=</span> <span class="i">create</span> <span class="i">input</span>
  <span class="k">let</span> <span class="i">expected</span> <span class="o">=</span> <span class="k">if</span> <span class="i">input</span><span class="o">.</span><span class="i">Length</span> <span class="o">=</span> <span class="i">breakIndex</span> <span class="k">then</span> <span class="i">str</span>, <span class="i">empty</span>
                 <span class="k">else</span> <span class="i">BS</span>(<span class="i">input</span>, <span class="n">0</span>, <span class="i">breakIndex</span>), <span class="i">BS</span>(<span class="i">input</span>, <span class="i">breakIndex</span>, <span class="i">input</span><span class="o">.</span><span class="i">Length</span> <span class="o">-</span> <span class="i">breakIndex</span>)
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">split</span> ((<span class="o">=</span>) <span class="i">breakChar</span>) <span class="i">str</span>
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="i">expected</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span class="i">``test ByteString_span correctly breaks the ByteString on \r``</span>() <span class="o">=</span>
  <span class="k">let</span> <span class="i">input</span> <span class="o">=</span> <span class="s">&quot;test\r\ntest&quot;B</span>
  <span class="k">let</span> <span class="i">str</span> <span class="o">=</span> <span class="i">create</span> <span class="i">input</span>
  <span class="k">let</span> <span class="i">expected</span> <span class="o">=</span> <span class="i">BS</span>(<span class="i">input</span>, <span class="n">0</span>, <span class="n">4</span>), <span class="i">BS</span>(<span class="i">input</span>, <span class="n">4</span>, <span class="n">6</span>)
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">span</span> (<span class="k">fun</span> <span class="i">c</span> <span class="k">-&gt;</span> <span class="i">c</span> <span class="o">&lt;&gt;</span> <span class="n">&#39;\r&#39;B</span> <span class="o">&amp;&amp;</span> <span class="i">c</span> <span class="o">&lt;&gt;</span> <span class="n">&#39;\n&#39;B</span>) <span class="i">str</span>
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="i">expected</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span class="i">``test ByteString_split correctly breaks the ByteString on \r``</span>() <span class="o">=</span>
  <span class="k">let</span> <span class="i">input</span> <span class="o">=</span> <span class="s">&quot;test\r\ntest&quot;B</span>
  <span class="k">let</span> <span class="i">str</span> <span class="o">=</span> <span class="i">create</span> <span class="i">input</span>
  <span class="k">let</span> <span class="i">expected</span> <span class="o">=</span> <span class="i">BS</span>(<span class="i">input</span>, <span class="n">0</span>, <span class="n">4</span>), <span class="i">BS</span>(<span class="i">input</span>, <span class="n">4</span>, <span class="n">6</span>)
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">split</span> (<span class="k">fun</span> <span class="i">c</span> <span class="k">-&gt;</span> <span class="i">c</span> <span class="o">=</span> <span class="n">&#39;\r&#39;B</span> <span class="o">||</span> <span class="i">c</span> <span class="o">=</span> <span class="n">&#39;\n&#39;B</span>) <span class="i">str</span>
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="i">expected</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span class="i">``test ByteString_splitAt correctly breaks the ByteString on the specified index``</span>() <span class="o">=</span>
  <span class="k">let</span> <span class="i">input</span> <span class="o">=</span> <span class="s">&quot;Howdy! Want to play?&quot;B</span>
  <span class="k">let</span> <span class="i">str</span> <span class="o">=</span> <span class="i">create</span> <span class="i">input</span>
  <span class="k">let</span> <span class="i">expected</span> <span class="o">=</span> <span class="i">BS</span>(<span class="i">input</span>, <span class="n">0</span>, <span class="n">6</span>), <span class="i">BS</span>(<span class="i">input</span>, <span class="n">6</span>, <span class="n">14</span>)
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">splitAt</span> <span class="n">6</span> <span class="i">str</span>
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="i">expected</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span class="i">``test ByteString_fold should concatenate bytes into a string``</span>() <span class="o">=</span>
  <span class="i">create</span> <span class="s">&quot;Howdy&quot;B</span>
  <span class="o">|&gt;</span> <span class="i">fold</span> (<span class="k">fun</span> <span class="i">a</span> <span class="i">b</span> <span class="k">-&gt;</span> <span class="i">a</span> <span class="o">+</span> (<span onmouseout="hideTip(event, 'fs126', 556)" onmouseover="showTip(event, 'fs126', 556)" class="i">char</span> <span class="i">b</span>)<span class="o">.</span><span class="i">ToString</span>()) <span class="s">&quot;&quot;</span>
  <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="s">&quot;Howdy&quot;</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span class="i">``test ByteString_take correctly truncates the ByteString at the selected index``</span>() <span class="o">=</span>
  <span class="k">let</span> <span class="i">input</span> <span class="o">=</span> <span class="s">&quot;Howdy! Want to play?&quot;B</span>
  <span class="k">let</span> <span class="i">str</span> <span class="o">=</span> <span class="i">create</span> <span class="i">input</span>
  <span class="k">let</span> <span class="i">expected</span> <span class="o">=</span> <span class="i">BS</span>(<span class="i">input</span>, <span class="n">0</span>, <span class="n">6</span>)
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">take</span> <span class="n">6</span> <span class="i">str</span>
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="i">expected</span>

[&lt;<span class="i">Test</span>&gt;]
[&lt;<span class="i">Sequential</span>&gt;]
<span class="k">let</span> <span class="i">``test drop should drop the first n items``</span>([&lt;<span class="i">Values</span>(<span class="n">0</span>,<span class="n">1</span>,<span class="n">2</span>,<span class="n">3</span>,<span class="n">4</span>,<span class="n">5</span>,<span class="n">6</span>,<span class="n">7</span>,<span class="n">8</span>,<span class="n">9</span>)&gt;] <span class="i">x</span>) <span class="o">=</span>
  <span class="k">let</span> <span class="i">input</span> <span class="o">=</span> <span class="s">&quot;Howdy! Want to play?&quot;B</span>
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">skip</span> <span class="n">7</span> (<span class="i">create</span> <span class="i">input</span>)
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> (<span class="i">BS</span>(<span class="i">input</span>,<span class="n">7</span>,<span class="n">13</span>))

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span class="i">``test dropWhile should drop anything before the first space``</span>() <span class="o">=</span>
  <span class="k">let</span> <span class="i">input</span> <span class="o">=</span> <span class="i">create</span> <span class="s">&quot;Howdy! Want to play?&quot;B</span>
  <span class="k">let</span> <span class="i">dropWhile2Head</span> <span class="o">=</span> <span class="i">skipWhile</span> ((<span class="o">&lt;&gt;</span>) <span class="n">&#39; &#39;B</span>) <span class="o">&gt;</span><span class="o">&gt;</span> <span class="i">head</span>
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">dropWhile2Head</span> <span class="i">input</span>
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="n">&#39; &#39;B</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span class="i">``test take should return an empty ArraySegment when asked to take 0``</span>() <span class="o">=</span>
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">take</span> <span class="n">0</span> (<span class="i">create</span> <span class="s">&quot;Nothing should be taken&quot;B</span>)
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="i">empty</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span class="i">``test take should return an empty ArraySegment when given an empty ArraySegment``</span>() <span class="o">=</span>
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">take</span> <span class="n">4</span> <span class="i">empty</span>
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="i">empty</span>

[&lt;<span class="i">Test</span>&gt;]
[&lt;<span class="i">Sequential</span>&gt;]
<span class="k">let</span> <span class="i">``test take should take the first n items``</span>([&lt;<span class="i">Values</span>(<span class="n">1</span>,<span class="n">2</span>,<span class="n">3</span>,<span class="n">4</span>,<span class="n">5</span>,<span class="n">6</span>,<span class="n">7</span>,<span class="n">8</span>,<span class="n">9</span>,<span class="n">10</span>)&gt;] <span class="i">x</span>) <span class="o">=</span>
  <span class="k">let</span> <span class="i">input</span> <span class="o">=</span> [|<span class="n">0uy</span><span class="o">..</span><span class="n">9uy</span>|]
  <span class="k">let</span> <span class="i">expected</span> <span class="o">=</span> <span class="i">BS</span>(<span class="i">input</span>,<span class="n">0</span>,<span class="i">x</span>)
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">take</span> <span class="i">x</span> (<span class="i">create</span> <span class="i">input</span>)
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="i">expected</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span class="i">``test takeWhile should return an empty ArraySegment when given an empty ArraySegment``</span>() <span class="o">=</span>
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">takeWhile</span> ((<span class="o">&lt;&gt;</span>) <span class="n">&#39; &#39;B</span>) <span class="i">empty</span>
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="i">empty</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span class="i">``test takeWhile should take anything before the first space``</span>() <span class="o">=</span>
  <span class="k">let</span> <span class="i">input</span> <span class="o">=</span> <span class="s">&quot;Hello world&quot;B</span>
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">takeWhile</span> ((<span class="o">&lt;&gt;</span>) <span class="n">&#39; &#39;B</span>) (<span class="i">create</span> <span class="i">input</span>)
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> (<span class="i">BS</span>(<span class="i">input</span>, <span class="n">0</span>, <span class="n">5</span>))

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span class="i">``test takeUntil should return an empty ArraySegment when given an empty ArraySegment``</span>() <span class="o">=</span>
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">takeUntil</span> ((<span class="o">=</span>) <span class="n">&#39; &#39;B</span>) <span class="i">empty</span>
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> <span class="i">empty</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span class="i">``test takeUntil should correctly split the input``</span>() <span class="o">=</span>
  <span class="k">let</span> <span class="i">input</span> <span class="o">=</span> <span class="s">&quot;abcde&quot;B</span>
  <span class="k">let</span> <span class="i">actual</span> <span class="o">=</span> <span class="i">takeUntil</span> ((<span class="o">=</span>) <span class="n">&#39;c&#39;B</span>) (<span class="i">create</span> <span class="i">input</span>)
  <span class="i">actual</span> <span class="o">|&gt;</span> <span class="i">should</span> <span class="i">equal</span> (<span class="i">BS</span>(<span class="i">input</span>, <span class="n">0</span>, <span class="n">2</span>))
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />type CustomEqualityAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; CustomEqualityAttribute<br /><br />Full name: Microsoft.FSharp.Core.CustomEqualityAttribute<br /><br />--------------------<br />new : unit -&gt; CustomEqualityAttribute</div>
<div class="tip" id="fs2">Multiple items<br />type CustomComparisonAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; CustomComparisonAttribute<br /><br />Full name: Microsoft.FSharp.Core.CustomComparisonAttribute<br /><br />--------------------<br />new : unit -&gt; CustomComparisonAttribute</div>
<div class="tip" id="fs3">Multiple items<br />type SerializableAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; SerializableAttribute<br /><br />Full name: System.SerializableAttribute<br /><br />--------------------<br />SerializableAttribute() : unit</div>
<div class="tip" id="fs4">Multiple items<br />type ArraySegment&lt;&#39;a (requires comparison)&gt; =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;interface IComparable<br />&#160;&#160;&#160;&#160;new : array:&#39;a [] -&gt; ArraySegment&lt;&#39;a&gt;<br />&#160;&#160;&#160;&#160;new : array:&#39;a [] * offset:int * count:int -&gt; ArraySegment&lt;&#39;a&gt;<br />&#160;&#160;&#160;&#160;val Array: &#39;a []<br />&#160;&#160;&#160;&#160;val Offset: int<br />&#160;&#160;&#160;&#160;val Count: int<br />&#160;&#160;&#160;&#160;override Equals : other:obj -&gt; bool<br />&#160;&#160;&#160;&#160;override GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;static member Compare : a:ArraySegment&lt;&#39;a&gt; * b:ArraySegment&lt;&#39;a&gt; -&gt; int<br />&#160;&#160;end<br /><br />Full name: FSharp.Collections.ArraySegment&lt;_&gt;<br /><em><br /><br />&#160;An ArraySegment with structural comparison and equality.</em><br /><br />--------------------<br />ArraySegment()<br />new : array:&#39;a [] -&gt; ArraySegment&lt;&#39;a&gt;<br />new : array:&#39;a [] * offset:int * count:int -&gt; ArraySegment&lt;&#39;a&gt;</div>
<div class="tip" id="fs5">Multiple items<br />ArraySegment.Array: &#39;a []<br /><br />--------------------<br />type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs6">ArraySegment.Offset: int</div>
<div class="tip" id="fs7">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs8">ArraySegment.Count: int</div>
<div class="tip" id="fs9">Multiple items<br />val array : &#39;a [] (requires comparison)<br /><br />--------------------<br />type &#39;T array = &#39;T []<br /><br />Full name: Microsoft.FSharp.Core.array&lt;_&gt;</div>
<div class="tip" id="fs10">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs11">property Array.Length: int</div>
<div class="tip" id="fs12">val offset : int</div>
<div class="tip" id="fs13">val count : int</div>
<div class="tip" id="fs14">static member ArraySegment.Compare : a:ArraySegment&lt;&#39;a&gt; * b:ArraySegment&lt;&#39;a&gt; -&gt; int<br /><br />Full name: FSharp.Collections.ArraySegment`1.Compare</div>
<div class="tip" id="fs15">val a : ArraySegment&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs16">val b : ArraySegment&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs17">val x : &#39;a [] (requires comparison)</div>
<div class="tip" id="fs18">val o : int</div>
<div class="tip" id="fs19">val l : int</div>
<div class="tip" id="fs20">ArraySegment.Array: &#39;a []</div>
<div class="tip" id="fs21">val x&#39; : &#39;a [] (requires comparison)</div>
<div class="tip" id="fs22">val o&#39; : int</div>
<div class="tip" id="fs23">val l&#39; : int</div>
<div class="tip" id="fs24">val foldr : (int -&gt; &#39;b -&gt; &#39;b -&gt; int) (requires comparison)</div>
<div class="tip" id="fs25">val res : int</div>
<div class="tip" id="fs26">val b : &#39;b (requires comparison)</div>
<div class="tip" id="fs27">val b&#39; : &#39;b (requires comparison)</div>
<div class="tip" id="fs28">val left : &#39;a [] (requires comparison)</div>
<div class="tip" id="fs29">val i : int</div>
<div class="tip" id="fs30">val right : &#39;a [] (requires comparison)</div>
<div class="tip" id="fs31">val i&#39; : int</div>
<div class="tip" id="fs32">val fold2 : folder:(&#39;State -&gt; &#39;T1 -&gt; &#39;T2 -&gt; &#39;State) -&gt; state:&#39;State -&gt; array1:&#39;T1 [] -&gt; array2:&#39;T2 [] -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.Array.fold2</div>
<div class="tip" id="fs33">val x : byref&lt;ArraySegment&lt;&#39;a&gt;&gt; (requires comparison)</div>
<div class="tip" id="fs34">override ArraySegment.Equals : other:obj -&gt; bool<br /><br />Full name: FSharp.Collections.ArraySegment`1.Equals</div>
<div class="tip" id="fs35">val other : obj</div>
<div class="tip" id="fs36">val other&#39; : ArraySegment&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs37">static member ArraySegment.Compare : a:ArraySegment&lt;&#39;a&gt; * b:ArraySegment&lt;&#39;a&gt; -&gt; int</div>
<div class="tip" id="fs38">override ArraySegment.GetHashCode : unit -&gt; int<br /><br />Full name: FSharp.Collections.ArraySegment`1.GetHashCode</div>
<div class="tip" id="fs39">val hash : obj:&#39;T -&gt; int (requires equality)<br /><br />Full name: Microsoft.FSharp.Core.Operators.hash</div>
<div class="tip" id="fs40">namespace System</div>
<div class="tip" id="fs41">Multiple items<br />type IComparable&lt;&#39;T&gt; =<br />&#160;&#160;member CompareTo : other:&#39;T -&gt; int<br /><br />Full name: System.IComparable&lt;_&gt;<br /><br />--------------------<br />type IComparable =<br />&#160;&#160;member CompareTo : obj:obj -&gt; int<br /><br />Full name: System.IComparable</div>
<div class="tip" id="fs42">override ArraySegment.CompareTo : other:obj -&gt; int<br /><br />Full name: FSharp.Collections.ArraySegment`1.CompareTo</div>
<div class="tip" id="fs43">val invalidArg : argumentName:string -&gt; message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.invalidArg</div>
<div class="tip" id="fs44">module ByteString<br /><br />from FSharp.Collections</div>
<div class="tip" id="fs45">namespace System.Diagnostics</div>
<div class="tip" id="fs46">namespace System.Diagnostics.Contracts</div>
<div class="tip" id="fs47">val BS : x:byte [] * o:int * l:int -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.BS<br /><em><br /><br />&#160;An alias constructor to make it easier to create ArraySegment&lt;byte&gt;.</em></div>
<div class="tip" id="fs48">val x : byte []</div>
<div class="tip" id="fs49">Multiple items<br />val byte : value:&#39;T -&gt; byte (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.byte<br /><br />--------------------<br />type byte = Byte<br /><br />Full name: Microsoft.FSharp.Core.byte</div>
<div class="tip" id="fs50">val x : ArraySegment&lt;byte&gt;</div>
<div class="tip" id="fs51">ArraySegment.Array: byte []</div>
<div class="tip" id="fs52">val empty : ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.empty</div>
<div class="tip" id="fs53">val singleton : c:byte -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.singleton</div>
<div class="tip" id="fs54">val c : byte</div>
<div class="tip" id="fs55">Multiple items<br />val BS : x:byte [] * o:int * l:int -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.BS<br /><em><br /><br />&#160;An alias constructor to make it easier to create ArraySegment&lt;byte&gt;.</em><br /><br />--------------------<br />active recognizer BS: ArraySegment&lt;byte&gt; -&gt; byte [] * int * int<br /><br />Full name: FSharp.Collections.ByteString.( |BS| )<br /><em><br /><br />&#160;An active pattern for conveniently retrieving the properties of the ArraySegment&lt;byte&gt;.</em></div>
<div class="tip" id="fs56">val create : count:int -&gt; value:&#39;T -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.create</div>
<div class="tip" id="fs57">val create : bs:byte [] -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.create</div>
<div class="tip" id="fs58">val bs : byte []</div>
<div class="tip" id="fs59">val ofSeq : s:seq&lt;byte&gt; -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.ofSeq</div>
<div class="tip" id="fs60">val s : seq&lt;byte&gt;</div>
<div class="tip" id="fs61">val arr : byte []</div>
<div class="tip" id="fs62">val ofSeq : source:seq&lt;&#39;T&gt; -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.ofSeq</div>
<div class="tip" id="fs63">val ofList : l:byte list -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.ofList</div>
<div class="tip" id="fs64">val l : byte list</div>
<div class="tip" id="fs65">val ofList : list:&#39;T list -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.ofList</div>
<div class="tip" id="fs66">property List.Length: int</div>
<div class="tip" id="fs67">val ofString : s:string -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.ofString</div>
<div class="tip" id="fs68">val s : string</div>
<div class="tip" id="fs69">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs70">String.ToCharArray() : char []<br />String.ToCharArray(startIndex: int, length: int) : char []</div>
<div class="tip" id="fs71">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.map</div>
<div class="tip" id="fs72">val toSeq : bs:ArraySegment&lt;byte&gt; -&gt; seq&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.toSeq</div>
<div class="tip" id="fs73">val bs : ArraySegment&lt;byte&gt;</div>
<div class="tip" id="fs74">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs75">val toList : bs:ArraySegment&lt;byte&gt; -&gt; byte list<br /><br />Full name: FSharp.Collections.ByteString.toList</div>
<div class="tip" id="fs76">val toString : bs:ArraySegment&lt;byte&gt; -&gt; string<br /><br />Full name: FSharp.Collections.ByteString.toString</div>
<div class="tip" id="fs77">namespace System.Text</div>
<div class="tip" id="fs78">type Encoding =<br />&#160;&#160;member BodyName : string<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CodePage : int<br />&#160;&#160;member DecoderFallback : DecoderFallback with get, set<br />&#160;&#160;member EncoderFallback : EncoderFallback with get, set<br />&#160;&#160;member EncodingName : string<br />&#160;&#160;member Equals : value:obj -&gt; bool<br />&#160;&#160;member GetByteCount : chars:char[] -&gt; int + 3 overloads<br />&#160;&#160;member GetBytes : chars:char[] -&gt; byte[] + 5 overloads<br />&#160;&#160;member GetCharCount : bytes:byte[] -&gt; int + 2 overloads<br />&#160;&#160;...<br /><br />Full name: System.Text.Encoding</div>
<div class="tip" id="fs79">property Text.Encoding.ASCII: Text.Encoding</div>
<div class="tip" id="fs80">Text.Encoding.GetString(bytes: byte []) : string<br />Text.Encoding.GetString(bytes: byte [], index: int, count: int) : string</div>
<div class="tip" id="fs81">val isEmpty : bs:ArraySegment&lt;byte&gt; -&gt; bool<br /><br />Full name: FSharp.Collections.ByteString.isEmpty</div>
<div class="tip" id="fs82">type Contract =<br />&#160;&#160;static member Assert : condition:bool -&gt; unit + 1 overload<br />&#160;&#160;static member Assume : condition:bool -&gt; unit + 1 overload<br />&#160;&#160;static member EndContractBlock : unit -&gt; unit<br />&#160;&#160;static member Ensures : condition:bool -&gt; unit + 1 overload<br />&#160;&#160;static member EnsuresOnThrow&lt;&#39;TException&gt; : condition:bool -&gt; unit + 1 overload<br />&#160;&#160;static member Exists&lt;&#39;T&gt; : collection:IEnumerable&lt;&#39;T&gt; * predicate:Predicate&lt;&#39;T&gt; -&gt; bool + 1 overload<br />&#160;&#160;static member ForAll&lt;&#39;T&gt; : collection:IEnumerable&lt;&#39;T&gt; * predicate:Predicate&lt;&#39;T&gt; -&gt; bool + 1 overload<br />&#160;&#160;static member Invariant : condition:bool -&gt; unit + 1 overload<br />&#160;&#160;static member OldValue&lt;&#39;T&gt; : value:&#39;T -&gt; &#39;T<br />&#160;&#160;static member Requires : condition:bool -&gt; unit + 3 overloads<br />&#160;&#160;...<br /><br />Full name: System.Diagnostics.Contracts.Contract</div>
<div class="tip" id="fs83">Contract.Requires&lt;&#39;TException (requires &#39;TException :&gt; exn)&gt;(condition: bool) : unit<br />Contract.Requires(condition: bool) : unit<br />Contract.Requires&lt;&#39;TException (requires &#39;TException :&gt; exn)&gt;(condition: bool, userMessage: string) : unit<br />Contract.Requires(condition: bool, userMessage: string) : unit</div>
<div class="tip" id="fs84">val length : bs:ArraySegment&lt;byte&gt; -&gt; int<br /><br />Full name: FSharp.Collections.ByteString.length</div>
<div class="tip" id="fs85">val index : bs:ArraySegment&lt;byte&gt; -&gt; pos:int -&gt; byte<br /><br />Full name: FSharp.Collections.ByteString.index</div>
<div class="tip" id="fs86">val pos : int</div>
<div class="tip" id="fs87">val head : bs:ArraySegment&lt;byte&gt; -&gt; byte<br /><br />Full name: FSharp.Collections.ByteString.head</div>
<div class="tip" id="fs88">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs89">val tail : bs:ArraySegment&lt;byte&gt; -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.tail</div>
<div class="tip" id="fs90">val cons : hd:byte -&gt; bs:ArraySegment&lt;byte&gt; -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.cons<br /><em><br /><br />&#160;cons uses Buffer.SetByte and Buffer.BlockCopy for efficient array operations.<br />&#160;Please note that a new array is created and both the head and tail are copied in,<br />&#160;disregarding any additional bytes in the original tail array.</em></div>
<div class="tip" id="fs91">val hd : byte</div>
<div class="tip" id="fs92">val buffer : byte []</div>
<div class="tip" id="fs93">val init : count:int -&gt; initializer:(int -&gt; &#39;T) -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.init</div>
<div class="tip" id="fs94">type Buffer =<br />&#160;&#160;static member BlockCopy : src:Array * srcOffset:int * dst:Array * dstOffset:int * count:int -&gt; unit<br />&#160;&#160;static member ByteLength : array:Array -&gt; int<br />&#160;&#160;static member GetByte : array:Array * index:int -&gt; byte<br />&#160;&#160;static member SetByte : array:Array * index:int * value:byte -&gt; unit<br /><br />Full name: System.Buffer</div>
<div class="tip" id="fs95">Buffer.SetByte(array: Array, index: int, value: byte) : unit</div>
<div class="tip" id="fs96">Buffer.BlockCopy(src: Array, srcOffset: int, dst: Array, dstOffset: int, count: int) : unit</div>
<div class="tip" id="fs97">val append : a:ArraySegment&lt;byte&gt; -&gt; b:ArraySegment&lt;byte&gt; -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.append<br /><em><br /><br />&#160;append uses Buffer.BlockCopy for efficient array operations.<br />&#160;Please note that a new array is created and both arrays are copied in,<br />&#160;disregarding any additional bytes in the original, underlying arrays.</em></div>
<div class="tip" id="fs98">val a : ArraySegment&lt;byte&gt;</div>
<div class="tip" id="fs99">val b : ArraySegment&lt;byte&gt;</div>
<div class="tip" id="fs100">val x&#39; : byte []</div>
<div class="tip" id="fs101">val fold : f:(&#39;a -&gt; byte -&gt; &#39;a) -&gt; seed:&#39;a -&gt; bs:ArraySegment&lt;byte&gt; -&gt; &#39;a<br /><br />Full name: FSharp.Collections.ByteString.fold</div>
<div class="tip" id="fs102">val f : (&#39;a -&gt; byte -&gt; &#39;a)</div>
<div class="tip" id="fs103">val seed : &#39;a</div>
<div class="tip" id="fs104">val loop : (ArraySegment&lt;byte&gt; -&gt; &#39;a -&gt; &#39;a)</div>
<div class="tip" id="fs105">val acc : &#39;a</div>
<div class="tip" id="fs106">val tl : ArraySegment&lt;byte&gt;</div>
<div class="tip" id="fs107">val span : pred:(byte -&gt; bool) -&gt; bs:ArraySegment&lt;byte&gt; -&gt; ArraySegment&lt;byte&gt; * ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.span</div>
<div class="tip" id="fs108">val pred : (byte -&gt; bool)</div>
<div class="tip" id="fs109">val loop : (int -&gt; ArraySegment&lt;byte&gt; * ArraySegment&lt;byte&gt;)</div>
<div class="tip" id="fs110">val acc : int</div>
<div class="tip" id="fs111">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs112">val split : pred:(byte -&gt; bool) -&gt; bs:ArraySegment&lt;byte&gt; -&gt; ArraySegment&lt;byte&gt; * ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.split</div>
<div class="tip" id="fs113">val splitAt : n:int -&gt; bs:ArraySegment&lt;byte&gt; -&gt; ArraySegment&lt;byte&gt; * ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.splitAt</div>
<div class="tip" id="fs114">val n : int</div>
<div class="tip" id="fs115">val skip : n:int -&gt; bs:ArraySegment&lt;byte&gt; -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.skip</div>
<div class="tip" id="fs116">val snd : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T2<br /><br />Full name: Microsoft.FSharp.Core.Operators.snd</div>
<div class="tip" id="fs117">val skipWhile : pred:(byte -&gt; bool) -&gt; bs:ArraySegment&lt;byte&gt; -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.skipWhile</div>
<div class="tip" id="fs118">val skipUntil : pred:(byte -&gt; bool) -&gt; bs:ArraySegment&lt;byte&gt; -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.skipUntil</div>
<div class="tip" id="fs119">val take : n:int -&gt; bs:ArraySegment&lt;byte&gt; -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.take</div>
<div class="tip" id="fs120">val fst : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T1<br /><br />Full name: Microsoft.FSharp.Core.Operators.fst</div>
<div class="tip" id="fs121">val takeWhile : pred:(byte -&gt; bool) -&gt; bs:ArraySegment&lt;byte&gt; -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.takeWhile</div>
<div class="tip" id="fs122">val takeUntil : pred:(byte -&gt; bool) -&gt; bs:ArraySegment&lt;byte&gt; -&gt; ArraySegment&lt;byte&gt;<br /><br />Full name: FSharp.Collections.ByteString.takeUntil</div>
<div class="tip" id="fs123">namespace Microsoft.FSharp</div>
<div class="tip" id="fs124">namespace Microsoft.FSharp.Collections</div>
<div class="tip" id="fs125">val box : value:&#39;T -&gt; obj<br /><br />Full name: Microsoft.FSharp.Core.Operators.box</div>
<div class="tip" id="fs126">Multiple items<br />val char : value:&#39;T -&gt; char (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.char<br /><br />--------------------<br />type char = Char<br /><br />Full name: Microsoft.FSharp.Core.char</div>

