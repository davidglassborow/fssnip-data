<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
<span class="l">154: </span>
<span class="l">155: </span>
<span class="l">156: </span>
<span class="l">157: </span>
<span class="l">158: </span>
<span class="l">159: </span>
<span class="l">160: </span>
<span class="l">161: </span>
<span class="l">162: </span>
<span class="l">163: </span>
<span class="l">164: </span>
<span class="l">165: </span>
<span class="l">166: </span>
<span class="l">167: </span>
<span class="l">168: </span>
<span class="l">169: </span>
<span class="l">170: </span>
<span class="l">171: </span>
<span class="l">172: </span>
<span class="l">173: </span>
<span class="l">174: </span>
<span class="l">175: </span>
<span class="l">176: </span>
<span class="l">177: </span>
<span class="l">178: </span>
<span class="l">179: </span>
<span class="l">180: </span>
<span class="l">181: </span>
<span class="l">182: </span>
<span class="l">183: </span>
<span class="l">184: </span>
<span class="l">185: </span>
<span class="l">186: </span>
<span class="l">187: </span>
<span class="l">188: </span>
<span class="l">189: </span>
<span class="l">190: </span>
<span class="l">191: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">IO</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">Reflection</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 6)" onmouseover="showTip(event, 'fs1', 6)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="i">Reflection</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="i">Emit</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 9)" onmouseover="showTip(event, 'fs1', 9)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 10)" onmouseover="showTip(event, 'fs5', 10)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="i">Generic</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="i">opcodeMap</span> <span class="o">=</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="i">fields</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="t">OpCodes</span><span class="o">&gt;</span><span class="o">.</span><span class="f">GetFields</span>(<span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="t">BindingFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="i">Public</span> <span class="o">|||</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="t">BindingFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="i">Static</span>)
  
  <span onmouseout="hideTip(event, 'fs8', 20)" onmouseover="showTip(event, 'fs8', 20)" class="i">fields</span> 
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="i">x</span> <span class="k">-&gt;</span> 
     <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="i">opcode</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 25)" onmouseover="showTip(event, 'fs16', 25)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 26)" onmouseover="showTip(event, 'fs18', 26)" class="f">GetValue</span> <span class="k">null</span> <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs19', 27)" onmouseover="showTip(event, 'fs19', 27)" class="t">OpCode</span>
     <span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="i">opcode</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 29)" onmouseover="showTip(event, 'fs20', 29)" class="i">Value</span>, <span onmouseout="hideTip(event, 'fs17', 30)" onmouseover="showTip(event, 'fs17', 30)" class="i">opcode</span>)
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 32)" onmouseover="showTip(event, 'fs22', 32)" class="f">ofArray</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 33)" onmouseover="showTip(event, 'fs23', 33)" class="f">findOpcode</span> <span onmouseout="hideTip(event, 'fs24', 34)" onmouseover="showTip(event, 'fs24', 34)" class="i">opc</span> <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs21', 35)" onmouseover="showTip(event, 'fs21', 35)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 36)" onmouseover="showTip(event, 'fs25', 36)" class="f">tryFind</span> <span onmouseout="hideTip(event, 'fs24', 37)" onmouseover="showTip(event, 'fs24', 37)" class="i">opc</span> <span onmouseout="hideTip(event, 'fs7', 38)" onmouseover="showTip(event, 'fs7', 38)" class="i">opcodeMap</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs26', 39)" onmouseover="showTip(event, 'fs26', 39)" class="t">OpCodeReturn</span> <span class="o">=</span>
  | <span onmouseout="hideTip(event, 'fs27', 40)" onmouseover="showTip(event, 'fs27', 40)" class="p">IL_Nop</span>
  | <span onmouseout="hideTip(event, 'fs28', 41)" onmouseover="showTip(event, 'fs28', 41)" class="p">IL_Int32</span>    <span class="k">of</span> <span onmouseout="hideTip(event, 'fs29', 42)" onmouseover="showTip(event, 'fs29', 42)" class="t">int</span>
  | <span onmouseout="hideTip(event, 'fs30', 43)" onmouseover="showTip(event, 'fs30', 43)" class="p">IL_Int16</span>    <span class="k">of</span> <span onmouseout="hideTip(event, 'fs31', 44)" onmouseover="showTip(event, 'fs31', 44)" class="t">int16</span>
  | <span onmouseout="hideTip(event, 'fs32', 45)" onmouseover="showTip(event, 'fs32', 45)" class="p">IL_Float</span>    <span class="k">of</span> <span onmouseout="hideTip(event, 'fs33', 46)" onmouseover="showTip(event, 'fs33', 46)" class="t">float</span>
  | <span onmouseout="hideTip(event, 'fs34', 47)" onmouseover="showTip(event, 'fs34', 47)" class="p">IL_Int64</span>    <span class="k">of</span> <span onmouseout="hideTip(event, 'fs35', 48)" onmouseover="showTip(event, 'fs35', 48)" class="t">int64</span>
  | <span onmouseout="hideTip(event, 'fs36', 49)" onmouseover="showTip(event, 'fs36', 49)" class="p">IL_Sbyte</span>    <span class="k">of</span> <span onmouseout="hideTip(event, 'fs37', 50)" onmouseover="showTip(event, 'fs37', 50)" class="t">sbyte</span>
  | <span onmouseout="hideTip(event, 'fs38', 51)" onmouseover="showTip(event, 'fs38', 51)" class="p">IL_Byte</span>     <span class="k">of</span> <span onmouseout="hideTip(event, 'fs39', 52)" onmouseover="showTip(event, 'fs39', 52)" class="t">byte</span>
  | <span onmouseout="hideTip(event, 'fs40', 53)" onmouseover="showTip(event, 'fs40', 53)" class="p">IL_Switch</span>   <span class="k">of</span> <span onmouseout="hideTip(event, 'fs29', 54)" onmouseover="showTip(event, 'fs29', 54)" class="t">int</span> <span onmouseout="hideTip(event, 'fs41', 55)" onmouseover="showTip(event, 'fs41', 55)" class="t">array</span>
  | <span onmouseout="hideTip(event, 'fs42', 56)" onmouseover="showTip(event, 'fs42', 56)" class="p">IL_Sig</span>      <span class="k">of</span> <span onmouseout="hideTip(event, 'fs39', 57)" onmouseover="showTip(event, 'fs39', 57)" class="t">byte</span> <span onmouseout="hideTip(event, 'fs41', 58)" onmouseover="showTip(event, 'fs41', 58)" class="t">array</span>
  | <span onmouseout="hideTip(event, 'fs43', 59)" onmouseover="showTip(event, 'fs43', 59)" class="p">IL_String</span>   <span class="k">of</span> <span onmouseout="hideTip(event, 'fs44', 60)" onmouseover="showTip(event, 'fs44', 60)" class="t">string</span>
  | <span onmouseout="hideTip(event, 'fs45', 61)" onmouseover="showTip(event, 'fs45', 61)" class="p">IL_Field</span>    <span class="k">of</span> <span onmouseout="hideTip(event, 'fs46', 62)" onmouseover="showTip(event, 'fs46', 62)" class="t">MemberInfo</span>
  | <span onmouseout="hideTip(event, 'fs47', 63)" onmouseover="showTip(event, 'fs47', 63)" class="p">IL_LocalVar</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs48', 64)" onmouseover="showTip(event, 'fs48', 64)" class="t">LocalVariableInfo</span>
  | <span onmouseout="hideTip(event, 'fs49', 65)" onmouseover="showTip(event, 'fs49', 65)" class="p">IL_Param</span>    <span class="k">of</span> <span onmouseout="hideTip(event, 'fs50', 66)" onmouseover="showTip(event, 'fs50', 66)" class="t">ParameterInfo</span>


<span class="c">//module binary =</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 67)" onmouseover="showTip(event, 'fs51', 67)" class="f">readInt32</span> (<span onmouseout="hideTip(event, 'fs52', 68)" onmouseover="showTip(event, 'fs52', 68)" class="i">ms</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs53', 69)" onmouseover="showTip(event, 'fs53', 69)" class="t">BinaryReader</span>) <span class="o">=</span>
  <span onmouseout="hideTip(event, 'fs52', 70)" onmouseover="showTip(event, 'fs52', 70)" class="i">ms</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs54', 71)" onmouseover="showTip(event, 'fs54', 71)" class="f">ReadInt32</span>() 

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs55', 72)" onmouseover="showTip(event, 'fs55', 72)" class="f">readInt16AsInt</span> (<span onmouseout="hideTip(event, 'fs52', 73)" onmouseover="showTip(event, 'fs52', 73)" class="i">ms</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs53', 74)" onmouseover="showTip(event, 'fs53', 74)" class="t">BinaryReader</span>) <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs52', 75)" onmouseover="showTip(event, 'fs52', 75)" class="i">ms</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 76)" onmouseover="showTip(event, 'fs56', 76)" class="f">ReadInt16</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 77)" onmouseover="showTip(event, 'fs29', 77)" class="f">int</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 78)" onmouseover="showTip(event, 'fs57', 78)" class="f">readInt64</span> (<span onmouseout="hideTip(event, 'fs52', 79)" onmouseover="showTip(event, 'fs52', 79)" class="i">ms</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs53', 80)" onmouseover="showTip(event, 'fs53', 80)" class="t">BinaryReader</span>) <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs52', 81)" onmouseover="showTip(event, 'fs52', 81)" class="i">ms</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 82)" onmouseover="showTip(event, 'fs58', 82)" class="f">ReadInt64</span>() 

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs59', 83)" onmouseover="showTip(event, 'fs59', 83)" class="f">readFloat</span> (<span onmouseout="hideTip(event, 'fs52', 84)" onmouseover="showTip(event, 'fs52', 84)" class="i">ms</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs53', 85)" onmouseover="showTip(event, 'fs53', 85)" class="t">BinaryReader</span>) <span class="o">=</span>
  <span onmouseout="hideTip(event, 'fs52', 86)" onmouseover="showTip(event, 'fs52', 86)" class="i">ms</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 87)" onmouseover="showTip(event, 'fs60', 87)" class="f">ReadDouble</span>()

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs61', 88)" onmouseover="showTip(event, 'fs61', 88)" class="f">readByteAsInt</span> (<span onmouseout="hideTip(event, 'fs52', 89)" onmouseover="showTip(event, 'fs52', 89)" class="i">ms</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs53', 90)" onmouseover="showTip(event, 'fs53', 90)" class="t">BinaryReader</span>) <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs52', 91)" onmouseover="showTip(event, 'fs52', 91)" class="i">ms</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 92)" onmouseover="showTip(event, 'fs62', 92)" class="f">ReadByte</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 93)" onmouseover="showTip(event, 'fs29', 93)" class="f">int</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 94)" onmouseover="showTip(event, 'fs63', 94)" class="f">readBytes</span> (<span onmouseout="hideTip(event, 'fs52', 95)" onmouseover="showTip(event, 'fs52', 95)" class="i">ms</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs53', 96)" onmouseover="showTip(event, 'fs53', 96)" class="t">BinaryReader</span>) <span onmouseout="hideTip(event, 'fs64', 97)" onmouseover="showTip(event, 'fs64', 97)" class="i">n</span> <span class="o">=</span>
  <span onmouseout="hideTip(event, 'fs52', 98)" onmouseover="showTip(event, 'fs52', 98)" class="i">ms</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 99)" onmouseover="showTip(event, 'fs65', 99)" class="f">ReadBytes</span> <span onmouseout="hideTip(event, 'fs64', 100)" onmouseover="showTip(event, 'fs64', 100)" class="i">n</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs66', 101)" onmouseover="showTip(event, 'fs66', 101)" class="f">streamPos</span> (<span onmouseout="hideTip(event, 'fs52', 102)" onmouseover="showTip(event, 'fs52', 102)" class="i">ms</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs53', 103)" onmouseover="showTip(event, 'fs53', 103)" class="t">BinaryReader</span>) <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs52', 104)" onmouseover="showTip(event, 'fs52', 104)" class="i">ms</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs67', 105)" onmouseover="showTip(event, 'fs67', 105)" class="i">BaseStream</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 106)" onmouseover="showTip(event, 'fs68', 106)" class="i">Position</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 107)" onmouseover="showTip(event, 'fs29', 107)" class="f">int</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs69', 108)" onmouseover="showTip(event, 'fs69', 108)" class="f">streamLen</span> (<span onmouseout="hideTip(event, 'fs52', 109)" onmouseover="showTip(event, 'fs52', 109)" class="i">ms</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs53', 110)" onmouseover="showTip(event, 'fs53', 110)" class="t">BinaryReader</span>) <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs52', 111)" onmouseover="showTip(event, 'fs52', 111)" class="i">ms</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs67', 112)" onmouseover="showTip(event, 'fs67', 112)" class="i">BaseStream</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 113)" onmouseover="showTip(event, 'fs70', 113)" class="i">Length</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 114)" onmouseover="showTip(event, 'fs29', 114)" class="f">int</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs71', 115)" onmouseover="showTip(event, 'fs71', 115)" class="f">getType</span> (<span onmouseout="hideTip(event, 'fs72', 116)" onmouseover="showTip(event, 'fs72', 116)" class="i">f</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs73', 117)" onmouseover="showTip(event, 'fs73', 117)" class="t">MethodBase</span>) <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs72', 118)" onmouseover="showTip(event, 'fs72', 118)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 119)" onmouseover="showTip(event, 'fs74', 119)" class="f">GetType</span>() 

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs75', 120)" onmouseover="showTip(event, 'fs75', 120)" class="f">isStatic</span> (<span onmouseout="hideTip(event, 'fs72', 121)" onmouseover="showTip(event, 'fs72', 121)" class="i">f</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs73', 122)" onmouseover="showTip(event, 'fs73', 122)" class="t">MethodBase</span>) <span class="o">=</span>
  <span onmouseout="hideTip(event, 'fs72', 123)" onmouseover="showTip(event, 'fs72', 123)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs76', 124)" onmouseover="showTip(event, 'fs76', 124)" class="i">IsStatic</span>

<span class="c">// thank you to the below author, i wouldn&#39;t have been able to get this without copying his code</span>
<span class="c">// ref: https://github.com/jbevain/mono.reflection/blob/master/Mono.Reflection/MethodBodyReader.cs</span>

<span class="c">// can be 1byte or 2byte opcode, 2 byte opcodes ALWAYS start with 0xfe.</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs77', 125)" onmouseover="showTip(event, 'fs77', 125)" class="f">readOpcode</span> (<span onmouseout="hideTip(event, 'fs52', 126)" onmouseover="showTip(event, 'fs52', 126)" class="i">ms</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs53', 127)" onmouseover="showTip(event, 'fs53', 127)" class="t">BinaryReader</span>) <span class="o">=</span> 
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs78', 128)" onmouseover="showTip(event, 'fs78', 128)" class="i">op</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs61', 129)" onmouseover="showTip(event, 'fs61', 129)" class="f">readByteAsInt</span> <span onmouseout="hideTip(event, 'fs52', 130)" onmouseover="showTip(event, 'fs52', 130)" class="i">ms</span>
  <span class="k">if</span>  <span onmouseout="hideTip(event, 'fs78', 131)" onmouseover="showTip(event, 'fs78', 131)" class="i">op</span> <span class="o">&lt;&gt;</span> <span class="n">254</span> <span class="k">then</span>
      <span onmouseout="hideTip(event, 'fs31', 132)" onmouseover="showTip(event, 'fs31', 132)" class="f">int16</span> <span onmouseout="hideTip(event, 'fs78', 133)" onmouseover="showTip(event, 'fs78', 133)" class="i">op</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 134)" onmouseover="showTip(event, 'fs23', 134)" class="f">findOpcode</span> 
  <span class="k">else</span> 
      <span onmouseout="hideTip(event, 'fs79', 135)" onmouseover="showTip(event, 'fs79', 135)" class="t">BitConverter</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs80', 136)" onmouseover="showTip(event, 'fs80', 136)" class="f">ToInt16</span>(<span onmouseout="hideTip(event, 'fs14', 137)" onmouseover="showTip(event, 'fs14', 137)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 138)" onmouseover="showTip(event, 'fs81', 138)" class="f">append</span> [| <span class="n">0xfeuy</span> |] (<span onmouseout="hideTip(event, 'fs63', 139)" onmouseover="showTip(event, 'fs63', 139)" class="f">readBytes</span> <span onmouseout="hideTip(event, 'fs52', 140)" onmouseover="showTip(event, 'fs52', 140)" class="i">ms</span> <span class="n">1</span>), <span class="n">0</span>)
      <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 141)" onmouseover="showTip(event, 'fs23', 141)" class="f">findOpcode</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs82', 142)" onmouseover="showTip(event, 'fs82', 142)" class="f">getInlineSwitch</span> (<span onmouseout="hideTip(event, 'fs52', 143)" onmouseover="showTip(event, 'fs52', 143)" class="i">ms</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs53', 144)" onmouseover="showTip(event, 'fs53', 144)" class="t">BinaryReader</span>) <span class="o">=</span> 
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs83', 145)" onmouseover="showTip(event, 'fs83', 145)" class="i">length</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 146)" onmouseover="showTip(event, 'fs51', 146)" class="f">readInt32</span> <span onmouseout="hideTip(event, 'fs52', 147)" onmouseover="showTip(event, 'fs52', 147)" class="i">ms</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs84', 148)" onmouseover="showTip(event, 'fs84', 148)" class="i">offset</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs66', 149)" onmouseover="showTip(event, 'fs66', 149)" class="f">streamPos</span> <span onmouseout="hideTip(event, 'fs52', 150)" onmouseover="showTip(event, 'fs52', 150)" class="i">ms</span> <span class="o">+</span> (<span class="n">4</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs83', 151)" onmouseover="showTip(event, 'fs83', 151)" class="i">length</span>)
  [| <span class="k">for</span> <span onmouseout="hideTip(event, 'fs85', 152)" onmouseover="showTip(event, 'fs85', 152)" class="i">i</span> <span class="k">in</span> <span class="n">0</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs83', 153)" onmouseover="showTip(event, 'fs83', 153)" class="i">length</span> <span class="o">-</span> <span class="n">1</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 154)" onmouseover="showTip(event, 'fs51', 154)" class="f">readInt32</span> <span onmouseout="hideTip(event, 'fs52', 155)" onmouseover="showTip(event, 'fs52', 155)" class="i">ms</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs84', 156)" onmouseover="showTip(event, 'fs84', 156)" class="i">offset</span> |]

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs86', 157)" onmouseover="showTip(event, 'fs86', 157)" class="f">walkBranches</span> (<span onmouseout="hideTip(event, 'fs52', 158)" onmouseover="showTip(event, 'fs52', 158)" class="i">ms</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs53', 159)" onmouseover="showTip(event, 'fs53', 159)" class="t">BinaryReader</span>) <span class="o">=</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs87', 160)" onmouseover="showTip(event, 'fs87', 160)" class="i">len</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 161)" onmouseover="showTip(event, 'fs51', 161)" class="f">readInt32</span> <span onmouseout="hideTip(event, 'fs52', 162)" onmouseover="showTip(event, 'fs52', 162)" class="i">ms</span>
  [| <span class="n">0</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs87', 163)" onmouseover="showTip(event, 'fs87', 163)" class="i">len</span> <span class="o">-</span> <span class="n">1</span> |]
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs14', 164)" onmouseover="showTip(event, 'fs14', 164)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 165)" onmouseover="showTip(event, 'fs15', 165)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs88', 166)" onmouseover="showTip(event, 'fs88', 166)" class="i">x</span> <span class="k">-&gt;</span>
     <span onmouseout="hideTip(event, 'fs51', 167)" onmouseover="showTip(event, 'fs51', 167)" class="f">readInt32</span> <span onmouseout="hideTip(event, 'fs52', 168)" onmouseover="showTip(event, 'fs52', 168)" class="i">ms</span> <span class="o">|&gt;</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs84', 169)" onmouseover="showTip(event, 'fs84', 169)" class="i">offset</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs66', 170)" onmouseover="showTip(event, 'fs66', 170)" class="f">streamPos</span> <span onmouseout="hideTip(event, 'fs52', 171)" onmouseover="showTip(event, 'fs52', 171)" class="i">ms</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs84', 172)" onmouseover="showTip(event, 'fs84', 172)" class="i">offset</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs89', 173)" onmouseover="showTip(event, 'fs89', 173)" class="f">checkByteSignLd</span> (<span onmouseout="hideTip(event, 'fs52', 174)" onmouseover="showTip(event, 'fs52', 174)" class="i">ms</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs53', 175)" onmouseover="showTip(event, 'fs53', 175)" class="t">BinaryReader</span>) <span onmouseout="hideTip(event, 'fs17', 176)" onmouseover="showTip(event, 'fs17', 176)" class="i">opcode</span> <span class="o">=</span>
  <span class="k">if</span> <span onmouseout="hideTip(event, 'fs17', 177)" onmouseover="showTip(event, 'fs17', 177)" class="i">opcode</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 178)" onmouseover="showTip(event, 'fs10', 178)" class="t">OpCodes</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs90', 179)" onmouseover="showTip(event, 'fs90', 179)" class="i">Ldc_I4_S</span> <span class="k">then</span>
    <span onmouseout="hideTip(event, 'fs61', 180)" onmouseover="showTip(event, 'fs61', 180)" class="f">readByteAsInt</span> <span onmouseout="hideTip(event, 'fs52', 181)" onmouseover="showTip(event, 'fs52', 181)" class="i">ms</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs66', 182)" onmouseover="showTip(event, 'fs66', 182)" class="f">streamPos</span> <span onmouseout="hideTip(event, 'fs52', 183)" onmouseover="showTip(event, 'fs52', 183)" class="i">ms</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs37', 184)" onmouseover="showTip(event, 'fs37', 184)" class="f">sbyte</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs36', 185)" onmouseover="showTip(event, 'fs36', 185)" class="p">IL_Sbyte</span>
  <span class="k">else</span>
    <span onmouseout="hideTip(event, 'fs61', 186)" onmouseover="showTip(event, 'fs61', 186)" class="f">readByteAsInt</span> <span onmouseout="hideTip(event, 'fs52', 187)" onmouseover="showTip(event, 'fs52', 187)" class="i">ms</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs39', 188)" onmouseover="showTip(event, 'fs39', 188)" class="f">byte</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs38', 189)" onmouseover="showTip(event, 'fs38', 189)" class="p">IL_Byte</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs91', 190)" onmouseover="showTip(event, 'fs91', 190)" class="t">instructionModel</span> <span class="o">=</span> {
  <span onmouseout="hideTip(event, 'fs92', 191)" onmouseover="showTip(event, 'fs92', 191)" class="i">func</span>   <span class="o">:</span> <span onmouseout="hideTip(event, 'fs73', 192)" onmouseover="showTip(event, 'fs73', 192)" class="t">MethodBase</span>
  <span onmouseout="hideTip(event, 'fs93', 193)" onmouseover="showTip(event, 'fs93', 193)" class="i">mbytes</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs39', 194)" onmouseover="showTip(event, 'fs39', 194)" class="t">byte</span> <span onmouseout="hideTip(event, 'fs41', 195)" onmouseover="showTip(event, 'fs41', 195)" class="t">array</span>
  <span onmouseout="hideTip(event, 'fs94', 196)" onmouseover="showTip(event, 'fs94', 196)" class="i">modulx</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs95', 197)" onmouseover="showTip(event, 'fs95', 197)" class="t">Module</span>
  <span onmouseout="hideTip(event, 'fs96', 198)" onmouseover="showTip(event, 'fs96', 198)" class="i">locals</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs48', 199)" onmouseover="showTip(event, 'fs48', 199)" class="t">LocalVariableInfo</span> <span onmouseout="hideTip(event, 'fs41', 200)" onmouseover="showTip(event, 'fs41', 200)" class="t">array</span>
  <span onmouseout="hideTip(event, 'fs97', 201)" onmouseover="showTip(event, 'fs97', 201)" class="i">paramx</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs50', 202)" onmouseover="showTip(event, 'fs50', 202)" class="t">ParameterInfo</span> <span onmouseout="hideTip(event, 'fs41', 203)" onmouseover="showTip(event, 'fs41', 203)" class="t">array</span>
  <span onmouseout="hideTip(event, 'fs98', 204)" onmouseover="showTip(event, 'fs98', 204)" class="i">gener1</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs99', 205)" onmouseover="showTip(event, 'fs99', 205)" class="t">Type</span> []
  <span onmouseout="hideTip(event, 'fs100', 206)" onmouseover="showTip(event, 'fs100', 206)" class="i">gener2</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs99', 207)" onmouseover="showTip(event, 'fs99', 207)" class="t">Type</span> []
}

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs101', 208)" onmouseover="showTip(event, 'fs101', 208)" class="f">createInstructionModel</span> (<span onmouseout="hideTip(event, 'fs72', 209)" onmouseover="showTip(event, 'fs72', 209)" class="i">f</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs73', 210)" onmouseover="showTip(event, 'fs73', 210)" class="t">MethodBase</span>) <span class="o">=</span>
  { <span class="i">func</span>   <span class="o">=</span> <span onmouseout="hideTip(event, 'fs72', 211)" onmouseover="showTip(event, 'fs72', 211)" class="i">f</span>
    <span class="i">mbytes</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs72', 212)" onmouseover="showTip(event, 'fs72', 212)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs102', 213)" onmouseover="showTip(event, 'fs102', 213)" class="f">GetMethodBody</span>()<span class="o">.</span><span class="f">GetILAsByteArray</span>()
    <span class="i">modulx</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs72', 214)" onmouseover="showTip(event, 'fs72', 214)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs103', 215)" onmouseover="showTip(event, 'fs103', 215)" class="i">Module</span>
    <span class="i">locals</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs72', 216)" onmouseover="showTip(event, 'fs72', 216)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs102', 217)" onmouseover="showTip(event, 'fs102', 217)" class="f">GetMethodBody</span>()<span class="o">.</span><span class="i">LocalVariables</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs104', 218)" onmouseover="showTip(event, 'fs104', 218)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs105', 219)" onmouseover="showTip(event, 'fs105', 219)" class="f">toArray</span>
    <span class="i">paramx</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs72', 220)" onmouseover="showTip(event, 'fs72', 220)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs106', 221)" onmouseover="showTip(event, 'fs106', 221)" class="f">GetParameters</span>()
    <span class="i">gener1</span> <span class="o">=</span> 
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs71', 222)" onmouseover="showTip(event, 'fs71', 222)" class="f">getType</span> <span onmouseout="hideTip(event, 'fs72', 223)" onmouseover="showTip(event, 'fs72', 223)" class="i">f</span> <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs9', 224)" onmouseover="showTip(event, 'fs9', 224)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs107', 225)" onmouseover="showTip(event, 'fs107', 225)" class="t">ConstructorInfo</span><span class="o">&gt;</span> <span class="k">then</span> 
        <span onmouseout="hideTip(event, 'fs72', 226)" onmouseover="showTip(event, 'fs72', 226)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs108', 227)" onmouseover="showTip(event, 'fs108', 227)" class="f">GetGenericArguments</span>() <span class="k">else</span> [||]

    <span class="i">gener2</span> <span class="o">=</span> 
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs72', 228)" onmouseover="showTip(event, 'fs72', 228)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs109', 229)" onmouseover="showTip(event, 'fs109', 229)" class="i">DeclaringType</span> <span class="o">&lt;&gt;</span> <span class="k">null</span> <span class="k">then</span> 
        <span onmouseout="hideTip(event, 'fs72', 230)" onmouseover="showTip(event, 'fs72', 230)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs109', 231)" onmouseover="showTip(event, 'fs109', 231)" class="i">DeclaringType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 232)" onmouseover="showTip(event, 'fs110', 232)" class="f">GetGenericArguments</span>() <span class="k">else</span> [||]
  }

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs111', 233)" onmouseover="showTip(event, 'fs111', 233)" class="f">resolveToken</span> <span onmouseout="hideTip(event, 'fs112', 234)" onmouseover="showTip(event, 'fs112', 234)" class="i">IM</span> <span onmouseout="hideTip(event, 'fs113', 235)" onmouseover="showTip(event, 'fs113', 235)" class="i">token</span> <span class="o">=</span>
  <span class="k">match</span> <span onmouseout="hideTip(event, 'fs112', 236)" onmouseover="showTip(event, 'fs112', 236)" class="i">IM</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs98', 237)" onmouseover="showTip(event, 'fs98', 237)" class="i">gener1</span>, <span onmouseout="hideTip(event, 'fs112', 238)" onmouseover="showTip(event, 'fs112', 238)" class="i">IM</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs100', 239)" onmouseover="showTip(event, 'fs100', 239)" class="i">gener2</span> <span class="k">with</span>
  | ([||],[||]) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs112', 240)" onmouseover="showTip(event, 'fs112', 240)" class="i">IM</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs92', 241)" onmouseover="showTip(event, 'fs92', 241)" class="i">func</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs103', 242)" onmouseover="showTip(event, 'fs103', 242)" class="i">Module</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs114', 243)" onmouseover="showTip(event, 'fs114', 243)" class="f">ResolveMember</span>  <span onmouseout="hideTip(event, 'fs113', 244)" onmouseover="showTip(event, 'fs113', 244)" class="i">token</span>
  | (<span onmouseout="hideTip(event, 'fs115', 245)" onmouseover="showTip(event, 'fs115', 245)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs116', 246)" onmouseover="showTip(event, 'fs116', 246)" class="i">b</span>)       <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs112', 247)" onmouseover="showTip(event, 'fs112', 247)" class="i">IM</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs92', 248)" onmouseover="showTip(event, 'fs92', 248)" class="i">func</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs103', 249)" onmouseover="showTip(event, 'fs103', 249)" class="i">Module</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs114', 250)" onmouseover="showTip(event, 'fs114', 250)" class="f">ResolveMember</span> (<span onmouseout="hideTip(event, 'fs113', 251)" onmouseover="showTip(event, 'fs113', 251)" class="i">token</span>,<span onmouseout="hideTip(event, 'fs115', 252)" onmouseover="showTip(event, 'fs115', 252)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs116', 253)" onmouseover="showTip(event, 'fs116', 253)" class="i">b</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs117', 254)" onmouseover="showTip(event, 'fs117', 254)" class="f">resolveVariable</span> <span onmouseout="hideTip(event, 'fs112', 255)" onmouseover="showTip(event, 'fs112', 255)" class="i">IM</span> (<span onmouseout="hideTip(event, 'fs17', 256)" onmouseover="showTip(event, 'fs17', 256)" class="i">opcode</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs19', 257)" onmouseover="showTip(event, 'fs19', 257)" class="t">OpCode</span>) <span onmouseout="hideTip(event, 'fs118', 258)" onmouseover="showTip(event, 'fs118', 258)" class="i">index</span> <span class="o">=</span>
 
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs119', 259)" onmouseover="showTip(event, 'fs119', 259)" class="f">p</span> <span onmouseout="hideTip(event, 'fs64', 260)" onmouseover="showTip(event, 'fs64', 260)" class="i">n</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs112', 261)" onmouseover="showTip(event, 'fs112', 261)" class="i">IM</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs97', 262)" onmouseover="showTip(event, 'fs97', 262)" class="i">paramx</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs118', 263)" onmouseover="showTip(event, 'fs118', 263)" class="i">index</span><span class="o">-</span><span onmouseout="hideTip(event, 'fs64', 264)" onmouseover="showTip(event, 'fs64', 264)" class="i">n</span>] <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs49', 265)" onmouseover="showTip(event, 'fs49', 265)" class="p">IL_Param</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs120', 266)" onmouseover="showTip(event, 'fs120', 266)" class="f">l</span> _ <span class="o">=</span> <span onmouseout="hideTip(event, 'fs112', 267)" onmouseover="showTip(event, 'fs112', 267)" class="i">IM</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs96', 268)" onmouseover="showTip(event, 'fs96', 268)" class="i">locals</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs118', 269)" onmouseover="showTip(event, 'fs118', 269)" class="i">index</span>  ] <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs47', 270)" onmouseover="showTip(event, 'fs47', 270)" class="p">IL_LocalVar</span>

  <span class="k">if</span> <span onmouseout="hideTip(event, 'fs17', 271)" onmouseover="showTip(event, 'fs17', 271)" class="i">opcode</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs121', 272)" onmouseover="showTip(event, 'fs121', 272)" class="i">Name</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs122', 273)" onmouseover="showTip(event, 'fs122', 273)" class="f">Contains</span> <span class="s">&quot;loc&quot;</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs120', 274)" onmouseover="showTip(event, 'fs120', 274)" class="f">l</span> ()
  <span class="k">else</span>    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs75', 275)" onmouseover="showTip(event, 'fs75', 275)" class="f">isStatic</span> <span onmouseout="hideTip(event, 'fs112', 276)" onmouseover="showTip(event, 'fs112', 276)" class="i">IM</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs92', 277)" onmouseover="showTip(event, 'fs92', 277)" class="i">func</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs119', 278)" onmouseover="showTip(event, 'fs119', 278)" class="f">p</span> <span class="n">0</span>
  <span class="k">else</span>    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs118', 279)" onmouseover="showTip(event, 'fs118', 279)" class="i">index</span> <span class="o">&lt;&gt;</span> <span class="n">0</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs119', 280)" onmouseover="showTip(event, 'fs119', 280)" class="f">p</span> <span class="n">1</span>
  <span class="k">else</span>       <span onmouseout="hideTip(event, 'fs27', 281)" onmouseover="showTip(event, 'fs27', 281)" class="p">IL_Nop</span>    

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs123', 282)" onmouseover="showTip(event, 'fs123', 282)" class="f">test</span> (<span onmouseout="hideTip(event, 'fs72', 283)" onmouseover="showTip(event, 'fs72', 283)" class="i">f</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs73', 284)" onmouseover="showTip(event, 'fs73', 284)" class="t">MethodBase</span>) <span class="o">=</span> 
  
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs112', 285)" onmouseover="showTip(event, 'fs112', 285)" class="i">IM</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs101', 286)" onmouseover="showTip(event, 'fs101', 286)" class="f">createInstructionModel</span> <span onmouseout="hideTip(event, 'fs72', 287)" onmouseover="showTip(event, 'fs72', 287)" class="i">f</span>

  <span class="k">use</span> <span onmouseout="hideTip(event, 'fs52', 288)" onmouseover="showTip(event, 'fs52', 288)" class="i">ms</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 289)" onmouseover="showTip(event, 'fs53', 289)" class="t">BinaryReader</span> (<span onmouseout="hideTip(event, 'fs124', 290)" onmouseover="showTip(event, 'fs124', 290)" class="t">MemoryStream</span> <span onmouseout="hideTip(event, 'fs112', 291)" onmouseover="showTip(event, 'fs112', 291)" class="i">IM</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs93', 292)" onmouseover="showTip(event, 'fs93', 292)" class="i">mbytes</span>)

  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs125', 293)" onmouseover="showTip(event, 'fs125', 293)" class="f">parseOpcode</span> (<span onmouseout="hideTip(event, 'fs17', 294)" onmouseover="showTip(event, 'fs17', 294)" class="i">opcode</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs19', 295)" onmouseover="showTip(event, 'fs19', 295)" class="t">OpCode</span>) <span class="o">=</span>
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs17', 296)" onmouseover="showTip(event, 'fs17', 296)" class="i">opcode</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs126', 297)" onmouseover="showTip(event, 'fs126', 297)" class="i">OperandType</span>  <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs127', 298)" onmouseover="showTip(event, 'fs127', 298)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs128', 299)" onmouseover="showTip(event, 'fs128', 299)" class="i">InlineNone</span>          <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs27', 300)" onmouseover="showTip(event, 'fs27', 300)" class="p">IL_Nop</span>
    | <span onmouseout="hideTip(event, 'fs127', 301)" onmouseover="showTip(event, 'fs127', 301)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs129', 302)" onmouseover="showTip(event, 'fs129', 302)" class="i">InlineSwitch</span>        <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs86', 303)" onmouseover="showTip(event, 'fs86', 303)" class="f">walkBranches</span>  <span onmouseout="hideTip(event, 'fs52', 304)" onmouseover="showTip(event, 'fs52', 304)" class="i">ms</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs40', 305)" onmouseover="showTip(event, 'fs40', 305)" class="p">IL_Switch</span>
    | <span onmouseout="hideTip(event, 'fs127', 306)" onmouseover="showTip(event, 'fs127', 306)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs130', 307)" onmouseover="showTip(event, 'fs130', 307)" class="i">ShortInlineBrTarget</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs61', 308)" onmouseover="showTip(event, 'fs61', 308)" class="f">readByteAsInt</span> <span onmouseout="hideTip(event, 'fs52', 309)" onmouseover="showTip(event, 'fs52', 309)" class="i">ms</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs66', 310)" onmouseover="showTip(event, 'fs66', 310)" class="f">streamPos</span> <span onmouseout="hideTip(event, 'fs52', 311)" onmouseover="showTip(event, 'fs52', 311)" class="i">ms</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs28', 312)" onmouseover="showTip(event, 'fs28', 312)" class="p">IL_Int32</span>
    | <span onmouseout="hideTip(event, 'fs127', 313)" onmouseover="showTip(event, 'fs127', 313)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs131', 314)" onmouseover="showTip(event, 'fs131', 314)" class="i">InlineBrTarget</span>      <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 315)" onmouseover="showTip(event, 'fs51', 315)" class="f">readInt32</span> <span onmouseout="hideTip(event, 'fs52', 316)" onmouseover="showTip(event, 'fs52', 316)" class="i">ms</span>     <span class="o">+</span> <span onmouseout="hideTip(event, 'fs66', 317)" onmouseover="showTip(event, 'fs66', 317)" class="f">streamPos</span> <span onmouseout="hideTip(event, 'fs52', 318)" onmouseover="showTip(event, 'fs52', 318)" class="i">ms</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs28', 319)" onmouseover="showTip(event, 'fs28', 319)" class="p">IL_Int32</span>
    | <span onmouseout="hideTip(event, 'fs127', 320)" onmouseover="showTip(event, 'fs127', 320)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs132', 321)" onmouseover="showTip(event, 'fs132', 321)" class="i">ShortInlineI</span>        <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs89', 322)" onmouseover="showTip(event, 'fs89', 322)" class="f">checkByteSignLd</span> <span onmouseout="hideTip(event, 'fs52', 323)" onmouseover="showTip(event, 'fs52', 323)" class="i">ms</span> <span onmouseout="hideTip(event, 'fs17', 324)" onmouseover="showTip(event, 'fs17', 324)" class="i">opcode</span>
    | <span onmouseout="hideTip(event, 'fs127', 325)" onmouseover="showTip(event, 'fs127', 325)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs133', 326)" onmouseover="showTip(event, 'fs133', 326)" class="i">InlineI</span>             <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 327)" onmouseover="showTip(event, 'fs51', 327)" class="f">readInt32</span> <span onmouseout="hideTip(event, 'fs52', 328)" onmouseover="showTip(event, 'fs52', 328)" class="i">ms</span>  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs28', 329)" onmouseover="showTip(event, 'fs28', 329)" class="p">IL_Int32</span>
    | <span onmouseout="hideTip(event, 'fs127', 330)" onmouseover="showTip(event, 'fs127', 330)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs134', 331)" onmouseover="showTip(event, 'fs134', 331)" class="i">ShortInlineR</span>        
    | <span onmouseout="hideTip(event, 'fs127', 332)" onmouseover="showTip(event, 'fs127', 332)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs135', 333)" onmouseover="showTip(event, 'fs135', 333)" class="i">InlineR</span>             <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs59', 334)" onmouseover="showTip(event, 'fs59', 334)" class="f">readFloat</span> <span onmouseout="hideTip(event, 'fs52', 335)" onmouseover="showTip(event, 'fs52', 335)" class="i">ms</span>  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs32', 336)" onmouseover="showTip(event, 'fs32', 336)" class="p">IL_Float</span>
    | <span onmouseout="hideTip(event, 'fs127', 337)" onmouseover="showTip(event, 'fs127', 337)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs136', 338)" onmouseover="showTip(event, 'fs136', 338)" class="i">InlineI8</span>            <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs57', 339)" onmouseover="showTip(event, 'fs57', 339)" class="f">readInt64</span> <span onmouseout="hideTip(event, 'fs52', 340)" onmouseover="showTip(event, 'fs52', 340)" class="i">ms</span>  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs34', 341)" onmouseover="showTip(event, 'fs34', 341)" class="p">IL_Int64</span>
    | <span onmouseout="hideTip(event, 'fs127', 342)" onmouseover="showTip(event, 'fs127', 342)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs137', 343)" onmouseover="showTip(event, 'fs137', 343)" class="i">InlineSig</span>           <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 344)" onmouseover="showTip(event, 'fs51', 344)" class="f">readInt32</span> <span onmouseout="hideTip(event, 'fs52', 345)" onmouseover="showTip(event, 'fs52', 345)" class="i">ms</span>  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs112', 346)" onmouseover="showTip(event, 'fs112', 346)" class="i">IM</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs94', 347)" onmouseover="showTip(event, 'fs94', 347)" class="i">modulx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs138', 348)" onmouseover="showTip(event, 'fs138', 348)" class="f">ResolveSignature</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs42', 349)" onmouseover="showTip(event, 'fs42', 349)" class="p">IL_Sig</span>
    | <span onmouseout="hideTip(event, 'fs127', 350)" onmouseover="showTip(event, 'fs127', 350)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs139', 351)" onmouseover="showTip(event, 'fs139', 351)" class="i">InlineString</span>        <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 352)" onmouseover="showTip(event, 'fs51', 352)" class="f">readInt32</span> <span onmouseout="hideTip(event, 'fs52', 353)" onmouseover="showTip(event, 'fs52', 353)" class="i">ms</span>  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs112', 354)" onmouseover="showTip(event, 'fs112', 354)" class="i">IM</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs94', 355)" onmouseover="showTip(event, 'fs94', 355)" class="i">modulx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs140', 356)" onmouseover="showTip(event, 'fs140', 356)" class="f">ResolveString</span>    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs43', 357)" onmouseover="showTip(event, 'fs43', 357)" class="p">IL_String</span>
    | <span onmouseout="hideTip(event, 'fs127', 358)" onmouseover="showTip(event, 'fs127', 358)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs141', 359)" onmouseover="showTip(event, 'fs141', 359)" class="i">InlineTok</span> 
    | <span onmouseout="hideTip(event, 'fs127', 360)" onmouseover="showTip(event, 'fs127', 360)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs142', 361)" onmouseover="showTip(event, 'fs142', 361)" class="i">InlineType</span>
    | <span onmouseout="hideTip(event, 'fs127', 362)" onmouseover="showTip(event, 'fs127', 362)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs143', 363)" onmouseover="showTip(event, 'fs143', 363)" class="i">InlineMethod</span>
    | <span onmouseout="hideTip(event, 'fs127', 364)" onmouseover="showTip(event, 'fs127', 364)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs144', 365)" onmouseover="showTip(event, 'fs144', 365)" class="i">InlineField</span>         <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs111', 366)" onmouseover="showTip(event, 'fs111', 366)" class="f">resolveToken</span> <span onmouseout="hideTip(event, 'fs112', 367)" onmouseover="showTip(event, 'fs112', 367)" class="i">IM</span> (<span onmouseout="hideTip(event, 'fs51', 368)" onmouseover="showTip(event, 'fs51', 368)" class="f">readInt32</span> <span onmouseout="hideTip(event, 'fs52', 369)" onmouseover="showTip(event, 'fs52', 369)" class="i">ms</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs45', 370)" onmouseover="showTip(event, 'fs45', 370)" class="p">IL_Field</span>
    | <span onmouseout="hideTip(event, 'fs127', 371)" onmouseover="showTip(event, 'fs127', 371)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs145', 372)" onmouseover="showTip(event, 'fs145', 372)" class="i">ShortInlineVar</span>      <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs117', 373)" onmouseover="showTip(event, 'fs117', 373)" class="f">resolveVariable</span>  <span onmouseout="hideTip(event, 'fs112', 374)" onmouseover="showTip(event, 'fs112', 374)" class="i">IM</span> <span onmouseout="hideTip(event, 'fs17', 375)" onmouseover="showTip(event, 'fs17', 375)" class="i">opcode</span> (<span onmouseout="hideTip(event, 'fs61', 376)" onmouseover="showTip(event, 'fs61', 376)" class="f">readByteAsInt</span> <span onmouseout="hideTip(event, 'fs52', 377)" onmouseover="showTip(event, 'fs52', 377)" class="i">ms</span>)
    | <span onmouseout="hideTip(event, 'fs127', 378)" onmouseover="showTip(event, 'fs127', 378)" class="t">OperandType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs146', 379)" onmouseover="showTip(event, 'fs146', 379)" class="i">InlineVar</span>           <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs117', 380)" onmouseover="showTip(event, 'fs117', 380)" class="f">resolveVariable</span>  <span onmouseout="hideTip(event, 'fs112', 381)" onmouseover="showTip(event, 'fs112', 381)" class="i">IM</span> <span onmouseout="hideTip(event, 'fs17', 382)" onmouseover="showTip(event, 'fs17', 382)" class="i">opcode</span> (<span onmouseout="hideTip(event, 'fs55', 383)" onmouseover="showTip(event, 'fs55', 383)" class="f">readInt16AsInt</span> <span onmouseout="hideTip(event, 'fs52', 384)" onmouseover="showTip(event, 'fs52', 384)" class="i">ms</span>)

  <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs147', 385)" onmouseover="showTip(event, 'fs147', 385)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs148', 386)" onmouseover="showTip(event, 'fs148', 386)" class="i">L</span> <span class="o">=</span> 
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs66', 387)" onmouseover="showTip(event, 'fs66', 387)" class="f">streamPos</span> <span onmouseout="hideTip(event, 'fs52', 388)" onmouseover="showTip(event, 'fs52', 388)" class="i">ms</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs69', 389)" onmouseover="showTip(event, 'fs69', 389)" class="f">streamLen</span> <span onmouseout="hideTip(event, 'fs52', 390)" onmouseover="showTip(event, 'fs52', 390)" class="i">ms</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs148', 391)" onmouseover="showTip(event, 'fs148', 391)" class="i">L</span>
    <span class="k">else</span>
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs77', 392)" onmouseover="showTip(event, 'fs77', 392)" class="f">readOpcode</span> <span onmouseout="hideTip(event, 'fs52', 393)" onmouseover="showTip(event, 'fs52', 393)" class="i">ms</span>  <span class="k">with</span>
      | <span onmouseout="hideTip(event, 'fs149', 394)" onmouseover="showTip(event, 'fs149', 394)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs150', 395)" onmouseover="showTip(event, 'fs150', 395)" class="i">code</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs147', 396)" onmouseover="showTip(event, 'fs147', 396)" class="f">loop</span> ((<span onmouseout="hideTip(event, 'fs150', 397)" onmouseover="showTip(event, 'fs150', 397)" class="i">code</span>, <span onmouseout="hideTip(event, 'fs125', 398)" onmouseover="showTip(event, 'fs125', 398)" class="f">parseOpcode</span> <span onmouseout="hideTip(event, 'fs150', 399)" onmouseover="showTip(event, 'fs150', 399)" class="i">code</span>)<span class="o">::</span><span onmouseout="hideTip(event, 'fs148', 400)" onmouseover="showTip(event, 'fs148', 400)" class="i">L</span>)
      | <span onmouseout="hideTip(event, 'fs151', 401)" onmouseover="showTip(event, 'fs151', 401)" class="p">None</span>      <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs147', 402)" onmouseover="showTip(event, 'fs147', 402)" class="f">loop</span> ((<span onmouseout="hideTip(event, 'fs10', 403)" onmouseover="showTip(event, 'fs10', 403)" class="t">OpCodes</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs152', 404)" onmouseover="showTip(event, 'fs152', 404)" class="i">Nop</span>, <span onmouseout="hideTip(event, 'fs27', 405)" onmouseover="showTip(event, 'fs27', 405)" class="p">IL_Nop</span>)<span class="o">::</span><span onmouseout="hideTip(event, 'fs148', 406)" onmouseover="showTip(event, 'fs148', 406)" class="i">L</span>)

  <span onmouseout="hideTip(event, 'fs147', 407)" onmouseover="showTip(event, 'fs147', 407)" class="f">loop</span> [] 

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs153', 408)" onmouseover="showTip(event, 'fs153', 408)" class="f">print_instruction_fields</span> ( <span onmouseout="hideTip(event, 'fs154', 409)" onmouseover="showTip(event, 'fs154', 409)" class="i">xs</span> <span class="o">:</span> (<span onmouseout="hideTip(event, 'fs19', 410)" onmouseover="showTip(event, 'fs19', 410)" class="t">OpCode</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs26', 411)" onmouseover="showTip(event, 'fs26', 411)" class="t">OpCodeReturn</span>) <span onmouseout="hideTip(event, 'fs155', 412)" onmouseover="showTip(event, 'fs155', 412)" class="t">list</span> ) <span class="o">=</span>
  <span onmouseout="hideTip(event, 'fs154', 413)" onmouseover="showTip(event, 'fs154', 413)" class="i">xs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs104', 414)" onmouseover="showTip(event, 'fs104', 414)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs156', 415)" onmouseover="showTip(event, 'fs156', 415)" class="f">iter</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs17', 416)" onmouseover="showTip(event, 'fs17', 416)" class="i">opcode</span>,<span onmouseout="hideTip(event, 'fs157', 417)" onmouseover="showTip(event, 'fs157', 417)" class="i">mapping</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs158', 418)" onmouseover="showTip(event, 'fs158', 418)" class="f">printfn</span> <span class="s">&quot; </span><span class="pf">%-5s</span><span class="s"> | </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs17', 419)" onmouseover="showTip(event, 'fs17', 419)" class="i">opcode</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs121', 420)" onmouseover="showTip(event, 'fs121', 420)" class="i">Name</span> <span onmouseout="hideTip(event, 'fs157', 421)" onmouseover="showTip(event, 'fs157', 421)" class="i">mapping</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs159', 422)" onmouseover="showTip(event, 'fs159', 422)" class="f">disassemble</span> <span onmouseout="hideTip(event, 'fs160', 423)" onmouseover="showTip(event, 'fs160', 423)" class="i">f</span> <span class="o">=</span>
  (<span onmouseout="hideTip(event, 'fs160', 424)" onmouseover="showTip(event, 'fs160', 424)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 425)" onmouseover="showTip(event, 'fs74', 425)" class="f">GetType</span>()<span class="o">.</span><span class="f">GetMethod</span> <span class="s">&quot;Invoke&quot;</span>)<span class="o">.</span><span class="i">MethodHandle</span>
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs73', 426)" onmouseover="showTip(event, 'fs73', 426)" class="t">MethodBase</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs161', 427)" onmouseover="showTip(event, 'fs161', 427)" class="f">GetMethodFromHandle</span>
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs123', 428)" onmouseover="showTip(event, 'fs123', 428)" class="f">test</span>


<span class="c">(* testing*)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs162', 429)" onmouseover="showTip(event, 'fs162', 429)" class="f">myfunc1</span>() <span class="o">=</span> 
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs163', 430)" onmouseover="showTip(event, 'fs163', 430)" class="i">testfunc</span> <span class="o">=</span> <span class="s">&quot;this is a test&quot;</span>
  <span onmouseout="hideTip(event, 'fs163', 431)" onmouseover="showTip(event, 'fs163', 431)" class="i">testfunc</span> <span class="o">^</span> <span class="s">&quot; abc&quot;</span>

<span onmouseout="hideTip(event, 'fs159', 432)" onmouseover="showTip(event, 'fs159', 432)" class="f">disassemble</span> <span onmouseout="hideTip(event, 'fs162', 433)" onmouseover="showTip(event, 'fs162', 433)" class="f">myfunc1</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs153', 434)" onmouseover="showTip(event, 'fs153', 434)" class="f">print_instruction_fields</span>
<span class="c">(* </span>
<span class="c"> ret   | IL_Nop</span>
<span class="c"> call  | IL_Field System.String Concat(System.String, System.String)</span>
<span class="c"> ldstr | IL_String &quot; abc&quot;</span>
<span class="c"> ldstr | IL_String &quot;this is a test&quot;</span>
<span class="c"> nop   | IL_Nop</span>
<span class="c"> *)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.IO</div>
<div class="tip" id="fs3">namespace System.Reflection</div>
<div class="tip" id="fs4">namespace System.Reflection.Emit</div>
<div class="tip" id="fs5">namespace System.Collections</div>
<div class="tip" id="fs6">namespace System.Collections.Generic</div>
<div class="tip" id="fs7">val opcodeMap : Map&lt;int16,OpCode&gt;<br /><br />Full name: Script.opcodeMap</div>
<div class="tip" id="fs8">val fields : FieldInfo []</div>
<div class="tip" id="fs9">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs10">type OpCodes =<br />&#160;&#160;static val Nop : OpCode<br />&#160;&#160;static val Break : OpCode<br />&#160;&#160;static val Ldarg_0 : OpCode<br />&#160;&#160;static val Ldarg_1 : OpCode<br />&#160;&#160;static val Ldarg_2 : OpCode<br />&#160;&#160;static val Ldarg_3 : OpCode<br />&#160;&#160;static val Ldloc_0 : OpCode<br />&#160;&#160;static val Ldloc_1 : OpCode<br />&#160;&#160;static val Ldloc_2 : OpCode<br />&#160;&#160;static val Ldloc_3 : OpCode<br />&#160;&#160;...<br /><br />Full name: System.Reflection.Emit.OpCodes</div>
<div class="tip" id="fs11">type BindingFlags =<br />&#160;&#160;| Default = 0<br />&#160;&#160;| IgnoreCase = 1<br />&#160;&#160;| DeclaredOnly = 2<br />&#160;&#160;| Instance = 4<br />&#160;&#160;| Static = 8<br />&#160;&#160;| Public = 16<br />&#160;&#160;| NonPublic = 32<br />&#160;&#160;| FlattenHierarchy = 64<br />&#160;&#160;| InvokeMethod = 256<br />&#160;&#160;| CreateInstance = 512<br />&#160;&#160;...<br /><br />Full name: System.Reflection.BindingFlags</div>
<div class="tip" id="fs12">field BindingFlags.Public = 16</div>
<div class="tip" id="fs13">field BindingFlags.Static = 8</div>
<div class="tip" id="fs14">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs15">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.map</div>
<div class="tip" id="fs16">val x : FieldInfo</div>
<div class="tip" id="fs17">val opcode : OpCode</div>
<div class="tip" id="fs18">FieldInfo.GetValue(obj: obj) : obj</div>
<div class="tip" id="fs19">type OpCode =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member FlowControl : FlowControl<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member Name : string<br />&#160;&#160;&#160;&#160;member OpCodeType : OpCodeType<br />&#160;&#160;&#160;&#160;member OperandType : OperandType<br />&#160;&#160;&#160;&#160;member Size : int<br />&#160;&#160;&#160;&#160;member StackBehaviourPop : StackBehaviour<br />&#160;&#160;&#160;&#160;member StackBehaviourPush : StackBehaviour<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Reflection.Emit.OpCode</div>
<div class="tip" id="fs20">property OpCode.Value: int16</div>
<div class="tip" id="fs21">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member Remove : key:&#39;Key -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Map&lt;_,_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs22">val ofArray : elements:(&#39;Key * &#39;T) [] -&gt; Map&lt;&#39;Key,&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.ofArray</div>
<div class="tip" id="fs23">val findOpcode : opc:int16 -&gt; OpCode option<br /><br />Full name: Script.findOpcode</div>
<div class="tip" id="fs24">val opc : int16</div>
<div class="tip" id="fs25">val tryFind : key:&#39;Key -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; &#39;T option (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.tryFind</div>
<div class="tip" id="fs26">type OpCodeReturn =<br />&#160;&#160;| IL_Nop<br />&#160;&#160;| IL_Int32 of int<br />&#160;&#160;| IL_Int16 of int16<br />&#160;&#160;| IL_Float of float<br />&#160;&#160;| IL_Int64 of int64<br />&#160;&#160;| IL_Sbyte of sbyte<br />&#160;&#160;| IL_Byte of byte<br />&#160;&#160;| IL_Switch of int array<br />&#160;&#160;| IL_Sig of byte array<br />&#160;&#160;| IL_String of string<br />&#160;&#160;...<br /><br />Full name: Script.OpCodeReturn</div>
<div class="tip" id="fs27">union case OpCodeReturn.IL_Nop: OpCodeReturn</div>
<div class="tip" id="fs28">union case OpCodeReturn.IL_Int32: int -&gt; OpCodeReturn</div>
<div class="tip" id="fs29">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs30">union case OpCodeReturn.IL_Int16: int16 -&gt; OpCodeReturn</div>
<div class="tip" id="fs31">Multiple items<br />val int16 : value:&#39;T -&gt; int16 (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int16<br /><br />--------------------<br />type int16 = Int16<br /><br />Full name: Microsoft.FSharp.Core.int16<br /><br />--------------------<br />type int16&lt;&#39;Measure&gt; = int16<br /><br />Full name: Microsoft.FSharp.Core.int16&lt;_&gt;</div>
<div class="tip" id="fs32">union case OpCodeReturn.IL_Float: float -&gt; OpCodeReturn</div>
<div class="tip" id="fs33">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs34">union case OpCodeReturn.IL_Int64: int64 -&gt; OpCodeReturn</div>
<div class="tip" id="fs35">Multiple items<br />val int64 : value:&#39;T -&gt; int64 (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int64<br /><br />--------------------<br />type int64 = Int64<br /><br />Full name: Microsoft.FSharp.Core.int64<br /><br />--------------------<br />type int64&lt;&#39;Measure&gt; = int64<br /><br />Full name: Microsoft.FSharp.Core.int64&lt;_&gt;</div>
<div class="tip" id="fs36">union case OpCodeReturn.IL_Sbyte: sbyte -&gt; OpCodeReturn</div>
<div class="tip" id="fs37">Multiple items<br />val sbyte : value:&#39;T -&gt; sbyte (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.sbyte<br /><br />--------------------<br />type sbyte = SByte<br /><br />Full name: Microsoft.FSharp.Core.sbyte<br /><br />--------------------<br />type sbyte&lt;&#39;Measure&gt; = sbyte<br /><br />Full name: Microsoft.FSharp.Core.sbyte&lt;_&gt;</div>
<div class="tip" id="fs38">union case OpCodeReturn.IL_Byte: byte -&gt; OpCodeReturn</div>
<div class="tip" id="fs39">Multiple items<br />val byte : value:&#39;T -&gt; byte (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.byte<br /><br />--------------------<br />type byte = Byte<br /><br />Full name: Microsoft.FSharp.Core.byte</div>
<div class="tip" id="fs40">union case OpCodeReturn.IL_Switch: int array -&gt; OpCodeReturn</div>
<div class="tip" id="fs41">type &#39;T array = &#39;T []<br /><br />Full name: Microsoft.FSharp.Core.array&lt;_&gt;</div>
<div class="tip" id="fs42">union case OpCodeReturn.IL_Sig: byte array -&gt; OpCodeReturn</div>
<div class="tip" id="fs43">union case OpCodeReturn.IL_String: string -&gt; OpCodeReturn</div>
<div class="tip" id="fs44">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs45">union case OpCodeReturn.IL_Field: MemberInfo -&gt; OpCodeReturn</div>
<div class="tip" id="fs46">type MemberInfo =<br />&#160;&#160;member DeclaringType : Type<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetCustomAttributes : inherit:bool -&gt; obj[] + 1 overload<br />&#160;&#160;member GetCustomAttributesData : unit -&gt; IList&lt;CustomAttributeData&gt;<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member IsDefined : attributeType:Type * inherit:bool -&gt; bool<br />&#160;&#160;member MemberType : MemberTypes<br />&#160;&#160;member MetadataToken : int<br />&#160;&#160;member Module : Module<br />&#160;&#160;member Name : string<br />&#160;&#160;...<br /><br />Full name: System.Reflection.MemberInfo</div>
<div class="tip" id="fs47">union case OpCodeReturn.IL_LocalVar: LocalVariableInfo -&gt; OpCodeReturn</div>
<div class="tip" id="fs48">type LocalVariableInfo =<br />&#160;&#160;member IsPinned : bool<br />&#160;&#160;member LocalIndex : int<br />&#160;&#160;member LocalType : Type<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Reflection.LocalVariableInfo</div>
<div class="tip" id="fs49">union case OpCodeReturn.IL_Param: ParameterInfo -&gt; OpCodeReturn</div>
<div class="tip" id="fs50">type ParameterInfo =<br />&#160;&#160;member Attributes : ParameterAttributes<br />&#160;&#160;member DefaultValue : obj<br />&#160;&#160;member GetCustomAttributes : inherit:bool -&gt; obj[] + 1 overload<br />&#160;&#160;member GetCustomAttributesData : unit -&gt; IList&lt;CustomAttributeData&gt;<br />&#160;&#160;member GetOptionalCustomModifiers : unit -&gt; Type[]<br />&#160;&#160;member GetRealObject : context:StreamingContext -&gt; obj<br />&#160;&#160;member GetRequiredCustomModifiers : unit -&gt; Type[]<br />&#160;&#160;member IsDefined : attributeType:Type * inherit:bool -&gt; bool<br />&#160;&#160;member IsIn : bool<br />&#160;&#160;member IsLcid : bool<br />&#160;&#160;...<br /><br />Full name: System.Reflection.ParameterInfo</div>
<div class="tip" id="fs51">val readInt32 : ms:BinaryReader -&gt; int<br /><br />Full name: Script.readInt32</div>
<div class="tip" id="fs52">val ms : BinaryReader</div>
<div class="tip" id="fs53">Multiple items<br />type BinaryReader =<br />&#160;&#160;new : input:Stream -&gt; BinaryReader + 1 overload<br />&#160;&#160;member BaseStream : Stream<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member PeekChar : unit -&gt; int<br />&#160;&#160;member Read : unit -&gt; int + 2 overloads<br />&#160;&#160;member ReadBoolean : unit -&gt; bool<br />&#160;&#160;member ReadByte : unit -&gt; byte<br />&#160;&#160;member ReadBytes : count:int -&gt; byte[]<br />&#160;&#160;member ReadChar : unit -&gt; char<br />&#160;&#160;...<br /><br />Full name: System.IO.BinaryReader<br /><br />--------------------<br />BinaryReader(input: Stream) : unit<br />BinaryReader(input: Stream, encoding: Text.Encoding) : unit</div>
<div class="tip" id="fs54">BinaryReader.ReadInt32() : int</div>
<div class="tip" id="fs55">val readInt16AsInt : ms:BinaryReader -&gt; int<br /><br />Full name: Script.readInt16AsInt</div>
<div class="tip" id="fs56">BinaryReader.ReadInt16() : int16</div>
<div class="tip" id="fs57">val readInt64 : ms:BinaryReader -&gt; int64<br /><br />Full name: Script.readInt64</div>
<div class="tip" id="fs58">BinaryReader.ReadInt64() : int64</div>
<div class="tip" id="fs59">val readFloat : ms:BinaryReader -&gt; float<br /><br />Full name: Script.readFloat</div>
<div class="tip" id="fs60">BinaryReader.ReadDouble() : float</div>
<div class="tip" id="fs61">val readByteAsInt : ms:BinaryReader -&gt; int<br /><br />Full name: Script.readByteAsInt</div>
<div class="tip" id="fs62">BinaryReader.ReadByte() : byte</div>
<div class="tip" id="fs63">val readBytes : ms:BinaryReader -&gt; n:int -&gt; byte []<br /><br />Full name: Script.readBytes</div>
<div class="tip" id="fs64">val n : int</div>
<div class="tip" id="fs65">BinaryReader.ReadBytes(count: int) : byte []</div>
<div class="tip" id="fs66">val streamPos : ms:BinaryReader -&gt; int<br /><br />Full name: Script.streamPos</div>
<div class="tip" id="fs67">property BinaryReader.BaseStream: Stream</div>
<div class="tip" id="fs68">property Stream.Position: int64</div>
<div class="tip" id="fs69">val streamLen : ms:BinaryReader -&gt; int<br /><br />Full name: Script.streamLen</div>
<div class="tip" id="fs70">property Stream.Length: int64</div>
<div class="tip" id="fs71">val getType : f:MethodBase -&gt; Type<br /><br />Full name: Script.getType</div>
<div class="tip" id="fs72">val f : MethodBase</div>
<div class="tip" id="fs73">type MethodBase =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Attributes : MethodAttributes<br />&#160;&#160;member CallingConvention : CallingConventions<br />&#160;&#160;member ContainsGenericParameters : bool<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetGenericArguments : unit -&gt; Type[]<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetMethodBody : unit -&gt; MethodBody<br />&#160;&#160;member GetMethodImplementationFlags : unit -&gt; MethodImplAttributes<br />&#160;&#160;member GetParameters : unit -&gt; ParameterInfo[]<br />&#160;&#160;member Invoke : obj:obj * parameters:obj[] -&gt; obj + 1 overload<br />&#160;&#160;...<br /><br />Full name: System.Reflection.MethodBase</div>
<div class="tip" id="fs74">Object.GetType() : Type</div>
<div class="tip" id="fs75">val isStatic : f:MethodBase -&gt; bool<br /><br />Full name: Script.isStatic</div>
<div class="tip" id="fs76">property MethodBase.IsStatic: bool</div>
<div class="tip" id="fs77">val readOpcode : ms:BinaryReader -&gt; OpCode option<br /><br />Full name: Script.readOpcode</div>
<div class="tip" id="fs78">val op : int</div>
<div class="tip" id="fs79">type BitConverter =<br />&#160;&#160;static val IsLittleEndian : bool<br />&#160;&#160;static member DoubleToInt64Bits : value:float -&gt; int64<br />&#160;&#160;static member GetBytes : value:bool -&gt; byte[] + 9 overloads<br />&#160;&#160;static member Int64BitsToDouble : value:int64 -&gt; float<br />&#160;&#160;static member ToBoolean : value:byte[] * startIndex:int -&gt; bool<br />&#160;&#160;static member ToChar : value:byte[] * startIndex:int -&gt; char<br />&#160;&#160;static member ToDouble : value:byte[] * startIndex:int -&gt; float<br />&#160;&#160;static member ToInt16 : value:byte[] * startIndex:int -&gt; int16<br />&#160;&#160;static member ToInt32 : value:byte[] * startIndex:int -&gt; int<br />&#160;&#160;static member ToInt64 : value:byte[] * startIndex:int -&gt; int64<br />&#160;&#160;...<br /><br />Full name: System.BitConverter</div>
<div class="tip" id="fs80">BitConverter.ToInt16(value: byte [], startIndex: int) : int16</div>
<div class="tip" id="fs81">val append : array1:&#39;T [] -&gt; array2:&#39;T [] -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.append</div>
<div class="tip" id="fs82">val getInlineSwitch : ms:BinaryReader -&gt; int []<br /><br />Full name: Script.getInlineSwitch</div>
<div class="tip" id="fs83">val length : int</div>
<div class="tip" id="fs84">val offset : int</div>
<div class="tip" id="fs85">val i : int</div>
<div class="tip" id="fs86">val walkBranches : ms:BinaryReader -&gt; int []<br /><br />Full name: Script.walkBranches</div>
<div class="tip" id="fs87">val len : int</div>
<div class="tip" id="fs88">val x : int</div>
<div class="tip" id="fs89">val checkByteSignLd : ms:BinaryReader -&gt; opcode:OpCode -&gt; OpCodeReturn<br /><br />Full name: Script.checkByteSignLd</div>
<div class="tip" id="fs90">field OpCodes.Ldc_I4_S</div>
<div class="tip" id="fs91">type instructionModel =<br />&#160;&#160;{func: MethodBase;<br />&#160;&#160;&#160;mbytes: byte array;<br />&#160;&#160;&#160;modulx: Module;<br />&#160;&#160;&#160;locals: LocalVariableInfo array;<br />&#160;&#160;&#160;paramx: ParameterInfo array;<br />&#160;&#160;&#160;gener1: Type [];<br />&#160;&#160;&#160;gener2: Type [];}<br /><br />Full name: Script.instructionModel</div>
<div class="tip" id="fs92">instructionModel.func: MethodBase</div>
<div class="tip" id="fs93">instructionModel.mbytes: byte array</div>
<div class="tip" id="fs94">instructionModel.modulx: Module</div>
<div class="tip" id="fs95">type Module =<br />&#160;&#160;member Assembly : Assembly<br />&#160;&#160;member Equals : o:obj -&gt; bool<br />&#160;&#160;member FindTypes : filter:TypeFilter * filterCriteria:obj -&gt; Type[]<br />&#160;&#160;member FullyQualifiedName : string<br />&#160;&#160;member GetCustomAttributes : inherit:bool -&gt; obj[] + 1 overload<br />&#160;&#160;member GetCustomAttributesData : unit -&gt; IList&lt;CustomAttributeData&gt;<br />&#160;&#160;member GetField : name:string -&gt; FieldInfo + 1 overload<br />&#160;&#160;member GetFields : unit -&gt; FieldInfo[] + 1 overload<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetMethod : name:string -&gt; MethodInfo + 2 overloads<br />&#160;&#160;...<br /><br />Full name: System.Reflection.Module</div>
<div class="tip" id="fs96">instructionModel.locals: LocalVariableInfo array</div>
<div class="tip" id="fs97">instructionModel.paramx: ParameterInfo array</div>
<div class="tip" id="fs98">instructionModel.gener1: Type []</div>
<div class="tip" id="fs99">type Type =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Assembly : Assembly<br />&#160;&#160;member AssemblyQualifiedName : string<br />&#160;&#160;member Attributes : TypeAttributes<br />&#160;&#160;member BaseType : Type<br />&#160;&#160;member ContainsGenericParameters : bool<br />&#160;&#160;member DeclaringMethod : MethodBase<br />&#160;&#160;member DeclaringType : Type<br />&#160;&#160;member Equals : o:obj -&gt; bool + 1 overload<br />&#160;&#160;member FindInterfaces : filter:TypeFilter * filterCriteria:obj -&gt; Type[]<br />&#160;&#160;member FindMembers : memberType:MemberTypes * bindingAttr:BindingFlags * filter:MemberFilter * filterCriteria:obj -&gt; MemberInfo[]<br />&#160;&#160;...<br /><br />Full name: System.Type</div>
<div class="tip" id="fs100">instructionModel.gener2: Type []</div>
<div class="tip" id="fs101">val createInstructionModel : f:MethodBase -&gt; instructionModel<br /><br />Full name: Script.createInstructionModel</div>
<div class="tip" id="fs102">MethodBase.GetMethodBody() : MethodBody</div>
<div class="tip" id="fs103">property MemberInfo.Module: Module</div>
<div class="tip" id="fs104">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs105">val toArray : source:seq&lt;&#39;T&gt; -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Seq.toArray</div>
<div class="tip" id="fs106">MethodBase.GetParameters() : ParameterInfo []</div>
<div class="tip" id="fs107">type ConstructorInfo =<br />&#160;&#160;inherit MethodBase<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Invoke : parameters:obj[] -&gt; obj + 1 overload<br />&#160;&#160;member MemberType : MemberTypes<br />&#160;&#160;static val ConstructorName : string<br />&#160;&#160;static val TypeConstructorName : string<br /><br />Full name: System.Reflection.ConstructorInfo</div>
<div class="tip" id="fs108">MethodBase.GetGenericArguments() : Type []</div>
<div class="tip" id="fs109">property MemberInfo.DeclaringType: Type</div>
<div class="tip" id="fs110">Type.GetGenericArguments() : Type []</div>
<div class="tip" id="fs111">val resolveToken : IM:instructionModel -&gt; token:int -&gt; MemberInfo<br /><br />Full name: Script.resolveToken</div>
<div class="tip" id="fs112">val IM : instructionModel</div>
<div class="tip" id="fs113">val token : int</div>
<div class="tip" id="fs114">Module.ResolveMember(metadataToken: int) : MemberInfo<br />Module.ResolveMember(metadataToken: int, genericTypeArguments: Type [], genericMethodArguments: Type []) : MemberInfo</div>
<div class="tip" id="fs115">val a : Type []</div>
<div class="tip" id="fs116">val b : Type []</div>
<div class="tip" id="fs117">val resolveVariable : IM:instructionModel -&gt; opcode:OpCode -&gt; index:int -&gt; OpCodeReturn<br /><br />Full name: Script.resolveVariable</div>
<div class="tip" id="fs118">val index : int</div>
<div class="tip" id="fs119">val p : (int -&gt; OpCodeReturn)</div>
<div class="tip" id="fs120">val l : (&#39;a -&gt; OpCodeReturn)</div>
<div class="tip" id="fs121">property OpCode.Name: string</div>
<div class="tip" id="fs122">String.Contains(value: string) : bool</div>
<div class="tip" id="fs123">val test : f:MethodBase -&gt; (OpCode * OpCodeReturn) list<br /><br />Full name: Script.test</div>
<div class="tip" id="fs124">Multiple items<br />type MemoryStream =<br />&#160;&#160;inherit Stream<br />&#160;&#160;new : unit -&gt; MemoryStream + 6 overloads<br />&#160;&#160;member CanRead : bool<br />&#160;&#160;member CanSeek : bool<br />&#160;&#160;member CanWrite : bool<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member Flush : unit -&gt; unit<br />&#160;&#160;member GetBuffer : unit -&gt; byte[]<br />&#160;&#160;member Length : int64<br />&#160;&#160;member Position : int64 with get, set<br />&#160;&#160;member Read : buffer:byte[] * offset:int * count:int -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.IO.MemoryStream<br /><br />--------------------<br />MemoryStream() : unit<br />MemoryStream(capacity: int) : unit<br />MemoryStream(buffer: byte []) : unit<br />MemoryStream(buffer: byte [], writable: bool) : unit<br />MemoryStream(buffer: byte [], index: int, count: int) : unit<br />MemoryStream(buffer: byte [], index: int, count: int, writable: bool) : unit<br />MemoryStream(buffer: byte [], index: int, count: int, writable: bool, publiclyVisible: bool) : unit</div>
<div class="tip" id="fs125">val parseOpcode : (OpCode -&gt; OpCodeReturn)</div>
<div class="tip" id="fs126">property OpCode.OperandType: OperandType</div>
<div class="tip" id="fs127">type OperandType =<br />&#160;&#160;| InlineBrTarget = 0<br />&#160;&#160;| InlineField = 1<br />&#160;&#160;| InlineI = 2<br />&#160;&#160;| InlineI8 = 3<br />&#160;&#160;| InlineMethod = 4<br />&#160;&#160;| InlineNone = 5<br />&#160;&#160;| InlinePhi = 6<br />&#160;&#160;| InlineR = 7<br />&#160;&#160;| InlineSig = 9<br />&#160;&#160;| InlineString = 10<br />&#160;&#160;...<br /><br />Full name: System.Reflection.Emit.OperandType</div>
<div class="tip" id="fs128">field OperandType.InlineNone = 5</div>
<div class="tip" id="fs129">field OperandType.InlineSwitch = 11</div>
<div class="tip" id="fs130">field OperandType.ShortInlineBrTarget = 15</div>
<div class="tip" id="fs131">field OperandType.InlineBrTarget = 0</div>
<div class="tip" id="fs132">field OperandType.ShortInlineI = 16</div>
<div class="tip" id="fs133">field OperandType.InlineI = 2</div>
<div class="tip" id="fs134">field OperandType.ShortInlineR = 17</div>
<div class="tip" id="fs135">field OperandType.InlineR = 7</div>
<div class="tip" id="fs136">field OperandType.InlineI8 = 3</div>
<div class="tip" id="fs137">field OperandType.InlineSig = 9</div>
<div class="tip" id="fs138">Module.ResolveSignature(metadataToken: int) : byte []</div>
<div class="tip" id="fs139">field OperandType.InlineString = 10</div>
<div class="tip" id="fs140">Module.ResolveString(metadataToken: int) : string</div>
<div class="tip" id="fs141">field OperandType.InlineTok = 12</div>
<div class="tip" id="fs142">field OperandType.InlineType = 13</div>
<div class="tip" id="fs143">field OperandType.InlineMethod = 4</div>
<div class="tip" id="fs144">field OperandType.InlineField = 1</div>
<div class="tip" id="fs145">field OperandType.ShortInlineVar = 18</div>
<div class="tip" id="fs146">field OperandType.InlineVar = 14</div>
<div class="tip" id="fs147">val loop : ((OpCode * OpCodeReturn) list -&gt; (OpCode * OpCodeReturn) list)</div>
<div class="tip" id="fs148">val L : (OpCode * OpCodeReturn) list</div>
<div class="tip" id="fs149">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs150">val code : OpCode</div>
<div class="tip" id="fs151">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs152">field OpCodes.Nop</div>
<div class="tip" id="fs153">val print_instruction_fields : xs:(OpCode * OpCodeReturn) list -&gt; unit<br /><br />Full name: Script.print_instruction_fields</div>
<div class="tip" id="fs154">val xs : (OpCode * OpCodeReturn) list</div>
<div class="tip" id="fs155">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs156">val iter : action:(&#39;T -&gt; unit) -&gt; source:seq&lt;&#39;T&gt; -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.Seq.iter</div>
<div class="tip" id="fs157">val mapping : OpCodeReturn</div>
<div class="tip" id="fs158">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs159">val disassemble : f:&#39;a -&gt; (OpCode * OpCodeReturn) list<br /><br />Full name: Script.disassemble</div>
<div class="tip" id="fs160">val f : &#39;a</div>
<div class="tip" id="fs161">MethodBase.GetMethodFromHandle(handle: RuntimeMethodHandle) : MethodBase<br />MethodBase.GetMethodFromHandle(handle: RuntimeMethodHandle, declaringType: RuntimeTypeHandle) : MethodBase</div>
<div class="tip" id="fs162">val myfunc1 : unit -&gt; string<br /><br />Full name: Script.myfunc1</div>
<div class="tip" id="fs163">val testfunc : string</div>

