<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Toml</span>
<span class="c">// based on https://github.com/mackwic/To.ml and https://github.com/seliopou/toml</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">FParsec</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">Token</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="p">KeyGroup</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">string</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="t">list</span> | <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="p">KeyValue</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="t">string</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="t">obj</span>

<span class="k">let</span> (<span class="o">&lt;||&gt;</span>) <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="f">p1</span> <span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="f">p2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="f">attempt</span> (<span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="f">p1</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="f">box</span>) <span class="o">&lt;|&gt;</span> <span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="f">attempt</span> (<span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="f">p2</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="f">box</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="f">spc</span>      <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="f">many</span> (<span onmouseout="hideTip(event, 'fs16', 21)" onmouseover="showTip(event, 'fs16', 21)" class="f">anyOf</span> [<span class="s">&#39; &#39;</span>; <span class="s">&#39;\t&#39;</span>]) 
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="f">lexeme</span> <span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="i">s</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 24)" onmouseover="showTip(event, 'fs19', 24)" class="f">pstring</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="i">s</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs14', 26)" onmouseover="showTip(event, 'fs14', 26)" class="f">spc</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 27)" onmouseover="showTip(event, 'fs20', 27)" class="f">lexemel</span> <span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="i">s</span><span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="f">pstring</span> <span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="i">s</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="f">spaces</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 32)" onmouseover="showTip(event, 'fs22', 32)" class="f">comment</span>  <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 33)" onmouseover="showTip(event, 'fs23', 33)" class="f">pchar</span> <span class="s">&#39;#&#39;</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span onmouseout="hideTip(event, 'fs24', 34)" onmouseover="showTip(event, 'fs24', 34)" class="f">restOfLine</span> <span class="k">false</span> 
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 35)" onmouseover="showTip(event, 'fs25', 35)" class="f">blanks</span>   <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 36)" onmouseover="showTip(event, 'fs26', 36)" class="f">skipMany</span> ((<span onmouseout="hideTip(event, 'fs22', 37)" onmouseover="showTip(event, 'fs22', 37)" class="f">comment</span> <span class="o">&lt;||&gt;</span> <span onmouseout="hideTip(event, 'fs14', 38)" onmouseover="showTip(event, 'fs14', 38)" class="f">spc</span>) <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs27', 39)" onmouseover="showTip(event, 'fs27', 39)" class="f">newline</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs14', 40)" onmouseover="showTip(event, 'fs14', 40)" class="f">spc</span>) <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs14', 41)" onmouseover="showTip(event, 'fs14', 41)" class="f">spc</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 42)" onmouseover="showTip(event, 'fs28', 42)" class="f">brace</span> <span onmouseout="hideTip(event, 'fs29', 43)" onmouseover="showTip(event, 'fs29', 43)" class="f">p</span>  <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 44)" onmouseover="showTip(event, 'fs30', 44)" class="f">between</span> (<span onmouseout="hideTip(event, 'fs20', 45)" onmouseover="showTip(event, 'fs20', 45)" class="f">lexemel</span> <span class="s">&quot;[&quot;</span>) (<span onmouseout="hideTip(event, 'fs20', 46)" onmouseover="showTip(event, 'fs20', 46)" class="f">lexemel</span> <span class="s">&quot;]&quot;</span>) <span onmouseout="hideTip(event, 'fs29', 47)" onmouseover="showTip(event, 'fs29', 47)" class="f">p</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 48)" onmouseover="showTip(event, 'fs31', 48)" class="f">pbool</span>    <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs17', 49)" onmouseover="showTip(event, 'fs17', 49)" class="f">lexeme</span> <span class="s">&quot;true&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span class="k">true</span>) <span class="o">&lt;|&gt;</span> (<span onmouseout="hideTip(event, 'fs17', 50)" onmouseover="showTip(event, 'fs17', 50)" class="f">lexeme</span> <span class="s">&quot;false&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span class="k">false</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 51)" onmouseover="showTip(event, 'fs32', 51)" class="f">pstr</span>     <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 52)" onmouseover="showTip(event, 'fs30', 52)" class="f">between</span> (<span onmouseout="hideTip(event, 'fs17', 53)" onmouseover="showTip(event, 'fs17', 53)" class="f">lexeme</span> <span class="s">&quot;</span><span class="e">\&quot;</span><span class="s">&quot;</span>) (<span onmouseout="hideTip(event, 'fs17', 54)" onmouseover="showTip(event, 'fs17', 54)" class="f">lexeme</span> <span class="s">&quot;</span><span class="e">\&quot;</span><span class="s">&quot;</span>) (<span onmouseout="hideTip(event, 'fs33', 55)" onmouseover="showTip(event, 'fs33', 55)" class="f">manySatisfy</span> ((<span class="o">&lt;&gt;</span>)<span class="s">&#39;&quot;&#39;</span>))
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 56)" onmouseover="showTip(event, 'fs34', 56)" class="f">pdate&#39;</span> <span onmouseout="hideTip(event, 'fs18', 57)" onmouseover="showTip(event, 'fs18', 57)" class="i">s</span> <span class="o">=</span> <span class="k">try</span> <span onmouseout="hideTip(event, 'fs35', 58)" onmouseover="showTip(event, 'fs35', 58)" class="f">preturn</span> (<span onmouseout="hideTip(event, 'fs36', 59)" onmouseover="showTip(event, 'fs36', 59)" class="t">DateTime</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 60)" onmouseover="showTip(event, 'fs37', 60)" class="f">Parse</span> (<span onmouseout="hideTip(event, 'fs18', 61)" onmouseover="showTip(event, 'fs18', 61)" class="i">s</span>, <span class="k">null</span>, <span onmouseout="hideTip(event, 'fs38', 62)" onmouseover="showTip(event, 'fs38', 62)" class="i">Globalization</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 63)" onmouseover="showTip(event, 'fs39', 63)" class="t">DateTimeStyles</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 64)" onmouseover="showTip(event, 'fs40', 64)" class="i">RoundtripKind</span>)) <span class="k">with</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs41', 65)" onmouseover="showTip(event, 'fs41', 65)" class="f">fail</span> <span class="s">&quot;&quot;</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 66)" onmouseover="showTip(event, 'fs42', 66)" class="f">pdate</span>    <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 67)" onmouseover="showTip(event, 'fs30', 67)" class="f">between</span> <span onmouseout="hideTip(event, 'fs14', 68)" onmouseover="showTip(event, 'fs14', 68)" class="f">spc</span> <span onmouseout="hideTip(event, 'fs14', 69)" onmouseover="showTip(event, 'fs14', 69)" class="f">spc</span> (<span onmouseout="hideTip(event, 'fs43', 70)" onmouseover="showTip(event, 'fs43', 70)" class="f">anyString</span> <span class="n">20</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 71)" onmouseover="showTip(event, 'fs34', 71)" class="f">pdate&#39;</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 72)" onmouseover="showTip(event, 'fs44', 72)" class="f">ary</span> <span onmouseout="hideTip(event, 'fs45', 73)" onmouseover="showTip(event, 'fs45', 73)" class="f">elem</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 74)" onmouseover="showTip(event, 'fs28', 74)" class="f">brace</span> (<span onmouseout="hideTip(event, 'fs46', 75)" onmouseover="showTip(event, 'fs46', 75)" class="f">sepBy</span> (<span onmouseout="hideTip(event, 'fs45', 76)" onmouseover="showTip(event, 'fs45', 76)" class="f">elem</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs21', 77)" onmouseover="showTip(event, 'fs21', 77)" class="f">spaces</span>) (<span onmouseout="hideTip(event, 'fs20', 78)" onmouseover="showTip(event, 'fs20', 78)" class="f">lexemel</span> <span class="s">&quot;,&quot;</span>))
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs47', 79)" onmouseover="showTip(event, 'fs47', 79)" class="f">pary</span>     <span class="o">=</span> <span onmouseout="hideTip(event, 'fs44', 80)" onmouseover="showTip(event, 'fs44', 80)" class="f">ary</span> <span onmouseout="hideTip(event, 'fs31', 81)" onmouseover="showTip(event, 'fs31', 81)" class="f">pbool</span> <span class="o">&lt;||&gt;</span> <span onmouseout="hideTip(event, 'fs44', 82)" onmouseover="showTip(event, 'fs44', 82)" class="f">ary</span> <span onmouseout="hideTip(event, 'fs42', 83)" onmouseover="showTip(event, 'fs42', 83)" class="f">pdate</span> <span class="o">&lt;||&gt;</span> <span onmouseout="hideTip(event, 'fs44', 84)" onmouseover="showTip(event, 'fs44', 84)" class="f">ary</span> <span onmouseout="hideTip(event, 'fs48', 85)" onmouseover="showTip(event, 'fs48', 85)" class="f">pint32</span> <span class="o">&lt;||&gt;</span> <span onmouseout="hideTip(event, 'fs44', 86)" onmouseover="showTip(event, 'fs44', 86)" class="f">ary</span> <span onmouseout="hideTip(event, 'fs32', 87)" onmouseover="showTip(event, 'fs32', 87)" class="f">pstr</span> <span class="o">&lt;||&gt;</span> <span onmouseout="hideTip(event, 'fs44', 88)" onmouseover="showTip(event, 'fs44', 88)" class="f">ary</span> <span onmouseout="hideTip(event, 'fs49', 89)" onmouseover="showTip(event, 'fs49', 89)" class="f">pfloat</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 90)" onmouseover="showTip(event, 'fs50', 90)" class="f">value</span>    <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 91)" onmouseover="showTip(event, 'fs31', 91)" class="f">pbool</span> <span class="o">&lt;||&gt;</span> <span onmouseout="hideTip(event, 'fs42', 92)" onmouseover="showTip(event, 'fs42', 92)" class="f">pdate</span> <span class="o">&lt;||&gt;</span> <span onmouseout="hideTip(event, 'fs32', 93)" onmouseover="showTip(event, 'fs32', 93)" class="f">pstr</span> <span class="o">&lt;||&gt;</span> <span onmouseout="hideTip(event, 'fs49', 94)" onmouseover="showTip(event, 'fs49', 94)" class="f">pfloat</span> <span class="o">&lt;||&gt;</span> <span onmouseout="hideTip(event, 'fs48', 95)" onmouseover="showTip(event, 'fs48', 95)" class="f">pint32</span> <span class="o">&lt;||&gt;</span> <span onmouseout="hideTip(event, 'fs47', 96)" onmouseover="showTip(event, 'fs47', 96)" class="f">pary</span> <span class="o">&lt;||&gt;</span> <span onmouseout="hideTip(event, 'fs44', 97)" onmouseover="showTip(event, 'fs44', 97)" class="f">ary</span> <span onmouseout="hideTip(event, 'fs47', 98)" onmouseover="showTip(event, 'fs47', 98)" class="f">pary</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 99)" onmouseover="showTip(event, 'fs51', 99)" class="f">kvKey</span>    <span class="o">=</span> <span onmouseout="hideTip(event, 'fs52', 100)" onmouseover="showTip(event, 'fs52', 100)" class="f">many1Chars</span> (<span onmouseout="hideTip(event, 'fs53', 101)" onmouseover="showTip(event, 'fs53', 101)" class="f">noneOf</span> <span class="s">&quot; </span><span class="e">\t</span><span class="s"></span><span class="e">\n</span><span class="s">=&quot;</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 102)" onmouseover="showTip(event, 'fs54', 102)" class="f">keyvalue</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs51', 103)" onmouseover="showTip(event, 'fs51', 103)" class="f">kvKey</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs14', 104)" onmouseover="showTip(event, 'fs14', 104)" class="f">spc</span>) <span class="o">.</span><span class="o">&gt;&gt;.</span> (<span onmouseout="hideTip(event, 'fs17', 105)" onmouseover="showTip(event, 'fs17', 105)" class="f">lexeme</span> <span class="s">&quot;=&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs50', 106)" onmouseover="showTip(event, 'fs50', 106)" class="f">value</span>) <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs55', 107)" onmouseover="showTip(event, 'fs55', 107)" class="p">KeyValue</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 108)" onmouseover="showTip(event, 'fs56', 108)" class="f">kgKey</span>    <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs52', 109)" onmouseover="showTip(event, 'fs52', 109)" class="f">many1Chars</span> (<span onmouseout="hideTip(event, 'fs53', 110)" onmouseover="showTip(event, 'fs53', 110)" class="f">noneOf</span> <span class="s">&quot; </span><span class="e">\t</span><span class="s"></span><span class="e">\n</span><span class="s">].&quot;</span>)) <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs14', 111)" onmouseover="showTip(event, 'fs14', 111)" class="f">spc</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 112)" onmouseover="showTip(event, 'fs57', 112)" class="f">keygroup</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 113)" onmouseover="showTip(event, 'fs25', 113)" class="f">blanks</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs28', 114)" onmouseover="showTip(event, 'fs28', 114)" class="f">brace</span> (<span onmouseout="hideTip(event, 'fs46', 115)" onmouseover="showTip(event, 'fs46', 115)" class="f">sepBy</span> <span onmouseout="hideTip(event, 'fs56', 116)" onmouseover="showTip(event, 'fs56', 116)" class="f">kgKey</span> (<span onmouseout="hideTip(event, 'fs17', 117)" onmouseover="showTip(event, 'fs17', 117)" class="f">lexeme</span> <span class="s">&quot;.&quot;</span>)) <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs5', 118)" onmouseover="showTip(event, 'fs5', 118)" class="p">KeyGroup</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 119)" onmouseover="showTip(event, 'fs58', 119)" class="f">document</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 120)" onmouseover="showTip(event, 'fs25', 120)" class="f">blanks</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs15', 121)" onmouseover="showTip(event, 'fs15', 121)" class="f">many</span> (<span onmouseout="hideTip(event, 'fs57', 122)" onmouseover="showTip(event, 'fs57', 122)" class="f">keygroup</span> <span class="o">&lt;|&gt;</span> <span onmouseout="hideTip(event, 'fs54', 123)" onmouseover="showTip(event, 'fs54', 123)" class="f">keyvalue</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs25', 124)" onmouseover="showTip(event, 'fs25', 124)" class="f">blanks</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs59', 125)" onmouseover="showTip(event, 'fs59', 125)" class="f">parse</span> <span onmouseout="hideTip(event, 'fs60', 126)" onmouseover="showTip(event, 'fs60', 126)" class="i">text</span> <span class="o">=</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs61', 127)" onmouseover="showTip(event, 'fs61', 127)" class="i">toml</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs62', 128)" onmouseover="showTip(event, 'fs62', 128)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 129)" onmouseover="showTip(event, 'fs63', 129)" class="i">Generic</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 130)" onmouseover="showTip(event, 'fs64', 130)" class="t">Dictionary</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs6', 131)" onmouseover="showTip(event, 'fs6', 131)" class="t">string</span>, <span onmouseout="hideTip(event, 'fs9', 132)" onmouseover="showTip(event, 'fs9', 132)" class="t">obj</span><span class="o">&gt;</span>()
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs65', 133)" onmouseover="showTip(event, 'fs65', 133)" class="v">currentKg</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs66', 134)" onmouseover="showTip(event, 'fs66', 134)" class="f">ref</span> []
  <span class="k">match</span> <span onmouseout="hideTip(event, 'fs67', 135)" onmouseover="showTip(event, 'fs67', 135)" class="f">run</span> <span onmouseout="hideTip(event, 'fs58', 136)" onmouseover="showTip(event, 'fs58', 136)" class="f">document</span> <span onmouseout="hideTip(event, 'fs60', 137)" onmouseover="showTip(event, 'fs60', 137)" class="i">text</span> <span class="k">with</span>
  | <span onmouseout="hideTip(event, 'fs68', 138)" onmouseover="showTip(event, 'fs68', 138)" class="p">Success</span>(<span onmouseout="hideTip(event, 'fs69', 139)" onmouseover="showTip(event, 'fs69', 139)" class="i">tokens</span>,_,_) <span class="k">-&gt;</span>
    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs70', 140)" onmouseover="showTip(event, 'fs70', 140)" class="i">token</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs69', 141)" onmouseover="showTip(event, 'fs69', 141)" class="i">tokens</span> <span class="k">do</span>
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs70', 142)" onmouseover="showTip(event, 'fs70', 142)" class="i">token</span> <span class="k">with</span>
      | <span onmouseout="hideTip(event, 'fs5', 143)" onmouseover="showTip(event, 'fs5', 143)" class="p">KeyGroup</span> <span onmouseout="hideTip(event, 'fs71', 144)" onmouseover="showTip(event, 'fs71', 144)" class="i">kg</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs65', 145)" onmouseover="showTip(event, 'fs65', 145)" class="v">currentKg</span> <span class="o">:=</span> <span onmouseout="hideTip(event, 'fs71', 146)" onmouseover="showTip(event, 'fs71', 146)" class="i">kg</span>
      | <span onmouseout="hideTip(event, 'fs55', 147)" onmouseover="showTip(event, 'fs55', 147)" class="p">KeyValue</span> (<span onmouseout="hideTip(event, 'fs72', 148)" onmouseover="showTip(event, 'fs72', 148)" class="i">key</span>,<span onmouseout="hideTip(event, 'fs73', 149)" onmouseover="showTip(event, 'fs73', 149)" class="i">value</span>) <span class="k">-&gt;</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs72', 150)" onmouseover="showTip(event, 'fs72', 150)" class="i">key</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs74', 151)" onmouseover="showTip(event, 'fs74', 151)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs75', 152)" onmouseover="showTip(event, 'fs75', 152)" class="f">concat</span> <span class="s">&quot;.&quot;</span> [ <span class="k">yield!</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs65', 153)" onmouseover="showTip(event, 'fs65', 153)" class="v">currentKg</span>; <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs72', 154)" onmouseover="showTip(event, 'fs72', 154)" class="i">key</span>]
        <span onmouseout="hideTip(event, 'fs61', 155)" onmouseover="showTip(event, 'fs61', 155)" class="i">toml</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs76', 156)" onmouseover="showTip(event, 'fs76', 156)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs72', 157)" onmouseover="showTip(event, 'fs72', 157)" class="i">key</span>, <span onmouseout="hideTip(event, 'fs73', 158)" onmouseover="showTip(event, 'fs73', 158)" class="i">value</span>)
  | <span onmouseout="hideTip(event, 'fs77', 159)" onmouseover="showTip(event, 'fs77', 159)" class="i">__</span> <span class="k">-&gt;</span> ()
  <span onmouseout="hideTip(event, 'fs61', 160)" onmouseover="showTip(event, 'fs61', 160)" class="i">toml</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs78', 161)" onmouseover="showTip(event, 'fs78', 161)" class="i">example</span> <span class="o">=</span> <span id="fst79" onmouseout="hideTip(event, 'fs79', 162)" onmouseover="showTip(event, 'fs79', 162, document.getElementById('fst79'))" class="omitted">toml example</span>

<span class="k">for</span> <span onmouseout="hideTip(event, 'fs80', 163)" onmouseover="showTip(event, 'fs80', 163)" class="i">tomlValue</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs59', 164)" onmouseover="showTip(event, 'fs59', 164)" class="f">parse</span> <span onmouseout="hideTip(event, 'fs78', 165)" onmouseover="showTip(event, 'fs78', 165)" class="i">example</span> <span class="k">do</span>
  <span onmouseout="hideTip(event, 'fs81', 166)" onmouseover="showTip(event, 'fs81', 166)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs80', 167)" onmouseover="showTip(event, 'fs80', 167)" class="i">tomlValue</span>
<span onmouseout="hideTip(event, 'fs82', 168)" onmouseover="showTip(event, 'fs82', 168)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs83', 169)" onmouseover="showTip(event, 'fs83', 169)" class="f">ReadLine</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs84', 170)" onmouseover="showTip(event, 'fs84', 170)" class="f">ignore</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module Toml</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace FParsec</div>
<div class="tip" id="fs4">type Token =<br />&#160;&#160;| KeyGroup of string list<br />&#160;&#160;| KeyValue of string * obj<br /><br />Full name: Toml.Token</div>
<div class="tip" id="fs5">union case Token.KeyGroup: string list -&gt; Token</div>
<div class="tip" id="fs6">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs7">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs8">Multiple items<br />union case Token.KeyValue: string * obj -&gt; Token<br /><br />--------------------<br />active recognizer KeyValue: Collections.Generic.KeyValuePair&lt;&#39;Key,&#39;Value&gt; -&gt; &#39;Key * &#39;Value<br /><br />Full name: Microsoft.FSharp.Core.Operators.( |KeyValue| )</div>
<div class="tip" id="fs9">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs10">val p1 : Parser&lt;&#39;a,&#39;b&gt;</div>
<div class="tip" id="fs11">val p2 : Parser&lt;&#39;c,&#39;b&gt;</div>
<div class="tip" id="fs12">val attempt : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;a,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.attempt</div>
<div class="tip" id="fs13">val box : value:&#39;T -&gt; obj<br /><br />Full name: Microsoft.FSharp.Core.Operators.box</div>
<div class="tip" id="fs14">val spc : Parser&lt;char list,unit&gt;<br /><br />Full name: Toml.spc</div>
<div class="tip" id="fs15">val many : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;a list,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.many</div>
<div class="tip" id="fs16">val anyOf : seq&lt;char&gt; -&gt; Parser&lt;char,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.anyOf</div>
<div class="tip" id="fs17">val lexeme : s:string -&gt; Parser&lt;string,unit&gt;<br /><br />Full name: Toml.lexeme</div>
<div class="tip" id="fs18">val s : string</div>
<div class="tip" id="fs19">val pstring : string -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.pstring</div>
<div class="tip" id="fs20">val lexemel : s:string -&gt; Parser&lt;string,&#39;a&gt;<br /><br />Full name: Toml.lexemel</div>
<div class="tip" id="fs21">val spaces : Parser&lt;unit,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.spaces</div>
<div class="tip" id="fs22">val comment : Parser&lt;(char * string),unit&gt;<br /><br />Full name: Toml.comment</div>
<div class="tip" id="fs23">val pchar : char -&gt; Parser&lt;char,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.pchar</div>
<div class="tip" id="fs24">val restOfLine : bool -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.restOfLine</div>
<div class="tip" id="fs25">val blanks : Parser&lt;unit,unit&gt;<br /><br />Full name: Toml.blanks</div>
<div class="tip" id="fs26">val skipMany : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;unit,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.skipMany</div>
<div class="tip" id="fs27">val newline&lt;&#39;u&gt; : Parser&lt;char,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.newline</div>
<div class="tip" id="fs28">val brace : p:Parser&lt;&#39;a,&#39;b&gt; -&gt; Parser&lt;&#39;a,&#39;b&gt;<br /><br />Full name: Toml.brace</div>
<div class="tip" id="fs29">val p : Parser&lt;&#39;a,&#39;b&gt;</div>
<div class="tip" id="fs30">val between : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;b,&#39;u&gt; -&gt; Parser&lt;&#39;c,&#39;u&gt; -&gt; Parser&lt;&#39;c,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.between</div>
<div class="tip" id="fs31">val pbool : Parser&lt;bool,unit&gt;<br /><br />Full name: Toml.pbool</div>
<div class="tip" id="fs32">val pstr : Parser&lt;string,unit&gt;<br /><br />Full name: Toml.pstr</div>
<div class="tip" id="fs33">val manySatisfy : (char -&gt; bool) -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.manySatisfy</div>
<div class="tip" id="fs34">val pdate&#39; : s:string -&gt; Parser&lt;DateTime,&#39;a&gt;<br /><br />Full name: Toml.pdate&#39;</div>
<div class="tip" id="fs35">val preturn : &#39;a -&gt; Parser&lt;&#39;a,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.preturn</div>
<div class="tip" id="fs36">Multiple items<br />type DateTime =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : ticks:int64 -&gt; DateTime + 10 overloads<br />&#160;&#160;&#160;&#160;member Add : value:TimeSpan -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddDays : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddHours : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMilliseconds : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMinutes : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMonths : months:int -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddSeconds : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddTicks : value:int64 -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddYears : value:int -&gt; DateTime<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.DateTime<br /><br />--------------------<br />DateTime()<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(ticks: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(ticks: int64, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, calendar: Globalization.Calendar) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, calendar: Globalization.Calendar) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs37">DateTime.Parse(s: string) : DateTime<br />DateTime.Parse(s: string, provider: IFormatProvider) : DateTime<br />DateTime.Parse(s: string, provider: IFormatProvider, styles: Globalization.DateTimeStyles) : DateTime</div>
<div class="tip" id="fs38">namespace System.Globalization</div>
<div class="tip" id="fs39">type DateTimeStyles =<br />&#160;&#160;| None = 0<br />&#160;&#160;| AllowLeadingWhite = 1<br />&#160;&#160;| AllowTrailingWhite = 2<br />&#160;&#160;| AllowInnerWhite = 4<br />&#160;&#160;| AllowWhiteSpaces = 7<br />&#160;&#160;| NoCurrentDateDefault = 8<br />&#160;&#160;| AdjustToUniversal = 16<br />&#160;&#160;| AssumeLocal = 32<br />&#160;&#160;| AssumeUniversal = 64<br />&#160;&#160;| RoundtripKind = 128<br /><br />Full name: System.Globalization.DateTimeStyles</div>
<div class="tip" id="fs40">field Globalization.DateTimeStyles.RoundtripKind = 128</div>
<div class="tip" id="fs41">val fail : string -&gt; Parser&lt;&#39;a,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.fail</div>
<div class="tip" id="fs42">val pdate : Parser&lt;DateTime,unit&gt;<br /><br />Full name: Toml.pdate</div>
<div class="tip" id="fs43">val anyString : int32 -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.anyString</div>
<div class="tip" id="fs44">val ary : elem:Parser&lt;&#39;a,&#39;b&gt; -&gt; Parser&lt;&#39;a list,&#39;b&gt;<br /><br />Full name: Toml.ary</div>
<div class="tip" id="fs45">val elem : Parser&lt;&#39;a,&#39;b&gt;</div>
<div class="tip" id="fs46">val sepBy : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;b,&#39;u&gt; -&gt; Parser&lt;&#39;a list,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.sepBy</div>
<div class="tip" id="fs47">val pary : Parser&lt;obj,unit&gt;<br /><br />Full name: Toml.pary</div>
<div class="tip" id="fs48">val pint32 : Parser&lt;int32,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.pint32</div>
<div class="tip" id="fs49">val pfloat : Parser&lt;float,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.pfloat</div>
<div class="tip" id="fs50">val value : Parser&lt;obj,unit&gt;<br /><br />Full name: Toml.value</div>
<div class="tip" id="fs51">val kvKey : Parser&lt;string,unit&gt;<br /><br />Full name: Toml.kvKey</div>
<div class="tip" id="fs52">val many1Chars : Parser&lt;char,&#39;u&gt; -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.many1Chars</div>
<div class="tip" id="fs53">val noneOf : seq&lt;char&gt; -&gt; Parser&lt;char,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.noneOf</div>
<div class="tip" id="fs54">val keyvalue : Parser&lt;Token,unit&gt;<br /><br />Full name: Toml.keyvalue</div>
<div class="tip" id="fs55">union case Token.KeyValue: string * obj -&gt; Token</div>
<div class="tip" id="fs56">val kgKey : Parser&lt;string,unit&gt;<br /><br />Full name: Toml.kgKey</div>
<div class="tip" id="fs57">val keygroup : Parser&lt;Token,unit&gt;<br /><br />Full name: Toml.keygroup</div>
<div class="tip" id="fs58">val document : Parser&lt;Token list,unit&gt;<br /><br />Full name: Toml.document</div>
<div class="tip" id="fs59">val parse : text:string -&gt; Collections.Generic.Dictionary&lt;string,obj&gt;<br /><br />Full name: Toml.parse</div>
<div class="tip" id="fs60">val text : string</div>
<div class="tip" id="fs61">val toml : Collections.Generic.Dictionary&lt;string,obj&gt;</div>
<div class="tip" id="fs62">Multiple items<br />namespace System.Collections<br /><br />--------------------<br />namespace Microsoft.FSharp.Collections</div>
<div class="tip" id="fs63">namespace System.Collections.Generic</div>
<div class="tip" id="fs64">Multiple items<br />type Dictionary&lt;&#39;TKey,&#39;TValue&gt; =<br />&#160;&#160;new : unit -&gt; Dictionary&lt;&#39;TKey, &#39;TValue&gt; + 5 overloads<br />&#160;&#160;member Add : key:&#39;TKey * value:&#39;TValue -&gt; unit<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Comparer : IEqualityComparer&lt;&#39;TKey&gt;<br />&#160;&#160;member ContainsKey : key:&#39;TKey -&gt; bool<br />&#160;&#160;member ContainsValue : value:&#39;TValue -&gt; bool<br />&#160;&#160;member Count : int<br />&#160;&#160;member GetEnumerator : unit -&gt; Enumerator&lt;&#39;TKey, &#39;TValue&gt;<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;member Item : &#39;TKey -&gt; &#39;TValue with get, set<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br />&#160;&#160;nested type KeyCollection<br />&#160;&#160;nested type ValueCollection<br /><br />Full name: System.Collections.Generic.Dictionary&lt;_,_&gt;<br /><br />--------------------<br />Collections.Generic.Dictionary() : unit<br />Collections.Generic.Dictionary(capacity: int) : unit<br />Collections.Generic.Dictionary(comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Collections.Generic.Dictionary(dictionary: Collections.Generic.IDictionary&lt;&#39;TKey,&#39;TValue&gt;) : unit<br />Collections.Generic.Dictionary(capacity: int, comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Collections.Generic.Dictionary(dictionary: Collections.Generic.IDictionary&lt;&#39;TKey,&#39;TValue&gt;, comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit</div>
<div class="tip" id="fs65">val currentKg : string list ref</div>
<div class="tip" id="fs66">Multiple items<br />val ref : value:&#39;T -&gt; &#39;T ref<br /><br />Full name: Microsoft.FSharp.Core.Operators.ref<br /><br />--------------------<br />type &#39;T ref = Ref&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.ref&lt;_&gt;</div>
<div class="tip" id="fs67">val run : Parser&lt;&#39;Result,unit&gt; -&gt; string -&gt; ParserResult&lt;&#39;Result,unit&gt;<br /><br />Full name: FParsec.CharParsers.run</div>
<div class="tip" id="fs68">union case ParserResult.Success: &#39;Result * &#39;UserState * Position -&gt; ParserResult&lt;&#39;Result,&#39;UserState&gt;</div>
<div class="tip" id="fs69">val tokens : Token list</div>
<div class="tip" id="fs70">val token : Token</div>
<div class="tip" id="fs71">val kg : string list</div>
<div class="tip" id="fs72">val key : string</div>
<div class="tip" id="fs73">val value : obj</div>
<div class="tip" id="fs74">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs75">val concat : sep:string -&gt; strings:seq&lt;string&gt; -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.String.concat</div>
<div class="tip" id="fs76">Collections.Generic.Dictionary.Add(key: string, value: obj) : unit</div>
<div class="tip" id="fs77">val __ : ParserResult&lt;Token list,unit&gt;</div>
<div class="tip" id="fs78">val example : string<br /><br />Full name: Toml.example</div>
<div class="tip" id="fs79">&quot;&quot;&quot;<br />[group1]<br />key = true<br />key2 = 1337<br />title = &quot;TOML Example&quot;<br /><br />[  owner]<br />name = &quot;Tom Preston-Werner&quot;<br />organization = &quot;GitHub&quot;<br />bio = &quot;GitHub Cofounder &amp; CEO\nLikes tater tots and beer.&quot;<br />dob =  1979-05-27T07:32:00Z   # First class dates? Why not?<br /><br />[database  ]<br />server= &quot;192.168.1.1&quot;<br />ports       =  [ 8001,8001 , 8002]<br />connection_max =5000<br />enabled=true<br /><br />[servers]<br /><br />&#160;&#160;# You can indent as you please. Tabs or spaces. TOML don&#39;t care.<br />&#160;&#160;[  servers  .alpha]<br />&#160;&#160;ip = &quot;10.0.0.1&quot;<br />&#160;&#160;dc = &quot;eqdc10&quot;<br /><br />&#160;&#160;[servers.  beta  ]<br />&#160;&#160;ip = &quot;10.0.0.2&quot;<br />&#160;&#160;dc = &quot;eqdc10&quot;<br /><br />[clients]<br />data = [ [&quot;gamma&quot;,&quot;delta&quot;], [1, 2] ] # just an update to make sure parsers support it<br /><br /># Line breaks are OK when inside arrays<br />hosts = [<br />&#160;&#160;&quot;alpha&quot;,<br />&#160;&#160;&quot;omega&quot;<br />&#160;&#160;]<br />&quot;&quot;&quot;</div>
<div class="tip" id="fs80">val tomlValue : Collections.Generic.KeyValuePair&lt;string,obj&gt;</div>
<div class="tip" id="fs81">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs82">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs83">Console.ReadLine() : string</div>
<div class="tip" id="fs84">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>

