<h2><a name="Transform-expressions-into-Excel-formulae" class="anchor" href="#Transform-expressions-into-Excel-formulae">Transform expressions into Excel formulae</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
<span class="l">154: </span>
<span class="l">155: </span>
<span class="l">156: </span>
<span class="l">157: </span>
<span class="l">158: </span>
<span class="l">159: </span>
<span class="l">160: </span>
<span class="l">161: </span>
<span class="l">162: </span>
<span class="l">163: </span>
<span class="l">164: </span>
<span class="l">165: </span>
<span class="l">166: </span>
<span class="l">167: </span>
<span class="l">168: </span>
<span class="l">169: </span>
<span class="l">170: </span>
<span class="l">171: </span>
<span class="l">172: </span>
<span class="l">173: </span>
<span class="l">174: </span>
<span class="l">175: </span>
<span class="l">176: </span>
<span class="l">177: </span>
<span class="l">178: </span>
<span class="l">179: </span>
<span class="l">180: </span>
<span class="l">181: </span>
<span class="l">182: </span>
<span class="l">183: </span>
<span class="l">184: </span>
<span class="l">185: </span>
<span class="l">186: </span>
<span class="l">187: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span class="i">Mono</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">Reflection</span>

<span class="c">/// Get reflected definition from a closure obj with Mono.Reflection</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="f">defForObj</span>() <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">cache</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">Generic</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="t">Dictionary</span><span class="o">&lt;</span>_, _<span class="o">&gt;</span>()
    <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="i">obj</span> <span class="k">-&gt;</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="i">ty</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">obj</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="f">GetType</span>()
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs3', 12)" onmouseover="showTip(event, 'fs3', 12)" class="i">cache</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="f">ContainsKey</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">ty</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs3', 15)" onmouseover="showTip(event, 'fs3', 15)" class="i">cache</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs9', 16)" onmouseover="showTip(event, 'fs9', 16)" class="i">ty</span>]
        <span class="k">else</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="i">methods</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 18)" onmouseover="showTip(event, 'fs9', 18)" class="i">ty</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="f">GetMethods</span>()

            <span class="c">// find closure&#39;s invoke</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="i">invoke</span> <span class="o">=</span> 
                <span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="i">methods</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="f">tryFind</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="i">mi</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs17', 25)" onmouseover="showTip(event, 'fs17', 25)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 26)" onmouseover="showTip(event, 'fs18', 26)" class="i">DeclaringType</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 27)" onmouseover="showTip(event, 'fs9', 27)" class="i">ty</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="i">Name</span> <span class="o">=</span> <span class="s">&quot;Invoke&quot;</span>)
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 30)" onmouseover="showTip(event, 'fs20', 30)" class="i">def</span> <span class="o">=</span> 
                <span class="k">match</span> <span onmouseout="hideTip(event, 'fs14', 31)" onmouseover="showTip(event, 'fs14', 31)" class="i">invoke</span> <span class="k">with</span>
                | <span onmouseout="hideTip(event, 'fs21', 32)" onmouseover="showTip(event, 'fs21', 32)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs17', 33)" onmouseover="showTip(event, 'fs17', 33)" class="i">mi</span> <span class="k">-&gt;</span> 
                    <span class="c">// invoke methods does have a body, so we don&#39;t check it for null </span>
                    <span class="c">// (but e.g. GetType doesn&#39;t)</span>
                    <span onmouseout="hideTip(event, 'fs17', 34)" onmouseover="showTip(event, 'fs17', 34)" class="i">mi</span><span class="o">.</span><span class="i">GetInstructions</span>() 
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs22', 35)" onmouseover="showTip(event, 'fs22', 35)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 36)" onmouseover="showTip(event, 'fs23', 36)" class="f">tryFind</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs24', 37)" onmouseover="showTip(event, 'fs24', 37)" class="i">instr</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs24', 38)" onmouseover="showTip(event, 'fs24', 38)" class="i">instr</span><span class="o">.</span><span class="i">OpCode</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 39)" onmouseover="showTip(event, 'fs25', 39)" class="i">Emit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 40)" onmouseover="showTip(event, 'fs26', 40)" class="t">OpCodes</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 41)" onmouseover="showTip(event, 'fs27', 41)" class="i">Call</span>)
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs28', 42)" onmouseover="showTip(event, 'fs28', 42)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 43)" onmouseover="showTip(event, 'fs29', 43)" class="f">bind</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs24', 44)" onmouseover="showTip(event, 'fs24', 44)" class="i">instr</span> <span class="k">-&gt;</span> 
                        <span onmouseout="hideTip(event, 'fs24', 45)" onmouseover="showTip(event, 'fs24', 45)" class="i">instr</span><span class="o">.</span><span class="i">Operand</span> <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs4', 46)" onmouseover="showTip(event, 'fs4', 46)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 47)" onmouseover="showTip(event, 'fs30', 47)" class="i">Reflection</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 48)" onmouseover="showTip(event, 'fs31', 48)" class="t">MethodInfo</span> <span class="c">// original function info</span>
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs32', 49)" onmouseover="showTip(event, 'fs32', 49)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 50)" onmouseover="showTip(event, 'fs33', 50)" class="f">TryGetReflectedDefinition</span>)
                | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs34', 51)" onmouseover="showTip(event, 'fs34', 51)" class="p">None</span>
            <span onmouseout="hideTip(event, 'fs3', 52)" onmouseover="showTip(event, 'fs3', 52)" class="i">cache</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 53)" onmouseover="showTip(event, 'fs35', 53)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs9', 54)" onmouseover="showTip(event, 'fs9', 54)" class="i">ty</span>, <span onmouseout="hideTip(event, 'fs20', 55)" onmouseover="showTip(event, 'fs20', 55)" class="i">def</span>)
            <span onmouseout="hideTip(event, 'fs20', 56)" onmouseover="showTip(event, 'fs20', 56)" class="i">def</span>

<span class="c">/// Get reflected definition for method info </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 57)" onmouseover="showTip(event, 'fs36', 57)" class="f">defForMethodInfo</span>() <span class="o">=</span><span id="fst37" onmouseout="hideTip(event, 'fs37', 58)" onmouseover="showTip(event, 'fs37', 58, document.getElementById('fst37'))" class="omitted">(...)</span>

<span class="c">/// Simplified SpecificCall</span>
<span class="k">let</span> <span class="k">inline</span> (|<span onmouseout="hideTip(event, 'fs38', 59)" onmouseover="showTip(event, 'fs38', 59)" class="p">Func</span>|_|) <span onmouseout="hideTip(event, 'fs39', 60)" onmouseover="showTip(event, 'fs39', 60)" class="i">expr</span> <span class="o">=</span><span id="fst40" onmouseout="hideTip(event, 'fs40', 61)" onmouseover="showTip(event, 'fs40', 61, document.getElementById('fst40'))" class="omitted">(...)</span>

<span class="c">/// Info for the transformation steps</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs41', 62)" onmouseover="showTip(event, 'fs41', 62)" class="t">Info</span> <span class="o">=</span> {
    <span onmouseout="hideTip(event, 'fs42', 63)" onmouseover="showTip(event, 'fs42', 63)" class="i">Scope</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs43', 64)" onmouseover="showTip(event, 'fs43', 64)" class="t">Map</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs44', 65)" onmouseover="showTip(event, 'fs44', 65)" class="t">string</span>, <span onmouseout="hideTip(event, 'fs32', 66)" onmouseover="showTip(event, 'fs32', 66)" class="t">Expr</span><span class="o">&gt;</span>
    <span onmouseout="hideTip(event, 'fs45', 67)" onmouseover="showTip(event, 'fs45', 67)" class="i">Prior</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs46', 68)" onmouseover="showTip(event, 'fs46', 68)" class="t">int</span>
    <span onmouseout="hideTip(event, 'fs47', 69)" onmouseover="showTip(event, 'fs47', 69)" class="i">RightOperand</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs48', 70)" onmouseover="showTip(event, 'fs48', 70)" class="t">bool</span>
}

<span class="c">/// Generate a formula pattern for an expression</span>
<span class="c">/// column number - index of var in the env; &#39;#&#39; is a temp placeholder for a row number</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs49', 71)" onmouseover="showTip(event, 'fs49', 71)" class="f">generatePattern</span> <span onmouseout="hideTip(event, 'fs39', 72)" onmouseover="showTip(event, 'fs39', 72)" class="i">expr</span> <span onmouseout="hideTip(event, 'fs50', 73)" onmouseover="showTip(event, 'fs50', 73)" class="i">env</span> <span class="o">=</span>     
    <span id="fst51" onmouseout="hideTip(event, 'fs51', 74)" onmouseover="showTip(event, 'fs51', 74, document.getElementById('fst51'))" class="omitted">Defaults</span>
    
    <span class="c">// check if we need to add the parens</span>
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs52', 75)" onmouseover="showTip(event, 'fs52', 75)" class="f">addParens</span> (<span onmouseout="hideTip(event, 'fs53', 76)" onmouseover="showTip(event, 'fs53', 76)" class="i">info</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs41', 77)" onmouseover="showTip(event, 'fs41', 77)" class="t">Info</span>) <span onmouseout="hideTip(event, 'fs54', 78)" onmouseover="showTip(event, 'fs54', 78)" class="i">currPrior</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs53', 79)" onmouseover="showTip(event, 'fs53', 79)" class="i">info</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 80)" onmouseover="showTip(event, 'fs45', 80)" class="i">Prior</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs54', 81)" onmouseover="showTip(event, 'fs54', 81)" class="i">currPrior</span> <span class="o">||</span> (<span onmouseout="hideTip(event, 'fs53', 82)" onmouseover="showTip(event, 'fs53', 82)" class="i">info</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 83)" onmouseover="showTip(event, 'fs45', 83)" class="i">Prior</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs54', 84)" onmouseover="showTip(event, 'fs54', 84)" class="i">currPrior</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs53', 85)" onmouseover="showTip(event, 'fs53', 85)" class="i">info</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 86)" onmouseover="showTip(event, 'fs47', 86)" class="i">RightOperand</span>)

    <span class="c">// let x = ...; let f x y = ...; f 1 x</span>
    <span class="c">// inside f x is Value(1), y is outer x value </span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs55', 87)" onmouseover="showTip(event, 'fs55', 87)" class="f">updateScope</span> <span onmouseout="hideTip(event, 'fs56', 88)" onmouseover="showTip(event, 'fs56', 88)" class="i">names</span> <span onmouseout="hideTip(event, 'fs57', 89)" onmouseover="showTip(event, 'fs57', 89)" class="i">parms</span> <span onmouseout="hideTip(event, 'fs58', 90)" onmouseover="showTip(event, 'fs58', 90)" class="i">scope</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs22', 91)" onmouseover="showTip(event, 'fs22', 91)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 92)" onmouseover="showTip(event, 'fs59', 92)" class="f">zip</span> <span onmouseout="hideTip(event, 'fs56', 93)" onmouseover="showTip(event, 'fs56', 93)" class="i">names</span> <span onmouseout="hideTip(event, 'fs57', 94)" onmouseover="showTip(event, 'fs57', 94)" class="i">parms</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs22', 95)" onmouseover="showTip(event, 'fs22', 95)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 96)" onmouseover="showTip(event, 'fs60', 96)" class="f">fold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs61', 97)" onmouseover="showTip(event, 'fs61', 97)" class="i">sc</span> <span class="k">-&gt;</span> <span class="k">function</span>
            | <span onmouseout="hideTip(event, 'fs62', 98)" onmouseover="showTip(event, 'fs62', 98)" class="i">name</span>, <span onmouseout="hideTip(event, 'fs63', 99)" onmouseover="showTip(event, 'fs63', 99)" class="p">Var</span> <span onmouseout="hideTip(event, 'fs64', 100)" onmouseover="showTip(event, 'fs64', 100)" class="i">var</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs65', 101)" onmouseover="showTip(event, 'fs65', 101)" class="f">replace</span> <span class="i">name</span> <span onmouseout="hideTip(event, 'fs61', 102)" onmouseover="showTip(event, 'fs61', 102)" class="i">sc</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs64', 103)" onmouseover="showTip(event, 'fs64', 103)" class="i">var</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 104)" onmouseover="showTip(event, 'fs66', 104)" class="i">Name</span>] <span onmouseout="hideTip(event, 'fs61', 105)" onmouseover="showTip(event, 'fs61', 105)" class="i">sc</span>
            | <span onmouseout="hideTip(event, 'fs62', 106)" onmouseover="showTip(event, 'fs62', 106)" class="i">name</span>, <span onmouseout="hideTip(event, 'fs67', 107)" onmouseover="showTip(event, 'fs67', 107)" class="i">param</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs65', 108)" onmouseover="showTip(event, 'fs65', 108)" class="f">replace</span> <span class="i">name</span> <span onmouseout="hideTip(event, 'fs67', 109)" onmouseover="showTip(event, 'fs67', 109)" class="i">param</span> <span onmouseout="hideTip(event, 'fs61', 110)" onmouseover="showTip(event, 'fs61', 110)" class="i">sc</span>) <span onmouseout="hideTip(event, 'fs58', 111)" onmouseover="showTip(event, 'fs58', 111)" class="i">scope</span>

    <span class="c">// print binary ops: (x op y)</span>
    <span class="k">let</span> <span class="k">rec</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs68', 112)" onmouseover="showTip(event, 'fs68', 112)" class="f">printBinaryOp</span> <span onmouseout="hideTip(event, 'fs69', 113)" onmouseover="showTip(event, 'fs69', 113)" class="i">op</span> <span onmouseout="hideTip(event, 'fs70', 114)" onmouseover="showTip(event, 'fs70', 114)" class="i">x</span> <span onmouseout="hideTip(event, 'fs71', 115)" onmouseover="showTip(event, 'fs71', 115)" class="i">y</span> <span onmouseout="hideTip(event, 'fs72', 116)" onmouseover="showTip(event, 'fs72', 116)" class="i">curr</span> (<span onmouseout="hideTip(event, 'fs53', 117)" onmouseover="showTip(event, 'fs53', 117)" class="i">info</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs41', 118)" onmouseover="showTip(event, 'fs41', 118)" class="t">Info</span>) <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs73', 119)" onmouseover="showTip(event, 'fs73', 119)" class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs74', 120)" onmouseover="showTip(event, 'fs74', 120)" class="f">transform</span> { <span onmouseout="hideTip(event, 'fs53', 121)" onmouseover="showTip(event, 'fs53', 121)" class="i">info</span> <span class="k">with</span> <span class="i">Prior</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs72', 122)" onmouseover="showTip(event, 'fs72', 122)" class="i">curr</span>; <span class="i">RightOperand</span> <span class="o">=</span> <span class="k">false</span> } <span onmouseout="hideTip(event, 'fs70', 123)" onmouseover="showTip(event, 'fs70', 123)" class="i">x</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs75', 124)" onmouseover="showTip(event, 'fs75', 124)" class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs74', 125)" onmouseover="showTip(event, 'fs74', 125)" class="f">transform</span> { <span onmouseout="hideTip(event, 'fs53', 126)" onmouseover="showTip(event, 'fs53', 126)" class="i">info</span> <span class="k">with</span> <span class="i">Prior</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs72', 127)" onmouseover="showTip(event, 'fs72', 127)" class="i">curr</span>; <span class="i">RightOperand</span> <span class="o">=</span> <span class="k">true</span> } <span onmouseout="hideTip(event, 'fs71', 128)" onmouseover="showTip(event, 'fs71', 128)" class="i">y</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs76', 129)" onmouseover="showTip(event, 'fs76', 129)" class="i">res</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs73', 130)" onmouseover="showTip(event, 'fs73', 130)" class="i">left</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs69', 131)" onmouseover="showTip(event, 'fs69', 131)" class="i">op</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs75', 132)" onmouseover="showTip(event, 'fs75', 132)" class="i">right</span> <span class="k">in</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs52', 133)" onmouseover="showTip(event, 'fs52', 133)" class="f">addParens</span> <span onmouseout="hideTip(event, 'fs53', 134)" onmouseover="showTip(event, 'fs53', 134)" class="i">info</span> <span onmouseout="hideTip(event, 'fs72', 135)" onmouseover="showTip(event, 'fs72', 135)" class="i">curr</span> <span class="k">then</span> <span class="s">&quot;(&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs76', 136)" onmouseover="showTip(event, 'fs76', 136)" class="i">res</span> <span class="o">+</span>  <span class="s">&quot;)&quot;</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs76', 137)" onmouseover="showTip(event, 'fs76', 137)" class="i">res</span>

    <span class="c">// print functions: name(arg1, arg2, ...)</span>
    <span class="k">and</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs77', 138)" onmouseover="showTip(event, 'fs77', 138)" class="f">printFunc</span> <span onmouseout="hideTip(event, 'fs62', 139)" onmouseover="showTip(event, 'fs62', 139)" class="i">name</span> <span onmouseout="hideTip(event, 'fs78', 140)" onmouseover="showTip(event, 'fs78', 140)" class="i">args</span> <span onmouseout="hideTip(event, 'fs53', 141)" onmouseover="showTip(event, 'fs53', 141)" class="i">info</span>  <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs79', 142)" onmouseover="showTip(event, 'fs79', 142)" class="i">argValues</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs44', 143)" onmouseover="showTip(event, 'fs44', 143)" class="t">string</span>[] <span class="o">=</span> <span onmouseout="hideTip(event, 'fs80', 144)" onmouseover="showTip(event, 'fs80', 144)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 145)" onmouseover="showTip(event, 'fs81', 145)" class="f">map</span> (<span onmouseout="hideTip(event, 'fs74', 146)" onmouseover="showTip(event, 'fs74', 146)" class="f">transform</span> <span class="o">!!</span><span onmouseout="hideTip(event, 'fs53', 147)" onmouseover="showTip(event, 'fs53', 147)" class="i">info</span>) <span onmouseout="hideTip(event, 'fs78', 148)" onmouseover="showTip(event, 'fs78', 148)" class="i">args</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs80', 149)" onmouseover="showTip(event, 'fs80', 149)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs82', 150)" onmouseover="showTip(event, 'fs82', 150)" class="f">toArray</span>
        <span onmouseout="hideTip(event, 'fs83', 151)" onmouseover="showTip(event, 'fs83', 151)" class="f">sprintf</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">(</span><span class="pf">%s</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs62', 152)" onmouseover="showTip(event, 'fs62', 152)" class="i">name</span> (<span onmouseout="hideTip(event, 'fs84', 153)" onmouseover="showTip(event, 'fs84', 153)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs85', 154)" onmouseover="showTip(event, 'fs85', 154)" class="f">Join</span> (<span class="s">&quot;, &quot;</span>, <span onmouseout="hideTip(event, 'fs79', 155)" onmouseover="showTip(event, 'fs79', 155)" class="i">argValues</span>))

    <span class="c">// apply function with given parameters</span>
    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs86', 156)" onmouseover="showTip(event, 'fs86', 156)" class="f">applyFunc</span> (<span onmouseout="hideTip(event, 'fs64', 157)" onmouseover="showTip(event, 'fs64', 157)" class="i">var</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs63', 158)" onmouseover="showTip(event, 'fs63', 158)" class="t">Var</span>, <span onmouseout="hideTip(event, 'fs87', 159)" onmouseover="showTip(event, 'fs87', 159)" class="i">parms</span>) <span onmouseout="hideTip(event, 'fs53', 160)" onmouseover="showTip(event, 'fs53', 160)" class="i">info</span> <span class="o">=</span><span id="fst88" onmouseout="hideTip(event, 'fs88', 161)" onmouseover="showTip(event, 'fs88', 161, document.getElementById('fst88'))" class="omitted">(...)</span>

    <span class="c">// transform an expression into pattern</span>
    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs74', 162)" onmouseover="showTip(event, 'fs74', 162)" class="f">transform</span> (<span onmouseout="hideTip(event, 'fs53', 163)" onmouseover="showTip(event, 'fs53', 163)" class="i">info</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs41', 164)" onmouseover="showTip(event, 'fs41', 164)" class="t">Info</span>) <span class="o">=</span> <span class="k">function</span>
        | <span onmouseout="hideTip(event, 'fs89', 165)" onmouseover="showTip(event, 'fs89', 165)" class="p">Func</span> &lt;@@ (<span class="o">+</span>) @@&gt; [<span onmouseout="hideTip(event, 'fs70', 166)" onmouseover="showTip(event, 'fs70', 166)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs71', 167)" onmouseover="showTip(event, 'fs71', 167)" class="i">y</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs68', 168)" onmouseover="showTip(event, 'fs68', 168)" class="f">printBinaryOp</span> <span class="s">&quot;+&quot;</span> <span onmouseout="hideTip(event, 'fs70', 169)" onmouseover="showTip(event, 'fs70', 169)" class="i">x</span> <span onmouseout="hideTip(event, 'fs71', 170)" onmouseover="showTip(event, 'fs71', 170)" class="i">y</span> <span class="n">3</span> <span onmouseout="hideTip(event, 'fs53', 171)" onmouseover="showTip(event, 'fs53', 171)" class="i">info</span>
        | <span onmouseout="hideTip(event, 'fs89', 172)" onmouseover="showTip(event, 'fs89', 172)" class="p">Func</span> &lt;@@ (<span class="o">-</span>) @@&gt; [<span onmouseout="hideTip(event, 'fs70', 173)" onmouseover="showTip(event, 'fs70', 173)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs71', 174)" onmouseover="showTip(event, 'fs71', 174)" class="i">y</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs68', 175)" onmouseover="showTip(event, 'fs68', 175)" class="f">printBinaryOp</span> <span class="s">&quot;-&quot;</span> <span onmouseout="hideTip(event, 'fs70', 176)" onmouseover="showTip(event, 'fs70', 176)" class="i">x</span> <span onmouseout="hideTip(event, 'fs71', 177)" onmouseover="showTip(event, 'fs71', 177)" class="i">y</span> <span class="n">3</span> <span onmouseout="hideTip(event, 'fs53', 178)" onmouseover="showTip(event, 'fs53', 178)" class="i">info</span>
        | <span onmouseout="hideTip(event, 'fs89', 179)" onmouseover="showTip(event, 'fs89', 179)" class="p">Func</span> &lt;@@ <span class="o">(*)</span> @@&gt; [<span onmouseout="hideTip(event, 'fs70', 180)" onmouseover="showTip(event, 'fs70', 180)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs71', 181)" onmouseover="showTip(event, 'fs71', 181)" class="i">y</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs68', 182)" onmouseover="showTip(event, 'fs68', 182)" class="f">printBinaryOp</span> <span class="s">&quot;*&quot;</span> <span onmouseout="hideTip(event, 'fs70', 183)" onmouseover="showTip(event, 'fs70', 183)" class="i">x</span> <span onmouseout="hideTip(event, 'fs71', 184)" onmouseover="showTip(event, 'fs71', 184)" class="i">y</span> <span class="n">2</span> <span onmouseout="hideTip(event, 'fs53', 185)" onmouseover="showTip(event, 'fs53', 185)" class="i">info</span>
        | <span onmouseout="hideTip(event, 'fs89', 186)" onmouseover="showTip(event, 'fs89', 186)" class="p">Func</span> &lt;@@ (<span class="o">/</span>) @@&gt; [<span onmouseout="hideTip(event, 'fs70', 187)" onmouseover="showTip(event, 'fs70', 187)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs71', 188)" onmouseover="showTip(event, 'fs71', 188)" class="i">y</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs68', 189)" onmouseover="showTip(event, 'fs68', 189)" class="f">printBinaryOp</span> <span class="s">&quot;/&quot;</span> <span onmouseout="hideTip(event, 'fs70', 190)" onmouseover="showTip(event, 'fs70', 190)" class="i">x</span> <span onmouseout="hideTip(event, 'fs71', 191)" onmouseover="showTip(event, 'fs71', 191)" class="i">y</span> <span class="n">2</span> <span onmouseout="hideTip(event, 'fs53', 192)" onmouseover="showTip(event, 'fs53', 192)" class="i">info</span>
        | <span onmouseout="hideTip(event, 'fs89', 193)" onmouseover="showTip(event, 'fs89', 193)" class="p">Func</span> &lt;@@ ( <span class="o">**</span> ) @@&gt; [<span onmouseout="hideTip(event, 'fs70', 194)" onmouseover="showTip(event, 'fs70', 194)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs71', 195)" onmouseover="showTip(event, 'fs71', 195)" class="i">y</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs68', 196)" onmouseover="showTip(event, 'fs68', 196)" class="f">printBinaryOp</span> <span class="s">&quot;^&quot;</span> <span onmouseout="hideTip(event, 'fs70', 197)" onmouseover="showTip(event, 'fs70', 197)" class="i">x</span> <span onmouseout="hideTip(event, 'fs71', 198)" onmouseover="showTip(event, 'fs71', 198)" class="i">y</span> <span class="n">1</span> <span onmouseout="hideTip(event, 'fs53', 199)" onmouseover="showTip(event, 'fs53', 199)" class="i">info</span> 
        | <span onmouseout="hideTip(event, 'fs89', 200)" onmouseover="showTip(event, 'fs89', 200)" class="p">Func</span> &lt;@@ (<span class="o">~-</span>) @@&gt; [<span onmouseout="hideTip(event, 'fs70', 201)" onmouseover="showTip(event, 'fs70', 201)" class="i">x</span>] <span class="k">-&gt;</span> <span class="s">&quot;-&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs74', 202)" onmouseover="showTip(event, 'fs74', 202)" class="f">transform</span> { <span onmouseout="hideTip(event, 'fs53', 203)" onmouseover="showTip(event, 'fs53', 203)" class="i">info</span> <span class="k">with</span> <span class="i">Prior</span> <span class="o">=</span> <span class="n">0</span> } <span onmouseout="hideTip(event, 'fs70', 204)" onmouseover="showTip(event, 'fs70', 204)" class="i">x</span>
        | <span onmouseout="hideTip(event, 'fs89', 205)" onmouseover="showTip(event, 'fs89', 205)" class="p">Func</span> &lt;@@ (<span class="o">~+</span>) @@&gt; [<span onmouseout="hideTip(event, 'fs70', 206)" onmouseover="showTip(event, 'fs70', 206)" class="i">x</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs74', 207)" onmouseover="showTip(event, 'fs74', 207)" class="f">transform</span> { <span onmouseout="hideTip(event, 'fs53', 208)" onmouseover="showTip(event, 'fs53', 208)" class="i">info</span> <span class="k">with</span> <span class="i">Prior</span> <span class="o">=</span> <span class="n">0</span> } <span onmouseout="hideTip(event, 'fs70', 209)" onmouseover="showTip(event, 'fs70', 209)" class="i">x</span>
        | <span onmouseout="hideTip(event, 'fs89', 210)" onmouseover="showTip(event, 'fs89', 210)" class="p">Func</span> &lt;@@ <span onmouseout="hideTip(event, 'fs90', 211)" onmouseover="showTip(event, 'fs90', 211)" class="f">decimal</span> @@&gt; [<span onmouseout="hideTip(event, 'fs70', 212)" onmouseover="showTip(event, 'fs70', 212)" class="i">x</span>] 
        | <span onmouseout="hideTip(event, 'fs89', 213)" onmouseover="showTip(event, 'fs89', 213)" class="p">Func</span> &lt;@@ <span onmouseout="hideTip(event, 'fs91', 214)" onmouseover="showTip(event, 'fs91', 214)" class="f">double</span> @@&gt; [<span onmouseout="hideTip(event, 'fs70', 215)" onmouseover="showTip(event, 'fs70', 215)" class="i">x</span>] 
        | <span onmouseout="hideTip(event, 'fs89', 216)" onmouseover="showTip(event, 'fs89', 216)" class="p">Func</span> &lt;@@ <span onmouseout="hideTip(event, 'fs92', 217)" onmouseover="showTip(event, 'fs92', 217)" class="f">float</span> @@&gt; [<span onmouseout="hideTip(event, 'fs70', 218)" onmouseover="showTip(event, 'fs70', 218)" class="i">x</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs44', 219)" onmouseover="showTip(event, 'fs44', 219)" class="f">string</span> (<span onmouseout="hideTip(event, 'fs74', 220)" onmouseover="showTip(event, 'fs74', 220)" class="f">transform</span> { <span onmouseout="hideTip(event, 'fs53', 221)" onmouseover="showTip(event, 'fs53', 221)" class="i">info</span> <span class="k">with</span> <span class="i">Prior</span> <span class="o">=</span> <span class="n">0</span> } <span onmouseout="hideTip(event, 'fs70', 222)" onmouseover="showTip(event, 'fs70', 222)" class="i">x</span>)

        | <span onmouseout="hideTip(event, 'fs89', 223)" onmouseover="showTip(event, 'fs89', 223)" class="p">Func</span> &lt;@@ <span onmouseout="hideTip(event, 'fs93', 224)" onmouseover="showTip(event, 'fs93', 224)" class="f">mduration</span> @@&gt; <span onmouseout="hideTip(event, 'fs78', 225)" onmouseover="showTip(event, 'fs78', 225)" class="i">args</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs77', 226)" onmouseover="showTip(event, 'fs77', 226)" class="f">printFunc</span> <span class="s">&quot;MDURATION&quot;</span> <span onmouseout="hideTip(event, 'fs78', 227)" onmouseover="showTip(event, 'fs78', 227)" class="i">args</span> <span onmouseout="hideTip(event, 'fs53', 228)" onmouseover="showTip(event, 'fs53', 228)" class="i">info</span>
        | <span onmouseout="hideTip(event, 'fs89', 229)" onmouseover="showTip(event, 'fs89', 229)" class="p">Func</span> &lt;@@ <span onmouseout="hideTip(event, 'fs94', 230)" onmouseover="showTip(event, 'fs94', 230)" class="f">accrint</span> @@&gt; <span onmouseout="hideTip(event, 'fs78', 231)" onmouseover="showTip(event, 'fs78', 231)" class="i">args</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs77', 232)" onmouseover="showTip(event, 'fs77', 232)" class="f">printFunc</span> <span class="s">&quot;ACCRINT&quot;</span> <span onmouseout="hideTip(event, 'fs78', 233)" onmouseover="showTip(event, 'fs78', 233)" class="i">args</span> <span onmouseout="hideTip(event, 'fs53', 234)" onmouseover="showTip(event, 'fs53', 234)" class="i">info</span>
        | <span onmouseout="hideTip(event, 'fs95', 235)" onmouseover="showTip(event, 'fs95', 235)" class="p">Lambdas</span> (_, <span onmouseout="hideTip(event, 'fs96', 236)" onmouseover="showTip(event, 'fs96', 236)" class="i">e</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs74', 237)" onmouseover="showTip(event, 'fs74', 237)" class="f">transform</span> <span class="o">!!</span><span onmouseout="hideTip(event, 'fs53', 238)" onmouseover="showTip(event, 'fs53', 238)" class="i">info</span> <span onmouseout="hideTip(event, 'fs96', 239)" onmouseover="showTip(event, 'fs96', 239)" class="i">e</span>

        <span class="c">// let a, b, ... = 1, 2, ...</span>
        <span class="c">// Note: nested tuples and tuples as return values are not supported</span>
        | <span onmouseout="hideTip(event, 'fs97', 240)" onmouseover="showTip(event, 'fs97', 240)" class="p">Let</span> (_, <span onmouseout="hideTip(event, 'fs98', 241)" onmouseover="showTip(event, 'fs98', 241)" class="p">NewTuple</span> <span onmouseout="hideTip(event, 'fs99', 242)" onmouseover="showTip(event, 'fs99', 242)" class="i">vs</span>, <span onmouseout="hideTip(event, 'fs96', 243)" onmouseover="showTip(event, 'fs96', 243)" class="i">e</span>) <span class="k">-&gt;</span> 
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs100', 244)" onmouseover="showTip(event, 'fs100', 244)" class="i">res</span>, <span onmouseout="hideTip(event, 'fs101', 245)" onmouseover="showTip(event, 'fs101', 245)" class="i">newScope</span> <span class="o">=</span> <span id="fst102" onmouseout="hideTip(event, 'fs102', 246)" onmouseover="showTip(event, 'fs102', 246, document.getElementById('fst102'))" class="omitted">Update the scope</span>
            <span onmouseout="hideTip(event, 'fs74', 247)" onmouseover="showTip(event, 'fs74', 247)" class="f">transform</span> { <span onmouseout="hideTip(event, 'fs53', 248)" onmouseover="showTip(event, 'fs53', 248)" class="i">info</span> <span class="k">with</span> <span class="i">Scope</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs101', 249)" onmouseover="showTip(event, 'fs101', 249)" class="i">newScope</span> } <span onmouseout="hideTip(event, 'fs100', 250)" onmouseover="showTip(event, 'fs100', 250)" class="i">res</span>

        | <span onmouseout="hideTip(event, 'fs97', 251)" onmouseover="showTip(event, 'fs97', 251)" class="p">Let</span> (<span onmouseout="hideTip(event, 'fs64', 252)" onmouseover="showTip(event, 'fs64', 252)" class="i">var</span>, <span onmouseout="hideTip(event, 'fs103', 253)" onmouseover="showTip(event, 'fs103', 253)" class="i">value</span>, <span onmouseout="hideTip(event, 'fs96', 254)" onmouseover="showTip(event, 'fs96', 254)" class="i">e</span>) <span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs74', 255)" onmouseover="showTip(event, 'fs74', 255)" class="f">transform</span> { <span onmouseout="hideTip(event, 'fs53', 256)" onmouseover="showTip(event, 'fs53', 256)" class="i">info</span> <span class="k">with</span> <span class="i">Scope</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs65', 257)" onmouseover="showTip(event, 'fs65', 257)" class="f">replace</span> <span onmouseout="hideTip(event, 'fs64', 258)" onmouseover="showTip(event, 'fs64', 258)" class="i">var</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 259)" onmouseover="showTip(event, 'fs66', 259)" class="i">Name</span> <span onmouseout="hideTip(event, 'fs103', 260)" onmouseover="showTip(event, 'fs103', 260)" class="i">value</span> <span onmouseout="hideTip(event, 'fs53', 261)" onmouseover="showTip(event, 'fs53', 261)" class="i">info</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 262)" onmouseover="showTip(event, 'fs42', 262)" class="i">Scope</span> } <span onmouseout="hideTip(event, 'fs96', 263)" onmouseover="showTip(event, 'fs96', 263)" class="i">e</span>

        | <span onmouseout="hideTip(event, 'fs104', 264)" onmouseover="showTip(event, 'fs104', 264)" class="p">Value</span> (<span onmouseout="hideTip(event, 'fs105', 265)" onmouseover="showTip(event, 'fs105', 265)" class="i">v</span>, _) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs44', 266)" onmouseover="showTip(event, 'fs44', 266)" class="f">string</span> <span onmouseout="hideTip(event, 'fs105', 267)" onmouseover="showTip(event, 'fs105', 267)" class="i">v</span>
        <span class="c">// try to replace a varname with its column index</span>
        | <span onmouseout="hideTip(event, 'fs63', 268)" onmouseover="showTip(event, 'fs63', 268)" class="p">Var</span> <span onmouseout="hideTip(event, 'fs64', 269)" onmouseover="showTip(event, 'fs64', 269)" class="i">var</span> <span class="k">-&gt;</span> 
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs43', 270)" onmouseover="showTip(event, 'fs43', 270)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs106', 271)" onmouseover="showTip(event, 'fs106', 271)" class="f">tryFind</span> <span onmouseout="hideTip(event, 'fs64', 272)" onmouseover="showTip(event, 'fs64', 272)" class="i">var</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 273)" onmouseover="showTip(event, 'fs66', 273)" class="i">Name</span> <span onmouseout="hideTip(event, 'fs53', 274)" onmouseover="showTip(event, 'fs53', 274)" class="i">info</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 275)" onmouseover="showTip(event, 'fs42', 275)" class="i">Scope</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs21', 276)" onmouseover="showTip(event, 'fs21', 276)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs107', 277)" onmouseover="showTip(event, 'fs107', 277)" class="i">replacement</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs74', 278)" onmouseover="showTip(event, 'fs74', 278)" class="f">transform</span> <span onmouseout="hideTip(event, 'fs53', 279)" onmouseover="showTip(event, 'fs53', 279)" class="i">info</span> <span onmouseout="hideTip(event, 'fs107', 280)" onmouseover="showTip(event, 'fs107', 280)" class="i">replacement</span>
            | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs64', 281)" onmouseover="showTip(event, 'fs64', 281)" class="i">var</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 282)" onmouseover="showTip(event, 'fs66', 282)" class="i">Name</span>
        <span class="c">// args.[i] means reference to the (i+1)th column</span>
        | <span onmouseout="hideTip(event, 'fs108', 283)" onmouseover="showTip(event, 'fs108', 283)" class="p">Call</span>(<span onmouseout="hideTip(event, 'fs34', 284)" onmouseover="showTip(event, 'fs34', 284)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs17', 285)" onmouseover="showTip(event, 'fs17', 285)" class="i">mi</span>, _<span class="o">::</span>[<span onmouseout="hideTip(event, 'fs104', 286)" onmouseover="showTip(event, 'fs104', 286)" class="p">Value</span> (<span onmouseout="hideTip(event, 'fs109', 287)" onmouseover="showTip(event, 'fs109', 287)" class="i">i</span>, _)]) <span class="k">when</span> <span onmouseout="hideTip(event, 'fs17', 288)" onmouseover="showTip(event, 'fs17', 288)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 289)" onmouseover="showTip(event, 'fs18', 289)" class="i">DeclaringType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 290)" onmouseover="showTip(event, 'fs19', 290)" class="i">Name</span> <span class="o">=</span> <span class="s">&quot;IntrinsicFunctions&quot;</span> 
                                              <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs17', 291)" onmouseover="showTip(event, 'fs17', 291)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 292)" onmouseover="showTip(event, 'fs19', 292)" class="i">Name</span> <span class="o">=</span> <span class="s">&quot;GetArray&quot;</span> <span class="k">-&gt;</span> 
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs110', 293)" onmouseover="showTip(event, 'fs110', 293)" class="i">ind</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs111', 294)" onmouseover="showTip(event, 'fs111', 294)" class="f">unbox</span> <span onmouseout="hideTip(event, 'fs109', 295)" onmouseover="showTip(event, 'fs109', 295)" class="i">i</span> <span class="k">in</span> <span class="s">&quot;R#C&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs44', 296)" onmouseover="showTip(event, 'fs44', 296)" class="f">string</span> (<span onmouseout="hideTip(event, 'fs110', 297)" onmouseover="showTip(event, 'fs110', 297)" class="i">ind</span> <span class="o">+</span> <span class="n">1</span>)
        
        <span class="c">// replace MakeDecimal with a value</span>
        | <span onmouseout="hideTip(event, 'fs108', 298)" onmouseover="showTip(event, 'fs108', 298)" class="p">Call</span>(<span onmouseout="hideTip(event, 'fs34', 299)" onmouseover="showTip(event, 'fs34', 299)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs17', 300)" onmouseover="showTip(event, 'fs17', 300)" class="i">mi</span>, <span onmouseout="hideTip(event, 'fs104', 301)" onmouseover="showTip(event, 'fs104', 301)" class="p">Value</span> (<span onmouseout="hideTip(event, 'fs105', 302)" onmouseover="showTip(event, 'fs105', 302)" class="i">v</span>, _)<span class="o">::</span>_) <span class="k">when</span> <span onmouseout="hideTip(event, 'fs17', 303)" onmouseover="showTip(event, 'fs17', 303)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 304)" onmouseover="showTip(event, 'fs18', 304)" class="i">DeclaringType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 305)" onmouseover="showTip(event, 'fs19', 305)" class="i">Name</span> <span class="o">=</span> <span class="s">&quot;IntrinsicFunctions&quot;</span> 
                                            <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs17', 306)" onmouseover="showTip(event, 'fs17', 306)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 307)" onmouseover="showTip(event, 'fs19', 307)" class="i">Name</span> <span class="o">=</span> <span class="s">&quot;MakeDecimal&quot;</span>  <span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs44', 308)" onmouseover="showTip(event, 'fs44', 308)" class="f">string</span> <span onmouseout="hideTip(event, 'fs105', 309)" onmouseover="showTip(event, 'fs105', 309)" class="i">v</span>
        <span class="c">// try to inline a method call</span>
        | <span onmouseout="hideTip(event, 'fs108', 310)" onmouseover="showTip(event, 'fs108', 310)" class="p">Call</span>(<span onmouseout="hideTip(event, 'fs34', 311)" onmouseover="showTip(event, 'fs34', 311)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs17', 312)" onmouseover="showTip(event, 'fs17', 312)" class="i">mi</span>, <span onmouseout="hideTip(event, 'fs112', 313)" onmouseover="showTip(event, 'fs112', 313)" class="i">ps</span>) <span class="k">-&gt;</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs113', 314)" onmouseover="showTip(event, 'fs113', 314)" class="i">names</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 315)" onmouseover="showTip(event, 'fs17', 315)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs114', 316)" onmouseover="showTip(event, 'fs114', 316)" class="f">GetParameters</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 317)" onmouseover="showTip(event, 'fs15', 317)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs115', 318)" onmouseover="showTip(event, 'fs115', 318)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs116', 319)" onmouseover="showTip(event, 'fs116', 319)" class="i">p</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs116', 320)" onmouseover="showTip(event, 'fs116', 320)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs117', 321)" onmouseover="showTip(event, 'fs117', 321)" class="i">Name</span>)
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs101', 322)" onmouseover="showTip(event, 'fs101', 322)" class="i">newScope</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 323)" onmouseover="showTip(event, 'fs55', 323)" class="f">updateScope</span> <span onmouseout="hideTip(event, 'fs113', 324)" onmouseover="showTip(event, 'fs113', 324)" class="i">names</span> <span onmouseout="hideTip(event, 'fs112', 325)" onmouseover="showTip(event, 'fs112', 325)" class="i">ps</span> <span onmouseout="hideTip(event, 'fs53', 326)" onmouseover="showTip(event, 'fs53', 326)" class="i">info</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 327)" onmouseover="showTip(event, 'fs42', 327)" class="i">Scope</span>
            
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs118', 328)" onmouseover="showTip(event, 'fs118', 328)" class="f">tryGetReflectedDef</span> <span onmouseout="hideTip(event, 'fs17', 329)" onmouseover="showTip(event, 'fs17', 329)" class="i">mi</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs21', 330)" onmouseover="showTip(event, 'fs21', 330)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs119', 331)" onmouseover="showTip(event, 'fs119', 331)" class="i">impl</span> <span class="k">-&gt;</span>
                <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs120', 332)" onmouseover="showTip(event, 'fs120', 332)" class="f">getCall</span> <span onmouseout="hideTip(event, 'fs96', 333)" onmouseover="showTip(event, 'fs96', 333)" class="i">e</span> <span class="o">=</span>
                    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs96', 334)" onmouseover="showTip(event, 'fs96', 334)" class="i">e</span> <span class="k">with</span>
                    | <span onmouseout="hideTip(event, 'fs121', 335)" onmouseover="showTip(event, 'fs121', 335)" class="p">Lambda</span>(_, <span onmouseout="hideTip(event, 'fs121', 336)" onmouseover="showTip(event, 'fs121', 336)" class="p">Lambda</span> (_, <span onmouseout="hideTip(event, 'fs96', 337)" onmouseover="showTip(event, 'fs96', 337)" class="i">e</span>)) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs120', 338)" onmouseover="showTip(event, 'fs120', 338)" class="f">getCall</span> <span onmouseout="hideTip(event, 'fs96', 339)" onmouseover="showTip(event, 'fs96', 339)" class="i">e</span> <span class="c">// skip parameters</span>
                    | <span onmouseout="hideTip(event, 'fs122', 340)" onmouseover="showTip(event, 'fs122', 340)" class="i">call</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs122', 341)" onmouseover="showTip(event, 'fs122', 341)" class="i">call</span>
                <span onmouseout="hideTip(event, 'fs74', 342)" onmouseover="showTip(event, 'fs74', 342)" class="f">transform</span> { <span onmouseout="hideTip(event, 'fs53', 343)" onmouseover="showTip(event, 'fs53', 343)" class="i">info</span> <span class="k">with</span> <span class="i">Scope</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs101', 344)" onmouseover="showTip(event, 'fs101', 344)" class="i">newScope</span> } (<span onmouseout="hideTip(event, 'fs120', 345)" onmouseover="showTip(event, 'fs120', 345)" class="f">getCall</span> <span onmouseout="hideTip(event, 'fs119', 346)" onmouseover="showTip(event, 'fs119', 346)" class="i">impl</span>)
                
            | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs123', 347)" onmouseover="showTip(event, 'fs123', 347)" class="f">failwith</span> (<span onmouseout="hideTip(event, 'fs83', 348)" onmouseover="showTip(event, 'fs83', 348)" class="f">sprintf</span> <span class="s">&quot;Can&#39;t get reflected definition for </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs17', 349)" onmouseover="showTip(event, 'fs17', 349)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 350)" onmouseover="showTip(event, 'fs19', 350)" class="i">Name</span>)
        <span class="c">// DateTime ctor -&gt; Excel DATE function: DATE(year, month, day)</span>
        | <span onmouseout="hideTip(event, 'fs124', 351)" onmouseover="showTip(event, 'fs124', 351)" class="p">NewObject</span>(<span onmouseout="hideTip(event, 'fs125', 352)" onmouseover="showTip(event, 'fs125', 352)" class="i">ci</span>, <span onmouseout="hideTip(event, 'fs104', 353)" onmouseover="showTip(event, 'fs104', 353)" class="p">Value</span>(<span onmouseout="hideTip(event, 'fs126', 354)" onmouseover="showTip(event, 'fs126', 354)" class="i">y</span>,_)<span class="o">::</span><span onmouseout="hideTip(event, 'fs104', 355)" onmouseover="showTip(event, 'fs104', 355)" class="p">Value</span>(<span onmouseout="hideTip(event, 'fs127', 356)" onmouseover="showTip(event, 'fs127', 356)" class="i">m</span>,_)<span class="o">::</span><span onmouseout="hideTip(event, 'fs104', 357)" onmouseover="showTip(event, 'fs104', 357)" class="p">Value</span>(<span onmouseout="hideTip(event, 'fs128', 358)" onmouseover="showTip(event, 'fs128', 358)" class="i">d</span>,_)<span class="o">::</span>_) 
                                                <span class="k">when</span> <span onmouseout="hideTip(event, 'fs125', 359)" onmouseover="showTip(event, 'fs125', 359)" class="i">ci</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 360)" onmouseover="showTip(event, 'fs18', 360)" class="i">DeclaringType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 361)" onmouseover="showTip(event, 'fs19', 361)" class="i">Name</span><span class="o">=</span><span class="s">&quot;DateTime&quot;</span><span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs83', 362)" onmouseover="showTip(event, 'fs83', 362)" class="f">sprintf</span> <span class="s">&quot;DATE(</span><span class="pf">%A</span><span class="s">, </span><span class="pf">%A</span><span class="s">, </span><span class="pf">%A</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs126', 363)" onmouseover="showTip(event, 'fs126', 363)" class="i">y</span> <span onmouseout="hideTip(event, 'fs127', 364)" onmouseover="showTip(event, 'fs127', 364)" class="i">m</span> <span onmouseout="hideTip(event, 'fs128', 365)" onmouseover="showTip(event, 'fs128', 365)" class="i">d</span>    

        | <span onmouseout="hideTip(event, 'fs129', 366)" onmouseover="showTip(event, 'fs129', 366)" class="p">Application</span> ((<span onmouseout="hideTip(event, 'fs129', 367)" onmouseover="showTip(event, 'fs129', 367)" class="p">Application</span> <span onmouseout="hideTip(event, 'fs130', 368)" onmouseover="showTip(event, 'fs130', 368)" class="i">args</span>) <span class="k">as</span> <span onmouseout="hideTip(event, 'fs131', 369)" onmouseover="showTip(event, 'fs131', 369)" class="i">f</span>, <span onmouseout="hideTip(event, 'fs103', 370)" onmouseover="showTip(event, 'fs103', 370)" class="i">value</span>) <span class="k">-&gt;</span> 
            <span id="fst132" onmouseout="hideTip(event, 'fs132', 371)" onmouseover="showTip(event, 'fs132', 371, document.getElementById('fst132'))" class="omitted">collect params for the chain of function applications</span>
            <span onmouseout="hideTip(event, 'fs86', 372)" onmouseover="showTip(event, 'fs86', 372)" class="f">applyFunc</span> (<span onmouseout="hideTip(event, 'fs133', 373)" onmouseover="showTip(event, 'fs133', 373)" class="f">collectParams</span> [<span onmouseout="hideTip(event, 'fs103', 374)" onmouseover="showTip(event, 'fs103', 374)" class="i">value</span>] <span onmouseout="hideTip(event, 'fs131', 375)" onmouseover="showTip(event, 'fs131', 375)" class="i">f</span>) <span onmouseout="hideTip(event, 'fs53', 376)" onmouseover="showTip(event, 'fs53', 376)" class="i">info</span>

        | <span onmouseout="hideTip(event, 'fs129', 377)" onmouseover="showTip(event, 'fs129', 377)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs63', 378)" onmouseover="showTip(event, 'fs63', 378)" class="p">Var</span> <span onmouseout="hideTip(event, 'fs134', 379)" onmouseover="showTip(event, 'fs134', 379)" class="i">f</span>, <span onmouseout="hideTip(event, 'fs103', 380)" onmouseover="showTip(event, 'fs103', 380)" class="i">value</span>) <span class="k">-&gt;</span>  <span onmouseout="hideTip(event, 'fs86', 381)" onmouseover="showTip(event, 'fs86', 381)" class="f">applyFunc</span> (<span onmouseout="hideTip(event, 'fs134', 382)" onmouseover="showTip(event, 'fs134', 382)" class="i">f</span>, [<span onmouseout="hideTip(event, 'fs103', 383)" onmouseover="showTip(event, 'fs103', 383)" class="i">value</span>]) <span onmouseout="hideTip(event, 'fs53', 384)" onmouseover="showTip(event, 'fs53', 384)" class="i">info</span>

        | <span onmouseout="hideTip(event, 'fs135', 385)" onmouseover="showTip(event, 'fs135', 385)" class="p">LetRecursive</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs123', 386)" onmouseover="showTip(event, 'fs123', 386)" class="f">failwith</span> <span class="s">&quot;Recursive functions are not supported&quot;</span>
        | <span onmouseout="hideTip(event, 'fs39', 387)" onmouseover="showTip(event, 'fs39', 387)" class="i">expr</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs123', 388)" onmouseover="showTip(event, 'fs123', 388)" class="f">failwith</span> (<span onmouseout="hideTip(event, 'fs83', 389)" onmouseover="showTip(event, 'fs83', 389)" class="f">sprintf</span> <span class="s">&quot;Unknown expression type: </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs39', 390)" onmouseover="showTip(event, 'fs39', 390)" class="i">expr</span>)

    <span class="s">&quot;=&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs74', 391)" onmouseover="showTip(event, 'fs74', 391)" class="f">transform</span> { <span class="i">Prior</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs136', 392)" onmouseover="showTip(event, 'fs136', 392)" class="i">defaultPrior</span>; <span class="i">Scope</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs137', 393)" onmouseover="showTip(event, 'fs137', 393)" class="i">scope</span>; <span class="i">RightOperand</span> <span class="o">=</span> <span class="k">false</span> } <span onmouseout="hideTip(event, 'fs39', 394)" onmouseover="showTip(event, 'fs39', 394)" class="i">expr</span>

<span id="fst138" onmouseout="hideTip(event, 'fs138', 395)" onmouseover="showTip(event, 'fs138', 395, document.getElementById('fst138'))" class="omitted">(Patterns example)</span>

<span class="k">module</span> <span class="t">Test</span> <span class="o">=</span>
    [&lt;<span onmouseout="hideTip(event, 'fs139', 396)" onmouseover="showTip(event, 'fs139', 396)" class="t">ReflectedDefinition</span>&gt;]
    [&lt;<span onmouseout="hideTip(event, 'fs140', 397)" onmouseover="showTip(event, 'fs140', 397)" class="t">MethodImpl</span>(<span onmouseout="hideTip(event, 'fs141', 398)" onmouseover="showTip(event, 'fs141', 398)" class="t">MethodImplOptions</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs142', 399)" onmouseover="showTip(event, 'fs142', 399)" class="i">NoInlining</span>)&gt;]
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs143', 400)" onmouseover="showTip(event, 'fs143', 400)" class="f">sum</span> (<span onmouseout="hideTip(event, 'fs144', 401)" onmouseover="showTip(event, 'fs144', 401)" class="i">a</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs90', 402)" onmouseover="showTip(event, 'fs90', 402)" class="t">decimal</span>) <span onmouseout="hideTip(event, 'fs145', 403)" onmouseover="showTip(event, 'fs145', 403)" class="i">b</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs144', 404)" onmouseover="showTip(event, 'fs144', 404)" class="i">a</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs145', 405)" onmouseover="showTip(event, 'fs145', 405)" class="i">b</span>
  
    [&lt;<span onmouseout="hideTip(event, 'fs139', 406)" onmouseover="showTip(event, 'fs139', 406)" class="t">ReflectedDefinition</span>&gt;]
    [&lt;<span onmouseout="hideTip(event, 'fs140', 407)" onmouseover="showTip(event, 'fs140', 407)" class="t">MethodImpl</span>(<span onmouseout="hideTip(event, 'fs141', 408)" onmouseover="showTip(event, 'fs141', 408)" class="t">MethodImplOptions</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs142', 409)" onmouseover="showTip(event, 'fs142', 409)" class="i">NoInlining</span>)&gt;]
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs146', 410)" onmouseover="showTip(event, 'fs146', 410)" class="f">mdurationMonth</span> <span onmouseout="hideTip(event, 'fs147', 411)" onmouseover="showTip(event, 'fs147', 411)" class="i">m</span> <span onmouseout="hideTip(event, 'fs148', 412)" onmouseover="showTip(event, 'fs148', 412)" class="i">c</span> <span onmouseout="hideTip(event, 'fs149', 413)" onmouseover="showTip(event, 'fs149', 413)" class="i">y</span> <span onmouseout="hideTip(event, 'fs150', 414)" onmouseover="showTip(event, 'fs150', 414)" class="i">f</span> <span onmouseout="hideTip(event, 'fs151', 415)" onmouseover="showTip(event, 'fs151', 415)" class="i">basis</span> <span class="o">=</span> 
        (<span onmouseout="hideTip(event, 'fs93', 416)" onmouseover="showTip(event, 'fs93', 416)" class="f">mduration</span> (<span onmouseout="hideTip(event, 'fs152', 417)" onmouseover="showTip(event, 'fs152', 417)" class="t">DateTime</span>(<span class="n">2012</span>, <span class="n">1</span>, <span class="n">7</span>)) <span onmouseout="hideTip(event, 'fs147', 418)" onmouseover="showTip(event, 'fs147', 418)" class="i">m</span> <span onmouseout="hideTip(event, 'fs148', 419)" onmouseover="showTip(event, 'fs148', 419)" class="i">c</span> <span onmouseout="hideTip(event, 'fs149', 420)" onmouseover="showTip(event, 'fs149', 420)" class="i">y</span> <span onmouseout="hideTip(event, 'fs150', 421)" onmouseover="showTip(event, 'fs150', 421)" class="i">f</span> <span onmouseout="hideTip(event, 'fs151', 422)" onmouseover="showTip(event, 'fs151', 422)" class="i">basis</span>) <span class="o">*</span> <span class="n">12M</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs153', 423)" onmouseover="showTip(event, 'fs153', 423)" class="f">run</span> <span onmouseout="hideTip(event, 'fs154', 424)" onmouseover="showTip(event, 'fs154', 424)" class="f">export</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs155', 425)" onmouseover="showTip(event, 'fs155', 425)" class="f">getReflectedDefinition</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 426)" onmouseover="showTip(event, 'fs2', 426)" class="f">defForObj</span>()

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs156', 427)" onmouseover="showTip(event, 'fs156', 427)" class="i">data</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs157', 428)" onmouseover="showTip(event, 'fs157', 428)" class="t">obj</span> [][] <span class="o">=</span> <span id="fst158" onmouseout="hideTip(event, 'fs158', 429)" onmouseover="showTip(event, 'fs158', 429, document.getElementById('fst158'))" class="omitted">(Some data)</span>

        <span class="c">// the vars with such names will be replaced with R{rownum}C{var index + 1}</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs159', 430)" onmouseover="showTip(event, 'fs159', 430)" class="i">dataColumns</span> <span class="o">=</span> [<span class="s">&quot;a&quot;</span>; <span class="s">&quot;b&quot;</span>; <span class="s">&quot;s&quot;</span>; <span class="s">&quot;m&quot;</span>; <span class="s">&quot;c&quot;</span>; <span class="s">&quot;y&quot;</span>; <span class="s">&quot;f&quot;</span>; <span class="s">&quot;basis&quot;</span>]
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs160', 431)" onmouseover="showTip(event, 'fs160', 431)" class="i">funcs</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs157', 432)" onmouseover="showTip(event, 'fs157', 432)" class="t">obj</span> <span onmouseout="hideTip(event, 'fs161', 433)" onmouseover="showTip(event, 'fs161', 433)" class="t">list</span> <span class="o">=</span> [<span onmouseout="hideTip(event, 'fs143', 434)" onmouseover="showTip(event, 'fs143', 434)" class="f">sum</span>; <span onmouseout="hideTip(event, 'fs146', 435)" onmouseover="showTip(event, 'fs146', 435)" class="f">mdurationMonth</span>]

        <span class="c">// transform quotation into a pattern &amp; split by the rownum replacement &#39;#&#39;</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs162', 436)" onmouseover="showTip(event, 'fs162', 436)" class="f">unquote</span> <span class="o">=</span> 
            <span onmouseout="hideTip(event, 'fs28', 437)" onmouseover="showTip(event, 'fs28', 437)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 438)" onmouseover="showTip(event, 'fs29', 438)" class="f">bind</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs39', 439)" onmouseover="showTip(event, 'fs39', 439)" class="i">expr</span> <span class="k">-&gt;</span> 
                <span class="k">try</span> 
                    <span onmouseout="hideTip(event, 'fs21', 440)" onmouseover="showTip(event, 'fs21', 440)" class="p">Some</span> ((<span onmouseout="hideTip(event, 'fs49', 441)" onmouseover="showTip(event, 'fs49', 441)" class="f">generatePattern</span> <span onmouseout="hideTip(event, 'fs39', 442)" onmouseover="showTip(event, 'fs39', 442)" class="i">expr</span> <span onmouseout="hideTip(event, 'fs159', 443)" onmouseover="showTip(event, 'fs159', 443)" class="i">dataColumns</span>)<span class="o">.</span><span class="f">Split</span> [|<span class="s">&#39;#&#39;</span>|])
                <span class="k">with</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs34', 444)" onmouseover="showTip(event, 'fs34', 444)" class="p">None</span>)

        <span class="c">// reflected definitions -&gt; formulae</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs163', 445)" onmouseover="showTip(event, 'fs163', 445)" class="i">formulae</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs160', 446)" onmouseover="showTip(event, 'fs160', 446)" class="i">funcs</span>
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs80', 447)" onmouseover="showTip(event, 'fs80', 447)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 448)" onmouseover="showTip(event, 'fs81', 448)" class="f">map</span> (<span onmouseout="hideTip(event, 'fs155', 449)" onmouseover="showTip(event, 'fs155', 449)" class="f">getReflectedDefinition</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs162', 450)" onmouseover="showTip(event, 'fs162', 450)" class="f">unquote</span>)
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs80', 451)" onmouseover="showTip(event, 'fs80', 451)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs164', 452)" onmouseover="showTip(event, 'fs164', 452)" class="f">filter</span> <span onmouseout="hideTip(event, 'fs28', 453)" onmouseover="showTip(event, 'fs28', 453)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs165', 454)" onmouseover="showTip(event, 'fs165', 454)" class="f">isSome</span>
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs80', 455)" onmouseover="showTip(event, 'fs80', 455)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 456)" onmouseover="showTip(event, 'fs81', 456)" class="f">map</span> <span onmouseout="hideTip(event, 'fs28', 457)" onmouseover="showTip(event, 'fs28', 457)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs166', 458)" onmouseover="showTip(event, 'fs166', 458)" class="f">get</span>
        
        <span onmouseout="hideTip(event, 'fs156', 459)" onmouseover="showTip(event, 'fs156', 459)" class="i">data</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 460)" onmouseover="showTip(event, 'fs15', 460)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs167', 461)" onmouseover="showTip(event, 'fs167', 461)" class="f">iteri</span> (<span onmouseout="hideTip(event, 'fs154', 462)" onmouseover="showTip(event, 'fs154', 462)" class="f">export</span> <span onmouseout="hideTip(event, 'fs163', 463)" onmouseover="showTip(event, 'fs163', 463)" class="i">formulae</span>)

<span class="c">/// Export data with given pattern</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs168', 464)" onmouseover="showTip(event, 'fs168', 464)" class="f">export</span> <span onmouseout="hideTip(event, 'fs169', 465)" onmouseover="showTip(event, 'fs169', 465)" class="f">exportValue</span> <span onmouseout="hideTip(event, 'fs170', 466)" onmouseover="showTip(event, 'fs170', 466)" class="f">exportFunc</span> (<span onmouseout="hideTip(event, 'fs171', 467)" onmouseover="showTip(event, 'fs171', 467)" class="i">patterns</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs44', 468)" onmouseover="showTip(event, 'fs44', 468)" class="t">string</span>[] <span onmouseout="hideTip(event, 'fs161', 469)" onmouseover="showTip(event, 'fs161', 469)" class="t">list</span>) <span onmouseout="hideTip(event, 'fs172', 470)" onmouseover="showTip(event, 'fs172', 470)" class="i">row</span> (<span onmouseout="hideTip(event, 'fs173', 471)" onmouseover="showTip(event, 'fs173', 471)" class="i">items</span><span class="o">:</span> _[]) <span class="o">=</span><span id="fst174" onmouseout="hideTip(event, 'fs174', 472)" onmouseover="showTip(event, 'fs174', 472, document.getElementById('fst174'))" class="omitted">(...)</span>

<span class="c">// Standard output</span>
<span onmouseout="hideTip(event, 'fs175', 473)" onmouseover="showTip(event, 'fs175', 473)" class="t">Test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs153', 474)" onmouseover="showTip(event, 'fs153', 474)" class="f">run</span> (<span onmouseout="hideTip(event, 'fs168', 475)" onmouseover="showTip(event, 'fs168', 475)" class="f">export</span> 
            (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs172', 476)" onmouseover="showTip(event, 'fs172', 476)" class="i">row</span>, <span onmouseout="hideTip(event, 'fs176', 477)" onmouseover="showTip(event, 'fs176', 477)" class="i">fst</span>) <span onmouseout="hideTip(event, 'fs177', 478)" onmouseover="showTip(event, 'fs177', 478)" class="i">col</span> <span onmouseout="hideTip(event, 'fs178', 479)" onmouseover="showTip(event, 'fs178', 479)" class="i">item</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs179', 480)" onmouseover="showTip(event, 'fs179', 480)" class="f">printfn</span> <span class="s">&quot;Cells.[</span><span class="pf">%d</span><span class="s">, </span><span class="pf">%d</span><span class="s">]&lt;-</span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs172', 481)" onmouseover="showTip(event, 'fs172', 481)" class="i">row</span> (<span onmouseout="hideTip(event, 'fs177', 482)" onmouseover="showTip(event, 'fs177', 482)" class="i">col</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs176', 483)" onmouseover="showTip(event, 'fs176', 483)" class="i">fst</span>) <span onmouseout="hideTip(event, 'fs178', 484)" onmouseover="showTip(event, 'fs178', 484)" class="i">item</span>)
            (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs172', 485)" onmouseover="showTip(event, 'fs172', 485)" class="i">row</span>, <span onmouseout="hideTip(event, 'fs176', 486)" onmouseover="showTip(event, 'fs176', 486)" class="i">fst</span>) <span onmouseout="hideTip(event, 'fs177', 487)" onmouseover="showTip(event, 'fs177', 487)" class="i">col</span> <span onmouseout="hideTip(event, 'fs180', 488)" onmouseover="showTip(event, 'fs180', 488)" class="i">formula</span> <span class="k">-&gt;</span> 
                <span onmouseout="hideTip(event, 'fs179', 489)" onmouseover="showTip(event, 'fs179', 489)" class="f">printfn</span> <span class="s">&quot;Cells.[</span><span class="pf">%d</span><span class="s">, </span><span class="pf">%d</span><span class="s">].Formula &lt;- </span><span class="e">\&quot;</span><span class="s"></span><span class="pf">%s</span><span class="s"></span><span class="e">\&quot;</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs172', 490)" onmouseover="showTip(event, 'fs172', 490)" class="i">row</span> (<span onmouseout="hideTip(event, 'fs177', 491)" onmouseover="showTip(event, 'fs177', 491)" class="i">col</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs176', 492)" onmouseover="showTip(event, 'fs176', 492)" class="i">fst</span>) <span onmouseout="hideTip(event, 'fs180', 493)" onmouseover="showTip(event, 'fs180', 493)" class="i">formula</span>))
</code></pre></td>
</tr>
</table>
<h2><a name="Simple-export-to-Excel" class="anchor" href="#Simple-export-to-Excel">Simple export to Excel</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs181', 494)" onmouseover="showTip(event, 'fs181', 494)" class="i">app</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs182', 495)" onmouseover="showTip(event, 'fs182', 495)" class="t">ApplicationClass</span>()
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs183', 496)" onmouseover="showTip(event, 'fs183', 496)" class="i">workbook</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs181', 497)" onmouseover="showTip(event, 'fs181', 497)" class="i">app</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs184', 498)" onmouseover="showTip(event, 'fs184', 498)" class="i">Workbooks</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs185', 499)" onmouseover="showTip(event, 'fs185', 499)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs186', 500)" onmouseover="showTip(event, 'fs186', 500)" class="t">XlWBATemplate</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs187', 501)" onmouseover="showTip(event, 'fs187', 501)" class="i">xlWBATWorksheet</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs188', 502)" onmouseover="showTip(event, 'fs188', 502)" class="i">worksheet</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs183', 503)" onmouseover="showTip(event, 'fs183', 503)" class="i">workbook</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs184', 504)" onmouseover="showTip(event, 'fs184', 504)" class="i">Worksheets</span><span class="o">.</span>[<span class="n">1</span>] <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs189', 505)" onmouseover="showTip(event, 'fs189', 505)" class="t">Worksheet</span>

<span class="c">// fill the cells</span>
<span onmouseout="hideTip(event, 'fs175', 506)" onmouseover="showTip(event, 'fs175', 506)" class="t">Test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs153', 507)" onmouseover="showTip(event, 'fs153', 507)" class="f">run</span> (<span onmouseout="hideTip(event, 'fs168', 508)" onmouseover="showTip(event, 'fs168', 508)" class="f">export</span> 
            (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs172', 509)" onmouseover="showTip(event, 'fs172', 509)" class="i">row</span>,<span onmouseout="hideTip(event, 'fs176', 510)" onmouseover="showTip(event, 'fs176', 510)" class="i">fst</span>) <span onmouseout="hideTip(event, 'fs177', 511)" onmouseover="showTip(event, 'fs177', 511)" class="i">col</span> <span onmouseout="hideTip(event, 'fs178', 512)" onmouseover="showTip(event, 'fs178', 512)" class="i">item</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs188', 513)" onmouseover="showTip(event, 'fs188', 513)" class="i">worksheet</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs190', 514)" onmouseover="showTip(event, 'fs190', 514)" class="i">Cells</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs172', 515)" onmouseover="showTip(event, 'fs172', 515)" class="i">row</span>, <span onmouseout="hideTip(event, 'fs177', 516)" onmouseover="showTip(event, 'fs177', 516)" class="i">col</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs176', 517)" onmouseover="showTip(event, 'fs176', 517)" class="i">fst</span>] <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs178', 518)" onmouseover="showTip(event, 'fs178', 518)" class="i">item</span>)
            (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs172', 519)" onmouseover="showTip(event, 'fs172', 519)" class="i">row</span>,<span onmouseout="hideTip(event, 'fs176', 520)" onmouseover="showTip(event, 'fs176', 520)" class="i">fst</span>) <span onmouseout="hideTip(event, 'fs177', 521)" onmouseover="showTip(event, 'fs177', 521)" class="i">col</span> <span onmouseout="hideTip(event, 'fs180', 522)" onmouseover="showTip(event, 'fs180', 522)" class="i">formula</span> <span class="k">-&gt;</span> 
                (<span onmouseout="hideTip(event, 'fs188', 523)" onmouseover="showTip(event, 'fs188', 523)" class="i">worksheet</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs190', 524)" onmouseover="showTip(event, 'fs190', 524)" class="i">Cells</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs172', 525)" onmouseover="showTip(event, 'fs172', 525)" class="i">row</span>, <span onmouseout="hideTip(event, 'fs177', 526)" onmouseover="showTip(event, 'fs177', 526)" class="i">col</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs176', 527)" onmouseover="showTip(event, 'fs176', 527)" class="i">fst</span>] <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs191', 528)" onmouseover="showTip(event, 'fs191', 528)" class="t">Range</span>)<span class="o">.</span><span class="i">Formula</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs180', 529)" onmouseover="showTip(event, 'fs180', 529)" class="i">formula</span>))

<span onmouseout="hideTip(event, 'fs181', 530)" onmouseover="showTip(event, 'fs181', 530)" class="i">app</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs184', 531)" onmouseover="showTip(event, 'fs184', 531)" class="i">ReferenceStyle</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs192', 532)" onmouseover="showTip(event, 'fs192', 532)" class="t">XlReferenceStyle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs193', 533)" onmouseover="showTip(event, 'fs193', 533)" class="i">xlA1</span>

<span id="fst194" onmouseout="hideTip(event, 'fs194', 534)" onmouseover="showTip(event, 'fs194', 534, document.getElementById('fst194'))" class="omitted">(Close workbook and release objects)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />namespace System.Reflection<br /><br />--------------------<br />namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs2">val defForObj : unit -&gt; (&#39;a -&gt; Expr option)<br /><br />Full name: Script.defForObj<br /><em><br /><br />&#160;Get reflected definition from a closure obj with Mono.Reflection</em></div>
<div class="tip" id="fs3">val cache : Collections.Generic.Dictionary&lt;Type,Expr option&gt;</div>
<div class="tip" id="fs4">namespace System</div>
<div class="tip" id="fs5">namespace System.Collections</div>
<div class="tip" id="fs6">namespace System.Collections.Generic</div>
<div class="tip" id="fs7">Multiple items<br />type Dictionary&lt;&#39;TKey,&#39;TValue&gt; =<br />&#160;&#160;new : unit -&gt; Dictionary&lt;&#39;TKey, &#39;TValue&gt; + 5 overloads<br />&#160;&#160;member Add : key:&#39;TKey * value:&#39;TValue -&gt; unit<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Comparer : IEqualityComparer&lt;&#39;TKey&gt;<br />&#160;&#160;member ContainsKey : key:&#39;TKey -&gt; bool<br />&#160;&#160;member ContainsValue : value:&#39;TValue -&gt; bool<br />&#160;&#160;member Count : int<br />&#160;&#160;member GetEnumerator : unit -&gt; Enumerator&lt;&#39;TKey, &#39;TValue&gt;<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;member Item : &#39;TKey -&gt; &#39;TValue with get, set<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br />&#160;&#160;nested type KeyCollection<br />&#160;&#160;nested type ValueCollection<br /><br />Full name: System.Collections.Generic.Dictionary&lt;_,_&gt;<br /><br />--------------------<br />Collections.Generic.Dictionary() : unit<br />Collections.Generic.Dictionary(capacity: int) : unit<br />Collections.Generic.Dictionary(comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Collections.Generic.Dictionary(dictionary: Collections.Generic.IDictionary&lt;&#39;TKey,&#39;TValue&gt;) : unit<br />Collections.Generic.Dictionary(capacity: int, comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Collections.Generic.Dictionary(dictionary: Collections.Generic.IDictionary&lt;&#39;TKey,&#39;TValue&gt;, comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit</div>
<div class="tip" id="fs8">Multiple items<br />val obj : &#39;a<br /><br />--------------------<br />type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs9">val ty : Type</div>
<div class="tip" id="fs10">Object.GetType() : Type</div>
<div class="tip" id="fs11">Collections.Generic.Dictionary.ContainsKey(key: Type) : bool</div>
<div class="tip" id="fs12">val methods : MethodInfo []</div>
<div class="tip" id="fs13">Type.GetMethods() : MethodInfo []<br />Type.GetMethods(bindingAttr: BindingFlags) : MethodInfo []</div>
<div class="tip" id="fs14">val invoke : MethodInfo option</div>
<div class="tip" id="fs15">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs16">val tryFind : predicate:(&#39;T -&gt; bool) -&gt; array:&#39;T [] -&gt; &#39;T option<br /><br />Full name: Microsoft.FSharp.Collections.Array.tryFind</div>
<div class="tip" id="fs17">val mi : MethodInfo</div>
<div class="tip" id="fs18">property MemberInfo.DeclaringType: Type</div>
<div class="tip" id="fs19">property MemberInfo.Name: string</div>
<div class="tip" id="fs20">val def : Expr option</div>
<div class="tip" id="fs21">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs22">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs23">val tryFind : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;T option<br /><br />Full name: Microsoft.FSharp.Collections.Seq.tryFind</div>
<div class="tip" id="fs24">val instr : obj</div>
<div class="tip" id="fs25">namespace System.Reflection.Emit</div>
<div class="tip" id="fs26">type OpCodes =<br />&#160;&#160;static val Nop : OpCode<br />&#160;&#160;static val Break : OpCode<br />&#160;&#160;static val Ldarg_0 : OpCode<br />&#160;&#160;static val Ldarg_1 : OpCode<br />&#160;&#160;static val Ldarg_2 : OpCode<br />&#160;&#160;static val Ldarg_3 : OpCode<br />&#160;&#160;static val Ldloc_0 : OpCode<br />&#160;&#160;static val Ldloc_1 : OpCode<br />&#160;&#160;static val Ldloc_2 : OpCode<br />&#160;&#160;static val Ldloc_3 : OpCode<br />&#160;&#160;...<br /><br />Full name: System.Reflection.Emit.OpCodes</div>
<div class="tip" id="fs27">field Emit.OpCodes.Call</div>
<div class="tip" id="fs28">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs29">val bind : binder:(&#39;T -&gt; &#39;U option) -&gt; option:&#39;T option -&gt; &#39;U option<br /><br />Full name: Microsoft.FSharp.Core.Option.bind</div>
<div class="tip" id="fs30">namespace System.Reflection</div>
<div class="tip" id="fs31">type MethodInfo =<br />&#160;&#160;inherit MethodBase<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetBaseDefinition : unit -&gt; MethodInfo<br />&#160;&#160;member GetGenericArguments : unit -&gt; Type[]<br />&#160;&#160;member GetGenericMethodDefinition : unit -&gt; MethodInfo<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member MakeGenericMethod : [&lt;ParamArray&gt;] typeArguments:Type[] -&gt; MethodInfo<br />&#160;&#160;member MemberType : MemberTypes<br />&#160;&#160;member ReturnParameter : ParameterInfo<br />&#160;&#160;member ReturnType : Type<br />&#160;&#160;member ReturnTypeCustomAttributes : ICustomAttributeProvider<br /><br />Full name: System.Reflection.MethodInfo</div>
<div class="tip" id="fs32">Multiple items<br />type Expr =<br />&#160;&#160;override Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetFreeVars : unit -&gt; seq&lt;Var&gt;<br />&#160;&#160;member Substitute : substitution:(Var -&gt; Expr option) -&gt; Expr<br />&#160;&#160;member ToString : full:bool -&gt; string<br />&#160;&#160;member CustomAttributes : Expr list<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member AddressOf : target:Expr -&gt; Expr<br />&#160;&#160;static member AddressSet : target:Expr * value:Expr -&gt; Expr<br />&#160;&#160;static member Application : functionExpr:Expr * argument:Expr -&gt; Expr<br />&#160;&#160;static member Applications : functionExpr:Expr * arguments:Expr list list -&gt; Expr<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Quotations.Expr<br /><br />--------------------<br />type Expr&lt;&#39;T&gt; =<br />&#160;&#160;inherit Expr<br />&#160;&#160;member Raw : Expr<br /><br />Full name: Microsoft.FSharp.Quotations.Expr&lt;_&gt;</div>
<div class="tip" id="fs33">static member Expr.TryGetReflectedDefinition : methodBase:MethodBase -&gt; Expr option</div>
<div class="tip" id="fs34">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs35">Collections.Generic.Dictionary.Add(key: Type, value: Expr option) : unit</div>
<div class="tip" id="fs36">val defForMethodInfo : unit -&gt; (&#39;a -&gt; Expr option) (requires equality and &#39;a :&gt; MethodBase)<br /><br />Full name: Script.defForMethodInfo<br /><em><br /><br />&#160;Get reflected definition for method info </em></div>
<div class="tip" id="fs37">let cache = System.Collections.Generic.Dictionary&lt;_,_&gt;()<br />&#160;&#160;&#160;&#160;fun mi -&gt; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if cache.ContainsKey mi then cache.[mi]<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let res = Expr.TryGetReflectedDefinition mi<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cache.Add (mi, res)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;res</div>
<div class="tip" id="fs38">Multiple items<br />type Func&lt;&#39;TResult&gt; =<br />&#160;&#160;delegate of unit -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;T16,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 * &#39;T16 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;</div>
<div class="tip" id="fs39">val expr : Expr</div>
<div class="tip" id="fs40">match expr with<br />&#160;&#160;&#160;&#160;| Lambdas(_,(Call(_,minfo1,_))) -&gt; function<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| Call(obj, minfo2, args) when minfo1.MetadataToken = minfo2.MetadataToken -&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Some args<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| _ -&gt; None<br />&#160;&#160;&#160;&#160;| _ -&gt; failwith &quot;invalid template parameter&quot;</div>
<div class="tip" id="fs41">type Info =<br />&#160;&#160;{Scope: Map&lt;string,Expr&gt;;<br />&#160;&#160;&#160;Prior: int;<br />&#160;&#160;&#160;RightOperand: bool;}<br /><br />Full name: Script.Info<br /><em><br /><br />&#160;Info for the transformation steps</em></div>
<div class="tip" id="fs42">Info.Scope: Map&lt;string,Expr&gt;</div>
<div class="tip" id="fs43">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member Remove : key:&#39;Key -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Map&lt;_,_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs44">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs45">Info.Prior: int</div>
<div class="tip" id="fs46">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs47">Info.RightOperand: bool</div>
<div class="tip" id="fs48">type bool = Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs49">val generatePattern : expr:Expr -&gt; env:seq&lt;string&gt; -&gt; string<br /><br />Full name: Script.generatePattern<br /><em><br /><br />&#160;Generate a formula pattern for an expression<br />&#160;column number - index of var in the env; &#39;#&#39; is a temp placeholder for a row number</em></div>
<div class="tip" id="fs50">val env : seq&lt;string&gt;</div>
<div class="tip" id="fs51">let scope = <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Seq.mapi (fun i name -&gt; name, Expr.Value(&quot;R#C&quot; + string (i + 1))) env <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|&gt; Map.ofSeq<br /><br />&#160;&#160;&#160;&#160;let defaultPrior = 4<br />&#160;&#160;&#160;&#160;let tryGetReflectedDef = defForMethodInfo()<br /><br />&#160;&#160;&#160;&#160;// info with default priority<br />&#160;&#160;&#160;&#160;let inline (!!) info = { info with Prior = defaultPrior }</div>
<div class="tip" id="fs52">val addParens : (Info -&gt; int -&gt; bool)</div>
<div class="tip" id="fs53">val info : Info</div>
<div class="tip" id="fs54">val currPrior : int</div>
<div class="tip" id="fs55">val updateScope : (seq&lt;string&gt; -&gt; seq&lt;&#39;a&gt; -&gt; Map&lt;string,&#39;a&gt; -&gt; Map&lt;string,&#39;a&gt;) (requires &#39;a :&gt; Expr)</div>
<div class="tip" id="fs56">val names : seq&lt;string&gt;</div>
<div class="tip" id="fs57">val parms : seq&lt;#Expr&gt;</div>
<div class="tip" id="fs58">val scope : Map&lt;string,#Expr&gt;</div>
<div class="tip" id="fs59">val zip : source1:seq&lt;&#39;T1&gt; -&gt; source2:seq&lt;&#39;T2&gt; -&gt; seq&lt;&#39;T1 * &#39;T2&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.zip</div>
<div class="tip" id="fs60">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.Seq.fold</div>
<div class="tip" id="fs61">val sc : Map&lt;string,#Expr&gt;</div>
<div class="tip" id="fs62">val name : string</div>
<div class="tip" id="fs63">Multiple items<br />active recognizer Var: Expr -&gt; Var option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Var|_| )<br /><br />--------------------<br />type Var =<br />&#160;&#160;interface IComparable<br />&#160;&#160;new : name:string * typ:Type * ?isMutable:bool -&gt; Var<br />&#160;&#160;member IsMutable : bool<br />&#160;&#160;member Name : string<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member Global : name:string * typ:Type -&gt; Var<br /><br />Full name: Microsoft.FSharp.Quotations.Var<br /><br />--------------------<br />new : name:string * typ:Type * ?isMutable:bool -&gt; Var</div>
<div class="tip" id="fs64">val var : Var</div>
<div class="tip" id="fs65">val replace : name:&#39;a -&gt; value:&#39;b -&gt; map:Map&lt;&#39;a,&#39;b&gt; -&gt; Map&lt;&#39;a,&#39;b&gt; (requires comparison)<br /><br />Full name: Script.replace</div>
<div class="tip" id="fs66">property Var.Name: string</div>
<div class="tip" id="fs67">val param : #Expr</div>
<div class="tip" id="fs68">val printBinaryOp : (string -&gt; Expr -&gt; Expr -&gt; int -&gt; Info -&gt; string)</div>
<div class="tip" id="fs69">val op : string</div>
<div class="tip" id="fs70">val x : Expr</div>
<div class="tip" id="fs71">val y : Expr</div>
<div class="tip" id="fs72">val curr : int</div>
<div class="tip" id="fs73">val left : string</div>
<div class="tip" id="fs74">val transform : (Info -&gt; Expr -&gt; string)</div>
<div class="tip" id="fs75">val right : string</div>
<div class="tip" id="fs76">val res : string</div>
<div class="tip" id="fs77">val printFunc : (string -&gt; Expr list -&gt; Info -&gt; string)</div>
<div class="tip" id="fs78">val args : Expr list</div>
<div class="tip" id="fs79">val argValues : string []</div>
<div class="tip" id="fs80">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs81">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs82">val toArray : list:&#39;T list -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.List.toArray</div>
<div class="tip" id="fs83">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs84">Multiple items<br />active recognizer String: Expr -&gt; string option<br /><br />Full name: Microsoft.FSharp.Quotations.DerivedPatterns.( |String|_| )<br /><br />--------------------<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs85">String.Join(separator: string, values: Collections.Generic.IEnumerable&lt;string&gt;) : string<br />String.Join&lt;&#39;T&gt;(separator: string, values: Collections.Generic.IEnumerable&lt;&#39;T&gt;) : string<br />String.Join(separator: string, [&lt;ParamArray&gt;] values: obj []) : string<br />String.Join(separator: string, [&lt;ParamArray&gt;] value: string []) : string<br />String.Join(separator: string, value: string [], startIndex: int, count: int) : string</div>
<div class="tip" id="fs86">val applyFunc : (Var * seq&lt;Expr&gt; -&gt; Info -&gt; string)</div>
<div class="tip" id="fs87">val parms : seq&lt;Expr&gt;</div>
<div class="tip" id="fs88">match Map.tryFind var.Name info.Scope with<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| Some (Lambdas (((x::_)::_) as vars, expr)) -&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let newScope = <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let names = seq { for [v] in vars do yield v.Name }<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;updateScope names parms info.Scope<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;transform { info with Scope = newScope } expr<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| _ -&gt; failwith &quot;cannot apply function&quot;</div>
<div class="tip" id="fs89">Multiple items<br />active recognizer Func: Expr -&gt; Expr -&gt; Expr list option<br /><br />Full name: Script.( |Func|_| )<br /><em><br /><br />&#160;Simplified SpecificCall</em><br /><br />--------------------<br />type Func&lt;&#39;TResult&gt; =<br />&#160;&#160;delegate of unit -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;T16,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 * &#39;T16 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;</div>
<div class="tip" id="fs90">Multiple items<br />val decimal : value:&#39;T -&gt; decimal (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.decimal<br /><br />--------------------<br />type decimal = Decimal<br /><br />Full name: Microsoft.FSharp.Core.decimal<br /><br />--------------------<br />type decimal&lt;&#39;Measure&gt; = decimal<br /><br />Full name: Microsoft.FSharp.Core.decimal&lt;_&gt;</div>
<div class="tip" id="fs91">Multiple items<br />val double : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.double<br /><br />--------------------<br />type double = Double<br /><br />Full name: Microsoft.FSharp.Core.double</div>
<div class="tip" id="fs92">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs93">val mduration : settlement:&#39;a -&gt; maturity:&#39;b -&gt; coupon:&#39;c -&gt; yld:&#39;d -&gt; frequency:&#39;e -&gt; basis:&#39;f -&gt; decimal<br /><br />Full name: Script.mduration</div>
<div class="tip" id="fs94">val accrint : issue:&#39;a -&gt; first_interest:&#39;b -&gt; settlement:&#39;c -&gt; rate:&#39;d -&gt; par:&#39;e -&gt; frequency:&#39;f -&gt; basis:&#39;g -&gt; decimal<br /><br />Full name: Script.accrint</div>
<div class="tip" id="fs95">active recognizer Lambdas: Expr -&gt; (Var list list * Expr) option<br /><br />Full name: Microsoft.FSharp.Quotations.DerivedPatterns.( |Lambdas|_| )</div>
<div class="tip" id="fs96">val e : Expr</div>
<div class="tip" id="fs97">active recognizer Let: Expr -&gt; (Var * Expr * Expr) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Let|_| )</div>
<div class="tip" id="fs98">active recognizer NewTuple: Expr -&gt; Expr list option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewTuple|_| )</div>
<div class="tip" id="fs99">val vs : Expr list</div>
<div class="tip" id="fs100">val res : Expr</div>
<div class="tip" id="fs101">val newScope : Map&lt;string,Expr&gt;</div>
<div class="tip" id="fs102">let tupleItems = List.toArray vs<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let rec initTuple (e, newScope) =   <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;match e with<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| Let(v, TupleGet(_, ind), e&#39;) -&gt; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;initTuple (e&#39;, replace v.Name tupleItems.[ind] newScope)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| _ -&gt; e, newScope<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;initTuple (e, info.Scope)</div>
<div class="tip" id="fs103">val value : Expr</div>
<div class="tip" id="fs104">active recognizer Value: Expr -&gt; (obj * Type) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Value|_| )</div>
<div class="tip" id="fs105">val v : obj</div>
<div class="tip" id="fs106">val tryFind : key:&#39;Key -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; &#39;T option (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.tryFind</div>
<div class="tip" id="fs107">val replacement : Expr</div>
<div class="tip" id="fs108">active recognizer Call: Expr -&gt; (Expr option * MethodInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Call|_| )</div>
<div class="tip" id="fs109">val i : obj</div>
<div class="tip" id="fs110">val ind : int</div>
<div class="tip" id="fs111">val unbox : value:obj -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.unbox</div>
<div class="tip" id="fs112">val ps : Expr list</div>
<div class="tip" id="fs113">val names : string []</div>
<div class="tip" id="fs114">MethodBase.GetParameters() : ParameterInfo []</div>
<div class="tip" id="fs115">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.map</div>
<div class="tip" id="fs116">val p : ParameterInfo</div>
<div class="tip" id="fs117">property ParameterInfo.Name: string</div>
<div class="tip" id="fs118">val tryGetReflectedDef : (MethodInfo -&gt; Expr option)</div>
<div class="tip" id="fs119">val impl : Expr</div>
<div class="tip" id="fs120">val getCall : (Expr -&gt; Expr)</div>
<div class="tip" id="fs121">active recognizer Lambda: Expr -&gt; (Var * Expr) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Lambda|_| )</div>
<div class="tip" id="fs122">val call : Expr</div>
<div class="tip" id="fs123">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs124">active recognizer NewObject: Expr -&gt; (ConstructorInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewObject|_| )</div>
<div class="tip" id="fs125">val ci : ConstructorInfo</div>
<div class="tip" id="fs126">val y : obj</div>
<div class="tip" id="fs127">val m : obj</div>
<div class="tip" id="fs128">val d : obj</div>
<div class="tip" id="fs129">active recognizer Application: Expr -&gt; (Expr * Expr) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Application|_| )</div>
<div class="tip" id="fs130">val args : Expr * Expr</div>
<div class="tip" id="fs131">val f : Expr</div>
<div class="tip" id="fs132">let rec collectParams parms = function<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| Application(Var f, v) -&gt; f, v :: parms<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| Application(applArgs, v) -&gt; collectParams (v :: parms) applArgs<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| expr -&gt; failwith (sprintf &quot;unexpected expression collecting params: %A&quot; expr)</div>
<div class="tip" id="fs133">val collectParams : (Expr list -&gt; Expr -&gt; Var * Expr list)</div>
<div class="tip" id="fs134">val f : Var</div>
<div class="tip" id="fs135">active recognizer LetRecursive: Expr -&gt; ((Var * Expr) list * Expr) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |LetRecursive|_| )</div>
<div class="tip" id="fs136">val defaultPrior : int</div>
<div class="tip" id="fs137">val scope : Map&lt;string,Expr&gt;</div>
<div class="tip" id="fs138">module PatternsExample =<br />&#160;&#160;&#160;&#160;[&lt;ReflectedDefinition&gt;]<br />&#160;&#160;&#160;&#160;[&lt;MethodImpl(MethodImplOptions.NoInlining)&gt;]<br />&#160;&#160;&#160;&#160;let id x = x<br /><br />&#160;&#160;&#160;&#160;[&lt;ReflectedDefinition&gt;]<br />&#160;&#160;&#160;&#160;[&lt;MethodImpl(MethodImplOptions.NoInlining)&gt;]<br />&#160;&#160;&#160;&#160;let sum (a: decimal) b = id a + b<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;let patterns = [<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;@@ sum 42M (decimal 42) @@&gt;, [], &quot;=42+42&quot;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;@@ <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let f a b = b ** a <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let f2() = f 3. 2. + double 0<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;f2() <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;@@&gt;, [], &quot;=2^3+0&quot;<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;@@ ((1. + 2.**3.) * 3. - 4.) / 5. @@&gt;, [], &quot;=((1+2^3)*3-4)/5&quot;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;@@ fun (x: decimal) -&gt; -x + +1M @@&gt;, [], &quot;=-x+1&quot;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;@@ fun a b -&gt; a ** 4. @@&gt;, [&quot;a&quot;; &quot;b&quot;], &quot;=R#C1^4&quot;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// arrays can be used instead of explicit var names<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;@@ fun (args: _ array) -&gt; args.[0] + args.[1] @@&gt;, [], &quot;=R#C1+R#C2&quot;<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;@@ fun issue settlement -&gt; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;accrint issue (DateTime(2010,9,8)) settlement 10 100 2 0 <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;@@&gt;, [ &quot;issue&quot;; &quot;settlement&quot;], &quot;=ACCRINT(R#C1, DATE(2010, 9, 8), R#C2, 10, 100, 2, 0)&quot;<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;@@ fun x -&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let a, b = 4., 0.0001<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a * 43. - (let x = 1. in 1. - (let x = 2.-3./6. in x) + x) / b + x<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;@@&gt;, [&quot;x&quot;], &quot;=4*43-(1-(2-3/6)+1)/0.0001+R#C1&quot;<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;@@ (1.+2.)-(4.+5.) @@&gt;, [], &quot;=1+2-(4+5)&quot;<br />&#160;&#160;&#160;&#160;]<br />&#160;<br />&#160;&#160;&#160;&#160;let run() = <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;patterns<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|&gt; List.iteri (fun i (expr, env, expected) -&gt; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let res = generatePattern expr env<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if res &lt;&gt; expected then printfn &quot;test %d: %s; expected %s&quot; i res expected)<br /><br />PatternsExample.run()</div>
<div class="tip" id="fs139">Multiple items<br />type ReflectedDefinitionAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; ReflectedDefinitionAttribute<br /><br />Full name: Microsoft.FSharp.Core.ReflectedDefinitionAttribute<br /><br />--------------------<br />new : unit -&gt; ReflectedDefinitionAttribute</div>
<div class="tip" id="fs140">Multiple items<br />type MethodImplAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; MethodImplAttribute + 2 overloads<br />&#160;&#160;val MethodCodeType : MethodCodeType<br />&#160;&#160;member Value : MethodImplOptions<br /><br />Full name: System.Runtime.CompilerServices.MethodImplAttribute<br /><br />--------------------<br />MethodImplAttribute() : unit<br />MethodImplAttribute(methodImplOptions: MethodImplOptions) : unit<br />MethodImplAttribute(value: int16) : unit</div>
<div class="tip" id="fs141">type MethodImplOptions =<br />&#160;&#160;| Unmanaged = 4<br />&#160;&#160;| ForwardRef = 16<br />&#160;&#160;| PreserveSig = 128<br />&#160;&#160;| InternalCall = 4096<br />&#160;&#160;| Synchronized = 32<br />&#160;&#160;| NoInlining = 8<br />&#160;&#160;| NoOptimization = 64<br /><br />Full name: System.Runtime.CompilerServices.MethodImplOptions</div>
<div class="tip" id="fs142">field MethodImplOptions.NoInlining = 8</div>
<div class="tip" id="fs143">val sum : a:decimal -&gt; b:decimal -&gt; decimal<br /><br />Full name: Script.Test.sum</div>
<div class="tip" id="fs144">val a : decimal</div>
<div class="tip" id="fs145">val b : decimal</div>
<div class="tip" id="fs146">val mdurationMonth : m:&#39;a -&gt; c:&#39;b -&gt; y:&#39;c -&gt; f:&#39;d -&gt; basis:&#39;e -&gt; decimal<br /><br />Full name: Script.Test.mdurationMonth</div>
<div class="tip" id="fs147">val m : &#39;a</div>
<div class="tip" id="fs148">val c : &#39;b</div>
<div class="tip" id="fs149">val y : &#39;c</div>
<div class="tip" id="fs150">val f : &#39;d</div>
<div class="tip" id="fs151">val basis : &#39;e</div>
<div class="tip" id="fs152">Multiple items<br />type DateTime =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : ticks:int64 -&gt; DateTime + 10 overloads<br />&#160;&#160;&#160;&#160;member Add : value:TimeSpan -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddDays : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddHours : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMilliseconds : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMinutes : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMonths : months:int -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddSeconds : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddTicks : value:int64 -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddYears : value:int -&gt; DateTime<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.DateTime<br /><br />--------------------<br />DateTime()<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(ticks: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(ticks: int64, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, calendar: Globalization.Calendar) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, calendar: Globalization.Calendar) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs153">val run : export:(string [] list -&gt; int -&gt; obj [] -&gt; unit) -&gt; unit<br /><br />Full name: Script.Test.run</div>
<div class="tip" id="fs154">val export : (string [] list -&gt; int -&gt; obj [] -&gt; unit)</div>
<div class="tip" id="fs155">val getReflectedDefinition : (obj -&gt; Expr option)</div>
<div class="tip" id="fs156">val data : obj [] []</div>
<div class="tip" id="fs157">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs158">[|<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[| 42M; 1M; DateTime(2012, 1, 7); DateTime(2030, 1, 1); 15M; 0.9M; 1; 1 |]<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[| null; null; null; DateTime(2016, 1, 7); 8M; 9M; 2; 1 |]<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|]</div>
<div class="tip" id="fs159">val dataColumns : string list</div>
<div class="tip" id="fs160">val funcs : obj list</div>
<div class="tip" id="fs161">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs162">val unquote : (Expr option -&gt; string [] option)</div>
<div class="tip" id="fs163">val formulae : string [] list</div>
<div class="tip" id="fs164">val filter : predicate:(&#39;T -&gt; bool) -&gt; list:&#39;T list -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.filter</div>
<div class="tip" id="fs165">val isSome : option:&#39;T option -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Option.isSome</div>
<div class="tip" id="fs166">val get : option:&#39;T option -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Option.get</div>
<div class="tip" id="fs167">val iteri : action:(int -&gt; &#39;T -&gt; unit) -&gt; array:&#39;T [] -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.Array.iteri</div>
<div class="tip" id="fs168">val export : exportValue:(int * int -&gt; int -&gt; &#39;a -&gt; unit) -&gt; exportFunc:(int * int -&gt; int -&gt; string -&gt; unit) -&gt; patterns:string [] list -&gt; row:int -&gt; items:&#39;a [] -&gt; unit<br /><br />Full name: Script.export<br /><em><br /><br />&#160;Export data with given pattern</em></div>
<div class="tip" id="fs169">val exportValue : (int * int -&gt; int -&gt; &#39;a -&gt; unit)</div>
<div class="tip" id="fs170">val exportFunc : (int * int -&gt; int -&gt; string -&gt; unit)</div>
<div class="tip" id="fs171">val patterns : string [] list</div>
<div class="tip" id="fs172">val row : int</div>
<div class="tip" id="fs173">val items : &#39;a []</div>
<div class="tip" id="fs174">let row = row + 1<br />&#160;&#160;&#160;&#160;let j = items.Length + 1<br />&#160;&#160;&#160;&#160;let formulae = patterns |&gt; List.map (fun arr -&gt; String.Join (string row, arr))<br />&#160;&#160;&#160;&#160;Array.iteri (exportValue (row, 1)) items<br />&#160;&#160;&#160;&#160;List.iteri (exportFunc (row, j)) formulae</div>
<div class="tip" id="fs175">module Test<br /><br />from Script</div>
<div class="tip" id="fs176">val fst : int</div>
<div class="tip" id="fs177">val col : int</div>
<div class="tip" id="fs178">val item : obj</div>
<div class="tip" id="fs179">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs180">val formula : string</div>
<div class="tip" id="fs181">val app : ApplicationClass<br /><br />Full name: Script.app</div>
<div class="tip" id="fs182">Multiple items<br />type ApplicationClass =<br />&#160;&#160;new : unit -&gt; ApplicationClass<br />&#160;&#160;member ActivateMicrosoftApp : Index:XlMSApplication -&gt; unit<br />&#160;&#160;member ActiveCell : Range<br />&#160;&#160;member ActiveChart : Chart<br />&#160;&#160;member ActiveDialog : DialogSheet<br />&#160;&#160;member ActiveEncryptionSession : int<br />&#160;&#160;member ActiveMenuBar : MenuBar<br />&#160;&#160;member ActivePrinter : string with get, set<br />&#160;&#160;member ActiveProtectedViewWindow : ProtectedViewWindow<br />&#160;&#160;member ActiveSheet : obj<br />&#160;&#160;...<br /><br />Full name: Microsoft.Office.Interop.Excel.ApplicationClass<br /><br />--------------------<br />ApplicationClass() : unit</div>
<div class="tip" id="fs183">val workbook : Workbook<br /><br />Full name: Script.workbook</div>
<div class="tip" id="fs184"></div>
<div class="tip" id="fs185">Workbooks.Add(?Template: obj) : Workbook</div>
<div class="tip" id="fs186">type XlWBATemplate =<br />&#160;&#160;| xlWBATChart = -4109<br />&#160;&#160;| xlWBATExcel4IntlMacroSheet = 4<br />&#160;&#160;| xlWBATExcel4MacroSheet = 3<br />&#160;&#160;| xlWBATWorksheet = -4167<br /><br />Full name: Microsoft.Office.Interop.Excel.XlWBATemplate</div>
<div class="tip" id="fs187">field XlWBATemplate.xlWBATWorksheet = -4167</div>
<div class="tip" id="fs188">val worksheet : Worksheet<br /><br />Full name: Script.worksheet</div>
<div class="tip" id="fs189">type Worksheet =<br /><br />Full name: Microsoft.Office.Interop.Excel.Worksheet</div>
<div class="tip" id="fs190">property _Worksheet.Cells: Range</div>
<div class="tip" id="fs191">type Range =<br />&#160;&#160;member Activate : unit -&gt; obj<br />&#160;&#160;member AddComment : ?Text:obj -&gt; Comment<br />&#160;&#160;member AddIndent : obj with get, set<br />&#160;&#160;member Address : obj * obj * XlReferenceStyle * obj * obj -&gt; string<br />&#160;&#160;member AddressLocal : obj * obj * XlReferenceStyle * obj * obj -&gt; string<br />&#160;&#160;member AdvancedFilter : Action:XlFilterAction * ?CriteriaRange:obj * ?CopyToRange:obj * ?Unique:obj -&gt; obj<br />&#160;&#160;member AllocateChanges : unit -&gt; unit<br />&#160;&#160;member AllowEdit : bool<br />&#160;&#160;member Application : Application<br />&#160;&#160;member ApplyNames : ?Names:obj * ?IgnoreRelativeAbsolute:obj * ?UseRowColumnNames:obj * ?OmitColumn:obj * ?OmitRow:obj * ?Order:XlApplyNamesOrder * ?AppendLast:obj -&gt; obj<br />&#160;&#160;...<br /><br />Full name: Microsoft.Office.Interop.Excel.Range</div>
<div class="tip" id="fs192">type XlReferenceStyle =<br />&#160;&#160;| xlA1 = 1<br />&#160;&#160;| xlR1C1 = -4150<br /><br />Full name: Microsoft.Office.Interop.Excel.XlReferenceStyle</div>
<div class="tip" id="fs193">field XlReferenceStyle.xlA1 = 1</div>
<div class="tip" id="fs194">// release COM objects<br />let inline release (objs: obj list) = <br />&#160;&#160;&#160;&#160;List.iter (System.Runtime.InteropServices.Marshal.ReleaseComObject &gt;&gt; ignore) objs<br /><br />let filename = &quot;test.xls&quot;<br />try workbook.SaveAs(filename, XlFileFormat.xlWorkbookNormal) with _ -&gt; ()<br />workbook.Close false<br />app.Quit()<br /><br />release [worksheet; workbook; app]</div>

