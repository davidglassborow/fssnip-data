<h2><a name="Transform-expressions-into-Excel-formulae" class="anchor" href="#Transform-expressions-into-Excel-formulae">Transform expressions into Excel formulae</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">/// Simplified SpecificCall</span>
<span class="k">let</span> <span class="k">inline</span> (|<span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="p">Func</span>|_|) <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">expr</span> <span class="o">=</span><span id="fst3" onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3, document.getElementById('fst3'))" class="omitted">(...)</span>

<span class="c">/// Generate a formula pattern for an expression</span>
<span class="c">/// Column number - index of var + 1 in the env</span>
<span class="c">/// &#39;#&#39; is a temp placeholder for a row number</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="f">generatePattern</span> <span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">expr</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">env</span> <span class="o">=</span>     
    <span class="c">// print binary ops: (x op y)</span>
    <span class="k">let</span> <span class="k">rec</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="f">printBinaryOp</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">op</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">x</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">y</span> <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="i">parens</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="i">res</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="f">transform</span> <span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="i">x</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs7', 15)" onmouseover="showTip(event, 'fs7', 15)" class="i">op</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="f">transform</span> <span onmouseout="hideTip(event, 'fs9', 17)" onmouseover="showTip(event, 'fs9', 17)" class="i">y</span> <span class="k">in</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs10', 18)" onmouseover="showTip(event, 'fs10', 18)" class="i">parens</span> <span class="k">then</span> <span class="s">&quot;(&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs11', 19)" onmouseover="showTip(event, 'fs11', 19)" class="i">res</span> <span class="o">+</span>  <span class="s">&quot;)&quot;</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs11', 20)" onmouseover="showTip(event, 'fs11', 20)" class="i">res</span>

    <span class="c">// print functions: name(arg1, arg2, ...)</span>
    <span class="k">and</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs13', 21)" onmouseover="showTip(event, 'fs13', 21)" class="f">printFunc</span> <span onmouseout="hideTip(event, 'fs14', 22)" onmouseover="showTip(event, 'fs14', 22)" class="i">name</span> <span onmouseout="hideTip(event, 'fs15', 23)" onmouseover="showTip(event, 'fs15', 23)" class="i">args</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 24)" onmouseover="showTip(event, 'fs16', 24)" class="i">argValues</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs17', 25)" onmouseover="showTip(event, 'fs17', 25)" class="t">string</span>[] <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 26)" onmouseover="showTip(event, 'fs18', 26)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 27)" onmouseover="showTip(event, 'fs19', 27)" class="f">map</span> <span onmouseout="hideTip(event, 'fs12', 28)" onmouseover="showTip(event, 'fs12', 28)" class="f">transform</span> <span onmouseout="hideTip(event, 'fs15', 29)" onmouseover="showTip(event, 'fs15', 29)" class="i">args</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 31)" onmouseover="showTip(event, 'fs20', 31)" class="f">toArray</span>
        <span onmouseout="hideTip(event, 'fs21', 32)" onmouseover="showTip(event, 'fs21', 32)" class="f">sprintf</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">(</span><span class="pf">%s</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs14', 33)" onmouseover="showTip(event, 'fs14', 33)" class="i">name</span> (<span onmouseout="hideTip(event, 'fs22', 34)" onmouseover="showTip(event, 'fs22', 34)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 35)" onmouseover="showTip(event, 'fs23', 35)" class="f">Join</span> (<span class="s">&quot;, &quot;</span>, <span onmouseout="hideTip(event, 'fs16', 36)" onmouseover="showTip(event, 'fs16', 36)" class="i">argValues</span>))

    <span class="c">// transform an expression into pattern</span>
    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs12', 37)" onmouseover="showTip(event, 'fs12', 37)" class="f">transform</span> <span onmouseout="hideTip(event, 'fs2', 38)" onmouseover="showTip(event, 'fs2', 38)" class="i">expr</span> <span class="o">=</span> 
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs2', 39)" onmouseover="showTip(event, 'fs2', 39)" class="i">expr</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs24', 40)" onmouseover="showTip(event, 'fs24', 40)" class="p">Func</span> &lt;@@ (<span class="o">+</span>) @@&gt; [<span onmouseout="hideTip(event, 'fs8', 41)" onmouseover="showTip(event, 'fs8', 41)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs9', 42)" onmouseover="showTip(event, 'fs9', 42)" class="i">y</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 43)" onmouseover="showTip(event, 'fs6', 43)" class="f">printBinaryOp</span> <span class="s">&quot;+&quot;</span> <span onmouseout="hideTip(event, 'fs8', 44)" onmouseover="showTip(event, 'fs8', 44)" class="i">x</span> <span onmouseout="hideTip(event, 'fs9', 45)" onmouseover="showTip(event, 'fs9', 45)" class="i">y</span> <span class="k">true</span>
        | <span onmouseout="hideTip(event, 'fs24', 46)" onmouseover="showTip(event, 'fs24', 46)" class="p">Func</span> &lt;@@ (<span class="o">-</span>) @@&gt; [<span onmouseout="hideTip(event, 'fs8', 47)" onmouseover="showTip(event, 'fs8', 47)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs9', 48)" onmouseover="showTip(event, 'fs9', 48)" class="i">y</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 49)" onmouseover="showTip(event, 'fs6', 49)" class="f">printBinaryOp</span> <span class="s">&quot;-&quot;</span> <span onmouseout="hideTip(event, 'fs8', 50)" onmouseover="showTip(event, 'fs8', 50)" class="i">x</span> <span onmouseout="hideTip(event, 'fs9', 51)" onmouseover="showTip(event, 'fs9', 51)" class="i">y</span> <span class="k">true</span>
        | <span onmouseout="hideTip(event, 'fs24', 52)" onmouseover="showTip(event, 'fs24', 52)" class="p">Func</span> &lt;@@ <span class="o">(*)</span> @@&gt; [<span onmouseout="hideTip(event, 'fs8', 53)" onmouseover="showTip(event, 'fs8', 53)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs9', 54)" onmouseover="showTip(event, 'fs9', 54)" class="i">y</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 55)" onmouseover="showTip(event, 'fs6', 55)" class="f">printBinaryOp</span> <span class="s">&quot;*&quot;</span> <span onmouseout="hideTip(event, 'fs8', 56)" onmouseover="showTip(event, 'fs8', 56)" class="i">x</span> <span onmouseout="hideTip(event, 'fs9', 57)" onmouseover="showTip(event, 'fs9', 57)" class="i">y</span> <span class="k">true</span>
        | <span onmouseout="hideTip(event, 'fs24', 58)" onmouseover="showTip(event, 'fs24', 58)" class="p">Func</span> &lt;@@ (<span class="o">/</span>) @@&gt; [<span onmouseout="hideTip(event, 'fs8', 59)" onmouseover="showTip(event, 'fs8', 59)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs9', 60)" onmouseover="showTip(event, 'fs9', 60)" class="i">y</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 61)" onmouseover="showTip(event, 'fs6', 61)" class="f">printBinaryOp</span> <span class="s">&quot;/&quot;</span> <span onmouseout="hideTip(event, 'fs8', 62)" onmouseover="showTip(event, 'fs8', 62)" class="i">x</span> <span onmouseout="hideTip(event, 'fs9', 63)" onmouseover="showTip(event, 'fs9', 63)" class="i">y</span> <span class="k">true</span>
        | <span onmouseout="hideTip(event, 'fs24', 64)" onmouseover="showTip(event, 'fs24', 64)" class="p">Func</span> &lt;@@ ( <span class="o">**</span> ) @@&gt; [<span onmouseout="hideTip(event, 'fs8', 65)" onmouseover="showTip(event, 'fs8', 65)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs9', 66)" onmouseover="showTip(event, 'fs9', 66)" class="i">y</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 67)" onmouseover="showTip(event, 'fs6', 67)" class="f">printBinaryOp</span> <span class="s">&quot;^&quot;</span> <span onmouseout="hideTip(event, 'fs8', 68)" onmouseover="showTip(event, 'fs8', 68)" class="i">x</span> <span onmouseout="hideTip(event, 'fs9', 69)" onmouseover="showTip(event, 'fs9', 69)" class="i">y</span> <span class="k">false</span>
        | <span onmouseout="hideTip(event, 'fs24', 70)" onmouseover="showTip(event, 'fs24', 70)" class="p">Func</span> &lt;@@ (<span class="o">~-</span>) @@&gt; [<span onmouseout="hideTip(event, 'fs8', 71)" onmouseover="showTip(event, 'fs8', 71)" class="i">x</span>] <span class="k">-&gt;</span> <span class="s">&quot;-&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs12', 72)" onmouseover="showTip(event, 'fs12', 72)" class="f">transform</span> <span onmouseout="hideTip(event, 'fs8', 73)" onmouseover="showTip(event, 'fs8', 73)" class="i">x</span>
        | <span onmouseout="hideTip(event, 'fs24', 74)" onmouseover="showTip(event, 'fs24', 74)" class="p">Func</span> &lt;@@ (<span class="o">~+</span>) @@&gt; [<span onmouseout="hideTip(event, 'fs8', 75)" onmouseover="showTip(event, 'fs8', 75)" class="i">x</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs12', 76)" onmouseover="showTip(event, 'fs12', 76)" class="f">transform</span> <span onmouseout="hideTip(event, 'fs8', 77)" onmouseover="showTip(event, 'fs8', 77)" class="i">x</span>
        | <span onmouseout="hideTip(event, 'fs24', 78)" onmouseover="showTip(event, 'fs24', 78)" class="p">Func</span> &lt;@@ <span onmouseout="hideTip(event, 'fs25', 79)" onmouseover="showTip(event, 'fs25', 79)" class="f">mduration</span> @@&gt; <span onmouseout="hideTip(event, 'fs15', 80)" onmouseover="showTip(event, 'fs15', 80)" class="i">args</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 81)" onmouseover="showTip(event, 'fs13', 81)" class="f">printFunc</span> <span class="s">&quot;MDURATION&quot;</span> <span onmouseout="hideTip(event, 'fs15', 82)" onmouseover="showTip(event, 'fs15', 82)" class="i">args</span>
        | <span onmouseout="hideTip(event, 'fs24', 83)" onmouseover="showTip(event, 'fs24', 83)" class="p">Func</span> &lt;@@ <span onmouseout="hideTip(event, 'fs26', 84)" onmouseover="showTip(event, 'fs26', 84)" class="f">accrint</span> @@&gt; <span onmouseout="hideTip(event, 'fs15', 85)" onmouseover="showTip(event, 'fs15', 85)" class="i">args</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 86)" onmouseover="showTip(event, 'fs13', 86)" class="f">printFunc</span> <span class="s">&quot;ACCRINT&quot;</span> <span onmouseout="hideTip(event, 'fs15', 87)" onmouseover="showTip(event, 'fs15', 87)" class="i">args</span>
        | <span onmouseout="hideTip(event, 'fs27', 88)" onmouseover="showTip(event, 'fs27', 88)" class="p">Lambdas</span> (_, <span onmouseout="hideTip(event, 'fs28', 89)" onmouseover="showTip(event, 'fs28', 89)" class="i">e</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs12', 90)" onmouseover="showTip(event, 'fs12', 90)" class="f">transform</span> <span onmouseout="hideTip(event, 'fs28', 91)" onmouseover="showTip(event, 'fs28', 91)" class="i">e</span>
        | <span onmouseout="hideTip(event, 'fs29', 92)" onmouseover="showTip(event, 'fs29', 92)" class="p">Value</span> (<span onmouseout="hideTip(event, 'fs30', 93)" onmouseover="showTip(event, 'fs30', 93)" class="i">v</span>, _) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs17', 94)" onmouseover="showTip(event, 'fs17', 94)" class="f">string</span> <span onmouseout="hideTip(event, 'fs30', 95)" onmouseover="showTip(event, 'fs30', 95)" class="i">v</span>
        <span class="c">// try to replace a varname with its column index</span>
        | <span onmouseout="hideTip(event, 'fs31', 96)" onmouseover="showTip(event, 'fs31', 96)" class="p">Var</span> <span onmouseout="hideTip(event, 'fs32', 97)" onmouseover="showTip(event, 'fs32', 97)" class="i">var</span> <span class="k">-&gt;</span> 
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs18', 98)" onmouseover="showTip(event, 'fs18', 98)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 99)" onmouseover="showTip(event, 'fs33', 99)" class="f">tryFindIndex</span> ((<span class="o">=</span>)<span onmouseout="hideTip(event, 'fs32', 100)" onmouseover="showTip(event, 'fs32', 100)" class="i">var</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 101)" onmouseover="showTip(event, 'fs34', 101)" class="i">Name</span>) <span onmouseout="hideTip(event, 'fs5', 102)" onmouseover="showTip(event, 'fs5', 102)" class="i">env</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs35', 103)" onmouseover="showTip(event, 'fs35', 103)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs36', 104)" onmouseover="showTip(event, 'fs36', 104)" class="i">ind</span> <span class="k">-&gt;</span> <span class="s">&quot;R#C&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs17', 105)" onmouseover="showTip(event, 'fs17', 105)" class="f">string</span> (<span onmouseout="hideTip(event, 'fs36', 106)" onmouseover="showTip(event, 'fs36', 106)" class="i">ind</span> <span class="o">+</span> <span class="n">1</span>)
            | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs32', 107)" onmouseover="showTip(event, 'fs32', 107)" class="i">var</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 108)" onmouseover="showTip(event, 'fs34', 108)" class="i">Name</span>
        <span class="c">// args.[i] means reference to the (i+1)th column</span>
        | <span onmouseout="hideTip(event, 'fs37', 109)" onmouseover="showTip(event, 'fs37', 109)" class="p">Call</span>(<span onmouseout="hideTip(event, 'fs38', 110)" onmouseover="showTip(event, 'fs38', 110)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs39', 111)" onmouseover="showTip(event, 'fs39', 111)" class="i">mi</span>, _<span class="o">::</span>[<span onmouseout="hideTip(event, 'fs29', 112)" onmouseover="showTip(event, 'fs29', 112)" class="p">Value</span> (<span onmouseout="hideTip(event, 'fs40', 113)" onmouseover="showTip(event, 'fs40', 113)" class="i">i</span>, _)]) <span class="k">when</span> <span onmouseout="hideTip(event, 'fs39', 114)" onmouseover="showTip(event, 'fs39', 114)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 115)" onmouseover="showTip(event, 'fs41', 115)" class="i">DeclaringType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 116)" onmouseover="showTip(event, 'fs42', 116)" class="i">Name</span> <span class="o">=</span> <span class="s">&quot;IntrinsicFunctions&quot;</span> 
                                              <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs39', 117)" onmouseover="showTip(event, 'fs39', 117)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 118)" onmouseover="showTip(event, 'fs42', 118)" class="i">Name</span> <span class="o">=</span> <span class="s">&quot;GetArray&quot;</span> <span class="k">-&gt;</span> 
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 119)" onmouseover="showTip(event, 'fs36', 119)" class="i">ind</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs43', 120)" onmouseover="showTip(event, 'fs43', 120)" class="f">unbox</span> <span onmouseout="hideTip(event, 'fs40', 121)" onmouseover="showTip(event, 'fs40', 121)" class="i">i</span> <span class="k">in</span> <span class="s">&quot;R#C&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs17', 122)" onmouseover="showTip(event, 'fs17', 122)" class="f">string</span> (<span onmouseout="hideTip(event, 'fs36', 123)" onmouseover="showTip(event, 'fs36', 123)" class="i">ind</span> <span class="o">+</span> <span class="n">1</span>)
        <span class="c">// replace MakeDecimal with a value</span>
        | <span onmouseout="hideTip(event, 'fs37', 124)" onmouseover="showTip(event, 'fs37', 124)" class="p">Call</span>(<span onmouseout="hideTip(event, 'fs38', 125)" onmouseover="showTip(event, 'fs38', 125)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs39', 126)" onmouseover="showTip(event, 'fs39', 126)" class="i">mi</span>, <span onmouseout="hideTip(event, 'fs29', 127)" onmouseover="showTip(event, 'fs29', 127)" class="p">Value</span> (<span onmouseout="hideTip(event, 'fs30', 128)" onmouseover="showTip(event, 'fs30', 128)" class="i">v</span>, _)<span class="o">::</span>_) <span class="k">when</span> <span onmouseout="hideTip(event, 'fs39', 129)" onmouseover="showTip(event, 'fs39', 129)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 130)" onmouseover="showTip(event, 'fs41', 130)" class="i">DeclaringType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 131)" onmouseover="showTip(event, 'fs42', 131)" class="i">Name</span> <span class="o">=</span> <span class="s">&quot;IntrinsicFunctions&quot;</span> 
                                            <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs39', 132)" onmouseover="showTip(event, 'fs39', 132)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 133)" onmouseover="showTip(event, 'fs42', 133)" class="i">Name</span> <span class="o">=</span> <span class="s">&quot;MakeDecimal&quot;</span> <span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs17', 134)" onmouseover="showTip(event, 'fs17', 134)" class="f">string</span> <span onmouseout="hideTip(event, 'fs30', 135)" onmouseover="showTip(event, 'fs30', 135)" class="i">v</span>
        <span class="c">// DateTime ctor -&gt; Excel DATE function: DATE(year, month, day)</span>
        | <span onmouseout="hideTip(event, 'fs44', 136)" onmouseover="showTip(event, 'fs44', 136)" class="p">NewObject</span>(<span onmouseout="hideTip(event, 'fs45', 137)" onmouseover="showTip(event, 'fs45', 137)" class="i">ci</span>, <span onmouseout="hideTip(event, 'fs29', 138)" onmouseover="showTip(event, 'fs29', 138)" class="p">Value</span>(<span onmouseout="hideTip(event, 'fs46', 139)" onmouseover="showTip(event, 'fs46', 139)" class="i">y</span>,_)<span class="o">::</span><span onmouseout="hideTip(event, 'fs29', 140)" onmouseover="showTip(event, 'fs29', 140)" class="p">Value</span>(<span onmouseout="hideTip(event, 'fs47', 141)" onmouseover="showTip(event, 'fs47', 141)" class="i">m</span>,_)<span class="o">::</span><span onmouseout="hideTip(event, 'fs29', 142)" onmouseover="showTip(event, 'fs29', 142)" class="p">Value</span>(<span onmouseout="hideTip(event, 'fs48', 143)" onmouseover="showTip(event, 'fs48', 143)" class="i">d</span>,_)<span class="o">::</span>_) <span class="k">when</span> <span onmouseout="hideTip(event, 'fs45', 144)" onmouseover="showTip(event, 'fs45', 144)" class="i">ci</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 145)" onmouseover="showTip(event, 'fs41', 145)" class="i">DeclaringType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 146)" onmouseover="showTip(event, 'fs42', 146)" class="i">Name</span><span class="o">=</span><span class="s">&quot;DateTime&quot;</span><span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs21', 147)" onmouseover="showTip(event, 'fs21', 147)" class="f">sprintf</span> <span class="s">&quot;DATE(</span><span class="pf">%A</span><span class="s">, </span><span class="pf">%A</span><span class="s">, </span><span class="pf">%A</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs46', 148)" onmouseover="showTip(event, 'fs46', 148)" class="i">y</span> <span onmouseout="hideTip(event, 'fs47', 149)" onmouseover="showTip(event, 'fs47', 149)" class="i">m</span> <span onmouseout="hideTip(event, 'fs48', 150)" onmouseover="showTip(event, 'fs48', 150)" class="i">d</span>
        | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs49', 151)" onmouseover="showTip(event, 'fs49', 151)" class="f">failwith</span> (<span onmouseout="hideTip(event, 'fs21', 152)" onmouseover="showTip(event, 'fs21', 152)" class="f">sprintf</span> <span class="s">&quot;Unknown expression type: </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs2', 153)" onmouseover="showTip(event, 'fs2', 153)" class="i">expr</span>)

    <span class="s">&quot;=&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs12', 154)" onmouseover="showTip(event, 'fs12', 154)" class="f">transform</span> <span onmouseout="hideTip(event, 'fs2', 155)" onmouseover="showTip(event, 'fs2', 155)" class="i">expr</span>

<span id="fst50" onmouseout="hideTip(event, 'fs50', 156)" onmouseover="showTip(event, 'fs50', 156, document.getElementById('fst50'))" class="omitted">(Patterns example)</span>

<span class="k">module</span> <span class="t">Test</span> <span class="o">=</span>
    [&lt;<span onmouseout="hideTip(event, 'fs51', 157)" onmouseover="showTip(event, 'fs51', 157)" class="t">ReflectedDefinition</span>&gt;]
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs52', 158)" onmouseover="showTip(event, 'fs52', 158)" class="f">sum</span> (<span onmouseout="hideTip(event, 'fs53', 159)" onmouseover="showTip(event, 'fs53', 159)" class="i">a</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs54', 160)" onmouseover="showTip(event, 'fs54', 160)" class="t">decimal</span>) <span onmouseout="hideTip(event, 'fs55', 161)" onmouseover="showTip(event, 'fs55', 161)" class="i">b</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 162)" onmouseover="showTip(event, 'fs53', 162)" class="i">a</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs55', 163)" onmouseover="showTip(event, 'fs55', 163)" class="i">b</span>
  
    [&lt;<span onmouseout="hideTip(event, 'fs51', 164)" onmouseover="showTip(event, 'fs51', 164)" class="t">ReflectedDefinition</span>&gt;]
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 165)" onmouseover="showTip(event, 'fs56', 165)" class="f">mdurationMonth</span> <span onmouseout="hideTip(event, 'fs57', 166)" onmouseover="showTip(event, 'fs57', 166)" class="i">m</span> <span onmouseout="hideTip(event, 'fs58', 167)" onmouseover="showTip(event, 'fs58', 167)" class="i">c</span> <span onmouseout="hideTip(event, 'fs59', 168)" onmouseover="showTip(event, 'fs59', 168)" class="i">y</span> <span onmouseout="hideTip(event, 'fs60', 169)" onmouseover="showTip(event, 'fs60', 169)" class="i">f</span> <span onmouseout="hideTip(event, 'fs61', 170)" onmouseover="showTip(event, 'fs61', 170)" class="i">basis</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs25', 171)" onmouseover="showTip(event, 'fs25', 171)" class="f">mduration</span> (<span onmouseout="hideTip(event, 'fs62', 172)" onmouseover="showTip(event, 'fs62', 172)" class="t">DateTime</span>(<span class="n">2012</span>, <span class="n">1</span>, <span class="n">7</span>)) <span onmouseout="hideTip(event, 'fs57', 173)" onmouseover="showTip(event, 'fs57', 173)" class="i">m</span> <span onmouseout="hideTip(event, 'fs58', 174)" onmouseover="showTip(event, 'fs58', 174)" class="i">c</span> <span onmouseout="hideTip(event, 'fs59', 175)" onmouseover="showTip(event, 'fs59', 175)" class="i">y</span> <span onmouseout="hideTip(event, 'fs60', 176)" onmouseover="showTip(event, 'fs60', 176)" class="i">f</span> <span onmouseout="hideTip(event, 'fs61', 177)" onmouseover="showTip(event, 'fs61', 177)" class="i">basis</span>) <span class="o">*</span> <span class="n">12M</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 178)" onmouseover="showTip(event, 'fs63', 178)" class="f">run</span> <span onmouseout="hideTip(event, 'fs64', 179)" onmouseover="showTip(event, 'fs64', 179)" class="f">export</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs65', 180)" onmouseover="showTip(event, 'fs65', 180)" class="i">data</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs66', 181)" onmouseover="showTip(event, 'fs66', 181)" class="t">obj</span> <span onmouseout="hideTip(event, 'fs67', 182)" onmouseover="showTip(event, 'fs67', 182)" class="t">list</span> <span onmouseout="hideTip(event, 'fs67', 183)" onmouseover="showTip(event, 'fs67', 183)" class="t">list</span> <span class="o">=</span><span id="fst68" onmouseout="hideTip(event, 'fs68', 184)" onmouseover="showTip(event, 'fs68', 184, document.getElementById('fst68'))" class="omitted">(Some data)</span>

        <span class="c">// the vars with such names will be replaced with R{rownum}C{var index + 1}</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs69', 185)" onmouseover="showTip(event, 'fs69', 185)" class="i">dataColumns</span> <span class="o">=</span> [<span class="s">&quot;a&quot;</span>; <span class="s">&quot;b&quot;</span>; <span class="s">&quot;s&quot;</span>; <span class="s">&quot;m&quot;</span>; <span class="s">&quot;c&quot;</span>; <span class="s">&quot;y&quot;</span>; <span class="s">&quot;f&quot;</span>; <span class="s">&quot;basis&quot;</span>]
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs70', 186)" onmouseover="showTip(event, 'fs70', 186)" class="i">funcs</span> <span class="o">=</span> [<span class="s">&quot;sum&quot;</span>; <span class="s">&quot;mdurationMonth&quot;</span>]

        <span class="c">// try to find the reflected definitions (usual expressions can be used instead)</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs71', 187)" onmouseover="showTip(event, 'fs71', 187)" class="i">reflectedDefinitions</span> <span class="o">=</span> 
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs72', 188)" onmouseover="showTip(event, 'fs72', 188)" class="i">methods</span> <span class="o">=</span> 
                <span onmouseout="hideTip(event, 'fs73', 189)" onmouseover="showTip(event, 'fs73', 189)" class="t">Assembly</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 190)" onmouseover="showTip(event, 'fs74', 190)" class="f">GetExecutingAssembly</span>()<span class="o">.</span><span class="f">GetTypes</span>() 
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs75', 191)" onmouseover="showTip(event, 'fs75', 191)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs76', 192)" onmouseover="showTip(event, 'fs76', 192)" class="f">collect</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs77', 193)" onmouseover="showTip(event, 'fs77', 193)" class="i">t</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs77', 194)" onmouseover="showTip(event, 'fs77', 194)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs78', 195)" onmouseover="showTip(event, 'fs78', 195)" class="f">GetMethods</span>())

            <span onmouseout="hideTip(event, 'fs75', 196)" onmouseover="showTip(event, 'fs75', 196)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 197)" onmouseover="showTip(event, 'fs79', 197)" class="f">foldBack</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs39', 198)" onmouseover="showTip(event, 'fs39', 198)" class="i">mi</span> <span onmouseout="hideTip(event, 'fs80', 199)" onmouseover="showTip(event, 'fs80', 199)" class="i">state</span> <span class="k">-&gt;</span> 
                <span class="k">match</span> <span onmouseout="hideTip(event, 'fs81', 200)" onmouseover="showTip(event, 'fs81', 200)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs82', 201)" onmouseover="showTip(event, 'fs82', 201)" class="f">TryGetReflectedDefinition</span> <span onmouseout="hideTip(event, 'fs39', 202)" onmouseover="showTip(event, 'fs39', 202)" class="i">mi</span> <span class="k">with</span>
                | <span onmouseout="hideTip(event, 'fs35', 203)" onmouseover="showTip(event, 'fs35', 203)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs2', 204)" onmouseover="showTip(event, 'fs2', 204)" class="i">expr</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs39', 205)" onmouseover="showTip(event, 'fs39', 205)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 206)" onmouseover="showTip(event, 'fs42', 206)" class="i">Name</span>, <span onmouseout="hideTip(event, 'fs2', 207)" onmouseover="showTip(event, 'fs2', 207)" class="i">expr</span>) <span class="o">::</span> <span onmouseout="hideTip(event, 'fs80', 208)" onmouseover="showTip(event, 'fs80', 208)" class="i">state</span>
                | <span onmouseout="hideTip(event, 'fs38', 209)" onmouseover="showTip(event, 'fs38', 209)" class="p">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs80', 210)" onmouseover="showTip(event, 'fs80', 210)" class="i">state</span>) <span onmouseout="hideTip(event, 'fs72', 211)" onmouseover="showTip(event, 'fs72', 211)" class="i">methods</span> []
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs83', 212)" onmouseover="showTip(event, 'fs83', 212)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs84', 213)" onmouseover="showTip(event, 'fs84', 213)" class="f">ofList</span>

        <span class="c">// transform quotation into a pattern &amp; split by the rownum replacement &#39;#&#39;</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs85', 214)" onmouseover="showTip(event, 'fs85', 214)" class="f">unquote</span> <span class="o">=</span> 
            <span onmouseout="hideTip(event, 'fs86', 215)" onmouseover="showTip(event, 'fs86', 215)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs87', 216)" onmouseover="showTip(event, 'fs87', 216)" class="f">bind</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs2', 217)" onmouseover="showTip(event, 'fs2', 217)" class="i">expr</span> <span class="k">-&gt;</span> 
                <span class="k">try</span> 
                    <span onmouseout="hideTip(event, 'fs35', 218)" onmouseover="showTip(event, 'fs35', 218)" class="p">Some</span> ((<span onmouseout="hideTip(event, 'fs4', 219)" onmouseover="showTip(event, 'fs4', 219)" class="f">generatePattern</span> <span onmouseout="hideTip(event, 'fs2', 220)" onmouseover="showTip(event, 'fs2', 220)" class="i">expr</span> <span onmouseout="hideTip(event, 'fs69', 221)" onmouseover="showTip(event, 'fs69', 221)" class="i">dataColumns</span>)<span class="o">.</span><span class="f">Split</span> [|<span class="s">&#39;#&#39;</span>|])
                <span class="k">with</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs38', 222)" onmouseover="showTip(event, 'fs38', 222)" class="p">None</span>)

        <span class="c">// reflected definitions -&gt; formulae</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs88', 223)" onmouseover="showTip(event, 'fs88', 223)" class="i">formulae</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs70', 224)" onmouseover="showTip(event, 'fs70', 224)" class="i">funcs</span>
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 225)" onmouseover="showTip(event, 'fs18', 225)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 226)" onmouseover="showTip(event, 'fs19', 226)" class="f">map</span> (<span onmouseout="hideTip(event, 'fs71', 227)" onmouseover="showTip(event, 'fs71', 227)" class="i">reflectedDefinitions</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 228)" onmouseover="showTip(event, 'fs89', 228)" class="f">TryFind</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs85', 229)" onmouseover="showTip(event, 'fs85', 229)" class="f">unquote</span>)
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 230)" onmouseover="showTip(event, 'fs18', 230)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs90', 231)" onmouseover="showTip(event, 'fs90', 231)" class="f">filter</span> <span onmouseout="hideTip(event, 'fs86', 232)" onmouseover="showTip(event, 'fs86', 232)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs91', 233)" onmouseover="showTip(event, 'fs91', 233)" class="f">isSome</span>
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 234)" onmouseover="showTip(event, 'fs18', 234)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 235)" onmouseover="showTip(event, 'fs19', 235)" class="f">map</span> <span onmouseout="hideTip(event, 'fs86', 236)" onmouseover="showTip(event, 'fs86', 236)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs92', 237)" onmouseover="showTip(event, 'fs92', 237)" class="f">get</span>
        
        <span onmouseout="hideTip(event, 'fs65', 238)" onmouseover="showTip(event, 'fs65', 238)" class="i">data</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 239)" onmouseover="showTip(event, 'fs18', 239)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs93', 240)" onmouseover="showTip(event, 'fs93', 240)" class="f">iteri</span> (<span onmouseout="hideTip(event, 'fs64', 241)" onmouseover="showTip(event, 'fs64', 241)" class="f">export</span> <span onmouseout="hideTip(event, 'fs88', 242)" onmouseover="showTip(event, 'fs88', 242)" class="i">formulae</span>)

<span class="c">/// Export data with given pattern</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs94', 243)" onmouseover="showTip(event, 'fs94', 243)" class="f">export</span> <span onmouseout="hideTip(event, 'fs95', 244)" onmouseover="showTip(event, 'fs95', 244)" class="f">exportValue</span> <span onmouseout="hideTip(event, 'fs96', 245)" onmouseover="showTip(event, 'fs96', 245)" class="f">exportFunc</span> (<span onmouseout="hideTip(event, 'fs97', 246)" onmouseover="showTip(event, 'fs97', 246)" class="i">patterns</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs17', 247)" onmouseover="showTip(event, 'fs17', 247)" class="t">string</span>[] <span onmouseout="hideTip(event, 'fs67', 248)" onmouseover="showTip(event, 'fs67', 248)" class="t">list</span>) <span onmouseout="hideTip(event, 'fs98', 249)" onmouseover="showTip(event, 'fs98', 249)" class="i">row</span> (<span onmouseout="hideTip(event, 'fs99', 250)" onmouseover="showTip(event, 'fs99', 250)" class="i">items</span><span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs67', 251)" onmouseover="showTip(event, 'fs67', 251)" class="t">list</span>) <span class="o">=</span><span id="fst100" onmouseout="hideTip(event, 'fs100', 252)" onmouseover="showTip(event, 'fs100', 252, document.getElementById('fst100'))" class="omitted">(...)</span>

<span class="c">// Standard output</span>
<span onmouseout="hideTip(event, 'fs101', 253)" onmouseover="showTip(event, 'fs101', 253)" class="t">Test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 254)" onmouseover="showTip(event, 'fs63', 254)" class="f">run</span> (<span onmouseout="hideTip(event, 'fs94', 255)" onmouseover="showTip(event, 'fs94', 255)" class="f">export</span> 
            (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs98', 256)" onmouseover="showTip(event, 'fs98', 256)" class="i">row</span> <span onmouseout="hideTip(event, 'fs102', 257)" onmouseover="showTip(event, 'fs102', 257)" class="i">i</span> <span onmouseout="hideTip(event, 'fs103', 258)" onmouseover="showTip(event, 'fs103', 258)" class="i">item</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs104', 259)" onmouseover="showTip(event, 'fs104', 259)" class="f">printfn</span> <span class="s">&quot;Cells.[</span><span class="pf">%d</span><span class="s">, </span><span class="pf">%d</span><span class="s">]&lt;-</span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs98', 260)" onmouseover="showTip(event, 'fs98', 260)" class="i">row</span> (<span onmouseout="hideTip(event, 'fs102', 261)" onmouseover="showTip(event, 'fs102', 261)" class="i">i</span><span class="o">+</span><span class="n">1</span>) <span onmouseout="hideTip(event, 'fs103', 262)" onmouseover="showTip(event, 'fs103', 262)" class="i">item</span>)
            (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs105', 263)" onmouseover="showTip(event, 'fs105', 263)" class="i">cell</span> <span onmouseout="hideTip(event, 'fs106', 264)" onmouseover="showTip(event, 'fs106', 264)" class="i">formula</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs104', 265)" onmouseover="showTip(event, 'fs104', 265)" class="f">printfn</span> <span class="s">&quot;Range(</span><span class="pf">%A</span><span class="s">, </span><span class="pf">%A</span><span class="s">).Formula &lt;- </span><span class="e">\&quot;</span><span class="s"></span><span class="pf">%s</span><span class="s"></span><span class="e">\&quot;</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs105', 266)" onmouseover="showTip(event, 'fs105', 266)" class="i">cell</span> <span onmouseout="hideTip(event, 'fs105', 267)" onmouseover="showTip(event, 'fs105', 267)" class="i">cell</span> <span onmouseout="hideTip(event, 'fs106', 268)" onmouseover="showTip(event, 'fs106', 268)" class="i">formula</span>))
</code></pre></td>
</tr>
</table>
<h2><a name="Simple-export-to-Excel" class="anchor" href="#Simple-export-to-Excel">Simple export to Excel</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs107', 269)" onmouseover="showTip(event, 'fs107', 269)" class="i">app</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs108', 270)" onmouseover="showTip(event, 'fs108', 270)" class="t">ApplicationClass</span>()
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs109', 271)" onmouseover="showTip(event, 'fs109', 271)" class="i">workbook</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs107', 272)" onmouseover="showTip(event, 'fs107', 272)" class="i">app</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 273)" onmouseover="showTip(event, 'fs110', 273)" class="i">Workbooks</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs111', 274)" onmouseover="showTip(event, 'fs111', 274)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs112', 275)" onmouseover="showTip(event, 'fs112', 275)" class="t">XlWBATemplate</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs113', 276)" onmouseover="showTip(event, 'fs113', 276)" class="i">xlWBATWorksheet</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs114', 277)" onmouseover="showTip(event, 'fs114', 277)" class="i">worksheet</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs109', 278)" onmouseover="showTip(event, 'fs109', 278)" class="i">workbook</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 279)" onmouseover="showTip(event, 'fs110', 279)" class="i">Worksheets</span><span class="o">.</span>[<span class="n">1</span>] <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs115', 280)" onmouseover="showTip(event, 'fs115', 280)" class="t">Worksheet</span>

<span class="c">// fill the cells</span>
<span onmouseout="hideTip(event, 'fs101', 281)" onmouseover="showTip(event, 'fs101', 281)" class="t">Test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 282)" onmouseover="showTip(event, 'fs63', 282)" class="f">run</span> (<span onmouseout="hideTip(event, 'fs94', 283)" onmouseover="showTip(event, 'fs94', 283)" class="f">export</span> 
            (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs98', 284)" onmouseover="showTip(event, 'fs98', 284)" class="i">row</span> <span onmouseout="hideTip(event, 'fs102', 285)" onmouseover="showTip(event, 'fs102', 285)" class="i">i</span> <span onmouseout="hideTip(event, 'fs103', 286)" onmouseover="showTip(event, 'fs103', 286)" class="i">item</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs114', 287)" onmouseover="showTip(event, 'fs114', 287)" class="i">worksheet</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs116', 288)" onmouseover="showTip(event, 'fs116', 288)" class="i">Cells</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs98', 289)" onmouseover="showTip(event, 'fs98', 289)" class="i">row</span>, <span onmouseout="hideTip(event, 'fs102', 290)" onmouseover="showTip(event, 'fs102', 290)" class="i">i</span><span class="o">+</span><span class="n">1</span>] <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs103', 291)" onmouseover="showTip(event, 'fs103', 291)" class="i">item</span>)
            (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs105', 292)" onmouseover="showTip(event, 'fs105', 292)" class="i">cell</span> <span onmouseout="hideTip(event, 'fs106', 293)" onmouseover="showTip(event, 'fs106', 293)" class="i">formula</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs114', 294)" onmouseover="showTip(event, 'fs114', 294)" class="i">worksheet</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs117', 295)" onmouseover="showTip(event, 'fs117', 295)" class="i">Range</span>(<span onmouseout="hideTip(event, 'fs105', 296)" onmouseover="showTip(event, 'fs105', 296)" class="i">cell</span>, <span onmouseout="hideTip(event, 'fs105', 297)" onmouseover="showTip(event, 'fs105', 297)" class="i">cell</span>)<span class="o">.</span><span class="i">Formula</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs106', 298)" onmouseover="showTip(event, 'fs106', 298)" class="i">formula</span>))

<span onmouseout="hideTip(event, 'fs107', 299)" onmouseover="showTip(event, 'fs107', 299)" class="i">app</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 300)" onmouseover="showTip(event, 'fs110', 300)" class="i">ReferenceStyle</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs118', 301)" onmouseover="showTip(event, 'fs118', 301)" class="t">XlReferenceStyle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs119', 302)" onmouseover="showTip(event, 'fs119', 302)" class="i">xlA1</span>

<span id="fst120" onmouseout="hideTip(event, 'fs120', 303)" onmouseover="showTip(event, 'fs120', 303, document.getElementById('fst120'))" class="omitted">(Close workbook and release objects)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />type Func&lt;&#39;TResult&gt; =<br />&#160;&#160;delegate of unit -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;T16,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 * &#39;T16 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;</div>
<div class="tip" id="fs2">val expr : Expr</div>
<div class="tip" id="fs3">match expr with<br />&#160;&#160;&#160;&#160;| Lambdas(_,(Call(_,minfo1,_))) -&gt; function<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| Call(obj, minfo2, args) when minfo1.MetadataToken = minfo2.MetadataToken -&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Some args<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| _ -&gt; None<br />&#160;&#160;&#160;&#160;| _ -&gt; failwith &quot;invalid template parameter&quot;</div>
<div class="tip" id="fs4">val generatePattern : expr:Expr -&gt; env:string list -&gt; string<br /><br />Full name: Script.generatePattern<br /><em><br /><br />&#160;Generate a formula pattern for an expression<br />&#160;Column number - index of var + 1 in the env<br />&#160;&#39;#&#39; is a temp placeholder for a row number</em></div>
<div class="tip" id="fs5">val env : string list</div>
<div class="tip" id="fs6">val printBinaryOp : (string -&gt; Expr -&gt; Expr -&gt; bool -&gt; string)</div>
<div class="tip" id="fs7">val op : string</div>
<div class="tip" id="fs8">val x : Expr</div>
<div class="tip" id="fs9">val y : Expr</div>
<div class="tip" id="fs10">val parens : bool</div>
<div class="tip" id="fs11">val res : string</div>
<div class="tip" id="fs12">val transform : (Expr -&gt; string)</div>
<div class="tip" id="fs13">val printFunc : (string -&gt; Expr list -&gt; string)</div>
<div class="tip" id="fs14">val name : string</div>
<div class="tip" id="fs15">val args : Expr list</div>
<div class="tip" id="fs16">val argValues : string []</div>
<div class="tip" id="fs17">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs18">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs19">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs20">val toArray : list:&#39;T list -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.List.toArray</div>
<div class="tip" id="fs21">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs22">Multiple items<br />active recognizer String: Expr -&gt; string option<br /><br />Full name: Microsoft.FSharp.Quotations.DerivedPatterns.( |String|_| )<br /><br />--------------------<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs23">String.Join(separator: string, values: Collections.Generic.IEnumerable&lt;string&gt;) : string<br />String.Join&lt;&#39;T&gt;(separator: string, values: Collections.Generic.IEnumerable&lt;&#39;T&gt;) : string<br />String.Join(separator: string, [&lt;ParamArray&gt;] values: obj []) : string<br />String.Join(separator: string, [&lt;ParamArray&gt;] value: string []) : string<br />String.Join(separator: string, value: string [], startIndex: int, count: int) : string</div>
<div class="tip" id="fs24">Multiple items<br />active recognizer Func: Expr -&gt; Expr -&gt; Expr list option<br /><br />Full name: Script.( |Func|_| )<br /><em><br /><br />&#160;Simplified SpecificCall</em><br /><br />--------------------<br />type Func&lt;&#39;TResult&gt; =<br />&#160;&#160;delegate of unit -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;T16,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 * &#39;T16 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;</div>
<div class="tip" id="fs25">val mduration : settlement:&#39;a -&gt; maturity:&#39;b -&gt; coupon:&#39;c -&gt; yld:&#39;d -&gt; frequency:&#39;e -&gt; basis:&#39;f -&gt; decimal<br /><br />Full name: Script.mduration</div>
<div class="tip" id="fs26">val accrint : issue:&#39;a -&gt; first_interest:&#39;b -&gt; settlement:&#39;c -&gt; rate:&#39;d -&gt; par:&#39;e -&gt; frequency:&#39;f -&gt; basis:&#39;g -&gt; decimal<br /><br />Full name: Script.accrint</div>
<div class="tip" id="fs27">active recognizer Lambdas: Expr -&gt; (Var list list * Expr) option<br /><br />Full name: Microsoft.FSharp.Quotations.DerivedPatterns.( |Lambdas|_| )</div>
<div class="tip" id="fs28">val e : Expr</div>
<div class="tip" id="fs29">active recognizer Value: Expr -&gt; (obj * Type) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Value|_| )</div>
<div class="tip" id="fs30">val v : obj</div>
<div class="tip" id="fs31">Multiple items<br />active recognizer Var: Expr -&gt; Var option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Var|_| )<br /><br />--------------------<br />type Var =<br />&#160;&#160;interface IComparable<br />&#160;&#160;new : name:string * typ:Type * ?isMutable:bool -&gt; Var<br />&#160;&#160;member IsMutable : bool<br />&#160;&#160;member Name : string<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member Global : name:string * typ:Type -&gt; Var<br /><br />Full name: Microsoft.FSharp.Quotations.Var<br /><br />--------------------<br />new : name:string * typ:Type * ?isMutable:bool -&gt; Var</div>
<div class="tip" id="fs32">val var : Var</div>
<div class="tip" id="fs33">val tryFindIndex : predicate:(&#39;T -&gt; bool) -&gt; list:&#39;T list -&gt; int option<br /><br />Full name: Microsoft.FSharp.Collections.List.tryFindIndex</div>
<div class="tip" id="fs34">property Var.Name: string</div>
<div class="tip" id="fs35">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs36">val ind : int</div>
<div class="tip" id="fs37">active recognizer Call: Expr -&gt; (Expr option * MethodInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Call|_| )</div>
<div class="tip" id="fs38">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs39">val mi : MethodInfo</div>
<div class="tip" id="fs40">val i : obj</div>
<div class="tip" id="fs41">property MemberInfo.DeclaringType: Type</div>
<div class="tip" id="fs42">property MemberInfo.Name: string</div>
<div class="tip" id="fs43">val unbox : value:obj -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.unbox</div>
<div class="tip" id="fs44">active recognizer NewObject: Expr -&gt; (ConstructorInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewObject|_| )</div>
<div class="tip" id="fs45">val ci : ConstructorInfo</div>
<div class="tip" id="fs46">val y : obj</div>
<div class="tip" id="fs47">val m : obj</div>
<div class="tip" id="fs48">val d : obj</div>
<div class="tip" id="fs49">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs50">// &quot;=((((1+2^3)*3)-4)/5)&quot;<br />generatePattern &lt;@@ ((1. + 2.**3.) * 3. - 4.) / 5. @@&gt; [] <br />// &quot;=(-x+1)&quot;<br />generatePattern &lt;@@ fun (x: decimal) -&gt; -x + +1M @@&gt; [ ] <br />// &quot;=R#C1^4&quot;<br />generatePattern &lt;@@ fun a b -&gt; a ** 4. @@&gt; [&quot;a&quot;; &quot;b&quot;] <br />// &quot;=(R#C1+R#C2)&quot; - arrays can be used instead of explicit var names<br />generatePattern &lt;@@ fun (args: _ array) -&gt; args.[0] + args.[1] @@&gt; []<br />// &quot;=ACCRINT(R#C1, DATE(2010, 9, 8), R#C2, 10, 100, 2, 0)&quot;<br />generatePattern &lt;@@ fun issue settlement -&gt; <br />&#160;&#160;&#160;&#160;accrint issue (DateTime(2010,9,8)) settlement 10 100 2 0 @@&gt; [ &quot;issue&quot;; &quot;settlement&quot;]</div>
<div class="tip" id="fs51">Multiple items<br />type ReflectedDefinitionAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; ReflectedDefinitionAttribute<br /><br />Full name: Microsoft.FSharp.Core.ReflectedDefinitionAttribute<br /><br />--------------------<br />new : unit -&gt; ReflectedDefinitionAttribute</div>
<div class="tip" id="fs52">val sum : a:decimal -&gt; b:decimal -&gt; decimal<br /><br />Full name: Script.Test.sum</div>
<div class="tip" id="fs53">val a : decimal</div>
<div class="tip" id="fs54">Multiple items<br />val decimal : value:&#39;T -&gt; decimal (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.decimal<br /><br />--------------------<br />type decimal = Decimal<br /><br />Full name: Microsoft.FSharp.Core.decimal<br /><br />--------------------<br />type decimal&lt;&#39;Measure&gt; = decimal<br /><br />Full name: Microsoft.FSharp.Core.decimal&lt;_&gt;</div>
<div class="tip" id="fs55">val b : decimal</div>
<div class="tip" id="fs56">val mdurationMonth : m:&#39;a -&gt; c:&#39;b -&gt; y:&#39;c -&gt; f:&#39;d -&gt; basis:&#39;e -&gt; decimal<br /><br />Full name: Script.Test.mdurationMonth</div>
<div class="tip" id="fs57">val m : &#39;a</div>
<div class="tip" id="fs58">val c : &#39;b</div>
<div class="tip" id="fs59">val y : &#39;c</div>
<div class="tip" id="fs60">val f : &#39;d</div>
<div class="tip" id="fs61">val basis : &#39;e</div>
<div class="tip" id="fs62">Multiple items<br />type DateTime =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : ticks:int64 -&gt; DateTime + 10 overloads<br />&#160;&#160;&#160;&#160;member Add : value:TimeSpan -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddDays : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddHours : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMilliseconds : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMinutes : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMonths : months:int -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddSeconds : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddTicks : value:int64 -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddYears : value:int -&gt; DateTime<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.DateTime<br /><br />--------------------<br />DateTime()<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(ticks: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(ticks: int64, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, calendar: Globalization.Calendar) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, calendar: Globalization.Calendar) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs63">val run : export:(string [] list -&gt; int -&gt; obj list -&gt; unit) -&gt; unit<br /><br />Full name: Script.Test.run</div>
<div class="tip" id="fs64">val export : (string [] list -&gt; int -&gt; obj list -&gt; unit)</div>
<div class="tip" id="fs65">val data : obj list list</div>
<div class="tip" id="fs66">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs67">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs68">[<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[ 42; 0; DateTime(2012, 1, 7); DateTime(2030, 1, 1); 15M; 0.9M; 1; 1 ]<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[ null; null; null; DateTime(2016, 1, 7); 8M; 9M; 2; 1 ]<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;]</div>
<div class="tip" id="fs69">val dataColumns : string list</div>
<div class="tip" id="fs70">val funcs : string list</div>
<div class="tip" id="fs71">val reflectedDefinitions : Map&lt;string,Expr&gt;</div>
<div class="tip" id="fs72">val methods : MethodInfo []</div>
<div class="tip" id="fs73">type Assembly =<br />&#160;&#160;member CodeBase : string<br />&#160;&#160;member CreateInstance : typeName:string -&gt; obj + 2 overloads<br />&#160;&#160;member EntryPoint : MethodInfo<br />&#160;&#160;member Equals : o:obj -&gt; bool<br />&#160;&#160;member EscapedCodeBase : string<br />&#160;&#160;member Evidence : Evidence<br />&#160;&#160;member FullName : string<br />&#160;&#160;member GetCustomAttributes : inherit:bool -&gt; obj[] + 1 overload<br />&#160;&#160;member GetCustomAttributesData : unit -&gt; IList&lt;CustomAttributeData&gt;<br />&#160;&#160;member GetExportedTypes : unit -&gt; Type[]<br />&#160;&#160;...<br /><br />Full name: System.Reflection.Assembly</div>
<div class="tip" id="fs74">Assembly.GetExecutingAssembly() : Assembly</div>
<div class="tip" id="fs75">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs76">val collect : mapping:(&#39;T -&gt; &#39;U []) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.collect</div>
<div class="tip" id="fs77">val t : Type</div>
<div class="tip" id="fs78">Type.GetMethods() : MethodInfo []<br />Type.GetMethods(bindingAttr: BindingFlags) : MethodInfo []</div>
<div class="tip" id="fs79">val foldBack : folder:(&#39;T -&gt; &#39;State -&gt; &#39;State) -&gt; array:&#39;T [] -&gt; state:&#39;State -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.Array.foldBack</div>
<div class="tip" id="fs80">val state : (string * Expr) list</div>
<div class="tip" id="fs81">Multiple items<br />type Expr =<br />&#160;&#160;override Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetFreeVars : unit -&gt; seq&lt;Var&gt;<br />&#160;&#160;member Substitute : substitution:(Var -&gt; Expr option) -&gt; Expr<br />&#160;&#160;member ToString : full:bool -&gt; string<br />&#160;&#160;member CustomAttributes : Expr list<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member AddressOf : target:Expr -&gt; Expr<br />&#160;&#160;static member AddressSet : target:Expr * value:Expr -&gt; Expr<br />&#160;&#160;static member Application : functionExpr:Expr * argument:Expr -&gt; Expr<br />&#160;&#160;static member Applications : functionExpr:Expr * arguments:Expr list list -&gt; Expr<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Quotations.Expr<br /><br />--------------------<br />type Expr&lt;&#39;T&gt; =<br />&#160;&#160;inherit Expr<br />&#160;&#160;member Raw : Expr<br /><br />Full name: Microsoft.FSharp.Quotations.Expr&lt;_&gt;</div>
<div class="tip" id="fs82">static member Expr.TryGetReflectedDefinition : methodBase:MethodBase -&gt; Expr option</div>
<div class="tip" id="fs83">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member Remove : key:&#39;Key -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Map&lt;_,_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs84">val ofList : elements:(&#39;Key * &#39;T) list -&gt; Map&lt;&#39;Key,&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.ofList</div>
<div class="tip" id="fs85">val unquote : (Expr option -&gt; string [] option)</div>
<div class="tip" id="fs86">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs87">val bind : binder:(&#39;T -&gt; &#39;U option) -&gt; option:&#39;T option -&gt; &#39;U option<br /><br />Full name: Microsoft.FSharp.Core.Option.bind</div>
<div class="tip" id="fs88">val formulae : string [] list</div>
<div class="tip" id="fs89">member Map.TryFind : key:&#39;Key -&gt; &#39;Value option</div>
<div class="tip" id="fs90">val filter : predicate:(&#39;T -&gt; bool) -&gt; list:&#39;T list -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.filter</div>
<div class="tip" id="fs91">val isSome : option:&#39;T option -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Option.isSome</div>
<div class="tip" id="fs92">val get : option:&#39;T option -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Option.get</div>
<div class="tip" id="fs93">val iteri : action:(int -&gt; &#39;T -&gt; unit) -&gt; list:&#39;T list -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.List.iteri</div>
<div class="tip" id="fs94">val export : exportValue:(int -&gt; int -&gt; &#39;a -&gt; unit) -&gt; exportFunc:(string -&gt; string -&gt; unit) -&gt; patterns:string [] list -&gt; row:int -&gt; items:&#39;a list -&gt; unit<br /><br />Full name: Script.export<br /><em><br /><br />&#160;Export data with given pattern</em></div>
<div class="tip" id="fs95">val exportValue : (int -&gt; int -&gt; &#39;a -&gt; unit)</div>
<div class="tip" id="fs96">val exportFunc : (string -&gt; string -&gt; unit)</div>
<div class="tip" id="fs97">val patterns : string [] list</div>
<div class="tip" id="fs98">val row : int</div>
<div class="tip" id="fs99">val items : &#39;a list</div>
<div class="tip" id="fs100">let row = row + 1<br />&#160;&#160;&#160;&#160;let j = items.Length<br />&#160;&#160;&#160;&#160;let formulae = patterns |&gt; List.map (fun arr -&gt; String.Join (string row, arr))<br />&#160;&#160;&#160;&#160;List.iteri (exportValue row) items<br />&#160;&#160;&#160;&#160;List.iteri (fun i formula -&gt; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let cell = sprintf &quot;%c%d&quot; (char (65 + i + j)) row<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;exportFunc cell formula) formulae</div>
<div class="tip" id="fs101">module Test<br /><br />from Script</div>
<div class="tip" id="fs102">val i : int</div>
<div class="tip" id="fs103">val item : obj</div>
<div class="tip" id="fs104">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs105">val cell : string</div>
<div class="tip" id="fs106">val formula : string</div>
<div class="tip" id="fs107">val app : ApplicationClass<br /><br />Full name: Script.app</div>
<div class="tip" id="fs108">Multiple items<br />type ApplicationClass =<br />&#160;&#160;new : unit -&gt; ApplicationClass<br />&#160;&#160;member ActivateMicrosoftApp : Index:XlMSApplication -&gt; unit<br />&#160;&#160;member ActiveCell : Range<br />&#160;&#160;member ActiveChart : Chart<br />&#160;&#160;member ActiveDialog : DialogSheet<br />&#160;&#160;member ActiveEncryptionSession : int<br />&#160;&#160;member ActiveMenuBar : MenuBar<br />&#160;&#160;member ActivePrinter : string with get, set<br />&#160;&#160;member ActiveProtectedViewWindow : ProtectedViewWindow<br />&#160;&#160;member ActiveSheet : obj<br />&#160;&#160;...<br /><br />Full name: Microsoft.Office.Interop.Excel.ApplicationClass<br /><br />--------------------<br />ApplicationClass() : unit</div>
<div class="tip" id="fs109">val workbook : Workbook<br /><br />Full name: Script.workbook</div>
<div class="tip" id="fs110"></div>
<div class="tip" id="fs111">Workbooks.Add(?Template: obj) : Workbook</div>
<div class="tip" id="fs112">type XlWBATemplate =<br />&#160;&#160;| xlWBATChart = -4109<br />&#160;&#160;| xlWBATExcel4IntlMacroSheet = 4<br />&#160;&#160;| xlWBATExcel4MacroSheet = 3<br />&#160;&#160;| xlWBATWorksheet = -4167<br /><br />Full name: Microsoft.Office.Interop.Excel.XlWBATemplate</div>
<div class="tip" id="fs113">field XlWBATemplate.xlWBATWorksheet = -4167</div>
<div class="tip" id="fs114">val worksheet : Worksheet<br /><br />Full name: Script.worksheet</div>
<div class="tip" id="fs115">type Worksheet =<br /><br />Full name: Microsoft.Office.Interop.Excel.Worksheet</div>
<div class="tip" id="fs116">property _Worksheet.Cells: Range</div>
<div class="tip" id="fs117">property _Worksheet.Range: obj * obj -&gt; Range</div>
<div class="tip" id="fs118">type XlReferenceStyle =<br />&#160;&#160;| xlA1 = 1<br />&#160;&#160;| xlR1C1 = -4150<br /><br />Full name: Microsoft.Office.Interop.Excel.XlReferenceStyle</div>
<div class="tip" id="fs119">field XlReferenceStyle.xlA1 = 1</div>
<div class="tip" id="fs120">// release COM objects<br />let inline release (objs: obj list) = <br />&#160;&#160;&#160;&#160;List.iter (System.Runtime.InteropServices.Marshal.ReleaseComObject &gt;&gt; ignore) objs<br /><br />let filename = &quot;test.xls&quot;<br />workbook.SaveAs(filename, XlFileFormat.xlWorkbookNormal)<br />workbook.Close true<br />app.Quit()<br /><br />release [worksheet; workbook; app]</div>

