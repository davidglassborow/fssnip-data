<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">//Add reference to NBitcoin</span>
<span class="prep">#if</span> <span class="i">INTERACTIVE</span>
<span class="inactive">#I</span><span class="inactive"> </span><span class="inactive">&quot;./packages/NBitcoin.3.0.1.6/lib/net45/&quot;</span>
<span class="inactive">#I</span><span class="inactive"> </span><span class="inactive">&quot;./packages/Newtonsoft.Json.9.0.1/lib/net45&quot;</span>
<span class="inactive">#r</span><span class="inactive"> </span><span class="inactive">&quot;NBitcoin.dll&quot;</span>
<span class="inactive">#r</span><span class="inactive"> </span><span class="inactive">&quot;Newtonsoft.Json.dll&quot;</span>
<span class="prep">#endif</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">NBitcoin</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">NBitcoin</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Protocol</span>

<span class="c">// --------------- CREATING A TRANSACTION --------------- // </span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">network</span> <span class="o">=</span> 
    <span class="c">// Select your network</span>
    <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="t">Network</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">Main</span>
    <span class="c">// Network.Test</span>

    <span class="c">// Or create your own:</span>
    <span class="c">// let builder = NetworkBuilder()</span>
    <span class="c">// builder.CopyFrom(Network.Main)</span>
    <span class="c">// builder.SetName(&quot;MyBlockChain&quot;).BuildAndRegister()</span>

<span class="c">// Create a new wallet:</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="f">newWallet</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="t">Key</span>()
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">alice</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="t">BitcoinSecret</span>(<span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="f">newWallet</span>(), <span onmouseout="hideTip(event, 'fs4', 13)" onmouseover="showTip(event, 'fs4', 13)" class="i">network</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="i">bob</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="t">BitcoinSecret</span>(<span onmouseout="hideTip(event, 'fs7', 16)" onmouseover="showTip(event, 'fs7', 16)" class="f">newWallet</span>(), <span onmouseout="hideTip(event, 'fs4', 17)" onmouseover="showTip(event, 'fs4', 17)" class="i">network</span>)
    
<span class="c">// You can also use existing wallets.</span>
<span class="c">// to test you can create wallets e.g. in https://rushwallet.com/</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="i">tuomas</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 19)" onmouseover="showTip(event, 'fs10', 19)" class="t">BitcoinSecret</span>(<span class="s">&quot;5JACYRvADrPzrzFNoGMUsV8UJYTsNbswaZWxjDT2GuMAUYGfG3w&quot;</span>, <span onmouseout="hideTip(event, 'fs4', 20)" onmouseover="showTip(event, 'fs4', 20)" class="i">network</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 21)" onmouseover="showTip(event, 'fs13', 21)" class="i">bobPublic</span> <span class="o">=</span> 
    <span class="c">//bob.ScriptPubKey</span>
    <span class="c">// or use existing:</span>
    <span onmouseout="hideTip(event, 'fs14', 22)" onmouseover="showTip(event, 'fs14', 22)" class="t">BitcoinAddress</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 23)" onmouseover="showTip(event, 'fs15', 23)" class="f">Create</span>(<span class="s">&quot;117GQHu6kUJSudEZSv7Bjv4FbK5ZBCgBy&quot;</span>, <span onmouseout="hideTip(event, 'fs4', 24)" onmouseover="showTip(event, 'fs4', 24)" class="i">network</span>)
    
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 25)" onmouseover="showTip(event, 'fs16', 25)" class="i">builder</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 26)" onmouseover="showTip(event, 'fs17', 26)" class="t">TransactionBuilder</span>()
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 27)" onmouseover="showTip(event, 'fs18', 27)" class="i">transaction</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 28)" onmouseover="showTip(event, 'fs19', 28)" class="i">sum</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 29)" onmouseover="showTip(event, 'fs20', 29)" class="t">Money</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 30)" onmouseover="showTip(event, 'fs21', 30)" class="f">Coins</span> <span class="n">0.0001m</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 31)" onmouseover="showTip(event, 'fs22', 31)" class="i">fee</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 32)" onmouseover="showTip(event, 'fs20', 32)" class="t">Money</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 33)" onmouseover="showTip(event, 'fs21', 33)" class="f">Coins</span> <span class="n">0.00002m</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 34)" onmouseover="showTip(event, 'fs23', 34)" class="i">coin</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs24', 35)" onmouseover="showTip(event, 'fs24', 35)" class="t">Coin</span>(
            <span onmouseout="hideTip(event, 'fs25', 36)" onmouseover="showTip(event, 'fs25', 36)" class="t">OutPoint</span>(
                <span class="c">// Previous Transaction-ID, get it from your wallet.</span>
                <span class="k">new</span> <span onmouseout="hideTip(event, 'fs26', 37)" onmouseover="showTip(event, 'fs26', 37)" class="t">uint256</span>(<span class="s">&quot;86dfe9fd88e3ee7024c9fa36ec8a47845e591c14d7c7913150877a269ab4f8dc&quot;</span>), 
                <span class="c">// Coin-order-number</span>
                <span class="n">1</span>
            ), <span onmouseout="hideTip(event, 'fs27', 38)" onmouseover="showTip(event, 'fs27', 38)" class="t">TxOut</span>(<span onmouseout="hideTip(event, 'fs19', 39)" onmouseover="showTip(event, 'fs19', 39)" class="i">sum</span>, <span onmouseout="hideTip(event, 'fs12', 40)" onmouseover="showTip(event, 'fs12', 40)" class="i">tuomas</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 41)" onmouseover="showTip(event, 'fs28', 41)" class="i">ScriptPubKey</span>)
        ) <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs29', 42)" onmouseover="showTip(event, 'fs29', 42)" class="t">ICoin</span>
    <span onmouseout="hideTip(event, 'fs16', 43)" onmouseover="showTip(event, 'fs16', 43)" class="i">builder</span>
        <span class="o">.</span><span class="f">AddCoins</span>([|<span onmouseout="hideTip(event, 'fs23', 44)" onmouseover="showTip(event, 'fs23', 44)" class="i">coin</span>|])
        <span class="o">.</span><span class="f">AddKeys</span>(<span onmouseout="hideTip(event, 'fs12', 45)" onmouseover="showTip(event, 'fs12', 45)" class="i">tuomas</span>)
        <span class="o">.</span><span class="f">Send</span>(<span onmouseout="hideTip(event, 'fs13', 46)" onmouseover="showTip(event, 'fs13', 46)" class="i">bobPublic</span>, (<span onmouseout="hideTip(event, 'fs19', 47)" onmouseover="showTip(event, 'fs19', 47)" class="i">sum</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs22', 48)" onmouseover="showTip(event, 'fs22', 48)" class="i">fee</span>))
        <span class="o">.</span><span class="f">SendFees</span>(<span onmouseout="hideTip(event, 'fs22', 49)" onmouseover="showTip(event, 'fs22', 49)" class="i">fee</span>)
        <span class="o">.</span><span class="f">SetChange</span>(<span onmouseout="hideTip(event, 'fs12', 50)" onmouseover="showTip(event, 'fs12', 50)" class="i">tuomas</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 51)" onmouseover="showTip(event, 'fs30', 51)" class="f">GetAddress</span>())
        <span class="o">.</span><span class="f">BuildTransaction</span>(<span class="k">true</span>)
    
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 52)" onmouseover="showTip(event, 'fs31', 52)" class="f">``check if transaction is valid``</span>() <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 53)" onmouseover="showTip(event, 'fs32', 53)" class="i">hash</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 54)" onmouseover="showTip(event, 'fs18', 54)" class="i">transaction</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 55)" onmouseover="showTip(event, 'fs33', 55)" class="f">GetHash</span>()
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 56)" onmouseover="showTip(event, 'fs34', 56)" class="i">isOk</span>, <span onmouseout="hideTip(event, 'fs35', 57)" onmouseover="showTip(event, 'fs35', 57)" class="i">errs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 58)" onmouseover="showTip(event, 'fs16', 58)" class="i">builder</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 59)" onmouseover="showTip(event, 'fs36', 59)" class="f">Verify</span>(<span onmouseout="hideTip(event, 'fs18', 60)" onmouseover="showTip(event, 'fs18', 60)" class="i">transaction</span>)
    <span onmouseout="hideTip(event, 'fs32', 61)" onmouseover="showTip(event, 'fs32', 61)" class="i">hash</span>, <span onmouseout="hideTip(event, 'fs34', 62)" onmouseover="showTip(event, 'fs34', 62)" class="i">isOk</span>, <span onmouseout="hideTip(event, 'fs35', 63)" onmouseover="showTip(event, 'fs35', 63)" class="i">errs</span>
    
<span class="c">// You can broadcast it e.g. from http://blockr.io</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 64)" onmouseover="showTip(event, 'fs37', 64)" class="i">transactionToBroadcast</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 65)" onmouseover="showTip(event, 'fs18', 65)" class="i">transaction</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 66)" onmouseover="showTip(event, 'fs38', 66)" class="f">ToHex</span>()


<span class="c">// --------------- SENDING TRANSACTION TO SERVER --------------- // </span>

<span class="c">/// Connect to public Bitcoin network:</span>
<span class="prep">#if</span> <span class="i">INTERACTIVE</span>
<span class="inactive">let</span><span class="inactive"> </span><span class="inactive">node</span><span class="inactive"> </span><span class="inactive">=</span><span class="inactive"> </span>
<span class="prep">#else</span>
<span class="k">use</span> <span onmouseout="hideTip(event, 'fs39', 67)" onmouseover="showTip(event, 'fs39', 67)" class="i">node</span> <span class="o">=</span> 
<span class="prep">#endif</span>
    <span class="c">// get a bit-node server address, e.g. from: https://bitnodes.21.co/</span>
    <span class="c">// Not all the nodes work.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 68)" onmouseover="showTip(event, 'fs40', 68)" class="i">n</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs41', 69)" onmouseover="showTip(event, 'fs41', 69)" class="t">Node</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 70)" onmouseover="showTip(event, 'fs42', 70)" class="f">Connect</span>(<span onmouseout="hideTip(event, 'fs4', 71)" onmouseover="showTip(event, 'fs4', 71)" class="i">network</span>, <span class="s">&quot;81.109.119.97:8333&quot;</span>)
    <span onmouseout="hideTip(event, 'fs40', 72)" onmouseover="showTip(event, 'fs40', 72)" class="i">n</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 73)" onmouseover="showTip(event, 'fs43', 73)" class="f">VersionHandshake</span>()
    <span onmouseout="hideTip(event, 'fs40', 74)" onmouseover="showTip(event, 'fs40', 74)" class="i">n</span>

<span class="c">// Channel for getting back messages</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 75)" onmouseover="showTip(event, 'fs44', 75)" class="f">getListener</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 76)" onmouseover="showTip(event, 'fs39', 76)" class="i">node</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 77)" onmouseover="showTip(event, 'fs45', 77)" class="f">CreateListener</span>()

<span class="c">// Do the trade</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 78)" onmouseover="showTip(event, 'fs46', 78)" class="f">sendSync</span>() <span class="o">=</span>
    <span class="c">// Notify server</span>
    <span onmouseout="hideTip(event, 'fs39', 79)" onmouseover="showTip(event, 'fs39', 79)" class="i">node</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 80)" onmouseover="showTip(event, 'fs47', 80)" class="f">SendMessage</span>(<span class="k">new</span> <span onmouseout="hideTip(event, 'fs48', 81)" onmouseover="showTip(event, 'fs48', 81)" class="t">InvPayload</span>(<span onmouseout="hideTip(event, 'fs18', 82)" onmouseover="showTip(event, 'fs18', 82)" class="i">transaction</span>)) 
    <span onmouseout="hideTip(event, 'fs1', 83)" onmouseover="showTip(event, 'fs1', 83)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 84)" onmouseover="showTip(event, 'fs49', 84)" class="i">Threading</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 85)" onmouseover="showTip(event, 'fs50', 85)" class="t">Thread</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 86)" onmouseover="showTip(event, 'fs51', 86)" class="f">Sleep</span> <span class="n">1000</span>
    <span class="c">// Send transaction</span>
    <span onmouseout="hideTip(event, 'fs39', 87)" onmouseover="showTip(event, 'fs39', 87)" class="i">node</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 88)" onmouseover="showTip(event, 'fs47', 88)" class="f">SendMessage</span>(<span class="k">new</span> <span onmouseout="hideTip(event, 'fs52', 89)" onmouseover="showTip(event, 'fs52', 89)" class="t">TxPayload</span>(<span onmouseout="hideTip(event, 'fs18', 90)" onmouseover="showTip(event, 'fs18', 90)" class="i">transaction</span>))
    <span onmouseout="hideTip(event, 'fs1', 91)" onmouseover="showTip(event, 'fs1', 91)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 92)" onmouseover="showTip(event, 'fs49', 92)" class="i">Threading</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 93)" onmouseover="showTip(event, 'fs50', 93)" class="t">Thread</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 94)" onmouseover="showTip(event, 'fs51', 94)" class="f">Sleep</span> <span class="n">4000</span>
    <span onmouseout="hideTip(event, 'fs39', 95)" onmouseover="showTip(event, 'fs39', 95)" class="i">node</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 96)" onmouseover="showTip(event, 'fs53', 96)" class="f">Disconnect</span>()
    
<span class="c">//let sendAsync() =</span>
<span class="c">//    async {</span>
<span class="c">//        do! node.SendMessageAsync(new InvPayload(transaction)) </span>
<span class="c">//            |&gt; Async.AwaitTask</span>
<span class="c">//        do! Async.Sleep 1000</span>
<span class="c">//        do! node.SendMessageAsync(new TxPayload(transaction)) </span>
<span class="c">//            |&gt; Async.AwaitTask</span>
<span class="c">//        do! Async.Sleep 4000</span>
<span class="c">//        node.DisconnectAsync()</span>
<span class="c">//    }</span>
<span class="c">//sendAsync() |&gt; Async.Start</span>
<span class="c">//</span>

<span onmouseout="hideTip(event, 'fs54', 97)" onmouseover="showTip(event, 'fs54', 97)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 98)" onmouseover="showTip(event, 'fs55', 98)" class="f">WriteLine</span> <span class="s">&quot;Press any key&quot;</span>
<span onmouseout="hideTip(event, 'fs54', 99)" onmouseover="showTip(event, 'fs54', 99)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 100)" onmouseover="showTip(event, 'fs56', 100)" class="f">ReadLine</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 101)" onmouseover="showTip(event, 'fs57', 101)" class="f">ignore</span>
<span class="n">0</span>

<span class="c">// Some resources:</span>
<span class="c">// Open book: https://programmingblockchain.gitbooks.io/programmingblockchain/content/</span>
<span class="c">// A video: https://www.youtube.com/watch?v=X4ZwRWIF49w</span>
<span class="c">// Article: https://www.codeproject.com/articles/835098/nbitcoin-build-them-all</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace NBitcoin</div>
<div class="tip" id="fs3">namespace NBitcoin.Protocol</div>
<div class="tip" id="fs4">val network : Network<br /><br />Full name: Script.network</div>
<div class="tip" id="fs5">type Network =<br />&#160;&#160;val _MagicBytes : byte[]<br />&#160;&#160;member AlertPubKey : PubKey<br />&#160;&#160;member Consensus : Consensus<br />&#160;&#160;member CreateAssetId : base58:string -&gt; BitcoinAssetId<br />&#160;&#160;member CreateBase58Data : type:Base58Type * base58:string -&gt; Base58Data<br />&#160;&#160;member CreateBitcoinAddress : base58:string -&gt; BitcoinAddress + 1 overload<br />&#160;&#160;member CreateBitcoinExtKey : key:ExtKey -&gt; BitcoinExtKey + 1 overload<br />&#160;&#160;member CreateBitcoinExtPubKey : pubkey:ExtPubKey -&gt; BitcoinExtPubKey<br />&#160;&#160;member CreateBitcoinScriptAddress : base58:string -&gt; BitcoinScriptAddress<br />&#160;&#160;member CreateBitcoinSecret : base58:string -&gt; BitcoinSecret + 1 overload<br />&#160;&#160;...<br /><br />Full name: NBitcoin.Network</div>
<div class="tip" id="fs6">property Network.Main: Network</div>
<div class="tip" id="fs7">val newWallet : unit -&gt; Key<br /><br />Full name: Script.newWallet</div>
<div class="tip" id="fs8">Multiple items<br />type Key =<br />&#160;&#160;new : unit -&gt; Key + 2 overloads<br />&#160;&#160;member Derivate : cc:byte[] * nChild:uint32 * ccChild:byte[] -&gt; Key<br />&#160;&#160;member GetBitcoinSecret : network:Network -&gt; BitcoinSecret<br />&#160;&#160;member GetEncryptedBitcoinSecret : password:string * network:Network -&gt; BitcoinEncryptedSecretNoEC<br />&#160;&#160;member GetWif : network:Network -&gt; BitcoinSecret<br />&#160;&#160;member IsCompressed : bool with get, set<br />&#160;&#160;member PubKey : PubKey<br />&#160;&#160;member ReadWrite : stream:BitcoinStream -&gt; unit<br />&#160;&#160;member ScriptPubKey : Script<br />&#160;&#160;member Sign : hash:uint256 -&gt; ECDSASignature + 1 overload<br />&#160;&#160;...<br /><br />Full name: NBitcoin.Key<br /><br />--------------------<br />Key() : unit<br />Key(fCompressedIn: bool) : unit<br />Key(data: byte [], ?count: int, ?fCompressedIn: bool) : unit</div>
<div class="tip" id="fs9">val alice : BitcoinSecret<br /><br />Full name: Script.alice</div>
<div class="tip" id="fs10">Multiple items<br />type BitcoinSecret =<br />&#160;&#160;inherit Base58Data<br />&#160;&#160;new : key:Key * network:Network -&gt; BitcoinSecret + 1 overload<br />&#160;&#160;member Copy : compressed:Nullable&lt;bool&gt; -&gt; BitcoinSecret<br />&#160;&#160;member Encrypt : password:string -&gt; BitcoinEncryptedSecret<br />&#160;&#160;member GetAddress : unit -&gt; BitcoinPubKeyAddress<br />&#160;&#160;member IsCompressed : bool<br />&#160;&#160;member PrivateKey : Key<br />&#160;&#160;member PubKey : PubKey<br />&#160;&#160;member PubKeyHash : KeyId<br />&#160;&#160;member ScriptPubKey : Script<br />&#160;&#160;member Type : Base58Type<br /><br />Full name: NBitcoin.BitcoinSecret<br /><br />--------------------<br />BitcoinSecret(key: Key, network: Network) : unit<br />BitcoinSecret(base58: string, ?expectedAddress: Network) : unit</div>
<div class="tip" id="fs11">val bob : BitcoinSecret<br /><br />Full name: Script.bob</div>
<div class="tip" id="fs12">val tuomas : BitcoinSecret<br /><br />Full name: Script.tuomas</div>
<div class="tip" id="fs13">val bobPublic : BitcoinAddress<br /><br />Full name: Script.bobPublic</div>
<div class="tip" id="fs14">Multiple items<br />type BitcoinAddress =<br />&#160;&#160;inherit Base58Data<br />&#160;&#160;new : base58:string * ?expectedNetwork:Network -&gt; BitcoinAddress + 2 overloads<br />&#160;&#160;member GetScriptAddress : unit -&gt; BitcoinScriptAddress<br />&#160;&#160;member ScriptPubKey : Script<br />&#160;&#160;member ToColoredAddress : unit -&gt; BitcoinColoredAddress<br />&#160;&#160;static member Create : base58:string * ?expectedNetwork:Network -&gt; BitcoinAddress<br /><br />Full name: NBitcoin.BitcoinAddress<br /><br />--------------------<br />BitcoinAddress(base58: string, ?expectedNetwork: Network) : unit<br />BitcoinAddress(id: TxDestination, network: Network) : unit<br />BitcoinAddress(rawBytes: byte [], network: Network) : unit</div>
<div class="tip" id="fs15">BitcoinAddress.Create(base58: string, ?expectedNetwork: Network) : BitcoinAddress</div>
<div class="tip" id="fs16">val builder : TransactionBuilder<br /><br />Full name: Script.builder</div>
<div class="tip" id="fs17">Multiple items<br />type TransactionBuilder =<br />&#160;&#160;new : unit -&gt; TransactionBuilder + 1 overload<br />&#160;&#160;member AddCoins : [&lt;ParamArray&gt;] coins:ICoin[] -&gt; TransactionBuilder + 2 overloads<br />&#160;&#160;member AddKeys : [&lt;ParamArray&gt;] keys:ISecret[] -&gt; TransactionBuilder + 1 overload<br />&#160;&#160;member AddKnownRedeems : [&lt;ParamArray&gt;] knownRedeems:Script[] -&gt; TransactionBuilder<br />&#160;&#160;member AddKnownSignature : pubKey:PubKey * signature:TransactionSignature -&gt; TransactionBuilder + 1 overload<br />&#160;&#160;member BuildTransaction : sign:bool -&gt; Transaction + 1 overload<br />&#160;&#160;member Check : tx:Transaction -&gt; TransactionPolicyError[] + 2 overloads<br />&#160;&#160;member CoinFinder : Func&lt;OutPoint, ICoin&gt; with get, set<br />&#160;&#160;member CoinSelector : ICoinSelector with get, set<br />&#160;&#160;member CombineSignatures : [&lt;ParamArray&gt;] transactions:Transaction[] -&gt; Transaction<br />&#160;&#160;...<br /><br />Full name: NBitcoin.TransactionBuilder<br /><br />--------------------<br />TransactionBuilder() : unit<br />TransactionBuilder(seed: int) : unit</div>
<div class="tip" id="fs18">val transaction : Transaction<br /><br />Full name: Script.transaction</div>
<div class="tip" id="fs19">val sum : Money</div>
<div class="tip" id="fs20">Multiple items<br />type Money =<br />&#160;&#160;new : satoshis:int -&gt; Money + 4 overloads<br />&#160;&#160;member Abs : unit -&gt; Money<br />&#160;&#160;member Almost : amount:Money * dust:Money -&gt; bool + 1 overload<br />&#160;&#160;member CompareTo : other:Money -&gt; int + 1 overload<br />&#160;&#160;member Equals : other:Money -&gt; bool + 1 overload<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Satoshi : int64 with get, set<br />&#160;&#160;member Split : parts:int -&gt; IEnumerable&lt;Money&gt;<br />&#160;&#160;member ToDecimal : unit:MoneyUnit -&gt; decimal<br />&#160;&#160;member ToString : unit -&gt; string + 1 overload<br />&#160;&#160;...<br /><br />Full name: NBitcoin.Money<br /><br />--------------------<br />Money(satoshis: int) : unit<br />Money(satoshis: uint32) : unit<br />Money(satoshis: int64) : unit<br />Money(satoshis: uint64) : unit<br />Money(amount: decimal, unit: MoneyUnit) : unit</div>
<div class="tip" id="fs21">Money.Coins(coins: decimal) : Money</div>
<div class="tip" id="fs22">val fee : Money</div>
<div class="tip" id="fs23">val coin : ICoin</div>
<div class="tip" id="fs24">Multiple items<br />type Coin =<br />&#160;&#160;new : unit -&gt; Coin + 5 overloads<br />&#160;&#160;member Amount : Money with get, set<br />&#160;&#160;member CanGetScriptCode : bool<br />&#160;&#160;member GetHashVersion : unit -&gt; HashVersion<br />&#160;&#160;member GetScriptCode : unit -&gt; Script<br />&#160;&#160;member Outpoint : OutPoint with get, set<br />&#160;&#160;member ScriptPubKey : Script with get, set<br />&#160;&#160;member ToColoredCoin : asset:AssetMoney -&gt; ColoredCoin + 2 overloads<br />&#160;&#160;member ToScriptCoin : redeemScript:Script -&gt; ScriptCoin<br />&#160;&#160;member TxOut : TxOut with get, set<br /><br />Full name: NBitcoin.Coin<br /><br />--------------------<br />Coin() : unit<br />Coin(txOut: IndexedTxOut) : unit<br />Coin(fromOutpoint: OutPoint, fromTxOut: TxOut) : unit<br />Coin(fromTx: Transaction, fromOutputIndex: uint32) : unit<br />Coin(fromTx: Transaction, fromOutput: TxOut) : unit<br />Coin(fromTxHash: uint256, fromOutputIndex: uint32, amount: Money, scriptPubKey: Script) : unit</div>
<div class="tip" id="fs25">Multiple items<br />type OutPoint =<br />&#160;&#160;new : unit -&gt; OutPoint + 5 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Hash : uint256 with get, set<br />&#160;&#160;member IsNull : bool<br />&#160;&#160;member N : uint32 with get, set<br />&#160;&#160;member ReadWrite : stream:BitcoinStream -&gt; unit<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;static member Parse : str:string -&gt; OutPoint<br />&#160;&#160;static member TryParse : str:string * result:OutPoint -&gt; bool<br /><br />Full name: NBitcoin.OutPoint<br /><br />--------------------<br />OutPoint() : unit<br />OutPoint(outpoint: OutPoint) : unit<br />OutPoint(hashIn: uint256, nIn: uint32) : unit<br />OutPoint(hashIn: uint256, nIn: int) : unit<br />OutPoint(tx: Transaction, i: uint32) : unit<br />OutPoint(tx: Transaction, i: int) : unit</div>
<div class="tip" id="fs26">Multiple items<br />type uint256 =<br />&#160;&#160;new : unit -&gt; uint256 + 5 overloads<br />&#160;&#160;member AsBitcoinSerializable : unit -&gt; MutableUint256<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetByte : index:int -&gt; byte<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetLow32 : unit -&gt; uint32<br />&#160;&#160;member GetLow64 : unit -&gt; uint64<br />&#160;&#160;member GetSerializeSize : ?nType:int * ?protocolVersion:ProtocolVersion -&gt; int<br />&#160;&#160;member Size : int<br />&#160;&#160;member ToBytes : ?lendian:bool -&gt; byte[]<br />&#160;&#160;...<br />&#160;&#160;nested type MutableUint256<br /><br />Full name: NBitcoin.uint256<br /><br />--------------------<br />uint256() : unit<br />uint256(b: uint256) : unit<br />uint256(b: uint64) : unit<br />uint256(str: string) : unit<br />uint256(vch: byte []) : unit<br />uint256(vch: byte [], ?lendian: bool) : unit</div>
<div class="tip" id="fs27">Multiple items<br />type TxOut =<br />&#160;&#160;new : unit -&gt; TxOut + 2 overloads<br />&#160;&#160;member GetDustThreshold : minRelayTxFee:FeeRate -&gt; Money<br />&#160;&#160;member IsDust : minRelayTxFee:FeeRate -&gt; bool<br />&#160;&#160;member IsTo : destination:IDestination -&gt; bool<br />&#160;&#160;member ReadWrite : stream:BitcoinStream -&gt; unit<br />&#160;&#160;member ScriptPubKey : Script with get, set<br />&#160;&#160;member Value : Money with get, set<br />&#160;&#160;static member Parse : hex:string -&gt; TxOut<br /><br />Full name: NBitcoin.TxOut<br /><br />--------------------<br />TxOut() : unit<br />TxOut(value: Money, destination: IDestination) : unit<br />TxOut(value: Money, scriptPubKey: Script) : unit</div>
<div class="tip" id="fs28">property BitcoinSecret.ScriptPubKey: Script</div>
<div class="tip" id="fs29">type ICoin =<br />&#160;&#160;member Amount : IMoney<br />&#160;&#160;member CanGetScriptCode : bool<br />&#160;&#160;member GetHashVersion : unit -&gt; HashVersion<br />&#160;&#160;member GetScriptCode : unit -&gt; Script<br />&#160;&#160;member Outpoint : OutPoint<br />&#160;&#160;member TxOut : TxOut<br /><br />Full name: NBitcoin.ICoin</div>
<div class="tip" id="fs30">BitcoinSecret.GetAddress() : BitcoinPubKeyAddress</div>
<div class="tip" id="fs31">val ( check if transaction is valid ) : unit -&gt; uint256 * bool * Policy.TransactionPolicyError []<br /><br />Full name: Script.( check if transaction is valid )</div>
<div class="tip" id="fs32">val hash : uint256</div>
<div class="tip" id="fs33">Transaction.GetHash() : uint256</div>
<div class="tip" id="fs34">val isOk : bool</div>
<div class="tip" id="fs35">val errs : Policy.TransactionPolicyError []</div>
<div class="tip" id="fs36">TransactionBuilder.Verify(tx: Transaction) : bool<br />TransactionBuilder.Verify(tx: Transaction, errors: byref&lt;Policy.TransactionPolicyError []&gt;) : bool<br />TransactionBuilder.Verify(tx: Transaction, expectedFeeRate: FeeRate) : bool<br />TransactionBuilder.Verify(tx: Transaction, expectedFees: Money) : bool<br />TransactionBuilder.Verify(tx: Transaction, expectedFeeRate: FeeRate, errors: byref&lt;Policy.TransactionPolicyError []&gt;) : bool<br />TransactionBuilder.Verify(tx: Transaction, expectedFees: Money, errors: byref&lt;Policy.TransactionPolicyError []&gt;) : bool</div>
<div class="tip" id="fs37">val transactionToBroadcast : string<br /><br />Full name: Script.transactionToBroadcast</div>
<div class="tip" id="fs38">Transaction.ToHex() : string</div>
<div class="tip" id="fs39">val node : Node<br /><br />Full name: Script.node<br /><em><br /><br />&#160;Connect to public Bitcoin network:</em></div>
<div class="tip" id="fs40">val n : Node</div>
<div class="tip" id="fs41">type Node =<br />&#160;&#160;member ActualTransactionOptions : TransactionOptions<br />&#160;&#160;member AddSupportedOptions : inventoryType:InventoryType -&gt; InventoryType<br />&#160;&#160;member Advertize : bool with get, set<br />&#160;&#160;member Behaviors : NodeBehaviorsCollection<br />&#160;&#160;member ConnectedAt : DateTimeOffset with get, set<br />&#160;&#160;member Counter : PerformanceCounter<br />&#160;&#160;member CreateListener : unit -&gt; NodeListener<br />&#160;&#160;member Disconnect : unit -&gt; unit + 1 overload<br />&#160;&#160;member DisconnectAsync : unit -&gt; unit + 1 overload<br />&#160;&#160;member DisconnectReason : NodeDisconnectReason with get, set<br />&#160;&#160;...<br />&#160;&#160;nested type NodeConnection<br /><br />Full name: NBitcoin.Protocol.Node</div>
<div class="tip" id="fs42">Node.Connect(network: Network, endpoint: Net.IPEndPoint, parameters: NodeConnectionParameters) : Node<br />Node.Connect(network: Network, endpoint: NetworkAddress, parameters: NodeConnectionParameters) : Node<br />Node.Connect(network: Network, endpoint: string, parameters: NodeConnectionParameters) : Node<br />Node.Connect(network: Network, ?parameters: NodeConnectionParameters, ?connectedEndpoints: Net.IPEndPoint [], ?getGroup: Func&lt;Net.IPEndPoint,byte []&gt;) : Node<br />Node.Connect(network: Network, addrman: AddressManager, ?parameters: NodeConnectionParameters, ?connectedEndpoints: Net.IPEndPoint []) : Node<br />Node.Connect(network: Network, endpoint: Net.IPEndPoint, ?myVersion: ProtocolVersion, ?isRelay: bool, ?cancellation: Threading.CancellationToken) : Node<br />Node.Connect(network: Network, endpoint: string, ?myVersion: ProtocolVersion, ?isRelay: bool, ?cancellation: Threading.CancellationToken) : Node</div>
<div class="tip" id="fs43">Node.VersionHandshake(?cancellationToken: Threading.CancellationToken) : unit<br />Node.VersionHandshake(requirements: NodeRequirement, ?cancellationToken: Threading.CancellationToken) : unit</div>
<div class="tip" id="fs44">val getListener : unit -&gt; NodeListener<br /><br />Full name: Script.getListener</div>
<div class="tip" id="fs45">Node.CreateListener() : NodeListener</div>
<div class="tip" id="fs46">val sendSync : unit -&gt; unit<br /><br />Full name: Script.sendSync</div>
<div class="tip" id="fs47">Node.SendMessage(payload: Payload, ?cancellation: Threading.CancellationToken) : unit</div>
<div class="tip" id="fs48">Multiple items<br />type InvPayload =<br />&#160;&#160;inherit Payload<br />&#160;&#160;new : unit -&gt; InvPayload + 4 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator&lt;InventoryVector&gt;<br />&#160;&#160;member Inventory : List&lt;InventoryVector&gt;<br />&#160;&#160;member ReadWriteCore : stream:BitcoinStream -&gt; unit<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: NBitcoin.Protocol.InvPayload<br /><br />--------------------<br />InvPayload() : unit<br />InvPayload([&lt;ParamArray&gt;] transactions: Transaction []) : unit<br />InvPayload([&lt;ParamArray&gt;] blocks: Block []) : unit<br />InvPayload([&lt;ParamArray&gt;] invs: InventoryVector []) : unit<br />InvPayload(type: InventoryType, [&lt;ParamArray&gt;] hashes: uint256 []) : unit</div>
<div class="tip" id="fs49">namespace System.Threading</div>
<div class="tip" id="fs50">Multiple items<br />type Thread =<br />&#160;&#160;inherit CriticalFinalizerObject<br />&#160;&#160;new : start:ThreadStart -&gt; Thread + 3 overloads<br />&#160;&#160;member Abort : unit -&gt; unit + 1 overload<br />&#160;&#160;member ApartmentState : ApartmentState with get, set<br />&#160;&#160;member CurrentCulture : CultureInfo with get, set<br />&#160;&#160;member CurrentUICulture : CultureInfo with get, set<br />&#160;&#160;member DisableComObjectEagerCleanup : unit -&gt; unit<br />&#160;&#160;member ExecutionContext : ExecutionContext<br />&#160;&#160;member GetApartmentState : unit -&gt; ApartmentState<br />&#160;&#160;member GetCompressedStack : unit -&gt; CompressedStack<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.Threading.Thread<br /><br />--------------------<br />Threading.Thread(start: Threading.ThreadStart) : unit<br />Threading.Thread(start: Threading.ParameterizedThreadStart) : unit<br />Threading.Thread(start: Threading.ThreadStart, maxStackSize: int) : unit<br />Threading.Thread(start: Threading.ParameterizedThreadStart, maxStackSize: int) : unit</div>
<div class="tip" id="fs51">Threading.Thread.Sleep(timeout: TimeSpan) : unit<br />Threading.Thread.Sleep(millisecondsTimeout: int) : unit</div>
<div class="tip" id="fs52">Multiple items<br />type TxPayload =<br />&#160;&#160;inherit BitcoinSerializablePayload&lt;Transaction&gt;<br />&#160;&#160;new : unit -&gt; TxPayload + 1 overload<br /><br />Full name: NBitcoin.Protocol.TxPayload<br /><br />--------------------<br />TxPayload() : unit<br />TxPayload(transaction: Transaction) : unit</div>
<div class="tip" id="fs53">Node.Disconnect() : unit<br />Node.Disconnect(reason: string, ?exception: exn) : unit</div>
<div class="tip" id="fs54">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs55">Console.WriteLine() : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: obj) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: decimal) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs56">Console.ReadLine() : string</div>
<div class="tip" id="fs57">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>

