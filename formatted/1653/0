<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// Let&#39;s say that creating FsiEvaluator() fails with mysterious</span>
<span class="c">// error from the F# compiler service. We can catch the exception:</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">e</span> <span class="o">=</span> 
  <span class="k">try</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">FSharp</span><span class="o">.</span><span class="i">Literate</span><span class="o">.</span><span class="i">FsiEvaluator</span>(); <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">failwith</span> <span class="s">&quot;!&quot;</span> <span class="k">with</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">e</span>

<span class="c">// Get the InnerException, which is the actual error from the compiler</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">ae</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 7)" onmouseover="showTip(event, 'fs1', 7)" class="i">e</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">InnerException</span>

<span class="c">// And get the values of the private fields!</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">opts</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">Reflection</span><span class="o">.</span><span class="i">BindingFlags</span><span class="o">.</span><span class="i">NonPublic</span><span class="o">|||</span><span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">Reflection</span><span class="o">.</span><span class="i">BindingFlags</span><span class="o">.</span><span class="i">Instance</span>
[ <span class="k">for</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="i">p</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs5', 13)" onmouseover="showTip(event, 'fs5', 13)" class="i">ae</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="f">GetType</span>()<span class="o">.</span><span class="f">GetFields</span>(<span onmouseout="hideTip(event, 'fs7', 15)" onmouseover="showTip(event, 'fs7', 15)" class="i">opts</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 16)" onmouseover="showTip(event, 'fs9', 16)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">Name</span>, <span onmouseout="hideTip(event, 'fs9', 18)" onmouseover="showTip(event, 'fs9', 18)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="f">GetValue</span>(<span onmouseout="hideTip(event, 'fs5', 20)" onmouseover="showTip(event, 'fs5', 20)" class="i">ae</span>) ]

<span class="c">// This might give you some more useful information about the</span>
<span class="c">// error (e.g. for `FileNameNotResolved`, you actually get the file name..)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val e : exn<br /><br />Full name: Script.e</div>
<div class="tip" id="fs2">namespace Microsoft.FSharp</div>
<div class="tip" id="fs3">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs4">val e : exn</div>
<div class="tip" id="fs5">val ae : exn<br /><br />Full name: Script.ae</div>
<div class="tip" id="fs6">property System.Exception.InnerException: exn</div>
<div class="tip" id="fs7">val opts : System.Reflection.BindingFlags<br /><br />Full name: Script.opts</div>
<div class="tip" id="fs8">namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs9">val p : System.Reflection.FieldInfo</div>
<div class="tip" id="fs10">System.Exception.GetType() : System.Type</div>
<div class="tip" id="fs11">property System.Reflection.MemberInfo.Name: string</div>
<div class="tip" id="fs12">System.Reflection.FieldInfo.GetValue(obj: obj) : obj</div>

