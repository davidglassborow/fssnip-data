<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
<span class="l">154: </span>
<span class="l">155: </span>
<span class="l">156: </span>
<span class="l">157: </span>
<span class="l">158: </span>
<span class="l">159: </span>
<span class="l">160: </span>
<span class="l">161: </span>
<span class="l">162: </span>
<span class="l">163: </span>
<span class="l">164: </span>
<span class="l">165: </span>
<span class="l">166: </span>
<span class="l">167: </span>
<span class="l">168: </span>
<span class="l">169: </span>
<span class="l">170: </span>
<span class="l">171: </span>
<span class="l">172: </span>
<span class="l">173: </span>
<span class="l">174: </span>
<span class="l">175: </span>
<span class="l">176: </span>
<span class="l">177: </span>
<span class="l">178: </span>
<span class="l">179: </span>
<span class="l">180: </span>
<span class="l">181: </span>
<span class="l">182: </span>
<span class="l">183: </span>
<span class="l">184: </span>
<span class="l">185: </span>
<span class="l">186: </span>
<span class="l">187: </span>
<span class="l">188: </span>
<span class="l">189: </span>
<span class="l">190: </span>
<span class="l">191: </span>
<span class="l">192: </span>
<span class="l">193: </span>
<span class="l">194: </span>
<span class="l">195: </span>
<span class="l">196: </span>
<span class="l">197: </span>
<span class="l">198: </span>
<span class="l">199: </span>
<span class="l">200: </span>
<span class="l">201: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Text</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="t">sb</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="t">StringBuilder</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="f">mapPipe</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="f">f</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="f">map</span> <span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="f">f</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="f">reduce</span> (<span class="o">&gt;</span><span class="o">&gt;</span>)

<span class="c">/// appends count number of spaces</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="f">spaces</span> <span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="i">count</span> (<span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="i">sb</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="t">sb</span>) <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="i">spaces</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="t">String</span>(<span class="s">&#39; &#39;</span>,<span onmouseout="hideTip(event, 'fs11', 19)" onmouseover="showTip(event, 'fs11', 19)" class="i">count</span>)
    <span onmouseout="hideTip(event, 'fs12', 20)" onmouseover="showTip(event, 'fs12', 20)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="f">Append</span> <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="i">spaces</span>

<span class="c">/// appends any text</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="f">ap</span> (<span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="i">text</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="t">string</span>) (<span onmouseout="hideTip(event, 'fs12', 26)" onmouseover="showTip(event, 'fs12', 26)" class="i">sb</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs12', 27)" onmouseover="showTip(event, 'fs12', 27)" class="t">sb</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 28)" onmouseover="showTip(event, 'fs12', 28)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 29)" onmouseover="showTip(event, 'fs15', 29)" class="f">Append</span> <span onmouseout="hideTip(event, 'fs17', 30)" onmouseover="showTip(event, 'fs17', 30)" class="i">text</span>

<span class="c">/// appends an escaped, quoted string from a string</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="f">str</span> (<span onmouseout="hideTip(event, 'fs17', 32)" onmouseover="showTip(event, 'fs17', 32)" class="i">text</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 33)" onmouseover="showTip(event, 'fs18', 33)" class="t">string</span>) (<span onmouseout="hideTip(event, 'fs12', 34)" onmouseover="showTip(event, 'fs12', 34)" class="i">sb</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs12', 35)" onmouseover="showTip(event, 'fs12', 35)" class="t">sb</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 36)" onmouseover="showTip(event, 'fs12', 36)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 37)" onmouseover="showTip(event, 'fs20', 37)" class="f">AppendFormat</span>(<span class="s">&quot;</span><span class="e">\&quot;</span><span class="s">{0}</span><span class="e">\&quot;</span><span class="s">&quot;</span>, <span onmouseout="hideTip(event, 'fs17', 38)" onmouseover="showTip(event, 'fs17', 38)" class="i">text</span>) <span class="c">//todo : escaping</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 39)" onmouseover="showTip(event, 'fs21', 39)" class="f">space</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 40)" onmouseover="showTip(event, 'fs10', 40)" class="f">spaces</span> <span class="n">1</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 41)" onmouseover="showTip(event, 'fs22', 41)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs11', 42)" onmouseover="showTip(event, 'fs11', 42)" class="i">count</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 43)" onmouseover="showTip(event, 'fs10', 43)" class="f">spaces</span> (<span onmouseout="hideTip(event, 'fs11', 44)" onmouseover="showTip(event, 'fs11', 44)" class="i">count</span><span class="o">*</span><span class="n">4</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 45)" onmouseover="showTip(event, 'fs23', 45)" class="f">api</span> <span onmouseout="hideTip(event, 'fs17', 46)" onmouseover="showTip(event, 'fs17', 46)" class="i">text</span> <span onmouseout="hideTip(event, 'fs24', 47)" onmouseover="showTip(event, 'fs24', 47)" class="i">indentLevel</span>  <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 48)" onmouseover="showTip(event, 'fs22', 48)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs24', 49)" onmouseover="showTip(event, 'fs24', 49)" class="i">indentLevel</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 50)" onmouseover="showTip(event, 'fs16', 50)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs17', 51)" onmouseover="showTip(event, 'fs17', 51)" class="i">text</span>

<span class="c">/// appends a newline character</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 52)" onmouseover="showTip(event, 'fs25', 52)" class="f">newl</span> (<span onmouseout="hideTip(event, 'fs12', 53)" onmouseover="showTip(event, 'fs12', 53)" class="i">sb</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs12', 54)" onmouseover="showTip(event, 'fs12', 54)" class="t">sb</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 55)" onmouseover="showTip(event, 'fs12', 55)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 56)" onmouseover="showTip(event, 'fs26', 56)" class="f">AppendLine</span>() 

<span class="c">/// appends a new line and then the specified indent level</span>
<span class="c">/// this function is not usuallly very useful, though as it</span>
<span class="c">/// takes the additional parameter it can be used in places expecting</span>
<span class="c">/// int -&gt; sb  insted of having to write (fun _ -&gt; newl)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 57)" onmouseover="showTip(event, 'fs27', 57)" class="f">newli</span> <span onmouseout="hideTip(event, 'fs24', 58)" onmouseover="showTip(event, 'fs24', 58)" class="i">indentLevel</span> (<span onmouseout="hideTip(event, 'fs12', 59)" onmouseover="showTip(event, 'fs12', 59)" class="i">sb</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs12', 60)" onmouseover="showTip(event, 'fs12', 60)" class="t">sb</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 61)" onmouseover="showTip(event, 'fs12', 61)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 62)" onmouseover="showTip(event, 'fs26', 62)" class="f">AppendLine</span>() <span class="o">|&gt;</span>  <span onmouseout="hideTip(event, 'fs22', 63)" onmouseover="showTip(event, 'fs22', 63)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs24', 64)" onmouseover="showTip(event, 'fs24', 64)" class="i">indentLevel</span> 

<span class="c">/// appends an xml comment at the given indent level</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 65)" onmouseover="showTip(event, 'fs28', 65)" class="f">xmlComment</span> <span onmouseout="hideTip(event, 'fs29', 66)" onmouseover="showTip(event, 'fs29', 66)" class="i">comment</span> <span onmouseout="hideTip(event, 'fs24', 67)" onmouseover="showTip(event, 'fs24', 67)" class="i">indentLevel</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 68)" onmouseover="showTip(event, 'fs22', 68)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs24', 69)" onmouseover="showTip(event, 'fs24', 69)" class="i">indentLevel</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 70)" onmouseover="showTip(event, 'fs16', 70)" class="f">ap</span>(<span onmouseout="hideTip(event, 'fs30', 71)" onmouseover="showTip(event, 'fs30', 71)" class="f">sprintf</span> <span class="s">&quot;///</span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs29', 72)" onmouseover="showTip(event, 'fs29', 72)" class="i">comment</span>) <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 73)" onmouseover="showTip(event, 'fs25', 73)" class="f">newl</span>  

<span class="c">/// wraps text in parenthesis and returns the string</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 74)" onmouseover="showTip(event, 'fs31', 74)" class="f">wrapParens</span> (<span onmouseout="hideTip(event, 'fs17', 75)" onmouseover="showTip(event, 'fs17', 75)" class="i">text</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 76)" onmouseover="showTip(event, 'fs18', 76)" class="t">string</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 77)" onmouseover="showTip(event, 'fs30', 77)" class="f">sprintf</span> <span class="s">&quot;(</span><span class="pf">%s</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs17', 78)" onmouseover="showTip(event, 'fs17', 78)" class="i">text</span>    

<span class="c">/// wraps text in braces and returns the string</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 79)" onmouseover="showTip(event, 'fs32', 79)" class="f">wrapBraces</span> (<span onmouseout="hideTip(event, 'fs17', 80)" onmouseover="showTip(event, 'fs17', 80)" class="i">text</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 81)" onmouseover="showTip(event, 'fs18', 81)" class="t">string</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 82)" onmouseover="showTip(event, 'fs30', 82)" class="f">sprintf</span> <span class="s">&quot;{ </span><span class="pf">%s</span><span class="s"> }&quot;</span> <span onmouseout="hideTip(event, 'fs17', 83)" onmouseover="showTip(event, 'fs17', 83)" class="i">text</span>

<span class="c">/// annotates a parameter in the format &#39;name : type&#39; and returns the string</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 84)" onmouseover="showTip(event, 'fs33', 84)" class="f">annoParam</span> (<span onmouseout="hideTip(event, 'fs34', 85)" onmouseover="showTip(event, 'fs34', 85)" class="i">pName</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 86)" onmouseover="showTip(event, 'fs18', 86)" class="t">string</span>) (<span onmouseout="hideTip(event, 'fs35', 87)" onmouseover="showTip(event, 'fs35', 87)" class="i">pType</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 88)" onmouseover="showTip(event, 'fs18', 88)" class="t">string</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 89)" onmouseover="showTip(event, 'fs30', 89)" class="f">sprintf</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s"> : </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs34', 90)" onmouseover="showTip(event, 'fs34', 90)" class="i">pName</span> <span onmouseout="hideTip(event, 'fs35', 91)" onmouseover="showTip(event, 'fs35', 91)" class="i">pType</span>

<span class="c">/// annotates a parameter in the format &#39;(name : type)&#39; and returns the string</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 92)" onmouseover="showTip(event, 'fs36', 92)" class="f">annoParamParens</span> (<span onmouseout="hideTip(event, 'fs34', 93)" onmouseover="showTip(event, 'fs34', 93)" class="i">pName</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 94)" onmouseover="showTip(event, 'fs18', 94)" class="t">string</span>) (<span onmouseout="hideTip(event, 'fs35', 95)" onmouseover="showTip(event, 'fs35', 95)" class="i">pType</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 96)" onmouseover="showTip(event, 'fs18', 96)" class="t">string</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 97)" onmouseover="showTip(event, 'fs30', 97)" class="f">sprintf</span> <span class="s">&quot;(</span><span class="pf">%s</span><span class="s"> : </span><span class="pf">%s</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs34', 98)" onmouseover="showTip(event, 'fs34', 98)" class="i">pName</span> <span onmouseout="hideTip(event, 'fs35', 99)" onmouseover="showTip(event, 'fs35', 99)" class="i">pType</span>

<span class="c">/// joins a sequence of strings with the given seperator</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 100)" onmouseover="showTip(event, 'fs37', 100)" class="f">join</span> (<span onmouseout="hideTip(event, 'fs38', 101)" onmouseover="showTip(event, 'fs38', 101)" class="i">seperator</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 102)" onmouseover="showTip(event, 'fs18', 102)" class="t">string</span>) (<span onmouseout="hideTip(event, 'fs39', 103)" onmouseover="showTip(event, 'fs39', 103)" class="i">values</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs40', 104)" onmouseover="showTip(event, 'fs40', 104)" class="t">seq</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs18', 105)" onmouseover="showTip(event, 'fs18', 105)" class="t">string</span><span class="o">&gt;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 106)" onmouseover="showTip(event, 'fs14', 106)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 107)" onmouseover="showTip(event, 'fs41', 107)" class="f">Join</span>(<span onmouseout="hideTip(event, 'fs38', 108)" onmouseover="showTip(event, 'fs38', 108)" class="i">seperator</span>,<span onmouseout="hideTip(event, 'fs39', 109)" onmouseover="showTip(event, 'fs39', 109)" class="i">values</span>)

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs42', 110)" onmouseover="showTip(event, 'fs42', 110)" class="t">MemberType</span> <span class="o">=</span>
     | <span onmouseout="hideTip(event, 'fs43', 111)" onmouseover="showTip(event, 'fs43', 111)" class="p">Instance</span> <span class="k">of</span> <span class="i">identifier</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs18', 112)" onmouseover="showTip(event, 'fs18', 112)" class="t">string</span> 
     | <span onmouseout="hideTip(event, 'fs44', 113)" onmouseover="showTip(event, 'fs44', 113)" class="p">Static</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs45', 114)" onmouseover="showTip(event, 'fs45', 114)" class="t">ArgsType</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs46', 115)" onmouseover="showTip(event, 'fs46', 115)" class="p">Partial</span> <span class="k">of</span> (<span onmouseout="hideTip(event, 'fs18', 116)" onmouseover="showTip(event, 'fs18', 116)" class="t">string</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs18', 117)" onmouseover="showTip(event, 'fs18', 117)" class="t">string</span> <span onmouseout="hideTip(event, 'fs47', 118)" onmouseover="showTip(event, 'fs47', 118)" class="t">option</span>) <span onmouseout="hideTip(event, 'fs48', 119)" onmouseover="showTip(event, 'fs48', 119)" class="t">list</span>
    | <span onmouseout="hideTip(event, 'fs49', 120)" onmouseover="showTip(event, 'fs49', 120)" class="p">Tuple</span> <span class="k">of</span> (<span onmouseout="hideTip(event, 'fs18', 121)" onmouseover="showTip(event, 'fs18', 121)" class="t">string</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs18', 122)" onmouseover="showTip(event, 'fs18', 122)" class="t">string</span> <span onmouseout="hideTip(event, 'fs47', 123)" onmouseover="showTip(event, 'fs47', 123)" class="t">option</span>) <span onmouseout="hideTip(event, 'fs48', 124)" onmouseover="showTip(event, 'fs48', 124)" class="t">list</span>
    | <span onmouseout="hideTip(event, 'fs50', 125)" onmouseover="showTip(event, 'fs50', 125)" class="p">NoArgs</span>

<span class="c">/// creates a member defintion at the given indent level</span>
<span class="c">/// memberType - static, or instance with a self identifier value</span>
<span class="c">/// qualifer - any qualifiying string eg private</span>
<span class="c">/// name - the name of the member</span>
<span class="c">/// args - list of argument names and optionally types, denoted as partial style</span>
<span class="c">///        or tuples. </span>
<span class="c">///        eg; Partial [(&quot;x&quot;,Some &quot;int&quot;),(&quot;y&quot;,None)] evaluates as</span>
<span class="c">///              foo (x:int) y = ...</span>
<span class="c">///        and Tuple [(&quot;x&quot;,Some &quot;int&quot;),(&quot;y&quot;,None)] evaluates as</span>
<span class="c">///              foo (x:int,y) = ...</span>
<span class="c">/// impl - a function that will be called with (indentLevel+1) to create</span>
<span class="c">///        the body of the member</span>
<span class="c">/// TODO - generic arguments</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 126)" onmouseover="showTip(event, 'fs51', 126)" class="f">cmember</span> <span onmouseout="hideTip(event, 'fs52', 127)" onmouseover="showTip(event, 'fs52', 127)" class="i">memberType</span> <span onmouseout="hideTip(event, 'fs53', 128)" onmouseover="showTip(event, 'fs53', 128)" class="i">qualifier</span> <span onmouseout="hideTip(event, 'fs54', 129)" onmouseover="showTip(event, 'fs54', 129)" class="i">name</span> <span onmouseout="hideTip(event, 'fs55', 130)" onmouseover="showTip(event, 'fs55', 130)" class="i">args</span> <span onmouseout="hideTip(event, 'fs56', 131)" onmouseover="showTip(event, 'fs56', 131)" class="f">impl</span> <span onmouseout="hideTip(event, 'fs24', 132)" onmouseover="showTip(event, 'fs24', 132)" class="i">indentLevel</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 133)" onmouseover="showTip(event, 'fs57', 133)" class="i">stat</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs52', 134)" onmouseover="showTip(event, 'fs52', 134)" class="i">memberType</span> <span class="o">|&gt;</span> <span class="k">function</span> <span onmouseout="hideTip(event, 'fs43', 135)" onmouseover="showTip(event, 'fs43', 135)" class="p">Instance</span> _ <span class="k">-&gt;</span> <span class="s">&quot;&quot;</span> | _ <span class="k">-&gt;</span> <span class="s">&quot;static&quot;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 136)" onmouseover="showTip(event, 'fs58', 136)" class="i">ident</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs52', 137)" onmouseover="showTip(event, 'fs52', 137)" class="i">memberType</span> <span class="o">|&gt;</span> <span class="k">function</span> <span onmouseout="hideTip(event, 'fs43', 138)" onmouseover="showTip(event, 'fs43', 138)" class="p">Instance</span> <span onmouseout="hideTip(event, 'fs59', 139)" onmouseover="showTip(event, 'fs59', 139)" class="i">id</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs59', 140)" onmouseover="showTip(event, 'fs59', 140)" class="i">id</span> | _ <span class="k">-&gt;</span> <span class="s">&quot;&quot;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 141)" onmouseover="showTip(event, 'fs60', 141)" class="i">signature</span> <span class="o">=</span> 
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs55', 142)" onmouseover="showTip(event, 'fs55', 142)" class="i">args</span> <span class="k">with</span> 
        | <span onmouseout="hideTip(event, 'fs46', 143)" onmouseover="showTip(event, 'fs46', 143)" class="p">Partial</span> <span onmouseout="hideTip(event, 'fs61', 144)" onmouseover="showTip(event, 'fs61', 144)" class="i">args</span> <span class="k">-&gt;</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs62', 145)" onmouseover="showTip(event, 'fs62', 145)" class="f">cp</span> <span class="o">=</span> <span class="k">function</span> <span onmouseout="hideTip(event, 'fs63', 146)" onmouseover="showTip(event, 'fs63', 146)" class="i">n</span>, <span onmouseout="hideTip(event, 'fs64', 147)" onmouseover="showTip(event, 'fs64', 147)" class="p">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs63', 148)" onmouseover="showTip(event, 'fs63', 148)" class="i">n</span> | <span onmouseout="hideTip(event, 'fs63', 149)" onmouseover="showTip(event, 'fs63', 149)" class="i">n</span>, <span onmouseout="hideTip(event, 'fs65', 150)" onmouseover="showTip(event, 'fs65', 150)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs66', 151)" onmouseover="showTip(event, 'fs66', 151)" class="i">t</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs36', 152)" onmouseover="showTip(event, 'fs36', 152)" class="f">annoParamParens</span> <span onmouseout="hideTip(event, 'fs63', 153)" onmouseover="showTip(event, 'fs63', 153)" class="i">n</span> <span onmouseout="hideTip(event, 'fs66', 154)" onmouseover="showTip(event, 'fs66', 154)" class="i">t</span> 
            <span onmouseout="hideTip(event, 'fs37', 155)" onmouseover="showTip(event, 'fs37', 155)" class="f">join</span> <span class="s">&quot; &quot;</span> (<span onmouseout="hideTip(event, 'fs7', 156)" onmouseover="showTip(event, 'fs7', 156)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 157)" onmouseover="showTip(event, 'fs8', 157)" class="f">map</span> <span onmouseout="hideTip(event, 'fs62', 158)" onmouseover="showTip(event, 'fs62', 158)" class="f">cp</span> <span onmouseout="hideTip(event, 'fs61', 159)" onmouseover="showTip(event, 'fs61', 159)" class="i">args</span>)
        | <span onmouseout="hideTip(event, 'fs49', 160)" onmouseover="showTip(event, 'fs49', 160)" class="p">Tuple</span> <span onmouseout="hideTip(event, 'fs61', 161)" onmouseover="showTip(event, 'fs61', 161)" class="i">args</span> <span class="k">-&gt;</span> 
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs62', 162)" onmouseover="showTip(event, 'fs62', 162)" class="f">cp</span> <span class="o">=</span> <span class="k">function</span> <span onmouseout="hideTip(event, 'fs63', 163)" onmouseover="showTip(event, 'fs63', 163)" class="i">n</span>, <span onmouseout="hideTip(event, 'fs64', 164)" onmouseover="showTip(event, 'fs64', 164)" class="p">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs63', 165)" onmouseover="showTip(event, 'fs63', 165)" class="i">n</span> | <span onmouseout="hideTip(event, 'fs63', 166)" onmouseover="showTip(event, 'fs63', 166)" class="i">n</span>, <span onmouseout="hideTip(event, 'fs65', 167)" onmouseover="showTip(event, 'fs65', 167)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs66', 168)" onmouseover="showTip(event, 'fs66', 168)" class="i">t</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs33', 169)" onmouseover="showTip(event, 'fs33', 169)" class="f">annoParam</span> <span onmouseout="hideTip(event, 'fs63', 170)" onmouseover="showTip(event, 'fs63', 170)" class="i">n</span> <span onmouseout="hideTip(event, 'fs66', 171)" onmouseover="showTip(event, 'fs66', 171)" class="i">t</span>             
            <span onmouseout="hideTip(event, 'fs31', 172)" onmouseover="showTip(event, 'fs31', 172)" class="f">wrapParens</span> (<span onmouseout="hideTip(event, 'fs37', 173)" onmouseover="showTip(event, 'fs37', 173)" class="f">join</span> <span class="s">&quot;, &quot;</span> (<span onmouseout="hideTip(event, 'fs7', 174)" onmouseover="showTip(event, 'fs7', 174)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 175)" onmouseover="showTip(event, 'fs8', 175)" class="f">map</span> <span onmouseout="hideTip(event, 'fs62', 176)" onmouseover="showTip(event, 'fs62', 176)" class="f">cp</span> <span onmouseout="hideTip(event, 'fs61', 177)" onmouseover="showTip(event, 'fs61', 177)" class="i">args</span>))
        | <span onmouseout="hideTip(event, 'fs50', 178)" onmouseover="showTip(event, 'fs50', 178)" class="p">NoArgs</span> <span class="k">-&gt;</span><span class="s">&quot;()&quot;</span> 
    <span onmouseout="hideTip(event, 'fs22', 179)" onmouseover="showTip(event, 'fs22', 179)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs24', 180)" onmouseover="showTip(event, 'fs24', 180)" class="i">indentLevel</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 181)" onmouseover="showTip(event, 'fs16', 181)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs57', 182)" onmouseover="showTip(event, 'fs57', 182)" class="i">stat</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 183)" onmouseover="showTip(event, 'fs16', 183)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs53', 184)" onmouseover="showTip(event, 'fs53', 184)" class="i">qualifier</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 185)" onmouseover="showTip(event, 'fs21', 185)" class="f">space</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 186)" onmouseover="showTip(event, 'fs16', 186)" class="f">ap</span> <span class="s">&quot;member &quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 187)" onmouseover="showTip(event, 'fs16', 187)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs58', 188)" onmouseover="showTip(event, 'fs58', 188)" class="i">ident</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 189)" onmouseover="showTip(event, 'fs16', 189)" class="f">ap</span> <span class="s">&quot;.&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 190)" onmouseover="showTip(event, 'fs16', 190)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs54', 191)" onmouseover="showTip(event, 'fs54', 191)" class="i">name</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 192)" onmouseover="showTip(event, 'fs16', 192)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs60', 193)" onmouseover="showTip(event, 'fs60', 193)" class="i">signature</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 194)" onmouseover="showTip(event, 'fs16', 194)" class="f">ap</span> <span class="s">&quot; = &quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 195)" onmouseover="showTip(event, 'fs25', 195)" class="f">newl</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs56', 196)" onmouseover="showTip(event, 'fs56', 196)" class="f">impl</span> (<span onmouseout="hideTip(event, 'fs24', 197)" onmouseover="showTip(event, 'fs24', 197)" class="i">indentLevel</span> <span class="o">+</span> <span class="n">1</span>))

<span class="c">/// appends &quot;with..&quot; at the indent level then calls the impl function with</span>
<span class="c">/// indentLevel+1 (this function should be formed from a composition of </span>
<span class="c">/// cmember, cinterface etc)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs67', 198)" onmouseover="showTip(event, 'fs67', 198)" class="f">cwithMembers</span> <span onmouseout="hideTip(event, 'fs68', 199)" onmouseover="showTip(event, 'fs68', 199)" class="i">impl</span> <span onmouseout="hideTip(event, 'fs24', 200)" onmouseover="showTip(event, 'fs24', 200)" class="i">indentLevel</span> <span class="o">=</span>
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs68', 201)" onmouseover="showTip(event, 'fs68', 201)" class="i">impl</span> <span class="k">with</span>
    | [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs69', 202)" onmouseover="showTip(event, 'fs69', 202)" class="f">id</span>
    | <span onmouseout="hideTip(event, 'fs70', 203)" onmouseover="showTip(event, 'fs70', 203)" class="i">fs</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs22', 204)" onmouseover="showTip(event, 'fs22', 204)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs24', 205)" onmouseover="showTip(event, 'fs24', 205)" class="i">indentLevel</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 206)" onmouseover="showTip(event, 'fs16', 206)" class="f">ap</span> <span class="s">&quot;with&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 207)" onmouseover="showTip(event, 'fs25', 207)" class="f">newl</span> 
            <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs5', 208)" onmouseover="showTip(event, 'fs5', 208)" class="f">mapPipe</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs71', 209)" onmouseover="showTip(event, 'fs71', 209)" class="f">f</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs71', 210)" onmouseover="showTip(event, 'fs71', 210)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs24', 211)" onmouseover="showTip(event, 'fs24', 211)" class="i">indentLevel</span><span class="o">+</span><span class="n">1</span>) <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 212)" onmouseover="showTip(event, 'fs25', 212)" class="f">newl</span>) <span onmouseout="hideTip(event, 'fs70', 213)" onmouseover="showTip(event, 'fs70', 213)" class="i">fs</span>

<span class="c">///creates a record type at indent level with the specified fields</span>
<span class="c">///and optionally a function list with member / interface implementations</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs72', 214)" onmouseover="showTip(event, 'fs72', 214)" class="f">crecordType</span> <span onmouseout="hideTip(event, 'fs54', 215)" onmouseover="showTip(event, 'fs54', 215)" class="i">name</span> <span onmouseout="hideTip(event, 'fs73', 216)" onmouseover="showTip(event, 'fs73', 216)" class="i">fields</span> <span onmouseout="hideTip(event, 'fs74', 217)" onmouseover="showTip(event, 'fs74', 217)" class="i">members</span> <span onmouseout="hideTip(event, 'fs24', 218)" onmouseover="showTip(event, 'fs24', 218)" class="i">indentLevel</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs22', 219)" onmouseover="showTip(event, 'fs22', 219)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs24', 220)" onmouseover="showTip(event, 'fs24', 220)" class="i">indentLevel</span> 
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 221)" onmouseover="showTip(event, 'fs16', 221)" class="f">ap</span> <span class="s">&quot;type &quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 222)" onmouseover="showTip(event, 'fs16', 222)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs54', 223)" onmouseover="showTip(event, 'fs54', 223)" class="i">name</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 224)" onmouseover="showTip(event, 'fs21', 224)" class="f">space</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 225)" onmouseover="showTip(event, 'fs16', 225)" class="f">ap</span> <span class="s">&quot; = &quot;</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 226)" onmouseover="showTip(event, 'fs16', 226)" class="f">ap</span>(<span onmouseout="hideTip(event, 'fs32', 227)" onmouseover="showTip(event, 'fs32', 227)" class="f">wrapBraces</span> (<span onmouseout="hideTip(event, 'fs37', 228)" onmouseover="showTip(event, 'fs37', 228)" class="f">join</span> <span class="s">&quot;; &quot;</span> (<span onmouseout="hideTip(event, 'fs7', 229)" onmouseover="showTip(event, 'fs7', 229)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 230)" onmouseover="showTip(event, 'fs8', 230)" class="f">map</span>(<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs75', 231)" onmouseover="showTip(event, 'fs75', 231)" class="i">p</span>,<span onmouseout="hideTip(event, 'fs66', 232)" onmouseover="showTip(event, 'fs66', 232)" class="i">t</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs33', 233)" onmouseover="showTip(event, 'fs33', 233)" class="f">annoParam</span> <span onmouseout="hideTip(event, 'fs75', 234)" onmouseover="showTip(event, 'fs75', 234)" class="i">p</span> <span onmouseout="hideTip(event, 'fs66', 235)" onmouseover="showTip(event, 'fs66', 235)" class="i">t</span>) <span onmouseout="hideTip(event, 'fs73', 236)" onmouseover="showTip(event, 'fs73', 236)" class="i">fields</span>))) <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 237)" onmouseover="showTip(event, 'fs25', 237)" class="f">newl</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs67', 238)" onmouseover="showTip(event, 'fs67', 238)" class="f">cwithMembers</span> <span onmouseout="hideTip(event, 'fs74', 239)" onmouseover="showTip(event, 'fs74', 239)" class="i">members</span> <span onmouseout="hideTip(event, 'fs24', 240)" onmouseover="showTip(event, 'fs24', 240)" class="i">indentLevel</span>

<span class="c">/// creates a single union type case with any amount of type arguments</span>
<span class="c">/// that can optionally be named (F# 4)</span>
<span class="c">/// type args should be in the form (name,type name) where name can be blank</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs76', 241)" onmouseover="showTip(event, 'fs76', 241)" class="f">cunionTypeCase</span> <span onmouseout="hideTip(event, 'fs54', 242)" onmouseover="showTip(event, 'fs54', 242)" class="i">name</span> <span onmouseout="hideTip(event, 'fs77', 243)" onmouseover="showTip(event, 'fs77', 243)" class="i">args</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs30', 244)" onmouseover="showTip(event, 'fs30', 244)" class="f">sprintf</span> <span class="s">&quot;| </span><span class="pf">%s</span><span class="s"> of </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs54', 245)" onmouseover="showTip(event, 'fs54', 245)" class="i">name</span> 
        (<span onmouseout="hideTip(event, 'fs37', 246)" onmouseover="showTip(event, 'fs37', 246)" class="f">join</span> <span class="s">&quot; * &quot;</span> (<span onmouseout="hideTip(event, 'fs7', 247)" onmouseover="showTip(event, 'fs7', 247)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 248)" onmouseover="showTip(event, 'fs8', 248)" class="f">map</span>(<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs78', 249)" onmouseover="showTip(event, 'fs78', 249)" class="i">identifier</span>,<span onmouseout="hideTip(event, 'fs79', 250)" onmouseover="showTip(event, 'fs79', 250)" class="i">typeName</span>) <span class="k">-&gt;</span>
                                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs14', 251)" onmouseover="showTip(event, 'fs14', 251)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs80', 252)" onmouseover="showTip(event, 'fs80', 252)" class="f">IsNullOrWhiteSpace</span> <span onmouseout="hideTip(event, 'fs78', 253)" onmouseover="showTip(event, 'fs78', 253)" class="i">identifier</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs79', 254)" onmouseover="showTip(event, 'fs79', 254)" class="i">typeName</span>
                                <span class="k">else</span> <span onmouseout="hideTip(event, 'fs30', 255)" onmouseover="showTip(event, 'fs30', 255)" class="f">sprintf</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s"> : </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs78', 256)" onmouseover="showTip(event, 'fs78', 256)" class="i">identifier</span> <span onmouseout="hideTip(event, 'fs79', 257)" onmouseover="showTip(event, 'fs79', 257)" class="i">typeName</span>)
                                <span onmouseout="hideTip(event, 'fs77', 258)" onmouseover="showTip(event, 'fs77', 258)" class="i">args</span>))

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs81', 259)" onmouseover="showTip(event, 'fs81', 259)" class="f">cunionType</span> <span onmouseout="hideTip(event, 'fs54', 260)" onmouseover="showTip(event, 'fs54', 260)" class="i">name</span> <span onmouseout="hideTip(event, 'fs82', 261)" onmouseover="showTip(event, 'fs82', 261)" class="i">cases</span> <span onmouseout="hideTip(event, 'fs74', 262)" onmouseover="showTip(event, 'fs74', 262)" class="i">members</span> <span onmouseout="hideTip(event, 'fs24', 263)" onmouseover="showTip(event, 'fs24', 263)" class="i">indentLevel</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs22', 264)" onmouseover="showTip(event, 'fs22', 264)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs24', 265)" onmouseover="showTip(event, 'fs24', 265)" class="i">indentLevel</span> 
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 266)" onmouseover="showTip(event, 'fs16', 266)" class="f">ap</span> <span class="s">&quot;type &quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 267)" onmouseover="showTip(event, 'fs16', 267)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs54', 268)" onmouseover="showTip(event, 'fs54', 268)" class="i">name</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 269)" onmouseover="showTip(event, 'fs21', 269)" class="f">space</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 270)" onmouseover="showTip(event, 'fs16', 270)" class="f">ap</span> <span class="s">&quot; = &quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 271)" onmouseover="showTip(event, 'fs25', 271)" class="f">newl</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs5', 272)" onmouseover="showTip(event, 'fs5', 272)" class="f">mapPipe</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs54', 273)" onmouseover="showTip(event, 'fs54', 273)" class="i">name</span>,<span onmouseout="hideTip(event, 'fs77', 274)" onmouseover="showTip(event, 'fs77', 274)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs22', 275)" onmouseover="showTip(event, 'fs22', 275)" class="f">indent</span> (<span onmouseout="hideTip(event, 'fs24', 276)" onmouseover="showTip(event, 'fs24', 276)" class="i">indentLevel</span><span class="o">+</span><span class="n">1</span>) <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 277)" onmouseover="showTip(event, 'fs16', 277)" class="f">ap</span> (<span onmouseout="hideTip(event, 'fs76', 278)" onmouseover="showTip(event, 'fs76', 278)" class="f">cunionTypeCase</span> <span onmouseout="hideTip(event, 'fs54', 279)" onmouseover="showTip(event, 'fs54', 279)" class="i">name</span> <span onmouseout="hideTip(event, 'fs77', 280)" onmouseover="showTip(event, 'fs77', 280)" class="i">args</span>) <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 281)" onmouseover="showTip(event, 'fs25', 281)" class="f">newl</span>) <span onmouseout="hideTip(event, 'fs82', 282)" onmouseover="showTip(event, 'fs82', 282)" class="i">cases</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs67', 283)" onmouseover="showTip(event, 'fs67', 283)" class="f">cwithMembers</span> <span onmouseout="hideTip(event, 'fs74', 284)" onmouseover="showTip(event, 'fs74', 284)" class="i">members</span> <span onmouseout="hideTip(event, 'fs24', 285)" onmouseover="showTip(event, 'fs24', 285)" class="i">indentLevel</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs83', 286)" onmouseover="showTip(event, 'fs83', 286)" class="f">cmatchExpr</span> <span onmouseout="hideTip(event, 'fs84', 287)" onmouseover="showTip(event, 'fs84', 287)" class="i">pattern</span> <span onmouseout="hideTip(event, 'fs85', 288)" onmouseover="showTip(event, 'fs85', 288)" class="i">guard</span> <span onmouseout="hideTip(event, 'fs86', 289)" onmouseover="showTip(event, 'fs86', 289)" class="f">impl</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs87', 290)" onmouseover="showTip(event, 'fs87', 290)" class="i">guard</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs87', 291)" onmouseover="showTip(event, 'fs87', 291)" class="i">guard</span> <span class="o">|&gt;</span> <span class="k">function</span> <span onmouseout="hideTip(event, 'fs64', 292)" onmouseover="showTip(event, 'fs64', 292)" class="p">None</span> <span class="k">-&gt;</span> <span class="s">&quot;&quot;</span> | <span onmouseout="hideTip(event, 'fs65', 293)" onmouseover="showTip(event, 'fs65', 293)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs88', 294)" onmouseover="showTip(event, 'fs88', 294)" class="i">g</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs30', 295)" onmouseover="showTip(event, 'fs30', 295)" class="f">sprintf</span> <span class="s">&quot; when </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs88', 296)" onmouseover="showTip(event, 'fs88', 296)" class="i">g</span>
    <span onmouseout="hideTip(event, 'fs16', 297)" onmouseover="showTip(event, 'fs16', 297)" class="f">ap</span> <span class="s">&quot;| &quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 298)" onmouseover="showTip(event, 'fs16', 298)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs84', 299)" onmouseover="showTip(event, 'fs84', 299)" class="i">pattern</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 300)" onmouseover="showTip(event, 'fs16', 300)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs87', 301)" onmouseover="showTip(event, 'fs87', 301)" class="i">guard</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs86', 302)" onmouseover="showTip(event, 'fs86', 302)" class="f">impl</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs89', 303)" onmouseover="showTip(event, 'fs89', 303)" class="f">cmatch</span> <span onmouseout="hideTip(event, 'fs90', 304)" onmouseover="showTip(event, 'fs90', 304)" class="i">expr</span> <span onmouseout="hideTip(event, 'fs91', 305)" onmouseover="showTip(event, 'fs91', 305)" class="i">cases</span> <span onmouseout="hideTip(event, 'fs24', 306)" onmouseover="showTip(event, 'fs24', 306)" class="i">indentLevel</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs22', 307)" onmouseover="showTip(event, 'fs22', 307)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs24', 308)" onmouseover="showTip(event, 'fs24', 308)" class="i">indentLevel</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 309)" onmouseover="showTip(event, 'fs16', 309)" class="f">ap</span> <span class="s">&quot;match &quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 310)" onmouseover="showTip(event, 'fs16', 310)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs90', 311)" onmouseover="showTip(event, 'fs90', 311)" class="i">expr</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 312)" onmouseover="showTip(event, 'fs16', 312)" class="f">ap</span> <span class="s">&quot; with&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 313)" onmouseover="showTip(event, 'fs25', 313)" class="f">newl</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs5', 314)" onmouseover="showTip(event, 'fs5', 314)" class="f">mapPipe</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs90', 315)" onmouseover="showTip(event, 'fs90', 315)" class="i">expr</span>,<span onmouseout="hideTip(event, 'fs85', 316)" onmouseover="showTip(event, 'fs85', 316)" class="i">guard</span>,<span onmouseout="hideTip(event, 'fs92', 317)" onmouseover="showTip(event, 'fs92', 317)" class="f">impl</span>) <span class="k">-&gt;</span> 
                    <span onmouseout="hideTip(event, 'fs22', 318)" onmouseover="showTip(event, 'fs22', 318)" class="f">indent</span> (<span onmouseout="hideTip(event, 'fs24', 319)" onmouseover="showTip(event, 'fs24', 319)" class="i">indentLevel</span><span class="o">+</span><span class="n">1</span>)  
                    <span class="o">&gt;</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs83', 320)" onmouseover="showTip(event, 'fs83', 320)" class="f">cmatchExpr</span> <span onmouseout="hideTip(event, 'fs90', 321)" onmouseover="showTip(event, 'fs90', 321)" class="i">expr</span> <span onmouseout="hideTip(event, 'fs85', 322)" onmouseover="showTip(event, 'fs85', 322)" class="i">guard</span> (<span onmouseout="hideTip(event, 'fs92', 323)" onmouseover="showTip(event, 'fs92', 323)" class="f">impl</span> (<span onmouseout="hideTip(event, 'fs24', 324)" onmouseover="showTip(event, 'fs24', 324)" class="i">indentLevel</span><span class="o">+</span><span class="n">1</span>))) <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 325)" onmouseover="showTip(event, 'fs25', 325)" class="f">newl</span>) <span onmouseout="hideTip(event, 'fs91', 326)" onmouseover="showTip(event, 'fs91', 326)" class="i">cases</span>

<span class="c">/// writes a let binding at the indent level, and calls</span>
<span class="c">/// (impl indentLevel+1) on a new line to write the implentation</span>
<span class="c">/// this is useful for let bindings that do not fit on the same line</span>
<span class="c">/// eg</span>
<span class="c">/// let x =</span>
<span class="c">///  doSomeStuff &quot;stuff&quot;</span>
<span class="c">///  |&gt; moreStuf</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs93', 327)" onmouseover="showTip(event, 'fs93', 327)" class="f">cleti</span> <span onmouseout="hideTip(event, 'fs78', 328)" onmouseover="showTip(event, 'fs78', 328)" class="i">identifier</span> <span onmouseout="hideTip(event, 'fs56', 329)" onmouseover="showTip(event, 'fs56', 329)" class="f">impl</span> <span onmouseout="hideTip(event, 'fs24', 330)" onmouseover="showTip(event, 'fs24', 330)" class="i">indentLevel</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs22', 331)" onmouseover="showTip(event, 'fs22', 331)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs24', 332)" onmouseover="showTip(event, 'fs24', 332)" class="i">indentLevel</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 333)" onmouseover="showTip(event, 'fs16', 333)" class="f">ap</span> <span class="s">&quot;let &quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 334)" onmouseover="showTip(event, 'fs16', 334)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs78', 335)" onmouseover="showTip(event, 'fs78', 335)" class="i">identifier</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 336)" onmouseover="showTip(event, 'fs16', 336)" class="f">ap</span> <span class="s">&quot; = &quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 337)" onmouseover="showTip(event, 'fs25', 337)" class="f">newl</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs56', 338)" onmouseover="showTip(event, 'fs56', 338)" class="f">impl</span> (<span onmouseout="hideTip(event, 'fs24', 339)" onmouseover="showTip(event, 'fs24', 339)" class="i">indentLevel</span><span class="o">+</span><span class="n">1</span>)

<span class="c">/// writes a let binding at the indent level, expecting that</span>
<span class="c">/// the impl function is a one liner that does not expect an </span>
<span class="c">/// indent level parameter.  </span>
<span class="c">/// eg</span>
<span class="c">/// let x = List.reduce(+) input</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs94', 340)" onmouseover="showTip(event, 'fs94', 340)" class="f">clet</span> <span onmouseout="hideTip(event, 'fs78', 341)" onmouseover="showTip(event, 'fs78', 341)" class="i">identifier</span> <span onmouseout="hideTip(event, 'fs86', 342)" onmouseover="showTip(event, 'fs86', 342)" class="f">impl</span> <span onmouseout="hideTip(event, 'fs24', 343)" onmouseover="showTip(event, 'fs24', 343)" class="i">indentLevel</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs22', 344)" onmouseover="showTip(event, 'fs22', 344)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs24', 345)" onmouseover="showTip(event, 'fs24', 345)" class="i">indentLevel</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 346)" onmouseover="showTip(event, 'fs16', 346)" class="f">ap</span> <span class="s">&quot;let &quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 347)" onmouseover="showTip(event, 'fs16', 347)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs78', 348)" onmouseover="showTip(event, 'fs78', 348)" class="i">identifier</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 349)" onmouseover="showTip(event, 'fs16', 349)" class="f">ap</span> <span class="s">&quot; = &quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs86', 350)" onmouseover="showTip(event, 'fs86', 350)" class="f">impl</span> 

<span class="c">/// creates module with the given name, the list of </span>
<span class="c">/// implementation functions have indentLevel+1 applied </span>
<span class="c">/// to them and are then composed into one function</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs95', 351)" onmouseover="showTip(event, 'fs95', 351)" class="f">cmodule</span> <span onmouseout="hideTip(event, 'fs54', 352)" onmouseover="showTip(event, 'fs54', 352)" class="i">name</span> <span onmouseout="hideTip(event, 'fs68', 353)" onmouseover="showTip(event, 'fs68', 353)" class="i">impl</span> <span onmouseout="hideTip(event, 'fs24', 354)" onmouseover="showTip(event, 'fs24', 354)" class="i">indentLevel</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs22', 355)" onmouseover="showTip(event, 'fs22', 355)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs24', 356)" onmouseover="showTip(event, 'fs24', 356)" class="i">indentLevel</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 357)" onmouseover="showTip(event, 'fs16', 357)" class="f">ap</span> <span class="s">&quot;module &quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 358)" onmouseover="showTip(event, 'fs16', 358)" class="f">ap</span> <span onmouseout="hideTip(event, 'fs54', 359)" onmouseover="showTip(event, 'fs54', 359)" class="i">name</span>  <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 360)" onmouseover="showTip(event, 'fs16', 360)" class="f">ap</span> <span class="s">&quot; =&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 361)" onmouseover="showTip(event, 'fs25', 361)" class="f">newl</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs5', 362)" onmouseover="showTip(event, 'fs5', 362)" class="f">mapPipe</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs71', 363)" onmouseover="showTip(event, 'fs71', 363)" class="f">f</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs71', 364)" onmouseover="showTip(event, 'fs71', 364)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs24', 365)" onmouseover="showTip(event, 'fs24', 365)" class="i">indentLevel</span><span class="o">+</span><span class="n">1</span>) <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 366)" onmouseover="showTip(event, 'fs25', 366)" class="f">newl</span>) <span onmouseout="hideTip(event, 'fs68', 367)" onmouseover="showTip(event, 'fs68', 367)" class="i">impl</span>

<span class="c">/// creates an if .. then .. else expression, the functions </span>
<span class="c">/// passed for to create the branch implementations are </span>
<span class="c">/// always applied with indentLevel+1</span>
<span class="c">/// eg</span>
<span class="c">/// if x = 1 then</span>
<span class="c">///     true</span>
<span class="c">/// else</span>
<span class="c">///     false</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs96', 368)" onmouseover="showTip(event, 'fs96', 368)" class="f">cifThenElse</span> <span onmouseout="hideTip(event, 'fs97', 369)" onmouseover="showTip(event, 'fs97', 369)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs98', 370)" onmouseover="showTip(event, 'fs98', 370)" class="f">trueExpr</span> <span onmouseout="hideTip(event, 'fs99', 371)" onmouseover="showTip(event, 'fs99', 371)" class="f">falseExpr</span> <span onmouseout="hideTip(event, 'fs24', 372)" onmouseover="showTip(event, 'fs24', 372)" class="i">indentLevel</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs22', 373)" onmouseover="showTip(event, 'fs22', 373)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs24', 374)" onmouseover="showTip(event, 'fs24', 374)" class="i">indentLevel</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 375)" onmouseover="showTip(event, 'fs16', 375)" class="f">ap</span> <span class="s">&quot;if &quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs97', 376)" onmouseover="showTip(event, 'fs97', 376)" class="f">pred</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 377)" onmouseover="showTip(event, 'fs16', 377)" class="f">ap</span> <span class="s">&quot; then&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 378)" onmouseover="showTip(event, 'fs25', 378)" class="f">newl</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs98', 379)" onmouseover="showTip(event, 'fs98', 379)" class="f">trueExpr</span>(<span onmouseout="hideTip(event, 'fs24', 380)" onmouseover="showTip(event, 'fs24', 380)" class="i">indentLevel</span><span class="o">+</span><span class="n">1</span>)
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs22', 381)" onmouseover="showTip(event, 'fs22', 381)" class="f">indent</span> <span onmouseout="hideTip(event, 'fs24', 382)" onmouseover="showTip(event, 'fs24', 382)" class="i">indentLevel</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs16', 383)" onmouseover="showTip(event, 'fs16', 383)" class="f">ap</span> <span class="s">&quot;else&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs25', 384)" onmouseover="showTip(event, 'fs25', 384)" class="f">newl</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs99', 385)" onmouseover="showTip(event, 'fs99', 385)" class="f">falseExpr</span>(<span onmouseout="hideTip(event, 'fs24', 386)" onmouseover="showTip(event, 'fs24', 386)" class="i">indentLevel</span><span class="o">+</span><span class="n">1</span>)
    
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs100', 387)" onmouseover="showTip(event, 'fs100', 387)" class="i">sb</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs4', 388)" onmouseover="showTip(event, 'fs4', 388)" class="t">StringBuilder</span>()



<span class="k">let</span> <span onmouseout="hideTip(event, 'fs101', 389)" onmouseover="showTip(event, 'fs101', 389)" class="f">m</span> <span class="o">=</span><span onmouseout="hideTip(event, 'fs51', 390)" onmouseover="showTip(event, 'fs51', 390)" class="f">cmember</span> (<span onmouseout="hideTip(event, 'fs43', 391)" onmouseover="showTip(event, 'fs43', 391)" class="p">Instance</span> <span class="s">&quot;this&quot;</span>) <span class="s">&quot;private&quot;</span> <span class="s">&quot;test&quot;</span> (<span onmouseout="hideTip(event, 'fs46', 392)" onmouseover="showTip(event, 'fs46', 392)" class="p">Partial</span> [<span class="s">&quot;x&quot;</span>,<span onmouseout="hideTip(event, 'fs65', 393)" onmouseover="showTip(event, 'fs65', 393)" class="p">Some</span> <span class="s">&quot;int&quot;</span>]) (<span onmouseout="hideTip(event, 'fs23', 394)" onmouseover="showTip(event, 'fs23', 394)" class="f">api</span> <span class="s">&quot;1&quot;</span>)  
(<span class="n">0</span>,<span onmouseout="hideTip(event, 'fs100', 395)" onmouseover="showTip(event, 'fs100', 395)" class="i">sb</span>)
<span class="o">||&gt;</span> <span onmouseout="hideTip(event, 'fs95', 396)" onmouseover="showTip(event, 'fs95', 396)" class="f">cmodule</span> <span class="s">&quot;TestModule&quot;</span>
    [
       <span onmouseout="hideTip(event, 'fs94', 397)" onmouseover="showTip(event, 'fs94', 397)" class="f">clet</span> <span class="s">&quot;x&quot;</span> (<span onmouseout="hideTip(event, 'fs16', 398)" onmouseover="showTip(event, 'fs16', 398)" class="f">ap</span> <span class="s">&quot;1&quot;</span>);
       <span onmouseout="hideTip(event, 'fs94', 399)" onmouseover="showTip(event, 'fs94', 399)" class="f">clet</span> <span class="s">&quot;Y&quot;</span> (<span onmouseout="hideTip(event, 'fs16', 400)" onmouseover="showTip(event, 'fs16', 400)" class="f">ap</span> <span class="s">&quot;1&quot;</span>);
       <span onmouseout="hideTip(event, 'fs27', 401)" onmouseover="showTip(event, 'fs27', 401)" class="f">newli</span>;
       <span onmouseout="hideTip(event, 'fs95', 402)" onmouseover="showTip(event, 'fs95', 402)" class="f">cmodule</span> <span class="s">&quot;TestTypes&quot;</span>
        [
           <span onmouseout="hideTip(event, 'fs72', 403)" onmouseover="showTip(event, 'fs72', 403)" class="f">crecordType</span> <span class="s">&quot;RecordType&quot;</span> [(<span class="s">&quot;x&quot;</span>,<span class="s">&quot;int&quot;</span>);(<span class="s">&quot;y&quot;</span>,<span class="s">&quot;long&quot;</span>)] [];
           <span onmouseout="hideTip(event, 'fs72', 404)" onmouseover="showTip(event, 'fs72', 404)" class="f">crecordType</span> <span class="s">&quot;RecordTypeWithMembers&quot;</span> [(<span class="s">&quot;x&quot;</span>,<span class="s">&quot;int&quot;</span>);(<span class="s">&quot;y&quot;</span>,<span class="s">&quot;long&quot;</span>)] 
                [
                    <span onmouseout="hideTip(event, 'fs51', 405)" onmouseover="showTip(event, 'fs51', 405)" class="f">cmember</span> (<span onmouseout="hideTip(event, 'fs43', 406)" onmouseover="showTip(event, 'fs43', 406)" class="p">Instance</span> <span class="s">&quot;this&quot;</span>) <span class="s">&quot;private&quot;</span> <span class="s">&quot;test&quot;</span> (<span onmouseout="hideTip(event, 'fs46', 407)" onmouseover="showTip(event, 'fs46', 407)" class="p">Partial</span> [<span class="s">&quot;x&quot;</span>,<span onmouseout="hideTip(event, 'fs65', 408)" onmouseover="showTip(event, 'fs65', 408)" class="p">Some</span> <span class="s">&quot;int&quot;</span>]) 
                        (<span onmouseout="hideTip(event, 'fs23', 409)" onmouseover="showTip(event, 'fs23', 409)" class="f">api</span> <span class="s">&quot;{ this with x = x }&quot;</span> )
                    <span onmouseout="hideTip(event, 'fs51', 410)" onmouseover="showTip(event, 'fs51', 410)" class="f">cmember</span> (<span onmouseout="hideTip(event, 'fs43', 411)" onmouseover="showTip(event, 'fs43', 411)" class="p">Instance</span> <span class="s">&quot;this&quot;</span>) <span class="s">&quot;private&quot;</span> <span class="s">&quot;test&quot;</span> (<span onmouseout="hideTip(event, 'fs46', 412)" onmouseover="showTip(event, 'fs46', 412)" class="p">Partial</span> [<span class="s">&quot;y&quot;</span>,<span onmouseout="hideTip(event, 'fs65', 413)" onmouseover="showTip(event, 'fs65', 413)" class="p">Some</span> <span class="s">&quot;int&quot;</span>]) 
                        (<span onmouseout="hideTip(event, 'fs23', 414)" onmouseover="showTip(event, 'fs23', 414)" class="f">api</span> <span class="s">&quot;{ this with y = y }&quot;</span> )
                
                ]; 
            <span onmouseout="hideTip(event, 'fs72', 415)" onmouseover="showTip(event, 'fs72', 415)" class="f">crecordType</span> <span class="s">&quot;RecordType&quot;</span> [(<span class="s">&quot;x&quot;</span>,<span class="s">&quot;int&quot;</span>);(<span class="s">&quot;y&quot;</span>,<span class="s">&quot;long&quot;</span>)] [];
        ]
    ]
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Text</div>
<div class="tip" id="fs3">type sb = StringBuilder<br /><br />Full name: Script.sb</div>
<div class="tip" id="fs4">Multiple items<br />type StringBuilder =<br />&#160;&#160;new : unit -&gt; StringBuilder + 5 overloads<br />&#160;&#160;member Append : value:string -&gt; StringBuilder + 18 overloads<br />&#160;&#160;member AppendFormat : format:string * arg0:obj -&gt; StringBuilder + 4 overloads<br />&#160;&#160;member AppendLine : unit -&gt; StringBuilder + 1 overload<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member Chars : int -&gt; char with get, set<br />&#160;&#160;member Clear : unit -&gt; StringBuilder<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EnsureCapacity : capacity:int -&gt; int<br />&#160;&#160;member Equals : sb:StringBuilder -&gt; bool<br />&#160;&#160;...<br /><br />Full name: System.Text.StringBuilder<br /><br />--------------------<br />StringBuilder() : unit<br />StringBuilder(capacity: int) : unit<br />StringBuilder(value: string) : unit<br />StringBuilder(value: string, capacity: int) : unit<br />StringBuilder(capacity: int, maxCapacity: int) : unit<br />StringBuilder(value: string, startIndex: int, length: int, capacity: int) : unit</div>
<div class="tip" id="fs5">val mapPipe : f:(&#39;a -&gt; &#39;b -&gt; &#39;b) -&gt; (&#39;a list -&gt; &#39;b -&gt; &#39;b)<br /><br />Full name: Script.mapPipe</div>
<div class="tip" id="fs6">val f : (&#39;a -&gt; &#39;b -&gt; &#39;b)</div>
<div class="tip" id="fs7">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs8">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs9">val reduce : reduction:(&#39;T -&gt; &#39;T -&gt; &#39;T) -&gt; list:&#39;T list -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.List.reduce</div>
<div class="tip" id="fs10">val spaces : count:int -&gt; sb:sb -&gt; StringBuilder<br /><br />Full name: Script.spaces<br /><em><br /><br />&#160;appends count number of spaces</em></div>
<div class="tip" id="fs11">val count : int</div>
<div class="tip" id="fs12">Multiple items<br />val sb : sb<br /><br />--------------------<br />type sb = StringBuilder<br /><br />Full name: Script.sb</div>
<div class="tip" id="fs13">val spaces : String</div>
<div class="tip" id="fs14">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Encoding) : unit</div>
<div class="tip" id="fs15">StringBuilder.Append(value: char []) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: obj) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: uint64) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: uint32) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: uint16) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: decimal) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: float) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: float32) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: int64) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: int) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs16">val ap : text:string -&gt; sb:sb -&gt; StringBuilder<br /><br />Full name: Script.ap<br /><em><br /><br />&#160;appends any text</em></div>
<div class="tip" id="fs17">val text : string</div>
<div class="tip" id="fs18">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs19">val str : text:string -&gt; sb:sb -&gt; StringBuilder<br /><br />Full name: Script.str<br /><em><br /><br />&#160;appends an escaped, quoted string from a string</em></div>
<div class="tip" id="fs20">StringBuilder.AppendFormat(format: string, [&lt;ParamArray&gt;] args: obj []) : StringBuilder<br />StringBuilder.AppendFormat(format: string, arg0: obj) : StringBuilder<br />StringBuilder.AppendFormat(provider: IFormatProvider, format: string, [&lt;ParamArray&gt;] args: obj []) : StringBuilder<br />StringBuilder.AppendFormat(format: string, arg0: obj, arg1: obj) : StringBuilder<br />StringBuilder.AppendFormat(format: string, arg0: obj, arg1: obj, arg2: obj) : StringBuilder</div>
<div class="tip" id="fs21">val space : (sb -&gt; StringBuilder)<br /><br />Full name: Script.space</div>
<div class="tip" id="fs22">val indent : count:int -&gt; (sb -&gt; StringBuilder)<br /><br />Full name: Script.indent</div>
<div class="tip" id="fs23">val api : text:string -&gt; indentLevel:int -&gt; (sb -&gt; StringBuilder)<br /><br />Full name: Script.api</div>
<div class="tip" id="fs24">val indentLevel : int</div>
<div class="tip" id="fs25">val newl : sb:sb -&gt; StringBuilder<br /><br />Full name: Script.newl<br /><em><br /><br />&#160;appends a newline character</em></div>
<div class="tip" id="fs26">StringBuilder.AppendLine() : StringBuilder<br />StringBuilder.AppendLine(value: string) : StringBuilder</div>
<div class="tip" id="fs27">val newli : indentLevel:int -&gt; sb:sb -&gt; StringBuilder<br /><br />Full name: Script.newli<br /><em><br /><br />&#160;appends a new line and then the specified indent level<br />&#160;this function is not usuallly very useful, though as it<br />&#160;takes the additional parameter it can be used in places expecting<br />&#160;int -&gt; sb  insted of having to write (fun _ -&gt; newl)</em></div>
<div class="tip" id="fs28">val xmlComment : comment:string -&gt; indentLevel:int -&gt; (sb -&gt; StringBuilder)<br /><br />Full name: Script.xmlComment<br /><em><br /><br />&#160;appends an xml comment at the given indent level</em></div>
<div class="tip" id="fs29">val comment : string</div>
<div class="tip" id="fs30">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs31">val wrapParens : text:string -&gt; string<br /><br />Full name: Script.wrapParens<br /><em><br /><br />&#160;wraps text in parenthesis and returns the string</em></div>
<div class="tip" id="fs32">val wrapBraces : text:string -&gt; string<br /><br />Full name: Script.wrapBraces<br /><em><br /><br />&#160;wraps text in braces and returns the string</em></div>
<div class="tip" id="fs33">val annoParam : pName:string -&gt; pType:string -&gt; string<br /><br />Full name: Script.annoParam<br /><em><br /><br />&#160;annotates a parameter in the format &#39;name : type&#39; and returns the string</em></div>
<div class="tip" id="fs34">val pName : string</div>
<div class="tip" id="fs35">val pType : string</div>
<div class="tip" id="fs36">val annoParamParens : pName:string -&gt; pType:string -&gt; string<br /><br />Full name: Script.annoParamParens<br /><em><br /><br />&#160;annotates a parameter in the format &#39;(name : type)&#39; and returns the string</em></div>
<div class="tip" id="fs37">val join : seperator:string -&gt; values:seq&lt;string&gt; -&gt; string<br /><br />Full name: Script.join<br /><em><br /><br />&#160;joins a sequence of strings with the given seperator</em></div>
<div class="tip" id="fs38">val seperator : string</div>
<div class="tip" id="fs39">val values : seq&lt;string&gt;</div>
<div class="tip" id="fs40">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs41">String.Join(separator: string, values: Collections.Generic.IEnumerable&lt;string&gt;) : string<br />String.Join&lt;&#39;T&gt;(separator: string, values: Collections.Generic.IEnumerable&lt;&#39;T&gt;) : string<br />String.Join(separator: string, [&lt;ParamArray&gt;] values: obj []) : string<br />String.Join(separator: string, [&lt;ParamArray&gt;] value: string []) : string<br />String.Join(separator: string, value: string [], startIndex: int, count: int) : string</div>
<div class="tip" id="fs42">type MemberType =<br />&#160;&#160;| Instance of identifier: string<br />&#160;&#160;| Static<br /><br />Full name: Script.MemberType</div>
<div class="tip" id="fs43">union case MemberType.Instance: identifier: string -&gt; MemberType</div>
<div class="tip" id="fs44">union case MemberType.Static: MemberType</div>
<div class="tip" id="fs45">type ArgsType =<br />&#160;&#160;| Partial of (string * string option) list<br />&#160;&#160;| Tuple of (string * string option) list<br />&#160;&#160;| NoArgs<br /><br />Full name: Script.ArgsType</div>
<div class="tip" id="fs46">union case ArgsType.Partial: (string * string option) list -&gt; ArgsType</div>
<div class="tip" id="fs47">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs48">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs49">Multiple items<br />union case ArgsType.Tuple: (string * string option) list -&gt; ArgsType<br /><br />--------------------<br />type Tuple =<br />&#160;&#160;static member Create&lt;&#39;T1&gt; : item1:&#39;T1 -&gt; Tuple&lt;&#39;T1&gt; + 7 overloads<br /><br />Full name: System.Tuple<br /><br />--------------------<br />type Tuple&lt;&#39;T1&gt; =<br />&#160;&#160;new : item1:&#39;T1 -&gt; Tuple&lt;&#39;T1&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 -&gt; Tuple&lt;&#39;T1, &#39;T2&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 * item5:&#39;T5 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4, &#39;T5&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member Item5 : &#39;T5<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_,_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 * item5:&#39;T5 * item6:&#39;T6 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4, &#39;T5, &#39;T6&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member Item5 : &#39;T5<br />&#160;&#160;member Item6 : &#39;T6<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 * item5:&#39;T5 * item6:&#39;T6 * item7:&#39;T7 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4, &#39;T5, &#39;T6, &#39;T7&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member Item5 : &#39;T5<br />&#160;&#160;member Item6 : &#39;T6<br />&#160;&#160;member Item7 : &#39;T7<br />&#160;&#160;...<br /><br />Full name: System.Tuple&lt;_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;TRest&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 * item5:&#39;T5 * item6:&#39;T6 * item7:&#39;T7 * rest:&#39;TRest -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4, &#39;T5, &#39;T6, &#39;T7, &#39;TRest&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member Item5 : &#39;T5<br />&#160;&#160;member Item6 : &#39;T6<br />&#160;&#160;member Item7 : &#39;T7<br />&#160;&#160;...<br /><br />Full name: System.Tuple&lt;_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />Tuple(item1: &#39;T1) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4, item5: &#39;T5) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4, item5: &#39;T5, item6: &#39;T6) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4, item5: &#39;T5, item6: &#39;T6, item7: &#39;T7) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4, item5: &#39;T5, item6: &#39;T6, item7: &#39;T7, rest: &#39;TRest) : unit</div>
<div class="tip" id="fs50">union case ArgsType.NoArgs: ArgsType</div>
<div class="tip" id="fs51">val cmember : memberType:MemberType -&gt; qualifier:string -&gt; name:string -&gt; args:ArgsType -&gt; impl:(int -&gt; StringBuilder -&gt; &#39;a) -&gt; indentLevel:int -&gt; (sb -&gt; &#39;a)<br /><br />Full name: Script.cmember<br /><em><br /><br />&#160;creates a member defintion at the given indent level<br />&#160;memberType - static, or instance with a self identifier value<br />&#160;qualifer - any qualifiying string eg private<br />&#160;name - the name of the member<br />&#160;args - list of argument names and optionally types, denoted as partial style<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;or tuples. <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;eg; Partial [(&quot;x&quot;,Some &quot;int&quot;),(&quot;y&quot;,None)] evaluates as<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foo (x:int) y = ...<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;and Tuple [(&quot;x&quot;,Some &quot;int&quot;),(&quot;y&quot;,None)] evaluates as<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foo (x:int,y) = ...<br />&#160;impl - a function that will be called with (indentLevel+1) to create<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the body of the member<br />&#160;TODO - generic arguments</em></div>
<div class="tip" id="fs52">val memberType : MemberType</div>
<div class="tip" id="fs53">val qualifier : string</div>
<div class="tip" id="fs54">val name : string</div>
<div class="tip" id="fs55">val args : ArgsType</div>
<div class="tip" id="fs56">val impl : (int -&gt; StringBuilder -&gt; &#39;a)</div>
<div class="tip" id="fs57">val stat : string</div>
<div class="tip" id="fs58">val ident : string</div>
<div class="tip" id="fs59">val id : string</div>
<div class="tip" id="fs60">val signature : string</div>
<div class="tip" id="fs61">val args : (string * string option) list</div>
<div class="tip" id="fs62">val cp : (string * string option -&gt; string)</div>
<div class="tip" id="fs63">val n : string</div>
<div class="tip" id="fs64">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs65">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs66">val t : string</div>
<div class="tip" id="fs67">val cwithMembers : impl:(int -&gt; StringBuilder -&gt; sb) list -&gt; indentLevel:int -&gt; (sb -&gt; sb)<br /><br />Full name: Script.cwithMembers<br /><em><br /><br />&#160;appends &quot;with..&quot; at the indent level then calls the impl function with<br />&#160;indentLevel+1 (this function should be formed from a composition of <br />&#160;cmember, cinterface etc)</em></div>
<div class="tip" id="fs68">val impl : (int -&gt; StringBuilder -&gt; sb) list</div>
<div class="tip" id="fs69">val id : x:&#39;T -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.id</div>
<div class="tip" id="fs70">val fs : (int -&gt; StringBuilder -&gt; sb) list</div>
<div class="tip" id="fs71">val f : (int -&gt; StringBuilder -&gt; sb)</div>
<div class="tip" id="fs72">val crecordType : name:string -&gt; fields:(string * string) list -&gt; members:(int -&gt; StringBuilder -&gt; sb) list -&gt; indentLevel:int -&gt; (sb -&gt; sb)<br /><br />Full name: Script.crecordType<br /><em><br /><br />creates a record type at indent level with the specified fields<br />and optionally a function list with member / interface implementations</em></div>
<div class="tip" id="fs73">val fields : (string * string) list</div>
<div class="tip" id="fs74">val members : (int -&gt; StringBuilder -&gt; sb) list</div>
<div class="tip" id="fs75">val p : string</div>
<div class="tip" id="fs76">val cunionTypeCase : name:string -&gt; args:(string * string) list -&gt; string<br /><br />Full name: Script.cunionTypeCase<br /><em><br /><br />&#160;creates a single union type case with any amount of type arguments<br />&#160;that can optionally be named (F# 4)<br />&#160;type args should be in the form (name,type name) where name can be blank</em></div>
<div class="tip" id="fs77">val args : (string * string) list</div>
<div class="tip" id="fs78">val identifier : string</div>
<div class="tip" id="fs79">val typeName : string</div>
<div class="tip" id="fs80">String.IsNullOrWhiteSpace(value: string) : bool</div>
<div class="tip" id="fs81">val cunionType : name:string -&gt; cases:(string * (string * string) list) list -&gt; members:(int -&gt; StringBuilder -&gt; sb) list -&gt; indentLevel:int -&gt; (sb -&gt; sb)<br /><br />Full name: Script.cunionType</div>
<div class="tip" id="fs82">val cases : (string * (string * string) list) list</div>
<div class="tip" id="fs83">val cmatchExpr : pattern:string -&gt; guard:string option -&gt; impl:(StringBuilder -&gt; &#39;a) -&gt; (sb -&gt; &#39;a)<br /><br />Full name: Script.cmatchExpr</div>
<div class="tip" id="fs84">val pattern : string</div>
<div class="tip" id="fs85">val guard : string option</div>
<div class="tip" id="fs86">val impl : (StringBuilder -&gt; &#39;a)</div>
<div class="tip" id="fs87">val guard : string</div>
<div class="tip" id="fs88">val g : string</div>
<div class="tip" id="fs89">val cmatch : expr:string -&gt; cases:(string * string option * (int -&gt; StringBuilder -&gt; sb)) list -&gt; indentLevel:int -&gt; (sb -&gt; StringBuilder)<br /><br />Full name: Script.cmatch</div>
<div class="tip" id="fs90">val expr : string</div>
<div class="tip" id="fs91">val cases : (string * string option * (int -&gt; StringBuilder -&gt; sb)) list</div>
<div class="tip" id="fs92">val impl : (int -&gt; StringBuilder -&gt; sb)</div>
<div class="tip" id="fs93">val cleti : identifier:string -&gt; impl:(int -&gt; StringBuilder -&gt; &#39;a) -&gt; indentLevel:int -&gt; (sb -&gt; &#39;a)<br /><br />Full name: Script.cleti<br /><em><br /><br />&#160;writes a let binding at the indent level, and calls<br />&#160;(impl indentLevel+1) on a new line to write the implentation<br />&#160;this is useful for let bindings that do not fit on the same line<br />&#160;eg<br />&#160;let x =<br />&#160;&#160;doSomeStuff &quot;stuff&quot;<br />&#160;&#160;|&gt; moreStuf</em></div>
<div class="tip" id="fs94">val clet : identifier:string -&gt; impl:(StringBuilder -&gt; &#39;a) -&gt; indentLevel:int -&gt; (sb -&gt; &#39;a)<br /><br />Full name: Script.clet<br /><em><br /><br />&#160;writes a let binding at the indent level, expecting that<br />&#160;the impl function is a one liner that does not expect an <br />&#160;indent level parameter.  <br />&#160;eg<br />&#160;let x = List.reduce(+) input</em></div>
<div class="tip" id="fs95">val cmodule : name:string -&gt; impl:(int -&gt; StringBuilder -&gt; sb) list -&gt; indentLevel:int -&gt; (sb -&gt; StringBuilder)<br /><br />Full name: Script.cmodule<br /><em><br /><br />&#160;creates module with the given name, the list of <br />&#160;implementation functions have indentLevel+1 applied <br />&#160;to them and are then composed into one function</em></div>
<div class="tip" id="fs96">val cifThenElse : pred:(StringBuilder -&gt; sb) -&gt; trueExpr:(int -&gt; StringBuilder -&gt; sb) -&gt; falseExpr:(int -&gt; StringBuilder -&gt; &#39;a) -&gt; indentLevel:int -&gt; (sb -&gt; &#39;a)<br /><br />Full name: Script.cifThenElse<br /><em><br /><br />&#160;creates an if .. then .. else expression, the functions <br />&#160;passed for to create the branch implementations are <br />&#160;always applied with indentLevel+1<br />&#160;eg<br />&#160;if x = 1 then<br />&#160;&#160;&#160;&#160;&#160;true<br />&#160;else<br />&#160;&#160;&#160;&#160;&#160;false</em></div>
<div class="tip" id="fs97">val pred : (StringBuilder -&gt; sb)</div>
<div class="tip" id="fs98">val trueExpr : (int -&gt; StringBuilder -&gt; sb)</div>
<div class="tip" id="fs99">val falseExpr : (int -&gt; StringBuilder -&gt; &#39;a)</div>
<div class="tip" id="fs100">Multiple items<br />val sb : StringBuilder<br /><br />Full name: Script.sb<br /><br />--------------------<br />type sb = StringBuilder<br /><br />Full name: Script.sb</div>
<div class="tip" id="fs101">val m : (int -&gt; sb -&gt; StringBuilder)<br /><br />Full name: Script.m</div>

