<h2><a name="Assembly-references-for-FSI" class="anchor" href="#Assembly-references-for-FSI">Assembly references for FSI</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
<span class="l">6: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// We can use the kRPC C# client library in F#.</span>

<span class="prep">#r</span> <span class="s">@&quot;mscorlib&quot;</span>
<span class="prep">#r</span> <span class="s">@&quot;System.Runtime&quot;</span> <span class="c">// in my GAC</span>
<span class="prep">#r</span> <span class="s">@&quot;DLLs/Google.Protobuf.dll&quot;</span> <span class="c">// from https://www.nuget.org/packages/Google.Protobuf</span>
<span class="prep">#r</span> <span class="s">@&quot;DLLs/KRPC.Client.dll&quot;</span> <span class="c">// from kRPC 0.2.1 (in the client folder)</span>
</code></pre></td>
</tr>
</table>
<h2><a name="Connecting-to-the-Server" class="anchor" href="#Connecting-to-the-Server">Connecting to the Server</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">connection</span> <span class="o">=</span> <span class="k">new</span> <span class="i">KRPC</span><span class="o">.</span><span class="i">Client</span><span class="o">.</span><span class="i">Connection</span> (<span class="i">name</span><span class="o">=</span> <span class="s">&quot;FSI Example&quot;</span>)
</code></pre></td>
</tr>
</table>
<h2><a name="Interacting-with-the-Server-version-information" class="anchor" href="#Interacting-with-the-Server-version-information">Interacting with the Server (version information)</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span class="i">KRPC</span><span class="o">.</span><span class="i">Client</span><span class="o">.</span><span class="i">Services</span><span class="o">.</span><span class="i">KRPC</span>
<span class="k">do</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="f">printfn</span> <span class="s">&quot;Version: </span><span class="pf">%A</span><span class="s">.&quot;</span> (<span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">connection</span><span class="o">.</span><span class="i">KRPC</span>()<span class="o">.</span><span class="i">GetStatus</span>()<span class="o">.</span><span class="i">Version</span>)
</code></pre></td>
</tr>
</table>
<h2><a name="Interacting-with-the-Server-name-of-active-vessel" class="anchor" href="#Interacting-with-the-Server-name-of-active-vessel">Interacting with the Server (name of active vessel)</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span class="i">KRPC</span><span class="o">.</span><span class="i">Client</span><span class="o">.</span><span class="i">Services</span><span class="o">.</span><span class="i">SpaceCenter</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">spacecenter</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 5)" onmouseover="showTip(event, 'fs1', 5)" class="i">connection</span><span class="o">.</span><span class="i">SpaceCenter</span> ()
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">vessel</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="i">spacecenter</span><span class="o">.</span><span class="i">ActiveVessel</span>
<span class="k">do</span> <span onmouseout="hideTip(event, 'fs2', 8)" onmouseover="showTip(event, 'fs2', 8)" class="f">printfn</span> <span class="s">&quot;Name of vessel: </span><span class="pf">%A</span><span class="s">.&quot;</span> (<span onmouseout="hideTip(event, 'fs4', 9)" onmouseover="showTip(event, 'fs4', 9)" class="i">vessel</span><span class="o">.</span><span class="i">Name</span>)
</code></pre></td>
</tr>
</table>
<h2><a name="Streaming-Data-from-the-Server-straight" class="anchor" href="#Streaming-Data-from-the-Server-straight">Streaming Data from the Server (straight)</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 10)" onmouseover="showTip(event, 'fs5', 10)" class="i">refframe</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 11)" onmouseover="showTip(event, 'fs4', 11)" class="i">vessel</span><span class="o">.</span><span class="i">Orbit</span><span class="o">.</span><span class="i">Body</span><span class="o">.</span><span class="i">ReferenceFrame</span>

<span class="c">/// Calculate Kerbin altitude in meters.</span>
<span class="c">/// Note: Assumes the reference frame is Kerbin.</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="f">altOfPos</span> (<span onmouseout="hideTip(event, 'fs7', 13)" onmouseover="showTip(event, 'fs7', 13)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="i">y</span>,<span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="i">z</span>) <span class="o">=</span>
  <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="f">sqrt</span>( <span onmouseout="hideTip(event, 'fs7', 17)" onmouseover="showTip(event, 'fs7', 17)" class="i">x</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs7', 18)" onmouseover="showTip(event, 'fs7', 18)" class="i">x</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs8', 19)" onmouseover="showTip(event, 'fs8', 19)" class="i">y</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs8', 20)" onmouseover="showTip(event, 'fs8', 20)" class="i">y</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs9', 21)" onmouseover="showTip(event, 'fs9', 21)" class="i">z</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs9', 22)" onmouseover="showTip(event, 'fs9', 22)" class="i">z</span> ) <span class="o">-</span> <span class="n">600000.</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 23)" onmouseover="showTip(event, 'fs11', 23)" class="i">pos0</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 24)" onmouseover="showTip(event, 'fs4', 24)" class="i">vessel</span><span class="o">.</span><span class="i">Position</span> <span onmouseout="hideTip(event, 'fs5', 25)" onmouseover="showTip(event, 'fs5', 25)" class="i">refframe</span>

<span class="k">do</span> <span onmouseout="hideTip(event, 'fs2', 26)" onmouseover="showTip(event, 'fs2', 26)" class="f">printfn</span> <span class="s">&quot;Altitude of position: </span><span class="pf">%.0f</span><span class="s">.&quot;</span> (<span onmouseout="hideTip(event, 'fs6', 27)" onmouseover="showTip(event, 'fs6', 27)" class="f">altOfPos</span> <span onmouseout="hideTip(event, 'fs11', 28)" onmouseover="showTip(event, 'fs11', 28)" class="i">pos0</span>)
</code></pre></td>
</tr>
</table>
<h2><a name="Streaming-Data-from-the-Server-lambda" class="anchor" href="#Streaming-Data-from-the-Server-lambda">Streaming Data from the Server (lambda)</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs12', 29)" onmouseover="showTip(event, 'fs12', 29)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 30)" onmouseover="showTip(event, 'fs13', 30)" class="i">Threading</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs12', 31)" onmouseover="showTip(event, 'fs12', 31)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 32)" onmouseover="showTip(event, 'fs14', 32)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 33)" onmouseover="showTip(event, 'fs15', 33)" class="i">Expressions</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs16', 34)" onmouseover="showTip(event, 'fs16', 34)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 35)" onmouseover="showTip(event, 'fs17', 35)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 36)" onmouseover="showTip(event, 'fs18', 36)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 37)" onmouseover="showTip(event, 'fs19', 37)" class="i">RuntimeHelpers</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 38)" onmouseover="showTip(event, 'fs20', 38)" class="i">LeafExpressionConverter</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 39)" onmouseover="showTip(event, 'fs21', 39)" class="i">positionstream</span><span class="o">:</span> <span class="i">KRPC</span><span class="o">.</span><span class="i">Client</span><span class="o">.</span><span class="i">Stream</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs22', 40)" onmouseover="showTip(event, 'fs22', 40)" class="i">float</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs22', 41)" onmouseover="showTip(event, 'fs22', 41)" class="i">float</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs22', 42)" onmouseover="showTip(event, 'fs22', 42)" class="i">float</span><span class="o">&gt;</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 43)" onmouseover="showTip(event, 'fs23', 43)" class="i">quotation</span> <span class="o">=</span> &lt;@ <span onmouseout="hideTip(event, 'fs4', 44)" onmouseover="showTip(event, 'fs4', 44)" class="i">vessel</span><span class="o">.</span><span class="i">Position</span> <span onmouseout="hideTip(event, 'fs5', 45)" onmouseover="showTip(event, 'fs5', 45)" class="i">refframe</span> @&gt;
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 46)" onmouseover="showTip(event, 'fs24', 46)" class="i">body</span> <span class="o">=</span>  <span onmouseout="hideTip(event, 'fs23', 47)" onmouseover="showTip(event, 'fs23', 47)" class="i">quotation</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 48)" onmouseover="showTip(event, 'fs25', 48)" class="f">QuotationToExpression</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 49)" onmouseover="showTip(event, 'fs26', 49)" class="i">lambda</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 50)" onmouseover="showTip(event, 'fs27', 50)" class="t">Expression</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 51)" onmouseover="showTip(event, 'fs28', 51)" class="f">Lambda</span>(<span onmouseout="hideTip(event, 'fs24', 52)" onmouseover="showTip(event, 'fs24', 52)" class="i">body</span>, <span onmouseout="hideTip(event, 'fs29', 53)" onmouseover="showTip(event, 'fs29', 53)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 54)" onmouseover="showTip(event, 'fs30', 54)" class="i">empty</span>)
    <span onmouseout="hideTip(event, 'fs1', 55)" onmouseover="showTip(event, 'fs1', 55)" class="i">connection</span><span class="o">.</span><span class="i">AddStream</span> <span onmouseout="hideTip(event, 'fs26', 56)" onmouseover="showTip(event, 'fs26', 56)" class="i">lambda</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 57)" onmouseover="showTip(event, 'fs31', 57)" class="f">getAltitude</span> () <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs21', 58)" onmouseover="showTip(event, 'fs21', 58)" class="i">positionstream</span><span class="o">.</span><span class="i">Get</span> () <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs6', 59)" onmouseover="showTip(event, 'fs6', 59)" class="f">altOfPos</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 60)" onmouseover="showTip(event, 'fs32', 60)" class="f">writeAltitude</span> <span onmouseout="hideTip(event, 'fs33', 61)" onmouseover="showTip(event, 'fs33', 61)" class="i">obj</span> <span class="o">=</span>
    <span class="k">do</span> <span onmouseout="hideTip(event, 'fs2', 62)" onmouseover="showTip(event, 'fs2', 62)" class="f">printfn</span> <span class="s">&quot;Altitude: </span><span class="pf">%7.1f</span><span class="s"> m.&quot;</span> (<span onmouseout="hideTip(event, 'fs31', 63)" onmouseover="showTip(event, 'fs31', 63)" class="f">getAltitude</span> ())

<span class="k">do</span> <span onmouseout="hideTip(event, 'fs32', 64)" onmouseover="showTip(event, 'fs32', 64)" class="f">writeAltitude</span> ()

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 65)" onmouseover="showTip(event, 'fs34', 65)" class="i">myTimer</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs35', 66)" onmouseover="showTip(event, 'fs35', 66)" class="t">Timer</span> (<span class="k">new</span> <span onmouseout="hideTip(event, 'fs36', 67)" onmouseover="showTip(event, 'fs36', 67)" class="t">TimerCallback</span> (<span onmouseout="hideTip(event, 'fs32', 68)" onmouseover="showTip(event, 'fs32', 68)" class="f">writeAltitude</span>), (), <span class="n">5000</span>, <span class="n">2500</span>)
<span class="c">// do myTimer.Dispose ()  // dispose will kill the timer</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val connection : obj<br /><br />Full name: Script.connection</div>
<div class="tip" id="fs2">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs3">val spacecenter : obj<br /><br />Full name: Script.spacecenter</div>
<div class="tip" id="fs4">val vessel : obj<br /><br />Full name: Script.vessel</div>
<div class="tip" id="fs5">val refframe : obj<br /><br />Full name: Script.refframe</div>
<div class="tip" id="fs6">val altOfPos : x:float * y:float * z:float -&gt; float<br /><br />Full name: Script.altOfPos<br /><em><br /><br />&#160;Calculate Kerbin altitude in meters.<br />&#160;Note: Assumes the reference frame is Kerbin.</em></div>
<div class="tip" id="fs7">val x : float</div>
<div class="tip" id="fs8">val y : float</div>
<div class="tip" id="fs9">val z : float</div>
<div class="tip" id="fs10">val sqrt : value:&#39;T -&gt; &#39;U (requires member Sqrt)<br /><br />Full name: Microsoft.FSharp.Core.Operators.sqrt</div>
<div class="tip" id="fs11">val pos0 : float * float * float<br /><br />Full name: Script.pos0</div>
<div class="tip" id="fs12">namespace System</div>
<div class="tip" id="fs13">namespace System.Threading</div>
<div class="tip" id="fs14">namespace System.Linq</div>
<div class="tip" id="fs15">namespace System.Linq.Expressions</div>
<div class="tip" id="fs16">namespace Microsoft</div>
<div class="tip" id="fs17">namespace Microsoft.FSharp</div>
<div class="tip" id="fs18">namespace Microsoft.FSharp.Linq</div>
<div class="tip" id="fs19">namespace Microsoft.FSharp.Linq.RuntimeHelpers</div>
<div class="tip" id="fs20">module LeafExpressionConverter<br /><br />from Microsoft.FSharp.Linq.RuntimeHelpers</div>
<div class="tip" id="fs21">val positionstream : obj<br /><br />Full name: Script.positionstream</div>
<div class="tip" id="fs22">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = System.Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs23">val quotation : Quotations.Expr&lt;obj&gt;</div>
<div class="tip" id="fs24">val body : Expression</div>
<div class="tip" id="fs25">val QuotationToExpression : Quotations.Expr -&gt; Expression<br /><br />Full name: Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.QuotationToExpression</div>
<div class="tip" id="fs26">val lambda : LambdaExpression</div>
<div class="tip" id="fs27">Multiple items<br />type Expression =<br />&#160;&#160;member CanReduce : bool<br />&#160;&#160;member NodeType : ExpressionType<br />&#160;&#160;member Reduce : unit -&gt; Expression<br />&#160;&#160;member ReduceAndCheck : unit -&gt; Expression<br />&#160;&#160;member ReduceExtensions : unit -&gt; Expression<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member Add : left:Expression * right:Expression -&gt; BinaryExpression + 1 overload<br />&#160;&#160;static member AddAssign : left:Expression * right:Expression -&gt; BinaryExpression + 2 overloads<br />&#160;&#160;static member AddAssignChecked : left:Expression * right:Expression -&gt; BinaryExpression + 2 overloads<br />&#160;&#160;...<br /><br />Full name: System.Linq.Expressions.Expression<br /><br />--------------------<br />type Expression&lt;&#39;TDelegate&gt; =<br />&#160;&#160;inherit LambdaExpression<br />&#160;&#160;member Compile : unit -&gt; &#39;TDelegate + 1 overload<br />&#160;&#160;member Update : body:Expression * parameters:IEnumerable&lt;ParameterExpression&gt; -&gt; Expression&lt;&#39;TDelegate&gt;<br /><br />Full name: System.Linq.Expressions.Expression&lt;_&gt;</div>
<div class="tip" id="fs28">Expression.Lambda(body: Expression, parameters: System.Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(body: Expression, [&lt;System.ParamArray&gt;] parameters: ParameterExpression []) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda&lt;&#39;TDelegate&gt;(body: Expression, parameters: System.Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : Expression&lt;&#39;TDelegate&gt;<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda&lt;&#39;TDelegate&gt;(body: Expression, [&lt;System.ParamArray&gt;] parameters: ParameterExpression []) : Expression&lt;&#39;TDelegate&gt;<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(body: Expression, name: string, parameters: System.Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(delegateType: System.Type, body: Expression, parameters: System.Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(delegateType: System.Type, body: Expression, [&lt;System.ParamArray&gt;] parameters: ParameterExpression []) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(body: Expression, tailCall: bool, parameters: System.Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(body: Expression, tailCall: bool, [&lt;System.ParamArray&gt;] parameters: ParameterExpression []) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda&lt;&#39;TDelegate&gt;(body: Expression, name: string, parameters: System.Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : Expression&lt;&#39;TDelegate&gt;<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs29">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs30">val empty&lt;&#39;T&gt; : seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.empty</div>
<div class="tip" id="fs31">val getAltitude : unit -&gt; float<br /><br />Full name: Script.getAltitude</div>
<div class="tip" id="fs32">val writeAltitude : obj:&#39;a -&gt; unit<br /><br />Full name: Script.writeAltitude</div>
<div class="tip" id="fs33">Multiple items<br />val obj : &#39;a<br /><br />--------------------<br />type obj = System.Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs34">val myTimer : Timer<br /><br />Full name: Script.myTimer</div>
<div class="tip" id="fs35">Multiple items<br />type Timer =<br />&#160;&#160;inherit MarshalByRefObject<br />&#160;&#160;new : callback:TimerCallback -&gt; Timer + 4 overloads<br />&#160;&#160;member Change : dueTime:int * period:int -&gt; bool + 3 overloads<br />&#160;&#160;member Dispose : unit -&gt; unit + 1 overload<br /><br />Full name: System.Threading.Timer<br /><br />--------------------<br />Timer(callback: TimerCallback) : unit<br />Timer(callback: TimerCallback, state: obj, dueTime: int, period: int) : unit<br />Timer(callback: TimerCallback, state: obj, dueTime: System.TimeSpan, period: System.TimeSpan) : unit<br />Timer(callback: TimerCallback, state: obj, dueTime: uint32, period: uint32) : unit<br />Timer(callback: TimerCallback, state: obj, dueTime: int64, period: int64) : unit</div>
<div class="tip" id="fs36">type TimerCallback =<br />&#160;&#160;delegate of obj -&gt; unit<br /><br />Full name: System.Threading.TimerCallback</div>

