<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">//Discriminated unions to represents the elements of a tense.</span>
<span class="k">type</span> <span class="t">Name</span> <span class="o">=</span> | <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="p">John</span> | <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="p">Galt</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">Verb</span> <span class="o">=</span> | <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="p">Is</span> | <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="p">Was</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">Mark</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="p">QuestionMark</span> | <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="p">ExclamationMark</span>

<span class="c">//We must use symbolic identifiers to represent Marks since union cases must</span>
<span class="c">//be uppercase identifiers. They are not function values!</span>
<span class="k">let</span> (<span class="o">?</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="p">QuestionMark</span>
<span class="k">let</span> (<span class="o">!</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="p">ExclamationMark</span>

<span class="c">//A function to represent a tense.</span>
<span class="c">//Please note that we must use QuestionMark instead of (?) in the pattern matching</span>
<span class="c">//because identifiers in pattern matching are mean to capture values, then when using (?)</span>
<span class="c">//it will behave like _</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="f">Who</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">a</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="i">b</span> <span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="i">c</span> <span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="i">d</span> <span class="o">=</span> 
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">b</span>,<span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="i">c</span>,<span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="i">d</span> <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs4', 20)" onmouseover="showTip(event, 'fs4', 20)" class="p">Is</span>, <span onmouseout="hideTip(event, 'fs1', 21)" onmouseover="showTip(event, 'fs1', 21)" class="p">John</span>, <span onmouseout="hideTip(event, 'fs2', 22)" onmouseover="showTip(event, 'fs2', 22)" class="p">Galt</span>, <span onmouseout="hideTip(event, 'fs7', 23)" onmouseover="showTip(event, 'fs7', 23)" class="p">QuestionMark</span> | <span onmouseout="hideTip(event, 'fs5', 24)" onmouseover="showTip(event, 'fs5', 24)" class="p">Was</span>, <span onmouseout="hideTip(event, 'fs1', 25)" onmouseover="showTip(event, 'fs1', 25)" class="p">John</span>, <span onmouseout="hideTip(event, 'fs2', 26)" onmouseover="showTip(event, 'fs2', 26)" class="p">Galt</span>, <span onmouseout="hideTip(event, 'fs7', 27)" onmouseover="showTip(event, 'fs7', 27)" class="p">QuestionMark</span> 
        <span class="k">-&gt;</span> <span class="s">&quot;John Galt is a fictional character in Ayn Rand&#39;s novel Atlas Shrugged.&quot;</span>
    | <span onmouseout="hideTip(event, 'fs4', 28)" onmouseover="showTip(event, 'fs4', 28)" class="p">Is</span>,_,_,_ | <span onmouseout="hideTip(event, 'fs5', 29)" onmouseover="showTip(event, 'fs5', 29)" class="p">Was</span>,_,_,_ 
        <span class="k">-&gt;</span> <span class="s">&quot;I will suggest you to Google or Bing that name.&quot;</span>

<span class="c">//The famous query, now a valid F# expression</span>
<span onmouseout="hideTip(event, 'fs9', 30)" onmouseover="showTip(event, 'fs9', 30)" class="f">Who</span> <span onmouseout="hideTip(event, 'fs4', 31)" onmouseover="showTip(event, 'fs4', 31)" class="p">Is</span> <span onmouseout="hideTip(event, 'fs1', 32)" onmouseover="showTip(event, 'fs1', 32)" class="p">John</span> <span onmouseout="hideTip(event, 'fs2', 33)" onmouseover="showTip(event, 'fs2', 33)" class="p">Galt</span> (<span class="o">?</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">union case Name.John: Name</div>
<div class="tip" id="fs2">union case Name.Galt: Name</div>
<div class="tip" id="fs3">type Verb =<br />&#160;&#160;| Is<br />&#160;&#160;| Was<br /><br />Full name: Script.Verb</div>
<div class="tip" id="fs4">union case Verb.Is: Verb</div>
<div class="tip" id="fs5">union case Verb.Was: Verb</div>
<div class="tip" id="fs6">type Mark =<br />&#160;&#160;| QuestionMark<br />&#160;&#160;| ExclamationMark<br /><br />Full name: Script.Mark</div>
<div class="tip" id="fs7">union case Mark.QuestionMark: Mark</div>
<div class="tip" id="fs8">union case Mark.ExclamationMark: Mark</div>
<div class="tip" id="fs9">val Who : a:Verb -&gt; b:Name -&gt; c:Name -&gt; d:Mark -&gt; string<br /><br />Full name: Script.Who</div>
<div class="tip" id="fs10">val a : Verb</div>
<div class="tip" id="fs11">val b : Name</div>
<div class="tip" id="fs12">val c : Name</div>
<div class="tip" id="fs13">val d : Mark</div>

