<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">BuilderExample</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>

<span class="c">//Example: nullable { ... } with combining functionality</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">NullableBuilder</span>() <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="f">hasValue</span> (<span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">a</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">Nullable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">a</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">HasValue</span> 
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="f">Return</span>(<span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="i">x</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="t">Nullable</span>(<span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="i">x</span>)
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="f">rest</span>) <span class="o">=</span> 
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs4', 18)" onmouseover="showTip(event, 'fs4', 18)" class="f">hasValue</span> <span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="i">x</span> <span class="k">with</span> 
        | <span class="k">false</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 20)" onmouseover="showTip(event, 'fs2', 20)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 21)" onmouseover="showTip(event, 'fs6', 21)" class="t">Nullable</span>() <span class="c">//.NET null object</span>
        | <span class="k">true</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="f">rest</span>(<span onmouseout="hideTip(event, 'fs12', 23)" onmouseover="showTip(event, 'fs12', 23)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 24)" onmouseover="showTip(event, 'fs14', 24)" class="i">Value</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 25)" onmouseover="showTip(event, 'fs15', 25)" class="i">nullable</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 26)" onmouseover="showTip(event, 'fs3', 26)" class="t">NullableBuilder</span>()

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 27)" onmouseover="showTip(event, 'fs16', 27)" class="i">test</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs15', 28)" onmouseover="showTip(event, 'fs15', 28)" class="i">nullable</span>{
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs17', 29)" onmouseover="showTip(event, 'fs17', 29)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 30)" onmouseover="showTip(event, 'fs2', 30)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 31)" onmouseover="showTip(event, 'fs6', 31)" class="t">Nullable</span>(<span class="n">3</span>) <span class="c">//&quot;let!&quot; calls builders Bind</span>
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs18', 32)" onmouseover="showTip(event, 'fs18', 32)" class="i">b</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 33)" onmouseover="showTip(event, 'fs2', 33)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 34)" onmouseover="showTip(event, 'fs6', 34)" class="t">Nullable</span>(<span class="n">5</span>) <span class="c">//&quot;let!&quot; calls builders Bind</span>

        <span class="c">//Inside computation expression(/monad): easy programming without Nullable-worries:</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 35)" onmouseover="showTip(event, 'fs19', 35)" class="i">mult</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 36)" onmouseover="showTip(event, 'fs17', 36)" class="i">a</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs18', 37)" onmouseover="showTip(event, 'fs18', 37)" class="i">b</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 38)" onmouseover="showTip(event, 'fs20', 38)" class="i">sum</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 39)" onmouseover="showTip(event, 'fs19', 39)" class="i">mult</span> <span class="o">+</span> <span class="n">1</span> 

        <span class="k">return</span> <span onmouseout="hideTip(event, 'fs20', 40)" onmouseover="showTip(event, 'fs20', 40)" class="i">sum</span> <span class="c">//&quot;return&quot; calls builders Return(x)</span>
    }
<span class="c">//val test : Nullable&lt;int&gt; = 16</span>


<span class="c">//------------------------------------------------------------------------------</span>
<span class="c">// using e.g.</span>
<span class="c">//     let! b = System.Nullable() </span>
<span class="c">// would cause to return:</span>
<span class="c">//     val test : System.Nullable()</span>

<span class="c">// own { ...} syntax is made with implementing Builder-class</span>
<span class="c">// and (some of) the &quot;interface&quot; members</span>

<span class="c">//------------------------------------------------</span>
<span class="c">// Further reading:</span>
<span class="c">// &quot;Interface&quot; described in: http://msdn.microsoft.com/en-us/library/dd233182.aspx</span>
<span class="c">// More info: http://blogs.msdn.com/b/dsyme/archive/2007/09/22/some-details-on-f-computation-expressions-aka-monadic-or-workflow-syntax.aspx</span>

<span class="c">// Check also Reactive Extensions 2.0 with F# observe { ... }:</span>
<span class="c">// https://github.com/panesofglass/FSharp.Reactive/blob/master/src/Observable.fs</span>

<span class="c">// and: http://fssnip.net/tags/computation+builder and http://fssnip.net/tags/monad</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module BuilderExample</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">Multiple items<br />type NullableBuilder =<br />&#160;&#160;new : unit -&gt; NullableBuilder<br />&#160;&#160;member Bind : x:Nullable&lt;&#39;a&gt; * rest:(&#39;a -&gt; Nullable&lt;&#39;b&gt;) -&gt; Nullable&lt;&#39;b&gt; (requires default constructor and value type and &#39;a :&gt; ValueType and default constructor and value type and &#39;b :&gt; ValueType)<br />&#160;&#160;member Return : x:&#39;c -&gt; Nullable&lt;&#39;c&gt; (requires default constructor and value type and &#39;c :&gt; ValueType)<br /><br />Full name: BuilderExample.NullableBuilder<br /><br />--------------------<br />new : unit -&gt; NullableBuilder</div>
<div class="tip" id="fs4">val hasValue : (Nullable&lt;&#39;a&gt; -&gt; bool) (requires default constructor and value type and &#39;a :&gt; ValueType)</div>
<div class="tip" id="fs5">val a : Nullable&lt;&#39;a&gt; (requires default constructor and value type and &#39;a :&gt; ValueType)</div>
<div class="tip" id="fs6">Multiple items<br />type Nullable =<br />&#160;&#160;static member Compare&lt;&#39;T&gt; : n1:Nullable&lt;&#39;T&gt; * n2:Nullable&lt;&#39;T&gt; -&gt; int<br />&#160;&#160;static member Equals&lt;&#39;T&gt; : n1:Nullable&lt;&#39;T&gt; * n2:Nullable&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;static member GetUnderlyingType : nullableType:Type -&gt; Type<br /><br />Full name: System.Nullable<br /><br />--------------------<br />type Nullable&lt;&#39;T (requires default constructor and value type and &#39;T :&gt; ValueType)&gt; =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : value:&#39;T -&gt; Nullable&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;member Equals : other:obj -&gt; bool<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetValueOrDefault : unit -&gt; &#39;T + 1 overload<br />&#160;&#160;&#160;&#160;member HasValue : bool<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;&#160;&#160;member Value : &#39;T<br />&#160;&#160;end<br /><br />Full name: System.Nullable&lt;_&gt;<br /><br />--------------------<br />Nullable()<br />Nullable(value: &#39;T) : unit</div>
<div class="tip" id="fs7">property Nullable.HasValue: bool</div>
<div class="tip" id="fs8">val t : NullableBuilder</div>
<div class="tip" id="fs9">member NullableBuilder.Return : x:&#39;c -&gt; Nullable&lt;&#39;c&gt; (requires default constructor and value type and &#39;c :&gt; ValueType)<br /><br />Full name: BuilderExample.NullableBuilder.Return</div>
<div class="tip" id="fs10">val x : &#39;c (requires default constructor and value type and &#39;c :&gt; ValueType)</div>
<div class="tip" id="fs11">member NullableBuilder.Bind : x:Nullable&lt;&#39;a&gt; * rest:(&#39;a -&gt; Nullable&lt;&#39;b&gt;) -&gt; Nullable&lt;&#39;b&gt; (requires default constructor and value type and &#39;a :&gt; ValueType and default constructor and value type and &#39;b :&gt; ValueType)<br /><br />Full name: BuilderExample.NullableBuilder.Bind</div>
<div class="tip" id="fs12">val x : Nullable&lt;&#39;a&gt; (requires default constructor and value type and &#39;a :&gt; ValueType)</div>
<div class="tip" id="fs13">val rest : (&#39;a -&gt; Nullable&lt;&#39;b&gt;) (requires default constructor and value type and &#39;a :&gt; ValueType and default constructor and value type and &#39;b :&gt; ValueType)</div>
<div class="tip" id="fs14">property Nullable.Value: &#39;a</div>
<div class="tip" id="fs15">val nullable : NullableBuilder<br /><br />Full name: BuilderExample.nullable</div>
<div class="tip" id="fs16">val test : Nullable&lt;int&gt;<br /><br />Full name: BuilderExample.test</div>
<div class="tip" id="fs17">val a : int</div>
<div class="tip" id="fs18">val b : int</div>
<div class="tip" id="fs19">val mult : int</div>
<div class="tip" id="fs20">val sum : int</div>

