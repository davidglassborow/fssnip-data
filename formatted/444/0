<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">//let equalsOpt (x : #System.IEquatable&lt;&#39;T&gt;) (y : #System.IEquatable&lt;&#39;T&gt;) = </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">equalsOpt</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">T</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">IEquatable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">x</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>) (<span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">y</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="f">Equals</span>(<span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">y</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="f">compareOpt</span> (<span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">x</span> <span class="o">:</span> #<span onmouseout="hideTip(event, 'fs2', 11)" onmouseover="showTip(event, 'fs2', 11)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="t">IComparable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="i">y</span> <span class="o">:</span> #<span onmouseout="hideTip(event, 'fs2', 14)" onmouseover="showTip(event, 'fs2', 14)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="t">IComparable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 16)" onmouseover="showTip(event, 'fs8', 16)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="f">CompareTo</span>(<span onmouseout="hideTip(event, 'fs10', 18)" onmouseover="showTip(event, 'fs10', 18)" class="i">y</span>)
    
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="f">compareOpt</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">T</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs2', 20)" onmouseover="showTip(event, 'fs2', 20)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 21)" onmouseover="showTip(event, 'fs9', 21)" class="t">IComparable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="i">x</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>) (<span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="i">y</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 24)" onmouseover="showTip(event, 'fs13', 24)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 25)" onmouseover="showTip(event, 'fs15', 25)" class="f">CompareTo</span>(<span onmouseout="hideTip(event, 'fs14', 26)" onmouseover="showTip(event, 'fs14', 26)" class="i">y</span>)


[&lt;<span onmouseout="hideTip(event, 'fs16', 27)" onmouseover="showTip(event, 'fs16', 27)" class="t">CustomEquality</span>; <span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="t">CustomComparison</span>&gt;]
[&lt;<span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="t">Struct</span>&gt;]
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs19', 30)" onmouseover="showTip(event, 'fs19', 30)" class="t">MStruct</span> <span class="o">=</span>
    <span class="k">val</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs20', 31)" onmouseover="showTip(event, 'fs20', 31)" class="v">v</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs21', 32)" onmouseover="showTip(event, 'fs21', 32)" class="t">int</span>
    <span class="k">new</span> (<span onmouseout="hideTip(event, 'fs22', 33)" onmouseover="showTip(event, 'fs22', 33)" class="i">v</span>) <span class="o">=</span> { <span onmouseout="hideTip(event, 'fs20', 34)" onmouseover="showTip(event, 'fs20', 34)" class="v">v</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 35)" onmouseover="showTip(event, 'fs22', 35)" class="i">v</span> }

    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs23', 36)" onmouseover="showTip(event, 'fs23', 36)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 37)" onmouseover="showTip(event, 'fs24', 37)" class="f">Equals</span>(<span onmouseout="hideTip(event, 'fs25', 38)" onmouseover="showTip(event, 'fs25', 38)" class="i">yobj</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs26', 39)" onmouseover="showTip(event, 'fs26', 39)" class="f">printfn</span> <span class="s">&quot;Object.Equals&quot;</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs25', 40)" onmouseover="showTip(event, 'fs25', 40)" class="i">yobj</span> <span class="k">with</span>
        | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="t">MStruct</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs27', 42)" onmouseover="showTip(event, 'fs27', 42)" class="i">y</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs1', 43)" onmouseover="showTip(event, 'fs1', 43)" class="f">equalsOpt</span> <span onmouseout="hideTip(event, 'fs23', 44)" onmouseover="showTip(event, 'fs23', 44)" class="i">x</span> <span onmouseout="hideTip(event, 'fs27', 45)" onmouseover="showTip(event, 'fs27', 45)" class="i">y</span>
        | _ <span class="k">-&gt;</span> <span class="k">false</span>
    
    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs23', 46)" onmouseover="showTip(event, 'fs23', 46)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 47)" onmouseover="showTip(event, 'fs28', 47)" class="f">GetHashCode</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 48)" onmouseover="showTip(event, 'fs29', 48)" class="f">hash</span> <span onmouseout="hideTip(event, 'fs23', 49)" onmouseover="showTip(event, 'fs23', 49)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 50)" onmouseover="showTip(event, 'fs20', 50)" class="v">v</span>
    <span class="k">static</span> <span class="k">member</span> <span class="i">op_Equality</span>(<span onmouseout="hideTip(event, 'fs30', 51)" onmouseover="showTip(event, 'fs30', 51)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs31', 52)" onmouseover="showTip(event, 'fs31', 52)" class="i">y</span>) <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs26', 53)" onmouseover="showTip(event, 'fs26', 53)" class="f">printfn</span> <span class="s">&quot;op_Equality&quot;</span>
        <span onmouseout="hideTip(event, 'fs1', 54)" onmouseover="showTip(event, 'fs1', 54)" class="f">equalsOpt</span> <span onmouseout="hideTip(event, 'fs30', 55)" onmouseover="showTip(event, 'fs30', 55)" class="i">x</span> <span onmouseout="hideTip(event, 'fs31', 56)" onmouseover="showTip(event, 'fs31', 56)" class="i">y</span>
    <span class="k">static</span> <span class="k">member</span> (<span class="o">==</span>) (<span onmouseout="hideTip(event, 'fs32', 57)" onmouseover="showTip(event, 'fs32', 57)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs33', 58)" onmouseover="showTip(event, 'fs33', 58)" class="i">y</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 59)" onmouseover="showTip(event, 'fs1', 59)" class="f">equalsOpt</span> <span onmouseout="hideTip(event, 'fs32', 60)" onmouseover="showTip(event, 'fs32', 60)" class="i">x</span> <span onmouseout="hideTip(event, 'fs33', 61)" onmouseover="showTip(event, 'fs33', 61)" class="i">y</span>
    <span class="c">//static member (=) (x, y) = equalsOpt x y</span>

    <span class="k">static</span> <span class="k">member</span> <span class="i">op_LessThan</span>(<span onmouseout="hideTip(event, 'fs34', 62)" onmouseover="showTip(event, 'fs34', 62)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs35', 63)" onmouseover="showTip(event, 'fs35', 63)" class="i">y</span>) <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs26', 64)" onmouseover="showTip(event, 'fs26', 64)" class="f">printfn</span> <span class="s">&quot;op_LessThan&quot;</span>
        <span onmouseout="hideTip(event, 'fs12', 65)" onmouseover="showTip(event, 'fs12', 65)" class="f">compareOpt</span> <span onmouseout="hideTip(event, 'fs34', 66)" onmouseover="showTip(event, 'fs34', 66)" class="i">x</span> <span onmouseout="hideTip(event, 'fs35', 67)" onmouseover="showTip(event, 'fs35', 67)" class="i">y</span>
    <span class="c">//static member (&lt;)(x, y) = compareOpt x y</span>

    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs2', 68)" onmouseover="showTip(event, 'fs2', 68)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 69)" onmouseover="showTip(event, 'fs3', 69)" class="t">IEquatable</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs19', 70)" onmouseover="showTip(event, 'fs19', 70)" class="t">MStruct</span><span class="o">&gt;</span> <span class="k">with</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs23', 71)" onmouseover="showTip(event, 'fs23', 71)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 72)" onmouseover="showTip(event, 'fs36', 72)" class="f">Equals</span>(<span onmouseout="hideTip(event, 'fs27', 73)" onmouseover="showTip(event, 'fs27', 73)" class="i">y</span>) <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs26', 74)" onmouseover="showTip(event, 'fs26', 74)" class="f">printfn</span> <span class="s">&quot;IEquatable&lt;MStruct&gt;.Equals&quot;</span>
            <span onmouseout="hideTip(event, 'fs23', 75)" onmouseover="showTip(event, 'fs23', 75)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 76)" onmouseover="showTip(event, 'fs20', 76)" class="v">v</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 77)" onmouseover="showTip(event, 'fs27', 77)" class="i">y</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 78)" onmouseover="showTip(event, 'fs20', 78)" class="v">v</span>

    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs2', 79)" onmouseover="showTip(event, 'fs2', 79)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 80)" onmouseover="showTip(event, 'fs9', 80)" class="t">IComparable</span> <span class="k">with</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs23', 81)" onmouseover="showTip(event, 'fs23', 81)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 82)" onmouseover="showTip(event, 'fs37', 82)" class="f">CompareTo</span>(<span onmouseout="hideTip(event, 'fs25', 83)" onmouseover="showTip(event, 'fs25', 83)" class="i">yobj</span>) <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs26', 84)" onmouseover="showTip(event, 'fs26', 84)" class="f">printfn</span> <span class="s">&quot;IComparable.CompareTo&quot;</span>
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs25', 85)" onmouseover="showTip(event, 'fs25', 85)" class="i">yobj</span> <span class="k">with</span>
            | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs19', 86)" onmouseover="showTip(event, 'fs19', 86)" class="t">MStruct</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs27', 87)" onmouseover="showTip(event, 'fs27', 87)" class="i">y</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs38', 88)" onmouseover="showTip(event, 'fs38', 88)" class="f">compare</span> <span onmouseout="hideTip(event, 'fs23', 89)" onmouseover="showTip(event, 'fs23', 89)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 90)" onmouseover="showTip(event, 'fs20', 90)" class="v">v</span> <span onmouseout="hideTip(event, 'fs27', 91)" onmouseover="showTip(event, 'fs27', 91)" class="i">y</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 92)" onmouseover="showTip(event, 'fs20', 92)" class="v">v</span>
            | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs39', 93)" onmouseover="showTip(event, 'fs39', 93)" class="f">invalidArg</span> <span class="s">&quot;yobj&quot;</span> <span class="s">&quot;cannot compare values of different types&quot;</span>

    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs2', 94)" onmouseover="showTip(event, 'fs2', 94)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 95)" onmouseover="showTip(event, 'fs9', 95)" class="t">IComparable</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs19', 96)" onmouseover="showTip(event, 'fs19', 96)" class="t">MStruct</span><span class="o">&gt;</span> <span class="k">with</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs23', 97)" onmouseover="showTip(event, 'fs23', 97)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 98)" onmouseover="showTip(event, 'fs40', 98)" class="f">CompareTo</span>(<span onmouseout="hideTip(event, 'fs27', 99)" onmouseover="showTip(event, 'fs27', 99)" class="i">y</span>) <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs26', 100)" onmouseover="showTip(event, 'fs26', 100)" class="f">printfn</span> <span class="s">&quot;IComparable&lt;MStruct&gt;.CompareTo&quot;</span>
            <span onmouseout="hideTip(event, 'fs38', 101)" onmouseover="showTip(event, 'fs38', 101)" class="f">compare</span> <span onmouseout="hideTip(event, 'fs23', 102)" onmouseover="showTip(event, 'fs23', 102)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 103)" onmouseover="showTip(event, 'fs20', 103)" class="v">v</span> <span onmouseout="hideTip(event, 'fs27', 104)" onmouseover="showTip(event, 'fs27', 104)" class="i">y</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 105)" onmouseover="showTip(event, 'fs20', 105)" class="v">v</span>
                    

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 106)" onmouseover="showTip(event, 'fs41', 106)" class="i">x</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs19', 107)" onmouseover="showTip(event, 'fs19', 107)" class="t">MStruct</span>(<span class="n">2</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 108)" onmouseover="showTip(event, 'fs42', 108)" class="i">y</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs19', 109)" onmouseover="showTip(event, 'fs19', 109)" class="t">MStruct</span>(<span class="n">2</span>)
<span class="c">//let x = new MStruct(2) :&gt; System.IEquatable&lt;_&gt;</span>
<span class="c">//let y = new MStruct(2) :&gt; System.IEquatable&lt;_&gt;</span>

<span onmouseout="hideTip(event, 'fs12', 110)" onmouseover="showTip(event, 'fs12', 110)" class="f">compareOpt</span> <span onmouseout="hideTip(event, 'fs41', 111)" onmouseover="showTip(event, 'fs41', 111)" class="i">x</span> <span onmouseout="hideTip(event, 'fs42', 112)" onmouseover="showTip(event, 'fs42', 112)" class="i">y</span>
<span onmouseout="hideTip(event, 'fs1', 113)" onmouseover="showTip(event, 'fs1', 113)" class="f">equalsOpt</span> <span onmouseout="hideTip(event, 'fs41', 114)" onmouseover="showTip(event, 'fs41', 114)" class="i">x</span> <span onmouseout="hideTip(event, 'fs42', 115)" onmouseover="showTip(event, 'fs42', 115)" class="i">y</span>
<span onmouseout="hideTip(event, 'fs19', 116)" onmouseover="showTip(event, 'fs19', 116)" class="t">MStruct</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 117)" onmouseover="showTip(event, 'fs43', 117)" class="i">op_Equality</span>(<span onmouseout="hideTip(event, 'fs41', 118)" onmouseover="showTip(event, 'fs41', 118)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs42', 119)" onmouseover="showTip(event, 'fs42', 119)" class="i">y</span>)   <span class="c">// Calls op_Equality then specialized Equatable&lt;MStruct&gt;</span>
<span onmouseout="hideTip(event, 'fs41', 120)" onmouseover="showTip(event, 'fs41', 120)" class="i">x</span> <span class="o">==</span> <span onmouseout="hideTip(event, 'fs42', 121)" onmouseover="showTip(event, 'fs42', 121)" class="i">y</span>                      <span class="c">// Calls (==) then specialized Equatable&lt;MStruct&gt;</span>
<span onmouseout="hideTip(event, 'fs41', 122)" onmouseover="showTip(event, 'fs41', 122)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs42', 123)" onmouseover="showTip(event, 'fs42', 123)" class="i">y</span>                       <span class="c">// Always calls the slower Object.Equals first instead of the custom op_Equality and then specialized IEquatable&lt;MStruct&gt;.Equals</span>
<span onmouseout="hideTip(event, 'fs41', 124)" onmouseover="showTip(event, 'fs41', 124)" class="i">x</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs42', 125)" onmouseover="showTip(event, 'fs42', 125)" class="i">y</span>                       <span class="c">// Always calls the slower IComparable.CompareTo instead of then specialized IComparable&lt;MStruct&gt;.CompareTo</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val equalsOpt : x:&#39;T -&gt; y:&#39;T -&gt; bool (requires &#39;T :&gt; System.IEquatable&lt;&#39;T&gt;)<br /><br />Full name: Script.equalsOpt</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">type IEquatable&lt;&#39;T&gt; =<br />&#160;&#160;member Equals : other:&#39;T -&gt; bool<br /><br />Full name: System.IEquatable&lt;_&gt;</div>
<div class="tip" id="fs4">val x : &#39;T (requires &#39;T :&gt; System.IEquatable&lt;&#39;T&gt;)</div>
<div class="tip" id="fs5">val y : &#39;T (requires &#39;T :&gt; System.IEquatable&lt;&#39;T&gt;)</div>
<div class="tip" id="fs6">System.IEquatable.Equals(other: &#39;T) : bool</div>
<div class="tip" id="fs7">val compareOpt : x:#System.IComparable&lt;&#39;b&gt; -&gt; y:&#39;b -&gt; int (requires &#39;b :&gt; System.IComparable&lt;&#39;b&gt;)<br /><br />Full name: Script.compareOpt</div>
<div class="tip" id="fs8">val x : #System.IComparable&lt;&#39;b&gt; (requires &#39;b :&gt; System.IComparable&lt;&#39;b&gt;)</div>
<div class="tip" id="fs9">Multiple items<br />type IComparable&lt;&#39;T&gt; =<br />&#160;&#160;member CompareTo : other:&#39;T -&gt; int<br /><br />Full name: System.IComparable&lt;_&gt;<br /><br />--------------------<br />type IComparable =<br />&#160;&#160;member CompareTo : obj:obj -&gt; int<br /><br />Full name: System.IComparable</div>
<div class="tip" id="fs10">val y : &#39;b (requires &#39;b :&gt; System.IComparable&lt;&#39;b&gt;)</div>
<div class="tip" id="fs11">System.IComparable.CompareTo(other: &#39;b) : int</div>
<div class="tip" id="fs12">val compareOpt : x:&#39;T -&gt; y:&#39;T -&gt; int (requires &#39;T :&gt; System.IComparable&lt;&#39;T&gt;)<br /><br />Full name: Script.compareOpt</div>
<div class="tip" id="fs13">val x : &#39;T (requires &#39;T :&gt; System.IComparable&lt;&#39;T&gt;)</div>
<div class="tip" id="fs14">val y : &#39;T (requires &#39;T :&gt; System.IComparable&lt;&#39;T&gt;)</div>
<div class="tip" id="fs15">System.IComparable.CompareTo(other: &#39;T) : int</div>
<div class="tip" id="fs16">Multiple items<br />type CustomEqualityAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; CustomEqualityAttribute<br /><br />Full name: Microsoft.FSharp.Core.CustomEqualityAttribute<br /><br />--------------------<br />new : unit -&gt; CustomEqualityAttribute</div>
<div class="tip" id="fs17">Multiple items<br />type CustomComparisonAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; CustomComparisonAttribute<br /><br />Full name: Microsoft.FSharp.Core.CustomComparisonAttribute<br /><br />--------------------<br />new : unit -&gt; CustomComparisonAttribute</div>
<div class="tip" id="fs18">Multiple items<br />type StructAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; StructAttribute<br /><br />Full name: Microsoft.FSharp.Core.StructAttribute<br /><br />--------------------<br />new : unit -&gt; StructAttribute</div>
<div class="tip" id="fs19">Multiple items<br />type MStruct =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;interface IComparable&lt;MStruct&gt;<br />&#160;&#160;&#160;&#160;interface IComparable<br />&#160;&#160;&#160;&#160;interface IEquatable&lt;MStruct&gt;<br />&#160;&#160;&#160;&#160;new : v:int -&gt; MStruct<br />&#160;&#160;&#160;&#160;val mutable v: int<br />&#160;&#160;&#160;&#160;override Equals : yobj:obj -&gt; bool<br />&#160;&#160;&#160;&#160;override GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;static member ( = ) : x:&#39;c * y:&#39;c -&gt; bool (requires &#39;c :&gt; IEquatable&lt;&#39;c&gt;)<br />&#160;&#160;&#160;&#160;static member ( == ) : x:&#39;b * y:&#39;b -&gt; bool (requires &#39;b :&gt; IEquatable&lt;&#39;b&gt;)<br />&#160;&#160;&#160;&#160;static member ( &lt; ) : x:&#39;a * y:&#39;a -&gt; int (requires &#39;a :&gt; IComparable&lt;&#39;a&gt;)<br />&#160;&#160;end<br /><br />Full name: Script.MStruct<br /><br />--------------------<br />MStruct()<br />new : v:int -&gt; MStruct</div>
<div class="tip" id="fs20">MStruct.v: int</div>
<div class="tip" id="fs21">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs22">val v : int</div>
<div class="tip" id="fs23">val x : byref&lt;MStruct&gt;</div>
<div class="tip" id="fs24">override MStruct.Equals : yobj:obj -&gt; bool<br /><br />Full name: Script.MStruct.Equals</div>
<div class="tip" id="fs25">val yobj : obj</div>
<div class="tip" id="fs26">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs27">val y : MStruct</div>
<div class="tip" id="fs28">override MStruct.GetHashCode : unit -&gt; int<br /><br />Full name: Script.MStruct.GetHashCode</div>
<div class="tip" id="fs29">val hash : obj:&#39;T -&gt; int (requires equality)<br /><br />Full name: Microsoft.FSharp.Core.Operators.hash</div>
<div class="tip" id="fs30">val x : &#39;c (requires &#39;c :&gt; System.IEquatable&lt;&#39;c&gt;)</div>
<div class="tip" id="fs31">val y : &#39;c (requires &#39;c :&gt; System.IEquatable&lt;&#39;c&gt;)</div>
<div class="tip" id="fs32">val x : &#39;b (requires &#39;b :&gt; System.IEquatable&lt;&#39;b&gt;)</div>
<div class="tip" id="fs33">val y : &#39;b (requires &#39;b :&gt; System.IEquatable&lt;&#39;b&gt;)</div>
<div class="tip" id="fs34">val x : &#39;a (requires &#39;a :&gt; System.IComparable&lt;&#39;a&gt;)</div>
<div class="tip" id="fs35">val y : &#39;a (requires &#39;a :&gt; System.IComparable&lt;&#39;a&gt;)</div>
<div class="tip" id="fs36">override MStruct.Equals : y:MStruct -&gt; bool<br /><br />Full name: Script.MStruct.Equals</div>
<div class="tip" id="fs37">override MStruct.CompareTo : yobj:obj -&gt; int<br /><br />Full name: Script.MStruct.CompareTo</div>
<div class="tip" id="fs38">val compare : e1:&#39;T -&gt; e2:&#39;T -&gt; int (requires comparison)<br /><br />Full name: Microsoft.FSharp.Core.Operators.compare</div>
<div class="tip" id="fs39">val invalidArg : argumentName:string -&gt; message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.invalidArg</div>
<div class="tip" id="fs40">override MStruct.CompareTo : y:MStruct -&gt; int<br /><br />Full name: Script.MStruct.CompareTo</div>
<div class="tip" id="fs41">val x : MStruct<br /><br />Full name: Script.x</div>
<div class="tip" id="fs42">val y : MStruct<br /><br />Full name: Script.y</div>
<div class="tip" id="fs43">static member MStruct.( = ) : x:&#39;c * y:&#39;c -&gt; bool (requires &#39;c :&gt; System.IEquatable&lt;&#39;c&gt;)</div>

