<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">RDotNet</span>
<span class="k">open</span> <span class="i">RProvider</span>
<span class="k">open</span> <span class="i">RProvider</span><span class="o">.</span><span class="i">``base``</span>
<span class="k">open</span> <span class="i">RProvider</span><span class="o">.</span><span class="i">stats</span>

<span class="k">let</span> (<span class="o">?</span>) (<span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">x</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">SymbolicExpression</span>) <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">name</span> <span class="o">=</span> 
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">nameLookup</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs2', 6)" onmouseover="showTip(event, 'fs2', 6)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="f">GetAttribute</span>(<span class="s">&quot;names&quot;</span>)<span class="o">.</span><span class="f">AsList</span>() 
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="f">mapi</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">i</span> <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="i">n</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">n</span><span class="o">.</span><span class="i">GetValue</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="i">string</span><span class="o">&gt;</span>(), <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">i</span>)  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="f">dict</span>
  <span onmouseout="hideTip(event, 'fs2', 16)" onmouseover="showTip(event, 'fs2', 16)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="f">AsList</span>()<span class="o">.</span>[<span onmouseout="hideTip(event, 'fs5', 18)" onmouseover="showTip(event, 'fs5', 18)" class="i">nameLookup</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs4', 19)" onmouseover="showTip(event, 'fs4', 19)" class="i">name</span>]]

<span class="c">// call R function</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="i">x</span> <span class="o">=</span> <span class="n">0.1</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="i">f</span> <span class="o">=</span> <span class="i">R</span><span class="o">.</span><span class="i">eval</span>(<span class="i">R</span><span class="o">.</span><span class="i">parse</span>(<span class="i">text</span><span class="o">=</span><span class="s">&quot;function(a){(a - 2)^2}&quot;</span>))
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="i">minX</span> <span class="o">=</span> <span class="i">R</span><span class="o">.</span><span class="i">optim</span>(<span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs15', 24)" onmouseover="showTip(event, 'fs15', 24)" class="i">f</span>)

<span class="c">// access results</span>
<span onmouseout="hideTip(event, 'fs16', 25)" onmouseover="showTip(event, 'fs16', 25)" class="i">minX</span><span class="o">?</span><span class="i">counts</span>
<span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="i">minX</span><span class="o">?</span><span class="i">value</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace RDotNet</div>
<div class="tip" id="fs2">val x : SymbolicExpression</div>
<div class="tip" id="fs3">type SymbolicExpression =<br />&#160;&#160;inherit SafeHandle<br />&#160;&#160;member Engine : REngine<br />&#160;&#160;member Equals : other:SymbolicExpression -&gt; bool + 1 overload<br />&#160;&#160;member GetAttribute : attributeName:string -&gt; SymbolicExpression<br />&#160;&#160;member GetAttributeNames : unit -&gt; string[]<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetMetaObject : parameter:Expression -&gt; DynamicMetaObject<br />&#160;&#160;member IsInvalid : bool<br />&#160;&#160;member IsProtected : bool<br />&#160;&#160;member Preserve : unit -&gt; unit<br />&#160;&#160;member SetAttribute : attributeName:string * value:SymbolicExpression -&gt; unit<br />&#160;&#160;...<br /><br />Full name: RDotNet.SymbolicExpression</div>
<div class="tip" id="fs4">val name : &#39;a (requires equality)</div>
<div class="tip" id="fs5">val nameLookup : System.Collections.Generic.IDictionary&lt;&#39;a,int&gt; (requires equality)</div>
<div class="tip" id="fs6">SymbolicExpression.GetAttribute(attributeName: string) : SymbolicExpression</div>
<div class="tip" id="fs7">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs8">val mapi : mapping:(int -&gt; &#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.mapi</div>
<div class="tip" id="fs9">val i : int</div>
<div class="tip" id="fs10">val n : SymbolicExpression</div>
<div class="tip" id="fs11">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs12">val dict : keyValuePairs:seq&lt;&#39;Key * &#39;Value&gt; -&gt; System.Collections.Generic.IDictionary&lt;&#39;Key,&#39;Value&gt; (requires equality)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.dict</div>
<div class="tip" id="fs13">(extension) SymbolicExpression.AsList() : GenericVector</div>
<div class="tip" id="fs14">val x : float<br /><br />Full name: Script.x</div>
<div class="tip" id="fs15">val f : obj<br /><br />Full name: Script.f</div>
<div class="tip" id="fs16">val minX : SymbolicExpression<br /><br />Full name: Script.minX</div>

