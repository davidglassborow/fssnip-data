<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// VS2010: This works as expected (PRE-SP1)</span>
<span class="c">// Note:  The types are mutually recursive with &quot;and&quot;</span>
<span class="c">//        plus we&#39;re NOT using the implicit constructor</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">SuperType</span>() <span class="o">=</span>
  <span class="k">abstract</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="f">Foo</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">int</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="t">int</span>
  <span class="k">default</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="f">Foo</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">a</span> <span class="o">+</span> <span class="n">1</span>

<span class="k">and</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="t">SubType1</span>() <span class="o">=</span>
  <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs1', 10)" onmouseover="showTip(event, 'fs1', 10)" class="t">SuperType</span>()
  <span class="k">override</span> <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="f">Foo</span> <span onmouseout="hideTip(event, 'fs6', 13)" onmouseover="showTip(event, 'fs6', 13)" class="i">a</span> <span class="o">=</span> <span class="k">base</span><span class="o">.</span><span class="f">Foo</span>(<span onmouseout="hideTip(event, 'fs6', 14)" onmouseover="showTip(event, 'fs6', 14)" class="i">a</span>)

<span class="c">// VS2010-SP1: Works as expected</span>
<span class="c">// Note:  The types are not mutually recursive with &quot;and&quot;</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="t">SuperType2</span>() <span class="o">=</span>
  <span class="k">abstract</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="f">Foo</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 17)" onmouseover="showTip(event, 'fs3', 17)" class="t">int</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 18)" onmouseover="showTip(event, 'fs3', 18)" class="t">int</span>
  <span class="k">default</span> <span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="f">Foo</span> <span onmouseout="hideTip(event, 'fs6', 21)" onmouseover="showTip(event, 'fs6', 21)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 22)" onmouseover="showTip(event, 'fs6', 22)" class="i">a</span> <span class="o">+</span> <span class="n">1</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="t">SubType2</span> <span class="o">=</span>
  <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs10', 24)" onmouseover="showTip(event, 'fs10', 24)" class="t">SuperType2</span>
  <span class="k">new</span> () <span class="o">=</span> { <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs10', 25)" onmouseover="showTip(event, 'fs10', 25)" class="t">SuperType2</span>() }
  <span class="k">override</span> <span onmouseout="hideTip(event, 'fs15', 26)" onmouseover="showTip(event, 'fs15', 26)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 27)" onmouseover="showTip(event, 'fs16', 27)" class="f">Foo</span> <span onmouseout="hideTip(event, 'fs6', 28)" onmouseover="showTip(event, 'fs6', 28)" class="i">a</span> <span class="o">=</span> <span class="k">base</span><span class="o">.</span><span class="f">Foo</span>(<span onmouseout="hideTip(event, 'fs6', 29)" onmouseover="showTip(event, 'fs6', 29)" class="i">a</span>)

<span class="c">// VS2010-SP1: Works as expected</span>
<span class="c">// Note:  We&#39;re using the implicit constructor</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs17', 30)" onmouseover="showTip(event, 'fs17', 30)" class="t">SuperType3</span>() <span class="o">=</span>
  <span class="k">abstract</span> <span onmouseout="hideTip(event, 'fs18', 31)" onmouseover="showTip(event, 'fs18', 31)" class="f">Foo</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 32)" onmouseover="showTip(event, 'fs3', 32)" class="t">int</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 33)" onmouseover="showTip(event, 'fs3', 33)" class="t">int</span>
  <span class="k">default</span> <span onmouseout="hideTip(event, 'fs19', 34)" onmouseover="showTip(event, 'fs19', 34)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 35)" onmouseover="showTip(event, 'fs20', 35)" class="f">Foo</span> <span onmouseout="hideTip(event, 'fs6', 36)" onmouseover="showTip(event, 'fs6', 36)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 37)" onmouseover="showTip(event, 'fs6', 37)" class="i">a</span> <span class="o">+</span> <span class="n">1</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs21', 38)" onmouseover="showTip(event, 'fs21', 38)" class="t">SubType3</span>() <span class="o">=</span>
  <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs17', 39)" onmouseover="showTip(event, 'fs17', 39)" class="t">SuperType3</span>()
  <span class="k">override</span> <span onmouseout="hideTip(event, 'fs22', 40)" onmouseover="showTip(event, 'fs22', 40)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 41)" onmouseover="showTip(event, 'fs23', 41)" class="f">Foo</span> <span onmouseout="hideTip(event, 'fs6', 42)" onmouseover="showTip(event, 'fs6', 42)" class="i">a</span> <span class="o">=</span> <span class="k">base</span><span class="o">.</span><span class="f">Foo</span>(<span onmouseout="hideTip(event, 'fs6', 43)" onmouseover="showTip(event, 'fs6', 43)" class="i">a</span>)

<span class="c">// VS2010-SP1: This will not work as expected</span>
<span class="c">// Note:  The types are mutually recursive with &quot;and&quot;</span>
<span class="c">//        plus we&#39;re NOT using the implicit constructor</span>
<span class="c">//        this causes the base reference to fail to compile</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs24', 44)" onmouseover="showTip(event, 'fs24', 44)" class="t">SuperType4</span>() <span class="o">=</span>
  <span class="k">abstract</span> <span onmouseout="hideTip(event, 'fs25', 45)" onmouseover="showTip(event, 'fs25', 45)" class="f">Foo</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 46)" onmouseover="showTip(event, 'fs3', 46)" class="t">int</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 47)" onmouseover="showTip(event, 'fs3', 47)" class="t">int</span>
  <span class="k">default</span> <span onmouseout="hideTip(event, 'fs26', 48)" onmouseover="showTip(event, 'fs26', 48)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 49)" onmouseover="showTip(event, 'fs27', 49)" class="f">Foo</span> <span onmouseout="hideTip(event, 'fs6', 50)" onmouseover="showTip(event, 'fs6', 50)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 51)" onmouseover="showTip(event, 'fs6', 51)" class="i">a</span> <span class="o">+</span> <span class="n">1</span>

<span class="k">and</span> <span onmouseout="hideTip(event, 'fs28', 52)" onmouseover="showTip(event, 'fs28', 52)" class="t">SubType4</span> <span class="o">=</span>
  <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs24', 53)" onmouseover="showTip(event, 'fs24', 53)" class="t">SuperType4</span>
  <span class="k">new</span> () <span class="o">=</span> { <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs24', 54)" onmouseover="showTip(event, 'fs24', 54)" class="t">SuperType4</span>() }

  <span class="c">// With visual studio SP1 this will not compile</span>
  <span class="c">// with the following error:</span>
  <span class="c">// </span>
  <span class="c">// Error	1	&#39;base&#39; values may only be used to make direct calls </span>
  <span class="c">// to the base implementations of overridden members	&lt;file&gt; &lt;line&gt;</span>
  <span class="k">override</span> <span onmouseout="hideTip(event, 'fs29', 55)" onmouseover="showTip(event, 'fs29', 55)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 56)" onmouseover="showTip(event, 'fs30', 56)" class="f">Foo</span> <span onmouseout="hideTip(event, 'fs6', 57)" onmouseover="showTip(event, 'fs6', 57)" class="i">a</span> <span class="o">=</span> <span class="k">base</span><span class="o">.</span><span class="f">Foo</span>(<span onmouseout="hideTip(event, 'fs6', 58)" onmouseover="showTip(event, 'fs6', 58)" class="i">a</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />type SuperType =<br />&#160;&#160;new : unit -&gt; SuperType<br />&#160;&#160;abstract member Foo : int -&gt; int<br />&#160;&#160;override Foo : a:int -&gt; int<br /><br />Full name: Script.SuperType<br /><br />--------------------<br />new : unit -&gt; SuperType</div>
<div class="tip" id="fs2">abstract member SuperType.Foo : int -&gt; int<br /><br />Full name: Script.SuperType.Foo</div>
<div class="tip" id="fs3">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs4">val x : SuperType</div>
<div class="tip" id="fs5">override SuperType.Foo : a:int -&gt; int<br /><br />Full name: Script.SuperType.Foo</div>
<div class="tip" id="fs6">val a : int</div>
<div class="tip" id="fs7">Multiple items<br />type SubType1 =<br />&#160;&#160;inherit SuperType<br />&#160;&#160;new : unit -&gt; SubType1<br />&#160;&#160;override Foo : a:int -&gt; int<br /><br />Full name: Script.SubType1<br /><br />--------------------<br />new : unit -&gt; SubType1</div>
<div class="tip" id="fs8">val x : SubType1</div>
<div class="tip" id="fs9">override SubType1.Foo : a:int -&gt; int<br /><br />Full name: Script.SubType1.Foo</div>
<div class="tip" id="fs10">Multiple items<br />type SuperType2 =<br />&#160;&#160;new : unit -&gt; SuperType2<br />&#160;&#160;abstract member Foo : int -&gt; int<br />&#160;&#160;override Foo : a:int -&gt; int<br /><br />Full name: Script.SuperType2<br /><br />--------------------<br />new : unit -&gt; SuperType2</div>
<div class="tip" id="fs11">abstract member SuperType2.Foo : int -&gt; int<br /><br />Full name: Script.SuperType2.Foo</div>
<div class="tip" id="fs12">val x : SuperType2</div>
<div class="tip" id="fs13">override SuperType2.Foo : a:int -&gt; int<br /><br />Full name: Script.SuperType2.Foo</div>
<div class="tip" id="fs14">Multiple items<br />type SubType2 =<br />&#160;&#160;inherit SuperType2<br />&#160;&#160;new : unit -&gt; SubType2<br />&#160;&#160;override Foo : a:int -&gt; int<br /><br />Full name: Script.SubType2<br /><br />--------------------<br />new : unit -&gt; SubType2</div>
<div class="tip" id="fs15">val x : SubType2</div>
<div class="tip" id="fs16">override SubType2.Foo : a:int -&gt; int<br /><br />Full name: Script.SubType2.Foo</div>
<div class="tip" id="fs17">Multiple items<br />type SuperType3 =<br />&#160;&#160;new : unit -&gt; SuperType3<br />&#160;&#160;abstract member Foo : int -&gt; int<br />&#160;&#160;override Foo : a:int -&gt; int<br /><br />Full name: Script.SuperType3<br /><br />--------------------<br />new : unit -&gt; SuperType3</div>
<div class="tip" id="fs18">abstract member SuperType3.Foo : int -&gt; int<br /><br />Full name: Script.SuperType3.Foo</div>
<div class="tip" id="fs19">val x : SuperType3</div>
<div class="tip" id="fs20">override SuperType3.Foo : a:int -&gt; int<br /><br />Full name: Script.SuperType3.Foo</div>
<div class="tip" id="fs21">Multiple items<br />type SubType3 =<br />&#160;&#160;inherit SuperType3<br />&#160;&#160;new : unit -&gt; SubType3<br />&#160;&#160;override Foo : a:int -&gt; int<br /><br />Full name: Script.SubType3<br /><br />--------------------<br />new : unit -&gt; SubType3</div>
<div class="tip" id="fs22">val x : SubType3</div>
<div class="tip" id="fs23">override SubType3.Foo : a:int -&gt; int<br /><br />Full name: Script.SubType3.Foo</div>
<div class="tip" id="fs24">Multiple items<br />type SuperType4 =<br />&#160;&#160;new : unit -&gt; SuperType4<br />&#160;&#160;abstract member Foo : int -&gt; int<br />&#160;&#160;override Foo : a:int -&gt; int<br /><br />Full name: Script.SuperType4<br /><br />--------------------<br />new : unit -&gt; SuperType4</div>
<div class="tip" id="fs25">abstract member SuperType4.Foo : int -&gt; int<br /><br />Full name: Script.SuperType4.Foo</div>
<div class="tip" id="fs26">val x : SuperType4</div>
<div class="tip" id="fs27">override SuperType4.Foo : a:int -&gt; int<br /><br />Full name: Script.SuperType4.Foo</div>
<div class="tip" id="fs28">Multiple items<br />type SubType4 =<br />&#160;&#160;inherit SuperType4<br />&#160;&#160;new : unit -&gt; SubType4<br />&#160;&#160;override Foo : a:int -&gt; int<br /><br />Full name: Script.SubType4<br /><br />--------------------<br />new : unit -&gt; SubType4</div>
<div class="tip" id="fs29">val x : SubType4</div>
<div class="tip" id="fs30">override SubType4.Foo : a:int -&gt; int<br /><br />Full name: Script.SubType4.Foo</div>

