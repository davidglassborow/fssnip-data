<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
<span class="l">154: </span>
<span class="l">155: </span>
<span class="l">156: </span>
<span class="l">157: </span>
<span class="l">158: </span>
<span class="l">159: </span>
<span class="l">160: </span>
<span class="l">161: </span>
<span class="l">162: </span>
<span class="l">163: </span>
<span class="l">164: </span>
<span class="l">165: </span>
<span class="l">166: </span>
<span class="l">167: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">//  EXAMPLES:</span>
<span class="c">//</span>
<span class="c">//    http://localhost:8888/people/chefs/Jimbo?eggs=2&amp;cheese=4</span>
<span class="c">//    http://localhost:8888/people/chefs/Jimbo?cheese=4&amp;eggs=2</span>
<span class="c">//    http://localhost:8888/people/chefs/Jimbo?cheese=4&amp;eggs=2&amp;bacon=5</span>
<span class="c">//</span>
<span class="c">//    C:\GitHub\HttpListenerRouter&gt;fsi restForFree.fsx</span>
<span class="c">//</span>
<span class="c">//    Help from:</span>
<span class="c">//    https://www.branded3.com/blog/creating-a-simple-http-server-with-f</span>

<span class="prep">#I</span> <span class="s">@&quot;C:\GitHub\HttpListenerRouter&quot;</span>
<span class="prep">#r</span> <span class="s">@&quot;FParsec.1.0.2\lib\net40-client\FParsecCS.dll&quot;</span>
<span class="prep">#r</span> <span class="s">@&quot;FParsec.1.0.2\lib\net40-client\FParsec.dll&quot;</span>

<span class="c">////////////////////////////////////////////////////////////////////////////////</span>

<span class="k">module</span> <span class="t">parsingStuff</span> <span class="o">=</span>
  <span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>; <span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">FParsec</span>

  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">``Stop playing games and give me my result, parsec!``</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="f">someParser</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">input</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="f">run</span> <span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="f">someParser</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">input</span>
    <span class="o">|&gt;</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="p">Success</span>(<span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">result</span>,_,_) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">result</span>
    | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="t">Unchecked</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="i">defaultof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>    <span class="c">//Equivalent to C#&#39;s default(T),</span>
                                      <span class="c">//since both pattern matches need same return type</span>
  <span class="k">let</span> (<span class="o">-=&gt;</span>) <span onmouseout="hideTip(event, 'fs5', 14)" onmouseover="showTip(event, 'fs5', 14)" class="i">input</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="f">someParser</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs3', 16)" onmouseover="showTip(event, 'fs3', 16)" class="f">``Stop playing games and give me my result, parsec!``</span> <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="f">someParser</span> <span onmouseout="hideTip(event, 'fs5', 18)" onmouseover="showTip(event, 'fs5', 18)" class="i">input</span>

  <span class="k">type</span> <span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="t">url</span> <span class="o">=</span> {
    <span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="i">pathString</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="t">string</span>
    <span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="i">queryString</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="t">string</span> }

  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 24)" onmouseover="showTip(event, 'fs16', 24)" class="f">not</span> <span class="o">=</span> (<span class="o">&lt;&gt;</span>)

  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 25)" onmouseover="showTip(event, 'fs17', 25)" class="f">psplitBy</span> <span onmouseout="hideTip(event, 'fs18', 26)" onmouseover="showTip(event, 'fs18', 26)" class="i">char</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 27)" onmouseover="showTip(event, 'fs19', 27)" class="f">keep</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 28)" onmouseover="showTip(event, 'fs20', 28)" class="f">manySatisfy</span>(<span onmouseout="hideTip(event, 'fs16', 29)" onmouseover="showTip(event, 'fs16', 29)" class="f">not</span> <span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="i">char</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="f">toss</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 32)" onmouseover="showTip(event, 'fs22', 32)" class="f">pstring</span>(<span onmouseout="hideTip(event, 'fs14', 33)" onmouseover="showTip(event, 'fs14', 33)" class="f">string</span>(<span onmouseout="hideTip(event, 'fs18', 34)" onmouseover="showTip(event, 'fs18', 34)" class="i">char</span>))
    <span onmouseout="hideTip(event, 'fs23', 35)" onmouseover="showTip(event, 'fs23', 35)" class="f">sepBy</span>(<span onmouseout="hideTip(event, 'fs19', 36)" onmouseover="showTip(event, 'fs19', 36)" class="f">keep</span>)(<span onmouseout="hideTip(event, 'fs21', 37)" onmouseover="showTip(event, 'fs21', 37)" class="f">toss</span>)

  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 38)" onmouseover="showTip(event, 'fs24', 38)" class="f">pathParser</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 39)" onmouseover="showTip(event, 'fs17', 39)" class="f">psplitBy</span>(<span class="s">&#39;/&#39;</span>)

  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 40)" onmouseover="showTip(event, 'fs25', 40)" class="f">keyOrVal</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 41)" onmouseover="showTip(event, 'fs26', 41)" class="f">many</span>(<span onmouseout="hideTip(event, 'fs27', 42)" onmouseover="showTip(event, 'fs27', 42)" class="f">noneOf</span> <span class="s">&quot;&amp;=&quot;</span>) <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs28', 43)" onmouseover="showTip(event, 'fs28', 43)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 44)" onmouseover="showTip(event, 'fs29', 44)" class="f">Concat</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 45)" onmouseover="showTip(event, 'fs30', 45)" class="f">keyValuePair</span> <span class="o">=</span>  <span onmouseout="hideTip(event, 'fs25', 46)" onmouseover="showTip(event, 'fs25', 46)" class="f">keyOrVal</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs22', 47)" onmouseover="showTip(event, 'fs22', 47)" class="f">pstring</span> <span class="s">&quot;=&quot;</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span onmouseout="hideTip(event, 'fs25', 48)" onmouseover="showTip(event, 'fs25', 48)" class="f">keyOrVal</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 49)" onmouseover="showTip(event, 'fs31', 49)" class="f">queryParser</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 50)" onmouseover="showTip(event, 'fs23', 50)" class="f">sepBy</span>(<span onmouseout="hideTip(event, 'fs30', 51)" onmouseover="showTip(event, 'fs30', 51)" class="f">keyValuePair</span>)(<span onmouseout="hideTip(event, 'fs22', 52)" onmouseover="showTip(event, 'fs22', 52)" class="f">pstring</span> <span class="s">&quot;&amp;&quot;</span>)

  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 53)" onmouseover="showTip(event, 'fs32', 53)" class="f">preamble</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 54)" onmouseover="showTip(event, 'fs33', 54)" class="i">parse</span> {
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs22', 55)" onmouseover="showTip(event, 'fs22', 55)" class="f">pstring</span> <span class="s">&quot;http&quot;</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs34', 56)" onmouseover="showTip(event, 'fs34', 56)" class="f">ignore</span>                                       <span class="c">//Proto</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs35', 57)" onmouseover="showTip(event, 'fs35', 57)" class="f">skipString</span> <span class="s">&quot;://&quot;</span>                                                <span class="c">//</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs20', 58)" onmouseover="showTip(event, 'fs20', 58)" class="f">manySatisfy</span> (<span class="k">function</span> <span class="s">&#39;:&#39;</span>|<span class="s">&#39;/&#39;</span> <span class="k">-&gt;</span> <span class="k">false</span> | _ <span class="k">-&gt;</span> <span class="k">true</span>) <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs34', 59)" onmouseover="showTip(event, 'fs34', 59)" class="f">ignore</span>  <span class="c">//host</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs22', 60)" onmouseover="showTip(event, 'fs22', 60)" class="f">pstring</span>(<span class="s">&quot;:&quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs20', 61)" onmouseover="showTip(event, 'fs20', 61)" class="f">manySatisfy</span>(<span onmouseout="hideTip(event, 'fs36', 62)" onmouseover="showTip(event, 'fs36', 62)" class="t">Char</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 63)" onmouseover="showTip(event, 'fs37', 63)" class="f">IsDigit</span>) <span class="o">&lt;|&gt;%</span> <span class="s">&quot;&quot;</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs34', 64)" onmouseover="showTip(event, 'fs34', 64)" class="f">ignore</span> } <span class="c">//port</span>

  <span class="c">//Naive, I know, I don&#39;t care</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 65)" onmouseover="showTip(event, 'fs38', 65)" class="f">urlParser</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 66)" onmouseover="showTip(event, 'fs33', 66)" class="i">parse</span> {
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs32', 67)" onmouseover="showTip(event, 'fs32', 67)" class="f">preamble</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs39', 68)" onmouseover="showTip(event, 'fs39', 68)" class="i">pathString</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 69)" onmouseover="showTip(event, 'fs22', 69)" class="f">pstring</span>(<span class="s">&quot;/&quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs20', 70)" onmouseover="showTip(event, 'fs20', 70)" class="f">manySatisfy</span>(<span onmouseout="hideTip(event, 'fs16', 71)" onmouseover="showTip(event, 'fs16', 71)" class="f">not</span> <span class="s">&#39;?&#39;</span>) <span class="o">&lt;|&gt;%</span> <span class="s">&quot;&quot;</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs40', 72)" onmouseover="showTip(event, 'fs40', 72)" class="i">queryString</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 73)" onmouseover="showTip(event, 'fs22', 73)" class="f">pstring</span>(<span class="s">&quot;?&quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs41', 74)" onmouseover="showTip(event, 'fs41', 74)" class="f">restOfLine</span>(<span class="k">true</span>) <span class="o">&lt;|&gt;%</span> <span class="s">&quot;&quot;</span>
    <span class="k">return</span> {
      <span onmouseout="hideTip(event, 'fs39', 75)" onmouseover="showTip(event, 'fs39', 75)" class="i">pathString</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 76)" onmouseover="showTip(event, 'fs39', 76)" class="i">pathString</span>
      <span onmouseout="hideTip(event, 'fs40', 77)" onmouseover="showTip(event, 'fs40', 77)" class="i">queryString</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 78)" onmouseover="showTip(event, 'fs40', 78)" class="i">queryString</span> } }

<span class="c">////////////////////////////////////////////////////////////////////////////////</span>

<span class="k">module</span> <span class="t">serverStuff</span> <span class="o">=</span>
  <span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 79)" onmouseover="showTip(event, 'fs1', 79)" class="i">System</span>; <span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 80)" onmouseover="showTip(event, 'fs1', 80)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 81)" onmouseover="showTip(event, 'fs42', 81)" class="i">Net</span>; <span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 82)" onmouseover="showTip(event, 'fs1', 82)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 83)" onmouseover="showTip(event, 'fs43', 83)" class="i">Text</span>

  <span class="c">//Eliminate .NET line noise,</span>
  <span class="k">type</span> <span onmouseout="hideTip(event, 'fs44', 84)" onmouseover="showTip(event, 'fs44', 84)" class="t">HttpListenerResponse</span> <span class="k">with</span>
    <span class="c">//How hard is it to print a string Microsoft, really?!</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs45', 85)" onmouseover="showTip(event, 'fs45', 85)" class="i">me</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 86)" onmouseover="showTip(event, 'fs46', 86)" class="f">WriteAsync</span> <span onmouseout="hideTip(event, 'fs47', 87)" onmouseover="showTip(event, 'fs47', 87)" class="i">str</span> <span class="o">=</span>
      <span onmouseout="hideTip(event, 'fs48', 88)" onmouseover="showTip(event, 'fs48', 88)" class="t">Encoding</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 89)" onmouseover="showTip(event, 'fs49', 89)" class="i">ASCII</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 90)" onmouseover="showTip(event, 'fs50', 90)" class="f">GetBytes</span>(<span onmouseout="hideTip(event, 'fs51', 91)" onmouseover="showTip(event, 'fs51', 91)" class="i">s</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs47', 92)" onmouseover="showTip(event, 'fs47', 92)" class="i">str</span>)
      <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs45', 93)" onmouseover="showTip(event, 'fs45', 93)" class="i">me</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 94)" onmouseover="showTip(event, 'fs52', 94)" class="i">OutputStream</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 95)" onmouseover="showTip(event, 'fs53', 95)" class="f">AsyncWrite</span>

  <span class="c">//Config</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 96)" onmouseover="showTip(event, 'fs54', 96)" class="i">root</span>,<span onmouseout="hideTip(event, 'fs55', 97)" onmouseover="showTip(event, 'fs55', 97)" class="i">host</span> <span class="o">=</span> <span class="s">@&quot;C:\GitHub\Nancy&quot;</span>,<span class="s">&quot;http://localhost:8888/&quot;</span>

  <span class="c">//.NET init stuff</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 98)" onmouseover="showTip(event, 'fs56', 98)" class="i">initListener</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 99)" onmouseover="showTip(event, 'fs57', 99)" class="i">l</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs58', 100)" onmouseover="showTip(event, 'fs58', 100)" class="t">HttpListener</span>()
    <span onmouseout="hideTip(event, 'fs57', 101)" onmouseover="showTip(event, 'fs57', 101)" class="i">l</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 102)" onmouseover="showTip(event, 'fs59', 102)" class="i">Prefixes</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 103)" onmouseover="showTip(event, 'fs60', 103)" class="f">Add</span> <span onmouseout="hideTip(event, 'fs55', 104)" onmouseover="showTip(event, 'fs55', 104)" class="i">host</span>
    <span onmouseout="hideTip(event, 'fs57', 105)" onmouseover="showTip(event, 'fs57', 105)" class="i">l</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 106)" onmouseover="showTip(event, 'fs61', 106)" class="f">Start</span>()
    <span onmouseout="hideTip(event, 'fs57', 107)" onmouseover="showTip(event, 'fs57', 107)" class="i">l</span>

  <span class="c">//As it turns out, Async.* was written by the smart ones at Microsoft</span>
  <span class="c">//However, HttpListener uses &#39;the IAsyncResult design pattern&#39;</span>
  <span class="c">//https://msdn.microsoft.com/en-us/library/system.iasyncresult(v=vs.110).aspx</span>
  <span class="c">//The quote, however, comes from</span>
  <span class="c">//https://msdn.microsoft.com/en-us/library/ms228963(v=vs.110).aspx</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs62', 108)" onmouseover="showTip(event, 'fs62', 108)" class="i">listen</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 109)" onmouseover="showTip(event, 'fs57', 109)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs56', 110)" onmouseover="showTip(event, 'fs56', 110)" class="i">initListener</span>  <span class="c">//Called once upon definition of &#39;listen&#39;</span>
    <span onmouseout="hideTip(event, 'fs63', 111)" onmouseover="showTip(event, 'fs63', 111)" class="i">async</span> {               <span class="c">//Is accessed repeatedly, however</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs64', 112)" onmouseover="showTip(event, 'fs64', 112)" class="f">b</span>,<span onmouseout="hideTip(event, 'fs65', 113)" onmouseover="showTip(event, 'fs65', 113)" class="f">e</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs57', 114)" onmouseover="showTip(event, 'fs57', 114)" class="i">l</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 115)" onmouseover="showTip(event, 'fs66', 115)" class="f">BeginGetContext</span>, <span onmouseout="hideTip(event, 'fs57', 116)" onmouseover="showTip(event, 'fs57', 116)" class="i">l</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs67', 117)" onmouseover="showTip(event, 'fs67', 117)" class="f">EndGetContext</span>
      <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs68', 118)" onmouseover="showTip(event, 'fs68', 118)" class="i">context</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs69', 119)" onmouseover="showTip(event, 'fs69', 119)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 120)" onmouseover="showTip(event, 'fs70', 120)" class="f">FromBeginEnd</span>(<span onmouseout="hideTip(event, 'fs64', 121)" onmouseover="showTip(event, 'fs64', 121)" class="f">b</span>, <span onmouseout="hideTip(event, 'fs65', 122)" onmouseover="showTip(event, 'fs65', 122)" class="f">e</span>)
      <span class="k">return</span> <span onmouseout="hideTip(event, 'fs68', 123)" onmouseover="showTip(event, 'fs68', 123)" class="i">context</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 124)" onmouseover="showTip(event, 'fs71', 124)" class="i">Request</span>,<span onmouseout="hideTip(event, 'fs68', 125)" onmouseover="showTip(event, 'fs68', 125)" class="i">context</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 126)" onmouseover="showTip(event, 'fs72', 126)" class="i">Response</span> }

  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs73', 127)" onmouseover="showTip(event, 'fs73', 127)" class="f">serverStuff</span> <span onmouseout="hideTip(event, 'fs74', 128)" onmouseover="showTip(event, 'fs74', 128)" class="f">requestHandler</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs69', 129)" onmouseover="showTip(event, 'fs69', 129)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs75', 130)" onmouseover="showTip(event, 'fs75', 130)" class="f">Start</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs63', 131)" onmouseover="showTip(event, 'fs63', 131)" class="i">async</span> {                    <span class="c">//Non-blocking</span>
      <span class="k">while</span> <span class="k">true</span> <span class="k">do</span>
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs76', 132)" onmouseover="showTip(event, 'fs76', 132)" class="i">request</span>, <span onmouseout="hideTip(event, 'fs77', 133)" onmouseover="showTip(event, 'fs77', 133)" class="i">response</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs62', 134)" onmouseover="showTip(event, 'fs62', 134)" class="i">listen</span>       <span class="c">//Get the context asynchronously</span>
        <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs74', 135)" onmouseover="showTip(event, 'fs74', 135)" class="f">requestHandler</span> <span onmouseout="hideTip(event, 'fs76', 136)" onmouseover="showTip(event, 'fs76', 136)" class="i">request</span> <span onmouseout="hideTip(event, 'fs77', 137)" onmouseover="showTip(event, 'fs77', 137)" class="i">response</span> } <span class="c">//Handle the context asynchronously</span>
    <span onmouseout="hideTip(event, 'fs78', 138)" onmouseover="showTip(event, 'fs78', 138)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 139)" onmouseover="showTip(event, 'fs79', 139)" class="f">ReadLine</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs34', 140)" onmouseover="showTip(event, 'fs34', 140)" class="f">ignore</span>              <span class="c">//Retain console for printfn</span>

<span class="c">////////////////////////////////////////////////////////////////////////////////</span>

<span class="k">module</span> <span class="t">httpStuff</span> <span class="o">=</span>
  <span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 141)" onmouseover="showTip(event, 'fs1', 141)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 142)" onmouseover="showTip(event, 'fs42', 142)" class="i">Net</span>; <span class="k">open</span> <span onmouseout="hideTip(event, 'fs80', 143)" onmouseover="showTip(event, 'fs80', 143)" class="i">serverStuff</span>

  <span class="c">//Parens for sake of type inferencer confused by partial application</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs81', 144)" onmouseover="showTip(event, 'fs81', 144)" class="f">httpStuff</span> (<span onmouseout="hideTip(event, 'fs82', 145)" onmouseover="showTip(event, 'fs82', 145)" class="f">restHandler</span>)(<span onmouseout="hideTip(event, 'fs83', 146)" onmouseover="showTip(event, 'fs83', 146)" class="i">request</span>)(<span onmouseout="hideTip(event, 'fs77', 147)" onmouseover="showTip(event, 'fs77', 147)" class="i">response</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs44', 148)" onmouseover="showTip(event, 'fs44', 148)" class="t">HttpListenerResponse</span>) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs63', 149)" onmouseover="showTip(event, 'fs63', 149)" class="i">async</span> {
      <span onmouseout="hideTip(event, 'fs77', 150)" onmouseover="showTip(event, 'fs77', 150)" class="i">response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs84', 151)" onmouseover="showTip(event, 'fs84', 151)" class="i">StatusCode</span>  <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs85', 152)" onmouseover="showTip(event, 'fs85', 152)" class="f">int</span> <span onmouseout="hideTip(event, 'fs86', 153)" onmouseover="showTip(event, 'fs86', 153)" class="t">HttpStatusCode</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs87', 154)" onmouseover="showTip(event, 'fs87', 154)" class="i">OK</span>   <span class="c">//Response packaging</span>
      <span onmouseout="hideTip(event, 'fs77', 155)" onmouseover="showTip(event, 'fs77', 155)" class="i">response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs88', 156)" onmouseover="showTip(event, 'fs88', 156)" class="i">ContentType</span> <span class="o">&lt;-</span> <span class="s">&quot;text/html&quot;</span>             <span class="c">//Response packaging</span>
      <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs89', 157)" onmouseover="showTip(event, 'fs89', 157)" class="i">mainOutput</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs82', 158)" onmouseover="showTip(event, 'fs82', 158)" class="f">restHandler</span> <span onmouseout="hideTip(event, 'fs83', 159)" onmouseover="showTip(event, 'fs83', 159)" class="i">request</span> <span onmouseout="hideTip(event, 'fs77', 160)" onmouseover="showTip(event, 'fs77', 160)" class="i">response</span>
      <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs77', 161)" onmouseover="showTip(event, 'fs77', 161)" class="i">response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs90', 162)" onmouseover="showTip(event, 'fs90', 162)" class="f">WriteAsync</span> <span onmouseout="hideTip(event, 'fs89', 163)" onmouseover="showTip(event, 'fs89', 163)" class="i">mainOutput</span>
      <span onmouseout="hideTip(event, 'fs77', 164)" onmouseover="showTip(event, 'fs77', 164)" class="i">response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs91', 165)" onmouseover="showTip(event, 'fs91', 165)" class="f">Close</span>() }                               <span class="c">//Resource management :-)</span>
                                                       <span class="c">//TODO: Find IDisposables</span>
                                                       <span class="c">//      and &#39;use&#39; them.</span>

<span class="c">////////////////////////////////////////////////////////////////////////////////</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs92', 166)" onmouseover="showTip(event, 'fs92', 166)" class="i">parsingStuff</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs80', 167)" onmouseover="showTip(event, 'fs80', 167)" class="i">serverStuff</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs93', 168)" onmouseover="showTip(event, 'fs93', 168)" class="i">httpStuff</span>

<span class="c">//Have to sort tuples by key alphabetically, lest there be no match! :-(</span>
<span class="k">let</span> (|<span class="p">SORTED</span>|) <span class="o">=</span> <span class="p">SORTED</span> <span onmouseout="hideTip(event, 'fs94', 169)" onmouseover="showTip(event, 'fs94', 169)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs95', 170)" onmouseover="showTip(event, 'fs95', 170)" class="f">sortBy</span> <span onmouseout="hideTip(event, 'fs96', 171)" onmouseover="showTip(event, 'fs96', 171)" class="f">fst</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs97', 172)" onmouseover="showTip(event, 'fs97', 172)" class="f">pretty</span> <span onmouseout="hideTip(event, 'fs98', 173)" onmouseover="showTip(event, 'fs98', 173)" class="i">s</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs99', 174)" onmouseover="showTip(event, 'fs99', 174)" class="f">sprintf</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs98', 175)" onmouseover="showTip(event, 'fs98', 175)" class="i">s</span>

<span onmouseout="hideTip(event, 'fs100', 176)" onmouseover="showTip(event, 'fs100', 176)" class="f">serverStuff</span>(<span onmouseout="hideTip(event, 'fs101', 177)" onmouseover="showTip(event, 'fs101', 177)" class="f">httpStuff</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs102', 178)" onmouseover="showTip(event, 'fs102', 178)" class="i">request</span> <span onmouseout="hideTip(event, 'fs103', 179)" onmouseover="showTip(event, 'fs103', 179)" class="i">response</span> <span class="k">-&gt;</span>

  <span class="c">//Thank you Microsoft, but I will parse the url myself</span>
  <span onmouseout="hideTip(event, 'fs102', 180)" onmouseover="showTip(event, 'fs102', 180)" class="i">request</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs104', 181)" onmouseover="showTip(event, 'fs104', 181)" class="i">Url</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs105', 182)" onmouseover="showTip(event, 'fs105', 182)" class="i">AbsoluteUri</span> <span class="o">-=&gt;</span> <span onmouseout="hideTip(event, 'fs106', 183)" onmouseover="showTip(event, 'fs106', 183)" class="f">urlParser</span>
  <span class="o">|&gt;</span> <span class="k">function</span>
  | { <span onmouseout="hideTip(event, 'fs12', 184)" onmouseover="showTip(event, 'fs12', 184)" class="t">url</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 185)" onmouseover="showTip(event, 'fs39', 185)" class="i">pathString</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 186)" onmouseover="showTip(event, 'fs39', 186)" class="i">pathString</span>; <span onmouseout="hideTip(event, 'fs12', 187)" onmouseover="showTip(event, 'fs12', 187)" class="t">url</span><span class="o">.</span><span class="i">queryString</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 188)" onmouseover="showTip(event, 'fs40', 188)" class="i">queryString</span> } <span class="k">-&gt;</span>

      <span class="c">//&#39;Routes&#39;</span>
      <span onmouseout="hideTip(event, 'fs39', 189)" onmouseover="showTip(event, 'fs39', 189)" class="i">pathString</span> <span class="o">-=&gt;</span> <span onmouseout="hideTip(event, 'fs107', 190)" onmouseover="showTip(event, 'fs107', 190)" class="f">pathParser</span>
      <span class="o">|&gt;</span> <span class="k">function</span>

      <span class="c">//&quot;href=/people/chefs/Jimbo&quot;</span>
      | [ <span class="s">&quot;people&quot;</span>; <span class="s">&quot;chefs&quot;</span>; <span onmouseout="hideTip(event, 'fs108', 191)" onmouseover="showTip(event, 'fs108', 191)" class="i">chef</span> ] <span class="k">-&gt;</span>

        <span class="c">//Remote Procedure Call (RPC)-style &#39;rest&#39; endpoints</span>
        <span onmouseout="hideTip(event, 'fs40', 192)" onmouseover="showTip(event, 'fs40', 192)" class="i">queryString</span> <span class="o">-=&gt;</span> <span onmouseout="hideTip(event, 'fs109', 193)" onmouseover="showTip(event, 'fs109', 193)" class="f">queryParser</span>
        <span class="o">|&gt;</span> <span class="k">function</span>

        | <span onmouseout="hideTip(event, 'fs110', 194)" onmouseover="showTip(event, 'fs110', 194)" class="p">SORTED</span>[ <span class="s">&quot;cheese&quot;</span>,<span onmouseout="hideTip(event, 'fs111', 195)" onmouseover="showTip(event, 'fs111', 195)" class="i">b</span> ; <span class="s">&quot;eggs&quot;</span>,<span onmouseout="hideTip(event, 'fs112', 196)" onmouseover="showTip(event, 'fs112', 196)" class="i">a</span> ] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs63', 197)" onmouseover="showTip(event, 'fs63', 197)" class="i">async</span> {
            <span class="k">return</span>
              <span onmouseout="hideTip(event, 'fs108', 198)" onmouseover="showTip(event, 'fs108', 198)" class="i">chef</span> <span class="o">+</span> <span class="s">&quot; cannot make omlettes :-( ... &lt;br /&gt;&quot;</span> <span class="o">+</span>
              <span class="s">&quot;But, Dexter can make &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs113', 199)" onmouseover="showTip(event, 'fs113', 199)" class="f">string</span>(<span onmouseout="hideTip(event, 'fs85', 200)" onmouseover="showTip(event, 'fs85', 200)" class="f">int</span> <span onmouseout="hideTip(event, 'fs112', 201)" onmouseover="showTip(event, 'fs112', 201)" class="i">a</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs85', 202)" onmouseover="showTip(event, 'fs85', 202)" class="f">int</span> <span onmouseout="hideTip(event, 'fs111', 203)" onmouseover="showTip(event, 'fs111', 203)" class="i">b</span> <span class="o">+</span> <span class="n">1000</span>) <span class="o">+</span>
              <span class="s">&quot; omlettes du fromage!!  &lt;br /&gt;&quot;</span> <span class="o">+</span>
              <span class="s">&quot;because he is a boy-genious, with a very large laboratory.&quot;</span> }

        <span class="c">//b, then c, then e, here, but not in the url!</span>
        | <span onmouseout="hideTip(event, 'fs110', 204)" onmouseover="showTip(event, 'fs110', 204)" class="p">SORTED</span>[ <span class="s">&quot;bacon&quot;</span>,<span onmouseout="hideTip(event, 'fs111', 205)" onmouseover="showTip(event, 'fs111', 205)" class="i">b</span> ; <span class="s">&quot;cheese&quot;</span>,<span onmouseout="hideTip(event, 'fs114', 206)" onmouseover="showTip(event, 'fs114', 206)" class="i">c</span> ; <span class="s">&quot;eggs&quot;</span>,<span onmouseout="hideTip(event, 'fs112', 207)" onmouseover="showTip(event, 'fs112', 207)" class="i">a</span> ] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs63', 208)" onmouseover="showTip(event, 'fs63', 208)" class="i">async</span> {
            <span class="k">return</span>
              <span onmouseout="hideTip(event, 'fs108', 209)" onmouseover="showTip(event, 'fs108', 209)" class="i">chef</span> <span class="o">+</span> <span class="s">&quot; can make &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs113', 210)" onmouseover="showTip(event, 'fs113', 210)" class="f">string</span>(<span onmouseout="hideTip(event, 'fs85', 211)" onmouseover="showTip(event, 'fs85', 211)" class="f">int</span> <span onmouseout="hideTip(event, 'fs112', 212)" onmouseover="showTip(event, 'fs112', 212)" class="i">a</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs85', 213)" onmouseover="showTip(event, 'fs85', 213)" class="f">int</span> <span onmouseout="hideTip(event, 'fs111', 214)" onmouseover="showTip(event, 'fs111', 214)" class="i">b</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs85', 215)" onmouseover="showTip(event, 'fs85', 215)" class="f">int</span> <span onmouseout="hideTip(event, 'fs114', 216)" onmouseover="showTip(event, 'fs114', 216)" class="i">c</span>) <span class="o">+</span> <span class="s">&quot; omlets!&quot;</span> }

        <span class="c">//b, then c, then e, here, but not in the url!</span>
        | <span onmouseout="hideTip(event, 'fs110', 217)" onmouseover="showTip(event, 'fs110', 217)" class="p">SORTED</span>[ <span class="s">&quot;bacon&quot;</span>,<span onmouseout="hideTip(event, 'fs111', 218)" onmouseover="showTip(event, 'fs111', 218)" class="i">b</span> ; <span class="s">&quot;cheese&quot;</span>,<span onmouseout="hideTip(event, 'fs114', 219)" onmouseover="showTip(event, 'fs114', 219)" class="i">c</span> ; <span class="s">&quot;eggs&quot;</span>,<span onmouseout="hideTip(event, 'fs112', 220)" onmouseover="showTip(event, 'fs112', 220)" class="i">a</span> ; <span class="s">&quot;mushrooms&quot;</span>,<span onmouseout="hideTip(event, 'fs115', 221)" onmouseover="showTip(event, 'fs115', 221)" class="i">m</span> ] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs63', 222)" onmouseover="showTip(event, 'fs63', 222)" class="i">async</span> {
            <span class="k">return</span> <span class="s">&quot;Mushrooms...Disgusting!&quot;</span> }

        | <span onmouseout="hideTip(event, 'fs110', 223)" onmouseover="showTip(event, 'fs110', 223)" class="p">SORTED</span> <span onmouseout="hideTip(event, 'fs116', 224)" onmouseover="showTip(event, 'fs116', 224)" class="i">query</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs63', 225)" onmouseover="showTip(event, 'fs63', 225)" class="i">async</span> {
            <span class="k">return</span> <span class="s">&quot;NO QUERY MATCH FOR: &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs97', 226)" onmouseover="showTip(event, 'fs97', 226)" class="f">pretty</span> <span onmouseout="hideTip(event, 'fs116', 227)" onmouseover="showTip(event, 'fs116', 227)" class="i">query</span> }

      | <span onmouseout="hideTip(event, 'fs117', 228)" onmouseover="showTip(event, 'fs117', 228)" class="i">path</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs63', 229)" onmouseover="showTip(event, 'fs63', 229)" class="i">async</span> { <span class="k">return</span> <span class="s">&quot;NO PATH MATCH FOR: &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs97', 230)" onmouseover="showTip(event, 'fs97', 230)" class="f">pretty</span> <span onmouseout="hideTip(event, 'fs117', 231)" onmouseover="showTip(event, 'fs117', 231)" class="i">path</span> }
))
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace FParsec</div>
<div class="tip" id="fs3">val ( Stop playing games and give me my result, parsec! ) : someParser:Parser&lt;&#39;T,unit&gt; -&gt; input:string -&gt; &#39;T<br /><br />Full name: Script.parsingStuff.( Stop playing games and give me my result, parsec! )</div>
<div class="tip" id="fs4">val someParser : Parser&lt;&#39;T,unit&gt;</div>
<div class="tip" id="fs5">val input : string</div>
<div class="tip" id="fs6">val run : Parser&lt;&#39;Result,unit&gt; -&gt; string -&gt; ParserResult&lt;&#39;Result,unit&gt;<br /><br />Full name: FParsec.CharParsers.run</div>
<div class="tip" id="fs7">union case ParserResult.Success: &#39;Result * &#39;UserState * Position -&gt; ParserResult&lt;&#39;Result,&#39;UserState&gt;</div>
<div class="tip" id="fs8">val result : &#39;T</div>
<div class="tip" id="fs9">module Unchecked<br /><br />from Microsoft.FSharp.Core.Operators</div>
<div class="tip" id="fs10">val defaultof&lt;&#39;T&gt; : &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.Unchecked.defaultof</div>
<div class="tip" id="fs11">val someParser : Parser&lt;&#39;a,unit&gt;</div>
<div class="tip" id="fs12">type url =<br />&#160;&#160;{pathString: string;<br />&#160;&#160;&#160;queryString: string;}<br /><br />Full name: Script.parsingStuff.url</div>
<div class="tip" id="fs13">url.pathString: string</div>
<div class="tip" id="fs14">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs15">url.queryString: string</div>
<div class="tip" id="fs16">val not : (&#39;a -&gt; &#39;a -&gt; bool) (requires equality)<br /><br />Full name: Script.parsingStuff.not</div>
<div class="tip" id="fs17">val psplitBy : char:char -&gt; Parser&lt;string list,&#39;a&gt;<br /><br />Full name: Script.parsingStuff.psplitBy</div>
<div class="tip" id="fs18">Multiple items<br />val char : char<br /><br />--------------------<br />type char = Char<br /><br />Full name: Microsoft.FSharp.Core.char</div>
<div class="tip" id="fs19">val keep : Parser&lt;string,&#39;a&gt;</div>
<div class="tip" id="fs20">val manySatisfy : (char -&gt; bool) -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.manySatisfy</div>
<div class="tip" id="fs21">val toss : Parser&lt;string,&#39;a&gt;</div>
<div class="tip" id="fs22">val pstring : string -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.pstring</div>
<div class="tip" id="fs23">val sepBy : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;b,&#39;u&gt; -&gt; Parser&lt;&#39;a list,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.sepBy</div>
<div class="tip" id="fs24">val pathParser : Parser&lt;string list,unit&gt;<br /><br />Full name: Script.parsingStuff.pathParser</div>
<div class="tip" id="fs25">val keyOrVal : Parser&lt;string,unit&gt;<br /><br />Full name: Script.parsingStuff.keyOrVal</div>
<div class="tip" id="fs26">val many : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;a list,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.many</div>
<div class="tip" id="fs27">val noneOf : seq&lt;char&gt; -&gt; Parser&lt;char,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.noneOf</div>
<div class="tip" id="fs28">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs29">String.Concat([&lt;ParamArray&gt;] values: string []) : string<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />String.Concat(values: Collections.Generic.IEnumerable&lt;string&gt;) : string<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />String.Concat&lt;&#39;T&gt;(values: Collections.Generic.IEnumerable&lt;&#39;T&gt;) : string<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />String.Concat([&lt;ParamArray&gt;] args: obj []) : string<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />String.Concat(arg0: obj) : string<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />String.Concat(str0: string, str1: string) : string<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />String.Concat(arg0: obj, arg1: obj) : string<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />String.Concat(str0: string, str1: string, str2: string) : string<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />String.Concat(arg0: obj, arg1: obj, arg2: obj) : string<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />String.Concat(str0: string, str1: string, str2: string, str3: string) : string<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs30">val keyValuePair : Parser&lt;(string * string),unit&gt;<br /><br />Full name: Script.parsingStuff.keyValuePair</div>
<div class="tip" id="fs31">val queryParser : Parser&lt;(string * string) list,unit&gt;<br /><br />Full name: Script.parsingStuff.queryParser</div>
<div class="tip" id="fs32">val preamble : Parser&lt;unit,unit&gt;<br /><br />Full name: Script.parsingStuff.preamble</div>
<div class="tip" id="fs33">val parse : ParserCombinator<br /><br />Full name: FParsec.Primitives.parse</div>
<div class="tip" id="fs34">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>
<div class="tip" id="fs35">val skipString : string -&gt; Parser&lt;unit,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.skipString</div>
<div class="tip" id="fs36">type Char =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 1 overload<br />&#160;&#160;&#160;&#160;static val MaxValue : char<br />&#160;&#160;&#160;&#160;static val MinValue : char<br />&#160;&#160;&#160;&#160;static member ConvertFromUtf32 : utf32:int -&gt; string<br />&#160;&#160;&#160;&#160;static member ConvertToUtf32 : highSurrogate:char * lowSurrogate:char -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;static member GetNumericValue : c:char -&gt; float + 1 overload<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Char</div>
<div class="tip" id="fs37">Char.IsDigit(c: char) : bool<br />Char.IsDigit(s: string, index: int) : bool</div>
<div class="tip" id="fs38">val urlParser : Parser&lt;url,unit&gt;<br /><br />Full name: Script.parsingStuff.urlParser</div>
<div class="tip" id="fs39">val pathString : string</div>
<div class="tip" id="fs40">val queryString : string</div>
<div class="tip" id="fs41">val restOfLine : bool -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.restOfLine</div>
<div class="tip" id="fs42">namespace System.Net</div>
<div class="tip" id="fs43">namespace System.Text</div>
<div class="tip" id="fs44">type HttpListenerResponse =<br />&#160;&#160;member Abort : unit -&gt; unit<br />&#160;&#160;member AddHeader : name:string * value:string -&gt; unit<br />&#160;&#160;member AppendCookie : cookie:Cookie -&gt; unit<br />&#160;&#160;member AppendHeader : name:string * value:string -&gt; unit<br />&#160;&#160;member Close : unit -&gt; unit + 1 overload<br />&#160;&#160;member ContentEncoding : Encoding with get, set<br />&#160;&#160;member ContentLength64 : int64 with get, set<br />&#160;&#160;member ContentType : string with get, set<br />&#160;&#160;member Cookies : CookieCollection with get, set<br />&#160;&#160;member CopyFrom : templateResponse:HttpListenerResponse -&gt; unit<br />&#160;&#160;...<br /><br />Full name: System.Net.HttpListenerResponse</div>
<div class="tip" id="fs45">val me : HttpListenerResponse</div>
<div class="tip" id="fs46">member HttpListenerResponse.WriteAsync : str:string -&gt; Async&lt;unit&gt;<br /><br />Full name: Script.serverStuff.WriteAsync</div>
<div class="tip" id="fs47">val str : string</div>
<div class="tip" id="fs48">type Encoding =<br />&#160;&#160;member BodyName : string<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CodePage : int<br />&#160;&#160;member DecoderFallback : DecoderFallback with get, set<br />&#160;&#160;member EncoderFallback : EncoderFallback with get, set<br />&#160;&#160;member EncodingName : string<br />&#160;&#160;member Equals : value:obj -&gt; bool<br />&#160;&#160;member GetByteCount : chars:char[] -&gt; int + 3 overloads<br />&#160;&#160;member GetBytes : chars:char[] -&gt; byte[] + 5 overloads<br />&#160;&#160;member GetCharCount : bytes:byte[] -&gt; int + 2 overloads<br />&#160;&#160;...<br /><br />Full name: System.Text.Encoding</div>
<div class="tip" id="fs49">property Encoding.ASCII: Encoding</div>
<div class="tip" id="fs50">Encoding.GetBytes(s: string) : byte []<br />Encoding.GetBytes(chars: char []) : byte []<br />Encoding.GetBytes(chars: char [], index: int, count: int) : byte []<br />Encoding.GetBytes(chars: nativeptr&lt;char&gt;, charCount: int, bytes: nativeptr&lt;byte&gt;, byteCount: int) : int<br />Encoding.GetBytes(s: string, charIndex: int, charCount: int, bytes: byte [], byteIndex: int) : int<br />Encoding.GetBytes(chars: char [], charIndex: int, charCount: int, bytes: byte [], byteIndex: int) : int</div>
<div class="tip" id="fs51">argument s : string</div>
<div class="tip" id="fs52">property HttpListenerResponse.OutputStream: IO.Stream</div>
<div class="tip" id="fs53">member IO.Stream.AsyncWrite : buffer:byte [] * ?offset:int * ?count:int -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs54">val root : string<br /><br />Full name: Script.serverStuff.root</div>
<div class="tip" id="fs55">val host : string<br /><br />Full name: Script.serverStuff.host</div>
<div class="tip" id="fs56">val initListener : HttpListener<br /><br />Full name: Script.serverStuff.initListener</div>
<div class="tip" id="fs57">val l : HttpListener</div>
<div class="tip" id="fs58">Multiple items<br />type HttpListener =<br />&#160;&#160;new : unit -&gt; HttpListener<br />&#160;&#160;member Abort : unit -&gt; unit<br />&#160;&#160;member AuthenticationSchemeSelectorDelegate : AuthenticationSchemeSelector with get, set<br />&#160;&#160;member AuthenticationSchemes : AuthenticationSchemes with get, set<br />&#160;&#160;member BeginGetContext : callback:AsyncCallback * state:obj -&gt; IAsyncResult<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member DefaultServiceNames : ServiceNameCollection<br />&#160;&#160;member EndGetContext : asyncResult:IAsyncResult -&gt; HttpListenerContext<br />&#160;&#160;member ExtendedProtectionPolicy : ExtendedProtectionPolicy with get, set<br />&#160;&#160;member ExtendedProtectionSelectorDelegate : ExtendedProtectionSelector with get, set<br />&#160;&#160;...<br />&#160;&#160;nested type ExtendedProtectionSelector<br /><br />Full name: System.Net.HttpListener<br /><br />--------------------<br />HttpListener() : unit</div>
<div class="tip" id="fs59">property HttpListener.Prefixes: HttpListenerPrefixCollection</div>
<div class="tip" id="fs60">HttpListenerPrefixCollection.Add(uriPrefix: string) : unit</div>
<div class="tip" id="fs61">HttpListener.Start() : unit</div>
<div class="tip" id="fs62">val listen : Async&lt;HttpListenerRequest * HttpListenerResponse&gt;<br /><br />Full name: Script.serverStuff.listen</div>
<div class="tip" id="fs63">val async : AsyncBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.async</div>
<div class="tip" id="fs64">val b : (AsyncCallback * &#39;a -&gt; IAsyncResult)</div>
<div class="tip" id="fs65">val e : (#IAsyncResult -&gt; HttpListenerContext)</div>
<div class="tip" id="fs66">HttpListener.BeginGetContext(callback: AsyncCallback, state: obj) : IAsyncResult</div>
<div class="tip" id="fs67">HttpListener.EndGetContext(asyncResult: IAsyncResult) : HttpListenerContext</div>
<div class="tip" id="fs68">val context : HttpListenerContext</div>
<div class="tip" id="fs69">Multiple items<br />type Async<br />static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member CancelDefaultToken : unit -&gt; unit<br />static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromContinuations : callback:((&#39;T -&gt; unit) * (exn -&gt; unit) * (OperationCanceledException -&gt; unit) -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;<br />static member OnCancel : interruption:(unit -&gt; unit) -&gt; Async&lt;IDisposable&gt;<br />static member Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;<br />static member RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T<br />static member Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;<br />static member Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;<br />static member StartChild : computation:Async&lt;&#39;T&gt; * ?millisecondsTimeout:int -&gt; Async&lt;Async&lt;&#39;T&gt;&gt;<br />static member StartChildAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions -&gt; Async&lt;Task&lt;&#39;T&gt;&gt;<br />static member StartImmediate : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartWithContinuations : computation:Async&lt;&#39;T&gt; * continuation:(&#39;T -&gt; unit) * exceptionContinuation:(exn -&gt; unit) * cancellationContinuation:(OperationCanceledException -&gt; unit) * ?cancellationToken:CancellationToken -&gt; unit<br />static member SwitchToContext : syncContext:SynchronizationContext -&gt; Async&lt;unit&gt;<br />static member SwitchToNewThread : unit -&gt; Async&lt;unit&gt;<br />static member SwitchToThreadPool : unit -&gt; Async&lt;unit&gt;<br />static member TryCancelled : computation:Async&lt;&#39;T&gt; * compensation:(OperationCanceledException -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member CancellationToken : Async&lt;CancellationToken&gt;<br />static member DefaultCancellationToken : CancellationToken<br /><br />Full name: Microsoft.FSharp.Control.Async<br /><br />--------------------<br />type Async&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Async&lt;_&gt;</div>
<div class="tip" id="fs70">static member Async.FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Async.FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Async.FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Async.FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs71">property HttpListenerContext.Request: HttpListenerRequest</div>
<div class="tip" id="fs72">property HttpListenerContext.Response: HttpListenerResponse</div>
<div class="tip" id="fs73">val serverStuff : requestHandler:(HttpListenerRequest -&gt; HttpListenerResponse -&gt; Async&lt;unit&gt;) -&gt; unit<br /><br />Full name: Script.serverStuff.serverStuff</div>
<div class="tip" id="fs74">val requestHandler : (HttpListenerRequest -&gt; HttpListenerResponse -&gt; Async&lt;unit&gt;)</div>
<div class="tip" id="fs75">static member Async.Start : computation:Async&lt;unit&gt; * ?cancellationToken:Threading.CancellationToken -&gt; unit</div>
<div class="tip" id="fs76">val request : HttpListenerRequest</div>
<div class="tip" id="fs77">val response : HttpListenerResponse</div>
<div class="tip" id="fs78">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs79">Console.ReadLine() : string</div>
<div class="tip" id="fs80">module serverStuff<br /><br />from Script</div>
<div class="tip" id="fs81">val httpStuff : restHandler:(&#39;a -&gt; HttpListenerResponse -&gt; Async&lt;string&gt;) -&gt; request:&#39;a -&gt; response:HttpListenerResponse -&gt; Async&lt;unit&gt;<br /><br />Full name: Script.httpStuff.httpStuff</div>
<div class="tip" id="fs82">val restHandler : (&#39;a -&gt; HttpListenerResponse -&gt; Async&lt;string&gt;)</div>
<div class="tip" id="fs83">val request : &#39;a</div>
<div class="tip" id="fs84">property HttpListenerResponse.StatusCode: int</div>
<div class="tip" id="fs85">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs86">type HttpStatusCode =<br />&#160;&#160;| Continue = 100<br />&#160;&#160;| SwitchingProtocols = 101<br />&#160;&#160;| OK = 200<br />&#160;&#160;| Created = 201<br />&#160;&#160;| Accepted = 202<br />&#160;&#160;| NonAuthoritativeInformation = 203<br />&#160;&#160;| NoContent = 204<br />&#160;&#160;| ResetContent = 205<br />&#160;&#160;| PartialContent = 206<br />&#160;&#160;| MultipleChoices = 300<br />&#160;&#160;...<br /><br />Full name: System.Net.HttpStatusCode</div>
<div class="tip" id="fs87">field HttpStatusCode.OK = 200</div>
<div class="tip" id="fs88">property HttpListenerResponse.ContentType: string</div>
<div class="tip" id="fs89">val mainOutput : string</div>
<div class="tip" id="fs90">member HttpListenerResponse.WriteAsync : str:string -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs91">HttpListenerResponse.Close() : unit<br />HttpListenerResponse.Close(responseEntity: byte [], willBlock: bool) : unit</div>
<div class="tip" id="fs92">module parsingStuff<br /><br />from Script</div>
<div class="tip" id="fs93">module httpStuff<br /><br />from Script</div>
<div class="tip" id="fs94">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs95">val sortBy : projection:(&#39;T -&gt; &#39;Key) -&gt; list:&#39;T list -&gt; &#39;T list (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.List.sortBy</div>
<div class="tip" id="fs96">val fst : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T1<br /><br />Full name: Microsoft.FSharp.Core.Operators.fst</div>
<div class="tip" id="fs97">val pretty : s:&#39;a -&gt; string<br /><br />Full name: Script.pretty</div>
<div class="tip" id="fs98">val s : &#39;a</div>
<div class="tip" id="fs99">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs100">Multiple items<br />val serverStuff : requestHandler:(System.Net.HttpListenerRequest -&gt; System.Net.HttpListenerResponse -&gt; Async&lt;unit&gt;) -&gt; unit<br /><br />Full name: Script.serverStuff.serverStuff<br /><br />--------------------<br />module serverStuff<br /><br />from Script</div>
<div class="tip" id="fs101">Multiple items<br />val httpStuff : restHandler:(&#39;a -&gt; System.Net.HttpListenerResponse -&gt; Async&lt;string&gt;) -&gt; request:&#39;a -&gt; response:System.Net.HttpListenerResponse -&gt; Async&lt;unit&gt;<br /><br />Full name: Script.httpStuff.httpStuff<br /><br />--------------------<br />module httpStuff<br /><br />from Script</div>
<div class="tip" id="fs102">val request : System.Net.HttpListenerRequest</div>
<div class="tip" id="fs103">val response : System.Net.HttpListenerResponse</div>
<div class="tip" id="fs104">property System.Net.HttpListenerRequest.Url: System.Uri</div>
<div class="tip" id="fs105">property System.Uri.AbsoluteUri: string</div>
<div class="tip" id="fs106">val urlParser : FParsec.Primitives.Parser&lt;url,unit&gt;<br /><br />Full name: Script.parsingStuff.urlParser</div>
<div class="tip" id="fs107">val pathParser : FParsec.Primitives.Parser&lt;string list,unit&gt;<br /><br />Full name: Script.parsingStuff.pathParser</div>
<div class="tip" id="fs108">val chef : string</div>
<div class="tip" id="fs109">val queryParser : FParsec.Primitives.Parser&lt;(string * string) list,unit&gt;<br /><br />Full name: Script.parsingStuff.queryParser</div>
<div class="tip" id="fs110">active recognizer SORTED: (string * string) list -&gt; (string * string) list<br /><br />Full name: Script.( |SORTED| )</div>
<div class="tip" id="fs111">val b : string</div>
<div class="tip" id="fs112">val a : string</div>
<div class="tip" id="fs113">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs114">val c : string</div>
<div class="tip" id="fs115">val m : string</div>
<div class="tip" id="fs116">val query : (string * string) list</div>
<div class="tip" id="fs117">val path : string list</div>

