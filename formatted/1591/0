<h2><a name="The-combinator" class="anchor" href="#The-combinator">The combinator</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
<span class="l">6: </span>
<span class="l">7: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">matchExn</span> (<span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="f">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">S</span>) (<span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">t</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>) (<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="f">onSuccess</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">S</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">R</span>) (<span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="f">onException</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">exn</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">R</span>) <span class="o">:</span> <span class="o">&#39;</span><span class="i">R</span> <span class="o">=</span>
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="v">exn</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="t">Exception</span> <span class="o">=</span> <span class="k">null</span>
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="v">s</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 11)" onmouseover="showTip(event, 'fs11', 11)" class="t">Unchecked</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 12)" onmouseover="showTip(event, 'fs12', 12)" class="i">defaultof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">S</span><span class="o">&gt;</span>
    <span class="k">try</span> <span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="v">s</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs2', 14)" onmouseover="showTip(event, 'fs2', 14)" class="f">f</span> <span onmouseout="hideTip(event, 'fs3', 15)" onmouseover="showTip(event, 'fs3', 15)" class="i">t</span> <span class="k">with</span> <span onmouseout="hideTip(event, 'fs13', 16)" onmouseover="showTip(event, 'fs13', 16)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 17)" onmouseover="showTip(event, 'fs7', 17)" class="v">exn</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="i">e</span> <span class="c">// e cannot be null</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="t">obj</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="f">ReferenceEquals</span>(<span onmouseout="hideTip(event, 'fs7', 21)" onmouseover="showTip(event, 'fs7', 21)" class="v">exn</span>, <span class="k">null</span>) <span class="k">then</span> <span onmouseout="hideTip(event, 'fs4', 22)" onmouseover="showTip(event, 'fs4', 22)" class="f">onSuccess</span> <span onmouseout="hideTip(event, 'fs10', 23)" onmouseover="showTip(event, 'fs10', 23)" class="v">s</span>
    <span class="k">else</span>
        <span onmouseout="hideTip(event, 'fs5', 24)" onmouseover="showTip(event, 'fs5', 24)" class="f">onException</span> <span onmouseout="hideTip(event, 'fs7', 25)" onmouseover="showTip(event, 'fs7', 25)" class="v">exn</span>
</code></pre></td>
</tr>
</table>
<h2><a name="Simple-example" class="anchor" href="#Simple-example">Simple example</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="f">test</span> () <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs1', 27)" onmouseover="showTip(event, 'fs1', 27)" class="f">matchExn</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="i">i</span> <span class="k">-&gt;</span> <span class="n">1</span> <span class="o">/</span> <span onmouseout="hideTip(event, 'fs17', 29)" onmouseover="showTip(event, 'fs17', 29)" class="i">i</span>) <span class="n">0</span>
        (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="i">r</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="f">string</span> <span onmouseout="hideTip(event, 'fs18', 32)" onmouseover="showTip(event, 'fs18', 32)" class="i">r</span>)
        (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs13', 33)" onmouseover="showTip(event, 'fs13', 33)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 34)" onmouseover="showTip(event, 'fs13', 34)" class="i">e</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 35)" onmouseover="showTip(event, 'fs20', 35)" class="i">Message</span>)

<span class="c">// Codegen (Release build)</span>
<span class="c">//</span>
<span class="c">//public static string test2()</span>
<span class="c">//{</span>
<span class="c">//	Exception ex = null;</span>
<span class="c">//	int r = 0;</span>
<span class="c">//	try</span>
<span class="c">//	{</span>
<span class="c">//		r = 1 / 0;</span>
<span class="c">//	}</span>
<span class="c">//	catch (object arg_0D_0)</span>
<span class="c">//	{</span>
<span class="c">//		Exception ex2 = (Exception)arg_0D_0;</span>
<span class="c">//		ex = ex2;</span>
<span class="c">//	}</span>
<span class="c">//	if (object.ReferenceEquals(ex, null))</span>
<span class="c">//	{</span>
<span class="c">//		return Exn.onSuccess@38-1(r);</span>
<span class="c">//	}</span>
<span class="c">//	return ex.Message;</span>
<span class="c">//}</span>
</code></pre></td>
</tr>
</table>
<h2><a name="Tail-recursive-exception-safe-iteration" class="anchor" href="#Tail-recursive-exception-safe-iteration">Tail recursive, exception safe iteration</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 36)" onmouseover="showTip(event, 'fs21', 36)" class="f">countIters</span> (<span onmouseout="hideTip(event, 'fs22', 37)" onmouseover="showTip(event, 'fs22', 37)" class="f">f</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs23', 38)" onmouseover="showTip(event, 'fs23', 38)" class="t">int</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs24', 39)" onmouseover="showTip(event, 'fs24', 39)" class="t">bool</span>) <span class="o">=</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs25', 40)" onmouseover="showTip(event, 'fs25', 40)" class="f">aux</span> <span onmouseout="hideTip(event, 'fs17', 41)" onmouseover="showTip(event, 'fs17', 41)" class="i">i</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs1', 42)" onmouseover="showTip(event, 'fs1', 42)" class="f">matchExn</span> <span onmouseout="hideTip(event, 'fs22', 43)" onmouseover="showTip(event, 'fs22', 43)" class="f">f</span> <span onmouseout="hideTip(event, 'fs17', 44)" onmouseover="showTip(event, 'fs17', 44)" class="i">i</span>
            (<span class="k">function</span> <span class="k">true</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 45)" onmouseover="showTip(event, 'fs25', 45)" class="f">aux</span> (<span onmouseout="hideTip(event, 'fs17', 46)" onmouseover="showTip(event, 'fs17', 46)" class="i">i</span><span class="o">+</span><span class="n">1</span>) | <span class="k">false</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs17', 47)" onmouseover="showTip(event, 'fs17', 47)" class="i">i</span>)
            (<span class="k">fun</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs17', 48)" onmouseover="showTip(event, 'fs17', 48)" class="i">i</span>)

    <span onmouseout="hideTip(event, 'fs25', 49)" onmouseover="showTip(event, 'fs25', 49)" class="f">aux</span> <span class="n">0</span>

<span class="c">// Codegen (Release build)</span>
<span class="c">//</span>
<span class="c">//public static int countIters(FSharpFunc&lt;int, bool&gt; f)</span>
<span class="c">//{</span>
<span class="c">//	return Exn.aux@54(f, 0);</span>
<span class="c">//}</span>
<span class="c">//internal static int aux@54(FSharpFunc&lt;int, bool&gt; f, int i)</span>
<span class="c">//{</span>
<span class="c">//	Exception objA = null;</span>
<span class="c">//	bool b = false;</span>
<span class="c">//	try</span>
<span class="c">//	{</span>
<span class="c">//		b = f.Invoke(i);</span>
<span class="c">//	}</span>
<span class="c">//	catch (object arg_11_0)</span>
<span class="c">//	{</span>
<span class="c">//		Exception ex = (Exception)arg_11_0;</span>
<span class="c">//		objA = ex;</span>
<span class="c">//	}</span>
<span class="c">//	if (object.ReferenceEquals(objA, null))</span>
<span class="c">//	{</span>
<span class="c">//		return Exn.onSuccess@38-2(f, i, b);</span>
<span class="c">//	}</span>
<span class="c">//	return i;</span>
<span class="c">//}</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val matchExn : f:(&#39;T -&gt; &#39;S) -&gt; t:&#39;T -&gt; onSuccess:(&#39;S -&gt; &#39;R) -&gt; onException:(exn -&gt; &#39;R) -&gt; &#39;R<br /><br />Full name: Script.matchExn</div>
<div class="tip" id="fs2">val f : (&#39;T -&gt; &#39;S)</div>
<div class="tip" id="fs3">val t : &#39;T</div>
<div class="tip" id="fs4">val onSuccess : (&#39;S -&gt; &#39;R)</div>
<div class="tip" id="fs5">val onException : (exn -&gt; &#39;R)</div>
<div class="tip" id="fs6">type exn = System.Exception<br /><br />Full name: Microsoft.FSharp.Core.exn</div>
<div class="tip" id="fs7">Multiple items<br />val mutable exn : System.Exception<br /><br />--------------------<br />type exn = System.Exception<br /><br />Full name: Microsoft.FSharp.Core.exn</div>
<div class="tip" id="fs8">namespace System</div>
<div class="tip" id="fs9">Multiple items<br />type Exception =<br />&#160;&#160;new : unit -&gt; Exception + 2 overloads<br />&#160;&#160;member Data : IDictionary<br />&#160;&#160;member GetBaseException : unit -&gt; Exception<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;member GetType : unit -&gt; Type<br />&#160;&#160;member HelpLink : string with get, set<br />&#160;&#160;member InnerException : Exception<br />&#160;&#160;member Message : string<br />&#160;&#160;member Source : string with get, set<br />&#160;&#160;member StackTrace : string<br />&#160;&#160;...<br /><br />Full name: System.Exception<br /><br />--------------------<br />System.Exception() : unit<br />System.Exception(message: string) : unit<br />System.Exception(message: string, innerException: exn) : unit</div>
<div class="tip" id="fs10">val mutable s : &#39;S</div>
<div class="tip" id="fs11">module Unchecked<br /><br />from Microsoft.FSharp.Core.Operators</div>
<div class="tip" id="fs12">val defaultof&lt;&#39;T&gt; : &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.Unchecked.defaultof</div>
<div class="tip" id="fs13">val e : exn</div>
<div class="tip" id="fs14">type obj = System.Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs15">System.Object.ReferenceEquals(objA: obj, objB: obj) : bool</div>
<div class="tip" id="fs16">val test : unit -&gt; string<br /><br />Full name: Script.test</div>
<div class="tip" id="fs17">val i : int</div>
<div class="tip" id="fs18">val r : int</div>
<div class="tip" id="fs19">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs20">property System.Exception.Message: string</div>
<div class="tip" id="fs21">val countIters : f:(int -&gt; bool) -&gt; int<br /><br />Full name: Script.countIters</div>
<div class="tip" id="fs22">val f : (int -&gt; bool)</div>
<div class="tip" id="fs23">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs24">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs25">val aux : (int -&gt; int)</div>

