<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">(* IPv4 conversion snippets FTF*)</span>
<span class="k">module</span> <span class="t">ipv4Conversions</span> <span class="o">=</span> 

  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">ip_toint</span> (<span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">d</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">string</span>) <span class="o">=</span> 
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">ele</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">d</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="f">Split</span> <span class="s">&#39;.&#39;</span>
      ((<span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="f">uint32</span> <span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="i">ele</span><span class="o">.</span>[<span class="n">0</span>]) <span class="o">&lt;&lt;&lt;</span> <span class="n">24</span>) 
    <span class="o">+</span> ((<span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="f">uint32</span> <span onmouseout="hideTip(event, 'fs4', 10)" onmouseover="showTip(event, 'fs4', 10)" class="i">ele</span><span class="o">.</span>[<span class="n">1</span>]) <span class="o">&lt;&lt;&lt;</span> <span class="n">16</span>)    
    <span class="o">+</span> ((<span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="f">uint32</span> <span onmouseout="hideTip(event, 'fs4', 12)" onmouseover="showTip(event, 'fs4', 12)" class="i">ele</span><span class="o">.</span>[<span class="n">2</span>]) <span class="o">&lt;&lt;&lt;</span> <span class="n">8</span>)    
    <span class="o">+</span> ((<span onmouseout="hideTip(event, 'fs6', 13)" onmouseover="showTip(event, 'fs6', 13)" class="f">uint32</span> <span onmouseout="hideTip(event, 'fs4', 14)" onmouseover="showTip(event, 'fs4', 14)" class="i">ele</span><span class="o">.</span>[<span class="n">3</span>]) )

  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 15)" onmouseover="showTip(event, 'fs7', 15)" class="f">int_toip</span> <span onmouseout="hideTip(event, 'fs8', 16)" onmouseover="showTip(event, 'fs8', 16)" class="i">d</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 17)" onmouseover="showTip(event, 'fs9', 17)" class="i">val1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 18)" onmouseover="showTip(event, 'fs6', 18)" class="f">uint32</span>(<span onmouseout="hideTip(event, 'fs8', 19)" onmouseover="showTip(event, 'fs8', 19)" class="i">d</span> <span class="o">&amp;&amp;&amp;</span> <span class="n">0xff000000u</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="n">24</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 20)" onmouseover="showTip(event, 'fs10', 20)" class="i">val2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 21)" onmouseover="showTip(event, 'fs6', 21)" class="f">uint32</span>(<span onmouseout="hideTip(event, 'fs8', 22)" onmouseover="showTip(event, 'fs8', 22)" class="i">d</span> <span class="o">&amp;&amp;&amp;</span> <span class="n">0x00ff0000u</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="n">16</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 23)" onmouseover="showTip(event, 'fs11', 23)" class="i">val3</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 24)" onmouseover="showTip(event, 'fs6', 24)" class="f">uint32</span>(<span onmouseout="hideTip(event, 'fs8', 25)" onmouseover="showTip(event, 'fs8', 25)" class="i">d</span> <span class="o">&amp;&amp;&amp;</span> <span class="n">0x0000ff00u</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="n">8</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 26)" onmouseover="showTip(event, 'fs12', 26)" class="i">val4</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 27)" onmouseover="showTip(event, 'fs6', 27)" class="f">uint32</span>(<span onmouseout="hideTip(event, 'fs8', 28)" onmouseover="showTip(event, 'fs8', 28)" class="i">d</span> <span class="o">&amp;&amp;&amp;</span> <span class="n">0x000000ffu</span>)
    <span onmouseout="hideTip(event, 'fs13', 29)" onmouseover="showTip(event, 'fs13', 29)" class="f">sprintf</span> <span class="s">&quot;</span><span class="pf">%d</span><span class="s">.</span><span class="pf">%d</span><span class="s">.</span><span class="pf">%d</span><span class="s">.</span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs9', 30)" onmouseover="showTip(event, 'fs9', 30)" class="i">val1</span> <span onmouseout="hideTip(event, 'fs10', 31)" onmouseover="showTip(event, 'fs10', 31)" class="i">val2</span> <span onmouseout="hideTip(event, 'fs11', 32)" onmouseover="showTip(event, 'fs11', 32)" class="i">val3</span> <span onmouseout="hideTip(event, 'fs12', 33)" onmouseover="showTip(event, 'fs12', 33)" class="i">val4</span>
    
  <span class="c">(* convert range notation to a list of all ranges *)</span>
  <span class="c">(* possibl replace with pattern matching for a more exhaustive match*)</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 34)" onmouseover="showTip(event, 'fs14', 34)" class="f">range_toip</span> (<span onmouseout="hideTip(event, 'fs2', 35)" onmouseover="showTip(event, 'fs2', 35)" class="i">d</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 36)" onmouseover="showTip(event, 'fs3', 36)" class="t">string</span>) <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 37)" onmouseover="showTip(event, 'fs15', 37)" class="i">range_elem</span> <span class="o">=</span> 
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs2', 38)" onmouseover="showTip(event, 'fs2', 38)" class="i">d</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 39)" onmouseover="showTip(event, 'fs16', 39)" class="f">Contains</span>(<span class="s">&quot;-&quot;</span>) <span class="k">then</span> <span onmouseout="hideTip(event, 'fs2', 40)" onmouseover="showTip(event, 'fs2', 40)" class="i">d</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 41)" onmouseover="showTip(event, 'fs5', 41)" class="f">Split</span> <span class="s">&#39;-&#39;</span>
      <span class="k">else</span> (<span onmouseout="hideTip(event, 'fs2', 42)" onmouseover="showTip(event, 'fs2', 42)" class="i">d</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 43)" onmouseover="showTip(event, 'fs17', 43)" class="f">Replace</span>(<span class="s">&quot;to&quot;</span>,<span class="s">&quot; &quot;</span>))<span class="o">.</span><span class="f">Split</span> <span class="s">&#39; &#39;</span>
    
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 44)" onmouseover="showTip(event, 'fs18', 44)" class="i">elems</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 45)" onmouseover="showTip(event, 'fs15', 45)" class="i">range_elem</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs19', 46)" onmouseover="showTip(event, 'fs19', 46)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 47)" onmouseover="showTip(event, 'fs20', 47)" class="f">filter</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs21', 48)" onmouseover="showTip(event, 'fs21', 48)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 49)" onmouseover="showTip(event, 'fs21', 49)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 50)" onmouseover="showTip(event, 'fs22', 50)" class="i">Length</span> <span class="o">&gt;</span> <span class="n">5</span>)    
    [<span onmouseout="hideTip(event, 'fs1', 51)" onmouseover="showTip(event, 'fs1', 51)" class="f">ip_toint</span> <span onmouseout="hideTip(event, 'fs18', 52)" onmouseover="showTip(event, 'fs18', 52)" class="i">elems</span><span class="o">.</span>[<span class="n">0</span>] <span class="o">..</span> <span onmouseout="hideTip(event, 'fs1', 53)" onmouseover="showTip(event, 'fs1', 53)" class="f">ip_toint</span> <span onmouseout="hideTip(event, 'fs18', 54)" onmouseover="showTip(event, 'fs18', 54)" class="i">elems</span><span class="o">.</span>[<span class="n">1</span>]]
      <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 55)" onmouseover="showTip(event, 'fs23', 55)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 56)" onmouseover="showTip(event, 'fs24', 56)" class="f">map</span> <span onmouseout="hideTip(event, 'fs7', 57)" onmouseover="showTip(event, 'fs7', 57)" class="f">int_toip</span>
    
  <span class="c">(* &quot;192.168.1.1/24&quot; -&gt; [&quot;192.168.1.1 .. 192.168.1.254&quot;] *)</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 58)" onmouseover="showTip(event, 'fs25', 58)" class="f">expand_cidr</span> (<span onmouseout="hideTip(event, 'fs2', 59)" onmouseover="showTip(event, 'fs2', 59)" class="i">d</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 60)" onmouseover="showTip(event, 'fs3', 60)" class="t">string</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 61)" onmouseover="showTip(event, 'fs26', 61)" class="i">elem</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 62)" onmouseover="showTip(event, 'fs2', 62)" class="i">d</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 63)" onmouseover="showTip(event, 'fs5', 63)" class="f">Split</span> <span class="s">&#39;/&#39;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 64)" onmouseover="showTip(event, 'fs27', 64)" class="i">cidrBits</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 65)" onmouseover="showTip(event, 'fs28', 65)" class="f">int32</span> <span onmouseout="hideTip(event, 'fs26', 66)" onmouseover="showTip(event, 'fs26', 66)" class="i">elem</span><span class="o">.</span>[<span class="n">1</span>]
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 67)" onmouseover="showTip(event, 'fs29', 67)" class="i">mask</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 68)" onmouseover="showTip(event, 'fs6', 68)" class="f">uint32</span> <span class="o">~~~</span>((<span class="n">1</span> <span class="o">&lt;&lt;&lt;</span> (<span class="n">32</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs27', 69)" onmouseover="showTip(event, 'fs27', 69)" class="i">cidrBits</span>)) <span class="o">-</span> <span class="n">1</span>)
    
    <span class="c">(* Network Address *)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 70)" onmouseover="showTip(event, 'fs30', 70)" class="i">nwAddress</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 71)" onmouseover="showTip(event, 'fs1', 71)" class="f">ip_toint</span>(<span onmouseout="hideTip(event, 'fs26', 72)" onmouseover="showTip(event, 'fs26', 72)" class="i">elem</span><span class="o">.</span>[<span class="n">0</span>]) <span class="o">&amp;&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs29', 73)" onmouseover="showTip(event, 'fs29', 73)" class="i">mask</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 74)" onmouseover="showTip(event, 'fs31', 74)" class="i">startAddr</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs7', 75)" onmouseover="showTip(event, 'fs7', 75)" class="f">int_toip</span>(<span onmouseout="hideTip(event, 'fs30', 76)" onmouseover="showTip(event, 'fs30', 76)" class="i">nwAddress</span> <span class="o">+</span> <span class="n">1u</span>))
    
    <span class="c">(* Broadcast Address *)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 77)" onmouseover="showTip(event, 'fs32', 77)" class="i">bcAddress</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 78)" onmouseover="showTip(event, 'fs30', 78)" class="i">nwAddress</span> <span class="o">+</span> <span class="o">~~~</span><span onmouseout="hideTip(event, 'fs29', 79)" onmouseover="showTip(event, 'fs29', 79)" class="i">mask</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 80)" onmouseover="showTip(event, 'fs33', 80)" class="i">endinAddr</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs7', 81)" onmouseover="showTip(event, 'fs7', 81)" class="f">int_toip</span>(<span onmouseout="hideTip(event, 'fs32', 82)" onmouseover="showTip(event, 'fs32', 82)" class="i">bcAddress</span> <span class="o">-</span> <span class="n">1u</span>))
    
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 83)" onmouseover="showTip(event, 'fs34', 83)" class="i">usableIps</span> <span class="o">=</span> 
      <span class="k">if</span> (<span onmouseout="hideTip(event, 'fs27', 84)" onmouseover="showTip(event, 'fs27', 84)" class="i">cidrBits</span> <span class="o">&gt;</span> <span class="n">30</span>) 
        <span class="k">then</span> <span class="n">0u</span>
      <span class="k">else</span> 
        (<span onmouseout="hideTip(event, 'fs32', 85)" onmouseover="showTip(event, 'fs32', 85)" class="i">bcAddress</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs30', 86)" onmouseover="showTip(event, 'fs30', 86)" class="i">nwAddress</span> <span class="o">-</span>  <span class="n">1u</span>) 
        
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs34', 87)" onmouseover="showTip(event, 'fs34', 87)" class="i">usableIps</span> <span class="o">&lt;=</span> <span class="n">0u</span> 
      <span class="k">then</span> <span onmouseout="hideTip(event, 'fs23', 88)" onmouseover="showTip(event, 'fs23', 88)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 89)" onmouseover="showTip(event, 'fs35', 89)" class="i">empty</span>
    <span class="k">else</span> 
      {<span onmouseout="hideTip(event, 'fs30', 90)" onmouseover="showTip(event, 'fs30', 90)" class="i">nwAddress</span> <span class="o">+</span> <span class="n">1u</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs32', 91)" onmouseover="showTip(event, 'fs32', 91)" class="i">bcAddress</span> <span class="o">-</span> <span class="n">1u</span>} <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 92)" onmouseover="showTip(event, 'fs23', 92)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 93)" onmouseover="showTip(event, 'fs24', 93)" class="f">map</span> <span onmouseout="hideTip(event, 'fs7', 94)" onmouseover="showTip(event, 'fs7', 94)" class="f">int_toip</span>
      
      
<span class="c">(* Examples *)</span>
<span class="c">(*</span>
<span class="c">&gt; ipv4Conversions.ip_toint &quot;192.168.1.1&quot;;;</span>
<span class="c">val it : uint32 = 3232235777u</span>

<span class="c">&gt; ipv4Conversions.int_toip 3232235777u;;</span>
<span class="c">val it : string = &quot;192.168.1.1&quot;</span>

<span class="c">&gt; ipv4Conversions.range_toip &quot;192.168.1.10 -192.168.1.20&quot;;;</span>
<span class="c">val it : seq&lt;string&gt; =</span>
<span class="c">  seq [&quot;192.168.1.10&quot;; &quot;192.168.1.11&quot;; &quot;192.168.1.12&quot;; &quot;192.168.1.13&quot;; ...]</span>
<span class="c">  </span>
<span class="c">&gt; ipv4Conversions.range_toip &quot;192.168.1.10 to 192.168.1.20&quot;;;</span>
<span class="c">val it : seq&lt;string&gt; =</span>
<span class="c">  seq [&quot;192.168.1.10&quot;; &quot;192.168.1.11&quot;; &quot;192.168.1.12&quot;; &quot;192.168.1.13&quot;; ...]</span>
<span class="c">  </span>
<span class="c">&gt; ipv4Conversions.expand_cidr &quot;192.168.1.1/24&quot;;;</span>
<span class="c">val it : seq&lt;string&gt; =</span>
<span class="c">  seq [&quot;192.168.1.1&quot;; &quot;192.168.1.2&quot;; &quot;192.168.1.3&quot;; &quot;192.168.1.4&quot;; ...]*)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val ip_toint : d:string -&gt; uint32<br /><br />Full name: Script.ipv4Conversions.ip_toint</div>
<div class="tip" id="fs2">val d : string</div>
<div class="tip" id="fs3">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs4">val ele : string []</div>
<div class="tip" id="fs5">System.String.Split([&lt;System.ParamArray&gt;] separator: char []) : string []<br />System.String.Split(separator: string [], options: System.StringSplitOptions) : string []<br />System.String.Split(separator: char [], options: System.StringSplitOptions) : string []<br />System.String.Split(separator: char [], count: int) : string []<br />System.String.Split(separator: string [], count: int, options: System.StringSplitOptions) : string []<br />System.String.Split(separator: char [], count: int, options: System.StringSplitOptions) : string []</div>
<div class="tip" id="fs6">Multiple items<br />val uint32 : value:&#39;T -&gt; uint32 (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.uint32<br /><br />--------------------<br />type uint32 = System.UInt32<br /><br />Full name: Microsoft.FSharp.Core.uint32</div>
<div class="tip" id="fs7">val int_toip : d:uint32 -&gt; string<br /><br />Full name: Script.ipv4Conversions.int_toip</div>
<div class="tip" id="fs8">val d : uint32</div>
<div class="tip" id="fs9">val val1 : uint32</div>
<div class="tip" id="fs10">val val2 : uint32</div>
<div class="tip" id="fs11">val val3 : uint32</div>
<div class="tip" id="fs12">val val4 : uint32</div>
<div class="tip" id="fs13">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs14">val range_toip : d:string -&gt; seq&lt;string&gt;<br /><br />Full name: Script.ipv4Conversions.range_toip</div>
<div class="tip" id="fs15">val range_elem : string []</div>
<div class="tip" id="fs16">System.String.Contains(value: string) : bool</div>
<div class="tip" id="fs17">System.String.Replace(oldValue: string, newValue: string) : string<br />System.String.Replace(oldChar: char, newChar: char) : string</div>
<div class="tip" id="fs18">val elems : string []</div>
<div class="tip" id="fs19">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs20">val filter : predicate:(&#39;T -&gt; bool) -&gt; array:&#39;T [] -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.filter</div>
<div class="tip" id="fs21">val x : string</div>
<div class="tip" id="fs22">property System.String.Length: int</div>
<div class="tip" id="fs23">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs24">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs25">val expand_cidr : d:string -&gt; seq&lt;string&gt;<br /><br />Full name: Script.ipv4Conversions.expand_cidr</div>
<div class="tip" id="fs26">val elem : string []</div>
<div class="tip" id="fs27">val cidrBits : int32</div>
<div class="tip" id="fs28">Multiple items<br />val int32 : value:&#39;T -&gt; int32 (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int32<br /><br />--------------------<br />type int32 = System.Int32<br /><br />Full name: Microsoft.FSharp.Core.int32</div>
<div class="tip" id="fs29">val mask : uint32</div>
<div class="tip" id="fs30">val nwAddress : uint32</div>
<div class="tip" id="fs31">val startAddr : string</div>
<div class="tip" id="fs32">val bcAddress : uint32</div>
<div class="tip" id="fs33">val endinAddr : string</div>
<div class="tip" id="fs34">val usableIps : uint32</div>
<div class="tip" id="fs35">val empty&lt;&#39;T&gt; : seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.empty</div>

