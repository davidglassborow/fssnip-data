<h2><a name="The-implementation-of-Bi-directional-map" class="anchor" href="#The-implementation-of-Bi-directional-map">The implementation of Bi directional map</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">/// Bi directional map.</span>
<span class="c">/// It stores correspondences of two values.</span>
<span class="c">/// It yields correspond value from another value of the pair.</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">BiMap</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span>,<span class="o">&#39;</span><span class="i">b</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">a</span> <span class="o">:</span> <span class="i">comparison</span> <span class="k">and</span> <span class="o">&#39;</span><span class="i">b</span> <span class="o">:</span> <span class="i">comparison</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">item1s</span><span class="o">:</span><span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">list</span>, <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">item2s</span><span class="o">:</span><span class="o">&#39;</span><span class="i">b</span> <span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="t">list</span>) <span class="o">=</span>
  <span class="c">// reusing standard F# library&#39;s map to implement find functions</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">item1IsKey</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="f">zip</span> <span onmouseout="hideTip(event, 'fs2', 9)" onmouseover="showTip(event, 'fs2', 9)" class="i">item1s</span> <span onmouseout="hideTip(event, 'fs4', 10)" onmouseover="showTip(event, 'fs4', 10)" class="i">item2s</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="f">ofList</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="i">item2IsKey</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 14)" onmouseover="showTip(event, 'fs6', 14)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 15)" onmouseover="showTip(event, 'fs7', 15)" class="f">zip</span> <span onmouseout="hideTip(event, 'fs4', 16)" onmouseover="showTip(event, 'fs4', 16)" class="i">item2s</span> <span onmouseout="hideTip(event, 'fs2', 17)" onmouseover="showTip(event, 'fs2', 17)" class="i">item1s</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs8', 18)" onmouseover="showTip(event, 'fs8', 18)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 19)" onmouseover="showTip(event, 'fs9', 19)" class="f">ofList</span>
  
  <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 20)" onmouseover="showTip(event, 'fs11', 20)" class="f">findBy1</span>    <span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="i">key</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 22)" onmouseover="showTip(event, 'fs8', 22)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 23)" onmouseover="showTip(event, 'fs13', 23)" class="f">find</span>    <span onmouseout="hideTip(event, 'fs12', 24)" onmouseover="showTip(event, 'fs12', 24)" class="i">key</span> <span onmouseout="hideTip(event, 'fs5', 25)" onmouseover="showTip(event, 'fs5', 25)" class="i">item1IsKey</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs14', 26)" onmouseover="showTip(event, 'fs14', 26)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 27)" onmouseover="showTip(event, 'fs15', 27)" class="f">tryFindBy1</span> <span onmouseout="hideTip(event, 'fs12', 28)" onmouseover="showTip(event, 'fs12', 28)" class="i">key</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 29)" onmouseover="showTip(event, 'fs8', 29)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 30)" onmouseover="showTip(event, 'fs16', 30)" class="f">tryFind</span> <span onmouseout="hideTip(event, 'fs12', 31)" onmouseover="showTip(event, 'fs12', 31)" class="i">key</span> <span onmouseout="hideTip(event, 'fs5', 32)" onmouseover="showTip(event, 'fs5', 32)" class="i">item1IsKey</span> 
  <span class="c">// Ctrl + H. then replace 1 to 2 the above two lines of code</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs14', 33)" onmouseover="showTip(event, 'fs14', 33)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 34)" onmouseover="showTip(event, 'fs17', 34)" class="f">findBy2</span>    <span onmouseout="hideTip(event, 'fs18', 35)" onmouseover="showTip(event, 'fs18', 35)" class="i">key</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 36)" onmouseover="showTip(event, 'fs8', 36)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 37)" onmouseover="showTip(event, 'fs13', 37)" class="f">find</span>    <span onmouseout="hideTip(event, 'fs18', 38)" onmouseover="showTip(event, 'fs18', 38)" class="i">key</span> <span onmouseout="hideTip(event, 'fs10', 39)" onmouseover="showTip(event, 'fs10', 39)" class="i">item2IsKey</span> 
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs14', 40)" onmouseover="showTip(event, 'fs14', 40)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="f">tryFindBy2</span> <span onmouseout="hideTip(event, 'fs18', 42)" onmouseover="showTip(event, 'fs18', 42)" class="i">key</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 43)" onmouseover="showTip(event, 'fs8', 43)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 44)" onmouseover="showTip(event, 'fs16', 44)" class="f">tryFind</span> <span onmouseout="hideTip(event, 'fs18', 45)" onmouseover="showTip(event, 'fs18', 45)" class="i">key</span> <span onmouseout="hideTip(event, 'fs10', 46)" onmouseover="showTip(event, 'fs10', 46)" class="i">item2IsKey</span> 
</code></pre></td>
</tr>
</table>
<h2><a name="The-implementation-of-toString-and-fromString-function-for-a-descreminated-union" class="anchor" href="#The-implementation-of-toString-and-fromString-function-for-a-descreminated-union">The implementation of toString and fromString function for a descreminated union</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span onmouseout="hideTip(event, 'fs20', 47)" onmouseover="showTip(event, 'fs20', 47)" class="t">Week</span> <span class="o">=</span> 
  | <span onmouseout="hideTip(event, 'fs21', 48)" onmouseover="showTip(event, 'fs21', 48)" class="p">Sunday</span> 
  | <span onmouseout="hideTip(event, 'fs22', 49)" onmouseover="showTip(event, 'fs22', 49)" class="p">Monday</span> 
  | <span onmouseout="hideTip(event, 'fs23', 50)" onmouseover="showTip(event, 'fs23', 50)" class="p">Tuesday</span> 
  | <span onmouseout="hideTip(event, 'fs24', 51)" onmouseover="showTip(event, 'fs24', 51)" class="p">Wednesday</span> 
  | <span onmouseout="hideTip(event, 'fs25', 52)" onmouseover="showTip(event, 'fs25', 52)" class="p">Tursday</span> 
  | <span onmouseout="hideTip(event, 'fs26', 53)" onmouseover="showTip(event, 'fs26', 53)" class="p">Friday</span> 
  | <span onmouseout="hideTip(event, 'fs27', 54)" onmouseover="showTip(event, 'fs27', 54)" class="p">Saturday</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 55)" onmouseover="showTip(event, 'fs28', 55)" class="i">weekBiMap</span> <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs1', 56)" onmouseover="showTip(event, 'fs1', 56)" class="t">BiMap</span> (
    [ <span onmouseout="hideTip(event, 'fs21', 57)" onmouseover="showTip(event, 'fs21', 57)" class="p">Sunday</span> ; <span onmouseout="hideTip(event, 'fs22', 58)" onmouseover="showTip(event, 'fs22', 58)" class="p">Monday</span> ; <span onmouseout="hideTip(event, 'fs23', 59)" onmouseover="showTip(event, 'fs23', 59)" class="p">Tuesday</span> ; <span onmouseout="hideTip(event, 'fs24', 60)" onmouseover="showTip(event, 'fs24', 60)" class="p">Wednesday</span> ; <span onmouseout="hideTip(event, 'fs25', 61)" onmouseover="showTip(event, 'fs25', 61)" class="p">Tursday</span> ; <span onmouseout="hideTip(event, 'fs26', 62)" onmouseover="showTip(event, 'fs26', 62)" class="p">Friday</span> ; <span onmouseout="hideTip(event, 'fs27', 63)" onmouseover="showTip(event, 'fs27', 63)" class="p">Saturday</span> ],
    [<span class="s">&quot;Sunday&quot;</span>;<span class="s">&quot;Monday&quot;</span>;<span class="s">&quot;Tuesday&quot;</span>;<span class="s">&quot;Wednesday&quot;</span>;<span class="s">&quot;Tursday&quot;</span>;<span class="s">&quot;Friday&quot;</span>;<span class="s">&quot;Saturday&quot;</span>]
  )

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs20', 64)" onmouseover="showTip(event, 'fs20', 64)" class="t">Week</span> <span class="k">with</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs29', 65)" onmouseover="showTip(event, 'fs29', 65)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 66)" onmouseover="showTip(event, 'fs30', 66)" class="i">ToStr</span>           <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 67)" onmouseover="showTip(event, 'fs29', 67)" class="i">this</span>  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs28', 68)" onmouseover="showTip(event, 'fs28', 68)" class="i">weekBiMap</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 69)" onmouseover="showTip(event, 'fs31', 69)" class="f">findBy1</span>
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs32', 70)" onmouseover="showTip(event, 'fs32', 70)" class="f">FromStr</span> <span onmouseout="hideTip(event, 'fs33', 71)" onmouseover="showTip(event, 'fs33', 71)" class="i">sWeek</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 72)" onmouseover="showTip(event, 'fs33', 72)" class="i">sWeek</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs28', 73)" onmouseover="showTip(event, 'fs28', 73)" class="i">weekBiMap</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 74)" onmouseover="showTip(event, 'fs34', 74)" class="f">tryFindBy2</span>
</code></pre></td>
</tr>
</table>
<h2><a name="usage" class="anchor" href="#usage">usage</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span onmouseout="hideTip(event, 'fs21', 75)" onmouseover="showTip(event, 'fs21', 75)" class="p">Sunday</span><span class="o">.</span><span class="i">ToStr</span> <span class="c">// val it : string = &quot;Sunday&quot;</span>

<span onmouseout="hideTip(event, 'fs20', 76)" onmouseover="showTip(event, 'fs20', 76)" class="t">Week</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 77)" onmouseover="showTip(event, 'fs35', 77)" class="f">FromStr</span> <span class="s">&quot;Tuesday&quot;</span> <span class="c">// val it : Week option = Some Tuesday</span>
<span onmouseout="hideTip(event, 'fs20', 78)" onmouseover="showTip(event, 'fs20', 78)" class="t">Week</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 79)" onmouseover="showTip(event, 'fs35', 79)" class="f">FromStr</span> <span class="s">&quot;Tuesady&quot;</span> <span class="c">// val it : Week option = None</span>

<span class="c">// In this snippet I use a class instance as a reusable factory which</span>
<span class="c">// removes trivial function implementation.</span>
<span class="c">// It seems that OOP class features eliminated boilerplates from the FP code.</span>
<span class="c">// And this OOP class is easily implemented by using FP features.</span>
<span class="c">// It&#39;s an interesting result isn&#39;t it?</span>
<span class="c">// (I know there are already many examples that shows the multi-paradimn language really shine)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />type BiMap&lt;&#39;a,&#39;b (requires comparison and comparison)&gt; =<br />&#160;&#160;new : item1s:&#39;a list * item2s:&#39;b list -&gt; BiMap&lt;&#39;a,&#39;b&gt;<br />&#160;&#160;member findBy1 : key:&#39;a -&gt; &#39;b<br />&#160;&#160;member findBy2 : key:&#39;b -&gt; &#39;a<br />&#160;&#160;member tryFindBy1 : key:&#39;a -&gt; &#39;b option<br />&#160;&#160;member tryFindBy2 : key:&#39;b -&gt; &#39;a option<br /><br />Full name: Script.BiMap&lt;_,_&gt;<br /><em><br /><br />&#160;Bi directional map.<br />&#160;It stores correspondences of two values.<br />&#160;It yields correspond value from another value of the pair.</em><br /><br />--------------------<br />new : item1s:&#39;a list * item2s:&#39;b list -&gt; BiMap&lt;&#39;a,&#39;b&gt;</div>
<div class="tip" id="fs2">val item1s : &#39;a list (requires comparison)</div>
<div class="tip" id="fs3">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs4">val item2s : &#39;b list (requires comparison)</div>
<div class="tip" id="fs5">val item1IsKey : Map&lt;&#39;a,&#39;b&gt; (requires comparison and comparison)</div>
<div class="tip" id="fs6">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs7">val zip : list1:&#39;T1 list -&gt; list2:&#39;T2 list -&gt; (&#39;T1 * &#39;T2) list<br /><br />Full name: Microsoft.FSharp.Collections.List.zip</div>
<div class="tip" id="fs8">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member Remove : key:&#39;Key -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Map&lt;_,_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs9">val ofList : elements:(&#39;Key * &#39;T) list -&gt; Map&lt;&#39;Key,&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.ofList</div>
<div class="tip" id="fs10">val item2IsKey : Map&lt;&#39;b,&#39;a&gt; (requires comparison and comparison)</div>
<div class="tip" id="fs11">member BiMap.findBy1 : key:&#39;a -&gt; &#39;b<br /><br />Full name: Script.BiMap`2.findBy1</div>
<div class="tip" id="fs12">val key : &#39;a (requires comparison)</div>
<div class="tip" id="fs13">val find : key:&#39;Key -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; &#39;T (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.find</div>
<div class="tip" id="fs14">val __ : BiMap&lt;&#39;a,&#39;b&gt; (requires comparison and comparison)</div>
<div class="tip" id="fs15">member BiMap.tryFindBy1 : key:&#39;a -&gt; &#39;b option<br /><br />Full name: Script.BiMap`2.tryFindBy1</div>
<div class="tip" id="fs16">val tryFind : key:&#39;Key -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; &#39;T option (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.tryFind</div>
<div class="tip" id="fs17">member BiMap.findBy2 : key:&#39;b -&gt; &#39;a<br /><br />Full name: Script.BiMap`2.findBy2</div>
<div class="tip" id="fs18">val key : &#39;b (requires comparison)</div>
<div class="tip" id="fs19">member BiMap.tryFindBy2 : key:&#39;b -&gt; &#39;a option<br /><br />Full name: Script.BiMap`2.tryFindBy2</div>
<div class="tip" id="fs20">type Week =<br />&#160;&#160;| Sunday<br />&#160;&#160;| Monday<br />&#160;&#160;| Tuesday<br />&#160;&#160;| Wednesday<br />&#160;&#160;| Tursday<br />&#160;&#160;| Friday<br />&#160;&#160;| Saturday<br />&#160;&#160;member ToStr : string<br />&#160;&#160;static member FromStr : sWeek:string -&gt; Week option<br /><br />Full name: Script.Week</div>
<div class="tip" id="fs21">union case Week.Sunday: Week</div>
<div class="tip" id="fs22">union case Week.Monday: Week</div>
<div class="tip" id="fs23">union case Week.Tuesday: Week</div>
<div class="tip" id="fs24">union case Week.Wednesday: Week</div>
<div class="tip" id="fs25">union case Week.Tursday: Week</div>
<div class="tip" id="fs26">union case Week.Friday: Week</div>
<div class="tip" id="fs27">union case Week.Saturday: Week</div>
<div class="tip" id="fs28">val weekBiMap : BiMap&lt;Week,string&gt;<br /><br />Full name: Script.weekBiMap</div>
<div class="tip" id="fs29">val this : Week</div>
<div class="tip" id="fs30">member Week.ToStr : string<br /><br />Full name: Script.Week.ToStr</div>
<div class="tip" id="fs31">member BiMap.findBy1 : key:&#39;a -&gt; &#39;b</div>
<div class="tip" id="fs32">static member Week.FromStr : sWeek:string -&gt; Week option<br /><br />Full name: Script.Week.FromStr</div>
<div class="tip" id="fs33">val sWeek : string</div>
<div class="tip" id="fs34">member BiMap.tryFindBy2 : key:&#39;b -&gt; &#39;a option</div>
<div class="tip" id="fs35">static member Week.FromStr : sWeek:string -&gt; Week option</div>

