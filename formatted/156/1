<h2><a name="Miller-Rabin-primality-test" class="anchor" href="#Miller-Rabin-primality-test">Miller-Rabin primality test</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Numerics</span>

<span class="c">///This implementation is based on the Miller-Rabin Haskell implementation </span>
<span class="c">///from http://www.haskell.org/haskellwiki/Testing_primality</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">pow&#39;</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="f">mul</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="f">sq</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">x&#39;</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="i">n&#39;</span> <span class="o">=</span> 
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="f">f</span> <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="i">x</span> <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="i">n</span> <span onmouseout="hideTip(event, 'fs11', 11)" onmouseover="showTip(event, 'fs11', 11)" class="i">y</span> <span class="o">=</span> 
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">n</span> <span class="o">=</span> <span class="n">1I</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs4', 13)" onmouseover="showTip(event, 'fs4', 13)" class="f">mul</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">x</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="i">y</span>
        <span class="k">else</span>
            <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="i">q</span>,<span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="i">r</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="t">BigInteger</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 19)" onmouseover="showTip(event, 'fs15', 19)" class="f">DivRem</span>(<span onmouseout="hideTip(event, 'fs10', 20)" onmouseover="showTip(event, 'fs10', 20)" class="i">n</span>, <span class="n">2I</span>)
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 21)" onmouseover="showTip(event, 'fs16', 21)" class="i">x2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 22)" onmouseover="showTip(event, 'fs5', 22)" class="f">sq</span> <span onmouseout="hideTip(event, 'fs9', 23)" onmouseover="showTip(event, 'fs9', 23)" class="i">x</span>
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs13', 24)" onmouseover="showTip(event, 'fs13', 24)" class="i">r</span> <span class="o">=</span> <span class="n">0I</span> <span class="k">then</span>
                <span onmouseout="hideTip(event, 'fs8', 25)" onmouseover="showTip(event, 'fs8', 25)" class="f">f</span> <span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="i">x2</span> <span onmouseout="hideTip(event, 'fs12', 27)" onmouseover="showTip(event, 'fs12', 27)" class="i">q</span> <span onmouseout="hideTip(event, 'fs11', 28)" onmouseover="showTip(event, 'fs11', 28)" class="i">y</span>
            <span class="k">else</span>
                <span onmouseout="hideTip(event, 'fs8', 29)" onmouseover="showTip(event, 'fs8', 29)" class="f">f</span> <span onmouseout="hideTip(event, 'fs16', 30)" onmouseover="showTip(event, 'fs16', 30)" class="i">x2</span> <span onmouseout="hideTip(event, 'fs12', 31)" onmouseover="showTip(event, 'fs12', 31)" class="i">q</span> (<span onmouseout="hideTip(event, 'fs4', 32)" onmouseover="showTip(event, 'fs4', 32)" class="f">mul</span> <span onmouseout="hideTip(event, 'fs9', 33)" onmouseover="showTip(event, 'fs9', 33)" class="i">x</span> <span onmouseout="hideTip(event, 'fs11', 34)" onmouseover="showTip(event, 'fs11', 34)" class="i">y</span>)
    <span onmouseout="hideTip(event, 'fs8', 35)" onmouseover="showTip(event, 'fs8', 35)" class="f">f</span> <span onmouseout="hideTip(event, 'fs6', 36)" onmouseover="showTip(event, 'fs6', 36)" class="i">x&#39;</span> <span onmouseout="hideTip(event, 'fs7', 37)" onmouseover="showTip(event, 'fs7', 37)" class="i">n&#39;</span> <span class="n">1I</span>
        
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 38)" onmouseover="showTip(event, 'fs17', 38)" class="f">mulMod</span> (<span onmouseout="hideTip(event, 'fs18', 39)" onmouseover="showTip(event, 'fs18', 39)" class="i">a</span> <span class="o">:</span><span onmouseout="hideTip(event, 'fs19', 40)" onmouseover="showTip(event, 'fs19', 40)" class="t">bigint</span>) <span onmouseout="hideTip(event, 'fs20', 41)" onmouseover="showTip(event, 'fs20', 41)" class="i">b</span> <span onmouseout="hideTip(event, 'fs21', 42)" onmouseover="showTip(event, 'fs21', 42)" class="i">c</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs20', 43)" onmouseover="showTip(event, 'fs20', 43)" class="i">b</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs21', 44)" onmouseover="showTip(event, 'fs21', 44)" class="i">c</span>) <span class="o">%</span> <span onmouseout="hideTip(event, 'fs18', 45)" onmouseover="showTip(event, 'fs18', 45)" class="i">a</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 46)" onmouseover="showTip(event, 'fs22', 46)" class="f">squareMod</span> (<span onmouseout="hideTip(event, 'fs18', 47)" onmouseover="showTip(event, 'fs18', 47)" class="i">a</span> <span class="o">:</span><span onmouseout="hideTip(event, 'fs19', 48)" onmouseover="showTip(event, 'fs19', 48)" class="t">bigint</span>) <span onmouseout="hideTip(event, 'fs20', 49)" onmouseover="showTip(event, 'fs20', 49)" class="i">b</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs20', 50)" onmouseover="showTip(event, 'fs20', 50)" class="i">b</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs20', 51)" onmouseover="showTip(event, 'fs20', 51)" class="i">b</span>) <span class="o">%</span> <span onmouseout="hideTip(event, 'fs18', 52)" onmouseover="showTip(event, 'fs18', 52)" class="i">a</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 53)" onmouseover="showTip(event, 'fs23', 53)" class="f">powMod</span> <span onmouseout="hideTip(event, 'fs24', 54)" onmouseover="showTip(event, 'fs24', 54)" class="i">m</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 55)" onmouseover="showTip(event, 'fs3', 55)" class="f">pow&#39;</span> (<span onmouseout="hideTip(event, 'fs17', 56)" onmouseover="showTip(event, 'fs17', 56)" class="f">mulMod</span> <span onmouseout="hideTip(event, 'fs24', 57)" onmouseover="showTip(event, 'fs24', 57)" class="i">m</span>) (<span onmouseout="hideTip(event, 'fs22', 58)" onmouseover="showTip(event, 'fs22', 58)" class="f">squareMod</span> <span onmouseout="hideTip(event, 'fs24', 59)" onmouseover="showTip(event, 'fs24', 59)" class="i">m</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 60)" onmouseover="showTip(event, 'fs25', 60)" class="f">iterate</span> <span onmouseout="hideTip(event, 'fs26', 61)" onmouseover="showTip(event, 'fs26', 61)" class="f">f</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 62)" onmouseover="showTip(event, 'fs27', 62)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 63)" onmouseover="showTip(event, 'fs28', 63)" class="f">unfold</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs9', 64)" onmouseover="showTip(event, 'fs9', 64)" class="i">x</span> <span class="k">-&gt;</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 65)" onmouseover="showTip(event, 'fs29', 65)" class="i">fx</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 66)" onmouseover="showTip(event, 'fs26', 66)" class="f">f</span> <span onmouseout="hideTip(event, 'fs9', 67)" onmouseover="showTip(event, 'fs9', 67)" class="i">x</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs30', 68)" onmouseover="showTip(event, 'fs30', 68)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs9', 69)" onmouseover="showTip(event, 'fs9', 69)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs29', 70)" onmouseover="showTip(event, 'fs29', 70)" class="i">fx</span>))

<span class="c">///See: http://en.wikipedia.org/wiki/Miller%E2%80%93Rabin_primality_test</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 71)" onmouseover="showTip(event, 'fs31', 71)" class="f">millerRabinPrimality</span> <span onmouseout="hideTip(event, 'fs10', 72)" onmouseover="showTip(event, 'fs10', 72)" class="i">n</span> <span onmouseout="hideTip(event, 'fs32', 73)" onmouseover="showTip(event, 'fs32', 73)" class="i">a</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 74)" onmouseover="showTip(event, 'fs33', 74)" class="f">find2km</span> <span onmouseout="hideTip(event, 'fs10', 75)" onmouseover="showTip(event, 'fs10', 75)" class="i">n</span> <span class="o">=</span> 
        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs34', 76)" onmouseover="showTip(event, 'fs34', 76)" class="f">f</span> <span onmouseout="hideTip(event, 'fs35', 77)" onmouseover="showTip(event, 'fs35', 77)" class="i">k</span> <span onmouseout="hideTip(event, 'fs36', 78)" onmouseover="showTip(event, 'fs36', 78)" class="i">m</span> <span class="o">=</span> 
            <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs12', 79)" onmouseover="showTip(event, 'fs12', 79)" class="i">q</span>,<span onmouseout="hideTip(event, 'fs13', 80)" onmouseover="showTip(event, 'fs13', 80)" class="i">r</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 81)" onmouseover="showTip(event, 'fs14', 81)" class="t">BigInteger</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 82)" onmouseover="showTip(event, 'fs15', 82)" class="f">DivRem</span>(<span onmouseout="hideTip(event, 'fs36', 83)" onmouseover="showTip(event, 'fs36', 83)" class="i">m</span>, <span class="n">2I</span>)
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs13', 84)" onmouseover="showTip(event, 'fs13', 84)" class="i">r</span> <span class="o">=</span> <span class="n">1I</span> <span class="k">then</span>
                (<span onmouseout="hideTip(event, 'fs35', 85)" onmouseover="showTip(event, 'fs35', 85)" class="i">k</span>,<span onmouseout="hideTip(event, 'fs36', 86)" onmouseover="showTip(event, 'fs36', 86)" class="i">m</span>)
            <span class="k">else</span>
                <span onmouseout="hideTip(event, 'fs34', 87)" onmouseover="showTip(event, 'fs34', 87)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs35', 88)" onmouseover="showTip(event, 'fs35', 88)" class="i">k</span><span class="o">+</span><span class="n">1I</span>) <span onmouseout="hideTip(event, 'fs12', 89)" onmouseover="showTip(event, 'fs12', 89)" class="i">q</span>
        <span onmouseout="hideTip(event, 'fs34', 90)" onmouseover="showTip(event, 'fs34', 90)" class="f">f</span> <span class="n">0I</span> <span onmouseout="hideTip(event, 'fs10', 91)" onmouseover="showTip(event, 'fs10', 91)" class="i">n</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 92)" onmouseover="showTip(event, 'fs7', 92)" class="i">n&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 93)" onmouseover="showTip(event, 'fs10', 93)" class="i">n</span> <span class="o">-</span> <span class="n">1I</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 94)" onmouseover="showTip(event, 'fs37', 94)" class="f">iter</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 95)" onmouseover="showTip(event, 'fs27', 95)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 96)" onmouseover="showTip(event, 'fs38', 96)" class="f">tryPick</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs39', 97)" onmouseover="showTip(event, 'fs39', 97)" class="i">x</span> <span class="k">-&gt;</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs39', 98)" onmouseover="showTip(event, 'fs39', 98)" class="i">x</span> <span class="o">=</span> <span class="n">1I</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs30', 99)" onmouseover="showTip(event, 'fs30', 99)" class="p">Some</span>(<span class="k">false</span>) <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs39', 100)" onmouseover="showTip(event, 'fs39', 100)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 101)" onmouseover="showTip(event, 'fs7', 101)" class="i">n&#39;</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs30', 102)" onmouseover="showTip(event, 'fs30', 102)" class="p">Some</span>(<span class="k">true</span>) <span class="k">else</span> <span onmouseout="hideTip(event, 'fs40', 103)" onmouseover="showTip(event, 'fs40', 103)" class="p">None</span>)
    <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs35', 104)" onmouseover="showTip(event, 'fs35', 104)" class="i">k</span>,<span onmouseout="hideTip(event, 'fs36', 105)" onmouseover="showTip(event, 'fs36', 105)" class="i">m</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 106)" onmouseover="showTip(event, 'fs33', 106)" class="f">find2km</span> <span onmouseout="hideTip(event, 'fs7', 107)" onmouseover="showTip(event, 'fs7', 107)" class="i">n&#39;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 108)" onmouseover="showTip(event, 'fs41', 108)" class="i">b0</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 109)" onmouseover="showTip(event, 'fs23', 109)" class="f">powMod</span> <span onmouseout="hideTip(event, 'fs10', 110)" onmouseover="showTip(event, 'fs10', 110)" class="i">n</span> <span onmouseout="hideTip(event, 'fs32', 111)" onmouseover="showTip(event, 'fs32', 111)" class="i">a</span> <span onmouseout="hideTip(event, 'fs36', 112)" onmouseover="showTip(event, 'fs36', 112)" class="i">m</span>

    <span class="k">match</span> (<span onmouseout="hideTip(event, 'fs32', 113)" onmouseover="showTip(event, 'fs32', 113)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs10', 114)" onmouseover="showTip(event, 'fs10', 114)" class="i">n</span>) <span class="k">with</span>
        | _ <span class="k">when</span> <span onmouseout="hideTip(event, 'fs32', 115)" onmouseover="showTip(event, 'fs32', 115)" class="i">a</span> <span class="o">&lt;=</span> <span class="n">1I</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs32', 116)" onmouseover="showTip(event, 'fs32', 116)" class="i">a</span> <span class="o">&gt;</span><span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 117)" onmouseover="showTip(event, 'fs7', 117)" class="i">n&#39;</span> <span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs42', 118)" onmouseover="showTip(event, 'fs42', 118)" class="f">failwith</span> (<span onmouseout="hideTip(event, 'fs43', 119)" onmouseover="showTip(event, 'fs43', 119)" class="f">sprintf</span> <span class="s">&quot;millerRabinPrimality: a out of range (</span><span class="pf">%A</span><span class="s"> for </span><span class="pf">%A</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs32', 120)" onmouseover="showTip(event, 'fs32', 120)" class="i">a</span> <span onmouseout="hideTip(event, 'fs10', 121)" onmouseover="showTip(event, 'fs10', 121)" class="i">n</span>)
        | _ <span class="k">when</span> <span onmouseout="hideTip(event, 'fs41', 122)" onmouseover="showTip(event, 'fs41', 122)" class="i">b0</span> <span class="o">=</span> <span class="n">1I</span> <span class="o">||</span> <span onmouseout="hideTip(event, 'fs41', 123)" onmouseover="showTip(event, 'fs41', 123)" class="i">b0</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 124)" onmouseover="showTip(event, 'fs7', 124)" class="i">n&#39;</span> <span class="k">-&gt;</span> <span class="k">true</span>
        | _  <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs41', 125)" onmouseover="showTip(event, 'fs41', 125)" class="i">b0</span> 
                 <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 126)" onmouseover="showTip(event, 'fs25', 126)" class="f">iterate</span> (<span onmouseout="hideTip(event, 'fs22', 127)" onmouseover="showTip(event, 'fs22', 127)" class="f">squareMod</span> <span onmouseout="hideTip(event, 'fs10', 128)" onmouseover="showTip(event, 'fs10', 128)" class="i">n</span>) 
                 <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs27', 129)" onmouseover="showTip(event, 'fs27', 129)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 130)" onmouseover="showTip(event, 'fs44', 130)" class="f">take</span>(<span onmouseout="hideTip(event, 'fs45', 131)" onmouseover="showTip(event, 'fs45', 131)" class="f">int</span> <span onmouseout="hideTip(event, 'fs35', 132)" onmouseover="showTip(event, 'fs35', 132)" class="i">k</span>)
                 <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs27', 133)" onmouseover="showTip(event, 'fs27', 133)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 134)" onmouseover="showTip(event, 'fs46', 134)" class="f">skip</span> <span class="n">1</span> 
                 <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs37', 135)" onmouseover="showTip(event, 'fs37', 135)" class="f">iter</span> 
                 <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs47', 136)" onmouseover="showTip(event, 'fs47', 136)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 137)" onmouseover="showTip(event, 'fs48', 137)" class="f">exists</span> <span onmouseout="hideTip(event, 'fs49', 138)" onmouseover="showTip(event, 'fs49', 138)" class="f">id</span> 

<span class="c">///For Miller-Rabin the witnesses need to be selected at random from the interval [2, n - 2]. </span>
<span class="c">///More witnesses =&gt; better accuracy of the test.</span>
<span class="c">///Also, remember that if Miller-Rabin returns true, then the number is _probable_ prime. </span>
<span class="c">///If it returns false the number is composite.</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 139)" onmouseover="showTip(event, 'fs50', 139)" class="f">isPrimeW</span> <span onmouseout="hideTip(event, 'fs51', 140)" onmouseover="showTip(event, 'fs51', 140)" class="i">witnesses</span> <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs10', 141)" onmouseover="showTip(event, 'fs10', 141)" class="i">n</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs10', 142)" onmouseover="showTip(event, 'fs10', 142)" class="i">n</span> <span class="o">&lt;</span> <span class="n">2I</span> <span class="k">-&gt;</span> <span class="k">false</span>
    | <span onmouseout="hideTip(event, 'fs10', 143)" onmouseover="showTip(event, 'fs10', 143)" class="i">n</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs10', 144)" onmouseover="showTip(event, 'fs10', 144)" class="i">n</span> <span class="o">=</span> <span class="n">2I</span> <span class="k">-&gt;</span> <span class="k">true</span>
    | <span onmouseout="hideTip(event, 'fs10', 145)" onmouseover="showTip(event, 'fs10', 145)" class="i">n</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs10', 146)" onmouseover="showTip(event, 'fs10', 146)" class="i">n</span> <span class="o">=</span> <span class="n">3I</span> <span class="k">-&gt;</span> <span class="k">true</span>
    | <span onmouseout="hideTip(event, 'fs10', 147)" onmouseover="showTip(event, 'fs10', 147)" class="i">n</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs10', 148)" onmouseover="showTip(event, 'fs10', 148)" class="i">n</span> <span class="o">%</span> <span class="n">2I</span> <span class="o">=</span> <span class="n">0I</span> <span class="k">-&gt;</span> <span class="k">false</span>
    | <span onmouseout="hideTip(event, 'fs10', 149)" onmouseover="showTip(event, 'fs10', 149)" class="i">n</span>             <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 150)" onmouseover="showTip(event, 'fs51', 150)" class="i">witnesses</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs27', 151)" onmouseover="showTip(event, 'fs27', 151)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 152)" onmouseover="showTip(event, 'fs52', 152)" class="f">forall</span>(<span onmouseout="hideTip(event, 'fs31', 153)" onmouseover="showTip(event, 'fs31', 153)" class="f">millerRabinPrimality</span> <span onmouseout="hideTip(event, 'fs10', 154)" onmouseover="showTip(event, 'fs10', 154)" class="i">n</span>)
</code></pre></td>
</tr>
</table>
<h2><a name="Example" class="anchor" href="#Example">Example</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 155)" onmouseover="showTip(event, 'fs53', 155)" class="f">isPrime</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs50', 156)" onmouseover="showTip(event, 'fs50', 156)" class="f">isPrimeW</span> [<span class="n">2I</span>;<span class="n">3I</span>] <span class="c">// Two witnesses</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 157)" onmouseover="showTip(event, 'fs54', 157)" class="i">p</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 158)" onmouseover="showTip(event, 'fs55', 158)" class="f">pown</span> <span class="n">2I</span> <span class="n">4423</span> <span class="o">-</span> <span class="n">1I</span> <span class="c">// 20th Mersenne prime. 1,332 digits</span>
<span onmouseout="hideTip(event, 'fs53', 159)" onmouseover="showTip(event, 'fs53', 159)" class="f">isPrime</span> <span onmouseout="hideTip(event, 'fs54', 160)" onmouseover="showTip(event, 'fs54', 160)" class="i">p</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs56', 161)" onmouseover="showTip(event, 'fs56', 161)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%b</span><span class="s">&quot;</span>
<span class="c">// Real: 00:00:03.184, CPU: 00:00:03.104, GC gen0: 12, gen1: 0, gen2: 0</span>
<span class="c">// val it : bool = true</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Numerics</div>
<div class="tip" id="fs3">val pow&#39; : mul:(&#39;a -&gt; BigInteger -&gt; BigInteger) -&gt; sq:(&#39;a -&gt; &#39;a) -&gt; x&#39;:&#39;a -&gt; n&#39;:BigInteger -&gt; BigInteger<br /><br />Full name: Script.pow&#39;<br /><em><br /><br />This implementation is based on the Miller-Rabin Haskell implementation <br />from http://www.haskell.org/haskellwiki/Testing_primality</em></div>
<div class="tip" id="fs4">val mul : (&#39;a -&gt; BigInteger -&gt; BigInteger)</div>
<div class="tip" id="fs5">val sq : (&#39;a -&gt; &#39;a)</div>
<div class="tip" id="fs6">val x&#39; : &#39;a</div>
<div class="tip" id="fs7">val n&#39; : BigInteger</div>
<div class="tip" id="fs8">val f : (&#39;a -&gt; BigInteger -&gt; BigInteger -&gt; BigInteger)</div>
<div class="tip" id="fs9">val x : &#39;a</div>
<div class="tip" id="fs10">val n : BigInteger</div>
<div class="tip" id="fs11">val y : BigInteger</div>
<div class="tip" id="fs12">val q : BigInteger</div>
<div class="tip" id="fs13">val r : BigInteger</div>
<div class="tip" id="fs14">Multiple items<br />type BigInteger =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : value:int -&gt; BigInteger + 7 overloads<br />&#160;&#160;&#160;&#160;member CompareTo : other:int64 -&gt; int + 3 overloads<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 3 overloads<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member IsEven : bool<br />&#160;&#160;&#160;&#160;member IsOne : bool<br />&#160;&#160;&#160;&#160;member IsPowerOfTwo : bool<br />&#160;&#160;&#160;&#160;member IsZero : bool<br />&#160;&#160;&#160;&#160;member Sign : int<br />&#160;&#160;&#160;&#160;member ToByteArray : unit -&gt; byte[]<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Numerics.BigInteger<br /><br />--------------------<br />BigInteger()<br />BigInteger(value: int) : unit<br />BigInteger(value: uint32) : unit<br />BigInteger(value: int64) : unit<br />BigInteger(value: uint64) : unit<br />BigInteger(value: float32) : unit<br />BigInteger(value: float) : unit<br />BigInteger(value: decimal) : unit<br />BigInteger(value: byte []) : unit</div>
<div class="tip" id="fs15">BigInteger.DivRem(dividend: BigInteger, divisor: BigInteger, remainder: byref&lt;BigInteger&gt;) : BigInteger</div>
<div class="tip" id="fs16">val x2 : &#39;a</div>
<div class="tip" id="fs17">val mulMod : a:bigint -&gt; b:BigInteger -&gt; c:BigInteger -&gt; BigInteger<br /><br />Full name: Script.mulMod</div>
<div class="tip" id="fs18">val a : bigint</div>
<div class="tip" id="fs19">type bigint = BigInteger<br /><br />Full name: Microsoft.FSharp.Core.bigint</div>
<div class="tip" id="fs20">val b : BigInteger</div>
<div class="tip" id="fs21">val c : BigInteger</div>
<div class="tip" id="fs22">val squareMod : a:bigint -&gt; b:BigInteger -&gt; BigInteger<br /><br />Full name: Script.squareMod</div>
<div class="tip" id="fs23">val powMod : m:bigint -&gt; (BigInteger -&gt; BigInteger -&gt; BigInteger)<br /><br />Full name: Script.powMod</div>
<div class="tip" id="fs24">val m : bigint</div>
<div class="tip" id="fs25">val iterate : f:(&#39;a -&gt; &#39;a) -&gt; (&#39;a -&gt; seq&lt;&#39;a&gt;)<br /><br />Full name: Script.iterate</div>
<div class="tip" id="fs26">val f : (&#39;a -&gt; &#39;a)</div>
<div class="tip" id="fs27">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs28">val unfold : generator:(&#39;State -&gt; (&#39;T * &#39;State) option) -&gt; state:&#39;State -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.unfold</div>
<div class="tip" id="fs29">val fx : &#39;a</div>
<div class="tip" id="fs30">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs31">val millerRabinPrimality : n:BigInteger -&gt; a:BigInteger -&gt; bool<br /><br />Full name: Script.millerRabinPrimality<br /><em><br /><br />See: http://en.wikipedia.org/wiki/Miller%E2%80%93Rabin_primality_test</em></div>
<div class="tip" id="fs32">val a : BigInteger</div>
<div class="tip" id="fs33">val find2km : (BigInteger -&gt; BigInteger * BigInteger)</div>
<div class="tip" id="fs34">val f : (BigInteger -&gt; BigInteger -&gt; BigInteger * BigInteger)</div>
<div class="tip" id="fs35">val k : BigInteger</div>
<div class="tip" id="fs36">val m : BigInteger</div>
<div class="tip" id="fs37">val iter : (seq&lt;BigInteger&gt; -&gt; bool option)</div>
<div class="tip" id="fs38">val tryPick : chooser:(&#39;T -&gt; &#39;U option) -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;U option<br /><br />Full name: Microsoft.FSharp.Collections.Seq.tryPick</div>
<div class="tip" id="fs39">val x : BigInteger</div>
<div class="tip" id="fs40">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs41">val b0 : BigInteger</div>
<div class="tip" id="fs42">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs43">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs44">val take : count:int -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.take</div>
<div class="tip" id="fs45">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs46">val skip : count:int -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.skip</div>
<div class="tip" id="fs47">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs48">val exists : predicate:(&#39;T -&gt; bool) -&gt; option:&#39;T option -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Option.exists</div>
<div class="tip" id="fs49">val id : x:&#39;T -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.id</div>
<div class="tip" id="fs50">val isPrimeW : witnesses:seq&lt;BigInteger&gt; -&gt; _arg1:BigInteger -&gt; bool<br /><br />Full name: Script.isPrimeW<br /><em><br /><br />For Miller-Rabin the witnesses need to be selected at random from the interval [2, n - 2]. <br />More witnesses =&gt; better accuracy of the test.<br />Also, remember that if Miller-Rabin returns true, then the number is _probable_ prime. <br />If it returns false the number is composite.</em></div>
<div class="tip" id="fs51">val witnesses : seq&lt;BigInteger&gt;</div>
<div class="tip" id="fs52">val forall : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.Seq.forall</div>
<div class="tip" id="fs53">val isPrime : (BigInteger -&gt; bool)<br /><br />Full name: Script.isPrime</div>
<div class="tip" id="fs54">val p : BigInteger<br /><br />Full name: Script.p</div>
<div class="tip" id="fs55">val pown : x:&#39;T -&gt; n:int -&gt; &#39;T (requires member get_One and member ( * ) and member ( / ))<br /><br />Full name: Microsoft.FSharp.Core.Operators.pown</div>
<div class="tip" id="fs56">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>

