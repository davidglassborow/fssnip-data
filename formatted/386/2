<h2><a name="Common-functions-and-declarations" class="anchor" href="#Common-functions-and-declarations">Common functions and declarations</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// NOTE: This snippet uses System.Net extensions from: http://fssnip.net/6d</span>
<span class="c">// (such as HttpListener.Start and WebClient.AsyncDownloadData)</span>

<span class="c">// Location where the proxy copies content from</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">root</span> <span class="o">=</span> <span class="s">&quot;http://msdn.microsoft.com&quot;</span>

<span class="c">// Maps requests from local URL to target URL</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="f">getProxyUrl</span> (<span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">ctx</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">HttpListenerContext</span>) <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">Uri</span>(<span onmouseout="hideTip(event, 'fs1', 6)" onmouseover="showTip(event, 'fs1', 6)" class="i">root</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">Request</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">Url</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">PathAndQuery</span>)

<span class="c">// Handle exception - generate page with message</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="f">handleError</span> (<span onmouseout="hideTip(event, 'fs3', 12)" onmouseover="showTip(event, 'fs3', 12)" class="i">ctx</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 13)" onmouseover="showTip(event, 'fs4', 13)" class="t">HttpListenerContext</span>) (<span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="i">e</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="t">exn</span>) <span class="o">=</span>
  <span class="k">use</span> <span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="i">wr</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="t">StreamWriter</span>(<span onmouseout="hideTip(event, 'fs3', 18)" onmouseover="showTip(event, 'fs3', 18)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="i">Response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="i">OutputStream</span>)
  <span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="i">wr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="f">Write</span>(<span class="s">&quot;&lt;h1&gt;Request Failed&lt;/h1&gt;&quot;</span>)
  <span onmouseout="hideTip(event, 'fs12', 23)" onmouseover="showTip(event, 'fs12', 23)" class="i">wr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 24)" onmouseover="showTip(event, 'fs16', 24)" class="f">Write</span>(<span class="s">&quot;&lt;p&gt;&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs10', 25)" onmouseover="showTip(event, 'fs10', 25)" class="i">e</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 26)" onmouseover="showTip(event, 'fs17', 26)" class="i">Message</span> <span class="o">+</span> <span class="s">&quot;&lt;/p&gt;&quot;</span>)
  <span onmouseout="hideTip(event, 'fs3', 27)" onmouseover="showTip(event, 'fs3', 27)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 28)" onmouseover="showTip(event, 'fs14', 28)" class="i">Response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="f">Close</span>()

<span class="c">// Handle exception asynchronously - generate page with message</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 30)" onmouseover="showTip(event, 'fs19', 30)" class="f">asyncHandleError</span> (<span onmouseout="hideTip(event, 'fs3', 31)" onmouseover="showTip(event, 'fs3', 31)" class="i">ctx</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 32)" onmouseover="showTip(event, 'fs4', 32)" class="t">HttpListenerContext</span>) (<span onmouseout="hideTip(event, 'fs10', 33)" onmouseover="showTip(event, 'fs10', 33)" class="i">e</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs11', 34)" onmouseover="showTip(event, 'fs11', 34)" class="t">exn</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 35)" onmouseover="showTip(event, 'fs20', 35)" class="i">async</span> {
  <span class="k">use</span> <span onmouseout="hideTip(event, 'fs12', 36)" onmouseover="showTip(event, 'fs12', 36)" class="i">wr</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs13', 37)" onmouseover="showTip(event, 'fs13', 37)" class="t">StreamWriter</span>(<span onmouseout="hideTip(event, 'fs3', 38)" onmouseover="showTip(event, 'fs3', 38)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 39)" onmouseover="showTip(event, 'fs14', 39)" class="i">Response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 40)" onmouseover="showTip(event, 'fs15', 40)" class="i">OutputStream</span>)
  <span onmouseout="hideTip(event, 'fs12', 41)" onmouseover="showTip(event, 'fs12', 41)" class="i">wr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 42)" onmouseover="showTip(event, 'fs16', 42)" class="f">Write</span>(<span class="s">&quot;&lt;h1&gt;Request Failed&lt;/h1&gt;&quot;</span>)
  <span onmouseout="hideTip(event, 'fs12', 43)" onmouseover="showTip(event, 'fs12', 43)" class="i">wr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 44)" onmouseover="showTip(event, 'fs16', 44)" class="f">Write</span>(<span class="s">&quot;&lt;p&gt;&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs10', 45)" onmouseover="showTip(event, 'fs10', 45)" class="i">e</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 46)" onmouseover="showTip(event, 'fs17', 46)" class="i">Message</span> <span class="o">+</span> <span class="s">&quot;&lt;/p&gt;&quot;</span>)
  <span onmouseout="hideTip(event, 'fs3', 47)" onmouseover="showTip(event, 'fs3', 47)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 48)" onmouseover="showTip(event, 'fs14', 48)" class="i">Response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 49)" onmouseover="showTip(event, 'fs18', 49)" class="f">Close</span>() }
</code></pre></td>
</tr>
</table>
<h2><a name="Version-1-Synchronous-proxy-server" class="anchor" href="#Version-1-Synchronous-proxy-server">Version #1: Synchronous proxy server</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp">  <span class="c">/// Handle request on a dedicated thread - This is not </span>
  <span class="c">/// scalable, because thread may be blocked for long time</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 50)" onmouseover="showTip(event, 'fs21', 50)" class="f">handleRequest</span> (<span onmouseout="hideTip(event, 'fs3', 51)" onmouseover="showTip(event, 'fs3', 51)" class="i">ctx</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 52)" onmouseover="showTip(event, 'fs4', 52)" class="t">HttpListenerContext</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 53)" onmouseover="showTip(event, 'fs22', 53)" class="i">wc</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs23', 54)" onmouseover="showTip(event, 'fs23', 54)" class="t">WebClient</span>()
    <span class="k">try</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 55)" onmouseover="showTip(event, 'fs24', 55)" class="i">data</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 56)" onmouseover="showTip(event, 'fs22', 56)" class="i">wc</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 57)" onmouseover="showTip(event, 'fs25', 57)" class="f">DownloadData</span>(<span onmouseout="hideTip(event, 'fs2', 58)" onmouseover="showTip(event, 'fs2', 58)" class="f">getProxyUrl</span>(<span onmouseout="hideTip(event, 'fs3', 59)" onmouseover="showTip(event, 'fs3', 59)" class="i">ctx</span>))
      <span onmouseout="hideTip(event, 'fs3', 60)" onmouseover="showTip(event, 'fs3', 60)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 61)" onmouseover="showTip(event, 'fs14', 61)" class="i">Response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 62)" onmouseover="showTip(event, 'fs15', 62)" class="i">OutputStream</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 63)" onmouseover="showTip(event, 'fs26', 63)" class="f">Write</span>(<span onmouseout="hideTip(event, 'fs24', 64)" onmouseover="showTip(event, 'fs24', 64)" class="i">data</span>, <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs24', 65)" onmouseover="showTip(event, 'fs24', 65)" class="i">data</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 66)" onmouseover="showTip(event, 'fs27', 66)" class="i">Length</span>)
      <span onmouseout="hideTip(event, 'fs3', 67)" onmouseover="showTip(event, 'fs3', 67)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 68)" onmouseover="showTip(event, 'fs14', 68)" class="i">Response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 69)" onmouseover="showTip(event, 'fs18', 69)" class="f">Close</span>()
    <span class="k">with</span> <span onmouseout="hideTip(event, 'fs10', 70)" onmouseover="showTip(event, 'fs10', 70)" class="i">e</span> <span class="k">-&gt;</span>
      <span onmouseout="hideTip(event, 'fs9', 71)" onmouseover="showTip(event, 'fs9', 71)" class="f">handleError</span> <span onmouseout="hideTip(event, 'fs3', 72)" onmouseover="showTip(event, 'fs3', 72)" class="i">ctx</span> <span onmouseout="hideTip(event, 'fs10', 73)" onmouseover="showTip(event, 'fs10', 73)" class="i">e</span>
  
  <span class="c">// Start synchronous HTTP proxy </span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 74)" onmouseover="showTip(event, 'fs28', 74)" class="i">token</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 75)" onmouseover="showTip(event, 'fs29', 75)" class="t">HttpListener</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 76)" onmouseover="showTip(event, 'fs30', 76)" class="f">StartSynchronous</span>(<span class="s">&quot;http://localhost:8080/&quot;</span>, <span onmouseout="hideTip(event, 'fs21', 77)" onmouseover="showTip(event, 'fs21', 77)" class="f">handleRequest</span>)
  <span onmouseout="hideTip(event, 'fs28', 78)" onmouseover="showTip(event, 'fs28', 78)" class="i">token</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 79)" onmouseover="showTip(event, 'fs31', 79)" class="f">Cancel</span>()
</code></pre></td>
</tr>
</table>
<h2><a name="Version-2-Event-based-proxy-server" class="anchor" href="#Version-2-Event-based-proxy-server">Version #2: Event-based proxy server</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp">  <span class="k">module</span> <span class="t">Wrappers</span> <span class="o">=</span>
    <span id="fst32" onmouseout="hideTip(event, 'fs32', 80)" onmouseover="showTip(event, 'fs32', 80, document.getElementById('fst32'))" class="omitted">Wrappers that provide event-based network API</span>

  <span class="k">open</span> <span onmouseout="hideTip(event, 'fs33', 81)" onmouseover="showTip(event, 'fs33', 81)" class="i">Wrappers</span>

  <span class="c">/// Handles request using callbacks - This scales well, but the</span>
  <span class="c">/// code is difficult to write, because we need to use callbacks</span>
  <span class="c">/// (This is similar to the style used by Node.js)</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 82)" onmouseover="showTip(event, 'fs34', 82)" class="f">handleRequestCallback</span> (<span onmouseout="hideTip(event, 'fs3', 83)" onmouseover="showTip(event, 'fs3', 83)" class="i">ctx</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs35', 84)" onmouseover="showTip(event, 'fs35', 84)" class="t">HttpListenerContext</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 85)" onmouseover="showTip(event, 'fs22', 85)" class="i">wc</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs36', 86)" onmouseover="showTip(event, 'fs36', 86)" class="t">WebClient</span>()
    <span onmouseout="hideTip(event, 'fs22', 87)" onmouseover="showTip(event, 'fs22', 87)" class="i">wc</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 88)" onmouseover="showTip(event, 'fs37', 88)" class="f">DownloadData</span>
      ( <span onmouseout="hideTip(event, 'fs2', 89)" onmouseover="showTip(event, 'fs2', 89)" class="f">getProxyUrl</span>(<span onmouseout="hideTip(event, 'fs3', 90)" onmouseover="showTip(event, 'fs3', 90)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 91)" onmouseover="showTip(event, 'fs38', 91)" class="i">Context</span>), 
        <span class="i">success</span> <span class="o">=</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs24', 92)" onmouseover="showTip(event, 'fs24', 92)" class="i">data</span> <span class="k">-&gt;</span>
          <span onmouseout="hideTip(event, 'fs3', 93)" onmouseover="showTip(event, 'fs3', 93)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 94)" onmouseover="showTip(event, 'fs14', 94)" class="i">Response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 95)" onmouseover="showTip(event, 'fs15', 95)" class="i">OutputStream</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 96)" onmouseover="showTip(event, 'fs39', 96)" class="f">Write</span>
            ( <span onmouseout="hideTip(event, 'fs24', 97)" onmouseover="showTip(event, 'fs24', 97)" class="i">data</span>, <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs24', 98)" onmouseover="showTip(event, 'fs24', 98)" class="i">data</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 99)" onmouseover="showTip(event, 'fs27', 99)" class="i">Length</span>,
              <span class="i">success</span> <span class="o">=</span> (<span class="k">fun</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 100)" onmouseover="showTip(event, 'fs3', 100)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 101)" onmouseover="showTip(event, 'fs14', 101)" class="i">Response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 102)" onmouseover="showTip(event, 'fs40', 102)" class="f">Close</span>()),
              <span class="i">error</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 103)" onmouseover="showTip(event, 'fs9', 103)" class="f">handleError</span> <span onmouseout="hideTip(event, 'fs3', 104)" onmouseover="showTip(event, 'fs3', 104)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 105)" onmouseover="showTip(event, 'fs38', 105)" class="i">Context</span> )),
        <span class="i">error</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 106)" onmouseover="showTip(event, 'fs9', 106)" class="f">handleError</span> <span onmouseout="hideTip(event, 'fs3', 107)" onmouseover="showTip(event, 'fs3', 107)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 108)" onmouseover="showTip(event, 'fs38', 108)" class="i">Context</span> )

  <span class="c">// Start HTTP proxy that handles requests using callbacks </span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 109)" onmouseover="showTip(event, 'fs41', 109)" class="i">token</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 110)" onmouseover="showTip(event, 'fs29', 110)" class="t">HttpListener</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 111)" onmouseover="showTip(event, 'fs30', 111)" class="f">StartSynchronous</span>(<span class="s">&quot;http://localhost:8080/&quot;</span>, <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs3', 112)" onmouseover="showTip(event, 'fs3', 112)" class="i">ctx</span> <span class="k">-&gt;</span>
    <span onmouseout="hideTip(event, 'fs34', 113)" onmouseover="showTip(event, 'fs34', 113)" class="f">handleRequestCallback</span>(<span onmouseout="hideTip(event, 'fs35', 114)" onmouseover="showTip(event, 'fs35', 114)" class="t">HttpListenerContext</span>(<span onmouseout="hideTip(event, 'fs3', 115)" onmouseover="showTip(event, 'fs3', 115)" class="i">ctx</span>)))
  <span onmouseout="hideTip(event, 'fs41', 116)" onmouseover="showTip(event, 'fs41', 116)" class="i">token</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 117)" onmouseover="showTip(event, 'fs31', 117)" class="f">Cancel</span>()
</code></pre></td>
</tr>
</table>
<h2><a name="Version-3-Asynchronous-proxy-server" class="anchor" href="#Version-3-Asynchronous-proxy-server">Version #3: Asynchronous proxy server</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp">  <span class="c">/// Handles request using asynchronous workflows - We get efficient &amp; scalable</span>
  <span class="c">/// code by wrapping synchronous solution in &#39;async&#39; block and changing</span>
  <span class="c">/// synchronous primitives to asynchronous (e.g. AsyncWrite)  </span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 118)" onmouseover="showTip(event, 'fs42', 118)" class="f">asyncHandleRequest</span> (<span onmouseout="hideTip(event, 'fs3', 119)" onmouseover="showTip(event, 'fs3', 119)" class="i">ctx</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 120)" onmouseover="showTip(event, 'fs4', 120)" class="t">HttpListenerContext</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 121)" onmouseover="showTip(event, 'fs20', 121)" class="i">async</span> {
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 122)" onmouseover="showTip(event, 'fs22', 122)" class="i">wc</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs23', 123)" onmouseover="showTip(event, 'fs23', 123)" class="t">WebClient</span>()
    <span class="k">try</span>
      <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs24', 124)" onmouseover="showTip(event, 'fs24', 124)" class="i">data</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 125)" onmouseover="showTip(event, 'fs22', 125)" class="i">wc</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 126)" onmouseover="showTip(event, 'fs43', 126)" class="f">AsyncDownloadData</span>(<span onmouseout="hideTip(event, 'fs2', 127)" onmouseover="showTip(event, 'fs2', 127)" class="f">getProxyUrl</span>(<span onmouseout="hideTip(event, 'fs3', 128)" onmouseover="showTip(event, 'fs3', 128)" class="i">ctx</span>))
      <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs3', 129)" onmouseover="showTip(event, 'fs3', 129)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 130)" onmouseover="showTip(event, 'fs14', 130)" class="i">Response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 131)" onmouseover="showTip(event, 'fs15', 131)" class="i">OutputStream</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 132)" onmouseover="showTip(event, 'fs44', 132)" class="f">AsyncWrite</span>(<span onmouseout="hideTip(event, 'fs24', 133)" onmouseover="showTip(event, 'fs24', 133)" class="i">data</span>) 
    <span class="k">with</span> <span onmouseout="hideTip(event, 'fs10', 134)" onmouseover="showTip(event, 'fs10', 134)" class="i">e</span> <span class="k">-&gt;</span>
      <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs19', 135)" onmouseover="showTip(event, 'fs19', 135)" class="f">asyncHandleError</span> <span onmouseout="hideTip(event, 'fs3', 136)" onmouseover="showTip(event, 'fs3', 136)" class="i">ctx</span> <span onmouseout="hideTip(event, 'fs10', 137)" onmouseover="showTip(event, 'fs10', 137)" class="i">e</span> }

  <span class="c">// Start HTTP proxy that handles requests asynchronously</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs45', 138)" onmouseover="showTip(event, 'fs45', 138)" class="i">token</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 139)" onmouseover="showTip(event, 'fs29', 139)" class="t">HttpListener</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 140)" onmouseover="showTip(event, 'fs46', 140)" class="f">Start</span>(<span class="s">&quot;http://localhost:8080/&quot;</span>, <span onmouseout="hideTip(event, 'fs42', 141)" onmouseover="showTip(event, 'fs42', 141)" class="f">asyncHandleRequest</span>)
  <span onmouseout="hideTip(event, 'fs45', 142)" onmouseover="showTip(event, 'fs45', 142)" class="i">token</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 143)" onmouseover="showTip(event, 'fs31', 143)" class="f">Cancel</span>()
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val root : string<br /><br />Full name: Script.root</div>
<div class="tip" id="fs2">val getProxyUrl : ctx:HttpListenerContext -&gt; Uri<br /><br />Full name: Script.getProxyUrl</div>
<div class="tip" id="fs3">val ctx : HttpListenerContext</div>
<div class="tip" id="fs4">type HttpListenerContext =<br />&#160;&#160;member Request : HttpListenerRequest<br />&#160;&#160;member Response : HttpListenerResponse<br />&#160;&#160;member User : IPrincipal<br /><br />Full name: System.Net.HttpListenerContext</div>
<div class="tip" id="fs5">Multiple items<br />type Uri =<br />&#160;&#160;new : uriString:string -&gt; Uri + 5 overloads<br />&#160;&#160;member AbsolutePath : string<br />&#160;&#160;member AbsoluteUri : string<br />&#160;&#160;member Authority : string<br />&#160;&#160;member DnsSafeHost : string<br />&#160;&#160;member Equals : comparand:obj -&gt; bool<br />&#160;&#160;member Fragment : string<br />&#160;&#160;member GetComponents : components:UriComponents * format:UriFormat -&gt; string<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetLeftPart : part:UriPartial -&gt; string<br />&#160;&#160;...<br /><br />Full name: System.Uri<br /><br />--------------------<br />Uri(uriString: string) : unit<br />Uri(uriString: string, uriKind: UriKind) : unit<br />Uri(baseUri: Uri, relativeUri: string) : unit<br />Uri(baseUri: Uri, relativeUri: Uri) : unit</div>
<div class="tip" id="fs6">property HttpListenerContext.Request: HttpListenerRequest</div>
<div class="tip" id="fs7">property HttpListenerRequest.Url: Uri</div>
<div class="tip" id="fs8">property Uri.PathAndQuery: string</div>
<div class="tip" id="fs9">val handleError : ctx:HttpListenerContext -&gt; e:exn -&gt; unit<br /><br />Full name: Script.handleError</div>
<div class="tip" id="fs10">val e : exn</div>
<div class="tip" id="fs11">type exn = Exception<br /><br />Full name: Microsoft.FSharp.Core.exn</div>
<div class="tip" id="fs12">val wr : StreamWriter</div>
<div class="tip" id="fs13">Multiple items<br />type StreamWriter =<br />&#160;&#160;inherit TextWriter<br />&#160;&#160;new : stream:Stream -&gt; StreamWriter + 6 overloads<br />&#160;&#160;member AutoFlush : bool with get, set<br />&#160;&#160;member BaseStream : Stream<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member Encoding : Encoding<br />&#160;&#160;member Flush : unit -&gt; unit<br />&#160;&#160;member Write : value:char -&gt; unit + 3 overloads<br />&#160;&#160;static val Null : StreamWriter<br /><br />Full name: System.IO.StreamWriter<br /><br />--------------------<br />StreamWriter(stream: Stream) : unit<br />StreamWriter(path: string) : unit<br />StreamWriter(stream: Stream, encoding: Text.Encoding) : unit<br />StreamWriter(path: string, append: bool) : unit<br />StreamWriter(stream: Stream, encoding: Text.Encoding, bufferSize: int) : unit<br />StreamWriter(path: string, append: bool, encoding: Text.Encoding) : unit<br />StreamWriter(path: string, append: bool, encoding: Text.Encoding, bufferSize: int) : unit</div>
<div class="tip" id="fs14">property HttpListenerContext.Response: HttpListenerResponse</div>
<div class="tip" id="fs15">property HttpListenerResponse.OutputStream: Stream</div>
<div class="tip" id="fs16">TextWriter.Write(value: obj) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />TextWriter.Write(value: decimal) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />TextWriter.Write(value: float) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />TextWriter.Write(value: float32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />TextWriter.Write(value: uint64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />TextWriter.Write(value: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />TextWriter.Write(value: uint32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />TextWriter.Write(value: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />TextWriter.Write(value: bool) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StreamWriter.Write(value: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs17">property Exception.Message: string</div>
<div class="tip" id="fs18">HttpListenerResponse.Close() : unit<br />HttpListenerResponse.Close(responseEntity: byte [], willBlock: bool) : unit</div>
<div class="tip" id="fs19">val asyncHandleError : ctx:HttpListenerContext -&gt; e:exn -&gt; Async&lt;unit&gt;<br /><br />Full name: Script.asyncHandleError</div>
<div class="tip" id="fs20">val async : AsyncBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.async</div>
<div class="tip" id="fs21">val handleRequest : ctx:HttpListenerContext -&gt; unit<br /><br />Full name: Script.Synchronous.handleRequest<br /><em><br /><br />&#160;Handle request on a dedicated thread - This is not <br />&#160;scalable, because thread may be blocked for long time</em></div>
<div class="tip" id="fs22">val wc : WebClient</div>
<div class="tip" id="fs23">Multiple items<br />type WebClient =<br />&#160;&#160;inherit Component<br />&#160;&#160;new : unit -&gt; WebClient<br />&#160;&#160;member BaseAddress : string with get, set<br />&#160;&#160;member CachePolicy : RequestCachePolicy with get, set<br />&#160;&#160;member CancelAsync : unit -&gt; unit<br />&#160;&#160;member Credentials : ICredentials with get, set<br />&#160;&#160;member DownloadData : address:string -&gt; byte[] + 1 overload<br />&#160;&#160;member DownloadDataAsync : address:Uri -&gt; unit + 1 overload<br />&#160;&#160;member DownloadFile : address:string * fileName:string -&gt; unit + 1 overload<br />&#160;&#160;member DownloadFileAsync : address:Uri * fileName:string -&gt; unit + 1 overload<br />&#160;&#160;member DownloadString : address:string -&gt; string + 1 overload<br />&#160;&#160;...<br /><br />Full name: System.Net.WebClient<br /><br />--------------------<br />WebClient() : unit</div>
<div class="tip" id="fs24">val data : byte []</div>
<div class="tip" id="fs25">WebClient.DownloadData(address: Uri) : byte []<br />WebClient.DownloadData(address: string) : byte []</div>
<div class="tip" id="fs26">Stream.Write(buffer: byte [], offset: int, count: int) : unit</div>
<div class="tip" id="fs27">property Array.Length: int</div>
<div class="tip" id="fs28">val token : CancellationTokenSource<br /><br />Full name: Script.Synchronous.token</div>
<div class="tip" id="fs29">Multiple items<br />type HttpListener =<br />&#160;&#160;new : unit -&gt; HttpListener<br />&#160;&#160;member Abort : unit -&gt; unit<br />&#160;&#160;member AuthenticationSchemeSelectorDelegate : AuthenticationSchemeSelector with get, set<br />&#160;&#160;member AuthenticationSchemes : AuthenticationSchemes with get, set<br />&#160;&#160;member BeginGetContext : callback:AsyncCallback * state:obj -&gt; IAsyncResult<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member DefaultServiceNames : ServiceNameCollection<br />&#160;&#160;member EndGetContext : asyncResult:IAsyncResult -&gt; HttpListenerContext<br />&#160;&#160;member ExtendedProtectionPolicy : ExtendedProtectionPolicy with get, set<br />&#160;&#160;member ExtendedProtectionSelectorDelegate : ExtendedProtectionSelector with get, set<br />&#160;&#160;...<br />&#160;&#160;nested type ExtendedProtectionSelector<br /><br />Full name: System.Net.HttpListener<br /><br />--------------------<br />HttpListener() : unit</div>
<div class="tip" id="fs30">static member HttpListener.StartSynchronous : url:string * f:(HttpListenerContext -&gt; unit) -&gt; CancellationTokenSource<br /><em><br /><br />&#160;Starts an HTTP server on the specified URL with the<br />&#160;specified synchronous function for handling requests</em></div>
<div class="tip" id="fs31">CancellationTokenSource.Cancel() : unit<br />CancellationTokenSource.Cancel(throwOnFirstException: bool) : unit</div>
<div class="tip" id="fs32">type Stream(stream:IO.Stream) = <br />&#160;&#160;&#160;&#160;&#160;&#160;/// Writes data to stream. Calls &#39;success&#39; callback when <br />&#160;&#160;&#160;&#160;&#160;&#160;/// completed or &#39;error&#39; callback when error occurs.<br />&#160;&#160;&#160;&#160;&#160;&#160;member x.Write(buffer, offset, count, success, error) =<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;stream.BeginWrite(buffer, offset, count, (fun ar -&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;try success(stream.EndRead(ar))<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;with e -&gt; error(e)), null) |&gt; ignore<br /><br />&#160;&#160;&#160;&#160;type HttpListenerResponse(rsp:System.Net.HttpListenerResponse) =<br />&#160;&#160;&#160;&#160;&#160;&#160;member x.OutputStream = Stream(rsp.OutputStream)<br />&#160;&#160;&#160;&#160;&#160;&#160;member x.Close() = rsp.Close()<br /><br />&#160;&#160;&#160;&#160;type HttpListenerContext(ctx:System.Net.HttpListenerContext) =<br />&#160;&#160;&#160;&#160;&#160;&#160;member x.Response = HttpListenerResponse(ctx.Response)<br />&#160;&#160;&#160;&#160;&#160;&#160;member x.Request = ctx.Request<br />&#160;&#160;&#160;&#160;&#160;&#160;member x.Context = ctx<br /><br />&#160;&#160;&#160;&#160;type WebClient() = <br />&#160;&#160;&#160;&#160;&#160;&#160;let wc = new System.Net.WebClient()<br />&#160;&#160;&#160;&#160;&#160;&#160;/// Downloads data and calls the &#39;success&#39; callback when the<br />&#160;&#160;&#160;&#160;&#160;&#160;/// download completes or &#39;error&#39; callback if error occurs.<br />&#160;&#160;&#160;&#160;&#160;&#160;member x.DownloadData(uri:Uri, success, error) =<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;wc.DownloadDataCompleted.Add(fun res -&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if res.Error &lt;&gt; null then error res.Error<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else success res.Result)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;wc.DownloadDataAsync(uri)</div>
<div class="tip" id="fs33">module Wrappers<br /><br />from Script.EventBased</div>
<div class="tip" id="fs34">val handleRequestCallback : ctx:HttpListenerContext -&gt; unit<br /><br />Full name: Script.EventBased.handleRequestCallback<br /><em><br /><br />&#160;Handles request using callbacks - This scales well, but the<br />&#160;code is difficult to write, because we need to use callbacks<br />&#160;(This is similar to the style used by Node.js)</em></div>
<div class="tip" id="fs35">Multiple items<br />type HttpListenerContext =<br />&#160;&#160;new : ctx:HttpListenerContext -&gt; HttpListenerContext<br />&#160;&#160;member Context : HttpListenerContext<br />&#160;&#160;member Request : HttpListenerRequest<br />&#160;&#160;member Response : HttpListenerResponse<br /><br />Full name: Script.EventBased.Wrappers.HttpListenerContext<br /><br />--------------------<br />new : ctx:HttpListenerContext -&gt; HttpListenerContext</div>
<div class="tip" id="fs36">Multiple items<br />type WebClient =<br />&#160;&#160;new : unit -&gt; WebClient<br />&#160;&#160;member DownloadData : uri:Uri * success:(byte [] -&gt; unit) * error:(exn -&gt; unit) -&gt; unit<br /><br />Full name: Script.EventBased.Wrappers.WebClient<br /><br />--------------------<br />new : unit -&gt; WebClient</div>
<div class="tip" id="fs37">member WebClient.DownloadData : uri:Uri * success:(byte [] -&gt; unit) * error:(exn -&gt; unit) -&gt; unit<br /><em><br /><br />&#160;Downloads data and calls the &#39;success&#39; callback when the<br />&#160;download completes or &#39;error&#39; callback if error occurs.</em></div>
<div class="tip" id="fs38">property HttpListenerContext.Context: HttpListenerContext</div>
<div class="tip" id="fs39">member Stream.Write : buffer:byte [] * offset:int * count:int * success:(int -&gt; unit) * error:(exn -&gt; unit) -&gt; unit<br /><em><br /><br />&#160;Writes data to stream. Calls &#39;success&#39; callback when <br />&#160;completed or &#39;error&#39; callback when error occurs.</em></div>
<div class="tip" id="fs40">member HttpListenerResponse.Close : unit -&gt; unit</div>
<div class="tip" id="fs41">val token : CancellationTokenSource<br /><br />Full name: Script.EventBased.token</div>
<div class="tip" id="fs42">val asyncHandleRequest : ctx:HttpListenerContext -&gt; Async&lt;unit&gt;<br /><br />Full name: Script.Async.asyncHandleRequest<br /><em><br /><br />&#160;Handles request using asynchronous workflows - We get efficient &amp; scalable<br />&#160;code by wrapping synchronous solution in &#39;async&#39; block and changing<br />&#160;synchronous primitives to asynchronous (e.g. AsyncWrite)  </em></div>
<div class="tip" id="fs43">member WebClient.AsyncDownloadData : uri:Uri -&gt; Async&lt;byte []&gt;<br /><em><br /><br />&#160;Asynchronously downloads data from the </em></div>
<div class="tip" id="fs44">member Stream.AsyncWrite : buffer:byte [] * ?offset:int * ?count:int -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs45">val token : CancellationTokenSource<br /><br />Full name: Script.Async.token</div>
<div class="tip" id="fs46">static member HttpListener.Start : url:string * f:(HttpListenerContext -&gt; Async&lt;unit&gt;) -&gt; CancellationTokenSource<br /><em><br /><br />&#160;Starts an HTTP server on the specified URL with the<br />&#160;specified asynchronous function for handling requests</em></div>

