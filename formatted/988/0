<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">traverseQuotation</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="f">f</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">q</span> <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs2', 4)" onmouseover="showTip(event, 'fs2', 4)" class="f">f</span> <span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">q</span>
  <span class="k">match</span> <span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">q</span> <span class="k">with</span>
  | <span class="i">Patterns</span><span class="o">.</span><span class="i">Call</span>(<span class="i">inst</span>, <span class="i">mi</span>, <span class="i">args</span>) <span class="k">-&gt;</span>
      <span class="k">match</span> <span class="i">Expr</span><span class="o">.</span><span class="i">TryGetReflectedDefinition</span>(<span class="i">mi</span>) <span class="k">with</span>
      | <span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="i">Some</span> <span class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs1', 8)" onmouseover="showTip(event, 'fs1', 8)" class="i">traverseQuotation</span> <span onmouseout="hideTip(event, 'fs2', 9)" onmouseover="showTip(event, 'fs2', 9)" class="i">f</span> <span class="i">e</span>
      | _ <span class="k">-&gt;</span> ()
  | _ <span class="k">-&gt;</span> ()
  <span class="k">match</span> <span onmouseout="hideTip(event, 'fs3', 10)" onmouseover="showTip(event, 'fs3', 10)" class="i">q</span> <span class="k">with</span>
  | <span class="i">ExprShape</span><span class="o">.</span><span class="i">ShapeCombination</span>(<span class="i">a</span>, <span class="i">args</span>) <span class="k">-&gt;</span> 
      <span class="i">args</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs5', 11)" onmouseover="showTip(event, 'fs5', 11)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="i">iter</span> (<span onmouseout="hideTip(event, 'fs1', 13)" onmouseover="showTip(event, 'fs1', 13)" class="i">traverseQuotation</span> <span onmouseout="hideTip(event, 'fs2', 14)" onmouseover="showTip(event, 'fs2', 14)" class="i">f</span>)
  | <span class="i">ExprShape</span><span class="o">.</span><span class="i">ShapeLambda</span>(<span class="i">v</span>, <span class="i">body</span>)  <span class="k">-&gt;</span> 
      <span onmouseout="hideTip(event, 'fs1', 15)" onmouseover="showTip(event, 'fs1', 15)" class="i">traverseQuotation</span> <span onmouseout="hideTip(event, 'fs2', 16)" onmouseover="showTip(event, 'fs2', 16)" class="i">f</span> <span class="i">body</span>
  | <span class="i">ExprShape</span><span class="o">.</span><span class="i">ShapeVar</span>(<span class="i">v</span>) <span class="k">-&gt;</span> ()

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 17)" onmouseover="showTip(event, 'fs7', 17)" class="f">checkRecords</span> <span class="o">=</span> <span class="k">function</span>
  | <span class="i">Patterns</span><span class="o">.</span><span class="i">NewRecord</span>(<span class="i">r</span>, <span class="i">args</span>) <span class="k">-&gt;</span> 
     <span onmouseout="hideTip(event, 'fs8', 18)" onmouseover="showTip(event, 'fs8', 18)" class="i">printfn</span> <span class="s">&quot;Record: %s&quot;</span> <span class="i">r</span><span class="o">.</span><span class="i">Name</span>
  | <span class="i">Patterns</span><span class="o">.</span><span class="i">NewObject</span>(<span class="i">ci</span>, <span class="i">args</span>) <span class="k">-&gt;</span> 
     <span class="k">if</span> <span onmouseout="hideTip(event, 'fs9', 19)" onmouseover="showTip(event, 'fs9', 19)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 20)" onmouseover="showTip(event, 'fs10', 20)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 21)" onmouseover="showTip(event, 'fs11', 21)" class="i">Reflection</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 22)" onmouseover="showTip(event, 'fs12', 22)" class="i">FSharpType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 23)" onmouseover="showTip(event, 'fs13', 23)" class="i">IsRecord</span>(<span class="i">ci</span><span class="o">.</span><span class="i">DeclaringType</span>) <span class="k">then</span>
       <span onmouseout="hideTip(event, 'fs8', 24)" onmouseover="showTip(event, 'fs8', 24)" class="i">printfn</span> <span class="s">&quot;boo! %s&quot;</span> <span class="i">ci</span><span class="o">.</span><span class="i">DeclaringType</span><span class="o">.</span><span class="i">Name</span> 
     <span class="k">else</span> 
       <span onmouseout="hideTip(event, 'fs8', 25)" onmouseover="showTip(event, 'fs8', 25)" class="i">printfn</span> <span class="s">&quot;Object: %s&quot;</span> <span class="i">ci</span><span class="o">.</span><span class="i">DeclaringType</span><span class="o">.</span><span class="i">Name</span> 
  | _ <span class="k">-&gt;</span> ()
      
<span onmouseout="hideTip(event, 'fs1', 26)" onmouseover="showTip(event, 'fs1', 26)" class="f">traverseQuotation</span> <span onmouseout="hideTip(event, 'fs7', 27)" onmouseover="showTip(event, 'fs7', 27)" class="f">checkRecords</span> &lt;@@ <span class="i">main</span>() @@&gt; 
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val traverseQuotation : f:(&#39;a -&gt; unit) -&gt; q:&#39;a -&gt; &#39;b<br /><br />Full name: Script.traverseQuotation</div>
<div class="tip" id="fs2">val f : (&#39;a -&gt; unit)</div>
<div class="tip" id="fs3">val q : &#39;a</div>
<div class="tip" id="fs4">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs5">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs6">val iter : action:(&#39;T -&gt; unit) -&gt; list:&#39;T list -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.List.iter</div>
<div class="tip" id="fs7">val checkRecords : (Quotations.Expr -&gt; unit)<br /><br />Full name: Script.checkRecords</div>
<div class="tip" id="fs8">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs9">namespace Microsoft</div>
<div class="tip" id="fs10">namespace Microsoft.FSharp</div>
<div class="tip" id="fs11">namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs12">type FSharpType =<br />&#160;&#160;static member GetExceptionFields : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetFunctionElements : functionType:Type -&gt; Type * Type<br />&#160;&#160;static member GetRecordFields : recordType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetTupleElements : tupleType:Type -&gt; Type []<br />&#160;&#160;static member GetUnionCases : unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo []<br />&#160;&#160;static member IsExceptionRepresentation : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsFunction : typ:Type -&gt; bool<br />&#160;&#160;static member IsModule : typ:Type -&gt; bool<br />&#160;&#160;static member IsRecord : typ:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsTuple : typ:Type -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpType</div>
<div class="tip" id="fs13">static member Reflection.FSharpType.IsRecord : typ:System.Type * ?bindingFlags:System.Reflection.BindingFlags -&gt; bool</div>

