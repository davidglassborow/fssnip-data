<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
<span class="l">6: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">//Define your array</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">arr</span> <span class="o">=</span> [|<span class="n">1</span>;<span class="n">23</span>|]
<span class="c">//Get the nativeint of arr.[0]</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">nativeint</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">Runtime</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">InteropServices</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">Marshal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="f">UnsafeAddrOfPinnedArrayElement</span>(<span onmouseout="hideTip(event, 'fs1', 8)" onmouseover="showTip(event, 'fs1', 8)" class="i">arr</span>,<span class="n">0</span>)
<span class="c">//Construct a intptr using the nativeptr&lt;unit&gt; </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">intptr</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs3', 10)" onmouseover="showTip(event, 'fs3', 10)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="t">IntPtr</span>(<span onmouseout="hideTip(event, 'fs2', 12)" onmouseover="showTip(event, 'fs2', 12)" class="i">nativeint</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="f">ToPointer</span>())
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val arr : int []<br /><br />Full name: Script.arr</div>
<div class="tip" id="fs2">Multiple items<br />val nativeint : nativeint<br /><br />Full name: Script.nativeint<br /><br />--------------------<br />type nativeint = System.IntPtr<br /><br />Full name: Microsoft.FSharp.Core.nativeint</div>
<div class="tip" id="fs3">namespace System</div>
<div class="tip" id="fs4">namespace System.Runtime</div>
<div class="tip" id="fs5">namespace System.Runtime.InteropServices</div>
<div class="tip" id="fs6">type Marshal =<br />&#160;&#160;static val SystemDefaultCharSize : int<br />&#160;&#160;static val SystemMaxDBCSCharSize : int<br />&#160;&#160;static member AddRef : pUnk:nativeint -&gt; int<br />&#160;&#160;static member AllocCoTaskMem : cb:int -&gt; nativeint<br />&#160;&#160;static member AllocHGlobal : cb:nativeint -&gt; nativeint + 1 overload<br />&#160;&#160;static member AreComObjectsAvailableForCleanup : unit -&gt; bool<br />&#160;&#160;static member BindToMoniker : monikerName:string -&gt; obj<br />&#160;&#160;static member ChangeWrapperHandleStrength : otp:obj * fIsWeak:bool -&gt; unit<br />&#160;&#160;static member CleanupUnusedObjectsInCurrentContext : unit -&gt; unit<br />&#160;&#160;static member Copy : source:int[] * startIndex:int * destination:nativeint * length:int -&gt; unit + 15 overloads<br />&#160;&#160;...<br /><br />Full name: System.Runtime.InteropServices.Marshal</div>
<div class="tip" id="fs7">System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(arr: System.Array, index: int) : nativeint</div>
<div class="tip" id="fs8">val intptr : System.IntPtr<br /><br />Full name: Script.intptr</div>
<div class="tip" id="fs9">Multiple items<br />type IntPtr =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : value:int -&gt; nativeint + 2 overloads<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member ToInt32 : unit -&gt; int<br />&#160;&#160;&#160;&#160;member ToInt64 : unit -&gt; int64<br />&#160;&#160;&#160;&#160;member ToPointer : unit -&gt; unit<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 1 overload<br />&#160;&#160;&#160;&#160;static val Zero : nativeint<br />&#160;&#160;&#160;&#160;static member Add : pointer:nativeint * offset:int -&gt; nativeint<br />&#160;&#160;&#160;&#160;static member Size : int<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.IntPtr<br /><br />--------------------<br />System.IntPtr()<br />System.IntPtr(value: int) : unit<br />System.IntPtr(value: int64) : unit<br />System.IntPtr(value: nativeptr&lt;unit&gt;) : unit</div>
<div class="tip" id="fs10">System.IntPtr.ToPointer() : nativeptr&lt;unit&gt;</div>

