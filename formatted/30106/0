<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span class="t">Constraint2</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span>,<span class="o">&#39;</span><span class="i">b</span><span class="o">&gt;</span> <span class="o">=</span> <span class="k">interface</span> <span class="k">end</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Constraint3</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span>,<span class="o">&#39;</span><span class="i">b</span>,<span class="o">&#39;</span><span class="i">c</span><span class="o">&gt;</span> <span class="o">=</span> <span class="k">interface</span> <span class="k">end</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">ListStackImpl</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span> () <span class="o">=</span>
    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="t">Constraint3</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs2', 4)" onmouseover="showTip(event, 'fs2', 4)" class="t">ListStackImpl</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span>, <span class="o">&#39;</span><span class="i">t</span> <span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="t">list</span>, <span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span>
    <span class="k">member</span> <span class="k">inline</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="f">empty</span> () <span class="o">=</span> []
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="f">push</span> (<span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">lst</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="t">List</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span>, <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="i">v</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="i">v</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs7', 13)" onmouseover="showTip(event, 'fs7', 13)" class="i">lst</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs5', 14)" onmouseover="showTip(event, 'fs5', 14)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="f">pop</span> (<span onmouseout="hideTip(event, 'fs7', 16)" onmouseover="showTip(event, 'fs7', 16)" class="i">lst</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 17)" onmouseover="showTip(event, 'fs8', 17)" class="t">List</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 18)" onmouseover="showTip(event, 'fs7', 18)" class="i">lst</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 19)" onmouseover="showTip(event, 'fs11', 19)" class="i">Head</span>, <span onmouseout="hideTip(event, 'fs7', 20)" onmouseover="showTip(event, 'fs7', 20)" class="i">lst</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="i">Tail</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs5', 22)" onmouseover="showTip(event, 'fs5', 22)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 23)" onmouseover="showTip(event, 'fs13', 23)" class="f">length</span> (<span onmouseout="hideTip(event, 'fs7', 24)" onmouseover="showTip(event, 'fs7', 24)" class="i">lst</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 25)" onmouseover="showTip(event, 'fs8', 25)" class="t">List</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 26)" onmouseover="showTip(event, 'fs7', 26)" class="i">lst</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 27)" onmouseover="showTip(event, 'fs14', 27)" class="i">Length</span>
    
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs15', 28)" onmouseover="showTip(event, 'fs15', 28)" class="t">ArrayStackImpl</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span> () <span class="o">=</span>
    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs1', 29)" onmouseover="showTip(event, 'fs1', 29)" class="t">Constraint3</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs15', 30)" onmouseover="showTip(event, 'fs15', 30)" class="t">ArrayStackImpl</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span>, <span class="o">&#39;</span><span class="i">t</span> <span onmouseout="hideTip(event, 'fs16', 31)" onmouseover="showTip(event, 'fs16', 31)" class="t">array</span>, <span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span>
    <span class="k">member</span> <span class="k">inline</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 32)" onmouseover="showTip(event, 'fs17', 32)" class="f">empty</span> () <span class="o">=</span> [||]
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs18', 33)" onmouseover="showTip(event, 'fs18', 33)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 34)" onmouseover="showTip(event, 'fs19', 34)" class="f">push</span> (<span onmouseout="hideTip(event, 'fs20', 35)" onmouseover="showTip(event, 'fs20', 35)" class="i">arr</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">t</span> <span onmouseout="hideTip(event, 'fs16', 36)" onmouseover="showTip(event, 'fs16', 36)" class="t">array</span>, <span onmouseout="hideTip(event, 'fs9', 37)" onmouseover="showTip(event, 'fs9', 37)" class="i">v</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 38)" onmouseover="showTip(event, 'fs21', 38)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 39)" onmouseover="showTip(event, 'fs22', 39)" class="f">append</span> <span onmouseout="hideTip(event, 'fs20', 40)" onmouseover="showTip(event, 'fs20', 40)" class="i">arr</span> [| <span onmouseout="hideTip(event, 'fs9', 41)" onmouseover="showTip(event, 'fs9', 41)" class="i">v</span> |]
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs18', 42)" onmouseover="showTip(event, 'fs18', 42)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 43)" onmouseover="showTip(event, 'fs23', 43)" class="f">pop</span>  (<span onmouseout="hideTip(event, 'fs20', 44)" onmouseover="showTip(event, 'fs20', 44)" class="i">arr</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">t</span> <span onmouseout="hideTip(event, 'fs16', 45)" onmouseover="showTip(event, 'fs16', 45)" class="t">array</span>)    <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 46)" onmouseover="showTip(event, 'fs20', 46)" class="i">arr</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs20', 47)" onmouseover="showTip(event, 'fs20', 47)" class="i">arr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 48)" onmouseover="showTip(event, 'fs24', 48)" class="i">Length</span> <span class="o">-</span> <span class="n">1</span>], <span onmouseout="hideTip(event, 'fs20', 49)" onmouseover="showTip(event, 'fs20', 49)" class="i">arr</span><span class="o">.</span>[<span class="n">0</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs20', 50)" onmouseover="showTip(event, 'fs20', 50)" class="i">arr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 51)" onmouseover="showTip(event, 'fs24', 51)" class="i">Length</span> <span class="o">-</span> <span class="n">2</span>]
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs18', 52)" onmouseover="showTip(event, 'fs18', 52)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 53)" onmouseover="showTip(event, 'fs25', 53)" class="f">length</span> (<span onmouseout="hideTip(event, 'fs20', 54)" onmouseover="showTip(event, 'fs20', 54)" class="i">arr</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">t</span> <span onmouseout="hideTip(event, 'fs16', 55)" onmouseover="showTip(event, 'fs16', 55)" class="t">array</span>)  <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 56)" onmouseover="showTip(event, 'fs20', 56)" class="i">arr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 57)" onmouseover="showTip(event, 'fs24', 57)" class="i">Length</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs26', 58)" onmouseover="showTip(event, 'fs26', 58)" class="t">StackImpl</span><span class="o">&lt;</span> <span class="o">^</span><span class="i">Impl</span>, <span class="o">^</span><span class="i">Stack</span>, <span class="o">^</span><span class="i">Elem</span>    <span class="k">when</span> <span class="o">^</span><span class="i">Impl</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs27', 59)" onmouseover="showTip(event, 'fs27', 59)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">Impl</span>) 
                                        <span class="k">and</span> <span class="o">^</span><span class="i">Impl</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs1', 60)" onmouseover="showTip(event, 'fs1', 60)" class="t">Constraint3</span><span class="o">&lt;</span> <span class="o">^</span><span class="i">Impl</span>, <span class="o">^</span><span class="i">Stack</span>, <span class="o">^</span><span class="i">Elem</span><span class="o">&gt;</span>
                                        <span class="k">and</span> <span class="o">^</span><span class="i">Impl</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">empty</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs27', 61)" onmouseover="showTip(event, 'fs27', 61)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">Stack</span>)
                                        <span class="k">and</span> <span class="o">^</span><span class="i">Impl</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">push</span> <span class="o">:</span> <span class="o">^</span><span class="i">Stack</span> <span class="o">*</span> <span class="o">^</span><span class="i">Elem</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">Stack</span>)
                                        <span class="k">and</span> <span class="o">^</span><span class="i">Impl</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">pop</span>  <span class="o">:</span> <span class="o">^</span><span class="i">Stack</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">Elem</span> <span class="o">*</span> <span class="o">^</span><span class="i">Stack</span>)
                                        <span class="k">and</span> <span class="o">^</span><span class="i">Impl</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">length</span> <span class="o">:</span> <span class="o">^</span><span class="i">Stack</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs28', 62)" onmouseover="showTip(event, 'fs28', 62)" class="t">int</span>)
                <span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 63)" onmouseover="showTip(event, 'fs1', 63)" class="t">Constraint3</span><span class="o">&lt;</span> <span class="o">^</span><span class="i">Impl</span>, <span class="o">^</span><span class="i">Stack</span>, <span class="o">^</span><span class="i">Elem</span><span class="o">&gt;</span>
                  
<span class="k">module</span> <span class="t">Test1</span> <span class="o">=</span> 
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs29', 64)" onmouseover="showTip(event, 'fs29', 64)" class="f">pop</span> (<span onmouseout="hideTip(event, 'fs30', 65)" onmouseover="showTip(event, 'fs30', 65)" class="i">constr</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs26', 66)" onmouseover="showTip(event, 'fs26', 66)" class="t">StackImpl</span><span class="o">&lt;</span> <span class="o">^</span><span class="i">Impl</span>, <span class="o">^</span><span class="i">Stack</span>, <span class="o">^</span><span class="i">Elem</span><span class="o">&gt;</span>) <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs31', 67)" onmouseover="showTip(event, 'fs31', 67)" class="i">list</span><span class="o">:</span> <span class="o">^</span><span class="i">Stack</span>) <span class="k">-&gt;</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 68)" onmouseover="showTip(event, 'fs32', 68)" class="i">impl</span> <span class="o">=</span> (<span class="o">^</span><span class="i">Impl</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs27', 69)" onmouseover="showTip(event, 'fs27', 69)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">Impl</span>) ())
        (<span class="o">^</span><span class="i">Impl</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">pop</span>  <span class="o">:</span> <span class="o">^</span><span class="i">Stack</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">Elem</span> <span class="o">*</span> <span class="o">^</span><span class="i">Stack</span>) (<span onmouseout="hideTip(event, 'fs32', 70)" onmouseover="showTip(event, 'fs32', 70)" class="i">impl</span>, <span onmouseout="hideTip(event, 'fs31', 71)" onmouseover="showTip(event, 'fs31', 71)" class="i">list</span>)) 
      
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs33', 72)" onmouseover="showTip(event, 'fs33', 72)" class="f">push</span> (<span onmouseout="hideTip(event, 'fs30', 73)" onmouseover="showTip(event, 'fs30', 73)" class="i">constr</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs26', 74)" onmouseover="showTip(event, 'fs26', 74)" class="t">StackImpl</span><span class="o">&lt;</span> <span class="o">^</span><span class="i">Impl</span>, <span class="o">^</span><span class="i">Stack</span>, <span class="o">^</span><span class="i">Elem</span><span class="o">&gt;</span>) <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs34', 75)" onmouseover="showTip(event, 'fs34', 75)" class="i">elem</span><span class="o">:</span> <span class="o">^</span><span class="i">Elem</span>) (<span onmouseout="hideTip(event, 'fs31', 76)" onmouseover="showTip(event, 'fs31', 76)" class="i">list</span><span class="o">:</span> <span class="o">^</span><span class="i">Stack</span>) <span class="k">-&gt;</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 77)" onmouseover="showTip(event, 'fs32', 77)" class="i">impl</span> <span class="o">=</span> (<span class="o">^</span><span class="i">Impl</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs27', 78)" onmouseover="showTip(event, 'fs27', 78)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">Impl</span>) ())
        (<span class="o">^</span><span class="i">Impl</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">push</span> <span class="o">:</span> <span class="o">^</span><span class="i">Stack</span> <span class="o">*</span> <span class="o">^</span><span class="i">Elem</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">Stack</span>) (<span onmouseout="hideTip(event, 'fs32', 79)" onmouseover="showTip(event, 'fs32', 79)" class="i">impl</span>, <span onmouseout="hideTip(event, 'fs31', 80)" onmouseover="showTip(event, 'fs31', 80)" class="i">list</span>, <span onmouseout="hideTip(event, 'fs34', 81)" onmouseover="showTip(event, 'fs34', 81)" class="i">elem</span>)) 

    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs35', 82)" onmouseover="showTip(event, 'fs35', 82)" class="f">length</span> (<span onmouseout="hideTip(event, 'fs30', 83)" onmouseover="showTip(event, 'fs30', 83)" class="i">constr</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs26', 84)" onmouseover="showTip(event, 'fs26', 84)" class="t">StackImpl</span><span class="o">&lt;</span> <span class="o">^</span><span class="i">Impl</span>, <span class="o">^</span><span class="i">Stack</span>, <span class="o">^</span><span class="i">Elem</span><span class="o">&gt;</span>) <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs31', 85)" onmouseover="showTip(event, 'fs31', 85)" class="i">list</span><span class="o">:</span> <span class="o">^</span><span class="i">Stack</span>) <span class="k">-&gt;</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 86)" onmouseover="showTip(event, 'fs32', 86)" class="i">impl</span> <span class="o">=</span> (<span class="o">^</span><span class="i">Impl</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs27', 87)" onmouseover="showTip(event, 'fs27', 87)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">Impl</span>) ())
        (<span class="o">^</span><span class="i">Impl</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">length</span> <span class="o">:</span> <span class="o">^</span><span class="i">Stack</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs28', 88)" onmouseover="showTip(event, 'fs28', 88)" class="t">int</span>) (<span onmouseout="hideTip(event, 'fs32', 89)" onmouseover="showTip(event, 'fs32', 89)" class="i">impl</span>, <span onmouseout="hideTip(event, 'fs31', 90)" onmouseover="showTip(event, 'fs31', 90)" class="i">list</span>))

    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs36', 91)" onmouseover="showTip(event, 'fs36', 91)" class="f">empty</span> (<span onmouseout="hideTip(event, 'fs30', 92)" onmouseover="showTip(event, 'fs30', 92)" class="i">constr</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs26', 93)" onmouseover="showTip(event, 'fs26', 93)" class="t">StackImpl</span><span class="o">&lt;</span> <span class="o">^</span><span class="i">Impl</span>, <span class="o">^</span><span class="i">Stack</span>, <span class="o">^</span><span class="i">Elem</span><span class="o">&gt;</span>) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 94)" onmouseover="showTip(event, 'fs32', 94)" class="i">impl</span> <span class="o">=</span> (<span class="o">^</span><span class="i">Impl</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs27', 95)" onmouseover="showTip(event, 'fs27', 95)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">Impl</span>) ())
        (<span class="o">^</span><span class="i">Impl</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">empty</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs27', 96)" onmouseover="showTip(event, 'fs27', 96)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">Stack</span>) (<span onmouseout="hideTip(event, 'fs32', 97)" onmouseover="showTip(event, 'fs32', 97)" class="i">impl</span>))
        
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs37', 98)" onmouseover="showTip(event, 'fs37', 98)" class="f">singleton</span> (<span onmouseout="hideTip(event, 'fs30', 99)" onmouseover="showTip(event, 'fs30', 99)" class="i">constr</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs26', 100)" onmouseover="showTip(event, 'fs26', 100)" class="t">StackImpl</span><span class="o">&lt;</span> <span class="o">^</span><span class="i">Impl</span>, <span class="o">^</span><span class="i">Stack</span>, <span class="o">^</span><span class="i">Elem</span><span class="o">&gt;</span>) <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs34', 101)" onmouseover="showTip(event, 'fs34', 101)" class="i">elem</span><span class="o">:</span> <span class="o">^</span><span class="i">Elem</span>) <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs36', 102)" onmouseover="showTip(event, 'fs36', 102)" class="f">empty</span> <span onmouseout="hideTip(event, 'fs30', 103)" onmouseover="showTip(event, 'fs30', 103)" class="i">constr</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs33', 104)" onmouseover="showTip(event, 'fs33', 104)" class="f">push</span> <span onmouseout="hideTip(event, 'fs30', 105)" onmouseover="showTip(event, 'fs30', 105)" class="i">constr</span> <span onmouseout="hideTip(event, 'fs34', 106)" onmouseover="showTip(event, 'fs34', 106)" class="i">elem</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 107)" onmouseover="showTip(event, 'fs38', 107)" class="i">single1</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs28', 108)" onmouseover="showTip(event, 'fs28', 108)" class="t">int</span> <span onmouseout="hideTip(event, 'fs3', 109)" onmouseover="showTip(event, 'fs3', 109)" class="t">list</span>  <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 110)" onmouseover="showTip(event, 'fs39', 110)" class="t">Test1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 111)" onmouseover="showTip(event, 'fs37', 111)" class="f">singleton</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs1', 112)" onmouseover="showTip(event, 'fs1', 112)" class="t">Constraint3</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs2', 113)" onmouseover="showTip(event, 'fs2', 113)" class="t">ListStackImpl</span><span class="o">&lt;</span>_<span class="o">&gt;</span>, _, _<span class="o">&gt;</span>  } <span class="n">1</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 114)" onmouseover="showTip(event, 'fs40', 114)" class="i">single2</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs28', 115)" onmouseover="showTip(event, 'fs28', 115)" class="t">int</span> <span onmouseout="hideTip(event, 'fs16', 116)" onmouseover="showTip(event, 'fs16', 116)" class="t">array</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 117)" onmouseover="showTip(event, 'fs39', 117)" class="t">Test1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 118)" onmouseover="showTip(event, 'fs37', 118)" class="f">singleton</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs1', 119)" onmouseover="showTip(event, 'fs1', 119)" class="t">Constraint3</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs15', 120)" onmouseover="showTip(event, 'fs15', 120)" class="t">ArrayStackImpl</span><span class="o">&lt;</span>_<span class="o">&gt;</span>, _, _<span class="o">&gt;</span> } <span class="n">1</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs41', 121)" onmouseover="showTip(event, 'fs41', 121)" class="t">Stacks</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span> () <span class="o">=</span>
    <span class="k">member</span> <span class="k">inline</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 122)" onmouseover="showTip(event, 'fs42', 122)" class="f">GetImpl</span> (_ <span class="o">:</span> <span class="o">&#39;</span><span class="i">t</span>[])    <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 123)" onmouseover="showTip(event, 'fs15', 123)" class="t">ArrayStackImpl</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span> ()
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs43', 124)" onmouseover="showTip(event, 'fs43', 124)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 125)" onmouseover="showTip(event, 'fs44', 125)" class="f">GetImpl</span> (_ <span class="o">:</span> <span class="o">&#39;</span><span class="i">t</span> <span onmouseout="hideTip(event, 'fs3', 126)" onmouseover="showTip(event, 'fs3', 126)" class="t">list</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 127)" onmouseover="showTip(event, 'fs2', 127)" class="t">ListStackImpl</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span> ()

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs45', 128)" onmouseover="showTip(event, 'fs45', 128)" class="t">StackImpls</span><span class="o">&lt;</span> <span class="o">^</span><span onmouseout="hideTip(event, 'fs41', 129)" onmouseover="showTip(event, 'fs41', 129)" class="i">Stacks</span>, <span class="o">^</span><span class="i">Stack</span>, <span class="o">^</span><span class="i">Impl</span>  <span class="k">when</span> <span class="o">^</span><span onmouseout="hideTip(event, 'fs41', 130)" onmouseover="showTip(event, 'fs41', 130)" class="i">Stacks</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs27', 131)" onmouseover="showTip(event, 'fs27', 131)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">^</span><span onmouseout="hideTip(event, 'fs41', 132)" onmouseover="showTip(event, 'fs41', 132)" class="i">Stacks</span>) 
                                            <span class="k">and</span> <span class="o">^</span><span onmouseout="hideTip(event, 'fs41', 133)" onmouseover="showTip(event, 'fs41', 133)" class="i">Stacks</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">GetImpl</span> <span class="o">:</span> <span class="o">^</span><span class="i">Stack</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">Impl</span>)
                <span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 134)" onmouseover="showTip(event, 'fs1', 134)" class="t">Constraint3</span><span class="o">&lt;</span> <span class="o">^</span><span onmouseout="hideTip(event, 'fs41', 135)" onmouseover="showTip(event, 'fs41', 135)" class="i">Stacks</span>, <span class="o">^</span><span class="i">Stack</span>, <span class="o">^</span><span class="i">Impl</span><span class="o">&gt;</span>

<span class="k">module</span> <span class="t">Test2</span> <span class="o">=</span> 
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs46', 136)" onmouseover="showTip(event, 'fs46', 136)" class="f">reverse</span> (<span onmouseout="hideTip(event, 'fs47', 137)" onmouseover="showTip(event, 'fs47', 137)" class="i">constr</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs45', 138)" onmouseover="showTip(event, 'fs45', 138)" class="t">StackImpls</span><span class="o">&lt;</span> <span class="o">^</span><span onmouseout="hideTip(event, 'fs41', 139)" onmouseover="showTip(event, 'fs41', 139)" class="i">Stacks</span>, <span class="o">^</span><span class="i">Stack</span>, <span class="o">^</span><span class="i">Impl</span><span class="o">&gt;</span>) <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs48', 140)" onmouseover="showTip(event, 'fs48', 140)" class="i">stack</span>) <span class="k">-&gt;</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs49', 141)" onmouseover="showTip(event, 'fs49', 141)" class="i">stacks</span> <span class="o">=</span> (<span class="o">^</span><span onmouseout="hideTip(event, 'fs41', 142)" onmouseover="showTip(event, 'fs41', 142)" class="i">Stacks</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs27', 143)" onmouseover="showTip(event, 'fs27', 143)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">^</span><span onmouseout="hideTip(event, 'fs41', 144)" onmouseover="showTip(event, 'fs41', 144)" class="i">Stacks</span>) ())
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 145)" onmouseover="showTip(event, 'fs50', 145)" class="i">impl</span>  <span class="o">=</span> (<span class="o">^</span><span onmouseout="hideTip(event, 'fs41', 146)" onmouseover="showTip(event, 'fs41', 146)" class="i">Stacks</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">GetImpl</span> <span class="o">:</span> <span class="o">^</span><span class="i">Stack</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">Impl</span>) (<span onmouseout="hideTip(event, 'fs49', 147)" onmouseover="showTip(event, 'fs49', 147)" class="i">stacks</span>, <span onmouseout="hideTip(event, 'fs48', 148)" onmouseover="showTip(event, 'fs48', 148)" class="i">stack</span>))
        <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs51', 149)" onmouseover="showTip(event, 'fs51', 149)" class="v">result</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 150)" onmouseover="showTip(event, 'fs39', 150)" class="t">Test1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 151)" onmouseover="showTip(event, 'fs36', 151)" class="f">empty</span> <span onmouseout="hideTip(event, 'fs50', 152)" onmouseover="showTip(event, 'fs50', 152)" class="i">impl</span>
        <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs52', 153)" onmouseover="showTip(event, 'fs52', 153)" class="v">state</span>  <span class="o">=</span> <span onmouseout="hideTip(event, 'fs48', 154)" onmouseover="showTip(event, 'fs48', 154)" class="i">stack</span>
        <span class="k">while</span> <span onmouseout="hideTip(event, 'fs39', 155)" onmouseover="showTip(event, 'fs39', 155)" class="t">Test1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 156)" onmouseover="showTip(event, 'fs35', 156)" class="f">length</span> <span onmouseout="hideTip(event, 'fs50', 157)" onmouseover="showTip(event, 'fs50', 157)" class="i">impl</span> <span onmouseout="hideTip(event, 'fs52', 158)" onmouseover="showTip(event, 'fs52', 158)" class="v">state</span> <span class="o">&gt;</span> <span class="n">0</span> <span class="k">do</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 159)" onmouseover="showTip(event, 'fs53', 159)" class="i">h</span>, <span onmouseout="hideTip(event, 'fs54', 160)" onmouseover="showTip(event, 'fs54', 160)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 161)" onmouseover="showTip(event, 'fs39', 161)" class="t">Test1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 162)" onmouseover="showTip(event, 'fs29', 162)" class="f">pop</span> <span onmouseout="hideTip(event, 'fs50', 163)" onmouseover="showTip(event, 'fs50', 163)" class="i">impl</span> <span onmouseout="hideTip(event, 'fs52', 164)" onmouseover="showTip(event, 'fs52', 164)" class="v">state</span>
            <span onmouseout="hideTip(event, 'fs51', 165)" onmouseover="showTip(event, 'fs51', 165)" class="v">result</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs39', 166)" onmouseover="showTip(event, 'fs39', 166)" class="t">Test1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 167)" onmouseover="showTip(event, 'fs33', 167)" class="f">push</span> <span onmouseout="hideTip(event, 'fs50', 168)" onmouseover="showTip(event, 'fs50', 168)" class="i">impl</span> <span onmouseout="hideTip(event, 'fs53', 169)" onmouseover="showTip(event, 'fs53', 169)" class="i">h</span> <span onmouseout="hideTip(event, 'fs51', 170)" onmouseover="showTip(event, 'fs51', 170)" class="v">result</span>
            <span onmouseout="hideTip(event, 'fs52', 171)" onmouseover="showTip(event, 'fs52', 171)" class="v">state</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs54', 172)" onmouseover="showTip(event, 'fs54', 172)" class="i">t</span>
        <span onmouseout="hideTip(event, 'fs51', 173)" onmouseover="showTip(event, 'fs51', 173)" class="v">result</span>
            
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs55', 174)" onmouseover="showTip(event, 'fs55', 174)" class="i">r1</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs28', 175)" onmouseover="showTip(event, 'fs28', 175)" class="t">int</span> <span onmouseout="hideTip(event, 'fs3', 176)" onmouseover="showTip(event, 'fs3', 176)" class="t">list</span>  <span class="o">=</span> <span onmouseout="hideTip(event, 'fs56', 177)" onmouseover="showTip(event, 'fs56', 177)" class="t">Test2</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 178)" onmouseover="showTip(event, 'fs46', 178)" class="f">reverse</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs1', 179)" onmouseover="showTip(event, 'fs1', 179)" class="t">Constraint3</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs41', 180)" onmouseover="showTip(event, 'fs41', 180)" class="t">Stacks</span><span class="o">&lt;</span>_<span class="o">&gt;</span>,_,_<span class="o">&gt;</span> } [ <span class="n">1</span>; <span class="n">2</span>; <span class="n">3</span> ]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 181)" onmouseover="showTip(event, 'fs57', 181)" class="i">r2</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs28', 182)" onmouseover="showTip(event, 'fs28', 182)" class="t">int</span> <span onmouseout="hideTip(event, 'fs16', 183)" onmouseover="showTip(event, 'fs16', 183)" class="t">array</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs56', 184)" onmouseover="showTip(event, 'fs56', 184)" class="t">Test2</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 185)" onmouseover="showTip(event, 'fs46', 185)" class="f">reverse</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs1', 186)" onmouseover="showTip(event, 'fs1', 186)" class="t">Constraint3</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs41', 187)" onmouseover="showTip(event, 'fs41', 187)" class="t">Stacks</span><span class="o">&lt;</span>_<span class="o">&gt;</span>,_,_<span class="o">&gt;</span> } [| <span class="n">1</span>; <span class="n">2</span>; <span class="n">3</span> |]
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">type Constraint3&lt;&#39;a,&#39;b,&#39;c&gt;<br /><br />Full name: Script.Constraint3&lt;_,_,_&gt;</div>
<div class="tip" id="fs2">Multiple items<br />type ListStackImpl&lt;&#39;t&gt; =<br />&#160;&#160;interface Constraint3&lt;ListStackImpl&lt;&#39;t&gt;,&#39;t list,&#39;t&gt;<br />&#160;&#160;new : unit -&gt; ListStackImpl&lt;&#39;t&gt;<br />&#160;&#160;member empty : unit -&gt; &#39;a list<br />&#160;&#160;member length : lst:List&lt;&#39;t&gt; -&gt; int<br />&#160;&#160;member pop : lst:List&lt;&#39;t&gt; -&gt; &#39;t * &#39;t list<br />&#160;&#160;member push : lst:List&lt;&#39;t&gt; * v:&#39;t -&gt; &#39;t list<br /><br />Full name: Script.ListStackImpl&lt;_&gt;<br /><br />--------------------<br />new : unit -&gt; ListStackImpl&lt;&#39;t&gt;</div>
<div class="tip" id="fs3">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs4">member ListStackImpl.empty : unit -&gt; &#39;a list<br /><br />Full name: Script.ListStackImpl`1.empty</div>
<div class="tip" id="fs5">val __ : ListStackImpl&lt;&#39;t&gt;</div>
<div class="tip" id="fs6">member ListStackImpl.push : lst:List&lt;&#39;t&gt; * v:&#39;t -&gt; &#39;t list<br /><br />Full name: Script.ListStackImpl`1.push</div>
<div class="tip" id="fs7">val lst : List&lt;&#39;t&gt;</div>
<div class="tip" id="fs8">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs9">val v : &#39;t</div>
<div class="tip" id="fs10">member ListStackImpl.pop : lst:List&lt;&#39;t&gt; -&gt; &#39;t * &#39;t list<br /><br />Full name: Script.ListStackImpl`1.pop</div>
<div class="tip" id="fs11">property List.Head: &#39;t</div>
<div class="tip" id="fs12">property List.Tail: &#39;t list</div>
<div class="tip" id="fs13">member ListStackImpl.length : lst:List&lt;&#39;t&gt; -&gt; int<br /><br />Full name: Script.ListStackImpl`1.length</div>
<div class="tip" id="fs14">property List.Length: int</div>
<div class="tip" id="fs15">Multiple items<br />type ArrayStackImpl&lt;&#39;t&gt; =<br />&#160;&#160;interface Constraint3&lt;ArrayStackImpl&lt;&#39;t&gt;,&#39;t array,&#39;t&gt;<br />&#160;&#160;new : unit -&gt; ArrayStackImpl&lt;&#39;t&gt;<br />&#160;&#160;member empty : unit -&gt; &#39;a []<br />&#160;&#160;member length : arr:&#39;t array -&gt; int<br />&#160;&#160;member pop : arr:&#39;t array -&gt; &#39;t * &#39;t []<br />&#160;&#160;member push : arr:&#39;t array * v:&#39;t -&gt; &#39;t []<br /><br />Full name: Script.ArrayStackImpl&lt;_&gt;<br /><br />--------------------<br />new : unit -&gt; ArrayStackImpl&lt;&#39;t&gt;</div>
<div class="tip" id="fs16">type &#39;T array = &#39;T []<br /><br />Full name: Microsoft.FSharp.Core.array&lt;_&gt;</div>
<div class="tip" id="fs17">member ArrayStackImpl.empty : unit -&gt; &#39;a []<br /><br />Full name: Script.ArrayStackImpl`1.empty</div>
<div class="tip" id="fs18">val __ : ArrayStackImpl&lt;&#39;t&gt;</div>
<div class="tip" id="fs19">member ArrayStackImpl.push : arr:&#39;t array * v:&#39;t -&gt; &#39;t []<br /><br />Full name: Script.ArrayStackImpl`1.push</div>
<div class="tip" id="fs20">val arr : &#39;t array</div>
<div class="tip" id="fs21">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs22">val append : array1:&#39;T [] -&gt; array2:&#39;T [] -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.append</div>
<div class="tip" id="fs23">member ArrayStackImpl.pop : arr:&#39;t array -&gt; &#39;t * &#39;t []<br /><br />Full name: Script.ArrayStackImpl`1.pop</div>
<div class="tip" id="fs24">property System.Array.Length: int</div>
<div class="tip" id="fs25">member ArrayStackImpl.length : arr:&#39;t array -&gt; int<br /><br />Full name: Script.ArrayStackImpl`1.length</div>
<div class="tip" id="fs26">type StackImpl&lt;&#39;Impl,&#39;Stack,&#39;Elem (requires default constructor and &#39;Impl :&gt; Constraint3&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; and member empty and member push and member pop and member length)&gt; = Constraint3&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt;<br /><br />Full name: Script.StackImpl&lt;_,_,_&gt;</div>
<div class="tip" id="fs27">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs28">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs29">val pop : constr:StackImpl&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; -&gt; list:&#39;Stack -&gt; &#39;Elem * &#39;Stack (requires default constructor and &#39;Impl :&gt; Constraint3&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; and member empty and member push and member pop and member length and member ( .ctor ))<br /><br />Full name: Script.Test1.pop</div>
<div class="tip" id="fs30">val constr : StackImpl&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; (requires default constructor and &#39;Impl :&gt; Constraint3&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; and member empty and member push and member pop and member length and member ( .ctor ))</div>
<div class="tip" id="fs31">Multiple items<br />val list : &#39;Stack<br /><br />--------------------<br />type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs32">val impl : &#39;Impl (requires default constructor and &#39;Impl :&gt; Constraint3&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; and member empty and member push and member pop and member length and member ( .ctor ))</div>
<div class="tip" id="fs33">val push : constr:StackImpl&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; -&gt; elem:&#39;Elem -&gt; list:&#39;Stack -&gt; &#39;Stack (requires default constructor and &#39;Impl :&gt; Constraint3&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; and member empty and member push and member pop and member length and member ( .ctor ))<br /><br />Full name: Script.Test1.push</div>
<div class="tip" id="fs34">val elem : &#39;Elem</div>
<div class="tip" id="fs35">val length : constr:StackImpl&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; -&gt; list:&#39;Stack -&gt; int (requires default constructor and &#39;Impl :&gt; Constraint3&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; and member empty and member push and member pop and member length and member ( .ctor ))<br /><br />Full name: Script.Test1.length</div>
<div class="tip" id="fs36">val empty : constr:StackImpl&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; -&gt; &#39;Stack (requires default constructor and &#39;Impl :&gt; Constraint3&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; and member empty and member push and member pop and member length and member ( .ctor ))<br /><br />Full name: Script.Test1.empty</div>
<div class="tip" id="fs37">val singleton : constr:StackImpl&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; -&gt; elem:&#39;Elem -&gt; &#39;Stack (requires default constructor and &#39;Impl :&gt; Constraint3&lt;&#39;Impl,&#39;Stack,&#39;Elem&gt; and member empty and member push and member pop and member length and member ( .ctor ))<br /><br />Full name: Script.Test1.singleton</div>
<div class="tip" id="fs38">val single1 : int list<br /><br />Full name: Script.single1</div>
<div class="tip" id="fs39">module Test1<br /><br />from Script</div>
<div class="tip" id="fs40">val single2 : int array<br /><br />Full name: Script.single2</div>
<div class="tip" id="fs41">Multiple items<br />type Stacks&lt;&#39;t&gt; =<br />&#160;&#160;new : unit -&gt; Stacks&lt;&#39;t&gt;<br />&#160;&#160;member GetImpl : &#39;t [] -&gt; ArrayStackImpl&lt;&#39;t&gt;<br />&#160;&#160;member GetImpl : &#39;t list -&gt; ListStackImpl&lt;&#39;t&gt;<br /><br />Full name: Script.Stacks&lt;_&gt;<br /><br />--------------------<br />new : unit -&gt; Stacks&lt;&#39;t&gt;</div>
<div class="tip" id="fs42">member Stacks.GetImpl : &#39;t [] -&gt; ArrayStackImpl&lt;&#39;t&gt;<br /><br />Full name: Script.Stacks`1.GetImpl</div>
<div class="tip" id="fs43">val __ : Stacks&lt;&#39;t&gt;</div>
<div class="tip" id="fs44">member Stacks.GetImpl : &#39;t list -&gt; ListStackImpl&lt;&#39;t&gt;<br /><br />Full name: Script.Stacks`1.GetImpl</div>
<div class="tip" id="fs45">type StackImpls&lt;&#39;Stacks,&#39;Stack,&#39;Impl (requires default constructor and member GetImpl)&gt; = Constraint3&lt;&#39;Stacks,&#39;Stack,&#39;Impl&gt;<br /><br />Full name: Script.StackImpls&lt;_,_,_&gt;</div>
<div class="tip" id="fs46">val reverse : constr:StackImpls&lt;&#39;Stacks,&#39;Stack,&#39;Impl&gt; -&gt; stack:&#39;Stack -&gt; &#39;Stack (requires default constructor and member GetImpl and member ( .ctor ) and &#39;Impl :&gt; StackImpl&lt;&#39;a,&#39;Stack,&#39;b&gt; and default constructor and &#39;a :&gt; Constraint3&lt;&#39;a,&#39;Stack,&#39;b&gt; and member empty and member push and member pop and member length and member ( .ctor ))<br /><br />Full name: Script.Test2.reverse</div>
<div class="tip" id="fs47">val constr : StackImpls&lt;&#39;Stacks,&#39;Stack,&#39;Impl&gt; (requires default constructor and member GetImpl and member ( .ctor ) and &#39;Impl :&gt; StackImpl&lt;&#39;a,&#39;Stack,&#39;b&gt; and default constructor and &#39;a :&gt; Constraint3&lt;&#39;a,&#39;Stack,&#39;b&gt; and member empty and member push and member pop and member length and member ( .ctor ))</div>
<div class="tip" id="fs48">val stack : &#39;Stack</div>
<div class="tip" id="fs49">val stacks : &#39;Stacks (requires default constructor and member GetImpl and member ( .ctor ) and &#39;Impl :&gt; StackImpl&lt;&#39;a,&#39;Stack,&#39;b&gt; and default constructor and &#39;a :&gt; Constraint3&lt;&#39;a,&#39;Stack,&#39;b&gt; and member empty and member push and member pop and member length and member ( .ctor ))</div>
<div class="tip" id="fs50">val impl : #StackImpl&lt;&#39;a,&#39;Stack,&#39;b&gt; (requires default constructor and &#39;a :&gt; Constraint3&lt;&#39;a,&#39;Stack,&#39;b&gt; and member empty and member push and member pop and member length and member ( .ctor ))</div>
<div class="tip" id="fs51">val mutable result : &#39;Stack</div>
<div class="tip" id="fs52">val mutable state : &#39;Stack</div>
<div class="tip" id="fs53">val h : &#39;b</div>
<div class="tip" id="fs54">val t : &#39;Stack</div>
<div class="tip" id="fs55">val r1 : int list<br /><br />Full name: Script.r1</div>
<div class="tip" id="fs56">module Test2<br /><br />from Script</div>
<div class="tip" id="fs57">val r2 : int array<br /><br />Full name: Script.r2</div>

