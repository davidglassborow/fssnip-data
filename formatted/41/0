<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Indexable</span>() <span class="o">=</span>  
  <span class="c">/// Returns a 2D slice. Arguments are optional and will be None</span>
  <span class="c">/// when the user writes for example x.[1 .. , 1 .. ]  </span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">GetSlice</span>(<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">start1</span>, <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">finish1</span>, <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">start2</span>, <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="i">finish2</span>) <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="i">s1</span>, <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="i">f1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="f">defaultArg</span> <span onmouseout="hideTip(event, 'fs4', 11)" onmouseover="showTip(event, 'fs4', 11)" class="i">start1</span> <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="f">defaultArg</span> <span onmouseout="hideTip(event, 'fs5', 13)" onmouseover="showTip(event, 'fs5', 13)" class="i">finish1</span> <span class="n">100</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="i">s2</span>, <span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="i">f2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="f">defaultArg</span> <span onmouseout="hideTip(event, 'fs6', 17)" onmouseover="showTip(event, 'fs6', 17)" class="i">start2</span> <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs10', 18)" onmouseover="showTip(event, 'fs10', 18)" class="f">defaultArg</span> <span onmouseout="hideTip(event, 'fs7', 19)" onmouseover="showTip(event, 'fs7', 19)" class="i">finish2</span> <span class="n">100</span>
    <span class="c">// Return a string with the range of the slice</span>
    <span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="f">sprintf</span> <span class="s">&quot;[</span><span class="pf">%A</span><span class="s">, </span><span class="pf">%A</span><span class="s">] -&gt; [</span><span class="pf">%A</span><span class="s">, </span><span class="pf">%A</span><span class="s">]&quot;</span> <span onmouseout="hideTip(event, 'fs8', 21)" onmouseover="showTip(event, 'fs8', 21)" class="i">s1</span> <span onmouseout="hideTip(event, 'fs11', 22)" onmouseover="showTip(event, 'fs11', 22)" class="i">s2</span> <span onmouseout="hideTip(event, 'fs9', 23)" onmouseover="showTip(event, 'fs9', 23)" class="i">f1</span> <span onmouseout="hideTip(event, 'fs12', 24)" onmouseover="showTip(event, 'fs12', 24)" class="i">f2</span> 
 
<span class="c">// Returns [1, 0] -&gt; [100, 10]</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 25)" onmouseover="showTip(event, 'fs14', 25)" class="i">r</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs1', 26)" onmouseover="showTip(event, 'fs1', 26)" class="t">Indexable</span>()     
<span onmouseout="hideTip(event, 'fs14', 27)" onmouseover="showTip(event, 'fs14', 27)" class="i">r</span><span class="o">.</span>[<span class="n">1..</span>, <span class="o">..</span><span class="n">10</span>]
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />type Indexable =<br />&#160;&#160;new : unit -&gt; Indexable<br />&#160;&#160;member GetSlice : start1:int option * finish1:int option * start2:int option * finish2:int option -&gt; string<br /><br />Full name: Script.Indexable<br /><br />--------------------<br />new : unit -&gt; Indexable</div>
<div class="tip" id="fs2">val x : Indexable</div>
<div class="tip" id="fs3">member Indexable.GetSlice : start1:int option * finish1:int option * start2:int option * finish2:int option -&gt; string<br /><br />Full name: Script.Indexable.GetSlice<br /><em><br /><br />&#160;Returns a 2D slice. Arguments are optional and will be None<br />&#160;when the user writes for example x.[1 .. , 1 .. ]  </em></div>
<div class="tip" id="fs4">val start1 : int option</div>
<div class="tip" id="fs5">val finish1 : int option</div>
<div class="tip" id="fs6">val start2 : int option</div>
<div class="tip" id="fs7">val finish2 : int option</div>
<div class="tip" id="fs8">val s1 : int</div>
<div class="tip" id="fs9">val f1 : int</div>
<div class="tip" id="fs10">val defaultArg : arg:&#39;T option -&gt; defaultValue:&#39;T -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.defaultArg</div>
<div class="tip" id="fs11">val s2 : int</div>
<div class="tip" id="fs12">val f2 : int</div>
<div class="tip" id="fs13">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs14">val r : Indexable<br /><br />Full name: Script.r</div>

