<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span class="t">MonadHelpers</span><span class="o">=</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Bind</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="p">Bind</span> <span class="k">with</span>
        <span class="k">static</span> <span class="k">member</span> (<span class="o">$</span>) (<span class="i">s</span>, <span class="i">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">bind</span> <span class="i">f</span> <span class="i">s</span>
        <span class="k">static</span> <span class="k">member</span> (<span class="o">$</span>) (<span class="i">s</span>, <span class="i">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">collect</span> <span class="i">f</span> <span class="i">s</span>
        <span class="k">static</span> <span class="k">member</span> (<span class="o">$</span>) (<span class="i">s</span>, <span class="i">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">collect</span> <span class="i">f</span> <span class="i">s</span>
        <span class="k">static</span> <span class="k">member</span> (<span class="o">$</span>) (<span class="i">s</span>, <span class="i">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">collect</span> <span class="i">f</span> <span class="i">s</span>
        <span class="k">static</span> <span class="k">member</span> (<span class="o">$</span>) (<span class="i">s</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="i">Lazy</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T1</span><span class="o">&gt;</span>, <span class="i">f</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">T1</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">Lazy</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T2</span><span class="o">&gt;</span>) <span class="o">=</span> <span class="k">lazy</span> (<span class="i">f</span> <span class="i">s</span><span class="o">.</span><span class="i">Value</span>)<span class="o">.</span><span class="i">Value</span>
        <span class="k">static</span> <span class="k">member</span> (<span class="o">$</span>) (<span class="i">s</span>, <span class="i">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="i">Bind</span>(<span class="i">s</span> <span class="i">f</span>)
    <span class="k">let</span> <span class="k">inline</span> (<span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span>) <span class="i">s</span> <span class="i">f</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 15)" onmouseover="showTip(event, 'fs1', 15)" class="i">Bind</span> <span class="o">$</span> <span class="i">s</span> <span class="o">&lt;|</span> <span class="i">f</span>
    <span class="k">let</span> <span class="k">inline</span> (<span class="o">&lt;&lt;=</span>) <span class="i">f</span> <span class="i">s</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 16)" onmouseover="showTip(event, 'fs1', 16)" class="i">Bind</span> <span class="o">$</span> <span class="i">s</span> <span class="o">&lt;|</span> <span class="i">f</span>
    <span class="k">let</span> <span class="k">inline</span> (<span class="o">&gt;</span><span class="o">=&gt;</span>)<span class="i">f</span> <span class="i">g</span> <span class="i">s</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 17)" onmouseover="showTip(event, 'fs1', 17)" class="i">Bind</span> <span class="o">$</span> (<span class="i">f</span> <span class="i">s</span>) <span class="o">&lt;|</span> <span class="i">g</span>
    <span class="k">let</span> <span class="k">inline</span> (<span class="o">&lt;=&lt;</span>)<span class="i">g</span> <span class="i">f</span> <span class="i">s</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 18)" onmouseover="showTip(event, 'fs1', 18)" class="i">Bind</span> <span class="o">$</span> (<span class="i">f</span> <span class="i">s</span>) <span class="o">&lt;|</span> <span class="i">g</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />union case Bind.Bind: Bind<br /><br />--------------------<br />type Bind = | Bind<br /><br />Full name: Script.MonadHelpers.Bind</div>
<div class="tip" id="fs2">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs3">val bind : binder:(&#39;T -&gt; &#39;U option) -&gt; option:&#39;T option -&gt; &#39;U option<br /><br />Full name: Microsoft.FSharp.Core.Option.bind</div>
<div class="tip" id="fs4">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs5">val collect : mapping:(&#39;T -&gt; &#39;U list) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.collect</div>
<div class="tip" id="fs6">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs7">val collect : mapping:(&#39;T -&gt; &#39;U []) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.collect</div>
<div class="tip" id="fs8">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs9">val collect : mapping:(&#39;T -&gt; #seq&lt;&#39;U&gt;) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.collect</div>
<div class="tip" id="fs10">Multiple items<br />active recognizer Lazy: Lazy&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.( |Lazy| )<br /><br />--------------------<br />type Lazy&lt;&#39;T&gt; = System.Lazy&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Lazy&lt;_&gt;</div>
<div class="tip" id="fs11">val async : AsyncBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.async</div>
<div class="tip" id="fs12">member AsyncBuilder.Bind : computation:Async&lt;&#39;T&gt; * binder:(&#39;T -&gt; Async&lt;&#39;U&gt;) -&gt; Async&lt;&#39;U&gt;</div>

