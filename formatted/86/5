<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// Rotaerk&#39;s implementation is the fastest and least complicated, the rest are</span>
<span class="c">// just curiosities unless a bright idea strikes. Compare the performance:</span>
<span class="c">(* </span>
<span class="c">&gt; for x in [1..1000000] |&gt; groupsOfAtMost 500 do printf&quot;&quot;;;</span>
<span class="c">&gt; Real: 00:00:00.423, CPU: 00:00:00.421, GC gen0: 14, gen1: 6, gen2: 0</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; for x in [1..1000000] |&gt; breakByV3 500 do printf&quot;&quot;;;</span>
<span class="c">&gt; Real: 00:01:04.181, CPU: 00:01:03.991, GC gen0: 15, gen1: 4, gen2: 0</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; *)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">groupsOfAtMost</span> (<span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">size</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">int</span>) (<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">s</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">seq</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">v</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="t">seq</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">list</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">v</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">seq</span> {
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">en</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 10)" onmouseover="showTip(event, 'fs4', 10)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="f">GetEnumerator</span> ()
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="v">more</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="f">ref</span> <span class="k">true</span>
        <span class="k">while</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="v">more</span> <span class="k">do</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="i">group</span> <span class="o">=</span>
            [
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="v">i</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 17)" onmouseover="showTip(event, 'fs10', 17)" class="f">ref</span> <span class="n">0</span>
            <span class="k">while</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="v">i</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs2', 19)" onmouseover="showTip(event, 'fs2', 19)" class="i">size</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs7', 20)" onmouseover="showTip(event, 'fs7', 20)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 21)" onmouseover="showTip(event, 'fs13', 21)" class="f">MoveNext</span> () <span class="k">do</span>
                <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs7', 22)" onmouseover="showTip(event, 'fs7', 22)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="i">Current</span>
                <span onmouseout="hideTip(event, 'fs12', 24)" onmouseover="showTip(event, 'fs12', 24)" class="v">i</span> <span class="o">:=</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs12', 25)" onmouseover="showTip(event, 'fs12', 25)" class="v">i</span> <span class="o">+</span> <span class="n">1</span>
            ]
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs15', 26)" onmouseover="showTip(event, 'fs15', 26)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 27)" onmouseover="showTip(event, 'fs16', 27)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs11', 28)" onmouseover="showTip(event, 'fs11', 28)" class="i">group</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs9', 29)" onmouseover="showTip(event, 'fs9', 29)" class="v">more</span> <span class="o">:=</span> <span class="k">false</span>
        <span class="k">else</span>
            <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs11', 30)" onmouseover="showTip(event, 'fs11', 30)" class="i">group</span>
    }


<span class="c">// the original breakBy, made more idiomatic with Rotaerk&#39;s help</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 31)" onmouseover="showTip(event, 'fs17', 31)" class="f">breakByV1</span> <span onmouseout="hideTip(event, 'fs18', 32)" onmouseover="showTip(event, 'fs18', 32)" class="i">n</span> <span onmouseout="hideTip(event, 'fs19', 33)" onmouseover="showTip(event, 'fs19', 33)" class="i">s</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 34)" onmouseover="showTip(event, 'fs20', 34)" class="f">filter</span> <span onmouseout="hideTip(event, 'fs21', 35)" onmouseover="showTip(event, 'fs21', 35)" class="i">k</span> (<span onmouseout="hideTip(event, 'fs22', 36)" onmouseover="showTip(event, 'fs22', 36)" class="i">i</span>,<span onmouseout="hideTip(event, 'fs23', 37)" onmouseover="showTip(event, 'fs23', 37)" class="i">x</span>) <span class="o">=</span> ((<span onmouseout="hideTip(event, 'fs22', 38)" onmouseover="showTip(event, 'fs22', 38)" class="i">i</span><span class="o">/</span><span onmouseout="hideTip(event, 'fs18', 39)" onmouseover="showTip(event, 'fs18', 39)" class="i">n</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 40)" onmouseover="showTip(event, 'fs21', 40)" class="i">k</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 41)" onmouseover="showTip(event, 'fs24', 41)" class="f">index</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 42)" onmouseover="showTip(event, 'fs25', 42)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 43)" onmouseover="showTip(event, 'fs26', 43)" class="f">mapi</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs22', 44)" onmouseover="showTip(event, 'fs22', 44)" class="i">i</span> <span onmouseout="hideTip(event, 'fs27', 45)" onmouseover="showTip(event, 'fs27', 45)" class="i">x</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs22', 46)" onmouseover="showTip(event, 'fs22', 46)" class="i">i</span>,<span onmouseout="hideTip(event, 'fs27', 47)" onmouseover="showTip(event, 'fs27', 47)" class="i">x</span>))
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs28', 48)" onmouseover="showTip(event, 'fs28', 48)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs29', 49)" onmouseover="showTip(event, 'fs29', 49)" class="i">s</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs5', 50)" onmouseover="showTip(event, 'fs5', 50)" class="i">seq</span> { <span class="k">if</span> <span onmouseout="hideTip(event, 'fs30', 51)" onmouseover="showTip(event, 'fs30', 51)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs25', 52)" onmouseover="showTip(event, 'fs25', 52)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 53)" onmouseover="showTip(event, 'fs31', 53)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs29', 54)" onmouseover="showTip(event, 'fs29', 54)" class="i">s</span>) <span class="k">then</span> 
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 55)" onmouseover="showTip(event, 'fs21', 55)" class="i">k</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs29', 56)" onmouseover="showTip(event, 'fs29', 56)" class="i">s</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 57)" onmouseover="showTip(event, 'fs25', 57)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 58)" onmouseover="showTip(event, 'fs32', 58)" class="f">head</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs33', 59)" onmouseover="showTip(event, 'fs33', 59)" class="f">fst</span>) <span class="o">/</span> <span onmouseout="hideTip(event, 'fs18', 60)" onmouseover="showTip(event, 'fs18', 60)" class="i">n</span>
                <span class="k">yield</span> (<span onmouseout="hideTip(event, 'fs29', 61)" onmouseover="showTip(event, 'fs29', 61)" class="i">s</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 62)" onmouseover="showTip(event, 'fs25', 62)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 63)" onmouseover="showTip(event, 'fs34', 63)" class="f">truncate</span> <span onmouseout="hideTip(event, 'fs18', 64)" onmouseover="showTip(event, 'fs18', 64)" class="i">n</span>
                            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 65)" onmouseover="showTip(event, 'fs25', 65)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 66)" onmouseover="showTip(event, 'fs35', 66)" class="f">map</span> <span onmouseout="hideTip(event, 'fs36', 67)" onmouseover="showTip(event, 'fs36', 67)" class="f">snd</span>)
                <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs28', 68)" onmouseover="showTip(event, 'fs28', 68)" class="f">loop</span> (<span onmouseout="hideTip(event, 'fs29', 69)" onmouseover="showTip(event, 'fs29', 69)" class="i">s</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 70)" onmouseover="showTip(event, 'fs25', 70)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 71)" onmouseover="showTip(event, 'fs37', 71)" class="f">skipWhile</span> (<span onmouseout="hideTip(event, 'fs20', 72)" onmouseover="showTip(event, 'fs20', 72)" class="f">filter</span> <span onmouseout="hideTip(event, 'fs21', 73)" onmouseover="showTip(event, 'fs21', 73)" class="i">k</span>)) }
    <span onmouseout="hideTip(event, 'fs28', 74)" onmouseover="showTip(event, 'fs28', 74)" class="f">loop</span> (<span onmouseout="hideTip(event, 'fs19', 75)" onmouseover="showTip(event, 'fs19', 75)" class="i">s</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs24', 76)" onmouseover="showTip(event, 'fs24', 76)" class="f">index</span>)
<span onmouseout="hideTip(event, 'fs5', 77)" onmouseover="showTip(event, 'fs5', 77)" class="i">seq</span> {<span class="n">1..</span><span class="n">25000</span>} <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs17', 78)" onmouseover="showTip(event, 'fs17', 78)" class="f">breakByV1</span> <span class="n">50</span>
<span class="c">(*</span>
<span class="c">val it : seq&lt;seq&lt;int&gt;&gt; =</span>
<span class="c">  seq</span>
<span class="c">    [seq [1; 2; 3; 4; ...]; seq [51; 52; 53; 54; ...];</span>
<span class="c">     seq [101; 102; 103; 104; ...]; seq [151; 152; 153; 154; ...]; ...] *)</span>

<span class="c">// with even greater Rotaerk&#39;s help, breakBy is now shorter and a couple useful</span>
<span class="c">// util functions materialize</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 79)" onmouseover="showTip(event, 'fs38', 79)" class="f">tuple2</span> <span onmouseout="hideTip(event, 'fs27', 80)" onmouseover="showTip(event, 'fs27', 80)" class="i">x</span> <span onmouseout="hideTip(event, 'fs39', 81)" onmouseover="showTip(event, 'fs39', 81)" class="i">y</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 82)" onmouseover="showTip(event, 'fs27', 82)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs39', 83)" onmouseover="showTip(event, 'fs39', 83)" class="i">y</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 84)" onmouseover="showTip(event, 'fs40', 84)" class="f">trim</span> <span onmouseout="hideTip(event, 'fs18', 85)" onmouseover="showTip(event, 'fs18', 85)" class="i">n</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 86)" onmouseover="showTip(event, 'fs25', 86)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 87)" onmouseover="showTip(event, 'fs35', 87)" class="f">map</span> <span onmouseout="hideTip(event, 'fs36', 88)" onmouseover="showTip(event, 'fs36', 88)" class="f">snd</span> <span class="o">&lt;&lt;</span> <span onmouseout="hideTip(event, 'fs25', 89)" onmouseover="showTip(event, 'fs25', 89)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 90)" onmouseover="showTip(event, 'fs41', 90)" class="f">filter</span> (<span onmouseout="hideTip(event, 'fs33', 91)" onmouseover="showTip(event, 'fs33', 91)" class="f">fst</span> <span class="o">&gt;</span><span class="o">&gt;</span> (<span class="o">&lt;=</span>) <span onmouseout="hideTip(event, 'fs18', 92)" onmouseover="showTip(event, 'fs18', 92)" class="i">n</span>) <span class="o">&lt;&lt;</span> <span onmouseout="hideTip(event, 'fs25', 93)" onmouseover="showTip(event, 'fs25', 93)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 94)" onmouseover="showTip(event, 'fs26', 94)" class="f">mapi</span> <span onmouseout="hideTip(event, 'fs38', 95)" onmouseover="showTip(event, 'fs38', 95)" class="f">tuple2</span>
<span onmouseout="hideTip(event, 'fs5', 96)" onmouseover="showTip(event, 'fs5', 96)" class="i">seq</span> {<span class="n">1..</span><span class="n">25000</span>} <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs40', 97)" onmouseover="showTip(event, 'fs40', 97)" class="f">trim</span> <span class="n">50</span>
<span class="c">//val it : seq&lt;int&gt; = seq [51; 52; 53; 54; ...]</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 98)" onmouseover="showTip(event, 'fs42', 98)" class="f">breakByV2</span> <span onmouseout="hideTip(event, 'fs18', 99)" onmouseover="showTip(event, 'fs18', 99)" class="i">n</span> <span onmouseout="hideTip(event, 'fs19', 100)" onmouseover="showTip(event, 'fs19', 100)" class="i">s</span> <span class="o">=</span> 
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs43', 101)" onmouseover="showTip(event, 'fs43', 101)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs44', 102)" onmouseover="showTip(event, 'fs44', 102)" class="i">s</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs5', 103)" onmouseover="showTip(event, 'fs5', 103)" class="i">seq</span> { <span class="k">if</span> <span onmouseout="hideTip(event, 'fs30', 104)" onmouseover="showTip(event, 'fs30', 104)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs25', 105)" onmouseover="showTip(event, 'fs25', 105)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 106)" onmouseover="showTip(event, 'fs31', 106)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs44', 107)" onmouseover="showTip(event, 'fs44', 107)" class="i">s</span>) <span class="k">then</span> 
                <span class="k">yield</span> (<span onmouseout="hideTip(event, 'fs44', 108)" onmouseover="showTip(event, 'fs44', 108)" class="i">s</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 109)" onmouseover="showTip(event, 'fs25', 109)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 110)" onmouseover="showTip(event, 'fs34', 110)" class="f">truncate</span> <span onmouseout="hideTip(event, 'fs18', 111)" onmouseover="showTip(event, 'fs18', 111)" class="i">n</span>)
                <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs43', 112)" onmouseover="showTip(event, 'fs43', 112)" class="f">loop</span> (<span onmouseout="hideTip(event, 'fs44', 113)" onmouseover="showTip(event, 'fs44', 113)" class="i">s</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs40', 114)" onmouseover="showTip(event, 'fs40', 114)" class="f">trim</span> <span onmouseout="hideTip(event, 'fs18', 115)" onmouseover="showTip(event, 'fs18', 115)" class="i">n</span>) }
    <span onmouseout="hideTip(event, 'fs43', 116)" onmouseover="showTip(event, 'fs43', 116)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs19', 117)" onmouseover="showTip(event, 'fs19', 117)" class="i">s</span>
<span onmouseout="hideTip(event, 'fs5', 118)" onmouseover="showTip(event, 'fs5', 118)" class="i">seq</span> {<span class="n">1..</span><span class="n">25000</span>} <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs42', 119)" onmouseover="showTip(event, 'fs42', 119)" class="f">breakByV2</span> <span class="n">50</span>
<span class="c">(*</span>
<span class="c">val it : seq&lt;seq&lt;int&gt;&gt; =</span>
<span class="c">  seq</span>
<span class="c">    [seq [1; 2; 3; 4; ...]; seq [51; 52; 53; 54; ...];</span>
<span class="c">     seq [101; 102; 103; 104; ...]; seq [151; 152; 153; 154; ...]; ...] *)</span>

<span class="c">// in discussions with Rotaerk, it came out that it would be useful to return</span>
<span class="c">// both first n elements and remaining sequence, in order to iterate seq in one</span>
<span class="c">// pass. Rotaerk liked the name &quot;trim&quot; for that function, I decided on &quot;spill&quot;.</span>
<span class="c">// dgfitch helped me pinpoint the problem with spill and led me to add |&gt; Seq.cache</span>
<span class="c">// also this last version returns a sequence of lists, unavoidably I&#39;m afraid.</span>
<span class="c">// Well, I could wrap lists in seqs but that&#39;s just sugar.</span>
<span class="c">// Changed spill to return option because the way I use Seq.cache eats memory.</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs45', 120)" onmouseover="showTip(event, 'fs45', 120)" class="f">spill</span> (<span onmouseout="hideTip(event, 'fs18', 121)" onmouseover="showTip(event, 'fs18', 121)" class="i">n</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs3', 122)" onmouseover="showTip(event, 'fs3', 122)" class="t">int</span>) (<span onmouseout="hideTip(event, 'fs19', 123)" onmouseover="showTip(event, 'fs19', 123)" class="i">s</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs5', 124)" onmouseover="showTip(event, 'fs5', 124)" class="t">seq</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>)  <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 125)" onmouseover="showTip(event, 'fs46', 125)" class="i">en</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 126)" onmouseover="showTip(event, 'fs19', 126)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 127)" onmouseover="showTip(event, 'fs47', 127)" class="f">GetEnumerator</span>()
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 128)" onmouseover="showTip(event, 'fs48', 128)" class="v">pos</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 129)" onmouseover="showTip(event, 'fs10', 129)" class="f">ref</span> <span class="n">0</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs49', 130)" onmouseover="showTip(event, 'fs49', 130)" class="i">lst</span> <span class="o">=</span> [ <span class="k">while</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs48', 131)" onmouseover="showTip(event, 'fs48', 131)" class="v">pos</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs18', 132)" onmouseover="showTip(event, 'fs18', 132)" class="i">n</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs46', 133)" onmouseover="showTip(event, 'fs46', 133)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 134)" onmouseover="showTip(event, 'fs13', 134)" class="f">MoveNext</span>() <span class="k">do</span> 
                    <span onmouseout="hideTip(event, 'fs48', 135)" onmouseover="showTip(event, 'fs48', 135)" class="v">pos</span> <span class="o">:=</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs48', 136)" onmouseover="showTip(event, 'fs48', 136)" class="v">pos</span><span class="o">+</span><span class="n">1</span>  
                    <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs46', 137)" onmouseover="showTip(event, 'fs46', 137)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 138)" onmouseover="showTip(event, 'fs50', 138)" class="i">Current</span>]
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs49', 139)" onmouseover="showTip(event, 'fs49', 139)" class="i">lst</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 140)" onmouseover="showTip(event, 'fs15', 140)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 141)" onmouseover="showTip(event, 'fs16', 141)" class="f">isEmpty</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs51', 142)" onmouseover="showTip(event, 'fs51', 142)" class="p">None</span> <span class="k">else</span>
        <span onmouseout="hideTip(event, 'fs52', 143)" onmouseover="showTip(event, 'fs52', 143)" class="p">Some</span>((<span onmouseout="hideTip(event, 'fs49', 144)" onmouseover="showTip(event, 'fs49', 144)" class="i">lst</span>, <span onmouseout="hideTip(event, 'fs5', 145)" onmouseover="showTip(event, 'fs5', 145)" class="i">seq</span> { <span class="k">while</span> <span onmouseout="hideTip(event, 'fs46', 146)" onmouseover="showTip(event, 'fs46', 146)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 147)" onmouseover="showTip(event, 'fs13', 147)" class="f">MoveNext</span>() <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs46', 148)" onmouseover="showTip(event, 'fs46', 148)" class="i">en</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 149)" onmouseover="showTip(event, 'fs50', 149)" class="i">Current</span>}))
<span onmouseout="hideTip(event, 'fs5', 150)" onmouseover="showTip(event, 'fs5', 150)" class="i">seq</span> {<span class="n">1..</span><span class="n">25000</span>} <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs45', 151)" onmouseover="showTip(event, 'fs45', 151)" class="f">spill</span> <span class="n">50</span>
<span class="c">(*</span>
<span class="c">val it : (int list * seq&lt;int&gt;) option =</span>
<span class="c">  Some</span>
<span class="c">    ([1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20;</span>
<span class="c">      21; 22; 23; 24; 25; 26; 27; 28; 29; 30; 31; 32; 33; 34; 35; 36; 37; 38;</span>
<span class="c">      39; 40; 41; 42; 43; 44; 45; 46; 47; 48; 49; 50],</span>
<span class="c">     seq [51; 52; 53; 54; ...]) *)</span>

<span class="c">// now breakBy is a true one-liner </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 152)" onmouseover="showTip(event, 'fs53', 152)" class="f">breakByV3</span> <span onmouseout="hideTip(event, 'fs18', 153)" onmouseover="showTip(event, 'fs18', 153)" class="i">n</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 154)" onmouseover="showTip(event, 'fs25', 154)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs54', 155)" onmouseover="showTip(event, 'fs54', 155)" class="f">unfold</span> (<span onmouseout="hideTip(event, 'fs45', 156)" onmouseover="showTip(event, 'fs45', 156)" class="f">spill</span> <span onmouseout="hideTip(event, 'fs18', 157)" onmouseover="showTip(event, 'fs18', 157)" class="i">n</span>)

<span onmouseout="hideTip(event, 'fs5', 158)" onmouseover="showTip(event, 'fs5', 158)" class="i">seq</span> {<span class="n">1..</span><span class="n">25000</span>} <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs53', 159)" onmouseover="showTip(event, 'fs53', 159)" class="f">breakByV3</span> <span class="n">50</span>
<span class="c">(*</span>
<span class="c">val it : seq&lt;int list&gt; =</span>
<span class="c">  seq</span>
<span class="c">    [[1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20;</span>
<span class="c">      21; 22; 23; 24; 25; 26; 27; 28; 29; 30; 31; 32; 33; 34; 35; 36; 37; 38;</span>
<span class="c">      39; 40; 41; 42; 43; 44; 45; 46; 47; 48; 49; 50];</span>
<span class="c">     [51; 52; 53; 54; 55; 56; 57; 58; 59; 60; 61; 62; 63; 64; 65; 66; 67; 68;</span>
<span class="c">      69; 70; 71; 72; 73; 74; 75; 76; 77; 78; 79; 80; 81; 82; 83; 84; 85; 86;</span>
<span class="c">      87; 88; 89; 90; 91; 92; 93; 94; 95; 96; 97; 98; 99; 100];</span>
<span class="c">     [101; 102; 103; 104; 105; 106; 107; 108; 109; 110; 111; 112; 113; 114;</span>
<span class="c">      115; 116; 117; 118; 119; 120; 121; 122; 123; 124; 125; 126; 127; 128;</span>
<span class="c">      129; 130; 131; 132; 133; 134; 135; 136; 137; 138; 139; 140; 141; 142;</span>
<span class="c">      143; 144; 145; 146; 147; 148; 149; 150];</span>
<span class="c">     [151; 152; 153; 154; 155; 156; 157; 158; 159; 160; 161; 162; 163; 164;</span>
<span class="c">      165; 166; 167; 168; 169; 170; 171; 172; 173; 174; 175; 176; 177; 178;</span>
<span class="c">      179; 180; 181; 182; 183; 184; 185; 186; 187; 188; 189; 190; 191; 192;</span>
<span class="c">      193; 194; 195; 196; 197; 198; 199; 200]; ...] *)</span>

<span class="c">// a few timing tests demonstrating the superiority of the third version</span>
<span class="c">// these numbers are outdated, third version is now even faster</span>
<span class="c">(*</span>
<span class="c">&gt; for x in [1..2500] |&gt; breakByV1 50 do printf&quot;&quot;;;</span>
<span class="c">Real: 00:00:00.203, CPU: 00:00:00.203, GC gen0: 1, gen1: 0, gen2: 0</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; for x in [1..2500] |&gt; breakByV2 50 do printf&quot;&quot;;;</span>
<span class="c">Real: 00:00:00.240, CPU: 00:00:00.250, GC gen0: 6, gen1: 1, gen2: 0</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; for x in [1..2500] |&gt; breakByV3 50 do printf&quot;&quot;;;</span>
<span class="c">Real: 00:00:00.026, CPU: 00:00:00.015, GC gen0: 1, gen1: 0, gen2: 0</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; for x in [1..10000] |&gt; breakByV1 50 do printf&quot;&quot;;;</span>
<span class="c">Real: 00:00:10.746, CPU: 00:00:10.734, GC gen0: 10, gen1: 1, gen2: 0</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; for x in [1..10000] |&gt; breakByV2 50 do printf&quot;&quot;;;</span>
<span class="c">Real: 00:00:13.781, CPU: 00:00:13.921, GC gen0: 345, gen1: 4, gen2: 1</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; for x in [1..10000] |&gt; breakByV3 50 do printf&quot;&quot;;;</span>
<span class="c">Real: 00:00:00.380, CPU: 00:00:00.375, GC gen0: 6, gen1: 2, gen2: 0</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; for x in [1..10000] |&gt; breakByV1 500 do printf&quot;&quot;;;</span>
<span class="c">Real: 00:00:00.139, CPU: 00:00:00.156, GC gen0: 1, gen1: 0, gen2: 0</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; for x in [1..10000] |&gt; breakByV2 500 do printf&quot;&quot;;;</span>
<span class="c">Real: 00:00:00.165, CPU: 00:00:00.171, GC gen0: 4, gen1: 0, gen2: 0</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; for x in [1..10000] |&gt; breakByV3 500 do printf&quot;&quot;;;</span>
<span class="c">Real: 00:00:00.038, CPU: 00:00:00.046, GC gen0: 1, gen1: 0, gen2: 0</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; for x in [1..100000] |&gt; breakByV1 500 do printf&quot;&quot;;;</span>
<span class="c">Real: 00:01:40.741, CPU: 00:01:40.812, GC gen0: 103, gen1: 10, gen2: 1</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; for x in [1..100000] |&gt; breakByV2 500 do printf&quot;&quot;;;</span>
<span class="c">Real: 00:02:22.935, CPU: 00:02:22.968, GC gen0: 3444, gen1: 18, gen2: 2</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; for x in [1..100000] |&gt; breakByV3 500 do printf&quot;&quot;;;</span>
<span class="c">Real: 00:00:04.255, CPU: 00:00:04.453, GC gen0: 61, gen1: 14, gen2: 2</span>
<span class="c">val it : unit = ()</span>
<span class="c">&gt; *)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val groupsOfAtMost : size:int -&gt; s:seq&lt;&#39;v&gt; -&gt; seq&lt;&#39;v list&gt;<br /><br />Full name: Script.groupsOfAtMost</div>
<div class="tip" id="fs2">val size : int</div>
<div class="tip" id="fs3">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs4">val s : seq&lt;&#39;v&gt;</div>
<div class="tip" id="fs5">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = System.Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs6">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs7">val en : System.Collections.Generic.IEnumerator&lt;&#39;v&gt;</div>
<div class="tip" id="fs8">System.Collections.Generic.IEnumerable.GetEnumerator() : System.Collections.Generic.IEnumerator&lt;&#39;v&gt;</div>
<div class="tip" id="fs9">val more : bool ref</div>
<div class="tip" id="fs10">Multiple items<br />val ref : value:&#39;T -&gt; &#39;T ref<br /><br />Full name: Microsoft.FSharp.Core.Operators.ref<br /><br />--------------------<br />type &#39;T ref = Ref&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.ref&lt;_&gt;</div>
<div class="tip" id="fs11">val group : &#39;v list</div>
<div class="tip" id="fs12">val i : int ref</div>
<div class="tip" id="fs13">System.Collections.IEnumerator.MoveNext() : bool</div>
<div class="tip" id="fs14">property System.Collections.Generic.IEnumerator.Current: &#39;v</div>
<div class="tip" id="fs15">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs16">val isEmpty : list:&#39;T list -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.List.isEmpty</div>
<div class="tip" id="fs17">val breakByV1 : n:int -&gt; s:seq&lt;&#39;a&gt; -&gt; seq&lt;seq&lt;&#39;a&gt;&gt;<br /><br />Full name: Script.breakByV1</div>
<div class="tip" id="fs18">val n : int</div>
<div class="tip" id="fs19">val s : seq&lt;&#39;a&gt;</div>
<div class="tip" id="fs20">val filter : (int -&gt; int * &#39;b -&gt; bool)</div>
<div class="tip" id="fs21">val k : int</div>
<div class="tip" id="fs22">val i : int</div>
<div class="tip" id="fs23">val x : &#39;b</div>
<div class="tip" id="fs24">val index : (seq&lt;&#39;a&gt; -&gt; seq&lt;int * &#39;a&gt;)</div>
<div class="tip" id="fs25">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs26">val mapi : mapping:(int -&gt; &#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.mapi</div>
<div class="tip" id="fs27">val x : &#39;a</div>
<div class="tip" id="fs28">val loop : (seq&lt;int * &#39;b&gt; -&gt; seq&lt;seq&lt;&#39;b&gt;&gt;)</div>
<div class="tip" id="fs29">val s : seq&lt;int * &#39;b&gt;</div>
<div class="tip" id="fs30">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs31">val isEmpty : source:seq&lt;&#39;T&gt; -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.Seq.isEmpty</div>
<div class="tip" id="fs32">val head : source:seq&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.Seq.head</div>
<div class="tip" id="fs33">val fst : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T1<br /><br />Full name: Microsoft.FSharp.Core.Operators.fst</div>
<div class="tip" id="fs34">val truncate : count:int -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.truncate</div>
<div class="tip" id="fs35">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs36">val snd : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T2<br /><br />Full name: Microsoft.FSharp.Core.Operators.snd</div>
<div class="tip" id="fs37">val skipWhile : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.skipWhile</div>
<div class="tip" id="fs38">val tuple2 : x:&#39;a -&gt; y:&#39;b -&gt; &#39;a * &#39;b<br /><br />Full name: Script.tuple2</div>
<div class="tip" id="fs39">val y : &#39;b</div>
<div class="tip" id="fs40">val trim : n:int -&gt; (seq&lt;&#39;a&gt; -&gt; seq&lt;&#39;a&gt;)<br /><br />Full name: Script.trim</div>
<div class="tip" id="fs41">val filter : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.filter</div>
<div class="tip" id="fs42">val breakByV2 : n:int -&gt; s:seq&lt;&#39;a&gt; -&gt; seq&lt;seq&lt;&#39;a&gt;&gt;<br /><br />Full name: Script.breakByV2</div>
<div class="tip" id="fs43">val loop : (seq&lt;&#39;b&gt; -&gt; seq&lt;seq&lt;&#39;b&gt;&gt;)</div>
<div class="tip" id="fs44">val s : seq&lt;&#39;b&gt;</div>
<div class="tip" id="fs45">val spill : n:int -&gt; s:seq&lt;&#39;a&gt; -&gt; (&#39;a list * seq&lt;&#39;a&gt;) option<br /><br />Full name: Script.spill</div>
<div class="tip" id="fs46">val en : System.Collections.Generic.IEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs47">System.Collections.Generic.IEnumerable.GetEnumerator() : System.Collections.Generic.IEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs48">val pos : int ref</div>
<div class="tip" id="fs49">val lst : &#39;a list</div>
<div class="tip" id="fs50">property System.Collections.Generic.IEnumerator.Current: &#39;a</div>
<div class="tip" id="fs51">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs52">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs53">val breakByV3 : n:int -&gt; (seq&lt;&#39;a&gt; -&gt; seq&lt;&#39;a list&gt;)<br /><br />Full name: Script.breakByV3</div>
<div class="tip" id="fs54">val unfold : generator:(&#39;State -&gt; (&#39;T * &#39;State) option) -&gt; state:&#39;State -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.unfold</div>

