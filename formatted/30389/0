<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">ComponentModel</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">Reflection</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="i">Quotations</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 10)" onmouseover="showTip(event, 'fs3', 10)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 11)" onmouseover="showTip(event, 'fs4', 11)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="i">Quotations</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 13)" onmouseover="showTip(event, 'fs7', 13)" class="i">Patterns</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="t">ViewModelBase</span>() <span class="o">=</span>

  <span class="c">/// Evaluates an expression. From http://www.fssnip.net/h1</span>
  <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="f">eval</span> <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="p">Value</span> (<span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">v</span>, _) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="i">v</span>
    | <span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="p">Coerce</span> (<span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="i">e</span>, _) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 21)" onmouseover="showTip(event, 'fs9', 21)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="i">e</span>
    | <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="p">NewObject</span> (<span onmouseout="hideTip(event, 'fs15', 24)" onmouseover="showTip(event, 'fs15', 24)" class="i">ci</span>, <span onmouseout="hideTip(event, 'fs16', 25)" onmouseover="showTip(event, 'fs16', 25)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 26)" onmouseover="showTip(event, 'fs15', 26)" class="i">ci</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 27)" onmouseover="showTip(event, 'fs17', 27)" class="f">Invoke</span> (<span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs16', 29)" onmouseover="showTip(event, 'fs16', 29)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs19', 30)" onmouseover="showTip(event, 'fs19', 30)" class="p">NewArray</span> (<span onmouseout="hideTip(event, 'fs20', 31)" onmouseover="showTip(event, 'fs20', 31)" class="i">t</span>, <span onmouseout="hideTip(event, 'fs16', 32)" onmouseover="showTip(event, 'fs16', 32)" class="i">args</span>) <span class="k">-&gt;</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 33)" onmouseover="showTip(event, 'fs21', 33)" class="i">array</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 34)" onmouseover="showTip(event, 'fs22', 34)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 35)" onmouseover="showTip(event, 'fs23', 35)" class="f">CreateInstance</span> (<span onmouseout="hideTip(event, 'fs20', 36)" onmouseover="showTip(event, 'fs20', 36)" class="i">t</span>, <span onmouseout="hideTip(event, 'fs16', 37)" onmouseover="showTip(event, 'fs16', 37)" class="i">args</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 38)" onmouseover="showTip(event, 'fs24', 38)" class="i">Length</span>) 
        <span onmouseout="hideTip(event, 'fs16', 39)" onmouseover="showTip(event, 'fs16', 39)" class="i">args</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 40)" onmouseover="showTip(event, 'fs25', 40)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 41)" onmouseover="showTip(event, 'fs26', 41)" class="f">iteri</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs27', 42)" onmouseover="showTip(event, 'fs27', 42)" class="i">i</span> <span onmouseout="hideTip(event, 'fs28', 43)" onmouseover="showTip(event, 'fs28', 43)" class="i">arg</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 44)" onmouseover="showTip(event, 'fs21', 44)" class="i">array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 45)" onmouseover="showTip(event, 'fs29', 45)" class="f">SetValue</span> (<span onmouseout="hideTip(event, 'fs9', 46)" onmouseover="showTip(event, 'fs9', 46)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs28', 47)" onmouseover="showTip(event, 'fs28', 47)" class="i">arg</span>, <span onmouseout="hideTip(event, 'fs27', 48)" onmouseover="showTip(event, 'fs27', 48)" class="i">i</span>))
        <span onmouseout="hideTip(event, 'fs30', 49)" onmouseover="showTip(event, 'fs30', 49)" class="f">box</span> <span onmouseout="hideTip(event, 'fs21', 50)" onmouseover="showTip(event, 'fs21', 50)" class="i">array</span>
    | <span onmouseout="hideTip(event, 'fs31', 51)" onmouseover="showTip(event, 'fs31', 51)" class="p">NewUnionCase</span> (<span onmouseout="hideTip(event, 'fs32', 52)" onmouseover="showTip(event, 'fs32', 52)" class="i">case</span>, <span onmouseout="hideTip(event, 'fs16', 53)" onmouseover="showTip(event, 'fs16', 53)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs33', 54)" onmouseover="showTip(event, 'fs33', 54)" class="t">FSharpValue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 55)" onmouseover="showTip(event, 'fs34', 55)" class="f">MakeUnion</span> (<span onmouseout="hideTip(event, 'fs32', 56)" onmouseover="showTip(event, 'fs32', 56)" class="i">case</span>, <span onmouseout="hideTip(event, 'fs18', 57)" onmouseover="showTip(event, 'fs18', 57)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs16', 58)" onmouseover="showTip(event, 'fs16', 58)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs35', 59)" onmouseover="showTip(event, 'fs35', 59)" class="p">NewRecord</span> (<span onmouseout="hideTip(event, 'fs20', 60)" onmouseover="showTip(event, 'fs20', 60)" class="i">t</span>, <span onmouseout="hideTip(event, 'fs16', 61)" onmouseover="showTip(event, 'fs16', 61)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs33', 62)" onmouseover="showTip(event, 'fs33', 62)" class="t">FSharpValue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 63)" onmouseover="showTip(event, 'fs36', 63)" class="f">MakeRecord</span> (<span onmouseout="hideTip(event, 'fs20', 64)" onmouseover="showTip(event, 'fs20', 64)" class="i">t</span>, <span onmouseout="hideTip(event, 'fs18', 65)" onmouseover="showTip(event, 'fs18', 65)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs16', 66)" onmouseover="showTip(event, 'fs16', 66)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs37', 67)" onmouseover="showTip(event, 'fs37', 67)" class="p">NewTuple</span> <span onmouseout="hideTip(event, 'fs16', 68)" onmouseover="showTip(event, 'fs16', 68)" class="i">args</span> <span class="k">-&gt;</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 69)" onmouseover="showTip(event, 'fs20', 69)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 70)" onmouseover="showTip(event, 'fs38', 70)" class="t">FSharpType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 71)" onmouseover="showTip(event, 'fs39', 71)" class="f">MakeTupleType</span> [| <span class="k">for</span> <span onmouseout="hideTip(event, 'fs28', 72)" onmouseover="showTip(event, 'fs28', 72)" class="i">arg</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs16', 73)" onmouseover="showTip(event, 'fs16', 73)" class="i">args</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs28', 74)" onmouseover="showTip(event, 'fs28', 74)" class="i">arg</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 75)" onmouseover="showTip(event, 'fs40', 75)" class="i">Type</span> |]
        <span onmouseout="hideTip(event, 'fs33', 76)" onmouseover="showTip(event, 'fs33', 76)" class="t">FSharpValue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 77)" onmouseover="showTip(event, 'fs41', 77)" class="f">MakeTuple</span> (<span onmouseout="hideTip(event, 'fs18', 78)" onmouseover="showTip(event, 'fs18', 78)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs16', 79)" onmouseover="showTip(event, 'fs16', 79)" class="i">args</span>, <span onmouseout="hideTip(event, 'fs20', 80)" onmouseover="showTip(event, 'fs20', 80)" class="i">t</span>)
    | <span onmouseout="hideTip(event, 'fs42', 81)" onmouseover="showTip(event, 'fs42', 81)" class="p">FieldGet</span> (<span onmouseout="hideTip(event, 'fs43', 82)" onmouseover="showTip(event, 'fs43', 82)" class="p">Some</span> (<span onmouseout="hideTip(event, 'fs10', 83)" onmouseover="showTip(event, 'fs10', 83)" class="p">Value</span> (<span onmouseout="hideTip(event, 'fs11', 84)" onmouseover="showTip(event, 'fs11', 84)" class="i">v</span>, _)), <span onmouseout="hideTip(event, 'fs44', 85)" onmouseover="showTip(event, 'fs44', 85)" class="i">fi</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs44', 86)" onmouseover="showTip(event, 'fs44', 86)" class="i">fi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 87)" onmouseover="showTip(event, 'fs45', 87)" class="f">GetValue</span> <span onmouseout="hideTip(event, 'fs11', 88)" onmouseover="showTip(event, 'fs11', 88)" class="i">v</span>
    | <span onmouseout="hideTip(event, 'fs46', 89)" onmouseover="showTip(event, 'fs46', 89)" class="p">PropertyGet</span> (<span onmouseout="hideTip(event, 'fs47', 90)" onmouseover="showTip(event, 'fs47', 90)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs48', 91)" onmouseover="showTip(event, 'fs48', 91)" class="i">pi</span>, <span onmouseout="hideTip(event, 'fs16', 92)" onmouseover="showTip(event, 'fs16', 92)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs48', 93)" onmouseover="showTip(event, 'fs48', 93)" class="i">pi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 94)" onmouseover="showTip(event, 'fs49', 94)" class="f">GetValue</span> (<span class="k">null</span>, <span onmouseout="hideTip(event, 'fs18', 95)" onmouseover="showTip(event, 'fs18', 95)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs16', 96)" onmouseover="showTip(event, 'fs16', 96)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs46', 97)" onmouseover="showTip(event, 'fs46', 97)" class="p">PropertyGet</span> (<span onmouseout="hideTip(event, 'fs43', 98)" onmouseover="showTip(event, 'fs43', 98)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs50', 99)" onmouseover="showTip(event, 'fs50', 99)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs48', 100)" onmouseover="showTip(event, 'fs48', 100)" class="i">pi</span>, <span onmouseout="hideTip(event, 'fs16', 101)" onmouseover="showTip(event, 'fs16', 101)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs48', 102)" onmouseover="showTip(event, 'fs48', 102)" class="i">pi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 103)" onmouseover="showTip(event, 'fs49', 103)" class="f">GetValue</span> (<span onmouseout="hideTip(event, 'fs9', 104)" onmouseover="showTip(event, 'fs9', 104)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs50', 105)" onmouseover="showTip(event, 'fs50', 105)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs18', 106)" onmouseover="showTip(event, 'fs18', 106)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs16', 107)" onmouseover="showTip(event, 'fs16', 107)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs51', 108)" onmouseover="showTip(event, 'fs51', 108)" class="p">Call</span> (<span onmouseout="hideTip(event, 'fs47', 109)" onmouseover="showTip(event, 'fs47', 109)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs52', 110)" onmouseover="showTip(event, 'fs52', 110)" class="i">mi</span>, <span onmouseout="hideTip(event, 'fs16', 111)" onmouseover="showTip(event, 'fs16', 111)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs52', 112)" onmouseover="showTip(event, 'fs52', 112)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 113)" onmouseover="showTip(event, 'fs53', 113)" class="f">Invoke</span> (<span class="k">null</span>, <span onmouseout="hideTip(event, 'fs18', 114)" onmouseover="showTip(event, 'fs18', 114)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs16', 115)" onmouseover="showTip(event, 'fs16', 115)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs51', 116)" onmouseover="showTip(event, 'fs51', 116)" class="p">Call</span> (<span onmouseout="hideTip(event, 'fs43', 117)" onmouseover="showTip(event, 'fs43', 117)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs50', 118)" onmouseover="showTip(event, 'fs50', 118)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs52', 119)" onmouseover="showTip(event, 'fs52', 119)" class="i">mi</span>, <span onmouseout="hideTip(event, 'fs16', 120)" onmouseover="showTip(event, 'fs16', 120)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs52', 121)" onmouseover="showTip(event, 'fs52', 121)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 122)" onmouseover="showTip(event, 'fs53', 122)" class="f">Invoke</span> (<span onmouseout="hideTip(event, 'fs9', 123)" onmouseover="showTip(event, 'fs9', 123)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs50', 124)" onmouseover="showTip(event, 'fs50', 124)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs18', 125)" onmouseover="showTip(event, 'fs18', 125)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs16', 126)" onmouseover="showTip(event, 'fs16', 126)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs50', 127)" onmouseover="showTip(event, 'fs50', 127)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs54', 128)" onmouseover="showTip(event, 'fs54', 128)" class="f">raise</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs55', 129)" onmouseover="showTip(event, 'fs55', 129)" class="t">NotSupportedException</span>(<span onmouseout="hideTip(event, 'fs56', 130)" onmouseover="showTip(event, 'fs56', 130)" class="f">string</span> <span onmouseout="hideTip(event, 'fs50', 131)" onmouseover="showTip(event, 'fs50', 131)" class="i">x</span>)
  <span class="k">and</span> <span onmouseout="hideTip(event, 'fs18', 132)" onmouseover="showTip(event, 'fs18', 132)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs16', 133)" onmouseover="showTip(event, 'fs16', 133)" class="i">args</span> <span class="o">=</span> [| <span class="k">for</span> <span onmouseout="hideTip(event, 'fs28', 134)" onmouseover="showTip(event, 'fs28', 134)" class="i">arg</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs16', 135)" onmouseover="showTip(event, 'fs16', 135)" class="i">args</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 136)" onmouseover="showTip(event, 'fs9', 136)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs28', 137)" onmouseover="showTip(event, 'fs28', 137)" class="i">arg</span> |]

  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 138)" onmouseover="showTip(event, 'fs57', 138)" class="i">propertyChanged</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs58', 139)" onmouseover="showTip(event, 'fs58', 139)" class="t">Event</span><span class="o">&lt;</span>_,_<span class="o">&gt;</span>()

  <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs59', 140)" onmouseover="showTip(event, 'fs59', 140)" class="t">INotifyPropertyChanged</span> <span class="k">with</span>
    [&lt;<span onmouseout="hideTip(event, 'fs60', 141)" onmouseover="showTip(event, 'fs60', 141)" class="t">CLIEvent</span>&gt;]
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs61', 142)" onmouseover="showTip(event, 'fs61', 142)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 143)" onmouseover="showTip(event, 'fs62', 143)" class="f">PropertyChanged</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs57', 144)" onmouseover="showTip(event, 'fs57', 144)" class="i">propertyChanged</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 145)" onmouseover="showTip(event, 'fs63', 145)" class="f">Publish</span>

  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs64', 146)" onmouseover="showTip(event, 'fs64', 146)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 147)" onmouseover="showTip(event, 'fs65', 147)" class="f">OnPropertyChanged</span>(<span onmouseout="hideTip(event, 'fs66', 148)" onmouseover="showTip(event, 'fs66', 148)" class="i">propertyName</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs56', 149)" onmouseover="showTip(event, 'fs56', 149)" class="t">string</span>) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs57', 150)" onmouseover="showTip(event, 'fs57', 150)" class="i">propertyChanged</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs67', 151)" onmouseover="showTip(event, 'fs67', 151)" class="f">Trigger</span>(<span onmouseout="hideTip(event, 'fs64', 152)" onmouseover="showTip(event, 'fs64', 152)" class="i">this</span>, <span class="k">new</span> <span onmouseout="hideTip(event, 'fs68', 153)" onmouseover="showTip(event, 'fs68', 153)" class="t">PropertyChangedEventArgs</span>(<span onmouseout="hideTip(event, 'fs66', 154)" onmouseover="showTip(event, 'fs66', 154)" class="i">propertyName</span>))

  <span class="c">/// Returns an observable that publishes the value of the quoted property each</span>
  <span class="c">/// time INotifyPropertyChanged is raised for this property.</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs64', 155)" onmouseover="showTip(event, 'fs64', 155)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 156)" onmouseover="showTip(event, 'fs69', 156)" class="f">Observe</span> (<span onmouseout="hideTip(event, 'fs70', 157)" onmouseover="showTip(event, 'fs70', 157)" class="i">getProperty</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs71', 158)" onmouseover="showTip(event, 'fs71', 158)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs72', 159)" onmouseover="showTip(event, 'fs72', 159)" class="t">IObservable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">=</span> 
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs70', 160)" onmouseover="showTip(event, 'fs70', 160)" class="i">getProperty</span> <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs46', 161)" onmouseover="showTip(event, 'fs46', 161)" class="p">PropertyGet</span> (_, <span onmouseout="hideTip(event, 'fs73', 162)" onmouseover="showTip(event, 'fs73', 162)" class="i">propInfo</span>, _) <span class="k">-&gt;</span>
        (<span onmouseout="hideTip(event, 'fs64', 163)" onmouseover="showTip(event, 'fs64', 163)" class="i">this</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs59', 164)" onmouseover="showTip(event, 'fs59', 164)" class="t">INotifyPropertyChanged</span>)<span class="o">.</span><span class="i">PropertyChanged</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs74', 165)" onmouseover="showTip(event, 'fs74', 165)" class="t">Observable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs75', 166)" onmouseover="showTip(event, 'fs75', 166)" class="f">filter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs76', 167)" onmouseover="showTip(event, 'fs76', 167)" class="i">args</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs76', 168)" onmouseover="showTip(event, 'fs76', 168)" class="i">args</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs77', 169)" onmouseover="showTip(event, 'fs77', 169)" class="i">PropertyName</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs73', 170)" onmouseover="showTip(event, 'fs73', 170)" class="i">propInfo</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs78', 171)" onmouseover="showTip(event, 'fs78', 171)" class="i">Name</span>)
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs74', 172)" onmouseover="showTip(event, 'fs74', 172)" class="t">Observable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 173)" onmouseover="showTip(event, 'fs79', 173)" class="f">map</span> (<span class="k">fun</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 174)" onmouseover="showTip(event, 'fs9', 174)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs70', 175)" onmouseover="showTip(event, 'fs70', 175)" class="i">getProperty</span> <span class="o">:?&gt;</span> <span class="o">&#39;</span><span class="i">a</span>)
    | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs80', 176)" onmouseover="showTip(event, 'fs80', 176)" class="f">failwith</span> <span class="s">&quot;Expression must be a property getter&quot;</span>

  <span class="c">/// Calls the callback with the value of the expression every time</span>
  <span class="c">/// INotifyPropertyChanged is raised for this property.</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs64', 177)" onmouseover="showTip(event, 'fs64', 177)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 178)" onmouseover="showTip(event, 'fs81', 178)" class="f">Subscribe</span> (<span onmouseout="hideTip(event, 'fs70', 179)" onmouseover="showTip(event, 'fs70', 179)" class="i">getProperty</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs71', 180)" onmouseover="showTip(event, 'fs71', 180)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs82', 181)" onmouseover="showTip(event, 'fs82', 181)" class="f">callback</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs83', 182)" onmouseover="showTip(event, 'fs83', 182)" class="t">unit</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs83', 183)" onmouseover="showTip(event, 'fs83', 183)" class="t">unit</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs64', 184)" onmouseover="showTip(event, 'fs64', 184)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs84', 185)" onmouseover="showTip(event, 'fs84', 185)" class="f">Observe</span> <span onmouseout="hideTip(event, 'fs70', 186)" onmouseover="showTip(event, 'fs70', 186)" class="i">getProperty</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs74', 187)" onmouseover="showTip(event, 'fs74', 187)" class="t">Observable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs85', 188)" onmouseover="showTip(event, 'fs85', 188)" class="f">add</span> <span onmouseout="hideTip(event, 'fs82', 189)" onmouseover="showTip(event, 'fs82', 189)" class="f">callback</span>

  <span class="c">/// Calls the callback with the value of the expression every time</span>
  <span class="c">/// INotifyPropertyChanged is raised for this property. Also calls the callback</span>
  <span class="c">/// immediately with the current value of the expression.</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs64', 190)" onmouseover="showTip(event, 'fs64', 190)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs86', 191)" onmouseover="showTip(event, 'fs86', 191)" class="f">SubscribeAndInit</span> (<span onmouseout="hideTip(event, 'fs70', 192)" onmouseover="showTip(event, 'fs70', 192)" class="i">getProperty</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs71', 193)" onmouseover="showTip(event, 'fs71', 193)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs82', 194)" onmouseover="showTip(event, 'fs82', 194)" class="f">callback</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs83', 195)" onmouseover="showTip(event, 'fs83', 195)" class="t">unit</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs83', 196)" onmouseover="showTip(event, 'fs83', 196)" class="t">unit</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs64', 197)" onmouseover="showTip(event, 'fs64', 197)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs87', 198)" onmouseover="showTip(event, 'fs87', 198)" class="f">Subscribe</span> <span onmouseout="hideTip(event, 'fs70', 199)" onmouseover="showTip(event, 'fs70', 199)" class="i">getProperty</span> <span onmouseout="hideTip(event, 'fs82', 200)" onmouseover="showTip(event, 'fs82', 200)" class="f">callback</span>
    <span onmouseout="hideTip(event, 'fs9', 201)" onmouseover="showTip(event, 'fs9', 201)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs70', 202)" onmouseover="showTip(event, 'fs70', 202)" class="i">getProperty</span> <span class="o">:?&gt;</span> <span class="o">&#39;</span><span class="i">a</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs82', 203)" onmouseover="showTip(event, 'fs82', 203)" class="f">callback</span>



<span class="c">/// Usage</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs88', 204)" onmouseover="showTip(event, 'fs88', 204)" class="t">MyVm</span>() <span class="o">=</span>
  <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs8', 205)" onmouseover="showTip(event, 'fs8', 205)" class="t">ViewModelBase</span>()
  <span class="k">member</span> <span class="k">val</span> <span class="v">MyInt</span> <span class="o">=</span> <span class="n">0</span> <span class="k">with</span> <span class="i">get</span>, <span onmouseout="hideTip(event, 'fs89', 206)" onmouseover="showTip(event, 'fs89', 206)" class="i">set</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs90', 207)" onmouseover="showTip(event, 'fs90', 207)" class="i">vm</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs88', 208)" onmouseover="showTip(event, 'fs88', 208)" class="t">MyVm</span>()

<span onmouseout="hideTip(event, 'fs90', 209)" onmouseover="showTip(event, 'fs90', 209)" class="i">vm</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs91', 210)" onmouseover="showTip(event, 'fs91', 210)" class="f">SubscribeAndInit</span> &lt;@ <span onmouseout="hideTip(event, 'fs90', 211)" onmouseover="showTip(event, 'fs90', 211)" class="i">vm</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs92', 212)" onmouseover="showTip(event, 'fs92', 212)" class="i">MyInt</span> @&gt; (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs27', 213)" onmouseover="showTip(event, 'fs27', 213)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs93', 214)" onmouseover="showTip(event, 'fs93', 214)" class="f">printfn</span> <span class="s">&quot;Value is </span><span class="pf">%i</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs27', 215)" onmouseover="showTip(event, 'fs27', 215)" class="i">i</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.ComponentModel</div>
<div class="tip" id="fs3">namespace Microsoft</div>
<div class="tip" id="fs4">namespace Microsoft.FSharp</div>
<div class="tip" id="fs5">namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs6">namespace Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs7">module Patterns<br /><br />from Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs8">Multiple items<br />type ViewModelBase =<br />&#160;&#160;interface INotifyPropertyChanged<br />&#160;&#160;new : unit -&gt; ViewModelBase<br />&#160;&#160;member Observe : getProperty:Expr&lt;&#39;a&gt; -&gt; IObservable&lt;&#39;a&gt;<br />&#160;&#160;member OnPropertyChanged : propertyName:string -&gt; unit<br />&#160;&#160;member Subscribe : getProperty:Expr&lt;&#39;a&gt; -&gt; callback:(&#39;a -&gt; unit) -&gt; unit<br />&#160;&#160;member SubscribeAndInit : getProperty:Expr&lt;&#39;a&gt; -&gt; callback:(&#39;a -&gt; unit) -&gt; unit<br /><br />Full name: Script.ViewModelBase<br /><br />--------------------<br />new : unit -&gt; ViewModelBase</div>
<div class="tip" id="fs9">val eval : (Expr -&gt; obj)<br /><em><br /><br />&#160;Evaluates an expression. From http://www.fssnip.net/h1</em></div>
<div class="tip" id="fs10">active recognizer Value: Expr -&gt; (obj * Type) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Value|_| )</div>
<div class="tip" id="fs11">val v : obj</div>
<div class="tip" id="fs12">active recognizer Coerce: Expr -&gt; (Expr * Type) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Coerce|_| )</div>
<div class="tip" id="fs13">val e : Expr</div>
<div class="tip" id="fs14">active recognizer NewObject: Expr -&gt; (Reflection.ConstructorInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewObject|_| )</div>
<div class="tip" id="fs15">val ci : Reflection.ConstructorInfo</div>
<div class="tip" id="fs16">val args : Expr list</div>
<div class="tip" id="fs17">Reflection.ConstructorInfo.Invoke(parameters: obj []) : obj<br />Reflection.MethodBase.Invoke(obj: obj, parameters: obj []) : obj<br />Reflection.ConstructorInfo.Invoke(invokeAttr: Reflection.BindingFlags, binder: Reflection.Binder, parameters: obj [], culture: Globalization.CultureInfo) : obj<br />Reflection.MethodBase.Invoke(obj: obj, invokeAttr: Reflection.BindingFlags, binder: Reflection.Binder, parameters: obj [], culture: Globalization.CultureInfo) : obj</div>
<div class="tip" id="fs18">val evalAll : (Expr list -&gt; obj [])</div>
<div class="tip" id="fs19">active recognizer NewArray: Expr -&gt; (Type * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewArray|_| )</div>
<div class="tip" id="fs20">val t : Type</div>
<div class="tip" id="fs21">Multiple items<br />val array : Array<br /><br />--------------------<br />type &#39;T array = &#39;T []<br /><br />Full name: Microsoft.FSharp.Core.array&lt;_&gt;</div>
<div class="tip" id="fs22">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs23">Array.CreateInstance(elementType: Type, [&lt;ParamArray&gt;] lengths: int64 []) : Array<br />Array.CreateInstance(elementType: Type, [&lt;ParamArray&gt;] lengths: int []) : Array<br />Array.CreateInstance(elementType: Type, length: int) : Array<br />Array.CreateInstance(elementType: Type, lengths: int [], lowerBounds: int []) : Array<br />Array.CreateInstance(elementType: Type, length1: int, length2: int) : Array<br />Array.CreateInstance(elementType: Type, length1: int, length2: int, length3: int) : Array</div>
<div class="tip" id="fs24">property List.Length: int</div>
<div class="tip" id="fs25">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs26">val iteri : action:(int -&gt; &#39;T -&gt; unit) -&gt; list:&#39;T list -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.List.iteri</div>
<div class="tip" id="fs27">val i : int</div>
<div class="tip" id="fs28">val arg : Expr</div>
<div class="tip" id="fs29">Array.SetValue(value: obj, [&lt;ParamArray&gt;] indices: int64 []) : unit<br />Array.SetValue(value: obj, index: int64) : unit<br />Array.SetValue(value: obj, [&lt;ParamArray&gt;] indices: int []) : unit<br />Array.SetValue(value: obj, index: int) : unit<br />Array.SetValue(value: obj, index1: int64, index2: int64) : unit<br />Array.SetValue(value: obj, index1: int, index2: int) : unit<br />Array.SetValue(value: obj, index1: int64, index2: int64, index3: int64) : unit<br />Array.SetValue(value: obj, index1: int, index2: int, index3: int) : unit</div>
<div class="tip" id="fs30">val box : value:&#39;T -&gt; obj<br /><br />Full name: Microsoft.FSharp.Core.Operators.box</div>
<div class="tip" id="fs31">active recognizer NewUnionCase: Expr -&gt; (UnionCaseInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewUnionCase|_| )</div>
<div class="tip" id="fs32">val case : UnionCaseInfo</div>
<div class="tip" id="fs33">type FSharpValue =<br />&#160;&#160;static member GetExceptionFields : exn:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetRecordField : record:obj * info:PropertyInfo -&gt; obj<br />&#160;&#160;static member GetRecordFields : record:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetTupleField : tuple:obj * index:int -&gt; obj<br />&#160;&#160;static member GetTupleFields : tuple:obj -&gt; obj []<br />&#160;&#160;static member GetUnionFields : value:obj * unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo * obj []<br />&#160;&#160;static member MakeFunction : functionType:Type * implementation:(obj -&gt; obj) -&gt; obj<br />&#160;&#160;static member MakeRecord : recordType:Type * values:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;static member MakeTuple : tupleElements:obj [] * tupleType:Type -&gt; obj<br />&#160;&#160;static member MakeUnion : unionCase:UnionCaseInfo * args:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpValue</div>
<div class="tip" id="fs34">static member FSharpValue.MakeUnion : unionCase:UnionCaseInfo * args:obj [] * ?allowAccessToPrivateRepresentation:bool -&gt; obj<br />static member FSharpValue.MakeUnion : unionCase:UnionCaseInfo * args:obj [] * ?bindingFlags:Reflection.BindingFlags -&gt; obj</div>
<div class="tip" id="fs35">active recognizer NewRecord: Expr -&gt; (Type * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewRecord|_| )</div>
<div class="tip" id="fs36">static member FSharpValue.MakeRecord : recordType:Type * values:obj [] * ?allowAccessToPrivateRepresentation:bool -&gt; obj<br />static member FSharpValue.MakeRecord : recordType:Type * values:obj [] * ?bindingFlags:Reflection.BindingFlags -&gt; obj</div>
<div class="tip" id="fs37">active recognizer NewTuple: Expr -&gt; Expr list option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewTuple|_| )</div>
<div class="tip" id="fs38">type FSharpType =<br />&#160;&#160;static member GetExceptionFields : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetFunctionElements : functionType:Type -&gt; Type * Type<br />&#160;&#160;static member GetRecordFields : recordType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetTupleElements : tupleType:Type -&gt; Type []<br />&#160;&#160;static member GetUnionCases : unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo []<br />&#160;&#160;static member IsExceptionRepresentation : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsFunction : typ:Type -&gt; bool<br />&#160;&#160;static member IsModule : typ:Type -&gt; bool<br />&#160;&#160;static member IsRecord : typ:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsTuple : typ:Type -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpType</div>
<div class="tip" id="fs39">static member FSharpType.MakeTupleType : types:Type [] -&gt; Type</div>
<div class="tip" id="fs40">property Expr.Type: Type</div>
<div class="tip" id="fs41">static member FSharpValue.MakeTuple : tupleElements:obj [] * tupleType:Type -&gt; obj</div>
<div class="tip" id="fs42">active recognizer FieldGet: Expr -&gt; (Expr option * Reflection.FieldInfo) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |FieldGet|_| )</div>
<div class="tip" id="fs43">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs44">val fi : Reflection.FieldInfo</div>
<div class="tip" id="fs45">Reflection.FieldInfo.GetValue(obj: obj) : obj</div>
<div class="tip" id="fs46">active recognizer PropertyGet: Expr -&gt; (Expr option * Reflection.PropertyInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |PropertyGet|_| )</div>
<div class="tip" id="fs47">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs48">val pi : Reflection.PropertyInfo</div>
<div class="tip" id="fs49">Reflection.PropertyInfo.GetValue(obj: obj, index: obj []) : obj<br />Reflection.PropertyInfo.GetValue(obj: obj, invokeAttr: Reflection.BindingFlags, binder: Reflection.Binder, index: obj [], culture: Globalization.CultureInfo) : obj</div>
<div class="tip" id="fs50">val x : Expr</div>
<div class="tip" id="fs51">active recognizer Call: Expr -&gt; (Expr option * Reflection.MethodInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Call|_| )</div>
<div class="tip" id="fs52">val mi : Reflection.MethodInfo</div>
<div class="tip" id="fs53">Reflection.MethodBase.Invoke(obj: obj, parameters: obj []) : obj<br />Reflection.MethodBase.Invoke(obj: obj, invokeAttr: Reflection.BindingFlags, binder: Reflection.Binder, parameters: obj [], culture: Globalization.CultureInfo) : obj</div>
<div class="tip" id="fs54">val raise : exn:Exception -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.raise</div>
<div class="tip" id="fs55">Multiple items<br />type NotSupportedException =<br />&#160;&#160;inherit SystemException<br />&#160;&#160;new : unit -&gt; NotSupportedException + 2 overloads<br /><br />Full name: System.NotSupportedException<br /><br />--------------------<br />NotSupportedException() : unit<br />NotSupportedException(message: string) : unit<br />NotSupportedException(message: string, innerException: exn) : unit</div>
<div class="tip" id="fs56">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs57">val propertyChanged : Event&lt;PropertyChangedEventHandler,PropertyChangedEventArgs&gt;</div>
<div class="tip" id="fs58">Multiple items<br />module Event<br /><br />from Microsoft.FSharp.Control<br /><br />--------------------<br />type Event&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; Event&lt;&#39;T&gt;<br />&#160;&#160;member Trigger : arg:&#39;T -&gt; unit<br />&#160;&#160;member Publish : IEvent&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Event&lt;_&gt;<br /><br />--------------------<br />type Event&lt;&#39;Delegate,&#39;Args (requires delegate and &#39;Delegate :&gt; Delegate)&gt; =<br />&#160;&#160;new : unit -&gt; Event&lt;&#39;Delegate,&#39;Args&gt;<br />&#160;&#160;member Trigger : sender:obj * args:&#39;Args -&gt; unit<br />&#160;&#160;member Publish : IEvent&lt;&#39;Delegate,&#39;Args&gt;<br /><br />Full name: Microsoft.FSharp.Control.Event&lt;_,_&gt;<br /><br />--------------------<br />new : unit -&gt; Event&lt;&#39;T&gt;<br /><br />--------------------<br />new : unit -&gt; Event&lt;&#39;Delegate,&#39;Args&gt;</div>
<div class="tip" id="fs59">type INotifyPropertyChanged =<br />&#160;&#160;event PropertyChanged : PropertyChangedEventHandler<br /><br />Full name: System.ComponentModel.INotifyPropertyChanged</div>
<div class="tip" id="fs60">Multiple items<br />type CLIEventAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; CLIEventAttribute<br /><br />Full name: Microsoft.FSharp.Core.CLIEventAttribute<br /><br />--------------------<br />new : unit -&gt; CLIEventAttribute</div>
<div class="tip" id="fs61">val __ : ViewModelBase</div>
<div class="tip" id="fs62">override ViewModelBase.PropertyChanged : IEvent&lt;PropertyChangedEventHandler,PropertyChangedEventArgs&gt;<br /><br />Full name: Script.ViewModelBase.PropertyChanged</div>
<div class="tip" id="fs63">property Event.Publish: IEvent&lt;PropertyChangedEventHandler,PropertyChangedEventArgs&gt;</div>
<div class="tip" id="fs64">val this : ViewModelBase</div>
<div class="tip" id="fs65">member ViewModelBase.OnPropertyChanged : propertyName:string -&gt; unit<br /><br />Full name: Script.ViewModelBase.OnPropertyChanged</div>
<div class="tip" id="fs66">val propertyName : string</div>
<div class="tip" id="fs67">member Event.Trigger : sender:obj * args:&#39;Args -&gt; unit</div>
<div class="tip" id="fs68">Multiple items<br />type PropertyChangedEventArgs =<br />&#160;&#160;inherit EventArgs<br />&#160;&#160;new : propertyName:string -&gt; PropertyChangedEventArgs<br />&#160;&#160;member PropertyName : string<br /><br />Full name: System.ComponentModel.PropertyChangedEventArgs<br /><br />--------------------<br />PropertyChangedEventArgs(propertyName: string) : unit</div>
<div class="tip" id="fs69">member ViewModelBase.Observe : getProperty:Expr&lt;&#39;a&gt; -&gt; IObservable&lt;&#39;a&gt;<br /><br />Full name: Script.ViewModelBase.Observe<br /><em><br /><br />&#160;Returns an observable that publishes the value of the quoted property each<br />&#160;time INotifyPropertyChanged is raised for this property.</em></div>
<div class="tip" id="fs70">val getProperty : Expr&lt;&#39;a&gt;</div>
<div class="tip" id="fs71">Multiple items<br />type Expr =<br />&#160;&#160;override Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetFreeVars : unit -&gt; seq&lt;Var&gt;<br />&#160;&#160;member Substitute : substitution:(Var -&gt; Expr option) -&gt; Expr<br />&#160;&#160;member ToString : full:bool -&gt; string<br />&#160;&#160;member CustomAttributes : Expr list<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member AddressOf : target:Expr -&gt; Expr<br />&#160;&#160;static member AddressSet : target:Expr * value:Expr -&gt; Expr<br />&#160;&#160;static member Application : functionExpr:Expr * argument:Expr -&gt; Expr<br />&#160;&#160;static member Applications : functionExpr:Expr * arguments:Expr list list -&gt; Expr<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Quotations.Expr<br /><br />--------------------<br />type Expr&lt;&#39;T&gt; =<br />&#160;&#160;inherit Expr<br />&#160;&#160;member Raw : Expr<br /><br />Full name: Microsoft.FSharp.Quotations.Expr&lt;_&gt;</div>
<div class="tip" id="fs72">type IObservable&lt;&#39;T&gt; =<br />&#160;&#160;member Subscribe : observer:IObserver&lt;&#39;T&gt; -&gt; IDisposable<br /><br />Full name: System.IObservable&lt;_&gt;</div>
<div class="tip" id="fs73">val propInfo : Reflection.PropertyInfo</div>
<div class="tip" id="fs74">module Observable<br /><br />from Microsoft.FSharp.Control</div>
<div class="tip" id="fs75">val filter : predicate:(&#39;T -&gt; bool) -&gt; source:IObservable&lt;&#39;T&gt; -&gt; IObservable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Observable.filter</div>
<div class="tip" id="fs76">val args : PropertyChangedEventArgs</div>
<div class="tip" id="fs77">property PropertyChangedEventArgs.PropertyName: string</div>
<div class="tip" id="fs78">property Reflection.MemberInfo.Name: string</div>
<div class="tip" id="fs79">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:IObservable&lt;&#39;T&gt; -&gt; IObservable&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Control.Observable.map</div>
<div class="tip" id="fs80">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs81">member ViewModelBase.Subscribe : getProperty:Expr&lt;&#39;a&gt; -&gt; callback:(&#39;a -&gt; unit) -&gt; unit<br /><br />Full name: Script.ViewModelBase.Subscribe<br /><em><br /><br />&#160;Calls the callback with the value of the expression every time<br />&#160;INotifyPropertyChanged is raised for this property.</em></div>
<div class="tip" id="fs82">val callback : (&#39;a -&gt; unit)</div>
<div class="tip" id="fs83">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs84">member ViewModelBase.Observe : getProperty:Expr&lt;&#39;a&gt; -&gt; IObservable&lt;&#39;a&gt;<br /><em><br /><br />&#160;Returns an observable that publishes the value of the quoted property each<br />&#160;time INotifyPropertyChanged is raised for this property.</em></div>
<div class="tip" id="fs85">val add : callback:(&#39;T -&gt; unit) -&gt; source:IObservable&lt;&#39;T&gt; -&gt; unit<br /><br />Full name: Microsoft.FSharp.Control.Observable.add</div>
<div class="tip" id="fs86">member ViewModelBase.SubscribeAndInit : getProperty:Expr&lt;&#39;a&gt; -&gt; callback:(&#39;a -&gt; unit) -&gt; unit<br /><br />Full name: Script.ViewModelBase.SubscribeAndInit<br /><em><br /><br />&#160;Calls the callback with the value of the expression every time<br />&#160;INotifyPropertyChanged is raised for this property. Also calls the callback<br />&#160;immediately with the current value of the expression.</em></div>
<div class="tip" id="fs87">member ViewModelBase.Subscribe : getProperty:Expr&lt;&#39;a&gt; -&gt; callback:(&#39;a -&gt; unit) -&gt; unit<br /><em><br /><br />&#160;Calls the callback with the value of the expression every time<br />&#160;INotifyPropertyChanged is raised for this property.</em></div>
<div class="tip" id="fs88">Multiple items<br />type MyVm =<br />&#160;&#160;inherit ViewModelBase<br />&#160;&#160;new : unit -&gt; MyVm<br />&#160;&#160;member MyInt : int<br />&#160;&#160;member MyInt : int with set<br /><br />Full name: Script.MyVm<br /><em><br /><br />&#160;Usage</em><br /><br />--------------------<br />new : unit -&gt; MyVm</div>
<div class="tip" id="fs89">val set : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.set</div>
<div class="tip" id="fs90">val vm : MyVm<br /><br />Full name: Script.vm</div>
<div class="tip" id="fs91">member ViewModelBase.SubscribeAndInit : getProperty:Expr&lt;&#39;a&gt; -&gt; callback:(&#39;a -&gt; unit) -&gt; unit<br /><em><br /><br />&#160;Calls the callback with the value of the expression every time<br />&#160;INotifyPropertyChanged is raised for this property. Also calls the callback<br />&#160;immediately with the current value of the expression.</em></div>
<div class="tip" id="fs92">property MyVm.MyInt: int</div>
<div class="tip" id="fs93">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>

