<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Drawing</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">IQuadable</span> <span class="o">=</span> 
    <span class="k">abstract</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">Bounds</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">Rectangle</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">SubNodes</span> <span class="o">=</span> { <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="i">NW</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="t">QuadNode</span>; <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="i">NE</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="t">QuadNode</span>; <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="i">SE</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="t">QuadNode</span>; <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="i">SW</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="t">QuadNode</span> }
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="t">QuadNode</span> <span class="o">=</span> { <span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="i">Bounds</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 17)" onmouseover="showTip(event, 'fs5', 17)" class="t">Rectangle</span>; <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="v">Contents</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="t">List</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs3', 20)" onmouseover="showTip(event, 'fs3', 20)" class="t">IQuadable</span><span class="o">&gt;</span>; <span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="i">SubNodes</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="t">Option</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs15', 23)" onmouseover="showTip(event, 'fs15', 23)" class="t">SubNodes</span><span class="o">&gt;</span> }

<span class="k">module</span> <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="t">QuadTree</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="f">contains</span> (<span onmouseout="hideTip(event, 'fs19', 26)" onmouseover="showTip(event, 'fs19', 26)" class="i">tree</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 27)" onmouseover="showTip(event, 'fs8', 27)" class="t">QuadNode</span>) (<span onmouseout="hideTip(event, 'fs20', 28)" onmouseover="showTip(event, 'fs20', 28)" class="i">bounds</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 29)" onmouseover="showTip(event, 'fs5', 29)" class="t">Rectangle</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 30)" onmouseover="showTip(event, 'fs19', 30)" class="i">tree</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 31)" onmouseover="showTip(event, 'fs12', 31)" class="i">Bounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 32)" onmouseover="showTip(event, 'fs21', 32)" class="f">Contains</span> <span onmouseout="hideTip(event, 'fs20', 33)" onmouseover="showTip(event, 'fs20', 33)" class="i">bounds</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 34)" onmouseover="showTip(event, 'fs22', 34)" class="f">getConstrainingNode</span> (<span onmouseout="hideTip(event, 'fs19', 35)" onmouseover="showTip(event, 'fs19', 35)" class="i">tree</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 36)" onmouseover="showTip(event, 'fs8', 36)" class="t">QuadNode</span>) (<span onmouseout="hideTip(event, 'fs23', 37)" onmouseover="showTip(event, 'fs23', 37)" class="i">elementBounds</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 38)" onmouseover="showTip(event, 'fs5', 38)" class="t">Rectangle</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 39)" onmouseover="showTip(event, 'fs8', 39)" class="t">QuadNode</span> <span class="o">=</span> 
        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs24', 40)" onmouseover="showTip(event, 'fs24', 40)" class="f">contrainingRec</span> <span onmouseout="hideTip(event, 'fs25', 41)" onmouseover="showTip(event, 'fs25', 41)" class="i">currentNode</span> <span class="o">=</span> 
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs25', 42)" onmouseover="showTip(event, 'fs25', 42)" class="i">currentNode</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 43)" onmouseover="showTip(event, 'fs26', 43)" class="i">SubNodes</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs27', 44)" onmouseover="showTip(event, 'fs27', 44)" class="p">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 45)" onmouseover="showTip(event, 'fs25', 45)" class="i">currentNode</span>
            | <span onmouseout="hideTip(event, 'fs28', 46)" onmouseover="showTip(event, 'fs28', 46)" class="p">Some</span> (<span onmouseout="hideTip(event, 'fs29', 47)" onmouseover="showTip(event, 'fs29', 47)" class="i">subTree</span>) <span class="k">-&gt;</span> 
                [ <span onmouseout="hideTip(event, 'fs29', 48)" onmouseover="showTip(event, 'fs29', 48)" class="i">subTree</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 49)" onmouseover="showTip(event, 'fs9', 49)" class="i">NE</span>; <span onmouseout="hideTip(event, 'fs29', 50)" onmouseover="showTip(event, 'fs29', 50)" class="i">subTree</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 51)" onmouseover="showTip(event, 'fs7', 51)" class="i">NW</span>; <span onmouseout="hideTip(event, 'fs29', 52)" onmouseover="showTip(event, 'fs29', 52)" class="i">subTree</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 53)" onmouseover="showTip(event, 'fs10', 53)" class="i">SE</span>; <span onmouseout="hideTip(event, 'fs29', 54)" onmouseover="showTip(event, 'fs29', 54)" class="i">subTree</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 55)" onmouseover="showTip(event, 'fs11', 55)" class="i">SW</span> ]
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs14', 56)" onmouseover="showTip(event, 'fs14', 56)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 57)" onmouseover="showTip(event, 'fs30', 57)" class="f">filter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs31', 58)" onmouseover="showTip(event, 'fs31', 58)" class="i">n</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 59)" onmouseover="showTip(event, 'fs31', 59)" class="i">n</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 60)" onmouseover="showTip(event, 'fs12', 60)" class="i">Bounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 61)" onmouseover="showTip(event, 'fs21', 61)" class="f">Contains</span> <span onmouseout="hideTip(event, 'fs23', 62)" onmouseover="showTip(event, 'fs23', 62)" class="i">elementBounds</span>)
                <span class="o">|&gt;</span> <span class="k">function</span> 
                   | [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 63)" onmouseover="showTip(event, 'fs25', 63)" class="i">currentNode</span>
                   | <span onmouseout="hideTip(event, 'fs32', 64)" onmouseover="showTip(event, 'fs32', 64)" class="i">head</span> <span class="o">::</span> [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs32', 65)" onmouseover="showTip(event, 'fs32', 65)" class="i">head</span>
                   | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 66)" onmouseover="showTip(event, 'fs25', 66)" class="i">currentNode</span>
        <span onmouseout="hideTip(event, 'fs24', 67)" onmouseover="showTip(event, 'fs24', 67)" class="f">contrainingRec</span> <span onmouseout="hideTip(event, 'fs19', 68)" onmouseover="showTip(event, 'fs19', 68)" class="i">tree</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 69)" onmouseover="showTip(event, 'fs33', 69)" class="f">add</span> (<span onmouseout="hideTip(event, 'fs19', 70)" onmouseover="showTip(event, 'fs19', 70)" class="i">tree</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 71)" onmouseover="showTip(event, 'fs8', 71)" class="t">QuadNode</span>) (<span onmouseout="hideTip(event, 'fs34', 72)" onmouseover="showTip(event, 'fs34', 72)" class="i">element</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 73)" onmouseover="showTip(event, 'fs3', 73)" class="t">IQuadable</span>) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 74)" onmouseover="showTip(event, 'fs35', 74)" class="i">target</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 75)" onmouseover="showTip(event, 'fs22', 75)" class="f">getConstrainingNode</span> <span onmouseout="hideTip(event, 'fs19', 76)" onmouseover="showTip(event, 'fs19', 76)" class="i">tree</span> <span onmouseout="hideTip(event, 'fs34', 77)" onmouseover="showTip(event, 'fs34', 77)" class="i">element</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 78)" onmouseover="showTip(event, 'fs36', 78)" class="i">Bounds</span>
        <span onmouseout="hideTip(event, 'fs35', 79)" onmouseover="showTip(event, 'fs35', 79)" class="i">target</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 80)" onmouseover="showTip(event, 'fs13', 80)" class="v">Contents</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs34', 81)" onmouseover="showTip(event, 'fs34', 81)" class="i">element</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs35', 82)" onmouseover="showTip(event, 'fs35', 82)" class="i">target</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 83)" onmouseover="showTip(event, 'fs13', 83)" class="v">Contents</span>
        <span onmouseout="hideTip(event, 'fs19', 84)" onmouseover="showTip(event, 'fs19', 84)" class="i">tree</span>
             
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 85)" onmouseover="showTip(event, 'fs37', 85)" class="f">init</span> (<span onmouseout="hideTip(event, 'fs38', 86)" onmouseover="showTip(event, 'fs38', 86)" class="i">elements</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 87)" onmouseover="showTip(event, 'fs3', 87)" class="t">IQuadable</span> <span onmouseout="hideTip(event, 'fs39', 88)" onmouseover="showTip(event, 'fs39', 88)" class="t">list</span>) (<span onmouseout="hideTip(event, 'fs40', 89)" onmouseover="showTip(event, 'fs40', 89)" class="i">depth</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs41', 90)" onmouseover="showTip(event, 'fs41', 90)" class="t">int</span>) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 91)" onmouseover="showTip(event, 'fs42', 91)" class="i">maxBounds</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 92)" onmouseover="showTip(event, 'fs38', 92)" class="i">elements</span>
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs14', 93)" onmouseover="showTip(event, 'fs14', 93)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 94)" onmouseover="showTip(event, 'fs43', 94)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs44', 95)" onmouseover="showTip(event, 'fs44', 95)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs44', 96)" onmouseover="showTip(event, 'fs44', 96)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 97)" onmouseover="showTip(event, 'fs36', 97)" class="i">Bounds</span>) 
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs14', 98)" onmouseover="showTip(event, 'fs14', 98)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 99)" onmouseover="showTip(event, 'fs45', 99)" class="f">fold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs46', 100)" onmouseover="showTip(event, 'fs46', 100)" class="i">a</span> <span onmouseout="hideTip(event, 'fs47', 101)" onmouseover="showTip(event, 'fs47', 101)" class="i">r</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 102)" onmouseover="showTip(event, 'fs5', 102)" class="t">Rectangle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 103)" onmouseover="showTip(event, 'fs48', 103)" class="f">Union</span>(<span onmouseout="hideTip(event, 'fs46', 104)" onmouseover="showTip(event, 'fs46', 104)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs47', 105)" onmouseover="showTip(event, 'fs47', 105)" class="i">r</span>)) <span onmouseout="hideTip(event, 'fs5', 106)" onmouseover="showTip(event, 'fs5', 106)" class="t">Rectangle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 107)" onmouseover="showTip(event, 'fs49', 107)" class="i">Empty</span>
        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs50', 108)" onmouseover="showTip(event, 'fs50', 108)" class="f">buildTree</span> <span onmouseout="hideTip(event, 'fs51', 109)" onmouseover="showTip(event, 'fs51', 109)" class="i">nodeBounds</span> <span class="o">=</span> 
            <span class="k">function</span>
            | <span class="n">0</span> <span class="k">-&gt;</span> { <span class="i">Bounds</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 110)" onmouseover="showTip(event, 'fs51', 110)" class="i">nodeBounds</span>; <span class="v">Contents</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 111)" onmouseover="showTip(event, 'fs14', 111)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 112)" onmouseover="showTip(event, 'fs52', 112)" class="i">empty</span>; <span onmouseout="hideTip(event, 'fs6', 113)" onmouseover="showTip(event, 'fs6', 113)" class="i">SubNodes</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 114)" onmouseover="showTip(event, 'fs27', 114)" class="p">None</span> }
            | <span onmouseout="hideTip(event, 'fs53', 115)" onmouseover="showTip(event, 'fs53', 115)" class="i">curDepth</span> <span class="k">-&gt;</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 116)" onmouseover="showTip(event, 'fs54', 116)" class="i">midPoint</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 117)" onmouseover="showTip(event, 'fs55', 117)" class="t">Point</span>(<span onmouseout="hideTip(event, 'fs51', 118)" onmouseover="showTip(event, 'fs51', 118)" class="i">nodeBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 119)" onmouseover="showTip(event, 'fs56', 119)" class="i">Width</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs51', 120)" onmouseover="showTip(event, 'fs51', 120)" class="i">nodeBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 121)" onmouseover="showTip(event, 'fs57', 121)" class="i">X</span>, <span onmouseout="hideTip(event, 'fs51', 122)" onmouseover="showTip(event, 'fs51', 122)" class="i">nodeBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 123)" onmouseover="showTip(event, 'fs58', 123)" class="i">Height</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs51', 124)" onmouseover="showTip(event, 'fs51', 124)" class="i">nodeBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 125)" onmouseover="showTip(event, 'fs59', 125)" class="i">Y</span>) <span class="k">in</span>
                            { <span class="i">Bounds</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 126)" onmouseover="showTip(event, 'fs51', 126)" class="i">nodeBounds</span>; 
                              <span class="v">Contents</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 127)" onmouseover="showTip(event, 'fs14', 127)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 128)" onmouseover="showTip(event, 'fs52', 128)" class="i">empty</span>;
                              <span onmouseout="hideTip(event, 'fs6', 129)" onmouseover="showTip(event, 'fs6', 129)" class="i">SubNodes</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 130)" onmouseover="showTip(event, 'fs28', 130)" class="p">Some</span> { <span class="i">NW</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs50', 131)" onmouseover="showTip(event, 'fs50', 131)" class="f">buildTree</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs5', 132)" onmouseover="showTip(event, 'fs5', 132)" class="t">Rectangle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 133)" onmouseover="showTip(event, 'fs60', 133)" class="f">FromLTRB</span>(<span onmouseout="hideTip(event, 'fs51', 134)" onmouseover="showTip(event, 'fs51', 134)" class="i">nodeBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 135)" onmouseover="showTip(event, 'fs57', 135)" class="i">X</span>, <span onmouseout="hideTip(event, 'fs51', 136)" onmouseover="showTip(event, 'fs51', 136)" class="i">nodeBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 137)" onmouseover="showTip(event, 'fs59', 137)" class="i">Y</span>, <span onmouseout="hideTip(event, 'fs54', 138)" onmouseover="showTip(event, 'fs54', 138)" class="i">midPoint</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 139)" onmouseover="showTip(event, 'fs61', 139)" class="i">X</span>, <span onmouseout="hideTip(event, 'fs54', 140)" onmouseover="showTip(event, 'fs54', 140)" class="i">midPoint</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 141)" onmouseover="showTip(event, 'fs62', 141)" class="i">Y</span>) <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs53', 142)" onmouseover="showTip(event, 'fs53', 142)" class="i">curDepth</span> <span class="o">-</span> <span class="n">1</span>;
                                                <span class="i">SW</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs50', 143)" onmouseover="showTip(event, 'fs50', 143)" class="f">buildTree</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs5', 144)" onmouseover="showTip(event, 'fs5', 144)" class="t">Rectangle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 145)" onmouseover="showTip(event, 'fs60', 145)" class="f">FromLTRB</span>(<span onmouseout="hideTip(event, 'fs51', 146)" onmouseover="showTip(event, 'fs51', 146)" class="i">nodeBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 147)" onmouseover="showTip(event, 'fs57', 147)" class="i">X</span>, <span onmouseout="hideTip(event, 'fs54', 148)" onmouseover="showTip(event, 'fs54', 148)" class="i">midPoint</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 149)" onmouseover="showTip(event, 'fs62', 149)" class="i">Y</span>, <span onmouseout="hideTip(event, 'fs54', 150)" onmouseover="showTip(event, 'fs54', 150)" class="i">midPoint</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 151)" onmouseover="showTip(event, 'fs61', 151)" class="i">X</span>, <span onmouseout="hideTip(event, 'fs51', 152)" onmouseover="showTip(event, 'fs51', 152)" class="i">nodeBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 153)" onmouseover="showTip(event, 'fs59', 153)" class="i">Y</span>) <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs53', 154)" onmouseover="showTip(event, 'fs53', 154)" class="i">curDepth</span> <span class="o">-</span> <span class="n">1</span>;
                                                <span class="i">NE</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs50', 155)" onmouseover="showTip(event, 'fs50', 155)" class="f">buildTree</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs5', 156)" onmouseover="showTip(event, 'fs5', 156)" class="t">Rectangle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 157)" onmouseover="showTip(event, 'fs60', 157)" class="f">FromLTRB</span>(<span onmouseout="hideTip(event, 'fs54', 158)" onmouseover="showTip(event, 'fs54', 158)" class="i">midPoint</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 159)" onmouseover="showTip(event, 'fs61', 159)" class="i">X</span>, <span onmouseout="hideTip(event, 'fs51', 160)" onmouseover="showTip(event, 'fs51', 160)" class="i">nodeBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 161)" onmouseover="showTip(event, 'fs59', 161)" class="i">Y</span>, <span onmouseout="hideTip(event, 'fs51', 162)" onmouseover="showTip(event, 'fs51', 162)" class="i">nodeBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 163)" onmouseover="showTip(event, 'fs57', 163)" class="i">X</span>, <span onmouseout="hideTip(event, 'fs54', 164)" onmouseover="showTip(event, 'fs54', 164)" class="i">midPoint</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 165)" onmouseover="showTip(event, 'fs62', 165)" class="i">Y</span>) <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs53', 166)" onmouseover="showTip(event, 'fs53', 166)" class="i">curDepth</span> <span class="o">-</span> <span class="n">1</span>;
                                                <span class="i">SE</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs50', 167)" onmouseover="showTip(event, 'fs50', 167)" class="f">buildTree</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs5', 168)" onmouseover="showTip(event, 'fs5', 168)" class="t">Rectangle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 169)" onmouseover="showTip(event, 'fs60', 169)" class="f">FromLTRB</span>(<span onmouseout="hideTip(event, 'fs54', 170)" onmouseover="showTip(event, 'fs54', 170)" class="i">midPoint</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 171)" onmouseover="showTip(event, 'fs61', 171)" class="i">X</span>, <span onmouseout="hideTip(event, 'fs54', 172)" onmouseover="showTip(event, 'fs54', 172)" class="i">midPoint</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 173)" onmouseover="showTip(event, 'fs62', 173)" class="i">Y</span>, <span onmouseout="hideTip(event, 'fs51', 174)" onmouseover="showTip(event, 'fs51', 174)" class="i">nodeBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 175)" onmouseover="showTip(event, 'fs57', 175)" class="i">X</span>, <span onmouseout="hideTip(event, 'fs51', 176)" onmouseover="showTip(event, 'fs51', 176)" class="i">nodeBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 177)" onmouseover="showTip(event, 'fs59', 177)" class="i">Y</span>) <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs53', 178)" onmouseover="showTip(event, 'fs53', 178)" class="i">curDepth</span> <span class="o">-</span> <span class="n">1</span>; } }
 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 179)" onmouseover="showTip(event, 'fs63', 179)" class="i">emptyTree</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs50', 180)" onmouseover="showTip(event, 'fs50', 180)" class="f">buildTree</span> <span onmouseout="hideTip(event, 'fs42', 181)" onmouseover="showTip(event, 'fs42', 181)" class="i">maxBounds</span> <span onmouseout="hideTip(event, 'fs40', 182)" onmouseover="showTip(event, 'fs40', 182)" class="i">depth</span>
        <span onmouseout="hideTip(event, 'fs14', 183)" onmouseover="showTip(event, 'fs14', 183)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 184)" onmouseover="showTip(event, 'fs45', 184)" class="f">fold</span> (<span onmouseout="hideTip(event, 'fs33', 185)" onmouseover="showTip(event, 'fs33', 185)" class="f">add</span>) <span onmouseout="hideTip(event, 'fs63', 186)" onmouseover="showTip(event, 'fs63', 186)" class="i">emptyTree</span> <span onmouseout="hideTip(event, 'fs38', 187)" onmouseover="showTip(event, 'fs38', 187)" class="i">elements</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Drawing</div>
<div class="tip" id="fs3">type IQuadable =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member Bounds : Rectangle<br />&#160;&#160;end<br /><br />Full name: Script.IQuadable</div>
<div class="tip" id="fs4">abstract member IQuadable.Bounds : Rectangle<br /><br />Full name: Script.IQuadable.Bounds</div>
<div class="tip" id="fs5">Multiple items<br />type Rectangle =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : location:Point * size:Size -&gt; Rectangle + 1 overload<br />&#160;&#160;&#160;&#160;member Bottom : int<br />&#160;&#160;&#160;&#160;member Contains : pt:Point -&gt; bool + 2 overloads<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member Height : int with get, set<br />&#160;&#160;&#160;&#160;member Inflate : size:Size -&gt; unit + 1 overload<br />&#160;&#160;&#160;&#160;member Intersect : rect:Rectangle -&gt; unit<br />&#160;&#160;&#160;&#160;member IntersectsWith : rect:Rectangle -&gt; bool<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Drawing.Rectangle<br /><br />--------------------<br />Rectangle()<br />Rectangle(location: Point, size: Size) : unit<br />Rectangle(x: int, y: int, width: int, height: int) : unit</div>
<div class="tip" id="fs6">type SubNodes =<br />&#160;&#160;{NW: QuadNode;<br />&#160;&#160;&#160;NE: QuadNode;<br />&#160;&#160;&#160;SE: QuadNode;<br />&#160;&#160;&#160;SW: QuadNode;}<br /><br />Full name: Script.SubNodes</div>
<div class="tip" id="fs7">SubNodes.NW: QuadNode</div>
<div class="tip" id="fs8">type QuadNode =<br />&#160;&#160;{Bounds: Rectangle;<br />&#160;&#160;&#160;mutable Contents: List&lt;IQuadable&gt;;<br />&#160;&#160;&#160;SubNodes: Option&lt;SubNodes&gt;;}<br /><br />Full name: Script.QuadNode</div>
<div class="tip" id="fs9">SubNodes.NE: QuadNode</div>
<div class="tip" id="fs10">SubNodes.SE: QuadNode</div>
<div class="tip" id="fs11">SubNodes.SW: QuadNode</div>
<div class="tip" id="fs12">QuadNode.Bounds: Rectangle</div>
<div class="tip" id="fs13">QuadNode.Contents: List&lt;IQuadable&gt;</div>
<div class="tip" id="fs14">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs15">Multiple items<br />QuadNode.SubNodes: Option&lt;SubNodes&gt;<br /><br />--------------------<br />type SubNodes =<br />&#160;&#160;{NW: QuadNode;<br />&#160;&#160;&#160;NE: QuadNode;<br />&#160;&#160;&#160;SE: QuadNode;<br />&#160;&#160;&#160;SW: QuadNode;}<br /><br />Full name: Script.SubNodes</div>
<div class="tip" id="fs16">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs17">module QuadTree<br /><br />from Script</div>
<div class="tip" id="fs18">val contains : tree:QuadNode -&gt; bounds:Rectangle -&gt; bool<br /><br />Full name: Script.QuadTree.contains</div>
<div class="tip" id="fs19">val tree : QuadNode</div>
<div class="tip" id="fs20">val bounds : Rectangle</div>
<div class="tip" id="fs21">Rectangle.Contains(rect: Rectangle) : bool<br />Rectangle.Contains(pt: Point) : bool<br />Rectangle.Contains(x: int, y: int) : bool</div>
<div class="tip" id="fs22">val getConstrainingNode : tree:QuadNode -&gt; elementBounds:Rectangle -&gt; QuadNode<br /><br />Full name: Script.QuadTree.getConstrainingNode</div>
<div class="tip" id="fs23">val elementBounds : Rectangle</div>
<div class="tip" id="fs24">val contrainingRec : (QuadNode -&gt; QuadNode)</div>
<div class="tip" id="fs25">val currentNode : QuadNode</div>
<div class="tip" id="fs26">QuadNode.SubNodes: Option&lt;SubNodes&gt;</div>
<div class="tip" id="fs27">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs28">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs29">val subTree : SubNodes</div>
<div class="tip" id="fs30">val filter : predicate:(&#39;T -&gt; bool) -&gt; list:&#39;T list -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.filter</div>
<div class="tip" id="fs31">val n : QuadNode</div>
<div class="tip" id="fs32">val head : QuadNode</div>
<div class="tip" id="fs33">val add : tree:QuadNode -&gt; element:IQuadable -&gt; QuadNode<br /><br />Full name: Script.QuadTree.add</div>
<div class="tip" id="fs34">val element : IQuadable</div>
<div class="tip" id="fs35">val target : QuadNode</div>
<div class="tip" id="fs36">property IQuadable.Bounds: Rectangle</div>
<div class="tip" id="fs37">val init : elements:IQuadable list -&gt; depth:int -&gt; QuadNode<br /><br />Full name: Script.QuadTree.init</div>
<div class="tip" id="fs38">val elements : IQuadable list</div>
<div class="tip" id="fs39">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs40">val depth : int</div>
<div class="tip" id="fs41">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs42">val maxBounds : Rectangle</div>
<div class="tip" id="fs43">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs44">val x : IQuadable</div>
<div class="tip" id="fs45">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; list:&#39;T list -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.List.fold</div>
<div class="tip" id="fs46">val a : Rectangle</div>
<div class="tip" id="fs47">val r : Rectangle</div>
<div class="tip" id="fs48">Rectangle.Union(a: Rectangle, b: Rectangle) : Rectangle</div>
<div class="tip" id="fs49">field Rectangle.Empty</div>
<div class="tip" id="fs50">val buildTree : (Rectangle -&gt; int -&gt; QuadNode)</div>
<div class="tip" id="fs51">val nodeBounds : Rectangle</div>
<div class="tip" id="fs52">val empty&lt;&#39;T&gt; : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.empty</div>
<div class="tip" id="fs53">val curDepth : int</div>
<div class="tip" id="fs54">val midPoint : Point</div>
<div class="tip" id="fs55">Multiple items<br />type Point =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : sz:Size -&gt; Point + 2 overloads<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;member Offset : p:Point -&gt; unit + 1 overload<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;&#160;&#160;member X : int with get, set<br />&#160;&#160;&#160;&#160;member Y : int with get, set<br />&#160;&#160;&#160;&#160;static val Empty : Point<br />&#160;&#160;&#160;&#160;static member Add : pt:Point * sz:Size -&gt; Point<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Drawing.Point<br /><br />--------------------<br />Point()<br />Point(sz: Size) : unit<br />Point(dw: int) : unit<br />Point(x: int, y: int) : unit</div>
<div class="tip" id="fs56">property Rectangle.Width: int</div>
<div class="tip" id="fs57">property Rectangle.X: int</div>
<div class="tip" id="fs58">property Rectangle.Height: int</div>
<div class="tip" id="fs59">property Rectangle.Y: int</div>
<div class="tip" id="fs60">Rectangle.FromLTRB(left: int, top: int, right: int, bottom: int) : Rectangle</div>
<div class="tip" id="fs61">property Point.X: int</div>
<div class="tip" id="fs62">property Point.Y: int</div>
<div class="tip" id="fs63">val emptyTree : QuadNode</div>

