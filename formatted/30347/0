<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
<span class="l">6: </span>
<span class="l">7: </span>
<span class="l">8: </span>
<span class="l">9: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Data</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 4)" onmouseover="showTip(event, 'fs2', 4)" class="i">Data</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">JsonExtensions</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="t">animalsTemplate</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="t">JsonProvider</span><span class="o">&lt;</span><span class="s">&quot;&quot;&quot;{ &quot;dogs&quot; : [{ &quot;category&quot; : &quot;dogtype&quot;, &quot;name&quot; : &quot;dogname&quot; }] }&quot;&quot;&quot;</span>, <span class="i">RootName</span><span class="o">=</span><span class="s">&quot;root&quot;</span><span class="o">&gt;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">chihuaha</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 9)" onmouseover="showTip(event, 'fs4', 9)" class="t">animalsTemplate</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="t">Dog</span>(<span class="i">category</span> <span class="o">=</span> <span class="s">&quot;Companion dogs&quot;</span>, <span class="i">name</span> <span class="o">=</span> <span class="s">&quot;Chihuahua&quot;</span> )
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">dogsList</span> <span class="o">=</span> [<span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="i">chihuaha</span>, <span onmouseout="hideTip(event, 'fs4', 13)" onmouseover="showTip(event, 'fs4', 13)" class="t">animalsTemplate</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 14)" onmouseover="showTip(event, 'fs7', 14)" class="t">Dog</span>(<span class="i">category</span> <span class="o">=</span> <span class="s">&quot;Hounds&quot;</span>, <span class="i">name</span> <span class="o">=</span> <span class="s">&quot;Foxhound&quot;</span> )]

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="i">animals</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 16)" onmouseover="showTip(event, 'fs4', 16)" class="t">animalsTemplate</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 17)" onmouseover="showTip(event, 'fs10', 17)" class="t">Root</span>(<span class="i">dogs</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs8', 18)" onmouseover="showTip(event, 'fs8', 18)" class="i">dogsList</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs11', 19)" onmouseover="showTip(event, 'fs11', 19)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 20)" onmouseover="showTip(event, 'fs12', 20)" class="f">ofList</span>))
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />namespace FSharp<br /><br />--------------------<br />namespace Microsoft.FSharp</div>
<div class="tip" id="fs2">Multiple items<br />namespace FSharp.Data<br /><br />--------------------<br />namespace Microsoft.FSharp.Data</div>
<div class="tip" id="fs3">Multiple items<br />module JsonExtensions<br /><br />from FSharp.Data<br /><br />--------------------<br />type JsonExtensions =<br />&#160;&#160;static member AsArray : x:JsonValue -&gt; JsonValue []<br />&#160;&#160;static member AsBoolean : x:JsonValue -&gt; bool<br />&#160;&#160;static member AsDateTime : x:JsonValue * ?cultureInfo:CultureInfo -&gt; DateTime<br />&#160;&#160;static member AsDecimal : x:JsonValue * ?cultureInfo:CultureInfo -&gt; decimal<br />&#160;&#160;static member AsFloat : x:JsonValue * ?cultureInfo:CultureInfo * ?missingValues:string [] -&gt; float<br />&#160;&#160;static member AsGuid : x:JsonValue -&gt; Guid<br />&#160;&#160;static member AsInteger : x:JsonValue * ?cultureInfo:CultureInfo -&gt; int<br />&#160;&#160;static member AsInteger64 : x:JsonValue * ?cultureInfo:CultureInfo -&gt; int64<br />&#160;&#160;static member AsString : x:JsonValue * ?cultureInfo:CultureInfo -&gt; string<br />&#160;&#160;static member GetEnumerator : x:JsonValue -&gt; IEnumerator<br />&#160;&#160;...<br /><br />Full name: FSharp.Data.JsonExtensions</div>
<div class="tip" id="fs4">type animalsTemplate = JsonProvider&lt;...&gt;<br /><br />Full name: Script.animalsTemplate</div>
<div class="tip" id="fs5">type JsonProvider<br /><br />Full name: FSharp.Data.JsonProvider<br /><em><br /><br />&lt;summary&gt;Typed representation of a JSON document.&lt;/summary&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;Sample&#39;&gt;Location of a JSON sample file or a string containing a sample JSON document.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;SampleIsList&#39;&gt;If true, sample should be a list of individual samples for the inference.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;RootName&#39;&gt;The name to be used to the root type. Defaults to `Root`.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;Culture&#39;&gt;The culture used for parsing numbers and dates. Defaults to the invariant culture.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;Encoding&#39;&gt;The encoding used to read the sample. You can specify either the character set name or the codepage number. Defaults to UTF8 for files, and to ISO-8859-1 the for HTTP requests, unless `charset` is specified in the `Content-Type` response header.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;ResolutionFolder&#39;&gt;A directory that is used when resolving relative file references (at design time and in hosted execution).&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;EmbeddedResource&#39;&gt;When specified, the type provider first attempts to load the sample from the specified resource <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(e.g. &#39;MyCompany.MyAssembly, resource_name.json&#39;). This is useful when exposing types generated by the type provider.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;InferTypesFromValues&#39;&gt;If true, turns on additional type inference from values. <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(e.g. type inference infers string values such as &quot;123&quot; as ints and values constrained to 0 and 1 as booleans.)&lt;/param&gt;</em></div>
<div class="tip" id="fs6">val chihuaha : JsonProvider&lt;...&gt;.Dog<br /><br />Full name: Script.chihuaha</div>
<div class="tip" id="fs7">type Dog =<br />&#160;&#160;inherit IJsonDocument<br />&#160;&#160;new : category: string * name: string -&gt; Dog + 1 overload<br />&#160;&#160;member Category : string<br />&#160;&#160;member JsonValue : JsonValue<br />&#160;&#160;member Name : string<br /><br />Full name: FSharp.Data.JsonProvider,Sample=&quot;{ \&quot;dogs\&quot; : [{ \&quot;category\&quot; : \&quot;dogtype\&quot;, \&quot;name\&quot; : \&quot;dogname\&quot; }] }&quot;,RootName=&quot;root&quot;.Dog</div>
<div class="tip" id="fs8">val dogsList : (JsonProvider&lt;...&gt;.Dog * JsonProvider&lt;...&gt;.Dog) list<br /><br />Full name: Script.dogsList</div>
<div class="tip" id="fs9">val animals : JsonProvider&lt;...&gt;.Root<br /><br />Full name: Script.animals</div>
<div class="tip" id="fs10">type Root =<br />&#160;&#160;inherit IJsonDocument<br />&#160;&#160;new : dogs: Dog [] -&gt; Root + 1 overload<br />&#160;&#160;member Dogs : Dog []<br />&#160;&#160;member JsonValue : JsonValue<br /><br />Full name: FSharp.Data.JsonProvider,Sample=&quot;{ \&quot;dogs\&quot; : [{ \&quot;category\&quot; : \&quot;dogtype\&quot;, \&quot;name\&quot; : \&quot;dogname\&quot; }] }&quot;,RootName=&quot;root&quot;.Root</div>
<div class="tip" id="fs11">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs12">val ofList : list:&#39;T list -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.ofList</div>

