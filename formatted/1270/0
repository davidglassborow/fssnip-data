<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">IO</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">Text</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">RegularExpressions</span>

<span class="c">// set paths here</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">dir</span> <span class="o">=</span> <span class="s">@&quot;..\dev\FSharpScripts\fsharp_comunity_code_sprint\&quot;</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">simple_notes</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="i">dir</span> <span class="o">+</span> <span class="s">@&quot;RELEASE_NOTES_simple.md&quot;</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="i">complex_notes</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 11)" onmouseover="showTip(event, 'fs5', 11)" class="i">dir</span> <span class="o">+</span> <span class="s">@&quot;RELEASE_NOTES_complex.md&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="i">nugetRegex</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="t">Regex</span>(<span class="s">@&quot;([0-9]+.)+[0-9]+(-[a-zA-Z]+)?&quot;</span>)    <span class="c">// e.g: match &quot;4.1.22-beta&quot;</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="i">assemblyRegex</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="t">Regex</span>(<span class="s">@&quot;([0-9]+.)+[0-9]+&quot;</span>)              <span class="c">// e.g: match &quot;0.13.2&quot;</span>

<span class="c">/// Parse simple release notes sequence</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="f">parseSimpleReleaseNotes</span> (<span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="i">text</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="t">seq</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="t">string</span><span class="o">&gt;</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="i">lastLine</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="i">text</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 23)" onmouseover="showTip(event, 'fs17', 23)" class="f">last</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 24)" onmouseover="showTip(event, 'fs18', 24)" class="i">assemblyVersion</span>, <span onmouseout="hideTip(event, 'fs19', 25)" onmouseover="showTip(event, 'fs19', 25)" class="i">nugetVersion</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 26)" onmouseover="showTip(event, 'fs10', 26)" class="i">assemblyRegex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 27)" onmouseover="showTip(event, 'fs20', 27)" class="f">Match</span>(<span onmouseout="hideTip(event, 'fs15', 28)" onmouseover="showTip(event, 'fs15', 28)" class="i">lastLine</span>), <span onmouseout="hideTip(event, 'fs8', 29)" onmouseover="showTip(event, 'fs8', 29)" class="i">nugetRegex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 30)" onmouseover="showTip(event, 'fs20', 30)" class="f">Match</span>(<span onmouseout="hideTip(event, 'fs15', 31)" onmouseover="showTip(event, 'fs15', 31)" class="i">lastLine</span>)
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs21', 32)" onmouseover="showTip(event, 'fs21', 32)" class="f">not</span> <span onmouseout="hideTip(event, 'fs18', 33)" onmouseover="showTip(event, 'fs18', 33)" class="i">assemblyVersion</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 34)" onmouseover="showTip(event, 'fs22', 34)" class="i">Success</span> <span class="k">then</span> 
        <span onmouseout="hideTip(event, 'fs23', 35)" onmouseover="showTip(event, 'fs23', 35)" class="f">failwith</span> <span class="s">&quot;Unable to parse valid Assembly version from release notes.&quot;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 36)" onmouseover="showTip(event, 'fs24', 36)" class="i">notes</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 37)" onmouseover="showTip(event, 'fs15', 37)" class="i">lastLine</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 38)" onmouseover="showTip(event, 'fs25', 38)" class="f">Substring</span>(<span onmouseout="hideTip(event, 'fs19', 39)" onmouseover="showTip(event, 'fs19', 39)" class="i">nugetVersion</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 40)" onmouseover="showTip(event, 'fs26', 40)" class="i">Index</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="i">nugetVersion</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 42)" onmouseover="showTip(event, 'fs27', 42)" class="i">Length</span>)<span class="o">.</span><span class="f">Trim</span>([|<span class="s">&#39; &#39;</span>; <span class="s">&#39;-&#39;</span>|]);
    <span onmouseout="hideTip(event, 'fs18', 43)" onmouseover="showTip(event, 'fs18', 43)" class="i">assemblyVersion</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 44)" onmouseover="showTip(event, 'fs28', 44)" class="i">Value</span>, <span onmouseout="hideTip(event, 'fs19', 45)" onmouseover="showTip(event, 'fs19', 45)" class="i">nugetVersion</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 46)" onmouseover="showTip(event, 'fs28', 46)" class="i">Value</span>, [<span onmouseout="hideTip(event, 'fs24', 47)" onmouseover="showTip(event, 'fs24', 47)" class="i">notes</span>]

<span class="c">/// Parse &quot;complex&quot; release notes text sequence</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 48)" onmouseover="showTip(event, 'fs29', 48)" class="f">parseComplexReleaseNotes</span> (<span onmouseout="hideTip(event, 'fs12', 49)" onmouseover="showTip(event, 'fs12', 49)" class="i">text</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs13', 50)" onmouseover="showTip(event, 'fs13', 50)" class="t">seq</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs14', 51)" onmouseover="showTip(event, 'fs14', 51)" class="t">string</span><span class="o">&gt;</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 52)" onmouseover="showTip(event, 'fs30', 52)" class="i">indexOfLastBlock</span> <span class="o">=</span> <span class="c">// index of last block that begings with {#}+</span>
        <span onmouseout="hideTip(event, 'fs12', 53)" onmouseover="showTip(event, 'fs12', 53)" class="i">text</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 54)" onmouseover="showTip(event, 'fs16', 54)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 55)" onmouseover="showTip(event, 'fs31', 55)" class="f">fold</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs32', 56)" onmouseover="showTip(event, 'fs32', 56)" class="i">index</span>, <span onmouseout="hideTip(event, 'fs33', 57)" onmouseover="showTip(event, 'fs33', 57)" class="i">ctr</span>) <span onmouseout="hideTip(event, 'fs34', 58)" onmouseover="showTip(event, 'fs34', 58)" class="i">str</span> <span class="k">-&gt;</span>
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs35', 59)" onmouseover="showTip(event, 'fs35', 59)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 60)" onmouseover="showTip(event, 'fs36', 60)" class="f">IsNullOrEmpty</span>(<span onmouseout="hideTip(event, 'fs34', 61)" onmouseover="showTip(event, 'fs34', 61)" class="i">str</span>) <span class="k">then</span> (<span onmouseout="hideTip(event, 'fs32', 62)" onmouseover="showTip(event, 'fs32', 62)" class="i">index</span>, <span onmouseout="hideTip(event, 'fs33', 63)" onmouseover="showTip(event, 'fs33', 63)" class="i">ctr</span> <span class="o">+</span> <span class="n">1</span>)
            <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs34', 64)" onmouseover="showTip(event, 'fs34', 64)" class="i">str</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 65)" onmouseover="showTip(event, 'fs37', 65)" class="f">Trim</span>()<span class="o">.</span>[<span class="n">0</span>] <span class="o">=</span> <span class="s">&#39;#&#39;</span> <span class="k">then</span> (<span onmouseout="hideTip(event, 'fs32', 66)" onmouseover="showTip(event, 'fs32', 66)" class="i">index</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs33', 67)" onmouseover="showTip(event, 'fs33', 67)" class="i">ctr</span>, <span class="n">1</span>) 
            <span class="k">else</span> (<span onmouseout="hideTip(event, 'fs32', 68)" onmouseover="showTip(event, 'fs32', 68)" class="i">index</span>, <span onmouseout="hideTip(event, 'fs33', 69)" onmouseover="showTip(event, 'fs33', 69)" class="i">ctr</span> <span class="o">+</span> <span class="n">1</span>)) (<span class="n">0</span>, <span class="n">0</span>)
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs38', 70)" onmouseover="showTip(event, 'fs38', 70)" class="f">fst</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 71)" onmouseover="showTip(event, 'fs39', 71)" class="i">lastBlock</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 72)" onmouseover="showTip(event, 'fs12', 72)" class="i">text</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 73)" onmouseover="showTip(event, 'fs16', 73)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 74)" onmouseover="showTip(event, 'fs40', 74)" class="f">skip</span> <span onmouseout="hideTip(event, 'fs30', 75)" onmouseover="showTip(event, 'fs30', 75)" class="i">indexOfLastBlock</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 76)" onmouseover="showTip(event, 'fs41', 76)" class="i">blockHeader</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 77)" onmouseover="showTip(event, 'fs39', 77)" class="i">lastBlock</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 78)" onmouseover="showTip(event, 'fs16', 78)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 79)" onmouseover="showTip(event, 'fs42', 79)" class="f">head</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs43', 80)" onmouseover="showTip(event, 'fs43', 80)" class="i">notes</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs39', 81)" onmouseover="showTip(event, 'fs39', 81)" class="i">lastBlock</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 82)" onmouseover="showTip(event, 'fs16', 82)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 83)" onmouseover="showTip(event, 'fs40', 83)" class="f">skip</span> <span class="n">1</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 84)" onmouseover="showTip(event, 'fs16', 84)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 85)" onmouseover="showTip(event, 'fs44', 85)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs34', 86)" onmouseover="showTip(event, 'fs34', 86)" class="i">str</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs34', 87)" onmouseover="showTip(event, 'fs34', 87)" class="i">str</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 88)" onmouseover="showTip(event, 'fs37', 88)" class="f">Trim</span>([|<span class="s">&#39; &#39;</span>; <span class="s">&#39;*&#39;</span>|]))
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 89)" onmouseover="showTip(event, 'fs16', 89)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 90)" onmouseover="showTip(event, 'fs45', 90)" class="f">toList</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 91)" onmouseover="showTip(event, 'fs18', 91)" class="i">assemblyVersion</span>, <span onmouseout="hideTip(event, 'fs19', 92)" onmouseover="showTip(event, 'fs19', 92)" class="i">nugetVersion</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 93)" onmouseover="showTip(event, 'fs10', 93)" class="i">assemblyRegex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 94)" onmouseover="showTip(event, 'fs20', 94)" class="f">Match</span>(<span onmouseout="hideTip(event, 'fs41', 95)" onmouseover="showTip(event, 'fs41', 95)" class="i">blockHeader</span>), <span onmouseout="hideTip(event, 'fs8', 96)" onmouseover="showTip(event, 'fs8', 96)" class="i">nugetRegex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 97)" onmouseover="showTip(event, 'fs20', 97)" class="f">Match</span>(<span onmouseout="hideTip(event, 'fs41', 98)" onmouseover="showTip(event, 'fs41', 98)" class="i">blockHeader</span>)
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs21', 99)" onmouseover="showTip(event, 'fs21', 99)" class="f">not</span> <span onmouseout="hideTip(event, 'fs18', 100)" onmouseover="showTip(event, 'fs18', 100)" class="i">assemblyVersion</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 101)" onmouseover="showTip(event, 'fs22', 101)" class="i">Success</span> <span class="k">then</span>
        <span onmouseout="hideTip(event, 'fs23', 102)" onmouseover="showTip(event, 'fs23', 102)" class="f">failwith</span> <span class="s">&quot;Unable to parse valid Assembly version from release notes.&quot;</span>
    <span onmouseout="hideTip(event, 'fs18', 103)" onmouseover="showTip(event, 'fs18', 103)" class="i">assemblyVersion</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 104)" onmouseover="showTip(event, 'fs28', 104)" class="i">Value</span>, <span onmouseout="hideTip(event, 'fs19', 105)" onmouseover="showTip(event, 'fs19', 105)" class="i">nugetVersion</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 106)" onmouseover="showTip(event, 'fs28', 106)" class="i">Value</span>, <span onmouseout="hideTip(event, 'fs43', 107)" onmouseover="showTip(event, 'fs43', 107)" class="i">notes</span>
    

<span class="c">/// Parse a Release Notes File - Either simple or &quot;complex&quot; format</span>
<span class="c">/// See: https://github.com/fsharp/FAKE/issues/171</span>
<span class="c">/// &lt;param name=&quot;filePath&quot;&gt;The path to the release notes file&lt;/param&gt;</span>
<span class="c">/// &lt;returns&gt; (assembly_version, nuget_version, [release_notes]) &lt;/returns&gt;</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 108)" onmouseover="showTip(event, 'fs46', 108)" class="f">parseReleaseNotes</span> <span onmouseout="hideTip(event, 'fs47', 109)" onmouseover="showTip(event, 'fs47', 109)" class="i">filePath</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 110)" onmouseover="showTip(event, 'fs12', 110)" class="i">text</span> <span class="o">=</span> <span class="c">// read file and trim leading &amp; trailing blank lines</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 111)" onmouseover="showTip(event, 'fs48', 111)" class="i">data</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 112)" onmouseover="showTip(event, 'fs49', 112)" class="t">File</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 113)" onmouseover="showTip(event, 'fs50', 113)" class="f">ReadLines</span>(<span onmouseout="hideTip(event, 'fs47', 114)" onmouseover="showTip(event, 'fs47', 114)" class="i">filePath</span>) 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 115)" onmouseover="showTip(event, 'fs51', 115)" class="i">num_real_lines</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs48', 116)" onmouseover="showTip(event, 'fs48', 116)" class="i">data</span>
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 117)" onmouseover="showTip(event, 'fs16', 117)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 118)" onmouseover="showTip(event, 'fs31', 118)" class="f">fold</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs52', 119)" onmouseover="showTip(event, 'fs52', 119)" class="i">line_count</span>, <span onmouseout="hideTip(event, 'fs53', 120)" onmouseover="showTip(event, 'fs53', 120)" class="i">blank_count</span>) <span onmouseout="hideTip(event, 'fs34', 121)" onmouseover="showTip(event, 'fs34', 121)" class="i">str</span> <span class="k">-&gt;</span>
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs35', 122)" onmouseover="showTip(event, 'fs35', 122)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 123)" onmouseover="showTip(event, 'fs36', 123)" class="f">IsNullOrEmpty</span>(<span onmouseout="hideTip(event, 'fs34', 124)" onmouseover="showTip(event, 'fs34', 124)" class="i">str</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 125)" onmouseover="showTip(event, 'fs37', 125)" class="f">Trim</span>()) <span class="k">then</span>
                    <span onmouseout="hideTip(event, 'fs52', 126)" onmouseover="showTip(event, 'fs52', 126)" class="i">line_count</span>, <span onmouseout="hideTip(event, 'fs53', 127)" onmouseover="showTip(event, 'fs53', 127)" class="i">blank_count</span> <span class="o">+</span> <span class="n">1</span> 
                <span class="k">else</span> <span onmouseout="hideTip(event, 'fs52', 128)" onmouseover="showTip(event, 'fs52', 128)" class="i">line_count</span> <span class="o">+</span> <span class="n">1</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs53', 129)" onmouseover="showTip(event, 'fs53', 129)" class="i">blank_count</span>, <span class="n">0</span>) (<span class="n">0</span>, <span class="n">0</span>)
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs38', 130)" onmouseover="showTip(event, 'fs38', 130)" class="f">fst</span>
        <span onmouseout="hideTip(event, 'fs48', 131)" onmouseover="showTip(event, 'fs48', 131)" class="i">data</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 132)" onmouseover="showTip(event, 'fs16', 132)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs54', 133)" onmouseover="showTip(event, 'fs54', 133)" class="f">take</span> <span onmouseout="hideTip(event, 'fs51', 134)" onmouseover="showTip(event, 'fs51', 134)" class="i">num_real_lines</span> <span class="c">// drop trailing empty lines</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 135)" onmouseover="showTip(event, 'fs16', 135)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 136)" onmouseover="showTip(event, 'fs55', 136)" class="f">skipWhile</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs34', 137)" onmouseover="showTip(event, 'fs34', 137)" class="i">str</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs35', 138)" onmouseover="showTip(event, 'fs35', 138)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 139)" onmouseover="showTip(event, 'fs56', 139)" class="f">IsNullOrWhiteSpace</span>(<span onmouseout="hideTip(event, 'fs34', 140)" onmouseover="showTip(event, 'fs34', 140)" class="i">str</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 141)" onmouseover="showTip(event, 'fs37', 141)" class="f">Trim</span>())) <span class="c">// drop leading empty lines</span>
    
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs12', 142)" onmouseover="showTip(event, 'fs12', 142)" class="i">text</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 143)" onmouseover="showTip(event, 'fs16', 143)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 144)" onmouseover="showTip(event, 'fs57', 144)" class="f">isEmpty</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs23', 145)" onmouseover="showTip(event, 'fs23', 145)" class="f">failwith</span> <span class="s">&quot;Empty Realease file.&quot;</span>

    <span class="k">let</span> (|<span class="p">Simple</span>|<span class="p">Complex</span>|<span class="p">Invalid</span>|) <span onmouseout="hideTip(event, 'fs58', 146)" onmouseover="showTip(event, 'fs58', 146)" class="i">c</span>  <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs58', 147)" onmouseover="showTip(event, 'fs58', 147)" class="i">c</span> <span class="k">with</span>
        |<span class="s">&#39;*&#39;</span> <span class="k">-&gt;</span> <span class="p">Simple</span>
        |<span class="s">&#39;#&#39;</span> <span class="k">-&gt;</span> <span class="p">Complex</span>
        |_ <span class="k">-&gt;</span> <span class="p">Invalid</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs59', 148)" onmouseover="showTip(event, 'fs59', 148)" class="i">firstNonEmptyChar</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs12', 149)" onmouseover="showTip(event, 'fs12', 149)" class="i">text</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 150)" onmouseover="showTip(event, 'fs16', 150)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 151)" onmouseover="showTip(event, 'fs42', 151)" class="f">head</span>)<span class="o">.</span><span class="f">Trim</span>([|<span class="s">&#39;-&#39;</span>; <span class="s">&#39; &#39;</span>|])<span class="o">.</span>[<span class="n">0</span>]
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs59', 152)" onmouseover="showTip(event, 'fs59', 152)" class="i">firstNonEmptyChar</span> <span class="k">with</span>
    |<span onmouseout="hideTip(event, 'fs60', 153)" onmouseover="showTip(event, 'fs60', 153)" class="p">Simple</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 154)" onmouseover="showTip(event, 'fs11', 154)" class="f">parseSimpleReleaseNotes</span> <span onmouseout="hideTip(event, 'fs12', 155)" onmouseover="showTip(event, 'fs12', 155)" class="i">text</span>   <span class="c">// parse simple release notes type</span>
    |<span onmouseout="hideTip(event, 'fs61', 156)" onmouseover="showTip(event, 'fs61', 156)" class="p">Complex</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs29', 157)" onmouseover="showTip(event, 'fs29', 157)" class="f">parseComplexReleaseNotes</span> <span onmouseout="hideTip(event, 'fs12', 158)" onmouseover="showTip(event, 'fs12', 158)" class="i">text</span>  <span class="c">// parse complex release notes type</span>
    |<span onmouseout="hideTip(event, 'fs62', 159)" onmouseover="showTip(event, 'fs62', 159)" class="p">Invalid</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs23', 160)" onmouseover="showTip(event, 'fs23', 160)" class="f">failwith</span> <span class="s">&quot;Invalid Release Notes format.&quot;</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.IO</div>
<div class="tip" id="fs3">namespace System.Text</div>
<div class="tip" id="fs4">namespace System.Text.RegularExpressions</div>
<div class="tip" id="fs5">val dir : string<br /><br />Full name: Script.dir</div>
<div class="tip" id="fs6">val simple_notes : string<br /><br />Full name: Script.simple_notes</div>
<div class="tip" id="fs7">val complex_notes : string<br /><br />Full name: Script.complex_notes</div>
<div class="tip" id="fs8">val nugetRegex : Regex<br /><br />Full name: Script.nugetRegex</div>
<div class="tip" id="fs9">Multiple items<br />type Regex =<br />&#160;&#160;new : pattern:string -&gt; Regex + 1 overload<br />&#160;&#160;member GetGroupNames : unit -&gt; string[]<br />&#160;&#160;member GetGroupNumbers : unit -&gt; int[]<br />&#160;&#160;member GroupNameFromNumber : i:int -&gt; string<br />&#160;&#160;member GroupNumberFromName : name:string -&gt; int<br />&#160;&#160;member IsMatch : input:string -&gt; bool + 1 overload<br />&#160;&#160;member Match : input:string -&gt; Match + 2 overloads<br />&#160;&#160;member Matches : input:string -&gt; MatchCollection + 1 overload<br />&#160;&#160;member Options : RegexOptions<br />&#160;&#160;member Replace : input:string * replacement:string -&gt; string + 5 overloads<br />&#160;&#160;...<br /><br />Full name: System.Text.RegularExpressions.Regex<br /><br />--------------------<br />Regex(pattern: string) : unit<br />Regex(pattern: string, options: RegexOptions) : unit</div>
<div class="tip" id="fs10">val assemblyRegex : Regex<br /><br />Full name: Script.assemblyRegex</div>
<div class="tip" id="fs11">val parseSimpleReleaseNotes : text:seq&lt;string&gt; -&gt; string * string * string list<br /><br />Full name: Script.parseSimpleReleaseNotes<br /><em><br /><br />&#160;Parse simple release notes sequence</em></div>
<div class="tip" id="fs12">val text : seq&lt;string&gt;</div>
<div class="tip" id="fs13">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs14">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs15">val lastLine : string</div>
<div class="tip" id="fs16">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs17">val last : source:seq&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.Seq.last</div>
<div class="tip" id="fs18">val assemblyVersion : Match</div>
<div class="tip" id="fs19">val nugetVersion : Match</div>
<div class="tip" id="fs20">Regex.Match(input: string) : Match<br />Regex.Match(input: string, startat: int) : Match<br />Regex.Match(input: string, beginning: int, length: int) : Match</div>
<div class="tip" id="fs21">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs22">property Group.Success: bool</div>
<div class="tip" id="fs23">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs24">val notes : string</div>
<div class="tip" id="fs25">String.Substring(startIndex: int) : string<br />String.Substring(startIndex: int, length: int) : string</div>
<div class="tip" id="fs26">property Capture.Index: int</div>
<div class="tip" id="fs27">property Capture.Length: int</div>
<div class="tip" id="fs28">property Capture.Value: string</div>
<div class="tip" id="fs29">val parseComplexReleaseNotes : text:seq&lt;string&gt; -&gt; string * string * string list<br /><br />Full name: Script.parseComplexReleaseNotes<br /><em><br /><br />&#160;Parse &quot;complex&quot; release notes text sequence</em></div>
<div class="tip" id="fs30">val indexOfLastBlock : int</div>
<div class="tip" id="fs31">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.Seq.fold</div>
<div class="tip" id="fs32">val index : int</div>
<div class="tip" id="fs33">val ctr : int</div>
<div class="tip" id="fs34">val str : string</div>
<div class="tip" id="fs35">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs36">String.IsNullOrEmpty(value: string) : bool</div>
<div class="tip" id="fs37">String.Trim() : string<br />String.Trim([&lt;ParamArray&gt;] trimChars: char []) : string</div>
<div class="tip" id="fs38">val fst : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T1<br /><br />Full name: Microsoft.FSharp.Core.Operators.fst</div>
<div class="tip" id="fs39">val lastBlock : seq&lt;string&gt;</div>
<div class="tip" id="fs40">val skip : count:int -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.skip</div>
<div class="tip" id="fs41">val blockHeader : string</div>
<div class="tip" id="fs42">val head : source:seq&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.Seq.head</div>
<div class="tip" id="fs43">val notes : string list</div>
<div class="tip" id="fs44">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs45">val toList : source:seq&lt;&#39;T&gt; -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.Seq.toList</div>
<div class="tip" id="fs46">val parseReleaseNotes : filePath:string -&gt; string * string * string list<br /><br />Full name: Script.parseReleaseNotes<br /><em><br /><br />&#160;Parse a Release Notes File - Either simple or &quot;complex&quot; format<br />&#160;See: https://github.com/fsharp/FAKE/issues/171<br />&#160;&lt;param name=&quot;filePath&quot;&gt;The path to the release notes file&lt;/param&gt;<br />&#160;&lt;returns&gt; (assembly_version, nuget_version, [release_notes]) &lt;/returns&gt;</em></div>
<div class="tip" id="fs47">val filePath : string</div>
<div class="tip" id="fs48">val data : Collections.Generic.IEnumerable&lt;string&gt;</div>
<div class="tip" id="fs49">type File =<br />&#160;&#160;static member AppendAllLines : path:string * contents:IEnumerable&lt;string&gt; -&gt; unit + 1 overload<br />&#160;&#160;static member AppendAllText : path:string * contents:string -&gt; unit + 1 overload<br />&#160;&#160;static member AppendText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Copy : sourceFileName:string * destFileName:string -&gt; unit + 1 overload<br />&#160;&#160;static member Create : path:string -&gt; FileStream + 3 overloads<br />&#160;&#160;static member CreateText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Decrypt : path:string -&gt; unit<br />&#160;&#160;static member Delete : path:string -&gt; unit<br />&#160;&#160;static member Encrypt : path:string -&gt; unit<br />&#160;&#160;static member Exists : path:string -&gt; bool<br />&#160;&#160;...<br /><br />Full name: System.IO.File</div>
<div class="tip" id="fs50">File.ReadLines(path: string) : Collections.Generic.IEnumerable&lt;string&gt;<br />File.ReadLines(path: string, encoding: Text.Encoding) : Collections.Generic.IEnumerable&lt;string&gt;</div>
<div class="tip" id="fs51">val num_real_lines : int</div>
<div class="tip" id="fs52">val line_count : int</div>
<div class="tip" id="fs53">val blank_count : int</div>
<div class="tip" id="fs54">val take : count:int -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.take</div>
<div class="tip" id="fs55">val skipWhile : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.skipWhile</div>
<div class="tip" id="fs56">String.IsNullOrWhiteSpace(value: string) : bool</div>
<div class="tip" id="fs57">val isEmpty : source:seq&lt;&#39;T&gt; -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.Seq.isEmpty</div>
<div class="tip" id="fs58">val c : char</div>
<div class="tip" id="fs59">val firstNonEmptyChar : char</div>
<div class="tip" id="fs60">active recognizer Simple: char -&gt; Choice&lt;unit,unit,unit&gt;</div>
<div class="tip" id="fs61">active recognizer Complex: char -&gt; Choice&lt;unit,unit,unit&gt;</div>
<div class="tip" id="fs62">active recognizer Invalid: char -&gt; Choice&lt;unit,unit,unit&gt;</div>

