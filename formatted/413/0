<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// http://blogs.msdn.com/b/ericlippert/archive/2009/04/15/comma-quibbling.aspx</span>

<span class="prep">#time</span>
<span class="prep">#r</span> <span class="s">&quot;FSharp.PowerPack.dll&quot;</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Text</span>


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="f">format</span> (<span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">words</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="t">seq</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">string</span><span class="o">&gt;</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="f">sb</span> (<span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">value</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="t">string</span>) <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="t">StringBuilder</span>(<span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="i">value</span>)
    <span class="k">let</span> (<span class="o">&lt;+&gt;</span>) (<span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="i">first</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="t">StringBuilder</span>) (<span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="i">second</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs6', 16)" onmouseover="showTip(event, 'fs6', 16)" class="t">string</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 17)" onmouseover="showTip(event, 'fs10', 17)" class="i">first</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="f">Append</span>(<span onmouseout="hideTip(event, 'fs11', 19)" onmouseover="showTip(event, 'fs11', 19)" class="i">second</span>)
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="f">format</span> (<span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="i">words</span> <span class="o">:</span> <span class="i">LazyList</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs6', 22)" onmouseover="showTip(event, 'fs6', 22)" class="i">string</span><span class="o">&gt;</span>) <span onmouseout="hideTip(event, 'fs15', 23)" onmouseover="showTip(event, 'fs15', 23)" class="i">acc</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs14', 24)" onmouseover="showTip(event, 'fs14', 24)" class="i">words</span> <span class="k">with</span>
        | <span class="i">LazyList</span><span class="o">.</span><span class="i">Nil</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 25)" onmouseover="showTip(event, 'fs7', 25)" class="i">sb</span> <span class="s">&quot;&quot;</span>
        | <span class="i">LazyList</span><span class="o">.</span><span class="i">Cons</span>(<span class="i">first</span>, <span class="i">LazyList</span><span class="o">.</span><span class="i">Nil</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 26)" onmouseover="showTip(event, 'fs7', 26)" class="i">sb</span> <span class="i">first</span>
        | <span class="i">LazyList</span><span class="o">.</span><span class="i">Cons</span>(<span class="i">first</span>, <span class="i">LazyList</span><span class="o">.</span><span class="i">Cons</span>(<span class="i">second</span>, <span class="i">LazyList</span><span class="o">.</span><span class="i">Nil</span>)) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 27)" onmouseover="showTip(event, 'fs15', 27)" class="i">acc</span> <span class="o">&lt;+&gt;</span> <span class="i">first</span> <span class="o">&lt;+&gt;</span> <span class="s">&quot; and &quot;</span> <span class="o">&lt;+&gt;</span> <span class="i">second</span>
        | <span class="i">LazyList</span><span class="o">.</span><span class="i">Cons</span>(<span class="i">first</span>, <span class="i">rest</span>) <span class="k">-&gt;</span>  <span onmouseout="hideTip(event, 'fs15', 28)" onmouseover="showTip(event, 'fs15', 28)" class="i">acc</span> <span class="o">&lt;+&gt;</span> <span class="i">first</span> <span class="o">&lt;+&gt;</span> <span class="s">&quot;, &quot;</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs13', 29)" onmouseover="showTip(event, 'fs13', 29)" class="i">format</span> <span class="i">rest</span> 
          
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 30)" onmouseover="showTip(event, 'fs16', 30)" class="i">listOfWords</span> <span class="o">=</span> <span class="i">LazyList</span><span class="o">.</span><span class="i">ofSeq</span> <span onmouseout="hideTip(event, 'fs4', 31)" onmouseover="showTip(event, 'fs4', 31)" class="i">words</span>  
    <span onmouseout="hideTip(event, 'fs17', 32)" onmouseover="showTip(event, 'fs17', 32)" class="f">sprintf</span> <span class="s">&quot;{</span><span class="pf">%s</span><span class="s">}&quot;</span> <span class="o">&lt;|</span> (<span onmouseout="hideTip(event, 'fs13', 33)" onmouseover="showTip(event, 'fs13', 33)" class="f">format</span> <span onmouseout="hideTip(event, 'fs16', 34)" onmouseover="showTip(event, 'fs16', 34)" class="i">listOfWords</span> (<span onmouseout="hideTip(event, 'fs7', 35)" onmouseover="showTip(event, 'fs7', 35)" class="f">sb</span> <span class="s">&quot;&quot;</span>))<span class="o">.</span><span class="f">ToString</span>() 

[<span class="s">&quot;ABC&quot;</span>; <span class="s">&quot;DEF&quot;</span>; <span class="s">&quot;G&quot;</span>; <span class="s">&quot;H&quot;</span> ] <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs3', 36)" onmouseover="showTip(event, 'fs3', 36)" class="f">format</span>
[<span class="s">&quot;ABC&quot;</span>; <span class="s">&quot;DEF&quot;</span> ] <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs3', 37)" onmouseover="showTip(event, 'fs3', 37)" class="f">format</span> 
[<span class="s">&quot;ABC&quot;</span>] <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs3', 38)" onmouseover="showTip(event, 'fs3', 38)" class="f">format</span>
[<span class="s">&quot;&quot;</span>] <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs3', 39)" onmouseover="showTip(event, 'fs3', 39)" class="f">format</span>
{<span class="n">1..</span><span class="n">10000</span>} <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 40)" onmouseover="showTip(event, 'fs18', 40)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="f">map</span> <span onmouseout="hideTip(event, 'fs6', 42)" onmouseover="showTip(event, 'fs6', 42)" class="f">string</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs3', 43)" onmouseover="showTip(event, 'fs3', 43)" class="f">format</span> 
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Text</div>
<div class="tip" id="fs3">val format : words:seq&lt;string&gt; -&gt; string<br /><br />Full name: Script.format</div>
<div class="tip" id="fs4">val words : seq&lt;string&gt;</div>
<div class="tip" id="fs5">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs6">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs7">val sb : (string -&gt; StringBuilder)</div>
<div class="tip" id="fs8">val value : string</div>
<div class="tip" id="fs9">Multiple items<br />type StringBuilder =<br />&#160;&#160;new : unit -&gt; StringBuilder + 5 overloads<br />&#160;&#160;member Append : value:string -&gt; StringBuilder + 18 overloads<br />&#160;&#160;member AppendFormat : format:string * arg0:obj -&gt; StringBuilder + 4 overloads<br />&#160;&#160;member AppendLine : unit -&gt; StringBuilder + 1 overload<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member Chars : int -&gt; char with get, set<br />&#160;&#160;member Clear : unit -&gt; StringBuilder<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EnsureCapacity : capacity:int -&gt; int<br />&#160;&#160;member Equals : sb:StringBuilder -&gt; bool<br />&#160;&#160;...<br /><br />Full name: System.Text.StringBuilder<br /><br />--------------------<br />StringBuilder() : unit<br />StringBuilder(capacity: int) : unit<br />StringBuilder(value: string) : unit<br />StringBuilder(value: string, capacity: int) : unit<br />StringBuilder(capacity: int, maxCapacity: int) : unit<br />StringBuilder(value: string, startIndex: int, length: int, capacity: int) : unit</div>
<div class="tip" id="fs10">val first : StringBuilder</div>
<div class="tip" id="fs11">val second : string</div>
<div class="tip" id="fs12">StringBuilder.Append(value: char []) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: obj) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: uint64) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: uint32) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: uint16) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: decimal) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: float) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: float32) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: int64) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: int) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs13">val format : (&#39;a -&gt; &#39;b -&gt; &#39;c)</div>
<div class="tip" id="fs14">val words : &#39;a</div>
<div class="tip" id="fs15">val acc : &#39;b</div>
<div class="tip" id="fs16">val listOfWords : obj</div>
<div class="tip" id="fs17">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs18">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs19">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>

