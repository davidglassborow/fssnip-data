<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
<span class="l">154: </span>
<span class="l">155: </span>
<span class="l">156: </span>
<span class="l">157: </span>
<span class="l">158: </span>
<span class="l">159: </span>
<span class="l">160: </span>
<span class="l">161: </span>
<span class="l">162: </span>
<span class="l">163: </span>
<span class="l">164: </span>
<span class="l">165: </span>
<span class="l">166: </span>
<span class="l">167: </span>
<span class="l">168: </span>
<span class="l">169: </span>
<span class="l">170: </span>
<span class="l">171: </span>
<span class="l">172: </span>
<span class="l">173: </span>
<span class="l">174: </span>
<span class="l">175: </span>
<span class="l">176: </span>
<span class="l">177: </span>
<span class="l">178: </span>
<span class="l">179: </span>
<span class="l">180: </span>
<span class="l">181: </span>
<span class="l">182: </span>
<span class="l">183: </span>
<span class="l">184: </span>
<span class="l">185: </span>
<span class="l">186: </span>
<span class="l">187: </span>
<span class="l">188: </span>
<span class="l">189: </span>
<span class="l">190: </span>
<span class="l">191: </span>
<span class="l">192: </span>
<span class="l">193: </span>
<span class="l">194: </span>
<span class="l">195: </span>
<span class="l">196: </span>
<span class="l">197: </span>
<span class="l">198: </span>
<span class="l">199: </span>
<span class="l">200: </span>
<span class="l">201: </span>
<span class="l">202: </span>
<span class="l">203: </span>
<span class="l">204: </span>
<span class="l">205: </span>
<span class="l">206: </span>
<span class="l">207: </span>
<span class="l">208: </span>
<span class="l">209: </span>
<span class="l">210: </span>
<span class="l">211: </span>
<span class="l">212: </span>
<span class="l">213: </span>
<span class="l">214: </span>
<span class="l">215: </span>
<span class="l">216: </span>
<span class="l">217: </span>
<span class="l">218: </span>
<span class="l">219: </span>
<span class="l">220: </span>
<span class="l">221: </span>
<span class="l">222: </span>
<span class="l">223: </span>
<span class="l">224: </span>
<span class="l">225: </span>
<span class="l">226: </span>
<span class="l">227: </span>
<span class="l">228: </span>
<span class="l">229: </span>
<span class="l">230: </span>
<span class="l">231: </span>
<span class="l">232: </span>
<span class="l">233: </span>
<span class="l">234: </span>
<span class="l">235: </span>
<span class="l">236: </span>
<span class="l">237: </span>
<span class="l">238: </span>
<span class="l">239: </span>
<span class="l">240: </span>
<span class="l">241: </span>
<span class="l">242: </span>
<span class="l">243: </span>
<span class="l">244: </span>
<span class="l">245: </span>
<span class="l">246: </span>
<span class="l">247: </span>
<span class="l">248: </span>
<span class="l">249: </span>
<span class="l">250: </span>
<span class="l">251: </span>
<span class="l">252: </span>
<span class="l">253: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">(*</span>

<span class="c">We consider the movement of cells towards an area of ligand activity (chemotaxis) and the cellsâ€™ </span>
<span class="c">reactions to different ligands. &#160;</span>

<span class="c">For simplicity, we will consider only horizontal movement on an integer grid in the first two </span>
<span class="c">parts of this exercise. That is, the locations of the cells can only take integer values and </span>
<span class="c">the movement will only change the x-part of the cell location. </span>

<span class="c">The module Cells defines the object Cell and functions that can be applied to it in order to </span>
<span class="c">define the behaviour of the model. &#160;</span>
<span class="c">&#160;</span>
<span class="c">What you should observe are cells (circles) moving towards two different kinds of ligands, </span>
<span class="c">called Ras and Notch (indicated as areas of different colour). The cells start in areas </span>
<span class="c">with no ligand present and move towards the closest ligand or in a random direction if </span>
<span class="c">they are in the middle between two ligand areas. Once the cells have reached the area of </span>
<span class="c">ligand activity, they react to the specific ligand. Ras causes the cells to stop their </span>
<span class="c">movement and grow and Notch results in the cells to stop moving. </span>

<span class="c">*)</span>
<span class="c">/// Defines the properties of cells and functions describing their behaviour</span>
<span class="k">module</span> <span class="t">Cells</span> <span class="o">=</span> 
    
    <span class="c">/// Creates a random number generator</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">randomGenerator</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">Random</span>()
    
    <span class="c">/// Represents a point (x,y) in the model with coordinates on an integer grid</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">Point</span> <span class="o">=</span> {<span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">x</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">int</span>;<span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="i">y</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="t">int</span>}
   
    <span class="c">/// Build a point with coordinates x and y</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="f">Point</span>(<span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="i">y</span>) <span class="o">=</span> {<span onmouseout="hideTip(event, 'fs5', 12)" onmouseover="showTip(event, 'fs5', 12)" class="i">x</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="i">x</span>;<span onmouseout="hideTip(event, 'fs7', 14)" onmouseover="showTip(event, 'fs7', 14)" class="i">y</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="i">y</span>}
    
    
    <span class="c">/// Represents ligand activity</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="t">Ligand</span> <span class="o">=</span> 
        <span class="c">/// Represents the presence of Notch protein</span>
        | <span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="p">Notch</span> 
        <span class="c">/// Represents the presence of Ras protein</span>
        | <span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="p">Ras</span> 
        <span class="c">/// Represents the absence of ligand activity</span>
        | <span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="p">NoLigand</span>
    
    <span class="c">///Represents the state of a cell that defines how it will behave</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="t">CellMarker</span> <span class="o">=</span> 
        <span class="c">/// Represents a cell that is able to move</span>
        | <span onmouseout="hideTip(event, 'fs16', 21)" onmouseover="showTip(event, 'fs16', 21)" class="p">Move</span> 
        <span class="c">/// Represents a cell that is able to grow</span>
        | <span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="p">Grow</span> 
        <span class="c">/// Represents a cell that stays in the place that it is in and does not do anything</span>
        | <span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="p">Stopped</span> 
        <span class="c">/// Represents a cell that has died</span>
        | <span onmouseout="hideTip(event, 'fs19', 24)" onmouseover="showTip(event, 'fs19', 24)" class="p">Dead</span> 
        <span class="c">/// Represents a cell that is set to divide</span>
        | <span onmouseout="hideTip(event, 'fs20', 25)" onmouseover="showTip(event, 'fs20', 25)" class="p">Divide</span>
    
    
    <span class="c">/// Defines the states and state modifications of a cell</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs21', 26)" onmouseover="showTip(event, 'fs21', 26)" class="t">Cell</span>(<span onmouseout="hideTip(event, 'fs9', 27)" onmouseover="showTip(event, 'fs9', 27)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs10', 28)" onmouseover="showTip(event, 'fs10', 28)" class="i">y</span>) <span class="o">=</span>
        <span class="c">// Define the initial states of the cell. The keyword &#39;mutable&#39; is used to indicate</span>
        <span class="c">// that the state can change over time.</span>
        <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs22', 29)" onmouseover="showTip(event, 'fs22', 29)" class="v">location</span>  <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 30)" onmouseover="showTip(event, 'fs8', 30)" class="f">Point</span>(<span onmouseout="hideTip(event, 'fs9', 31)" onmouseover="showTip(event, 'fs9', 31)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs10', 32)" onmouseover="showTip(event, 'fs10', 32)" class="i">y</span>)
        <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs23', 33)" onmouseover="showTip(event, 'fs23', 33)" class="v">size</span>      <span class="o">=</span> <span class="n">0.5</span>
        <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs24', 34)" onmouseover="showTip(event, 'fs24', 34)" class="v">marker</span>   <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 35)" onmouseover="showTip(event, 'fs16', 35)" class="p">Move</span>
        <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs25', 36)" onmouseover="showTip(event, 'fs25', 36)" class="v">direction</span> <span class="o">=</span> <span class="n">0</span>
        
        <span class="c">// Expose the states of the cell to make them accessible from outside of the object</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs26', 37)" onmouseover="showTip(event, 'fs26', 37)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 38)" onmouseover="showTip(event, 'fs27', 38)" class="i">Location</span>   <span class="k">with</span> <span class="i">get</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 39)" onmouseover="showTip(event, 'fs22', 39)" class="v">location</span>  <span class="k">and</span> <span onmouseout="hideTip(event, 'fs28', 40)" onmouseover="showTip(event, 'fs28', 40)" class="i">set</span>(<span onmouseout="hideTip(event, 'fs29', 41)" onmouseover="showTip(event, 'fs29', 41)" class="i">x</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 42)" onmouseover="showTip(event, 'fs22', 42)" class="v">location</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs29', 43)" onmouseover="showTip(event, 'fs29', 43)" class="i">x</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs26', 44)" onmouseover="showTip(event, 'fs26', 44)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 45)" onmouseover="showTip(event, 'fs30', 45)" class="i">Marker</span>     <span class="k">with</span> <span class="i">get</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 46)" onmouseover="showTip(event, 'fs24', 46)" class="v">marker</span>    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs28', 47)" onmouseover="showTip(event, 'fs28', 47)" class="i">set</span>(<span onmouseout="hideTip(event, 'fs31', 48)" onmouseover="showTip(event, 'fs31', 48)" class="i">x</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 49)" onmouseover="showTip(event, 'fs24', 49)" class="v">marker</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs31', 50)" onmouseover="showTip(event, 'fs31', 50)" class="i">x</span> 
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs26', 51)" onmouseover="showTip(event, 'fs26', 51)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 52)" onmouseover="showTip(event, 'fs32', 52)" class="i">Direction</span>  <span class="k">with</span> <span class="i">get</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 53)" onmouseover="showTip(event, 'fs25', 53)" class="v">direction</span> <span class="k">and</span> <span onmouseout="hideTip(event, 'fs28', 54)" onmouseover="showTip(event, 'fs28', 54)" class="i">set</span>(<span onmouseout="hideTip(event, 'fs9', 55)" onmouseover="showTip(event, 'fs9', 55)" class="i">x</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 56)" onmouseover="showTip(event, 'fs25', 56)" class="v">direction</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs9', 57)" onmouseover="showTip(event, 'fs9', 57)" class="i">x</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs26', 58)" onmouseover="showTip(event, 'fs26', 58)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 59)" onmouseover="showTip(event, 'fs33', 59)" class="i">Size</span>       <span class="k">with</span> <span class="i">get</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 60)" onmouseover="showTip(event, 'fs23', 60)" class="v">size</span>      <span class="k">and</span> <span onmouseout="hideTip(event, 'fs28', 61)" onmouseover="showTip(event, 'fs28', 61)" class="i">set</span>(<span onmouseout="hideTip(event, 'fs34', 62)" onmouseover="showTip(event, 'fs34', 62)" class="i">x</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 63)" onmouseover="showTip(event, 'fs23', 63)" class="v">size</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs34', 64)" onmouseover="showTip(event, 'fs34', 64)" class="i">x</span>
    
        <span class="c">// Modify states of the cell using functions that can be called outside of the object</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs26', 65)" onmouseover="showTip(event, 'fs26', 65)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 66)" onmouseover="showTip(event, 'fs35', 66)" class="f">Move</span>()      <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 67)" onmouseover="showTip(event, 'fs22', 67)" class="v">location</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs8', 68)" onmouseover="showTip(event, 'fs8', 68)" class="f">Point</span>(<span onmouseout="hideTip(event, 'fs22', 69)" onmouseover="showTip(event, 'fs22', 69)" class="v">location</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 70)" onmouseover="showTip(event, 'fs5', 70)" class="i">x</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs25', 71)" onmouseover="showTip(event, 'fs25', 71)" class="v">direction</span>,<span onmouseout="hideTip(event, 'fs22', 72)" onmouseover="showTip(event, 'fs22', 72)" class="v">location</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 73)" onmouseover="showTip(event, 'fs7', 73)" class="i">y</span>)
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs26', 74)" onmouseover="showTip(event, 'fs26', 74)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 75)" onmouseover="showTip(event, 'fs36', 75)" class="f">Grow</span>(<span onmouseout="hideTip(event, 'fs34', 76)" onmouseover="showTip(event, 'fs34', 76)" class="i">x</span>)     <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 77)" onmouseover="showTip(event, 'fs23', 77)" class="v">size</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs23', 78)" onmouseover="showTip(event, 'fs23', 78)" class="v">size</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs34', 79)" onmouseover="showTip(event, 'fs34', 79)" class="i">x</span>
       
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs26', 80)" onmouseover="showTip(event, 'fs26', 80)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 81)" onmouseover="showTip(event, 'fs37', 81)" class="f">RenderData</span>() <span class="o">=</span>         
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 82)" onmouseover="showTip(event, 'fs38', 82)" class="i">color</span> <span class="o">=</span> 
                <span class="k">match</span> <span onmouseout="hideTip(event, 'fs24', 83)" onmouseover="showTip(event, 'fs24', 83)" class="v">marker</span> <span class="k">with</span>
                | <span onmouseout="hideTip(event, 'fs16', 84)" onmouseover="showTip(event, 'fs16', 84)" class="p">Move</span> <span class="k">-&gt;</span> <span class="s">&quot;blue&quot;</span> 
                | <span onmouseout="hideTip(event, 'fs17', 85)" onmouseover="showTip(event, 'fs17', 85)" class="p">Grow</span> <span class="k">-&gt;</span> <span class="s">&quot;magenta&quot;</span>
                | <span onmouseout="hideTip(event, 'fs19', 86)" onmouseover="showTip(event, 'fs19', 86)" class="p">Dead</span> <span class="k">-&gt;</span> <span class="s">&quot;black&quot;</span>
                | <span onmouseout="hideTip(event, 'fs20', 87)" onmouseover="showTip(event, 'fs20', 87)" class="p">Divide</span> <span class="k">-&gt;</span> <span class="s">&quot;red&quot;</span>
                | _ <span class="k">-&gt;</span> <span class="s">&quot;green&quot;</span>     
            (<span onmouseout="hideTip(event, 'fs22', 88)" onmouseover="showTip(event, 'fs22', 88)" class="v">location</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 89)" onmouseover="showTip(event, 'fs5', 89)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs22', 90)" onmouseover="showTip(event, 'fs22', 90)" class="v">location</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 91)" onmouseover="showTip(event, 'fs7', 91)" class="i">y</span>, <span onmouseout="hideTip(event, 'fs23', 92)" onmouseover="showTip(event, 'fs23', 92)" class="v">size</span>, <span onmouseout="hideTip(event, 'fs38', 93)" onmouseover="showTip(event, 'fs38', 93)" class="i">color</span>)  
    
    <span class="c">/// Computes the ligand activity in location p.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 94)" onmouseover="showTip(event, 'fs39', 94)" class="f">ligand</span> (<span onmouseout="hideTip(event, 'fs40', 95)" onmouseover="showTip(event, 'fs40', 95)" class="i">p</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs8', 96)" onmouseover="showTip(event, 'fs8', 96)" class="t">Point</span>) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 97)" onmouseover="showTip(event, 'fs9', 97)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 98)" onmouseover="showTip(event, 'fs40', 98)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 99)" onmouseover="showTip(event, 'fs5', 99)" class="i">x</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs9', 100)" onmouseover="showTip(event, 'fs9', 100)" class="i">x</span> <span class="o">&lt;</span> <span class="n">10</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs13', 101)" onmouseover="showTip(event, 'fs13', 101)" class="p">Ras</span> 
        <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs9', 102)" onmouseover="showTip(event, 'fs9', 102)" class="i">x</span> <span class="o">&gt;</span> <span class="n">20</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs9', 103)" onmouseover="showTip(event, 'fs9', 103)" class="i">x</span> <span class="o">&lt;</span> <span class="n">30</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs12', 104)" onmouseover="showTip(event, 'fs12', 104)" class="p">Notch</span> 
        <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs9', 105)" onmouseover="showTip(event, 'fs9', 105)" class="i">x</span> <span class="o">&gt;</span> <span class="n">40</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs9', 106)" onmouseover="showTip(event, 'fs9', 106)" class="i">x</span> <span class="o">&lt;</span> <span class="n">50</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs13', 107)" onmouseover="showTip(event, 'fs13', 107)" class="p">Ras</span> 
        <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs9', 108)" onmouseover="showTip(event, 'fs9', 108)" class="i">x</span> <span class="o">&gt;</span> <span class="n">60</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs9', 109)" onmouseover="showTip(event, 'fs9', 109)" class="i">x</span> <span class="o">&lt;</span> <span class="n">70</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs12', 110)" onmouseover="showTip(event, 'fs12', 110)" class="p">Notch</span> 
        <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs9', 111)" onmouseover="showTip(event, 'fs9', 111)" class="i">x</span> <span class="o">&gt;</span> <span class="n">80</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs9', 112)" onmouseover="showTip(event, 'fs9', 112)" class="i">x</span> <span class="o">&lt;</span> <span class="n">90</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs13', 113)" onmouseover="showTip(event, 'fs13', 113)" class="p">Ras</span> 
        <span class="k">else</span> <span onmouseout="hideTip(event, 'fs14', 114)" onmouseover="showTip(event, 'fs14', 114)" class="p">NoLigand</span>

        
            
      
    <span class="c">/// This function is called by the simulation engine. It sets the marker of a cell according</span>
    <span class="c">/// to the ligand activity at its location and in part B depending its neighbour and the ligand </span>
    <span class="c">/// activity at its next location.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 115)" onmouseover="showTip(event, 'fs41', 115)" class="f">setMarker</span> (<span onmouseout="hideTip(event, 'fs42', 116)" onmouseover="showTip(event, 'fs42', 116)" class="i">cells</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs21', 117)" onmouseover="showTip(event, 'fs21', 117)" class="t">Cell</span>[]) (<span onmouseout="hideTip(event, 'fs43', 118)" onmouseover="showTip(event, 'fs43', 118)" class="i">cell</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs21', 119)" onmouseover="showTip(event, 'fs21', 119)" class="t">Cell</span>) <span class="o">=</span>
        <span class="c">// These three definitions are needed in part B</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 120)" onmouseover="showTip(event, 'fs44', 120)" class="i">nextX</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs43', 121)" onmouseover="showTip(event, 'fs43', 121)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 122)" onmouseover="showTip(event, 'fs45', 122)" class="i">Location</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 123)" onmouseover="showTip(event, 'fs5', 123)" class="i">x</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs43', 124)" onmouseover="showTip(event, 'fs43', 124)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 125)" onmouseover="showTip(event, 'fs46', 125)" class="i">Direction</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs47', 126)" onmouseover="showTip(event, 'fs47', 126)" class="i">nextLoc</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 127)" onmouseover="showTip(event, 'fs8', 127)" class="f">Point</span>(<span onmouseout="hideTip(event, 'fs44', 128)" onmouseover="showTip(event, 'fs44', 128)" class="i">nextX</span>,<span onmouseout="hideTip(event, 'fs43', 129)" onmouseover="showTip(event, 'fs43', 129)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 130)" onmouseover="showTip(event, 'fs45', 130)" class="i">Location</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 131)" onmouseover="showTip(event, 'fs7', 131)" class="i">y</span>)
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 132)" onmouseover="showTip(event, 'fs48', 132)" class="i">neighbour</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 133)" onmouseover="showTip(event, 'fs49', 133)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 134)" onmouseover="showTip(event, 'fs50', 134)" class="f">filter</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs51', 135)" onmouseover="showTip(event, 'fs51', 135)" class="i">c</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs21', 136)" onmouseover="showTip(event, 'fs21', 136)" class="t">Cell</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 137)" onmouseover="showTip(event, 'fs51', 137)" class="i">c</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 138)" onmouseover="showTip(event, 'fs45', 138)" class="i">Location</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs47', 139)" onmouseover="showTip(event, 'fs47', 139)" class="i">nextLoc</span>) <span onmouseout="hideTip(event, 'fs42', 140)" onmouseover="showTip(event, 'fs42', 140)" class="i">cells</span> 
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs39', 141)" onmouseover="showTip(event, 'fs39', 141)" class="f">ligand</span> <span onmouseout="hideTip(event, 'fs43', 142)" onmouseover="showTip(event, 'fs43', 142)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 143)" onmouseover="showTip(event, 'fs45', 143)" class="i">Location</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 144)" onmouseover="showTip(event, 'fs13', 144)" class="p">Ras</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs43', 145)" onmouseover="showTip(event, 'fs43', 145)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 146)" onmouseover="showTip(event, 'fs52', 146)" class="i">Marker</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs17', 147)" onmouseover="showTip(event, 'fs17', 147)" class="p">Grow</span>
        <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs39', 148)" onmouseover="showTip(event, 'fs39', 148)" class="f">ligand</span> <span onmouseout="hideTip(event, 'fs43', 149)" onmouseover="showTip(event, 'fs43', 149)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 150)" onmouseover="showTip(event, 'fs45', 150)" class="i">Location</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 151)" onmouseover="showTip(event, 'fs12', 151)" class="p">Notch</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs43', 152)" onmouseover="showTip(event, 'fs43', 152)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 153)" onmouseover="showTip(event, 'fs52', 153)" class="i">Marker</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs18', 154)" onmouseover="showTip(event, 'fs18', 154)" class="p">Stopped</span>
    
    <span class="c">/// This function is called by the simulation engine. It performs the actions </span>
    <span class="c">/// described by the markers decided by the &#39;setMarkers&#39; function in an earlier phase of</span>
    <span class="c">/// the simulation on a cell.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 155)" onmouseover="showTip(event, 'fs53', 155)" class="f">react</span> (<span onmouseout="hideTip(event, 'fs54', 156)" onmouseover="showTip(event, 'fs54', 156)" class="i">step</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs55', 157)" onmouseover="showTip(event, 'fs55', 157)" class="t">float</span>) (<span onmouseout="hideTip(event, 'fs43', 158)" onmouseover="showTip(event, 'fs43', 158)" class="i">cell</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs21', 159)" onmouseover="showTip(event, 'fs21', 159)" class="t">Cell</span>) <span class="o">=</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs43', 160)" onmouseover="showTip(event, 'fs43', 160)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 161)" onmouseover="showTip(event, 'fs52', 161)" class="i">Marker</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 162)" onmouseover="showTip(event, 'fs16', 162)" class="p">Move</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs43', 163)" onmouseover="showTip(event, 'fs43', 163)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 164)" onmouseover="showTip(event, 'fs56', 164)" class="f">Move</span>()
        <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs43', 165)" onmouseover="showTip(event, 'fs43', 165)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 166)" onmouseover="showTip(event, 'fs52', 166)" class="i">Marker</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 167)" onmouseover="showTip(event, 'fs17', 167)" class="p">Grow</span>  <span class="k">then</span>
                <span onmouseout="hideTip(event, 'fs43', 168)" onmouseover="showTip(event, 'fs43', 168)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 169)" onmouseover="showTip(event, 'fs57', 169)" class="f">Grow</span>(<span onmouseout="hideTip(event, 'fs54', 170)" onmouseover="showTip(event, 'fs54', 170)" class="i">step</span>)
    
    
    <span class="c">/// This function is called by the simulation engine. It defines the direction of a cell </span>
    <span class="c">/// according to its location relative to the ligands.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 171)" onmouseover="showTip(event, 'fs58', 171)" class="f">cellDirection</span> (<span onmouseout="hideTip(event, 'fs43', 172)" onmouseover="showTip(event, 'fs43', 172)" class="i">cell</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs21', 173)" onmouseover="showTip(event, 'fs21', 173)" class="t">Cell</span>) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 174)" onmouseover="showTip(event, 'fs9', 174)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs43', 175)" onmouseover="showTip(event, 'fs43', 175)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 176)" onmouseover="showTip(event, 'fs45', 176)" class="i">Location</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 177)" onmouseover="showTip(event, 'fs5', 177)" class="i">x</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 178)" onmouseover="showTip(event, 'fs10', 178)" class="i">y</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs43', 179)" onmouseover="showTip(event, 'fs43', 179)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 180)" onmouseover="showTip(event, 'fs45', 180)" class="i">Location</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 181)" onmouseover="showTip(event, 'fs7', 181)" class="i">y</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs59', 182)" onmouseover="showTip(event, 'fs59', 182)" class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 183)" onmouseover="showTip(event, 'fs8', 183)" class="f">Point</span>(<span onmouseout="hideTip(event, 'fs9', 184)" onmouseover="showTip(event, 'fs9', 184)" class="i">x</span><span class="o">+</span><span class="n">5</span>,<span onmouseout="hideTip(event, 'fs10', 185)" onmouseover="showTip(event, 'fs10', 185)" class="i">y</span>)
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 186)" onmouseover="showTip(event, 'fs60', 186)" class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 187)" onmouseover="showTip(event, 'fs8', 187)" class="f">Point</span>(<span onmouseout="hideTip(event, 'fs9', 188)" onmouseover="showTip(event, 'fs9', 188)" class="i">x</span><span class="o">-</span><span class="n">5</span>,<span onmouseout="hideTip(event, 'fs10', 189)" onmouseover="showTip(event, 'fs10', 189)" class="i">y</span>)
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs39', 190)" onmouseover="showTip(event, 'fs39', 190)" class="f">ligand</span> <span onmouseout="hideTip(event, 'fs43', 191)" onmouseover="showTip(event, 'fs43', 191)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 192)" onmouseover="showTip(event, 'fs45', 192)" class="i">Location</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 193)" onmouseover="showTip(event, 'fs14', 193)" class="p">NoLigand</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs39', 194)" onmouseover="showTip(event, 'fs39', 194)" class="f">ligand</span> <span onmouseout="hideTip(event, 'fs59', 195)" onmouseover="showTip(event, 'fs59', 195)" class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 196)" onmouseover="showTip(event, 'fs14', 196)" class="p">NoLigand</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs39', 197)" onmouseover="showTip(event, 'fs39', 197)" class="f">ligand</span> <span onmouseout="hideTip(event, 'fs60', 198)" onmouseover="showTip(event, 'fs60', 198)" class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 199)" onmouseover="showTip(event, 'fs14', 199)" class="p">NoLigand</span> <span class="k">then</span>
        <span class="c">// If the cell is located with equal distance to the ligand on the left and the ligand on the right, the direction is chosen at random.</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs61', 200)" onmouseover="showTip(event, 'fs61', 200)" class="i">random</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 201)" onmouseover="showTip(event, 'fs1', 201)" class="i">randomGenerator</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 202)" onmouseover="showTip(event, 'fs62', 202)" class="f">Next</span>(<span class="n">0</span>,<span class="n">3</span>)
            <span onmouseout="hideTip(event, 'fs43', 203)" onmouseover="showTip(event, 'fs43', 203)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 204)" onmouseover="showTip(event, 'fs46', 204)" class="i">Direction</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs61', 205)" onmouseover="showTip(event, 'fs61', 205)" class="i">random</span> <span class="o">-</span> <span class="n">1</span>
        <span class="k">else</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs43', 206)" onmouseover="showTip(event, 'fs43', 206)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 207)" onmouseover="showTip(event, 'fs46', 207)" class="i">Direction</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span>
        <span class="c">// Else if the cell&#39;s direction hasn&#39;t been set yet, it will move towards the closest ligand.</span>
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs39', 208)" onmouseover="showTip(event, 'fs39', 208)" class="f">ligand</span> <span onmouseout="hideTip(event, 'fs59', 209)" onmouseover="showTip(event, 'fs59', 209)" class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 210)" onmouseover="showTip(event, 'fs12', 210)" class="p">Notch</span> <span class="o">||</span> <span onmouseout="hideTip(event, 'fs39', 211)" onmouseover="showTip(event, 'fs39', 211)" class="f">ligand</span> <span onmouseout="hideTip(event, 'fs59', 212)" onmouseover="showTip(event, 'fs59', 212)" class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 213)" onmouseover="showTip(event, 'fs13', 213)" class="p">Ras</span> <span class="k">then</span>
                <span onmouseout="hideTip(event, 'fs43', 214)" onmouseover="showTip(event, 'fs43', 214)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 215)" onmouseover="showTip(event, 'fs46', 215)" class="i">Direction</span> <span class="o">&lt;-</span> <span class="n">1</span>
            <span class="k">else</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs39', 216)" onmouseover="showTip(event, 'fs39', 216)" class="f">ligand</span> <span onmouseout="hideTip(event, 'fs60', 217)" onmouseover="showTip(event, 'fs60', 217)" class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 218)" onmouseover="showTip(event, 'fs12', 218)" class="p">Notch</span> <span class="o">||</span> <span onmouseout="hideTip(event, 'fs39', 219)" onmouseover="showTip(event, 'fs39', 219)" class="f">ligand</span> <span onmouseout="hideTip(event, 'fs60', 220)" onmouseover="showTip(event, 'fs60', 220)" class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 221)" onmouseover="showTip(event, 'fs13', 221)" class="p">Ras</span> <span class="k">then</span>
                <span onmouseout="hideTip(event, 'fs43', 222)" onmouseover="showTip(event, 'fs43', 222)" class="i">cell</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 223)" onmouseover="showTip(event, 'fs46', 223)" class="i">Direction</span> <span class="o">&lt;-</span> <span class="o">-</span><span class="n">1</span>
    
    <span class="c">/// This function is called by the simulation engine. It lets a cell divide if the location</span>
    <span class="c">/// to its left or its right is free, it places the new daughter cell in the free space</span>
    <span class="c">/// and it resets the division timer of a cell that has just divided. If the neighbouring </span>
    <span class="c">/// locations aren&#39;t free, the function does nothing so that the cell can try to divide </span>
    <span class="c">/// again at the next simulation step. The function returns the new cell.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 224)" onmouseover="showTip(event, 'fs63', 224)" class="f">cellDivision</span> (<span onmouseout="hideTip(event, 'fs42', 225)" onmouseover="showTip(event, 'fs42', 225)" class="i">cells</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs21', 226)" onmouseover="showTip(event, 'fs21', 226)" class="t">Cell</span>[]) (<span onmouseout="hideTip(event, 'fs43', 227)" onmouseover="showTip(event, 'fs43', 227)" class="i">cell</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs21', 228)" onmouseover="showTip(event, 'fs21', 228)" class="t">Cell</span>) <span class="o">=</span> [| |]
    
    <span class="c">/// This function is called by the simulation engine. It lets a cell die if would</span>
    <span class="c">/// move from an area without ligand to an area with Ras activity, but the location </span>
    <span class="c">/// is occupied.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs64', 229)" onmouseover="showTip(event, 'fs64', 229)" class="f">cellDeath</span> (<span onmouseout="hideTip(event, 'fs43', 230)" onmouseover="showTip(event, 'fs43', 230)" class="i">cell</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs21', 231)" onmouseover="showTip(event, 'fs21', 231)" class="t">Cell</span>) <span class="o">=</span> () 

<span class="c">// Now create an HTML5 Canvas element to visualize the scene in the HTML graphics pane</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs65', 232)" onmouseover="showTip(event, 'fs65', 232)" class="i">width</span>, <span onmouseout="hideTip(event, 'fs66', 233)" onmouseover="showTip(event, 'fs66', 233)" class="i">height</span> <span class="o">=</span> <span class="n">1000</span>, <span class="n">1000</span>
<span class="i">TryFSharp</span><span class="o">.</span><span class="i">Canvas</span><span class="o">.</span><span class="i">Show</span>()
<span class="i">TryFSharp</span><span class="o">.</span><span class="i">Canvas</span><span class="o">.</span><span class="i">RunJavaScript</span> (<span onmouseout="hideTip(event, 'fs67', 234)" onmouseover="showTip(event, 'fs67', 234)" class="i">sprintf</span> <span class="s">@&quot;</span>
<span class="s">(function (self) {</span>
<span class="s">    var canv = document.getElementById(&#39;canvas1&#39;);</span>
<span class="s">    if (canv == undefined) {</span>
<span class="s">        canv = document.createElement(&#39;canvas&#39;);</span>
<span class="s">        if (canv.getContext) {</span>
<span class="s">            canv.id = &#39;canvas1&#39;;</span>
<span class="s">            canv.width = %A;</span>
<span class="s">            canv.height = %A;</span>
<span class="s">            document.body.appendChild(canv);</span>
<span class="s">        } else {</span>
<span class="s">            alert(&#39;Your browser does not seem to support HTML5 Canvas.&#39;);</span>
<span class="s">        };</span>
<span class="s">    };</span>
<span class="s">    var ctx = canv.getContext(&#39;2d&#39;);</span>
<span class="s">    ctx.scale(2.0,2.0); </span>
<span class="s">           </span>
<span class="s">    self.render_wall = function() {</span>
<span class="s">            var start,stop,range,color;</span>
<span class="s">            ctx.clearRect(0,0,%A,%A); </span>
<span class="s">            start=0; stop=10; range=stop-start; color=&#39;pink&#39;;</span>
<span class="s">            ctx.fillStyle = color; ctx.fillRect(start,0,range,50);</span>
<span class="s">            start=20; stop=30; range=stop-start; color=&#39;brown&#39;;</span>
<span class="s">            ctx.fillStyle = color; ctx.fillRect(start,0,range,50);</span>
<span class="s">            start=40; stop=50; range=stop-start; color=&#39;pink&#39;;</span>
<span class="s">            ctx.fillStyle = color; ctx.fillRect(start,0,range,50);</span>
<span class="s">            start=60; stop=70; range=stop-start; color=&#39;brown&#39;;</span>
<span class="s">            ctx.fillStyle = color; ctx.fillRect(start,0,range,50);</span>
<span class="s">            start=80; stop=90; range=stop-start; color=&#39;pink&#39;;  </span>
<span class="s">            ctx.fillStyle = color; ctx.fillRect(start,0,range,50);</span>
<span class="s">            ctx.fill();             </span>
<span class="s">        };</span>
<span class="s">        </span>
<span class="s">    self.render_cell = function(pos_x,pos_y,size,color) {</span>
<span class="s">        ctx.beginPath();</span>
<span class="s">        ctx.arc(pos_x,pos_y,size,0,2*Math.PI);</span>
<span class="s">        ctx.fillStyle=color;</span>
<span class="s">        ctx.fill();</span>
<span class="s">        ctx.strokeStyle=color;</span>
<span class="s">        ctx.stroke(); </span>
<span class="s">    };</span>
<span class="s">    return self;</span>
<span class="s">}(window.CellSim = window.CellSim || {}));</span>
<span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs65', 235)" onmouseover="showTip(event, 'fs65', 235)" class="i">width</span> <span onmouseout="hideTip(event, 'fs66', 236)" onmouseover="showTip(event, 'fs66', 236)" class="i">height</span> <span onmouseout="hideTip(event, 'fs65', 237)" onmouseover="showTip(event, 'fs65', 237)" class="i">width</span> <span onmouseout="hideTip(event, 'fs66', 238)" onmouseover="showTip(event, 'fs66', 238)" class="i">height</span>)

<span class="c">// Export JS to F#</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs68', 239)" onmouseover="showTip(event, 'fs68', 239)" class="i">r_cell</span> <span class="o">=</span> <span class="i">TryFSharp</span><span class="o">.</span><span class="i">Canvas</span><span class="o">.</span><span class="i">JavaScriptFunction</span>(<span class="s">&quot;CellSim.render_cell&quot;</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs69', 240)" onmouseover="showTip(event, 'fs69', 240)" class="i">r_wall</span> <span class="o">=</span> <span class="i">TryFSharp</span><span class="o">.</span><span class="i">Canvas</span><span class="o">.</span><span class="i">JavaScriptFunction</span>(<span class="s">&quot;CellSim.render_wall&quot;</span>)


<span class="c">// Simulation step function. </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs70', 241)" onmouseover="showTip(event, 'fs70', 241)" class="i">timeDelta</span> <span class="o">=</span> <span class="n">0.5</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs71', 242)" onmouseover="showTip(event, 'fs71', 242)" class="f">step</span> (<span onmouseout="hideTip(event, 'fs72', 243)" onmouseover="showTip(event, 'fs72', 243)" class="i">cells</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs73', 244)" onmouseover="showTip(event, 'fs73', 244)" class="t">Cells</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 245)" onmouseover="showTip(event, 'fs74', 245)" class="t">Cell</span>[]) <span class="o">=</span>     
    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs75', 246)" onmouseover="showTip(event, 'fs75', 246)" class="i">cell</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs72', 247)" onmouseover="showTip(event, 'fs72', 247)" class="i">cells</span> <span class="k">do</span>
        <span onmouseout="hideTip(event, 'fs73', 248)" onmouseover="showTip(event, 'fs73', 248)" class="t">Cells</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs76', 249)" onmouseover="showTip(event, 'fs76', 249)" class="f">cellDirection</span> <span onmouseout="hideTip(event, 'fs75', 250)" onmouseover="showTip(event, 'fs75', 250)" class="i">cell</span>
    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs75', 251)" onmouseover="showTip(event, 'fs75', 251)" class="i">cell</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs72', 252)" onmouseover="showTip(event, 'fs72', 252)" class="i">cells</span> <span class="k">do</span>
        <span onmouseout="hideTip(event, 'fs73', 253)" onmouseover="showTip(event, 'fs73', 253)" class="t">Cells</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs77', 254)" onmouseover="showTip(event, 'fs77', 254)" class="f">setMarker</span> <span onmouseout="hideTip(event, 'fs72', 255)" onmouseover="showTip(event, 'fs72', 255)" class="i">cells</span> <span onmouseout="hideTip(event, 'fs75', 256)" onmouseover="showTip(event, 'fs75', 256)" class="i">cell</span>
    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs75', 257)" onmouseover="showTip(event, 'fs75', 257)" class="i">cell</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs72', 258)" onmouseover="showTip(event, 'fs72', 258)" class="i">cells</span> <span class="k">do</span>
        <span onmouseout="hideTip(event, 'fs73', 259)" onmouseover="showTip(event, 'fs73', 259)" class="t">Cells</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs78', 260)" onmouseover="showTip(event, 'fs78', 260)" class="f">react</span> <span onmouseout="hideTip(event, 'fs70', 261)" onmouseover="showTip(event, 'fs70', 261)" class="i">timeDelta</span> <span onmouseout="hideTip(event, 'fs75', 262)" onmouseover="showTip(event, 'fs75', 262)" class="i">cell</span>
    <span onmouseout="hideTip(event, 'fs72', 263)" onmouseover="showTip(event, 'fs72', 263)" class="i">cells</span>         
        
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs79', 264)" onmouseover="showTip(event, 'fs79', 264)" class="f">step_and_draw</span> <span onmouseout="hideTip(event, 'fs72', 265)" onmouseover="showTip(event, 'fs72', 265)" class="i">cells</span> <span class="o">=</span>          
        <span class="c">// Run a simulation step.</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs80', 266)" onmouseover="showTip(event, 'fs80', 266)" class="i">cells&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs71', 267)" onmouseover="showTip(event, 'fs71', 267)" class="f">step</span> <span onmouseout="hideTip(event, 'fs72', 268)" onmouseover="showTip(event, 'fs72', 268)" class="i">cells</span>
        <span class="c">// Render just the wall.</span>
        <span onmouseout="hideTip(event, 'fs69', 269)" onmouseover="showTip(event, 'fs69', 269)" class="i">r_wall</span><span class="o">.</span><span class="i">Invoke</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs81', 270)" onmouseover="showTip(event, 'fs81', 270)" class="f">ignore</span>
        <span class="c">// Render each cell on the wall.</span>
        <span onmouseout="hideTip(event, 'fs49', 271)" onmouseover="showTip(event, 'fs49', 271)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs82', 272)" onmouseover="showTip(event, 'fs82', 272)" class="f">iter</span>
            (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs83', 273)" onmouseover="showTip(event, 'fs83', 273)" class="i">c</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs73', 274)" onmouseover="showTip(event, 'fs73', 274)" class="t">Cells</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 275)" onmouseover="showTip(event, 'fs74', 275)" class="t">Cell</span>) <span class="k">-&gt;</span> 
                    <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs9', 276)" onmouseover="showTip(event, 'fs9', 276)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs10', 277)" onmouseover="showTip(event, 'fs10', 277)" class="i">y</span>,<span onmouseout="hideTip(event, 'fs84', 278)" onmouseover="showTip(event, 'fs84', 278)" class="i">size</span>,<span onmouseout="hideTip(event, 'fs85', 279)" onmouseover="showTip(event, 'fs85', 279)" class="i">clr</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs83', 280)" onmouseover="showTip(event, 'fs83', 280)" class="i">c</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs86', 281)" onmouseover="showTip(event, 'fs86', 281)" class="f">RenderData</span>()                
                    <span onmouseout="hideTip(event, 'fs68', 282)" onmouseover="showTip(event, 'fs68', 282)" class="i">r_cell</span><span class="o">.</span><span class="i">Invoke</span>(<span onmouseout="hideTip(event, 'fs9', 283)" onmouseover="showTip(event, 'fs9', 283)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs10', 284)" onmouseover="showTip(event, 'fs10', 284)" class="i">y</span>,<span onmouseout="hideTip(event, 'fs84', 285)" onmouseover="showTip(event, 'fs84', 285)" class="i">size</span>,<span onmouseout="hideTip(event, 'fs85', 286)" onmouseover="showTip(event, 'fs85', 286)" class="i">clr</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs81', 287)" onmouseover="showTip(event, 'fs81', 287)" class="f">ignore</span>)
            <span onmouseout="hideTip(event, 'fs80', 288)" onmouseover="showTip(event, 'fs80', 288)" class="i">cells&#39;</span> 
        <span onmouseout="hideTip(event, 'fs80', 289)" onmouseover="showTip(event, 'fs80', 289)" class="i">cells&#39;</span> 

<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs87', 290)" onmouseover="showTip(event, 'fs87', 290)" class="f">run_steps</span> <span onmouseout="hideTip(event, 'fs88', 291)" onmouseover="showTip(event, 'fs88', 291)" class="i">num_of_steps</span> <span onmouseout="hideTip(event, 'fs89', 292)" onmouseover="showTip(event, 'fs89', 292)" class="f">step</span> <span onmouseout="hideTip(event, 'fs90', 293)" onmouseover="showTip(event, 'fs90', 293)" class="i">state</span> <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs88', 294)" onmouseover="showTip(event, 'fs88', 294)" class="i">num_of_steps</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs90', 295)" onmouseover="showTip(event, 'fs90', 295)" class="i">state</span>
    <span class="k">else</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs91', 296)" onmouseover="showTip(event, 'fs91', 296)" class="i">state&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs89', 297)" onmouseover="showTip(event, 'fs89', 297)" class="f">step</span> <span onmouseout="hideTip(event, 'fs90', 298)" onmouseover="showTip(event, 'fs90', 298)" class="i">state</span>
        <span onmouseout="hideTip(event, 'fs87', 299)" onmouseover="showTip(event, 'fs87', 299)" class="f">run_steps</span> (<span onmouseout="hideTip(event, 'fs88', 300)" onmouseover="showTip(event, 'fs88', 300)" class="i">num_of_steps</span> <span class="o">-</span> <span class="n">1</span>) <span onmouseout="hideTip(event, 'fs89', 301)" onmouseover="showTip(event, 'fs89', 301)" class="f">step</span> <span onmouseout="hideTip(event, 'fs91', 302)" onmouseover="showTip(event, 'fs91', 302)" class="i">state&#39;</span>

<span class="c">// Initial simulation state, </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs92', 303)" onmouseover="showTip(event, 'fs92', 303)" class="f">mk_initial_cells</span> _ <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs93', 304)" onmouseover="showTip(event, 'fs93', 304)" class="f">start_cells</span> (<span onmouseout="hideTip(event, 'fs9', 305)" onmouseover="showTip(event, 'fs9', 305)" class="i">x</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 306)" onmouseover="showTip(event, 'fs6', 306)" class="t">int</span>) <span class="o">=</span> [| <span class="k">for</span> <span onmouseout="hideTip(event, 'fs10', 307)" onmouseover="showTip(event, 'fs10', 307)" class="i">y</span> <span class="k">in</span> <span class="n">0</span> <span class="o">..</span> <span class="n">9</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs73', 308)" onmouseover="showTip(event, 'fs73', 308)" class="t">Cells</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 309)" onmouseover="showTip(event, 'fs74', 309)" class="t">Cell</span>(<span onmouseout="hideTip(event, 'fs9', 310)" onmouseover="showTip(event, 'fs9', 310)" class="i">x</span>,<span class="n">2</span><span class="o">+</span><span class="n">4</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs10', 311)" onmouseover="showTip(event, 'fs10', 311)" class="i">y</span>) |]
    [| <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs93', 312)" onmouseover="showTip(event, 'fs93', 312)" class="f">start_cells</span> <span class="n">15</span>
       <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs93', 313)" onmouseover="showTip(event, 'fs93', 313)" class="f">start_cells</span> <span class="n">35</span>
       <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs93', 314)" onmouseover="showTip(event, 'fs93', 314)" class="f">start_cells</span> <span class="n">55</span>
       <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs93', 315)" onmouseover="showTip(event, 'fs93', 315)" class="f">start_cells</span> <span class="n">75</span> |]
       

<span class="c">/// Run the simulation </span>
<span class="c">// Make the cells </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs94', 316)" onmouseover="showTip(event, 'fs94', 316)" class="i">c0</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs92', 317)" onmouseover="showTip(event, 'fs92', 317)" class="f">mk_initial_cells</span> ()
<span class="c">// Render the activity wall. </span>
<span onmouseout="hideTip(event, 'fs69', 318)" onmouseover="showTip(event, 'fs69', 318)" class="i">r_wall</span><span class="o">.</span><span class="i">Invoke</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs81', 319)" onmouseover="showTip(event, 'fs81', 319)" class="f">ignore</span>
<span class="c">// Run 7 steps         </span>
<span onmouseout="hideTip(event, 'fs87', 320)" onmouseover="showTip(event, 'fs87', 320)" class="f">run_steps</span> <span class="n">7</span> <span onmouseout="hideTip(event, 'fs79', 321)" onmouseover="showTip(event, 'fs79', 321)" class="f">step_and_draw</span> <span onmouseout="hideTip(event, 'fs94', 322)" onmouseover="showTip(event, 'fs94', 322)" class="i">c0</span>         
    
    
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val randomGenerator : System.Random<br /><br />Full name: Script.Cells.randomGenerator<br /><em><br /><br />&#160;Creates a random number generator</em></div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">Multiple items<br />type Random =<br />&#160;&#160;new : unit -&gt; Random + 1 overload<br />&#160;&#160;member Next : unit -&gt; int + 2 overloads<br />&#160;&#160;member NextBytes : buffer:byte[] -&gt; unit<br />&#160;&#160;member NextDouble : unit -&gt; float<br /><br />Full name: System.Random<br /><br />--------------------<br />System.Random() : unit<br />System.Random(Seed: int) : unit</div>
<div class="tip" id="fs4">type Point =<br />&#160;&#160;{x: int;<br />&#160;&#160;&#160;y: int;}<br /><br />Full name: Script.Cells.Point<br /><em><br /><br />&#160;Represents a point (x,y) in the model with coordinates on an integer grid</em></div>
<div class="tip" id="fs5">Point.x: int</div>
<div class="tip" id="fs6">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs7">Point.y: int</div>
<div class="tip" id="fs8">Multiple items<br />val Point : x:int * y:int -&gt; Point<br /><br />Full name: Script.Cells.Point<br /><em><br /><br />&#160;Build a point with coordinates x and y</em><br /><br />--------------------<br />type Point =<br />&#160;&#160;{x: int;<br />&#160;&#160;&#160;y: int;}<br /><br />Full name: Script.Cells.Point<br /><em><br /><br />&#160;Represents a point (x,y) in the model with coordinates on an integer grid</em></div>
<div class="tip" id="fs9">val x : int</div>
<div class="tip" id="fs10">val y : int</div>
<div class="tip" id="fs11">type Ligand =<br />&#160;&#160;| Notch<br />&#160;&#160;| Ras<br />&#160;&#160;| NoLigand<br /><br />Full name: Script.Cells.Ligand<br /><em><br /><br />&#160;Represents ligand activity</em></div>
<div class="tip" id="fs12">union case Ligand.Notch: Ligand<br /><em><br /><br />&#160;Represents the presence of Notch protein</em></div>
<div class="tip" id="fs13">union case Ligand.Ras: Ligand<br /><em><br /><br />&#160;Represents the presence of Ras protein</em></div>
<div class="tip" id="fs14">union case Ligand.NoLigand: Ligand<br /><em><br /><br />&#160;Represents the absence of ligand activity</em></div>
<div class="tip" id="fs15">type CellMarker =<br />&#160;&#160;| Move<br />&#160;&#160;| Grow<br />&#160;&#160;| Stopped<br />&#160;&#160;| Dead<br />&#160;&#160;| Divide<br /><br />Full name: Script.Cells.CellMarker<br /><em><br /><br />Represents the state of a cell that defines how it will behave</em></div>
<div class="tip" id="fs16">union case CellMarker.Move: CellMarker<br /><em><br /><br />&#160;Represents a cell that is able to move</em></div>
<div class="tip" id="fs17">union case CellMarker.Grow: CellMarker<br /><em><br /><br />&#160;Represents a cell that is able to grow</em></div>
<div class="tip" id="fs18">union case CellMarker.Stopped: CellMarker<br /><em><br /><br />&#160;Represents a cell that stays in the place that it is in and does not do anything</em></div>
<div class="tip" id="fs19">union case CellMarker.Dead: CellMarker<br /><em><br /><br />&#160;Represents a cell that has died</em></div>
<div class="tip" id="fs20">union case CellMarker.Divide: CellMarker<br /><em><br /><br />&#160;Represents a cell that is set to divide</em></div>
<div class="tip" id="fs21">Multiple items<br />type Cell =<br />&#160;&#160;new : x:int * y:int -&gt; Cell<br />&#160;&#160;member Grow : x:float -&gt; unit<br />&#160;&#160;member Move : unit -&gt; unit<br />&#160;&#160;member RenderData : unit -&gt; int * int * float * string<br />&#160;&#160;member Direction : int<br />&#160;&#160;member Location : Point<br />&#160;&#160;member Marker : CellMarker<br />&#160;&#160;member Size : float<br />&#160;&#160;member Direction : int with set<br />&#160;&#160;member Location : Point with set<br />&#160;&#160;...<br /><br />Full name: Script.Cells.Cell<br /><em><br /><br />&#160;Defines the states and state modifications of a cell</em><br /><br />--------------------<br />new : x:int * y:int -&gt; Cell</div>
<div class="tip" id="fs22">val mutable location : Point</div>
<div class="tip" id="fs23">val mutable size : float</div>
<div class="tip" id="fs24">val mutable marker : CellMarker</div>
<div class="tip" id="fs25">val mutable direction : int</div>
<div class="tip" id="fs26">val this : Cell</div>
<div class="tip" id="fs27">member Cell.Location : Point with set<br /><br />Full name: Script.Cells.Cell.Location</div>
<div class="tip" id="fs28">val set : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.set</div>
<div class="tip" id="fs29">val x : Point</div>
<div class="tip" id="fs30">member Cell.Marker : CellMarker with set<br /><br />Full name: Script.Cells.Cell.Marker</div>
<div class="tip" id="fs31">val x : CellMarker</div>
<div class="tip" id="fs32">member Cell.Direction : int with set<br /><br />Full name: Script.Cells.Cell.Direction</div>
<div class="tip" id="fs33">member Cell.Size : float with set<br /><br />Full name: Script.Cells.Cell.Size</div>
<div class="tip" id="fs34">val x : float</div>
<div class="tip" id="fs35">member Cell.Move : unit -&gt; unit<br /><br />Full name: Script.Cells.Cell.Move</div>
<div class="tip" id="fs36">member Cell.Grow : x:float -&gt; unit<br /><br />Full name: Script.Cells.Cell.Grow</div>
<div class="tip" id="fs37">member Cell.RenderData : unit -&gt; int * int * float * string<br /><br />Full name: Script.Cells.Cell.RenderData</div>
<div class="tip" id="fs38">val color : string</div>
<div class="tip" id="fs39">val ligand : p:Point -&gt; Ligand<br /><br />Full name: Script.Cells.ligand<br /><em><br /><br />&#160;Computes the ligand activity in location p.</em></div>
<div class="tip" id="fs40">val p : Point</div>
<div class="tip" id="fs41">val setMarker : cells:Cell [] -&gt; cell:Cell -&gt; unit<br /><br />Full name: Script.Cells.setMarker<br /><em><br /><br />&#160;This function is called by the simulation engine. It sets the marker of a cell according<br />&#160;to the ligand activity at its location and in part B depending its neighbour and the ligand <br />&#160;activity at its next location.</em></div>
<div class="tip" id="fs42">val cells : Cell []</div>
<div class="tip" id="fs43">val cell : Cell</div>
<div class="tip" id="fs44">val nextX : int</div>
<div class="tip" id="fs45">property Cell.Location: Point</div>
<div class="tip" id="fs46">property Cell.Direction: int</div>
<div class="tip" id="fs47">val nextLoc : Point</div>
<div class="tip" id="fs48">val neighbour : Cell []</div>
<div class="tip" id="fs49">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs50">val filter : predicate:(&#39;T -&gt; bool) -&gt; array:&#39;T [] -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.filter</div>
<div class="tip" id="fs51">val c : Cell</div>
<div class="tip" id="fs52">property Cell.Marker: CellMarker</div>
<div class="tip" id="fs53">val react : step:float -&gt; cell:Cell -&gt; unit<br /><br />Full name: Script.Cells.react<br /><em><br /><br />&#160;This function is called by the simulation engine. It performs the actions <br />&#160;described by the markers decided by the &#39;setMarkers&#39; function in an earlier phase of<br />&#160;the simulation on a cell.</em></div>
<div class="tip" id="fs54">val step : float</div>
<div class="tip" id="fs55">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = System.Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs56">member Cell.Move : unit -&gt; unit</div>
<div class="tip" id="fs57">member Cell.Grow : x:float -&gt; unit</div>
<div class="tip" id="fs58">val cellDirection : cell:Cell -&gt; unit<br /><br />Full name: Script.Cells.cellDirection<br /><em><br /><br />&#160;This function is called by the simulation engine. It defines the direction of a cell <br />&#160;according to its location relative to the ligands.</em></div>
<div class="tip" id="fs59">val right : Point</div>
<div class="tip" id="fs60">val left : Point</div>
<div class="tip" id="fs61">val random : int</div>
<div class="tip" id="fs62">System.Random.Next() : int<br />System.Random.Next(maxValue: int) : int<br />System.Random.Next(minValue: int, maxValue: int) : int</div>
<div class="tip" id="fs63">val cellDivision : cells:Cell [] -&gt; cell:Cell -&gt; &#39;a []<br /><br />Full name: Script.Cells.cellDivision<br /><em><br /><br />&#160;This function is called by the simulation engine. It lets a cell divide if the location<br />&#160;to its left or its right is free, it places the new daughter cell in the free space<br />&#160;and it resets the division timer of a cell that has just divided. If the neighbouring <br />&#160;locations aren&#39;t free, the function does nothing so that the cell can try to divide <br />&#160;again at the next simulation step. The function returns the new cell.</em></div>
<div class="tip" id="fs64">val cellDeath : cell:Cell -&gt; unit<br /><br />Full name: Script.Cells.cellDeath<br /><em><br /><br />&#160;This function is called by the simulation engine. It lets a cell die if would<br />&#160;move from an area without ligand to an area with Ras activity, but the location <br />&#160;is occupied.</em></div>
<div class="tip" id="fs65">val width : int<br /><br />Full name: Script.width</div>
<div class="tip" id="fs66">val height : int<br /><br />Full name: Script.height</div>
<div class="tip" id="fs67">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs68">val r_cell : obj<br /><br />Full name: Script.r_cell</div>
<div class="tip" id="fs69">val r_wall : obj<br /><br />Full name: Script.r_wall</div>
<div class="tip" id="fs70">val timeDelta : float<br /><br />Full name: Script.timeDelta</div>
<div class="tip" id="fs71">val step : cells:Cells.Cell [] -&gt; Cells.Cell []<br /><br />Full name: Script.step</div>
<div class="tip" id="fs72">val cells : Cells.Cell []</div>
<div class="tip" id="fs73">module Cells<br /><br />from Script<br /><em><br /><br />&#160;Defines the properties of cells and functions describing their behaviour</em></div>
<div class="tip" id="fs74">Multiple items<br />type Cell =<br />&#160;&#160;new : x:int * y:int -&gt; Cell<br />&#160;&#160;member Grow : x:float -&gt; unit<br />&#160;&#160;member Move : unit -&gt; unit<br />&#160;&#160;member RenderData : unit -&gt; int * int * float * string<br />&#160;&#160;member Direction : int<br />&#160;&#160;member Location : Point<br />&#160;&#160;member Marker : CellMarker<br />&#160;&#160;member Size : float<br />&#160;&#160;member Direction : int with set<br />&#160;&#160;member Location : Point with set<br />&#160;&#160;...<br /><br />Full name: Script.Cells.Cell<br /><em><br /><br />&#160;Defines the states and state modifications of a cell</em><br /><br />--------------------<br />new : x:int * y:int -&gt; Cells.Cell</div>
<div class="tip" id="fs75">val cell : Cells.Cell</div>
<div class="tip" id="fs76">val cellDirection : cell:Cells.Cell -&gt; unit<br /><br />Full name: Script.Cells.cellDirection<br /><em><br /><br />&#160;This function is called by the simulation engine. It defines the direction of a cell <br />&#160;according to its location relative to the ligands.</em></div>
<div class="tip" id="fs77">val setMarker : cells:Cells.Cell [] -&gt; cell:Cells.Cell -&gt; unit<br /><br />Full name: Script.Cells.setMarker<br /><em><br /><br />&#160;This function is called by the simulation engine. It sets the marker of a cell according<br />&#160;to the ligand activity at its location and in part B depending its neighbour and the ligand <br />&#160;activity at its next location.</em></div>
<div class="tip" id="fs78">val react : step:float -&gt; cell:Cells.Cell -&gt; unit<br /><br />Full name: Script.Cells.react<br /><em><br /><br />&#160;This function is called by the simulation engine. It performs the actions <br />&#160;described by the markers decided by the &#39;setMarkers&#39; function in an earlier phase of<br />&#160;the simulation on a cell.</em></div>
<div class="tip" id="fs79">val step_and_draw : cells:Cells.Cell [] -&gt; Cells.Cell []<br /><br />Full name: Script.step_and_draw</div>
<div class="tip" id="fs80">val cells&#39; : Cells.Cell []</div>
<div class="tip" id="fs81">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>
<div class="tip" id="fs82">val iter : action:(&#39;T -&gt; unit) -&gt; array:&#39;T [] -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.Array.iter</div>
<div class="tip" id="fs83">val c : Cells.Cell</div>
<div class="tip" id="fs84">val size : float</div>
<div class="tip" id="fs85">val clr : string</div>
<div class="tip" id="fs86">member Cells.Cell.RenderData : unit -&gt; int * int * float * string</div>
<div class="tip" id="fs87">val run_steps : num_of_steps:int -&gt; step:(&#39;a -&gt; &#39;a) -&gt; state:&#39;a -&gt; &#39;a<br /><br />Full name: Script.run_steps</div>
<div class="tip" id="fs88">val num_of_steps : int</div>
<div class="tip" id="fs89">val step : (&#39;a -&gt; &#39;a)</div>
<div class="tip" id="fs90">val state : &#39;a</div>
<div class="tip" id="fs91">val state&#39; : &#39;a</div>
<div class="tip" id="fs92">val mk_initial_cells : &#39;a -&gt; Cells.Cell []<br /><br />Full name: Script.mk_initial_cells</div>
<div class="tip" id="fs93">val start_cells : (int -&gt; Cells.Cell [])</div>
<div class="tip" id="fs94">val c0 : Cells.Cell []<br /><br />Full name: Script.c0<br /><em><br /><br />&#160;Run the simulation </em></div>

