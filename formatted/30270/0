<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">FParsec</span> 

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">Thing</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="p">Value</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">string</span>
    | <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="p">Pair</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs2', 6)" onmouseover="showTip(event, 'fs2', 6)" class="t">Thing</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs2', 7)" onmouseover="showTip(event, 'fs2', 7)" class="t">Thing</span>

 
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="f">validVariableCharacter</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">x</span> <span class="o">=</span> [<span class="s">&#39;a&#39;</span> <span class="o">..</span> <span class="s">&#39;z&#39;</span>] <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="f">contains</span> <span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="i">x</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="f">thingParser</span>, <span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="v">thingParserImpl</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="f">createParserForwardedToRef</span>()
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 16)" onmouseover="showTip(event, 'fs13', 16)" class="f">valueParser</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="f">many1Satisfy</span> <span onmouseout="hideTip(event, 'fs6', 18)" onmouseover="showTip(event, 'fs6', 18)" class="f">validVariableCharacter</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs3', 19)" onmouseover="showTip(event, 'fs3', 19)" class="p">Value</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="f">pairParser</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 21)" onmouseover="showTip(event, 'fs10', 21)" class="f">thingParser</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="f">spaces1</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span onmouseout="hideTip(event, 'fs10', 23)" onmouseover="showTip(event, 'fs10', 23)" class="f">thingParser</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs5', 24)" onmouseover="showTip(event, 'fs5', 24)" class="p">Pair</span>

<span class="k">do</span> <span onmouseout="hideTip(event, 'fs11', 25)" onmouseover="showTip(event, 'fs11', 25)" class="v">thingParserImpl</span> <span class="o">:=</span> <span onmouseout="hideTip(event, 'fs17', 26)" onmouseover="showTip(event, 'fs17', 26)" class="f">attempt</span>(<span onmouseout="hideTip(event, 'fs15', 27)" onmouseover="showTip(event, 'fs15', 27)" class="f">pairParser</span>) <span class="o">&lt;|&gt;</span> <span onmouseout="hideTip(event, 'fs13', 28)" onmouseover="showTip(event, 'fs13', 28)" class="f">valueParser</span> <span class="c">// this results in a stackoverflowexception</span>

<span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">&quot;</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs19', 30)" onmouseover="showTip(event, 'fs19', 30)" class="f">run</span> <span onmouseout="hideTip(event, 'fs10', 31)" onmouseover="showTip(event, 'fs10', 31)" class="f">thingParser</span> <span class="s">&quot;a&quot;</span> <span class="c">// expect Value &quot;a&quot;</span>
<span onmouseout="hideTip(event, 'fs18', 32)" onmouseover="showTip(event, 'fs18', 32)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">&quot;</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs19', 33)" onmouseover="showTip(event, 'fs19', 33)" class="f">run</span> <span onmouseout="hideTip(event, 'fs10', 34)" onmouseover="showTip(event, 'fs10', 34)" class="f">thingParser</span> <span class="s">&quot;a b c&quot;</span> <span class="c">// expect Pair(a, Pair(b, c))</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace FParsec</div>
<div class="tip" id="fs2">type Thing =<br />&#160;&#160;| Value of string<br />&#160;&#160;| Pair of Thing * Thing<br /><br />Full name: Script.Thing</div>
<div class="tip" id="fs3">union case Thing.Value: string -&gt; Thing</div>
<div class="tip" id="fs4">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs5">union case Thing.Pair: Thing * Thing -&gt; Thing</div>
<div class="tip" id="fs6">val validVariableCharacter : x:char -&gt; bool<br /><br />Full name: Script.validVariableCharacter</div>
<div class="tip" id="fs7">val x : char</div>
<div class="tip" id="fs8">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs9">val contains : value:&#39;T -&gt; source:seq&lt;&#39;T&gt; -&gt; bool (requires equality)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.contains</div>
<div class="tip" id="fs10">val thingParser : Parser&lt;Thing,unit&gt;<br /><br />Full name: Script.thingParser</div>
<div class="tip" id="fs11">val thingParserImpl : Parser&lt;Thing,unit&gt; ref<br /><br />Full name: Script.thingParserImpl</div>
<div class="tip" id="fs12">val createParserForwardedToRef : unit -&gt; Parser&lt;&#39;a,&#39;u&gt; * Parser&lt;&#39;a,&#39;u&gt; ref<br /><br />Full name: FParsec.Primitives.createParserForwardedToRef</div>
<div class="tip" id="fs13">val valueParser : Parser&lt;Thing,unit&gt;<br /><br />Full name: Script.valueParser</div>
<div class="tip" id="fs14">val many1Satisfy : (char -&gt; bool) -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.many1Satisfy</div>
<div class="tip" id="fs15">val pairParser : Parser&lt;Thing,unit&gt;<br /><br />Full name: Script.pairParser</div>
<div class="tip" id="fs16">val spaces1 : Parser&lt;unit,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.spaces1</div>
<div class="tip" id="fs17">val attempt : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;a,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.attempt</div>
<div class="tip" id="fs18">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs19">val run : Parser&lt;&#39;Result,unit&gt; -&gt; string -&gt; ParserResult&lt;&#39;Result,unit&gt;<br /><br />Full name: FParsec.CharParsers.run</div>

