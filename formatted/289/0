<h2><a name="implementation" class="anchor" href="#implementation">implementation</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span class="t">Color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="p">Red</span> | <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="p">Black</span>

<span class="k">type</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">Tree</span> <span class="o">=</span> 
    | <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="p">Empty</span>
    | <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="p">Node</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">TreeNode</span>
<span class="k">and</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">TreeNode</span> <span class="o">=</span> { <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">value</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>; <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">color</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="t">Color</span>; <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="i">left</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 12)" onmouseover="showTip(event, 'fs3', 12)" class="t">Tree</span>; <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="i">right</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 14)" onmouseover="showTip(event, 'fs3', 14)" class="t">Tree</span> }

<span class="k">module</span> <span class="t">RSTree</span> <span class="o">=</span>
    
    <span class="c">/// a empty RS-Tree</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="i">empty</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 16)" onmouseover="showTip(event, 'fs3', 16)" class="t">Tree</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 17)" onmouseover="showTip(event, 'fs4', 17)" class="p">Empty</span>

    <span class="c">/// member predicate</span>
    <span class="c">/// please note: the compiler got issues if you use &#39;==&#39; on v and v&#39;</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="f">isMember</span> (<span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="i">t</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 20)" onmouseover="showTip(event, 'fs3', 20)" class="t">Tree</span>) (<span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="i">v</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="t">bool</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="i">t</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs4', 24)" onmouseover="showTip(event, 'fs4', 24)" class="p">Empty</span> <span class="k">-&gt;</span> <span class="k">false</span>
        | <span onmouseout="hideTip(event, 'fs5', 25)" onmouseover="showTip(event, 'fs5', 25)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 26)" onmouseover="showTip(event, 'fs17', 26)" class="i">v&#39;</span>; <span class="i">color</span> <span class="o">=</span> _; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 27)" onmouseover="showTip(event, 'fs18', 27)" class="i">l</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 28)" onmouseover="showTip(event, 'fs19', 28)" class="i">r</span> } <span class="k">-&gt;</span>
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs15', 29)" onmouseover="showTip(event, 'fs15', 29)" class="i">v</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs17', 30)" onmouseover="showTip(event, 'fs17', 30)" class="i">v&#39;</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs13', 31)" onmouseover="showTip(event, 'fs13', 31)" class="f">isMember</span> <span onmouseout="hideTip(event, 'fs18', 32)" onmouseover="showTip(event, 'fs18', 32)" class="i">l</span> <span onmouseout="hideTip(event, 'fs15', 33)" onmouseover="showTip(event, 'fs15', 33)" class="i">v</span>
            <span class="k">else</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs15', 34)" onmouseover="showTip(event, 'fs15', 34)" class="i">v</span> <span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs17', 35)" onmouseover="showTip(event, 'fs17', 35)" class="i">v&#39;</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs13', 36)" onmouseover="showTip(event, 'fs13', 36)" class="f">isMember</span> <span onmouseout="hideTip(event, 'fs19', 37)" onmouseover="showTip(event, 'fs19', 37)" class="i">r</span> <span onmouseout="hideTip(event, 'fs15', 38)" onmouseover="showTip(event, 'fs15', 38)" class="i">v</span>
            <span class="k">else</span> <span class="k">true</span>

    <span class="c">/// inserts a new Element</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 39)" onmouseover="showTip(event, 'fs20', 39)" class="f">insert</span> (<span onmouseout="hideTip(event, 'fs21', 40)" onmouseover="showTip(event, 'fs21', 40)" class="i">x</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>) (<span onmouseout="hideTip(event, 'fs14', 41)" onmouseover="showTip(event, 'fs14', 41)" class="i">t</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 42)" onmouseover="showTip(event, 'fs3', 42)" class="t">Tree</span>) <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 43)" onmouseover="showTip(event, 'fs3', 43)" class="t">Tree</span> <span class="o">=</span>
        <span class="c">// force resulting node&#39;s color to be black</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 44)" onmouseover="showTip(event, 'fs22', 44)" class="f">makeBlack</span> <span class="o">=</span> <span class="k">function</span>
            | <span onmouseout="hideTip(event, 'fs5', 45)" onmouseover="showTip(event, 'fs5', 45)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 46)" onmouseover="showTip(event, 'fs23', 46)" class="i">y</span>; <span class="i">color</span> <span class="o">=</span> _; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 47)" onmouseover="showTip(event, 'fs24', 47)" class="i">a</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 48)" onmouseover="showTip(event, 'fs25', 48)" class="i">b</span>} <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 49)" onmouseover="showTip(event, 'fs5', 49)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 50)" onmouseover="showTip(event, 'fs23', 50)" class="i">y</span>; <span class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 51)" onmouseover="showTip(event, 'fs2', 51)" class="p">Black</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 52)" onmouseover="showTip(event, 'fs24', 52)" class="i">a</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 53)" onmouseover="showTip(event, 'fs25', 53)" class="i">b</span> }
            | <span onmouseout="hideTip(event, 'fs4', 54)" onmouseover="showTip(event, 'fs4', 54)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs26', 55)" onmouseover="showTip(event, 'fs26', 55)" class="f">failwith</span> <span class="s">&quot;unexpected case&quot;</span>

        <span class="c">// balance the tree</span>
        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs27', 56)" onmouseover="showTip(event, 'fs27', 56)" class="f">balance</span> (<span onmouseout="hideTip(event, 'fs28', 57)" onmouseover="showTip(event, 'fs28', 57)" class="i">color</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs9', 58)" onmouseover="showTip(event, 'fs9', 58)" class="t">Color</span>) (<span onmouseout="hideTip(event, 'fs29', 59)" onmouseover="showTip(event, 'fs29', 59)" class="i">a</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 60)" onmouseover="showTip(event, 'fs3', 60)" class="t">Tree</span>) (<span onmouseout="hideTip(event, 'fs21', 61)" onmouseover="showTip(event, 'fs21', 61)" class="i">x</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>) (<span onmouseout="hideTip(event, 'fs30', 62)" onmouseover="showTip(event, 'fs30', 62)" class="i">b</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 63)" onmouseover="showTip(event, 'fs3', 63)" class="t">Tree</span>) <span class="o">=</span>
            <span class="c">// rather unreadable - see the mentioned article for details</span>
            <span class="k">match</span> (<span onmouseout="hideTip(event, 'fs28', 64)" onmouseover="showTip(event, 'fs28', 64)" class="i">color</span>, <span onmouseout="hideTip(event, 'fs29', 65)" onmouseover="showTip(event, 'fs29', 65)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs21', 66)" onmouseover="showTip(event, 'fs21', 66)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs30', 67)" onmouseover="showTip(event, 'fs30', 67)" class="i">b</span>) <span class="k">with</span>
            | (<span onmouseout="hideTip(event, 'fs2', 68)" onmouseover="showTip(event, 'fs2', 68)" class="p">Black</span>, <span onmouseout="hideTip(event, 'fs5', 69)" onmouseover="showTip(event, 'fs5', 69)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 70)" onmouseover="showTip(event, 'fs31', 70)" class="i">y</span>; <span onmouseout="hideTip(event, 'fs28', 71)" onmouseover="showTip(event, 'fs28', 71)" class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 72)" onmouseover="showTip(event, 'fs1', 72)" class="p">Red</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 73)" onmouseover="showTip(event, 'fs5', 73)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 74)" onmouseover="showTip(event, 'fs21', 74)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs28', 75)" onmouseover="showTip(event, 'fs28', 75)" class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 76)" onmouseover="showTip(event, 'fs1', 76)" class="p">Red</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 77)" onmouseover="showTip(event, 'fs29', 77)" class="i">a</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 78)" onmouseover="showTip(event, 'fs30', 78)" class="i">b</span> }; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 79)" onmouseover="showTip(event, 'fs32', 79)" class="i">c</span>}, <span onmouseout="hideTip(event, 'fs33', 80)" onmouseover="showTip(event, 'fs33', 80)" class="i">z</span>, <span onmouseout="hideTip(event, 'fs34', 81)" onmouseover="showTip(event, 'fs34', 81)" class="i">d</span>)
            | (<span onmouseout="hideTip(event, 'fs2', 82)" onmouseover="showTip(event, 'fs2', 82)" class="p">Black</span>, <span onmouseout="hideTip(event, 'fs5', 83)" onmouseover="showTip(event, 'fs5', 83)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 84)" onmouseover="showTip(event, 'fs21', 84)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs28', 85)" onmouseover="showTip(event, 'fs28', 85)" class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 86)" onmouseover="showTip(event, 'fs1', 86)" class="p">Red</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 87)" onmouseover="showTip(event, 'fs29', 87)" class="i">a</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 88)" onmouseover="showTip(event, 'fs5', 88)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 89)" onmouseover="showTip(event, 'fs31', 89)" class="i">y</span>; <span onmouseout="hideTip(event, 'fs28', 90)" onmouseover="showTip(event, 'fs28', 90)" class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 91)" onmouseover="showTip(event, 'fs1', 91)" class="p">Red</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 92)" onmouseover="showTip(event, 'fs30', 92)" class="i">b</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 93)" onmouseover="showTip(event, 'fs32', 93)" class="i">c</span> }; }, <span onmouseout="hideTip(event, 'fs33', 94)" onmouseover="showTip(event, 'fs33', 94)" class="i">z</span>, <span onmouseout="hideTip(event, 'fs34', 95)" onmouseover="showTip(event, 'fs34', 95)" class="i">d</span>)
            | (<span onmouseout="hideTip(event, 'fs2', 96)" onmouseover="showTip(event, 'fs2', 96)" class="p">Black</span>, <span onmouseout="hideTip(event, 'fs29', 97)" onmouseover="showTip(event, 'fs29', 97)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs21', 98)" onmouseover="showTip(event, 'fs21', 98)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs5', 99)" onmouseover="showTip(event, 'fs5', 99)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 100)" onmouseover="showTip(event, 'fs33', 100)" class="i">z</span>; <span onmouseout="hideTip(event, 'fs28', 101)" onmouseover="showTip(event, 'fs28', 101)" class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 102)" onmouseover="showTip(event, 'fs1', 102)" class="p">Red</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 103)" onmouseover="showTip(event, 'fs5', 103)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 104)" onmouseover="showTip(event, 'fs31', 104)" class="i">y</span>; <span onmouseout="hideTip(event, 'fs28', 105)" onmouseover="showTip(event, 'fs28', 105)" class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 106)" onmouseover="showTip(event, 'fs1', 106)" class="p">Red</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 107)" onmouseover="showTip(event, 'fs30', 107)" class="i">b</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 108)" onmouseover="showTip(event, 'fs32', 108)" class="i">c</span> }; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 109)" onmouseover="showTip(event, 'fs34', 109)" class="i">d</span>; })
            | (<span onmouseout="hideTip(event, 'fs2', 110)" onmouseover="showTip(event, 'fs2', 110)" class="p">Black</span>, <span onmouseout="hideTip(event, 'fs29', 111)" onmouseover="showTip(event, 'fs29', 111)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs21', 112)" onmouseover="showTip(event, 'fs21', 112)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs5', 113)" onmouseover="showTip(event, 'fs5', 113)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 114)" onmouseover="showTip(event, 'fs31', 114)" class="i">y</span>; <span onmouseout="hideTip(event, 'fs28', 115)" onmouseover="showTip(event, 'fs28', 115)" class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 116)" onmouseover="showTip(event, 'fs1', 116)" class="p">Red</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 117)" onmouseover="showTip(event, 'fs30', 117)" class="i">b</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 118)" onmouseover="showTip(event, 'fs5', 118)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 119)" onmouseover="showTip(event, 'fs33', 119)" class="i">z</span>; <span onmouseout="hideTip(event, 'fs28', 120)" onmouseover="showTip(event, 'fs28', 120)" class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 121)" onmouseover="showTip(event, 'fs1', 121)" class="p">Red</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 122)" onmouseover="showTip(event, 'fs32', 122)" class="i">c</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 123)" onmouseover="showTip(event, 'fs34', 123)" class="i">d</span> }; }) <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs5', 124)" onmouseover="showTip(event, 'fs5', 124)" class="p">Node</span> {  <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 125)" onmouseover="showTip(event, 'fs31', 125)" class="i">y</span>; <span onmouseout="hideTip(event, 'fs28', 126)" onmouseover="showTip(event, 'fs28', 126)" class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 127)" onmouseover="showTip(event, 'fs1', 127)" class="p">Red</span>; 
                        <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 128)" onmouseover="showTip(event, 'fs5', 128)" class="p">Node</span> {<span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 129)" onmouseover="showTip(event, 'fs21', 129)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs28', 130)" onmouseover="showTip(event, 'fs28', 130)" class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 131)" onmouseover="showTip(event, 'fs2', 131)" class="p">Black</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 132)" onmouseover="showTip(event, 'fs29', 132)" class="i">a</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 133)" onmouseover="showTip(event, 'fs30', 133)" class="i">b</span>}; 
                        <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 134)" onmouseover="showTip(event, 'fs5', 134)" class="p">Node</span> {<span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 135)" onmouseover="showTip(event, 'fs33', 135)" class="i">z</span>; <span onmouseout="hideTip(event, 'fs28', 136)" onmouseover="showTip(event, 'fs28', 136)" class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 137)" onmouseover="showTip(event, 'fs2', 137)" class="p">Black</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 138)" onmouseover="showTip(event, 'fs32', 138)" class="i">c</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 139)" onmouseover="showTip(event, 'fs34', 139)" class="i">d</span>}
                     }
            | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 140)" onmouseover="showTip(event, 'fs5', 140)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 141)" onmouseover="showTip(event, 'fs21', 141)" class="i">x</span>; <span onmouseout="hideTip(event, 'fs28', 142)" onmouseover="showTip(event, 'fs28', 142)" class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 143)" onmouseover="showTip(event, 'fs28', 143)" class="i">color</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 144)" onmouseover="showTip(event, 'fs29', 144)" class="i">a</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 145)" onmouseover="showTip(event, 'fs30', 145)" class="i">b</span> }

        <span class="c">// recursive insert</span>
        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs35', 146)" onmouseover="showTip(event, 'fs35', 146)" class="f">ins</span> <span onmouseout="hideTip(event, 'fs14', 147)" onmouseover="showTip(event, 'fs14', 147)" class="i">t</span> <span class="o">=</span>
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs14', 148)" onmouseover="showTip(event, 'fs14', 148)" class="i">t</span> <span class="k">with</span>
            <span class="c">// initialise a new node&#39;s color to red</span>
            | <span onmouseout="hideTip(event, 'fs4', 149)" onmouseover="showTip(event, 'fs4', 149)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 150)" onmouseover="showTip(event, 'fs5', 150)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 151)" onmouseover="showTip(event, 'fs21', 151)" class="i">x</span>; <span class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 152)" onmouseover="showTip(event, 'fs1', 152)" class="p">Red</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 153)" onmouseover="showTip(event, 'fs4', 153)" class="p">Empty</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 154)" onmouseover="showTip(event, 'fs4', 154)" class="p">Empty</span> }
            | <span onmouseout="hideTip(event, 'fs5', 155)" onmouseover="showTip(event, 'fs5', 155)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 156)" onmouseover="showTip(event, 'fs31', 156)" class="i">y</span>; <span class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 157)" onmouseover="showTip(event, 'fs28', 157)" class="i">color</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 158)" onmouseover="showTip(event, 'fs29', 158)" class="i">a</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 159)" onmouseover="showTip(event, 'fs30', 159)" class="i">b</span> } <span class="k">-&gt;</span>
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs21', 160)" onmouseover="showTip(event, 'fs21', 160)" class="i">x</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs31', 161)" onmouseover="showTip(event, 'fs31', 161)" class="i">y</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs27', 162)" onmouseover="showTip(event, 'fs27', 162)" class="f">balance</span> <span onmouseout="hideTip(event, 'fs28', 163)" onmouseover="showTip(event, 'fs28', 163)" class="i">color</span> (<span onmouseout="hideTip(event, 'fs35', 164)" onmouseover="showTip(event, 'fs35', 164)" class="f">ins</span> <span onmouseout="hideTip(event, 'fs29', 165)" onmouseover="showTip(event, 'fs29', 165)" class="i">a</span>) <span onmouseout="hideTip(event, 'fs31', 166)" onmouseover="showTip(event, 'fs31', 166)" class="i">y</span> <span onmouseout="hideTip(event, 'fs30', 167)" onmouseover="showTip(event, 'fs30', 167)" class="i">b</span>
                <span class="k">else</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs21', 168)" onmouseover="showTip(event, 'fs21', 168)" class="i">x</span> <span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs31', 169)" onmouseover="showTip(event, 'fs31', 169)" class="i">y</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs27', 170)" onmouseover="showTip(event, 'fs27', 170)" class="f">balance</span> <span onmouseout="hideTip(event, 'fs28', 171)" onmouseover="showTip(event, 'fs28', 171)" class="i">color</span> <span onmouseout="hideTip(event, 'fs29', 172)" onmouseover="showTip(event, 'fs29', 172)" class="i">a</span> <span onmouseout="hideTip(event, 'fs31', 173)" onmouseover="showTip(event, 'fs31', 173)" class="i">y</span> (<span onmouseout="hideTip(event, 'fs35', 174)" onmouseover="showTip(event, 'fs35', 174)" class="f">ins</span> <span onmouseout="hideTip(event, 'fs30', 175)" onmouseover="showTip(event, 'fs30', 175)" class="i">b</span>)
                <span class="k">else</span> <span onmouseout="hideTip(event, 'fs5', 176)" onmouseover="showTip(event, 'fs5', 176)" class="p">Node</span> { <span class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 177)" onmouseover="showTip(event, 'fs31', 177)" class="i">y</span>; <span onmouseout="hideTip(event, 'fs28', 178)" onmouseover="showTip(event, 'fs28', 178)" class="i">color</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 179)" onmouseover="showTip(event, 'fs28', 179)" class="i">color</span>; <span class="i">left</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 180)" onmouseover="showTip(event, 'fs29', 180)" class="i">a</span>; <span class="i">right</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 181)" onmouseover="showTip(event, 'fs30', 181)" class="i">b</span> }

        <span onmouseout="hideTip(event, 'fs22', 182)" onmouseover="showTip(event, 'fs22', 182)" class="f">makeBlack</span> (<span onmouseout="hideTip(event, 'fs35', 183)" onmouseover="showTip(event, 'fs35', 183)" class="f">ins</span> <span onmouseout="hideTip(event, 'fs14', 184)" onmouseover="showTip(event, 'fs14', 184)" class="i">t</span>)

    <span class="c">/// insert many values</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 185)" onmouseover="showTip(event, 'fs36', 185)" class="f">insertMany</span> (<span onmouseout="hideTip(event, 'fs37', 186)" onmouseover="showTip(event, 'fs37', 186)" class="i">xs</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs38', 187)" onmouseover="showTip(event, 'fs38', 187)" class="t">seq</span>) (<span onmouseout="hideTip(event, 'fs14', 188)" onmouseover="showTip(event, 'fs14', 188)" class="i">t</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 189)" onmouseover="showTip(event, 'fs3', 189)" class="t">Tree</span>) <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 190)" onmouseover="showTip(event, 'fs3', 190)" class="t">Tree</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 191)" onmouseover="showTip(event, 'fs39', 191)" class="f">switch</span> <span onmouseout="hideTip(event, 'fs40', 192)" onmouseover="showTip(event, 'fs40', 192)" class="f">f</span> <span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs41', 193)" onmouseover="showTip(event, 'fs41', 193)" class="i">y</span> <span onmouseout="hideTip(event, 'fs42', 194)" onmouseover="showTip(event, 'fs42', 194)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs40', 195)" onmouseover="showTip(event, 'fs40', 195)" class="f">f</span> <span onmouseout="hideTip(event, 'fs42', 196)" onmouseover="showTip(event, 'fs42', 196)" class="i">x</span> <span onmouseout="hideTip(event, 'fs41', 197)" onmouseover="showTip(event, 'fs41', 197)" class="i">y</span>
        <span onmouseout="hideTip(event, 'fs37', 198)" onmouseover="showTip(event, 'fs37', 198)" class="i">xs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs43', 199)" onmouseover="showTip(event, 'fs43', 199)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 200)" onmouseover="showTip(event, 'fs44', 200)" class="f">fold</span> (<span onmouseout="hideTip(event, 'fs39', 201)" onmouseover="showTip(event, 'fs39', 201)" class="f">switch</span> <span onmouseout="hideTip(event, 'fs20', 202)" onmouseover="showTip(event, 'fs20', 202)" class="f">insert</span>) <span onmouseout="hideTip(event, 'fs14', 203)" onmouseover="showTip(event, 'fs14', 203)" class="i">t</span>
</code></pre></td>
</tr>
</table>
<h2><a name="sample" class="anchor" href="#sample">sample</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs45', 204)" onmouseover="showTip(event, 'fs45', 204)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 205)" onmouseover="showTip(event, 'fs4', 205)" class="p">Empty</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs46', 206)" onmouseover="showTip(event, 'fs46', 206)" class="t">RSTree</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 207)" onmouseover="showTip(event, 'fs36', 207)" class="f">insertMany</span> [<span class="n">2</span>;<span class="n">5</span>;<span class="n">8</span>;<span class="n">7</span>;<span class="n">10</span>;<span class="n">3</span>;<span class="n">4</span>;<span class="n">1</span>;<span class="n">9</span>;<span class="n">6</span>];;
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">union case Color.Red: Color</div>
<div class="tip" id="fs2">union case Color.Black: Color</div>
<div class="tip" id="fs3">type &#39;a Tree =<br />&#160;&#160;| Empty<br />&#160;&#160;| Node of &#39;a TreeNode<br /><br />Full name: Script.Tree&lt;_&gt;</div>
<div class="tip" id="fs4">union case Tree.Empty: &#39;a Tree</div>
<div class="tip" id="fs5">union case Tree.Node: &#39;a TreeNode -&gt; &#39;a Tree</div>
<div class="tip" id="fs6">type &#39;a TreeNode =<br />&#160;&#160;{value: &#39;a;<br />&#160;&#160;&#160;color: Color;<br />&#160;&#160;&#160;left: &#39;a Tree;<br />&#160;&#160;&#160;right: &#39;a Tree;}<br /><br />Full name: Script.TreeNode&lt;_&gt;</div>
<div class="tip" id="fs7">TreeNode.value: &#39;a</div>
<div class="tip" id="fs8">TreeNode.color: Color</div>
<div class="tip" id="fs9">type Color =<br />&#160;&#160;| Red<br />&#160;&#160;| Black<br /><br />Full name: Script.Color</div>
<div class="tip" id="fs10">TreeNode.left: &#39;a Tree</div>
<div class="tip" id="fs11">TreeNode.right: &#39;a Tree</div>
<div class="tip" id="fs12">val empty : &#39;a Tree<br /><br />Full name: Script.RSTree.empty<br /><em><br /><br />&#160;a empty RS-Tree</em></div>
<div class="tip" id="fs13">val isMember : t:&#39;a Tree -&gt; v:&#39;a -&gt; bool (requires comparison)<br /><br />Full name: Script.RSTree.isMember<br /><em><br /><br />&#160;member predicate<br />&#160;please note: the compiler got issues if you use &#39;==&#39; on v and v&#39;</em></div>
<div class="tip" id="fs14">val t : &#39;a Tree (requires comparison)</div>
<div class="tip" id="fs15">val v : &#39;a (requires comparison)</div>
<div class="tip" id="fs16">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs17">val v&#39; : &#39;a (requires comparison)</div>
<div class="tip" id="fs18">val l : &#39;a Tree (requires comparison)</div>
<div class="tip" id="fs19">val r : &#39;a Tree (requires comparison)</div>
<div class="tip" id="fs20">val insert : x:&#39;a -&gt; t:&#39;a Tree -&gt; &#39;a Tree (requires comparison)<br /><br />Full name: Script.RSTree.insert<br /><em><br /><br />&#160;inserts a new Element</em></div>
<div class="tip" id="fs21">val x : &#39;a (requires comparison)</div>
<div class="tip" id="fs22">val makeBlack : (&#39;b Tree -&gt; &#39;b Tree)</div>
<div class="tip" id="fs23">val y : &#39;b</div>
<div class="tip" id="fs24">val a : &#39;b Tree</div>
<div class="tip" id="fs25">val b : &#39;b Tree</div>
<div class="tip" id="fs26">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs27">val balance : (Color -&gt; &#39;a Tree -&gt; &#39;a -&gt; &#39;a Tree -&gt; &#39;a Tree) (requires comparison)</div>
<div class="tip" id="fs28">val color : Color</div>
<div class="tip" id="fs29">val a : &#39;a Tree (requires comparison)</div>
<div class="tip" id="fs30">val b : &#39;a Tree (requires comparison)</div>
<div class="tip" id="fs31">val y : &#39;a (requires comparison)</div>
<div class="tip" id="fs32">val c : &#39;a Tree (requires comparison)</div>
<div class="tip" id="fs33">val z : &#39;a (requires comparison)</div>
<div class="tip" id="fs34">val d : &#39;a Tree (requires comparison)</div>
<div class="tip" id="fs35">val ins : (&#39;a Tree -&gt; &#39;a Tree) (requires comparison)</div>
<div class="tip" id="fs36">val insertMany : xs:seq&lt;&#39;a&gt; -&gt; t:&#39;a Tree -&gt; &#39;a Tree (requires comparison)<br /><br />Full name: Script.RSTree.insertMany<br /><em><br /><br />&#160;insert many values</em></div>
<div class="tip" id="fs37">val xs : seq&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs38">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = System.Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs39">val switch : ((&#39;b -&gt; &#39;c -&gt; &#39;d) -&gt; &#39;c -&gt; &#39;b -&gt; &#39;d)</div>
<div class="tip" id="fs40">val f : (&#39;b -&gt; &#39;c -&gt; &#39;d)</div>
<div class="tip" id="fs41">val y : &#39;c</div>
<div class="tip" id="fs42">val x : &#39;b</div>
<div class="tip" id="fs43">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs44">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.Seq.fold</div>
<div class="tip" id="fs45">val t : int Tree<br /><br />Full name: Script.t</div>
<div class="tip" id="fs46">module RSTree<br /><br />from Script</div>

