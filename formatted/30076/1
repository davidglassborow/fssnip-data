<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">phpMd5</span> (<span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">dataToHash</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">string</span>) <span class="o">=</span> 
    <span class="k">use</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">md5</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">Security</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="i">Cryptography</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="t">MD5CryptoServiceProvider</span>();
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="i">encodedBytes</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 10)" onmouseover="showTip(event, 'fs2', 10)" class="i">dataToHash</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs5', 11)" onmouseover="showTip(event, 'fs5', 11)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">Text</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="t">ASCIIEncoding</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="i">Default</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="f">GetBytes</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs4', 16)" onmouseover="showTip(event, 'fs4', 16)" class="i">md5</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="f">ComputeHash</span>
    <span onmouseout="hideTip(event, 'fs5', 18)" onmouseover="showTip(event, 'fs5', 18)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 19)" onmouseover="showTip(event, 'fs10', 19)" class="i">Text</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="i">RegularExpressions</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 21)" onmouseover="showTip(event, 'fs16', 21)" class="t">Regex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="f">Replace</span>(
        <span onmouseout="hideTip(event, 'fs5', 23)" onmouseover="showTip(event, 'fs5', 23)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 24)" onmouseover="showTip(event, 'fs18', 24)" class="t">BitConverter</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 25)" onmouseover="showTip(event, 'fs19', 25)" class="f">ToString</span>(<span onmouseout="hideTip(event, 'fs9', 26)" onmouseover="showTip(event, 'fs9', 26)" class="i">encodedBytes</span>), <span class="s">&quot;-&quot;</span>, <span class="s">&quot;&quot;</span>)<span class="o">.</span><span class="f">ToLower</span>()
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val phpMd5 : dataToHash:string -&gt; string<br /><br />Full name: Script.phpMd5</div>
<div class="tip" id="fs2">val dataToHash : string</div>
<div class="tip" id="fs3">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs4">val md5 : System.Security.Cryptography.MD5CryptoServiceProvider</div>
<div class="tip" id="fs5">namespace System</div>
<div class="tip" id="fs6">namespace System.Security</div>
<div class="tip" id="fs7">namespace System.Security.Cryptography</div>
<div class="tip" id="fs8">Multiple items<br />type MD5CryptoServiceProvider =<br />&#160;&#160;inherit MD5<br />&#160;&#160;new : unit -&gt; MD5CryptoServiceProvider<br />&#160;&#160;member Initialize : unit -&gt; unit<br /><br />Full name: System.Security.Cryptography.MD5CryptoServiceProvider<br /><br />--------------------<br />System.Security.Cryptography.MD5CryptoServiceProvider() : unit</div>
<div class="tip" id="fs9">val encodedBytes : byte []</div>
<div class="tip" id="fs10">namespace System.Text</div>
<div class="tip" id="fs11">Multiple items<br />type ASCIIEncoding =<br />&#160;&#160;inherit Encoding<br />&#160;&#160;new : unit -&gt; ASCIIEncoding<br />&#160;&#160;member GetByteCount : chars:string -&gt; int + 2 overloads<br />&#160;&#160;member GetBytes : chars:char * charCount:int * bytes:byte * byteCount:int -&gt; int + 2 overloads<br />&#160;&#160;member GetCharCount : bytes:byte * count:int -&gt; int + 1 overload<br />&#160;&#160;member GetChars : bytes:byte * byteCount:int * chars:char * charCount:int -&gt; int + 1 overload<br />&#160;&#160;member GetDecoder : unit -&gt; Decoder<br />&#160;&#160;member GetEncoder : unit -&gt; Encoder<br />&#160;&#160;member GetMaxByteCount : charCount:int -&gt; int<br />&#160;&#160;member GetMaxCharCount : byteCount:int -&gt; int<br />&#160;&#160;member GetString : bytes:byte[] * byteIndex:int * byteCount:int -&gt; string<br />&#160;&#160;...<br /><br />Full name: System.Text.ASCIIEncoding<br /><br />--------------------<br />System.Text.ASCIIEncoding() : unit</div>
<div class="tip" id="fs12">property System.Text.Encoding.Default: System.Text.Encoding</div>
<div class="tip" id="fs13">System.Text.Encoding.GetBytes(s: string) : byte []<br />System.Text.Encoding.GetBytes(chars: char []) : byte []<br />System.Text.Encoding.GetBytes(chars: char [], index: int, count: int) : byte []<br />System.Text.Encoding.GetBytes(chars: nativeptr&lt;char&gt;, charCount: int, bytes: nativeptr&lt;byte&gt;, byteCount: int) : int<br />System.Text.Encoding.GetBytes(s: string, charIndex: int, charCount: int, bytes: byte [], byteIndex: int) : int<br />System.Text.Encoding.GetBytes(chars: char [], charIndex: int, charCount: int, bytes: byte [], byteIndex: int) : int</div>
<div class="tip" id="fs14">System.Security.Cryptography.HashAlgorithm.ComputeHash(buffer: byte []) : byte []<br />System.Security.Cryptography.HashAlgorithm.ComputeHash(inputStream: System.IO.Stream) : byte []<br />System.Security.Cryptography.HashAlgorithm.ComputeHash(buffer: byte [], offset: int, count: int) : byte []</div>
<div class="tip" id="fs15">namespace System.Text.RegularExpressions</div>
<div class="tip" id="fs16">Multiple items<br />type Regex =<br />&#160;&#160;new : pattern:string -&gt; Regex + 1 overload<br />&#160;&#160;member GetGroupNames : unit -&gt; string[]<br />&#160;&#160;member GetGroupNumbers : unit -&gt; int[]<br />&#160;&#160;member GroupNameFromNumber : i:int -&gt; string<br />&#160;&#160;member GroupNumberFromName : name:string -&gt; int<br />&#160;&#160;member IsMatch : input:string -&gt; bool + 1 overload<br />&#160;&#160;member Match : input:string -&gt; Match + 2 overloads<br />&#160;&#160;member Matches : input:string -&gt; MatchCollection + 1 overload<br />&#160;&#160;member Options : RegexOptions<br />&#160;&#160;member Replace : input:string * replacement:string -&gt; string + 5 overloads<br />&#160;&#160;...<br /><br />Full name: System.Text.RegularExpressions.Regex<br /><br />--------------------<br />System.Text.RegularExpressions.Regex(pattern: string) : unit<br />System.Text.RegularExpressions.Regex(pattern: string, options: System.Text.RegularExpressions.RegexOptions) : unit</div>
<div class="tip" id="fs17">System.Text.RegularExpressions.Regex.Replace(input: string, pattern: string, evaluator: System.Text.RegularExpressions.MatchEvaluator) : string<br />System.Text.RegularExpressions.Regex.Replace(input: string, pattern: string, replacement: string) : string<br />System.Text.RegularExpressions.Regex.Replace(input: string, pattern: string, evaluator: System.Text.RegularExpressions.MatchEvaluator, options: System.Text.RegularExpressions.RegexOptions) : string<br />System.Text.RegularExpressions.Regex.Replace(input: string, pattern: string, replacement: string, options: System.Text.RegularExpressions.RegexOptions) : string</div>
<div class="tip" id="fs18">type BitConverter =<br />&#160;&#160;static val IsLittleEndian : bool<br />&#160;&#160;static member DoubleToInt64Bits : value:float -&gt; int64<br />&#160;&#160;static member GetBytes : value:bool -&gt; byte[] + 9 overloads<br />&#160;&#160;static member Int64BitsToDouble : value:int64 -&gt; float<br />&#160;&#160;static member ToBoolean : value:byte[] * startIndex:int -&gt; bool<br />&#160;&#160;static member ToChar : value:byte[] * startIndex:int -&gt; char<br />&#160;&#160;static member ToDouble : value:byte[] * startIndex:int -&gt; float<br />&#160;&#160;static member ToInt16 : value:byte[] * startIndex:int -&gt; int16<br />&#160;&#160;static member ToInt32 : value:byte[] * startIndex:int -&gt; int<br />&#160;&#160;static member ToInt64 : value:byte[] * startIndex:int -&gt; int64<br />&#160;&#160;...<br /><br />Full name: System.BitConverter</div>
<div class="tip" id="fs19">System.BitConverter.ToString(value: byte []) : string<br />System.BitConverter.ToString(value: byte [], startIndex: int) : string<br />System.BitConverter.ToString(value: byte [], startIndex: int, length: int) : string</div>

