<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
<span class="l">154: </span>
<span class="l">155: </span>
<span class="l">156: </span>
<span class="l">157: </span>
<span class="l">158: </span>
<span class="l">159: </span>
<span class="l">160: </span>
<span class="l">161: </span>
<span class="l">162: </span>
<span class="l">163: </span>
<span class="l">164: </span>
<span class="l">165: </span>
<span class="l">166: </span>
<span class="l">167: </span>
<span class="l">168: </span>
<span class="l">169: </span>
<span class="l">170: </span>
<span class="l">171: </span>
<span class="l">172: </span>
<span class="l">173: </span>
<span class="l">174: </span>
<span class="l">175: </span>
<span class="l">176: </span>
<span class="l">177: </span>
<span class="l">178: </span>
<span class="l">179: </span>
<span class="l">180: </span>
<span class="l">181: </span>
<span class="l">182: </span>
<span class="l">183: </span>
<span class="l">184: </span>
<span class="l">185: </span>
<span class="l">186: </span>
<span class="l">187: </span>
<span class="l">188: </span>
<span class="l">189: </span>
<span class="l">190: </span>
<span class="l">191: </span>
<span class="l">192: </span>
<span class="l">193: </span>
<span class="l">194: </span>
<span class="l">195: </span>
<span class="l">196: </span>
<span class="l">197: </span>
<span class="l">198: </span>
<span class="l">199: </span>
<span class="l">200: </span>
<span class="l">201: </span>
<span class="l">202: </span>
<span class="l">203: </span>
<span class="l">204: </span>
<span class="l">205: </span>
<span class="l">206: </span>
<span class="l">207: </span>
<span class="l">208: </span>
<span class="l">209: </span>
<span class="l">210: </span>
<span class="l">211: </span>
<span class="l">212: </span>
<span class="l">213: </span>
<span class="l">214: </span>
<span class="l">215: </span>
<span class="l">216: </span>
<span class="l">217: </span>
<span class="l">218: </span>
<span class="l">219: </span>
<span class="l">220: </span>
<span class="l">221: </span>
<span class="l">222: </span>
<span class="l">223: </span>
<span class="l">224: </span>
<span class="l">225: </span>
<span class="l">226: </span>
<span class="l">227: </span>
<span class="l">228: </span>
<span class="l">229: </span>
<span class="l">230: </span>
<span class="l">231: </span>
<span class="l">232: </span>
<span class="l">233: </span>
<span class="l">234: </span>
<span class="l">235: </span>
<span class="l">236: </span>
<span class="l">237: </span>
<span class="l">238: </span>
<span class="l">239: </span>
<span class="l">240: </span>
<span class="l">241: </span>
<span class="l">242: </span>
<span class="l">243: </span>
<span class="l">244: </span>
<span class="l">245: </span>
<span class="l">246: </span>
<span class="l">247: </span>
<span class="l">248: </span>
<span class="l">249: </span>
<span class="l">250: </span>
<span class="l">251: </span>
<span class="l">252: </span>
<span class="l">253: </span>
<span class="l">254: </span>
<span class="l">255: </span>
<span class="l">256: </span>
<span class="l">257: </span>
<span class="l">258: </span>
<span class="l">259: </span>
<span class="l">260: </span>
<span class="l">261: </span>
<span class="l">262: </span>
<span class="l">263: </span>
<span class="l">264: </span>
<span class="l">265: </span>
<span class="l">266: </span>
<span class="l">267: </span>
<span class="l">268: </span>
<span class="l">269: </span>
<span class="l">270: </span>
<span class="l">271: </span>
<span class="l">272: </span>
<span class="l">273: </span>
<span class="l">274: </span>
<span class="l">275: </span>
<span class="l">276: </span>
<span class="l">277: </span>
<span class="l">278: </span>
<span class="l">279: </span>
<span class="l">280: </span>
<span class="l">281: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">(*</span>

<span class="c">Functional Programming at St Matthews. </span>

<span class="c">A 1-hr crash course in functional programming. Taught, as &quot;Programming 101&quot;,</span>
<span class="c">during Science Week at St Matthews Primary School, Cambridge, UK to Years 5 </span>
<span class="c">and 6 (10-11 year olds). </span>


<span class="c">History:</span>

<span class="c">Samin Ishtiaq, 10/08/2013. </span>
<span class="c">    Camb Science Centre. Avoid duplicate names for tryfsharp. </span>
<span class="c">    </span>
<span class="c">Tomas Petricek, 30/November/2010.</span>
<span class="c">    Minor naming and indentation changes</span>
<span class="c">    (to comply with the usual formatting style)</span>
<span class="c">    </span>
<span class="c">Samin Ishtiaq, {9,10}/March/2010. </span>
<span class="c">    Dropped areas for doubling, is_even. </span>
<span class="c">    Thanks to Tim Morley for helping out. </span>

<span class="c">Samin Ishtiaq, 9/March/2009.</span>
<span class="c">    First version. </span>
<span class="c">*)</span>


<span class="c">(*</span>
<span class="c">   </span>
<span class="c">Part 1: Calculating</span>

<span class="c">Programming is calculating. We&#39;re going to begin by using F#, literally, as a</span>
<span class="c">calculator:</span>

<span class="c">1. Double-click the F# icon to start up the F# programming environment. </span>

<span class="c">2. This gives a you a new window with a prompt, &quot;&gt;&quot;. You can type </span>
<span class="c">arithmetic expressions at this prompt, like you would into any calculator.</span>

<span class="c">3. Try typing in a few expressions to see what answers you get. You have to</span>
<span class="c">end every expression with a &quot;;;&quot; and then press Enter:</span>
<span class="c">*)</span>

<span class="n">2</span><span class="o">+</span><span class="n">3</span> ;;

<span class="n">3</span><span class="o">+</span><span class="n">2</span> ;;

<span class="n">3</span><span class="o">*</span><span class="n">4</span> ;;

<span class="n">1</span><span class="o">*</span><span class="n">2</span><span class="o">*</span><span class="n">3</span><span class="o">*</span><span class="n">4</span><span class="o">*</span><span class="n">5</span> ;;

(<span class="n">4</span><span class="o">/</span><span class="n">2</span>) ;;

<span class="c">(* </span>
<span class="c">4. Try typing in other expressions to evaluate. Use brackets to get the right</span>
<span class="c">order of calculation:</span>
<span class="c">*)</span>

(<span class="n">2</span> <span class="o">+</span> <span class="n">3</span>) <span class="o">*</span> <span class="n">4</span> ;;

<span class="n">2</span> <span class="o">+</span> (<span class="n">3</span> <span class="o">*</span> <span class="n">4</span>) ;;

<span class="n">2</span> <span class="o">+</span> <span class="n">3</span> <span class="o">*</span> <span class="n">4</span> ;;


<span class="c">(*</span>
<span class="c">   </span>
<span class="c">Part 2: Variables</span>

<span class="c">1. You can give a &quot;name&quot; to a particular expression. You know about this idea</span>
<span class="c">already: in Excel spreadsheets, you might have cell A2 hold the expression</span>
<span class="c">=(2+3); you can think of &quot;A2&quot; as the name that holds the value 5.</span>

<span class="c">2. In F#, like in maths, you use &quot;let&quot; to give a name to an expression. Try</span>
<span class="c">this:</span>

<span class="c">*)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">z</span> <span class="o">=</span> <span class="n">42</span>;;

<span class="c">(* </span>
<span class="c">This binds z to 42, and you can now use z in your calculations:</span>
<span class="c">*)</span>

<span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">z</span> <span class="o">-</span> <span class="n">40</span> ;;

<span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">z</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">z</span> ;;

<span onmouseout="hideTip(event, 'fs1', 5)" onmouseover="showTip(event, 'fs1', 5)" class="i">z</span> ;;

<span class="c">(*</span>
<span class="c">In fact, you don&#39;t have to use &quot;z&quot;. You can use any word, like your own</span>
<span class="c">name:</span>
<span class="c">*)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs2', 6)" onmouseover="showTip(event, 'fs2', 6)" class="i">samin</span> <span class="o">=</span> <span class="n">42</span>;;

<span onmouseout="hideTip(event, 'fs2', 7)" onmouseover="showTip(event, 'fs2', 7)" class="i">samin</span> <span class="o">-</span> <span class="n">40</span> ;;

<span onmouseout="hideTip(event, 'fs2', 8)" onmouseover="showTip(event, 'fs2', 8)" class="i">samin</span> <span class="o">-</span> <span class="n">50</span> ;;

<span class="c">(*</span>
<span class="c">But it&#39;s always a good idea to use a name that makes sense for the</span>
<span class="c">context. For instance, if you&#39;re calculating with the length of a rectangle,</span>
<span class="c">you should use &quot;length&quot; rather than &quot;foo&quot;.</span>
<span class="c">*)</span>

<span class="c">(* </span>

<span class="c">Part 3: Doubling/Halving</span>

<span class="c">You know what doubling and halving numbers means. Say you had a number 4, </span>
<span class="c">then it&#39;s double is 8 and it&#39;s half is 2. </span>

<span class="c">*)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 9)" onmouseover="showTip(event, 'fs3', 9)" class="i">x</span> <span class="o">=</span> <span class="n">4</span> ;;

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 10)" onmouseover="showTip(event, 'fs4', 10)" class="i">doubleX</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 11)" onmouseover="showTip(event, 'fs3', 11)" class="i">x</span> <span class="o">*</span> <span class="n">2</span> ;;

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 12)" onmouseover="showTip(event, 'fs5', 12)" class="i">halfX</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 13)" onmouseover="showTip(event, 'fs3', 13)" class="i">x</span> <span class="o">/</span> <span class="n">2</span> ;;

<span class="c">(* </span>
<span class="c">Danger: function ahead</span>

<span class="c">2. The answer &quot;8&quot; is all very well for a number which is 4. But</span>
<span class="c">the function you know of that doubles the number (x*x) actually</span>
<span class="c">applies to any number. The function says &quot;give me a number and </span>
<span class="c">I&#39;ll give you back it&#39;s double&quot;, and this is how you write </span>
<span class="c">exactly that in F#:</span>
<span class="c">*)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 14)" onmouseover="showTip(event, 'fs6', 14)" class="f">double</span> <span onmouseout="hideTip(event, 'fs7', 15)" onmouseover="showTip(event, 'fs7', 15)" class="i">n</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 16)" onmouseover="showTip(event, 'fs7', 16)" class="i">n</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs7', 17)" onmouseover="showTip(event, 'fs7', 17)" class="i">n</span> ;;

<span class="c">(* </span>
<span class="c">On the left-hand side of the &quot;=&quot; sign is the &quot;give me the&quot;</span>
<span class="c">parameter. On the right-hand side, is the &quot;I&#39;ll give you back&quot;</span>
<span class="c">result.</span>

<span class="c">3. Try running this program now. Here, we use it to double various</span>
<span class="c">numbers: </span>
<span class="c">*)</span>

<span onmouseout="hideTip(event, 'fs6', 18)" onmouseover="showTip(event, 'fs6', 18)" class="f">double</span> <span class="n">3</span> ;;
<span onmouseout="hideTip(event, 'fs6', 19)" onmouseover="showTip(event, 'fs6', 19)" class="f">double</span> <span class="n">5</span> ;;

<span class="c">(*</span>

<span class="c">4. Now you have to do a bit thinking: Try writing down the function to</span>
<span class="c">cube a number by filling out the &quot;...&quot; in the definition below:</span>
<span class="c">*)</span>

<span class="c">//let cube n = ... ;;</span>

<span class="c">(* We can now use the [cube] function to generate the first 10</span>
<span class="c">cubic numbers: </span>

<span class="c">First, some wrappers to make printing easier. </span>
<span class="c">*)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 20)" onmouseover="showTip(event, 'fs8', 20)" class="f">printString</span> <span onmouseout="hideTip(event, 'fs9', 21)" onmouseover="showTip(event, 'fs9', 21)" class="i">s</span> <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs10', 22)" onmouseover="showTip(event, 'fs10', 22)" class="f">printf</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs9', 23)" onmouseover="showTip(event, 'fs9', 23)" class="i">s</span> ;;
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 24)" onmouseover="showTip(event, 'fs11', 24)" class="f">printStringNewline</span> <span onmouseout="hideTip(event, 'fs9', 25)" onmouseover="showTip(event, 'fs9', 25)" class="i">s</span> <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs12', 26)" onmouseover="showTip(event, 'fs12', 26)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs9', 27)" onmouseover="showTip(event, 'fs9', 27)" class="i">s</span> ;;
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 28)" onmouseover="showTip(event, 'fs13', 28)" class="f">printNum</span> <span onmouseout="hideTip(event, 'fs7', 29)" onmouseover="showTip(event, 'fs7', 29)" class="i">n</span> <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs10', 30)" onmouseover="showTip(event, 'fs10', 30)" class="f">printf</span> <span class="s">&quot;</span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs7', 31)" onmouseover="showTip(event, 'fs7', 31)" class="i">n</span> ;;

<span class="c">(* Now the first 12 cubic numbers. *)</span>
<span class="k">for</span> <span onmouseout="hideTip(event, 'fs14', 32)" onmouseover="showTip(event, 'fs14', 32)" class="i">y</span> <span class="o">=</span> <span class="n">1</span> <span class="k">to</span> <span class="n">12</span> <span class="k">do</span>
  <span onmouseout="hideTip(event, 'fs13', 33)" onmouseover="showTip(event, 'fs13', 33)" class="f">printNum</span> <span onmouseout="hideTip(event, 'fs14', 34)" onmouseover="showTip(event, 'fs14', 34)" class="i">y</span>
  <span onmouseout="hideTip(event, 'fs8', 35)" onmouseover="showTip(event, 'fs8', 35)" class="f">printString</span> <span class="s">&quot; * &quot;</span>
  <span onmouseout="hideTip(event, 'fs13', 36)" onmouseover="showTip(event, 'fs13', 36)" class="f">printNum</span> <span onmouseout="hideTip(event, 'fs14', 37)" onmouseover="showTip(event, 'fs14', 37)" class="i">y</span>
  <span onmouseout="hideTip(event, 'fs8', 38)" onmouseover="showTip(event, 'fs8', 38)" class="f">printString</span> <span class="s">&quot; * &quot;</span>
  <span onmouseout="hideTip(event, 'fs13', 39)" onmouseover="showTip(event, 'fs13', 39)" class="f">printNum</span> <span onmouseout="hideTip(event, 'fs14', 40)" onmouseover="showTip(event, 'fs14', 40)" class="i">y</span>
  <span onmouseout="hideTip(event, 'fs8', 41)" onmouseover="showTip(event, 'fs8', 41)" class="f">printString</span> <span class="s">&quot; = &quot;</span>
<span class="c">//  printNum (cube y)</span>
  <span onmouseout="hideTip(event, 'fs11', 42)" onmouseover="showTip(event, 'fs11', 42)" class="f">printStringNewline</span> <span class="s">&quot;&quot;</span>   ;;



<span class="c">(*</span>
<span class="c">1. You know what odd and even numbers are. Here&#39;s a function to test whether a</span>
<span class="c">number, x, is even:</span>
<span class="c">*)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 43)" onmouseover="showTip(event, 'fs15', 43)" class="f">isEven</span> <span onmouseout="hideTip(event, 'fs16', 44)" onmouseover="showTip(event, 'fs16', 44)" class="i">x</span> <span class="o">=</span>
  <span class="k">if</span> ((<span onmouseout="hideTip(event, 'fs16', 45)" onmouseover="showTip(event, 'fs16', 45)" class="i">x</span> <span class="o">%</span> <span class="n">2</span>) <span class="o">=</span> <span class="n">0</span>) <span class="k">then</span>
    <span onmouseout="hideTip(event, 'fs11', 46)" onmouseover="showTip(event, 'fs11', 46)" class="f">printStringNewline</span> <span class="s">&quot;x is even&quot;</span>
  <span class="k">else</span>
    <span onmouseout="hideTip(event, 'fs11', 47)" onmouseover="showTip(event, 'fs11', 47)" class="f">printStringNewline</span> <span class="s">&quot;x is not even&quot;</span> ;;

<span class="c">(*</span>
<span class="c">&quot;%&quot; is the &quot;remainder&quot; operation: x%y it returns the remainder after we divide</span>
<span class="c">x by y.</span>

<span class="c">The isEven function uses &quot;if-then-else&quot;, a programming language construct</span>
<span class="c">that tests a condition; if the condition holds then it does the &quot;then&quot; part of</span>
<span class="c">the program; if the condition doesn&#39;t hold, it does the &quot;else&quot; part of the</span>
<span class="c">program.</span>

<span class="c">Can you write isOdd, the function that takes a number and tests for whether</span>
<span class="c">number is odd? Think how you&#39;d modify isEven to write isOdd:</span>

<span class="c">&gt; let isOdd x   =  ...</span>
<span class="c">*)</span>

<span class="c">(*</span>
<span class="c">2. Let&#39;s write a program to generate the times tables. First, a very simple</span>
<span class="c">version, that only multiplies two numbers x and y:</span>

<span class="c">&gt; let multiply x y = ...</span>

<span class="c">To generate the times table for 4, say, we actually need to multiply 4 by 1,</span>
<span class="c">by 2, by 3,.... all the way to 12. We can do things stupidly like this:</span>

<span class="c">&gt; (multiply 4 1) ;;</span>
<span class="c">&gt; (multiply 4 2) ;;</span>
<span class="c">&gt; (multiply 4 3) ;;</span>
<span class="c">...</span>
<span class="c">&gt; (multiply 4 12) ;;</span>

<span class="c">Or we can be smart and realize that we&#39;re doing the same thing over and over</span>
<span class="c">again. In such a case, we can use a &quot;for&quot; loop to repeatedly do (almost) the</span>
<span class="c">same thing:</span>
<span class="c">*)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 48)" onmouseover="showTip(event, 'fs17', 48)" class="f">timesTable</span> <span onmouseout="hideTip(event, 'fs16', 49)" onmouseover="showTip(event, 'fs16', 49)" class="i">x</span> <span class="o">=</span>  
  <span class="k">for</span> <span onmouseout="hideTip(event, 'fs14', 50)" onmouseover="showTip(event, 'fs14', 50)" class="i">y</span> <span class="o">=</span> <span class="n">1</span> <span class="k">to</span> <span class="n">12</span> <span class="k">do</span>
    <span onmouseout="hideTip(event, 'fs13', 51)" onmouseover="showTip(event, 'fs13', 51)" class="f">printNum</span> (<span onmouseout="hideTip(event, 'fs16', 52)" onmouseover="showTip(event, 'fs16', 52)" class="i">x</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs14', 53)" onmouseover="showTip(event, 'fs14', 53)" class="i">y</span>)
    <span onmouseout="hideTip(event, 'fs11', 54)" onmouseover="showTip(event, 'fs11', 54)" class="f">printStringNewline</span> <span class="s">&quot;&quot;</span> ;;
<span class="c">(*</span>
<span class="c">Try it:</span>
<span class="c">*)</span>
<span onmouseout="hideTip(event, 'fs17', 55)" onmouseover="showTip(event, 'fs17', 55)" class="f">timesTable</span> <span class="n">4</span> ;;
<span onmouseout="hideTip(event, 'fs17', 56)" onmouseover="showTip(event, 'fs17', 56)" class="f">timesTable</span> <span class="n">7</span> ;;
<span onmouseout="hideTip(event, 'fs17', 57)" onmouseover="showTip(event, 'fs17', 57)" class="f">timesTable</span> <span class="n">100</span> ;;

<span class="c">(*</span>
<span class="c">And my favourite:</span>
<span class="c">*)</span>
<span onmouseout="hideTip(event, 'fs17', 58)" onmouseover="showTip(event, 'fs17', 58)" class="f">timesTable</span> <span class="n">0</span> ;;

<span class="c">(*</span>
<span class="c">Here&#39;s a much prettier version of timesTable:</span>
<span class="c">*)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 59)" onmouseover="showTip(event, 'fs18', 59)" class="f">timesTablePretty</span> <span onmouseout="hideTip(event, 'fs16', 60)" onmouseover="showTip(event, 'fs16', 60)" class="i">x</span> <span class="o">=</span>
  <span class="k">for</span> <span onmouseout="hideTip(event, 'fs14', 61)" onmouseover="showTip(event, 'fs14', 61)" class="i">y</span> <span class="o">=</span> <span class="n">1</span> <span class="k">to</span> <span class="n">12</span> <span class="k">do</span>
    <span onmouseout="hideTip(event, 'fs13', 62)" onmouseover="showTip(event, 'fs13', 62)" class="f">printNum</span> <span onmouseout="hideTip(event, 'fs16', 63)" onmouseover="showTip(event, 'fs16', 63)" class="i">x</span>
    <span onmouseout="hideTip(event, 'fs8', 64)" onmouseover="showTip(event, 'fs8', 64)" class="f">printString</span> <span class="s">&quot; x &quot;</span>
    <span onmouseout="hideTip(event, 'fs13', 65)" onmouseover="showTip(event, 'fs13', 65)" class="f">printNum</span> <span onmouseout="hideTip(event, 'fs14', 66)" onmouseover="showTip(event, 'fs14', 66)" class="i">y</span>
    <span onmouseout="hideTip(event, 'fs8', 67)" onmouseover="showTip(event, 'fs8', 67)" class="f">printString</span> <span class="s">&quot; = &quot;</span>
    <span onmouseout="hideTip(event, 'fs13', 68)" onmouseover="showTip(event, 'fs13', 68)" class="f">printNum</span> (<span onmouseout="hideTip(event, 'fs14', 69)" onmouseover="showTip(event, 'fs14', 69)" class="i">y</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs16', 70)" onmouseover="showTip(event, 'fs16', 70)" class="i">x</span>)
    <span onmouseout="hideTip(event, 'fs11', 71)" onmouseover="showTip(event, 'fs11', 71)" class="f">printStringNewline</span> <span class="s">&quot;&quot;</span>   ;;

<span class="c">(*</span>
<span class="c">5. Write a function to calculate the Fibonacci series. </span>

<span class="c">The n-th fibonacci number is the sum of the previous two fibonacci numbers:</span>

<span class="c">fib 0 = 0 </span>
<span class="c">fib 1 = 1</span>
<span class="c">fib n = fib n-1 + fib n-2 </span>
<span class="c">*)</span>

<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs19', 72)" onmouseover="showTip(event, 'fs19', 72)" class="f">fib</span> <span onmouseout="hideTip(event, 'fs7', 73)" onmouseover="showTip(event, 'fs7', 73)" class="i">n</span> <span class="o">=</span> 
  <span class="k">if</span> (<span onmouseout="hideTip(event, 'fs7', 74)" onmouseover="showTip(event, 'fs7', 74)" class="i">n</span><span class="o">=</span><span class="n">0</span>) <span class="k">then</span> <span class="n">0</span>
  <span class="k">else</span> <span class="k">if</span> (<span onmouseout="hideTip(event, 'fs7', 75)" onmouseover="showTip(event, 'fs7', 75)" class="i">n</span><span class="o">=</span><span class="n">1</span>) <span class="k">then</span> <span class="n">1</span>
  <span class="k">else</span> (<span onmouseout="hideTip(event, 'fs19', 76)" onmouseover="showTip(event, 'fs19', 76)" class="f">fib</span> (<span onmouseout="hideTip(event, 'fs7', 77)" onmouseover="showTip(event, 'fs7', 77)" class="i">n</span><span class="o">-</span><span class="n">1</span>)) <span class="o">+</span> (<span onmouseout="hideTip(event, 'fs19', 78)" onmouseover="showTip(event, 'fs19', 78)" class="f">fib</span> (<span onmouseout="hideTip(event, 'fs7', 79)" onmouseover="showTip(event, 'fs7', 79)" class="i">n</span><span class="o">-</span><span class="n">2</span>))
    

<span class="c">(*</span>
<span class="c"> </span>
<span class="c">Finding out more:</span>

<span class="c">F# is a programming language in the ML-tradition. Look at:</span>
<span class="c">        http://fsharp.net</span>
<span class="c">        http://caml.inria.fr</span>

<span class="c">There are lots of programming languages out there. Take a look at python,</span>
<span class="c">smalltalk, JavaScript, C, ARM Assembler. </span>

<span class="c">*)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val z : int<br /><br />Full name: Script.z</div>
<div class="tip" id="fs2">val samin : int<br /><br />Full name: Script.samin</div>
<div class="tip" id="fs3">val x : int<br /><br />Full name: Script.x</div>
<div class="tip" id="fs4">val doubleX : int<br /><br />Full name: Script.doubleX</div>
<div class="tip" id="fs5">val halfX : int<br /><br />Full name: Script.halfX</div>
<div class="tip" id="fs6">Multiple items<br />val double : n:int -&gt; int<br /><br />Full name: Script.double<br /><br />--------------------<br />type double = System.Double<br /><br />Full name: Microsoft.FSharp.Core.double</div>
<div class="tip" id="fs7">val n : int</div>
<div class="tip" id="fs8">val printString : s:string -&gt; unit<br /><br />Full name: Script.printString</div>
<div class="tip" id="fs9">val s : string</div>
<div class="tip" id="fs10">val printf : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printf</div>
<div class="tip" id="fs11">val printStringNewline : s:string -&gt; unit<br /><br />Full name: Script.printStringNewline</div>
<div class="tip" id="fs12">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs13">val printNum : n:int -&gt; unit<br /><br />Full name: Script.printNum</div>
<div class="tip" id="fs14">val y : int</div>
<div class="tip" id="fs15">val isEven : x:int -&gt; unit<br /><br />Full name: Script.isEven</div>
<div class="tip" id="fs16">val x : int</div>
<div class="tip" id="fs17">val timesTable : x:int -&gt; unit<br /><br />Full name: Script.timesTable</div>
<div class="tip" id="fs18">val timesTablePretty : x:int -&gt; unit<br /><br />Full name: Script.timesTablePretty</div>
<div class="tip" id="fs19">val fib : n:int -&gt; int<br /><br />Full name: Script.fib</div>

