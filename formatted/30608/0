<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="prep">#load</span> <span class="s">&quot;../../../../.paket/load/netstandard2.0/FParsec.fsx&quot;</span>
<span class="prep">#load</span> <span class="s">&quot;../../Utils/GeneralHelpers.fsx&quot;</span>

<span class="k">namespace</span> <span class="i">FuncIRC</span>

<span class="c">/// &lt;summary&gt;</span>
<span class="c">/// FParsec implementation to parse an IRC message string into its constituent parts</span>
<span class="c">/// &lt;/summary&gt;</span>
<span class="prep">#if</span> <span class="i">DEBUG</span>
<span class="inactive">module</span><span class="inactive"> </span><span class="inactive">MessageParserInternalsV2</span><span class="inactive"> </span><span class="inactive">=</span>
<span class="prep">#else</span>
<span class="k">module</span> <span class="k">internal</span> <span class="t">MessageParserInternalsV2</span> <span class="o">=</span>
<span class="prep">#endif</span>

    <span class="k">open</span> <span class="i">FParsec</span>
    <span class="k">open</span> <span class="i">GeneralHelpers</span>

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">UserState</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">unit</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">Parser</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="t">Parser</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span>, <span onmouseout="hideTip(event, 'fs1', 5)" onmouseover="showTip(event, 'fs1', 5)" class="i">UserState</span><span class="o">&gt;</span>

    <span class="c">// @aaa=bbb;ccc;example.com/ddd=eee :nick!ident@host.com PRIVMSG me :Hello</span>
    
    <span class="c">/// &lt;summary&gt; </span>
    <span class="c">/// Parser to handle and convert unicode hex to string </span>
    <span class="c">/// Direct excerpt from FParsec tutorial</span>
    <span class="c">/// &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">unicodeEscape</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="t">Parser</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="f">hex2int</span> <span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="i">c</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="f">int</span> <span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="i">c</span> <span class="o">&amp;&amp;&amp;</span> <span class="n">15</span>) <span class="o">+</span> (<span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="f">int</span> <span onmouseout="hideTip(event, 'fs6', 13)" onmouseover="showTip(event, 'fs6', 13)" class="i">c</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="n">6</span>)<span class="o">*</span><span class="n">9</span>

        <span class="i">pstring</span> <span class="s">&quot;u&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">pipe4</span> <span class="i">hex</span> <span class="i">hex</span> <span class="i">hex</span> <span class="i">hex</span> (<span class="k">fun</span> <span class="i">h3</span> <span class="i">h2</span> <span class="i">h1</span> <span class="i">h0</span> <span class="k">-&gt;</span>
            (<span onmouseout="hideTip(event, 'fs5', 14)" onmouseover="showTip(event, 'fs5', 14)" class="i">hex2int</span> <span class="i">h3</span>)<span class="o">*</span><span class="n">4096</span> <span class="o">+</span> (<span onmouseout="hideTip(event, 'fs5', 15)" onmouseover="showTip(event, 'fs5', 15)" class="i">hex2int</span> <span class="i">h2</span>)<span class="o">*</span><span class="n">256</span> <span class="o">+</span> (<span onmouseout="hideTip(event, 'fs5', 16)" onmouseover="showTip(event, 'fs5', 16)" class="i">hex2int</span> <span class="i">h1</span>)<span class="o">*</span><span class="n">16</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs5', 17)" onmouseover="showTip(event, 'fs5', 17)" class="i">hex2int</span> <span class="i">h0</span>
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs8', 18)" onmouseover="showTip(event, 'fs8', 18)" class="i">char</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 19)" onmouseover="showTip(event, 'fs9', 19)" class="i">string</span>
        )

    <span class="c">/// &lt;summary&gt; </span>
    <span class="c">/// Gets the value of the parser, returns the default value if the parser has a Failure result </span>
    <span class="c">/// &lt;/summary</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 20)" onmouseover="showTip(event, 'fs10', 20)" class="f">getParserValue</span> <span onmouseout="hideTip(event, 'fs11', 21)" onmouseover="showTip(event, 'fs11', 21)" class="i">r</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs11', 22)" onmouseover="showTip(event, 'fs11', 22)" class="i">r</span> <span class="k">with</span>
        | <span class="i">Success</span>(<span class="i">result</span>, _, _)   <span class="k">-&gt;</span> <span class="i">result</span>
        | <span onmouseout="hideTip(event, 'fs12', 23)" onmouseover="showTip(event, 'fs12', 23)" class="i">Failure</span>(<span class="i">errorMsg</span>, _, _) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 24)" onmouseover="showTip(event, 'fs13', 24)" class="i">Unchecked</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 25)" onmouseover="showTip(event, 'fs14', 25)" class="i">defaultof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>

    <span class="c">// # Helpers for default value when a parser gets a critical failure</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 26)" onmouseover="showTip(event, 'fs15', 26)" class="f">optionalEmpty</span> <span onmouseout="hideTip(event, 'fs16', 27)" onmouseover="showTip(event, 'fs16', 27)" class="i">o</span> <span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="i">p</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 29)" onmouseover="showTip(event, 'fs17', 29)" class="i">p</span> <span class="o">&lt;|&gt;%</span> <span onmouseout="hideTip(event, 'fs16', 30)" onmouseover="showTip(event, 'fs16', 30)" class="i">o</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 31)" onmouseover="showTip(event, 'fs18', 31)" class="f">optionalEmptyList</span> <span onmouseout="hideTip(event, 'fs17', 32)" onmouseover="showTip(event, 'fs17', 32)" class="i">p</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 33)" onmouseover="showTip(event, 'fs15', 33)" class="f">optionalEmpty</span> [] <span onmouseout="hideTip(event, 'fs17', 34)" onmouseover="showTip(event, 'fs17', 34)" class="i">p</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 35)" onmouseover="showTip(event, 'fs19', 35)" class="f">optionalEmptyString</span> <span onmouseout="hideTip(event, 'fs17', 36)" onmouseover="showTip(event, 'fs17', 36)" class="i">p</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 37)" onmouseover="showTip(event, 'fs15', 37)" class="f">optionalEmpty</span> <span class="s">&quot;&quot;</span> <span onmouseout="hideTip(event, 'fs17', 38)" onmouseover="showTip(event, 'fs17', 38)" class="i">p</span>
    <span class="c">// / Helpers for default value</span>

    <span class="c">// # Tags Parsers</span>
    <span class="c">/// &lt;summary&gt; Splits the individual tags by the = character if it is there &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 39)" onmouseover="showTip(event, 'fs20', 39)" class="i">pSplitTags</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 40)" onmouseover="showTip(event, 'fs3', 40)" class="t">Parser</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 41)" onmouseover="showTip(event, 'fs21', 41)" class="i">keyParser</span> <span class="o">=</span>  <span class="i">manyChars</span> (<span class="i">noneOf</span> <span class="s">&quot;=;&quot;</span>)
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 42)" onmouseover="showTip(event, 'fs22', 42)" class="i">valueParser</span> <span class="o">=</span> <span class="i">pstring</span> <span class="s">&quot;=&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">manyChars</span> (<span class="i">noneOf</span> <span class="s">&quot;;&quot;</span>) <span class="o">&lt;|&gt;%</span> <span class="s">&quot;&quot;</span>
        <span class="i">optional</span> (<span class="i">skipString</span> <span class="s">&quot;;&quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> (<span onmouseout="hideTip(event, 'fs21', 43)" onmouseover="showTip(event, 'fs21', 43)" class="i">keyParser</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span onmouseout="hideTip(event, 'fs22', 44)" onmouseover="showTip(event, 'fs22', 44)" class="i">valueParser</span>)
    
    <span class="c">/// &lt;summary&gt; parses the tags only string into (key, value) list &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 45)" onmouseover="showTip(event, 'fs23', 45)" class="i">splitAllTags</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 46)" onmouseover="showTip(event, 'fs3', 46)" class="t">Parser</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span>
        <span class="i">many1</span> (<span class="i">notEmpty</span> <span onmouseout="hideTip(event, 'fs20', 47)" onmouseover="showTip(event, 'fs20', 47)" class="i">pSplitTags</span>) <span class="o">&lt;|&gt;</span> (<span class="i">pstring</span> <span class="s">&quot;&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">preturn</span> [])

    <span class="c">/// &lt;summary&gt; Find the whole tags string if it exists &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 48)" onmouseover="showTip(event, 'fs24', 48)" class="i">tagsParser</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 49)" onmouseover="showTip(event, 'fs3', 49)" class="t">Parser</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span> 
        <span class="i">pstring</span> <span class="s">&quot;@&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">manyCharsTill</span> (<span class="i">noneOf</span> <span class="s">&quot;&quot;</span>) (<span class="i">lookAhead</span> (<span class="i">pstring</span> <span class="s">&quot; &quot;</span>)) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs19', 50)" onmouseover="showTip(event, 'fs19', 50)" class="f">optionalEmptyString</span>
    <span class="c">// / Tags Parsers</span>

    <span class="c">// # Source Parsers</span>
    <span class="c">/// &lt;summary&gt; Parses the nick part of a source segment if it exists &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 51)" onmouseover="showTip(event, 'fs25', 51)" class="i">nickParser</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 52)" onmouseover="showTip(event, 'fs3', 52)" class="t">Parser</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span> 
        <span class="i">optional</span> (<span class="i">skipString</span> <span class="s">&quot;:&quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> (<span class="i">manyChars</span> (<span class="i">noneOf</span> <span class="s">&quot;@!./&quot;</span>)) <span class="o">.</span><span class="o">&gt;&gt;?</span> <span class="i">notFollowedBy</span> (<span class="i">anyOf</span> <span class="s">&quot;./&quot;</span>)

    <span class="c">/// &lt;summary&gt; Parses the user part of a source segment if it exists &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 53)" onmouseover="showTip(event, 'fs26', 53)" class="i">userParser</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 54)" onmouseover="showTip(event, 'fs3', 54)" class="t">Parser</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span> 
        <span class="i">pstring</span> <span class="s">&quot;!&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">manyCharsTill</span> (<span class="i">noneOf</span> <span class="s">&quot;&quot;</span>) (<span class="i">lookAhead</span> (<span class="i">pstring</span> <span class="s">&quot;@&quot;</span>))

    <span class="c">/// &lt;summary&gt; Parses the host part of a source segment if it exists &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 55)" onmouseover="showTip(event, 'fs27', 55)" class="i">hostParser</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 56)" onmouseover="showTip(event, 'fs3', 56)" class="t">Parser</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span> 
        <span class="i">optional</span> (<span class="i">skipString</span> <span class="s">&quot;@&quot;</span> <span class="o">&lt;|&gt;</span> <span class="i">skipString</span> <span class="s">&quot;:&quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">manyChars</span> (<span class="i">noneOf</span> <span class="s">&quot;&quot;</span>) <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">eof</span>

    <span class="c">/// &lt;summary&gt; Splits the source into (nick, user, hostname) &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 57)" onmouseover="showTip(event, 'fs28', 57)" class="i">splitSource</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 58)" onmouseover="showTip(event, 'fs3', 58)" class="t">Parser</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span>
        <span class="i">pipe3</span> 
            ( <span class="i">attempt</span> <span onmouseout="hideTip(event, 'fs25', 59)" onmouseover="showTip(event, 'fs25', 59)" class="i">nickParser</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs19', 60)" onmouseover="showTip(event, 'fs19', 60)" class="i">optionalEmptyString</span> ) <span class="c">// Nick</span>
            ( <span class="i">attempt</span> <span onmouseout="hideTip(event, 'fs26', 61)" onmouseover="showTip(event, 'fs26', 61)" class="i">userParser</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs19', 62)" onmouseover="showTip(event, 'fs19', 62)" class="i">optionalEmptyString</span> ) <span class="c">// User</span>
            ( <span onmouseout="hideTip(event, 'fs27', 63)" onmouseover="showTip(event, 'fs27', 63)" class="i">hostParser</span> ) <span class="c">// Host</span>
            ( <span class="k">fun</span> <span class="i">a</span> <span class="i">b</span> <span class="i">c</span> <span class="k">-&gt;</span> (<span class="i">a</span>, <span class="i">b</span>, <span class="i">c</span>) )

    <span class="c">/// &lt;summary&gt; Parses source of message &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 64)" onmouseover="showTip(event, 'fs29', 64)" class="i">sourceParser</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 65)" onmouseover="showTip(event, 'fs3', 65)" class="t">Parser</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span> 
        <span class="i">optional</span> (<span class="i">skipString</span> <span class="s">&quot; &quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">?</span> (<span class="i">pstring</span> <span class="s">&quot;:&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">manyCharsTill</span> (<span class="i">noneOf</span> <span class="s">&quot;&quot;</span>) (<span class="i">pstring</span> <span class="s">&quot; &quot;</span>)) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs19', 66)" onmouseover="showTip(event, 'fs19', 66)" class="f">optionalEmptyString</span>
    <span class="c">// / Source Parsers</span>

    <span class="c">// # Command Parsers</span>
    <span class="c">/// &lt;summary&gt; Separates the leading parameters by space and the trailing parameter by : if it exists &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 67)" onmouseover="showTip(event, 'fs30', 67)" class="i">getParameters</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 68)" onmouseover="showTip(event, 'fs3', 68)" class="t">Parser</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 69)" onmouseover="showTip(event, 'fs31', 69)" class="i">leadingParams</span>  <span class="o">=</span> <span class="i">optional</span> (<span class="i">skipString</span> <span class="s">&quot; &quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">sepBy</span> (<span class="i">manyChars</span> (<span class="i">noneOf</span> <span class="s">&quot; :&quot;</span>)) (<span class="i">pstring</span> <span class="s">&quot; &quot;</span>)
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 70)" onmouseover="showTip(event, 'fs32', 70)" class="i">trailingParams</span> <span class="o">=</span> <span class="i">optional</span> (<span class="i">skipString</span> <span class="s">&quot;:&quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">manyChars</span> (<span class="i">noneOf</span> <span class="s">&quot;&quot;</span>)
        <span onmouseout="hideTip(event, 'fs31', 71)" onmouseover="showTip(event, 'fs31', 71)" class="i">leadingParams</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span onmouseout="hideTip(event, 'fs32', 72)" onmouseover="showTip(event, 'fs32', 72)" class="i">trailingParams</span>

    <span class="c">/// &lt;summary&gt; Takes the whole command string and splits it into verb and parameters &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 73)" onmouseover="showTip(event, 'fs33', 73)" class="i">splitCommand</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 74)" onmouseover="showTip(event, 'fs3', 74)" class="t">Parser</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span>
        <span class="i">pipe2</span>
            ( <span class="i">manyChars</span> <span class="o">&lt;|</span> <span class="i">noneOf</span> <span class="s">&quot; &quot;</span> ) <span class="c">// Verb</span>
            ( <span onmouseout="hideTip(event, 'fs30', 75)" onmouseover="showTip(event, 'fs30', 75)" class="i">getParameters</span> ) <span class="c">// Params</span>
            ( <span class="k">fun</span> <span class="i">a</span> <span class="i">b</span> <span class="k">-&gt;</span> 
                (<span class="i">a</span>, (<span onmouseout="hideTip(event, 'fs34', 76)" onmouseover="showTip(event, 'fs34', 76)" class="i">fst</span> <span class="i">b</span> <span class="o">@+</span> <span onmouseout="hideTip(event, 'fs35', 77)" onmouseover="showTip(event, 'fs35', 77)" class="i">snd</span> <span class="i">b</span>) <span class="o">@!</span> <span class="s">&quot;&quot;</span>)
            )

    <span class="c">/// &lt;summary&gt; Parses command of message &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 78)" onmouseover="showTip(event, 'fs36', 78)" class="i">commandParser</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 79)" onmouseover="showTip(event, 'fs3', 79)" class="t">Parser</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span> 
        <span class="i">optional</span> (<span class="i">skipString</span> <span class="s">&quot; &quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">manyChars</span> (<span class="i">noneOf</span> <span class="s">&quot;&quot;</span>) <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">eof</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs19', 80)" onmouseover="showTip(event, 'fs19', 80)" class="f">optionalEmptyString</span> <span class="c">//many1Satisfy isCommandValid .&gt;&gt; eof |&gt; optionalEmptyString</span>
    <span class="c">// / Command Parsers</span>

    <span class="c">/// &lt;summary&gt; Parses whole message into its constituent parts using FParsec &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 81)" onmouseover="showTip(event, 'fs37', 81)" class="i">messageParser</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 82)" onmouseover="showTip(event, 'fs3', 82)" class="t">Parser</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span> 
        <span class="i">pipe3</span> <span onmouseout="hideTip(event, 'fs24', 83)" onmouseover="showTip(event, 'fs24', 83)" class="i">tagsParser</span> <span onmouseout="hideTip(event, 'fs29', 84)" onmouseover="showTip(event, 'fs29', 84)" class="i">sourceParser</span> <span onmouseout="hideTip(event, 'fs36', 85)" onmouseover="showTip(event, 'fs36', 85)" class="i">commandParser</span>
            (<span class="k">fun</span> <span class="i">tags</span> <span class="i">source</span> <span class="i">command</span> <span class="k">-&gt;</span> 
                (
                    <span class="i">tags</span>    <span class="o">|&gt;</span> <span class="i">run</span> <span onmouseout="hideTip(event, 'fs23', 86)" onmouseover="showTip(event, 'fs23', 86)" class="i">splitAllTags</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 87)" onmouseover="showTip(event, 'fs10', 87)" class="i">getParserValue</span>,
                    <span class="i">source</span>  <span class="o">|&gt;</span> <span class="i">run</span> <span onmouseout="hideTip(event, 'fs28', 88)" onmouseover="showTip(event, 'fs28', 88)" class="i">splitSource</span>  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 89)" onmouseover="showTip(event, 'fs10', 89)" class="i">getParserValue</span>, 
                    <span class="i">command</span> <span class="o">|&gt;</span> <span class="i">run</span> <span onmouseout="hideTip(event, 'fs33', 90)" onmouseover="showTip(event, 'fs33', 90)" class="i">splitCommand</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 91)" onmouseover="showTip(event, 'fs10', 91)" class="i">getParserValue</span>
                )
            )

    <span class="c">/// &lt;summary&gt;</span>
    <span class="c">/// Entry point to run the message parser. Returns the value of the parsing result.</span>
    <span class="c">/// &lt;/summary&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 92)" onmouseover="showTip(event, 'fs38', 92)" class="f">runMessageParser</span> <span onmouseout="hideTip(event, 'fs39', 93)" onmouseover="showTip(event, 'fs39', 93)" class="i">s</span> <span class="o">=</span>
        <span class="i">run</span> <span onmouseout="hideTip(event, 'fs37', 94)" onmouseover="showTip(event, 'fs37', 94)" class="i">messageParser</span> <span onmouseout="hideTip(event, 'fs39', 95)" onmouseover="showTip(event, 'fs39', 95)" class="i">s</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 96)" onmouseover="showTip(event, 'fs10', 96)" class="f">getParserValue</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">type internal UserState = unit<br /><br />Full name: FuncIRC.MessageParserInternalsV2.UserState</div>
<div class="tip" id="fs2">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs3">type internal Parser&lt;&#39;t&gt; = obj<br /><br />Full name: FuncIRC.MessageParserInternalsV2.Parser&lt;_&gt;</div>
<div class="tip" id="fs4">val internal unicodeEscape : Parser&lt;obj&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.unicodeEscape<br /><em><br /><br />&#160;&lt;summary&gt; <br />&#160;Parser to handle and convert unicode hex to string <br />&#160;Direct excerpt from FParsec tutorial<br />&#160;&lt;/summary&gt;</em></div>
<div class="tip" id="fs5">val hex2int : (int -&gt; int)</div>
<div class="tip" id="fs6">val c : int</div>
<div class="tip" id="fs7">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs8">Multiple items<br />val char : value:&#39;T -&gt; char (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.char<br /><br />--------------------<br />type char = System.Char<br /><br />Full name: Microsoft.FSharp.Core.char</div>
<div class="tip" id="fs9">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs10">val internal getParserValue : r:&#39;a -&gt; &#39;b<br /><br />Full name: FuncIRC.MessageParserInternalsV2.getParserValue<br /><em><br /><br />&#160;&lt;summary&gt; <br />&#160;Gets the value of the parser, returns the default value if the parser has a Failure result <br />&#160;&lt;/summary</em></div>
<div class="tip" id="fs11">val r : &#39;a</div>
<div class="tip" id="fs12">Multiple items<br />val Failure : message:string -&gt; exn<br /><br />Full name: Microsoft.FSharp.Core.Operators.Failure<br /><br />--------------------<br />active recognizer Failure: exn -&gt; string option<br /><br />Full name: Microsoft.FSharp.Core.Operators.( |Failure|_| )</div>
<div class="tip" id="fs13">module Unchecked<br /><br />from Microsoft.FSharp.Core.Operators</div>
<div class="tip" id="fs14">val defaultof&lt;&#39;T&gt; : &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.Unchecked.defaultof</div>
<div class="tip" id="fs15">val internal optionalEmpty : o:obj list -&gt; p:obj -&gt; Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.optionalEmpty</div>
<div class="tip" id="fs16">val o : obj list</div>
<div class="tip" id="fs17">val p : obj</div>
<div class="tip" id="fs18">val internal optionalEmptyList : p:obj -&gt; Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.optionalEmptyList</div>
<div class="tip" id="fs19">val internal optionalEmptyString : p:obj -&gt; Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.optionalEmptyString</div>
<div class="tip" id="fs20">val internal pSplitTags : Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.pSplitTags<br /><em><br /><br />&#160;&lt;summary&gt; Splits the individual tags by the = character if it is there &lt;/summary&gt;</em></div>
<div class="tip" id="fs21">val keyParser : &#39;a (requires member ( .&gt;&gt;. ) and member ( &gt;&gt;. ))</div>
<div class="tip" id="fs22">val valueParser : &#39;_arg3 (requires member ( .&gt;&gt;. ) and member ( &gt;&gt;. ))</div>
<div class="tip" id="fs23">val internal splitAllTags : Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.splitAllTags<br /><em><br /><br />&#160;&lt;summary&gt; parses the tags only string into (key, value) list &lt;/summary&gt;</em></div>
<div class="tip" id="fs24">val internal tagsParser : Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.tagsParser<br /><em><br /><br />&#160;&lt;summary&gt; Find the whole tags string if it exists &lt;/summary&gt;</em></div>
<div class="tip" id="fs25">val internal nickParser : Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.nickParser<br /><em><br /><br />&#160;&lt;summary&gt; Parses the nick part of a source segment if it exists &lt;/summary&gt;</em></div>
<div class="tip" id="fs26">val internal userParser : Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.userParser<br /><em><br /><br />&#160;&lt;summary&gt; Parses the user part of a source segment if it exists &lt;/summary&gt;</em></div>
<div class="tip" id="fs27">val internal hostParser : Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.hostParser<br /><em><br /><br />&#160;&lt;summary&gt; Parses the host part of a source segment if it exists &lt;/summary&gt;</em></div>
<div class="tip" id="fs28">val internal splitSource : Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.splitSource<br /><em><br /><br />&#160;&lt;summary&gt; Splits the source into (nick, user, hostname) &lt;/summary&gt;</em></div>
<div class="tip" id="fs29">val internal sourceParser : Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.sourceParser<br /><em><br /><br />&#160;&lt;summary&gt; Parses source of message &lt;/summary&gt;</em></div>
<div class="tip" id="fs30">val internal getParameters : Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.getParameters<br /><em><br /><br />&#160;&lt;summary&gt; Separates the leading parameters by space and the trailing parameter by : if it exists &lt;/summary&gt;</em></div>
<div class="tip" id="fs31">val leadingParams : &#39;_arg3 (requires member ( .&gt;&gt;. ))</div>
<div class="tip" id="fs32">val trailingParams : &#39;_arg6 (requires member ( .&gt;&gt;. ))</div>
<div class="tip" id="fs33">val internal splitCommand : Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.splitCommand<br /><em><br /><br />&#160;&lt;summary&gt; Takes the whole command string and splits it into verb and parameters &lt;/summary&gt;</em></div>
<div class="tip" id="fs34">val fst : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T1<br /><br />Full name: Microsoft.FSharp.Core.Operators.fst</div>
<div class="tip" id="fs35">val snd : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T2<br /><br />Full name: Microsoft.FSharp.Core.Operators.snd</div>
<div class="tip" id="fs36">val internal commandParser : Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.commandParser<br /><em><br /><br />&#160;&lt;summary&gt; Parses command of message &lt;/summary&gt;</em></div>
<div class="tip" id="fs37">val internal messageParser : Parser&lt;&#39;a&gt;<br /><br />Full name: FuncIRC.MessageParserInternalsV2.messageParser<br /><em><br /><br />&#160;&lt;summary&gt; Parses whole message into its constituent parts using FParsec &lt;/summary&gt;</em></div>
<div class="tip" id="fs38">val internal runMessageParser : s:&#39;a -&gt; &#39;b<br /><br />Full name: FuncIRC.MessageParserInternalsV2.runMessageParser<br /><em><br /><br />&#160;&lt;summary&gt;<br />&#160;Entry point to run the message parser. Returns the value of the parsing result.<br />&#160;&lt;/summary&gt;</em></div>
<div class="tip" id="fs39">val s : &#39;a</div>

