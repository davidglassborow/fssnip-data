<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">Quotations</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">Quotations</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="i">Patterns</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 8)" onmouseover="showTip(event, 'fs1', 8)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 9)" onmouseover="showTip(event, 'fs2', 9)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 10)" onmouseover="showTip(event, 'fs3', 10)" class="i">Quotations</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 11)" onmouseover="showTip(event, 'fs5', 11)" class="i">DerivedPatterns</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="f">notImplemented</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 13)" onmouseover="showTip(event, 'fs7', 13)" class="f">raise</span> (<span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="t">NotImplementedException</span>())

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="f">toTypeName</span>  <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">t</span> <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="t">int</span><span class="o">&gt;</span> <span class="k">then</span> <span class="s">&quot;int&quot;</span>
    <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs11', 21)" onmouseover="showTip(event, 'fs11', 21)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 22)" onmouseover="showTip(event, 'fs12', 22)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="t">double</span><span class="o">&gt;</span> <span class="k">then</span> <span class="s">&quot;double&quot;</span> 
    <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs11', 24)" onmouseover="showTip(event, 'fs11', 24)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 25)" onmouseover="showTip(event, 'fs12', 25)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs15', 26)" onmouseover="showTip(event, 'fs15', 26)" class="t">bool</span><span class="o">&gt;</span> <span class="k">then</span> <span class="s">&quot;boolean&quot;</span>
    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs6', 27)" onmouseover="showTip(event, 'fs6', 27)" class="f">notImplemented</span>()

<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs16', 28)" onmouseover="showTip(event, 'fs16', 28)" class="f">toJava</span> <span class="o">=</span> <span class="k">function</span>
   | <span onmouseout="hideTip(event, 'fs17', 29)" onmouseover="showTip(event, 'fs17', 29)" class="p">Int32</span> <span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="f">sprintf</span> <span class="s">&quot;</span><span class="pf">%i</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs18', 32)" onmouseover="showTip(event, 'fs18', 32)" class="i">x</span>
   | <span onmouseout="hideTip(event, 'fs20', 33)" onmouseover="showTip(event, 'fs20', 33)" class="p">Double</span> <span onmouseout="hideTip(event, 'fs21', 34)" onmouseover="showTip(event, 'fs21', 34)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 35)" onmouseover="showTip(event, 'fs19', 35)" class="f">sprintf</span> <span class="s">&quot;</span><span class="pf">%g</span><span class="s">d&quot;</span> <span onmouseout="hideTip(event, 'fs21', 36)" onmouseover="showTip(event, 'fs21', 36)" class="i">x</span>
   | <span onmouseout="hideTip(event, 'fs22', 37)" onmouseover="showTip(event, 'fs22', 37)" class="p">Bool</span> <span class="k">true</span> <span class="k">-&gt;</span> <span class="s">&quot;true&quot;</span>
   | <span onmouseout="hideTip(event, 'fs22', 38)" onmouseover="showTip(event, 'fs22', 38)" class="p">Bool</span> <span class="k">false</span> <span class="k">-&gt;</span> <span class="s">&quot;false&quot;</span>
   | <span onmouseout="hideTip(event, 'fs23', 39)" onmouseover="showTip(event, 'fs23', 39)" class="p">SpecificCall</span> &lt;@@ (<span class="o">+</span>) @@&gt; (<span onmouseout="hideTip(event, 'fs24', 40)" onmouseover="showTip(event, 'fs24', 40)" class="p">None</span>, _, [<span onmouseout="hideTip(event, 'fs25', 41)" onmouseover="showTip(event, 'fs25', 41)" class="i">lhs</span>;<span onmouseout="hideTip(event, 'fs26', 42)" onmouseover="showTip(event, 'fs26', 42)" class="i">rhs</span>]) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs27', 43)" onmouseover="showTip(event, 'fs27', 43)" class="f">toOp</span> <span class="s">&quot;+&quot;</span> <span onmouseout="hideTip(event, 'fs25', 44)" onmouseover="showTip(event, 'fs25', 44)" class="i">lhs</span> <span onmouseout="hideTip(event, 'fs26', 45)" onmouseover="showTip(event, 'fs26', 45)" class="i">rhs</span>
   | <span onmouseout="hideTip(event, 'fs23', 46)" onmouseover="showTip(event, 'fs23', 46)" class="p">SpecificCall</span> &lt;@@ (<span class="o">-</span>) @@&gt; (<span onmouseout="hideTip(event, 'fs24', 47)" onmouseover="showTip(event, 'fs24', 47)" class="p">None</span>, _, [<span onmouseout="hideTip(event, 'fs25', 48)" onmouseover="showTip(event, 'fs25', 48)" class="i">lhs</span>;<span onmouseout="hideTip(event, 'fs26', 49)" onmouseover="showTip(event, 'fs26', 49)" class="i">rhs</span>]) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs27', 50)" onmouseover="showTip(event, 'fs27', 50)" class="f">toOp</span> <span class="s">&quot;-&quot;</span> <span onmouseout="hideTip(event, 'fs25', 51)" onmouseover="showTip(event, 'fs25', 51)" class="i">lhs</span> <span onmouseout="hideTip(event, 'fs26', 52)" onmouseover="showTip(event, 'fs26', 52)" class="i">rhs</span>
   | <span onmouseout="hideTip(event, 'fs23', 53)" onmouseover="showTip(event, 'fs23', 53)" class="p">SpecificCall</span> &lt;@@ <span class="o">(*)</span> @@&gt; (<span onmouseout="hideTip(event, 'fs24', 54)" onmouseover="showTip(event, 'fs24', 54)" class="p">None</span>, _, [<span onmouseout="hideTip(event, 'fs25', 55)" onmouseover="showTip(event, 'fs25', 55)" class="i">lhs</span>;<span onmouseout="hideTip(event, 'fs26', 56)" onmouseover="showTip(event, 'fs26', 56)" class="i">rhs</span>]) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs27', 57)" onmouseover="showTip(event, 'fs27', 57)" class="f">toOp</span> <span class="s">&quot;*&quot;</span> <span onmouseout="hideTip(event, 'fs25', 58)" onmouseover="showTip(event, 'fs25', 58)" class="i">lhs</span> <span onmouseout="hideTip(event, 'fs26', 59)" onmouseover="showTip(event, 'fs26', 59)" class="i">rhs</span>
   | <span onmouseout="hideTip(event, 'fs23', 60)" onmouseover="showTip(event, 'fs23', 60)" class="p">SpecificCall</span> &lt;@@ (<span class="o">/</span>) @@&gt; (<span onmouseout="hideTip(event, 'fs24', 61)" onmouseover="showTip(event, 'fs24', 61)" class="p">None</span>, _, [<span onmouseout="hideTip(event, 'fs25', 62)" onmouseover="showTip(event, 'fs25', 62)" class="i">lhs</span>;<span onmouseout="hideTip(event, 'fs26', 63)" onmouseover="showTip(event, 'fs26', 63)" class="i">rhs</span>]) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs27', 64)" onmouseover="showTip(event, 'fs27', 64)" class="f">toOp</span> <span class="s">&quot;/&quot;</span> <span onmouseout="hideTip(event, 'fs25', 65)" onmouseover="showTip(event, 'fs25', 65)" class="i">lhs</span> <span onmouseout="hideTip(event, 'fs26', 66)" onmouseover="showTip(event, 'fs26', 66)" class="i">rhs</span>
   | <span onmouseout="hideTip(event, 'fs23', 67)" onmouseover="showTip(event, 'fs23', 67)" class="p">SpecificCall</span> &lt;@@ (<span class="o">=</span>) @@&gt; (<span onmouseout="hideTip(event, 'fs24', 68)" onmouseover="showTip(event, 'fs24', 68)" class="p">None</span>, _, [<span onmouseout="hideTip(event, 'fs25', 69)" onmouseover="showTip(event, 'fs25', 69)" class="i">lhs</span>;<span onmouseout="hideTip(event, 'fs26', 70)" onmouseover="showTip(event, 'fs26', 70)" class="i">rhs</span>]) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs27', 71)" onmouseover="showTip(event, 'fs27', 71)" class="f">toOp</span> <span class="s">&quot;==&quot;</span> <span onmouseout="hideTip(event, 'fs25', 72)" onmouseover="showTip(event, 'fs25', 72)" class="i">lhs</span> <span onmouseout="hideTip(event, 'fs26', 73)" onmouseover="showTip(event, 'fs26', 73)" class="i">rhs</span>
   | <span onmouseout="hideTip(event, 'fs23', 74)" onmouseover="showTip(event, 'fs23', 74)" class="p">SpecificCall</span> &lt;@@ (<span class="o">&lt;&gt;</span>) @@&gt; (<span onmouseout="hideTip(event, 'fs24', 75)" onmouseover="showTip(event, 'fs24', 75)" class="p">None</span>, _, [<span onmouseout="hideTip(event, 'fs25', 76)" onmouseover="showTip(event, 'fs25', 76)" class="i">lhs</span>;<span onmouseout="hideTip(event, 'fs26', 77)" onmouseover="showTip(event, 'fs26', 77)" class="i">rhs</span>]) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs27', 78)" onmouseover="showTip(event, 'fs27', 78)" class="f">toOp</span> <span class="s">&quot;!=&quot;</span> <span onmouseout="hideTip(event, 'fs25', 79)" onmouseover="showTip(event, 'fs25', 79)" class="i">lhs</span> <span onmouseout="hideTip(event, 'fs26', 80)" onmouseover="showTip(event, 'fs26', 80)" class="i">rhs</span>
   | <span onmouseout="hideTip(event, 'fs28', 81)" onmouseover="showTip(event, 'fs28', 81)" class="p">IfThenElse</span>(<span onmouseout="hideTip(event, 'fs29', 82)" onmouseover="showTip(event, 'fs29', 82)" class="i">condition</span>, <span onmouseout="hideTip(event, 'fs30', 83)" onmouseover="showTip(event, 'fs30', 83)" class="i">t</span>, <span onmouseout="hideTip(event, 'fs31', 84)" onmouseover="showTip(event, 'fs31', 84)" class="i">f</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs32', 85)" onmouseover="showTip(event, 'fs32', 85)" class="f">toIfThenElse</span> <span onmouseout="hideTip(event, 'fs29', 86)" onmouseover="showTip(event, 'fs29', 86)" class="i">condition</span> <span onmouseout="hideTip(event, 'fs30', 87)" onmouseover="showTip(event, 'fs30', 87)" class="i">t</span> <span onmouseout="hideTip(event, 'fs31', 88)" onmouseover="showTip(event, 'fs31', 88)" class="i">f</span>
   | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 89)" onmouseover="showTip(event, 'fs6', 89)" class="f">notImplemented</span>()    
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs27', 90)" onmouseover="showTip(event, 'fs27', 90)" class="f">toOp</span> <span onmouseout="hideTip(event, 'fs33', 91)" onmouseover="showTip(event, 'fs33', 91)" class="i">op</span> <span onmouseout="hideTip(event, 'fs25', 92)" onmouseover="showTip(event, 'fs25', 92)" class="i">lhs</span> <span onmouseout="hideTip(event, 'fs26', 93)" onmouseover="showTip(event, 'fs26', 93)" class="i">rhs</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs19', 94)" onmouseover="showTip(event, 'fs19', 94)" class="f">sprintf</span> <span class="s">&quot;(</span><span class="pf">%s</span><span class="s"> </span><span class="pf">%s</span><span class="s"> </span><span class="pf">%s</span><span class="s">)&quot;</span> (<span onmouseout="hideTip(event, 'fs16', 95)" onmouseover="showTip(event, 'fs16', 95)" class="f">toJava</span> <span onmouseout="hideTip(event, 'fs25', 96)" onmouseover="showTip(event, 'fs25', 96)" class="i">lhs</span>) <span onmouseout="hideTip(event, 'fs33', 97)" onmouseover="showTip(event, 'fs33', 97)" class="i">op</span> (<span onmouseout="hideTip(event, 'fs16', 98)" onmouseover="showTip(event, 'fs16', 98)" class="f">toJava</span> <span onmouseout="hideTip(event, 'fs26', 99)" onmouseover="showTip(event, 'fs26', 99)" class="i">rhs</span>)
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs32', 100)" onmouseover="showTip(event, 'fs32', 100)" class="f">toIfThenElse</span> <span onmouseout="hideTip(event, 'fs29', 101)" onmouseover="showTip(event, 'fs29', 101)" class="i">condition</span> <span onmouseout="hideTip(event, 'fs30', 102)" onmouseover="showTip(event, 'fs30', 102)" class="i">t</span> <span onmouseout="hideTip(event, 'fs31', 103)" onmouseover="showTip(event, 'fs31', 103)" class="i">f</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs19', 104)" onmouseover="showTip(event, 'fs19', 104)" class="f">sprintf</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s"> ? </span><span class="pf">%s</span><span class="s"> : </span><span class="pf">%s</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs16', 105)" onmouseover="showTip(event, 'fs16', 105)" class="f">toJava</span> <span onmouseout="hideTip(event, 'fs29', 106)" onmouseover="showTip(event, 'fs29', 106)" class="i">condition</span>) (<span onmouseout="hideTip(event, 'fs16', 107)" onmouseover="showTip(event, 'fs16', 107)" class="f">toJava</span> <span onmouseout="hideTip(event, 'fs30', 108)" onmouseover="showTip(event, 'fs30', 108)" class="i">t</span>) (<span onmouseout="hideTip(event, 'fs16', 109)" onmouseover="showTip(event, 'fs16', 109)" class="f">toJava</span> <span onmouseout="hideTip(event, 'fs31', 110)" onmouseover="showTip(event, 'fs31', 110)" class="i">f</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 111)" onmouseover="showTip(event, 'fs34', 111)" class="f">toClass</span> (<span onmouseout="hideTip(event, 'fs35', 112)" onmouseover="showTip(event, 'fs35', 112)" class="i">expr</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs36', 113)" onmouseover="showTip(event, 'fs36', 113)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TRet</span><span class="o">&gt;</span>)  <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 114)" onmouseover="showTip(event, 'fs37', 114)" class="i">returnType</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 115)" onmouseover="showTip(event, 'fs10', 115)" class="f">toTypeName</span> <span onmouseout="hideTip(event, 'fs12', 116)" onmouseover="showTip(event, 'fs12', 116)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TRet</span><span class="o">&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 117)" onmouseover="showTip(event, 'fs38', 117)" class="i">body</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 118)" onmouseover="showTip(event, 'fs16', 118)" class="f">toJava</span> <span onmouseout="hideTip(event, 'fs35', 119)" onmouseover="showTip(event, 'fs35', 119)" class="i">expr</span>
    <span onmouseout="hideTip(event, 'fs19', 120)" onmouseover="showTip(event, 'fs19', 120)" class="f">sprintf</span> <span class="s">&quot;&quot;&quot;</span>
<span class="s">public class Generated {</span>
<span class="s">   public static </span><span class="pf">%s</span><span class="s"> fun(){</span>
<span class="s">     return </span><span class="pf">%s</span><span class="s">;</span>
<span class="s">   }</span>
<span class="s">   public static void main(String []args){</span>
<span class="s">      System.out.println(fun());</span>
<span class="s">   }</span>
<span class="s">}&quot;&quot;&quot;</span> <span onmouseout="hideTip(event, 'fs37', 121)" onmouseover="showTip(event, 'fs37', 121)" class="i">returnType</span> <span onmouseout="hideTip(event, 'fs38', 122)" onmouseover="showTip(event, 'fs38', 122)" class="i">body</span>

<span onmouseout="hideTip(event, 'fs34', 123)" onmouseover="showTip(event, 'fs34', 123)" class="f">toClass</span> &lt;@ <span class="k">if</span> <span class="n">1</span> <span class="o">+</span> <span class="n">1</span> <span class="o">=</span> <span class="n">2</span> <span class="k">then</span> <span class="n">1</span> <span class="k">else</span> <span class="o">-</span><span class="n">1</span> @&gt;

<span class="c">(* Returns</span>
<span class="c">public class Generated {</span>
<span class="c">   public static int fun(){</span>
<span class="c">     return ((1 + 1) == 2) ? 1 : -1;</span>
<span class="c">   }</span>
<span class="c">   public static void main(String []args){</span>
<span class="c">      System.out.println(fun());</span>
<span class="c">   }</span>
<span class="c">}</span>
<span class="c">*)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace Microsoft</div>
<div class="tip" id="fs2">namespace Microsoft.FSharp</div>
<div class="tip" id="fs3">namespace Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs4">module Patterns<br /><br />from Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs5">module DerivedPatterns<br /><br />from Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs6">val notImplemented : unit -&gt; &#39;a<br /><br />Full name: Script.notImplemented</div>
<div class="tip" id="fs7">val raise : exn:System.Exception -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.raise</div>
<div class="tip" id="fs8">namespace System</div>
<div class="tip" id="fs9">Multiple items<br />type NotImplementedException =<br />&#160;&#160;inherit SystemException<br />&#160;&#160;new : unit -&gt; NotImplementedException + 2 overloads<br /><br />Full name: System.NotImplementedException<br /><br />--------------------<br />System.NotImplementedException() : unit<br />System.NotImplementedException(message: string) : unit<br />System.NotImplementedException(message: string, inner: exn) : unit</div>
<div class="tip" id="fs10">val toTypeName : t:System.Type -&gt; string<br /><br />Full name: Script.toTypeName</div>
<div class="tip" id="fs11">val t : System.Type</div>
<div class="tip" id="fs12">val typeof&lt;&#39;T&gt; : System.Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs13">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs14">Multiple items<br />val double : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.double<br /><br />--------------------<br />type double = System.Double<br /><br />Full name: Microsoft.FSharp.Core.double</div>
<div class="tip" id="fs15">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs16">val toJava : _arg1:Expr -&gt; string<br /><br />Full name: Script.toJava</div>
<div class="tip" id="fs17">active recognizer Int32: Expr -&gt; int32 option<br /><br />Full name: Microsoft.FSharp.Quotations.DerivedPatterns.( |Int32|_| )</div>
<div class="tip" id="fs18">val x : int32</div>
<div class="tip" id="fs19">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs20">active recognizer Double: Expr -&gt; float option<br /><br />Full name: Microsoft.FSharp.Quotations.DerivedPatterns.( |Double|_| )</div>
<div class="tip" id="fs21">val x : float</div>
<div class="tip" id="fs22">active recognizer Bool: Expr -&gt; bool option<br /><br />Full name: Microsoft.FSharp.Quotations.DerivedPatterns.( |Bool|_| )</div>
<div class="tip" id="fs23">active recognizer SpecificCall: Expr -&gt; Expr -&gt; (Expr option * System.Type list * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.DerivedPatterns.( |SpecificCall|_| )</div>
<div class="tip" id="fs24">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs25">val lhs : Expr</div>
<div class="tip" id="fs26">val rhs : Expr</div>
<div class="tip" id="fs27">val toOp : op:string -&gt; lhs:Expr -&gt; rhs:Expr -&gt; string<br /><br />Full name: Script.toOp</div>
<div class="tip" id="fs28">active recognizer IfThenElse: Expr -&gt; (Expr * Expr * Expr) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |IfThenElse|_| )</div>
<div class="tip" id="fs29">val condition : Expr</div>
<div class="tip" id="fs30">val t : Expr</div>
<div class="tip" id="fs31">val f : Expr</div>
<div class="tip" id="fs32">val toIfThenElse : condition:Expr -&gt; t:Expr -&gt; f:Expr -&gt; string<br /><br />Full name: Script.toIfThenElse</div>
<div class="tip" id="fs33">val op : string</div>
<div class="tip" id="fs34">val toClass : expr:Expr&lt;&#39;TRet&gt; -&gt; string<br /><br />Full name: Script.toClass</div>
<div class="tip" id="fs35">val expr : Expr&lt;&#39;TRet&gt;</div>
<div class="tip" id="fs36">Multiple items<br />type Expr =<br />&#160;&#160;override Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetFreeVars : unit -&gt; seq&lt;Var&gt;<br />&#160;&#160;member Substitute : substitution:(Var -&gt; Expr option) -&gt; Expr<br />&#160;&#160;member ToString : full:bool -&gt; string<br />&#160;&#160;member CustomAttributes : Expr list<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member AddressOf : target:Expr -&gt; Expr<br />&#160;&#160;static member AddressSet : target:Expr * value:Expr -&gt; Expr<br />&#160;&#160;static member Application : functionExpr:Expr * argument:Expr -&gt; Expr<br />&#160;&#160;static member Applications : functionExpr:Expr * arguments:Expr list list -&gt; Expr<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Quotations.Expr<br /><br />--------------------<br />type Expr&lt;&#39;T&gt; =<br />&#160;&#160;inherit Expr<br />&#160;&#160;member Raw : Expr<br /><br />Full name: Microsoft.FSharp.Quotations.Expr&lt;_&gt;</div>
<div class="tip" id="fs37">val returnType : string</div>
<div class="tip" id="fs38">val body : string</div>

