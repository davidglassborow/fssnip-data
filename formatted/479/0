<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">/// Calculate the Jaro-Winkler distance of s1 and s2</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">jaroWinkler</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">s1</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">s2</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">jaroScore</span> <span class="o">=</span> <span class="i">jaro</span> <span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">s1</span> <span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">s2</span>
    <span class="c">// Accumulate the number of matching initial characters</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">maxLength</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="f">min</span> <span onmouseout="hideTip(event, 'fs2', 9)" onmouseover="showTip(event, 'fs2', 9)" class="i">s1</span><span class="o">.</span><span class="i">Length</span> <span onmouseout="hideTip(event, 'fs3', 10)" onmouseover="showTip(event, 'fs3', 10)" class="i">s2</span><span class="o">.</span><span class="i">Length</span>) <span class="o">-</span> <span class="n">1</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="f">calcL</span> <span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="i">i</span> <span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="i">acc</span> <span class="o">=</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="i">i</span> <span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs5', 15)" onmouseover="showTip(event, 'fs5', 15)" class="i">maxLength</span> <span class="o">||</span> <span onmouseout="hideTip(event, 'fs2', 16)" onmouseover="showTip(event, 'fs2', 16)" class="i">s1</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs8', 17)" onmouseover="showTip(event, 'fs8', 17)" class="i">i</span>] <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs3', 18)" onmouseover="showTip(event, 'fs3', 18)" class="i">s2</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs8', 19)" onmouseover="showTip(event, 'fs8', 19)" class="i">i</span>] <span class="k">then</span> <span onmouseout="hideTip(event, 'fs9', 20)" onmouseover="showTip(event, 'fs9', 20)" class="i">acc</span>
        <span class="k">else</span> <span onmouseout="hideTip(event, 'fs7', 21)" onmouseover="showTip(event, 'fs7', 21)" class="f">calcL</span> (<span onmouseout="hideTip(event, 'fs8', 22)" onmouseover="showTip(event, 'fs8', 22)" class="i">i</span> <span class="o">+</span> <span class="n">1</span>) (<span onmouseout="hideTip(event, 'fs9', 23)" onmouseover="showTip(event, 'fs9', 23)" class="i">acc</span> <span class="o">+</span> <span class="n">1.0</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 24)" onmouseover="showTip(event, 'fs10', 24)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 25)" onmouseover="showTip(event, 'fs6', 25)" class="f">min</span> (<span onmouseout="hideTip(event, 'fs7', 26)" onmouseover="showTip(event, 'fs7', 26)" class="f">calcL</span> <span class="n">0</span> <span class="n">0.0</span>) <span class="n">4.0</span>
    <span class="c">// Calculate the JW distance</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 27)" onmouseover="showTip(event, 'fs11', 27)" class="i">p</span> <span class="o">=</span> <span class="n">0.1</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 28)" onmouseover="showTip(event, 'fs12', 28)" class="i">result</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 29)" onmouseover="showTip(event, 'fs4', 29)" class="i">jaroScore</span> <span class="o">+</span> (<span onmouseout="hideTip(event, 'fs10', 30)" onmouseover="showTip(event, 'fs10', 30)" class="i">l</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs11', 31)" onmouseover="showTip(event, 'fs11', 31)" class="i">p</span> <span class="o">*</span> (<span class="n">1.0</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs4', 32)" onmouseover="showTip(event, 'fs4', 32)" class="i">jaroScore</span>))
    <span class="c">// This isn&#39;t strictly necessary as we can&#39;t divide by zero</span>
    <span class="c">// but it makes me feel better </span>
    <span class="k">if</span> <span class="i">Double</span><span class="o">.</span><span class="i">IsNaN</span> <span onmouseout="hideTip(event, 'fs12', 33)" onmouseover="showTip(event, 'fs12', 33)" class="i">result</span> <span class="k">then</span> <span class="n">0.0</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs12', 34)" onmouseover="showTip(event, 'fs12', 34)" class="i">result</span>

[&lt;<span class="i">Fact</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 35)" onmouseover="showTip(event, 'fs13', 35)" class="f">``Jaro-Winkler identity test``</span> () <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 36)" onmouseover="showTip(event, 'fs12', 36)" class="i">result</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 37)" onmouseover="showTip(event, 'fs1', 37)" class="f">jaroWinkler</span> <span class="s">&quot;RICK&quot;</span> <span class="s">&quot;RICK&quot;</span>
    <span class="i">Assert</span><span class="o">.</span><span class="i">Equal</span>(<span class="s">&quot;1.000&quot;</span>, <span onmouseout="hideTip(event, 'fs14', 38)" onmouseover="showTip(event, 'fs14', 38)" class="i">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 39)" onmouseover="showTip(event, 'fs15', 39)" class="i">Format</span>(<span class="s">&quot;{0:0.000}&quot;</span>, <span onmouseout="hideTip(event, 'fs12', 40)" onmouseover="showTip(event, 'fs12', 40)" class="i">result</span>))

<span class="k">open</span> <span class="i">Xunit</span>

[&lt;<span class="i">Fact</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 41)" onmouseover="showTip(event, 'fs16', 41)" class="f">``Jaro-Winkler martha test``</span> () <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 42)" onmouseover="showTip(event, 'fs12', 42)" class="i">result</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 43)" onmouseover="showTip(event, 'fs1', 43)" class="f">jaroWinkler</span> <span class="s">&quot;MARTHA&quot;</span> <span class="s">&quot;MARHTA&quot;</span>
    <span class="i">Assert</span><span class="o">.</span><span class="i">Equal</span>(<span class="s">&quot;0.961&quot;</span>, <span onmouseout="hideTip(event, 'fs14', 44)" onmouseover="showTip(event, 'fs14', 44)" class="i">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 45)" onmouseover="showTip(event, 'fs15', 45)" class="i">Format</span>(<span class="s">&quot;{0:0.000}&quot;</span>, <span onmouseout="hideTip(event, 'fs12', 46)" onmouseover="showTip(event, 'fs12', 46)" class="i">result</span>))

[&lt;<span class="i">Fact</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 47)" onmouseover="showTip(event, 'fs17', 47)" class="f">``Jaro-Winkler dwayne test``</span> () <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 48)" onmouseover="showTip(event, 'fs12', 48)" class="i">result</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 49)" onmouseover="showTip(event, 'fs1', 49)" class="f">jaroWinkler</span> <span class="s">&quot;DWAYNE&quot;</span> <span class="s">&quot;DUANE&quot;</span>
    <span class="i">Assert</span><span class="o">.</span><span class="i">Equal</span>(<span class="s">&quot;0.840&quot;</span>, <span onmouseout="hideTip(event, 'fs14', 50)" onmouseover="showTip(event, 'fs14', 50)" class="i">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 51)" onmouseover="showTip(event, 'fs15', 51)" class="i">Format</span>(<span class="s">&quot;{0:0.000}&quot;</span>, <span onmouseout="hideTip(event, 'fs12', 52)" onmouseover="showTip(event, 'fs12', 52)" class="i">result</span>))

[&lt;<span class="i">Fact</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 53)" onmouseover="showTip(event, 'fs18', 53)" class="f">``Jaro-Winkler dixon test``</span> () <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 54)" onmouseover="showTip(event, 'fs12', 54)" class="i">result</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 55)" onmouseover="showTip(event, 'fs1', 55)" class="f">jaroWinkler</span> <span class="s">&quot;DIXON&quot;</span> <span class="s">&quot;DICKSONX&quot;</span>
    <span class="i">Assert</span><span class="o">.</span><span class="i">Equal</span>(<span class="s">&quot;0.813&quot;</span>, <span onmouseout="hideTip(event, 'fs14', 56)" onmouseover="showTip(event, 'fs14', 56)" class="i">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 57)" onmouseover="showTip(event, 'fs15', 57)" class="i">Format</span>(<span class="s">&quot;{0:0.000}&quot;</span>, <span onmouseout="hideTip(event, 'fs12', 58)" onmouseover="showTip(event, 'fs12', 58)" class="i">result</span>))
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val jaroWinkler : s1:&#39;a -&gt; s2:&#39;b -&gt; float<br /><br />Full name: Script.jaroWinkler<br /><em><br /><br />&#160;Calculate the Jaro-Winkler distance of s1 and s2</em></div>
<div class="tip" id="fs2">val s1 : &#39;a</div>
<div class="tip" id="fs3">val s2 : &#39;b</div>
<div class="tip" id="fs4">val jaroScore : float</div>
<div class="tip" id="fs5">val maxLength : int</div>
<div class="tip" id="fs6">val min : e1:&#39;T -&gt; e2:&#39;T -&gt; &#39;T (requires comparison)<br /><br />Full name: Microsoft.FSharp.Core.Operators.min</div>
<div class="tip" id="fs7">val calcL : (int -&gt; float -&gt; float)</div>
<div class="tip" id="fs8">val i : int</div>
<div class="tip" id="fs9">val acc : float</div>
<div class="tip" id="fs10">val l : float</div>
<div class="tip" id="fs11">val p : float</div>
<div class="tip" id="fs12">val result : float</div>
<div class="tip" id="fs13">val ( Jaro-Winkler identity test ) : unit -&gt; &#39;a<br /><br />Full name: Script.( Jaro-Winkler identity test )</div>
<div class="tip" id="fs14">module String<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs15">Multiple items<br />type Format&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result&gt; = PrintfFormat&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result&gt;<br /><br />Full name: Microsoft.FSharp.Core.Format&lt;_,_,_,_&gt;<br /><br />--------------------<br />type Format&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result,&#39;Tuple&gt; = PrintfFormat&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result,&#39;Tuple&gt;<br /><br />Full name: Microsoft.FSharp.Core.Format&lt;_,_,_,_,_&gt;</div>
<div class="tip" id="fs16">val ( Jaro-Winkler martha test ) : unit -&gt; &#39;a<br /><br />Full name: Script.( Jaro-Winkler martha test )</div>
<div class="tip" id="fs17">val ( Jaro-Winkler dwayne test ) : unit -&gt; &#39;a<br /><br />Full name: Script.( Jaro-Winkler dwayne test )</div>
<div class="tip" id="fs18">val ( Jaro-Winkler dixon test ) : unit -&gt; &#39;a<br /><br />Full name: Script.( Jaro-Winkler dixon test )</div>

