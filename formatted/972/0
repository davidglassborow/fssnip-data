<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// Some F# core types have values representable with nulls.</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">usesNullAsTrueValue</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="t">unit</span><span class="o">&gt;</span> <span class="k">then</span> <span class="k">true</span>
    <span class="k">else</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">attrs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 6)" onmouseover="showTip(event, 'fs2', 6)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span><span class="o">.</span><span class="f">GetCustomAttributes</span>(<span onmouseout="hideTip(event, 'fs2', 7)" onmouseover="showTip(event, 'fs2', 7)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="t">CompilationRepresentationAttribute</span><span class="o">&gt;</span>, <span class="k">false</span>)
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs4', 9)" onmouseover="showTip(event, 'fs4', 9)" class="i">attrs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="i">Length</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span> <span class="k">false</span>
        <span class="k">else</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="i">flags</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs4', 12)" onmouseover="showTip(event, 'fs4', 12)" class="i">attrs</span><span class="o">.</span>[<span class="n">0</span>] <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs5', 13)" onmouseover="showTip(event, 'fs5', 13)" class="t">CompilationRepresentationAttribute</span>)<span class="o">.</span><span class="i">Flags</span>
            <span onmouseout="hideTip(event, 'fs7', 14)" onmouseover="showTip(event, 'fs7', 14)" class="i">flags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="f">HasFlag</span> <span onmouseout="hideTip(event, 'fs9', 16)" onmouseover="showTip(event, 'fs9', 16)" class="t">CompilationRepresentationFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 17)" onmouseover="showTip(event, 'fs10', 17)" class="i">UseNullAsTrueValue</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="f">stripNull</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">T</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="i">not</span> <span class="k">struct</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="i">x</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>) <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="t">obj</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="f">ReferenceEquals</span>(<span onmouseout="hideTip(event, 'fs13', 23)" onmouseover="showTip(event, 'fs13', 23)" class="i">x</span>, <span class="k">null</span>) <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs12', 24)" onmouseover="showTip(event, 'fs12', 24)" class="f">not</span> <span onmouseout="hideTip(event, 'fs1', 25)" onmouseover="showTip(event, 'fs1', 25)" class="i">usesNullAsTrueValue</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="p">None</span>
    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs17', 27)" onmouseover="showTip(event, 'fs17', 27)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs13', 28)" onmouseover="showTip(event, 'fs13', 28)" class="i">x</span>

<span class="c">// model the builder after the Option monad; could do otherwise I guess</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="t">DenullBuilder</span>() <span class="o">=</span>
    <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 30)" onmouseover="showTip(event, 'fs19', 30)" class="f">Return</span>(<span onmouseout="hideTip(event, 'fs13', 31)" onmouseover="showTip(event, 'fs13', 31)" class="i">x</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 32)" onmouseover="showTip(event, 'fs11', 32)" class="f">stripNull</span> <span onmouseout="hideTip(event, 'fs13', 33)" onmouseover="showTip(event, 'fs13', 33)" class="i">x</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs20', 34)" onmouseover="showTip(event, 'fs20', 34)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 35)" onmouseover="showTip(event, 'fs21', 35)" class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs13', 36)" onmouseover="showTip(event, 'fs13', 36)" class="i">x</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>, <span onmouseout="hideTip(event, 'fs22', 37)" onmouseover="showTip(event, 'fs22', 37)" class="f">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">S</span> <span onmouseout="hideTip(event, 'fs23', 38)" onmouseover="showTip(event, 'fs23', 38)" class="t">option</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 39)" onmouseover="showTip(event, 'fs24', 39)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 40)" onmouseover="showTip(event, 'fs25', 40)" class="f">bind</span> <span onmouseout="hideTip(event, 'fs22', 41)" onmouseover="showTip(event, 'fs22', 41)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs11', 42)" onmouseover="showTip(event, 'fs11', 42)" class="f">stripNull</span> <span onmouseout="hideTip(event, 'fs13', 43)" onmouseover="showTip(event, 'fs13', 43)" class="i">x</span>)
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs20', 44)" onmouseover="showTip(event, 'fs20', 44)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 45)" onmouseover="showTip(event, 'fs26', 45)" class="f">ReturnFrom</span>(<span onmouseout="hideTip(event, 'fs27', 46)" onmouseover="showTip(event, 'fs27', 46)" class="i">x</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span onmouseout="hideTip(event, 'fs23', 47)" onmouseover="showTip(event, 'fs23', 47)" class="t">option</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 48)" onmouseover="showTip(event, 'fs27', 48)" class="i">x</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 49)" onmouseover="showTip(event, 'fs28', 49)" class="i">denull</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs18', 50)" onmouseover="showTip(event, 'fs18', 50)" class="t">DenullBuilder</span>()

<span class="c">// example</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs29', 51)" onmouseover="showTip(event, 'fs29', 51)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 52)" onmouseover="showTip(event, 'fs30', 52)" class="i">Win32</span>

<span onmouseout="hideTip(event, 'fs28', 53)" onmouseover="showTip(event, 'fs28', 53)" class="i">denull</span> {
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 54)" onmouseover="showTip(event, 'fs31', 54)" class="i">bkey</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 55)" onmouseover="showTip(event, 'fs32', 55)" class="t">RegistryKey</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 56)" onmouseover="showTip(event, 'fs33', 56)" class="f">OpenBaseKey</span>(<span onmouseout="hideTip(event, 'fs34', 57)" onmouseover="showTip(event, 'fs34', 57)" class="t">RegistryHive</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 58)" onmouseover="showTip(event, 'fs35', 58)" class="i">CurrentUser</span>, <span onmouseout="hideTip(event, 'fs36', 59)" onmouseover="showTip(event, 'fs36', 59)" class="t">RegistryView</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 60)" onmouseover="showTip(event, 'fs37', 60)" class="i">Default</span>)
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs38', 61)" onmouseover="showTip(event, 'fs38', 61)" class="i">k1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 62)" onmouseover="showTip(event, 'fs31', 62)" class="i">bkey</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 63)" onmouseover="showTip(event, 'fs39', 63)" class="f">OpenSubKey</span>(<span class="s">@&quot;Software\Microsoft\VisualStudio\11.0&quot;</span>)
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs40', 64)" onmouseover="showTip(event, 'fs40', 64)" class="i">k2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 65)" onmouseover="showTip(event, 'fs38', 65)" class="i">k1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 66)" onmouseover="showTip(event, 'fs39', 66)" class="f">OpenSubKey</span>(<span class="s">@&quot;DialogPage\Microsoft.VisualStudio.FSharp.Interactive.FsiPropertyPage&quot;</span>)
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs41', 67)" onmouseover="showTip(event, 'fs41', 67)" class="i">switch</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 68)" onmouseover="showTip(event, 'fs40', 68)" class="i">k2</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 69)" onmouseover="showTip(event, 'fs42', 69)" class="f">GetValue</span>(<span class="s">&quot;FsiPreferAnyCPUVersion&quot;</span>) <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs43', 70)" onmouseover="showTip(event, 'fs43', 70)" class="t">string</span>

    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs41', 71)" onmouseover="showTip(event, 'fs41', 71)" class="i">switch</span> <span class="o">=</span> <span class="s">&quot;False&quot;</span> <span class="k">then</span>
        <span class="k">return</span> <span onmouseout="hideTip(event, 'fs40', 72)" onmouseover="showTip(event, 'fs40', 72)" class="i">k2</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 73)" onmouseover="showTip(event, 'fs42', 73)" class="f">GetValue</span>(<span class="s">&quot;FsiCommandLineArgs&quot;</span>) <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs43', 74)" onmouseover="showTip(event, 'fs43', 74)" class="t">string</span>
    <span class="k">else</span>
        <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs16', 75)" onmouseover="showTip(event, 'fs16', 75)" class="p">None</span>
}
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val usesNullAsTrueValue&lt;&#39;T&gt; : bool<br /><br />Full name: Script.usesNullAsTrueValue</div>
<div class="tip" id="fs2">val typeof&lt;&#39;T&gt; : System.Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs3">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs4">val attrs : obj []</div>
<div class="tip" id="fs5">Multiple items<br />type CompilationRepresentationAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : flags:CompilationRepresentationFlags -&gt; CompilationRepresentationAttribute<br />&#160;&#160;member Flags : CompilationRepresentationFlags<br /><br />Full name: Microsoft.FSharp.Core.CompilationRepresentationAttribute<br /><br />--------------------<br />new : flags:CompilationRepresentationFlags -&gt; CompilationRepresentationAttribute</div>
<div class="tip" id="fs6">property System.Array.Length: int</div>
<div class="tip" id="fs7">val flags : CompilationRepresentationFlags</div>
<div class="tip" id="fs8">System.Enum.HasFlag(flag: System.Enum) : bool</div>
<div class="tip" id="fs9">type CompilationRepresentationFlags =<br />&#160;&#160;|  None  =  0<br />&#160;&#160;|  Static  =  1<br />&#160;&#160;|  Instance  =  2<br />&#160;&#160;|  ModuleSuffix  =  4<br />&#160;&#160;|  UseNullAsTrueValue  =  8<br />&#160;&#160;|  Event  =  16<br /><br />Full name: Microsoft.FSharp.Core.CompilationRepresentationFlags</div>
<div class="tip" id="fs10">CompilationRepresentationFlags.UseNullAsTrueValue: CompilationRepresentationFlags = 8</div>
<div class="tip" id="fs11">val stripNull : x:&#39;T -&gt; &#39;T option (requires reference type)<br /><br />Full name: Script.stripNull</div>
<div class="tip" id="fs12">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs13">val x : &#39;T (requires reference type)</div>
<div class="tip" id="fs14">type obj = System.Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs15">System.Object.ReferenceEquals(objA: obj, objB: obj) : bool</div>
<div class="tip" id="fs16">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs17">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs18">Multiple items<br />type DenullBuilder =<br />&#160;&#160;new : unit -&gt; DenullBuilder<br />&#160;&#160;member Bind : x:&#39;T * f:(&#39;T -&gt; &#39;S option) -&gt; &#39;S option (requires reference type)<br />&#160;&#160;member Return : x:&#39;T -&gt; &#39;T option (requires reference type)<br />&#160;&#160;member ReturnFrom : x:&#39;T option -&gt; &#39;T option<br /><br />Full name: Script.DenullBuilder<br /><br />--------------------<br />new : unit -&gt; DenullBuilder</div>
<div class="tip" id="fs19">member DenullBuilder.Return : x:&#39;T -&gt; &#39;T option (requires reference type)<br /><br />Full name: Script.DenullBuilder.Return</div>
<div class="tip" id="fs20">val __ : DenullBuilder</div>
<div class="tip" id="fs21">member DenullBuilder.Bind : x:&#39;T * f:(&#39;T -&gt; &#39;S option) -&gt; &#39;S option (requires reference type)<br /><br />Full name: Script.DenullBuilder.Bind</div>
<div class="tip" id="fs22">val f : (&#39;T -&gt; &#39;S option) (requires reference type)</div>
<div class="tip" id="fs23">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs24">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs25">val bind : binder:(&#39;T -&gt; &#39;U option) -&gt; option:&#39;T option -&gt; &#39;U option<br /><br />Full name: Microsoft.FSharp.Core.Option.bind</div>
<div class="tip" id="fs26">member DenullBuilder.ReturnFrom : x:&#39;T option -&gt; &#39;T option<br /><br />Full name: Script.DenullBuilder.ReturnFrom</div>
<div class="tip" id="fs27">val x : &#39;T option</div>
<div class="tip" id="fs28">val denull : DenullBuilder<br /><br />Full name: Script.denull</div>
<div class="tip" id="fs29">namespace Microsoft</div>
<div class="tip" id="fs30">namespace Microsoft.Win32</div>
<div class="tip" id="fs31">val bkey : RegistryKey</div>
<div class="tip" id="fs32">type RegistryKey =<br />&#160;&#160;inherit MarshalByRefObject<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member CreateSubKey : subkey:string -&gt; RegistryKey + 4 overloads<br />&#160;&#160;member DeleteSubKey : subkey:string -&gt; unit + 1 overload<br />&#160;&#160;member DeleteSubKeyTree : subkey:string -&gt; unit + 1 overload<br />&#160;&#160;member DeleteValue : name:string -&gt; unit + 1 overload<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member Flush : unit -&gt; unit<br />&#160;&#160;member GetAccessControl : unit -&gt; RegistrySecurity + 1 overload<br />&#160;&#160;member GetSubKeyNames : unit -&gt; string[]<br />&#160;&#160;member GetValue : name:string -&gt; obj + 2 overloads<br />&#160;&#160;...<br /><br />Full name: Microsoft.Win32.RegistryKey</div>
<div class="tip" id="fs33">RegistryKey.OpenBaseKey(hKey: RegistryHive, view: RegistryView) : RegistryKey</div>
<div class="tip" id="fs34">type RegistryHive =<br />&#160;&#160;| ClassesRoot = -2147483648<br />&#160;&#160;| CurrentUser = -2147483647<br />&#160;&#160;| LocalMachine = -2147483646<br />&#160;&#160;| Users = -2147483645<br />&#160;&#160;| PerformanceData = -2147483644<br />&#160;&#160;| CurrentConfig = -2147483643<br />&#160;&#160;| DynData = -2147483642<br /><br />Full name: Microsoft.Win32.RegistryHive</div>
<div class="tip" id="fs35">field RegistryHive.CurrentUser = -2147483647</div>
<div class="tip" id="fs36">type RegistryView =<br />&#160;&#160;| Default = 0<br />&#160;&#160;| Registry64 = 256<br />&#160;&#160;| Registry32 = 512<br /><br />Full name: Microsoft.Win32.RegistryView</div>
<div class="tip" id="fs37">field RegistryView.Default = 0</div>
<div class="tip" id="fs38">val k1 : RegistryKey</div>
<div class="tip" id="fs39">RegistryKey.OpenSubKey(name: string) : RegistryKey<br />RegistryKey.OpenSubKey(name: string, permissionCheck: RegistryKeyPermissionCheck) : RegistryKey<br />RegistryKey.OpenSubKey(name: string, writable: bool) : RegistryKey<br />RegistryKey.OpenSubKey(name: string, permissionCheck: RegistryKeyPermissionCheck, rights: System.Security.AccessControl.RegistryRights) : RegistryKey</div>
<div class="tip" id="fs40">val k2 : RegistryKey</div>
<div class="tip" id="fs41">val switch : string</div>
<div class="tip" id="fs42">RegistryKey.GetValue(name: string) : obj<br />RegistryKey.GetValue(name: string, defaultValue: obj) : obj<br />RegistryKey.GetValue(name: string, defaultValue: obj, options: RegistryValueOptions) : obj</div>
<div class="tip" id="fs43">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>

