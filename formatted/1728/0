<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">FSharpEngine</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">Xna</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">Framework</span>
<span class="c">// From http://www.fssnip.net/er</span>
<span class="c">// Define an immutable stack Literally dont understand how unions work, should read up on that</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">ImmutableStack</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="p">Empty</span> 
    | <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="p">Stack</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">T</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="t">ImmutableStack</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="f">Push</span> <span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="p">Stack</span>(<span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="i">s</span>)

    <span class="c">// Returns a (unit -&gt; &#39;T) How to make it just a &#39;T</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 16)" onmouseover="showTip(event, 'fs9', 16)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="f">Pop</span>() <span class="o">=</span> 
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs9', 18)" onmouseover="showTip(event, 'fs9', 18)" class="i">s</span> <span class="k">with</span>
      | <span onmouseout="hideTip(event, 'fs7', 19)" onmouseover="showTip(event, 'fs7', 19)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="f">failwith</span> <span class="s">&quot;Underflow&quot;</span>
      | <span onmouseout="hideTip(event, 'fs8', 21)" onmouseover="showTip(event, 'fs8', 21)" class="p">Stack</span>(<span onmouseout="hideTip(event, 'fs14', 22)" onmouseover="showTip(event, 'fs14', 22)" class="i">t</span>,_) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="i">t</span>

    <span class="c">// returns the top member of the stack; Returns an ImmutableStack&lt;&#39;T&gt; how to make it just a &#39;T  ??</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 24)" onmouseover="showTip(event, 'fs9', 24)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 25)" onmouseover="showTip(event, 'fs15', 25)" class="f">Top</span>() <span class="o">=</span> 
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs9', 26)" onmouseover="showTip(event, 'fs9', 26)" class="i">s</span> <span class="k">with</span>
      | <span onmouseout="hideTip(event, 'fs7', 27)" onmouseover="showTip(event, 'fs7', 27)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 28)" onmouseover="showTip(event, 'fs13', 28)" class="f">failwith</span> <span class="s">&quot;Contain no elements&quot;</span>
      | <span onmouseout="hideTip(event, 'fs8', 29)" onmouseover="showTip(event, 'fs8', 29)" class="p">Stack</span>(_,<span onmouseout="hideTip(event, 'fs16', 30)" onmouseover="showTip(event, 'fs16', 30)" class="i">st</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs16', 31)" onmouseover="showTip(event, 'fs16', 31)" class="i">st</span>

    <span class="c">// makes an empty Stack</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 32)" onmouseover="showTip(event, 'fs9', 32)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 33)" onmouseover="showTip(event, 'fs17', 33)" class="i">IEmpty</span> <span class="o">=</span> 
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs9', 34)" onmouseover="showTip(event, 'fs9', 34)" class="i">s</span> <span class="k">with</span>
      | <span onmouseout="hideTip(event, 'fs7', 35)" onmouseover="showTip(event, 'fs7', 35)" class="p">Empty</span> <span class="k">-&gt;</span> <span class="k">true</span>
      | _ <span class="k">-&gt;</span> <span class="k">false</span>

    <span class="c">// Returns a (unit -&gt; &#39;T List); How to make it Return a list of type &#39;T</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 36)" onmouseover="showTip(event, 'fs9', 36)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 37)" onmouseover="showTip(event, 'fs18', 37)" class="f">All</span>() <span class="o">=</span> 
      <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs19', 38)" onmouseover="showTip(event, 'fs19', 38)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs20', 39)" onmouseover="showTip(event, 'fs20', 39)" class="i">acc</span> <span class="o">=</span> <span class="k">function</span>
      | <span onmouseout="hideTip(event, 'fs7', 40)" onmouseover="showTip(event, 'fs7', 40)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 41)" onmouseover="showTip(event, 'fs20', 41)" class="i">acc</span>
      | <span onmouseout="hideTip(event, 'fs8', 42)" onmouseover="showTip(event, 'fs8', 42)" class="p">Stack</span>(<span onmouseout="hideTip(event, 'fs21', 43)" onmouseover="showTip(event, 'fs21', 43)" class="i">t</span>,<span onmouseout="hideTip(event, 'fs22', 44)" onmouseover="showTip(event, 'fs22', 44)" class="i">st</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 45)" onmouseover="showTip(event, 'fs19', 45)" class="f">loop</span> (<span onmouseout="hideTip(event, 'fs21', 46)" onmouseover="showTip(event, 'fs21', 46)" class="i">t</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs20', 47)" onmouseover="showTip(event, 'fs20', 47)" class="i">acc</span>) <span onmouseout="hideTip(event, 'fs22', 48)" onmouseover="showTip(event, 'fs22', 48)" class="i">st</span>
      <span onmouseout="hideTip(event, 'fs19', 49)" onmouseover="showTip(event, 'fs19', 49)" class="f">loop</span> [] <span onmouseout="hideTip(event, 'fs9', 50)" onmouseover="showTip(event, 'fs9', 50)" class="i">s</span>

<span class="c">// How am I going to deal with f#&#39;s ordering?</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs23', 51)" onmouseover="showTip(event, 'fs23', 51)" class="t">State</span>(<span onmouseout="hideTip(event, 'fs24', 52)" onmouseover="showTip(event, 'fs24', 52)" class="i">Name</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs25', 53)" onmouseover="showTip(event, 'fs25', 53)" class="t">String</span>, <span onmouseout="hideTip(event, 'fs26', 54)" onmouseover="showTip(event, 'fs26', 54)" class="i">Id</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs27', 55)" onmouseover="showTip(event, 'fs27', 55)" class="t">int</span>, <span onmouseout="hideTip(event, 'fs28', 56)" onmouseover="showTip(event, 'fs28', 56)" class="i">game</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs29', 57)" onmouseover="showTip(event, 'fs29', 57)" class="t">Game</span>, <span onmouseout="hideTip(event, 'fs30', 58)" onmouseover="showTip(event, 'fs30', 58)" class="i">StateManager</span><span class="o">:</span><span class="i">GameStateManager</span>) <span class="k">as</span> <span onmouseout="hideTip(event, 'fs31', 59)" onmouseover="showTip(event, 'fs31', 59)" class="v">self</span> <span class="o">=</span>
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs32', 60)" onmouseover="showTip(event, 'fs32', 60)" class="t">DrawableGameComponent</span>(<span class="i">game</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 61)" onmouseover="showTip(event, 'fs33', 61)" class="i">ChildComponents</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs34', 62)" onmouseover="showTip(event, 'fs34', 62)" class="t">List</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs35', 63)" onmouseover="showTip(event, 'fs35', 63)" class="t">GameComponent</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 64)" onmouseover="showTip(event, 'fs34', 64)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 65)" onmouseover="showTip(event, 'fs36', 65)" class="i">empty</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 66)" onmouseover="showTip(event, 'fs31', 66)" class="i">self</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 67)" onmouseover="showTip(event, 'fs31', 67)" class="v">self</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 68)" onmouseover="showTip(event, 'fs37', 68)" class="i">show</span> <span class="o">=</span> 
        <span class="k">base</span><span class="o">.</span><span class="i">Visible</span><span class="o">&lt;-</span><span class="k">true</span>
        <span class="k">base</span><span class="o">.</span><span class="i">Enabled</span><span class="o">&lt;-</span><span class="k">true</span>

        <span class="k">for</span> <span onmouseout="hideTip(event, 'fs38', 69)" onmouseover="showTip(event, 'fs38', 69)" class="i">c</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs33', 70)" onmouseover="showTip(event, 'fs33', 70)" class="i">ChildComponents</span> <span class="k">do</span>
            <span onmouseout="hideTip(event, 'fs38', 71)" onmouseover="showTip(event, 'fs38', 71)" class="i">c</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 72)" onmouseover="showTip(event, 'fs39', 72)" class="i">Enabled</span><span class="o">&lt;-</span><span class="k">true</span>
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs38', 73)" onmouseover="showTip(event, 'fs38', 73)" class="i">c</span> <span class="k">with</span>
            | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs32', 74)" onmouseover="showTip(event, 'fs32', 74)" class="t">DrawableGameComponent</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs40', 75)" onmouseover="showTip(event, 'fs40', 75)" class="i">dgc</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs40', 76)" onmouseover="showTip(event, 'fs40', 76)" class="i">dgc</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 77)" onmouseover="showTip(event, 'fs41', 77)" class="i">Visible</span><span class="o">&lt;-</span><span class="k">true</span>
            | _ <span class="k">-&gt;</span> ()

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 78)" onmouseover="showTip(event, 'fs42', 78)" class="i">hide</span> <span class="o">=</span>
        <span class="k">base</span><span class="o">.</span><span class="i">Visible</span><span class="o">&lt;-</span><span class="k">false</span>
        <span class="k">base</span><span class="o">.</span><span class="i">Enabled</span><span class="o">&lt;-</span><span class="k">false</span>

        <span class="k">for</span> <span onmouseout="hideTip(event, 'fs38', 79)" onmouseover="showTip(event, 'fs38', 79)" class="i">c</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs33', 80)" onmouseover="showTip(event, 'fs33', 80)" class="i">ChildComponents</span> <span class="k">do</span>
            <span onmouseout="hideTip(event, 'fs38', 81)" onmouseover="showTip(event, 'fs38', 81)" class="i">c</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 82)" onmouseover="showTip(event, 'fs39', 82)" class="i">Enabled</span><span class="o">&lt;-</span><span class="k">false</span>
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs38', 83)" onmouseover="showTip(event, 'fs38', 83)" class="i">c</span> <span class="k">with</span>
            | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs32', 84)" onmouseover="showTip(event, 'fs32', 84)" class="t">DrawableGameComponent</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs40', 85)" onmouseover="showTip(event, 'fs40', 85)" class="i">dgc</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs40', 86)" onmouseover="showTip(event, 'fs40', 86)" class="i">dgc</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 87)" onmouseover="showTip(event, 'fs41', 87)" class="i">Visible</span><span class="o">&lt;-</span><span class="k">false</span>
            | _ <span class="k">-&gt;</span> ()

    <span class="c">// if current state is this state show otherwise hide</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs43', 88)" onmouseover="showTip(event, 'fs43', 88)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 89)" onmouseover="showTip(event, 'fs44', 89)" class="f">StateChange</span> <span onmouseout="hideTip(event, 'fs45', 90)" onmouseover="showTip(event, 'fs45', 90)" class="i">sender</span> <span onmouseout="hideTip(event, 'fs46', 91)" onmouseover="showTip(event, 'fs46', 91)" class="i">e</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs30', 92)" onmouseover="showTip(event, 'fs30', 92)" class="i">StateManager</span><span class="o">.</span><span class="i">CurrentState</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs47', 93)" onmouseover="showTip(event, 'fs47', 93)" class="i">self</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs37', 94)" onmouseover="showTip(event, 'fs37', 94)" class="i">show</span>
        | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs42', 95)" onmouseover="showTip(event, 'fs42', 95)" class="i">hide</span>
            

    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs43', 96)" onmouseover="showTip(event, 'fs43', 96)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 97)" onmouseover="showTip(event, 'fs48', 97)" class="f">Initialize</span>() <span class="o">=</span> 
        <span class="k">base</span><span class="o">.</span><span class="f">Initialize</span>()

    <span class="c">// make that update method in the program and the draw one too?</span>

 <span class="k">type</span> <span onmouseout="hideTip(event, 'fs49', 98)" onmouseover="showTip(event, 'fs49', 98)" class="t">GameStateManager</span>(<span onmouseout="hideTip(event, 'fs28', 99)" onmouseover="showTip(event, 'fs28', 99)" class="i">game</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs29', 100)" onmouseover="showTip(event, 'fs29', 100)" class="t">Game</span>) <span class="k">as</span> <span onmouseout="hideTip(event, 'fs50', 101)" onmouseover="showTip(event, 'fs50', 101)" class="v">self</span> <span class="o">=</span> 
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs35', 102)" onmouseover="showTip(event, 'fs35', 102)" class="t">GameComponent</span>(<span class="i">game</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 103)" onmouseover="showTip(event, 'fs51', 103)" class="i">states</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 104)" onmouseover="showTip(event, 'fs6', 104)" class="t">ImmutableStack</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs23', 105)" onmouseover="showTip(event, 'fs23', 105)" class="t">State</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 106)" onmouseover="showTip(event, 'fs6', 106)" class="t">ImmutableStack</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 107)" onmouseover="showTip(event, 'fs7', 107)" class="p">Empty</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs52', 108)" onmouseover="showTip(event, 'fs52', 108)" class="i">startDrawOrder</span> <span class="o">=</span> <span class="n">5000</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 109)" onmouseover="showTip(event, 'fs53', 109)" class="i">drawOrderInc</span> <span class="o">=</span> <span class="n">100</span>
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs54', 110)" onmouseover="showTip(event, 'fs54', 110)" class="v">drawOrder</span> <span class="o">=</span> <span class="n">0</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs55', 111)" onmouseover="showTip(event, 'fs55', 111)" class="i">OnStateChange</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs56', 112)" onmouseover="showTip(event, 'fs56', 112)" class="t">Event</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs57', 113)" onmouseover="showTip(event, 'fs57', 113)" class="t">EventHandler</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs58', 114)" onmouseover="showTip(event, 'fs58', 114)" class="t">EventArgs</span><span class="o">&gt;</span>,<span onmouseout="hideTip(event, 'fs58', 115)" onmouseover="showTip(event, 'fs58', 115)" class="t">EventArgs</span><span class="o">&gt;</span>()

    <span class="k">member</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs59', 116)" onmouseover="showTip(event, 'fs59', 116)" class="i">gsm</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 117)" onmouseover="showTip(event, 'fs60', 117)" class="f">RemoveState</span>() <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs61', 118)" onmouseover="showTip(event, 'fs61', 118)" class="f">state</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 119)" onmouseover="showTip(event, 'fs51', 119)" class="i">states</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 120)" onmouseover="showTip(event, 'fs62', 120)" class="f">Pop</span>
        <span onmouseout="hideTip(event, 'fs55', 121)" onmouseover="showTip(event, 'fs55', 121)" class="i">OnStateChange</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 122)" onmouseover="showTip(event, 'fs63', 122)" class="i">Publish</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 123)" onmouseover="showTip(event, 'fs64', 123)" class="f">RemoveHandler</span> <span onmouseout="hideTip(event, 'fs61', 124)" onmouseover="showTip(event, 'fs61', 124)" class="f">state</span><span class="o">.</span><span class="i">StateChange</span>
        <span class="k">base</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 125)" onmouseover="showTip(event, 'fs29', 125)" class="i">Game</span><span class="o">.</span><span class="i">Components</span><span class="o">.</span><span class="f">Remove</span>(<span onmouseout="hideTip(event, 'fs51', 126)" onmouseover="showTip(event, 'fs51', 126)" class="i">states</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 127)" onmouseover="showTip(event, 'fs62', 127)" class="f">Pop</span>()) 

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs59', 128)" onmouseover="showTip(event, 'fs59', 128)" class="i">gsm</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 129)" onmouseover="showTip(event, 'fs65', 129)" class="i">CurrentState</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 130)" onmouseover="showTip(event, 'fs51', 130)" class="i">states</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 131)" onmouseover="showTip(event, 'fs66', 131)" class="f">Top</span>

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs59', 132)" onmouseover="showTip(event, 'fs59', 132)" class="i">gsm</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs67', 133)" onmouseover="showTip(event, 'fs67', 133)" class="f">PopState</span>() <span class="o">=</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs51', 134)" onmouseover="showTip(event, 'fs51', 134)" class="i">states</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 135)" onmouseover="showTip(event, 'fs68', 135)" class="f">All</span><span class="o">.</span><span class="i">Length</span> <span class="o">&gt;</span> <span class="n">0</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs59', 136)" onmouseover="showTip(event, 'fs59', 136)" class="i">gsm</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 137)" onmouseover="showTip(event, 'fs69', 137)" class="f">RemoveState</span>
            <span onmouseout="hideTip(event, 'fs54', 138)" onmouseover="showTip(event, 'fs54', 138)" class="v">drawOrder</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs54', 139)" onmouseover="showTip(event, 'fs54', 139)" class="v">drawOrder</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs53', 140)" onmouseover="showTip(event, 'fs53', 140)" class="i">drawOrderInc</span>
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs55', 141)" onmouseover="showTip(event, 'fs55', 141)" class="i">OnStateChange</span> <span class="o">!=</span> <span class="k">null</span> <span class="k">then</span>
                <span onmouseout="hideTip(event, 'fs55', 142)" onmouseover="showTip(event, 'fs55', 142)" class="i">OnStateChange</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 143)" onmouseover="showTip(event, 'fs70', 143)" class="f">Trigger</span>(<span onmouseout="hideTip(event, 'fs50', 144)" onmouseover="showTip(event, 'fs50', 144)" class="v">self</span>, <span class="k">null</span>)

    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs59', 145)" onmouseover="showTip(event, 'fs59', 145)" class="i">gsm</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 146)" onmouseover="showTip(event, 'fs71', 146)" class="f">Initialize</span>() <span class="o">=</span>
        <span class="k">base</span><span class="o">.</span><span class="f">Initialize</span>()

    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs59', 147)" onmouseover="showTip(event, 'fs59', 147)" class="i">gsm</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 148)" onmouseover="showTip(event, 'fs72', 148)" class="f">Update</span>(<span onmouseout="hideTip(event, 'fs73', 149)" onmouseover="showTip(event, 'fs73', 149)" class="i">gameTime</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs74', 150)" onmouseover="showTip(event, 'fs74', 150)" class="t">GameTime</span>) <span class="o">=</span> 
        <span class="k">base</span><span class="o">.</span><span class="f">Update</span>(<span onmouseout="hideTip(event, 'fs73', 151)" onmouseover="showTip(event, 'fs73', 151)" class="i">gameTime</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module FSharpEngine</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace Microsoft</div>
<div class="tip" id="fs4">namespace Microsoft.Xna</div>
<div class="tip" id="fs5">namespace Microsoft.Xna.Framework</div>
<div class="tip" id="fs6">type ImmutableStack&lt;&#39;T&gt; =<br />&#160;&#160;| Empty<br />&#160;&#160;| Stack of &#39;T * ImmutableStack&lt;&#39;T&gt;<br />&#160;&#160;member All : unit -&gt; &#39;T list<br />&#160;&#160;member Pop : unit -&gt; &#39;T<br />&#160;&#160;member Push : x:&#39;T -&gt; ImmutableStack&lt;&#39;T&gt;<br />&#160;&#160;member Top : unit -&gt; ImmutableStack&lt;&#39;T&gt;<br />&#160;&#160;member IEmpty : bool<br /><br />Full name: FSharpEngine.ImmutableStack&lt;_&gt;</div>
<div class="tip" id="fs7">union case ImmutableStack.Empty: ImmutableStack&lt;&#39;T&gt;</div>
<div class="tip" id="fs8">union case ImmutableStack.Stack: &#39;T * ImmutableStack&lt;&#39;T&gt; -&gt; ImmutableStack&lt;&#39;T&gt;</div>
<div class="tip" id="fs9">val s : ImmutableStack&lt;&#39;T&gt;</div>
<div class="tip" id="fs10">member ImmutableStack.Push : x:&#39;T -&gt; ImmutableStack&lt;&#39;T&gt;<br /><br />Full name: FSharpEngine.ImmutableStack`1.Push</div>
<div class="tip" id="fs11">val x : &#39;T</div>
<div class="tip" id="fs12">member ImmutableStack.Pop : unit -&gt; &#39;T<br /><br />Full name: FSharpEngine.ImmutableStack`1.Pop</div>
<div class="tip" id="fs13">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs14">val t : &#39;T</div>
<div class="tip" id="fs15">member ImmutableStack.Top : unit -&gt; ImmutableStack&lt;&#39;T&gt;<br /><br />Full name: FSharpEngine.ImmutableStack`1.Top</div>
<div class="tip" id="fs16">val st : ImmutableStack&lt;&#39;T&gt;</div>
<div class="tip" id="fs17">member ImmutableStack.IEmpty : bool<br /><br />Full name: FSharpEngine.ImmutableStack`1.IEmpty</div>
<div class="tip" id="fs18">member ImmutableStack.All : unit -&gt; &#39;T list<br /><br />Full name: FSharpEngine.ImmutableStack`1.All</div>
<div class="tip" id="fs19">val loop : (&#39;a list -&gt; ImmutableStack&lt;&#39;a&gt; -&gt; &#39;a list)</div>
<div class="tip" id="fs20">val acc : &#39;a list</div>
<div class="tip" id="fs21">val t : &#39;a</div>
<div class="tip" id="fs22">val st : ImmutableStack&lt;&#39;a&gt;</div>
<div class="tip" id="fs23">Multiple items<br />type State =<br />&#160;&#160;inherit DrawableGameComponent<br />&#160;&#160;new : Name:String * Id:int * game:Game * StateManager:obj -&gt; State<br />&#160;&#160;override Initialize : unit -&gt; unit<br />&#160;&#160;member StateChange : sender:&#39;a -&gt; e:&#39;b -&gt; unit<br /><br />Full name: FSharpEngine.State<br /><br />--------------------<br />new : Name:String * Id:int * game:Game * StateManager:obj -&gt; State</div>
<div class="tip" id="fs24">val Name : String</div>
<div class="tip" id="fs25">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs26">val Id : int</div>
<div class="tip" id="fs27">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs28">val game : Game</div>
<div class="tip" id="fs29">Multiple items<br />type Game =<br />&#160;&#160;new : unit -&gt; Game<br />&#160;&#160;member Components : GameComponentCollection<br />&#160;&#160;member Content : ContentManager with get, set<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member Exit : unit -&gt; unit<br />&#160;&#160;member GraphicsDevice : GraphicsDevice<br />&#160;&#160;member InactiveSleepTime : TimeSpan with get, set<br />&#160;&#160;member IsActive : bool<br />&#160;&#160;member IsFixedTimeStep : bool with get, set<br />&#160;&#160;member IsMouseVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: Microsoft.Xna.Framework.Game<br /><br />--------------------<br />Game() : unit</div>
<div class="tip" id="fs30">val StateManager : obj</div>
<div class="tip" id="fs31">val self : State</div>
<div class="tip" id="fs32">Multiple items<br />type DrawableGameComponent =<br />&#160;&#160;inherit GameComponent<br />&#160;&#160;new : game:Game -&gt; DrawableGameComponent<br />&#160;&#160;member Draw : gameTime:GameTime -&gt; unit<br />&#160;&#160;member DrawOrder : int with get, set<br />&#160;&#160;member GraphicsDevice : GraphicsDevice<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member Visible : bool with get, set<br />&#160;&#160;event DrawOrderChanged : EventHandler&lt;EventArgs&gt;<br />&#160;&#160;event VisibleChanged : EventHandler&lt;EventArgs&gt;<br /><br />Full name: Microsoft.Xna.Framework.DrawableGameComponent<br /><br />--------------------<br />DrawableGameComponent(game: Game) : unit</div>
<div class="tip" id="fs33">val ChildComponents : List&lt;GameComponent&gt;</div>
<div class="tip" id="fs34">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs35">Multiple items<br />type GameComponent =<br />&#160;&#160;new : game:Game -&gt; GameComponent<br />&#160;&#160;member CompareTo : other:GameComponent -&gt; int<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member Enabled : bool with get, set<br />&#160;&#160;member Game : Game with get, set<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member Update : gameTime:GameTime -&gt; unit<br />&#160;&#160;member UpdateOrder : int with get, set<br />&#160;&#160;event EnabledChanged : EventHandler&lt;EventArgs&gt;<br />&#160;&#160;event UpdateOrderChanged : EventHandler&lt;EventArgs&gt;<br /><br />Full name: Microsoft.Xna.Framework.GameComponent<br /><br />--------------------<br />GameComponent(game: Game) : unit</div>
<div class="tip" id="fs36">val empty&lt;&#39;T&gt; : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.empty</div>
<div class="tip" id="fs37">val show : unit</div>
<div class="tip" id="fs38">val c : GameComponent</div>
<div class="tip" id="fs39">property GameComponent.Enabled: bool</div>
<div class="tip" id="fs40">val dgc : DrawableGameComponent</div>
<div class="tip" id="fs41">property DrawableGameComponent.Visible: bool</div>
<div class="tip" id="fs42">val hide : unit</div>
<div class="tip" id="fs43">val s : State</div>
<div class="tip" id="fs44">member State.StateChange : sender:&#39;a -&gt; e:&#39;b -&gt; unit<br /><br />Full name: FSharpEngine.State.StateChange</div>
<div class="tip" id="fs45">val sender : &#39;a</div>
<div class="tip" id="fs46">val e : &#39;b</div>
<div class="tip" id="fs47">val self : obj</div>
<div class="tip" id="fs48">override State.Initialize : unit -&gt; unit<br /><br />Full name: FSharpEngine.State.Initialize</div>
<div class="tip" id="fs49">Multiple items<br />type GameStateManager =<br />&#160;&#160;inherit GameComponent<br />&#160;&#160;new : game:Game -&gt; GameStateManager<br />&#160;&#160;override Initialize : unit -&gt; unit<br />&#160;&#160;member PopState : unit -&gt; unit<br />&#160;&#160;member private RemoveState : unit -&gt; bool<br />&#160;&#160;override Update : gameTime:GameTime -&gt; unit<br />&#160;&#160;member CurrentState : (unit -&gt; ImmutableStack&lt;State&gt;)<br /><br />Full name: FSharpEngine.GameStateManager<br /><br />--------------------<br />new : game:Game -&gt; GameStateManager</div>
<div class="tip" id="fs50">val self : GameStateManager</div>
<div class="tip" id="fs51">val states : ImmutableStack&lt;State&gt;</div>
<div class="tip" id="fs52">val startDrawOrder : int</div>
<div class="tip" id="fs53">val drawOrderInc : int</div>
<div class="tip" id="fs54">val mutable drawOrder : int</div>
<div class="tip" id="fs55">val OnStateChange : Event&lt;EventHandler&lt;EventArgs&gt;,EventArgs&gt;</div>
<div class="tip" id="fs56">Multiple items<br />module Event<br /><br />from Microsoft.FSharp.Control<br /><br />--------------------<br />type Event&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; Event&lt;&#39;T&gt;<br />&#160;&#160;member Trigger : arg:&#39;T -&gt; unit<br />&#160;&#160;member Publish : IEvent&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Event&lt;_&gt;<br /><br />--------------------<br />type Event&lt;&#39;Delegate,&#39;Args (requires delegate and &#39;Delegate :&gt; Delegate)&gt; =<br />&#160;&#160;new : unit -&gt; Event&lt;&#39;Delegate,&#39;Args&gt;<br />&#160;&#160;member Trigger : sender:obj * args:&#39;Args -&gt; unit<br />&#160;&#160;member Publish : IEvent&lt;&#39;Delegate,&#39;Args&gt;<br /><br />Full name: Microsoft.FSharp.Control.Event&lt;_,_&gt;<br /><br />--------------------<br />new : unit -&gt; Event&lt;&#39;T&gt;<br /><br />--------------------<br />new : unit -&gt; Event&lt;&#39;Delegate,&#39;Args&gt;</div>
<div class="tip" id="fs57">Multiple items<br />type EventHandler =<br />&#160;&#160;delegate of obj * EventArgs -&gt; unit<br /><br />Full name: System.EventHandler<br /><br />--------------------<br />type EventHandler&lt;&#39;TEventArgs (requires &#39;TEventArgs :&gt; EventArgs)&gt; =<br />&#160;&#160;delegate of obj * &#39;TEventArgs -&gt; unit<br /><br />Full name: System.EventHandler&lt;_&gt;</div>
<div class="tip" id="fs58">Multiple items<br />type EventArgs =<br />&#160;&#160;new : unit -&gt; EventArgs<br />&#160;&#160;static val Empty : EventArgs<br /><br />Full name: System.EventArgs<br /><br />--------------------<br />EventArgs() : unit</div>
<div class="tip" id="fs59">val gsm : GameStateManager</div>
<div class="tip" id="fs60">member private GameStateManager.RemoveState : unit -&gt; bool<br /><br />Full name: FSharpEngine.GameStateManager.RemoveState</div>
<div class="tip" id="fs61">val state : (unit -&gt; State)</div>
<div class="tip" id="fs62">member ImmutableStack.Pop : unit -&gt; &#39;T</div>
<div class="tip" id="fs63">property Event.Publish: IEvent&lt;EventHandler&lt;EventArgs&gt;,EventArgs&gt;</div>
<div class="tip" id="fs64">abstract member IDelegateEvent.RemoveHandler : handler:&#39;Delegate -&gt; unit</div>
<div class="tip" id="fs65">member GameStateManager.CurrentState : (unit -&gt; ImmutableStack&lt;State&gt;)<br /><br />Full name: FSharpEngine.GameStateManager.CurrentState</div>
<div class="tip" id="fs66">member ImmutableStack.Top : unit -&gt; ImmutableStack&lt;&#39;T&gt;</div>
<div class="tip" id="fs67">member GameStateManager.PopState : unit -&gt; unit<br /><br />Full name: FSharpEngine.GameStateManager.PopState</div>
<div class="tip" id="fs68">member ImmutableStack.All : unit -&gt; &#39;T list</div>
<div class="tip" id="fs69">member private GameStateManager.RemoveState : unit -&gt; bool</div>
<div class="tip" id="fs70">member Event.Trigger : sender:obj * args:&#39;Args -&gt; unit</div>
<div class="tip" id="fs71">override GameStateManager.Initialize : unit -&gt; unit<br /><br />Full name: FSharpEngine.GameStateManager.Initialize</div>
<div class="tip" id="fs72">override GameStateManager.Update : gameTime:GameTime -&gt; unit<br /><br />Full name: FSharpEngine.GameStateManager.Update</div>
<div class="tip" id="fs73">val gameTime : GameTime</div>
<div class="tip" id="fs74">Multiple items<br />type GameTime =<br />&#160;&#160;new : unit -&gt; GameTime + 2 overloads<br />&#160;&#160;member ElapsedGameTime : TimeSpan with get, set<br />&#160;&#160;member IsRunningSlowly : bool with get, set<br />&#160;&#160;member TotalGameTime : TimeSpan with get, set<br /><br />Full name: Microsoft.Xna.Framework.GameTime<br /><br />--------------------<br />GameTime() : unit<br />GameTime(totalGameTime: TimeSpan, elapsedGameTime: TimeSpan) : unit<br />GameTime(totalRealTime: TimeSpan, elapsedRealTime: TimeSpan, isRunningSlowly: bool) : unit</div>

