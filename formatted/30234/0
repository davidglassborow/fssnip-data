<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// simple port of the python code</span>
<span class="c">// from this excellent article </span>
<span class="c">// https://www.quantstart.com/articles/Basics-of-Statistical-Mean-Reversion-Testing</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="f">gbmts</span> ()  <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">random</span> <span class="o">=</span>  <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">MathNet</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">Numerics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">Random</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="t">SystemRandomSource</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="f">FastDoubles</span>(<span class="n">10000</span>)
    <span onmouseout="hideTip(event, 'fs3', 9)" onmouseover="showTip(event, 'fs3', 9)" class="i">random</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="f">fold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="i">st</span> <span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="i">st</span><span class="o">@</span>[((<span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 16)" onmouseover="showTip(event, 'fs14', 16)" class="f">last</span> <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">st</span>)<span class="o">+</span>(<span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="i">x</span><span class="o">-</span><span class="n">0.5</span>))] ) [<span class="n">1000.0</span>]  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 19)" onmouseover="showTip(event, 'fs15', 19)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 20)" onmouseover="showTip(event, 'fs16', 20)" class="f">toArray</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 21)" onmouseover="showTip(event, 'fs17', 21)" class="f">mrevts</span> ()  <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs4', 22)" onmouseover="showTip(event, 'fs4', 22)" class="i">MathNet</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 23)" onmouseover="showTip(event, 'fs5', 23)" class="i">Numerics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 24)" onmouseover="showTip(event, 'fs6', 24)" class="i">Random</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 25)" onmouseover="showTip(event, 'fs7', 25)" class="t">SystemRandomSource</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 26)" onmouseover="showTip(event, 'fs8', 26)" class="f">FastDoubles</span>(<span class="n">10000</span>)
       
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 27)" onmouseover="showTip(event, 'fs18', 27)" class="f">trendts</span> ()  <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 28)" onmouseover="showTip(event, 'fs3', 28)" class="i">random</span> <span class="o">=</span>  <span onmouseout="hideTip(event, 'fs4', 29)" onmouseover="showTip(event, 'fs4', 29)" class="i">MathNet</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 30)" onmouseover="showTip(event, 'fs5', 30)" class="i">Numerics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 31)" onmouseover="showTip(event, 'fs6', 31)" class="i">Random</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 32)" onmouseover="showTip(event, 'fs7', 32)" class="t">SystemRandomSource</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 33)" onmouseover="showTip(event, 'fs8', 33)" class="f">FastDoubles</span>(<span class="n">10000</span>)
    <span onmouseout="hideTip(event, 'fs3', 34)" onmouseover="showTip(event, 'fs3', 34)" class="i">random</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 35)" onmouseover="showTip(event, 'fs9', 35)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 36)" onmouseover="showTip(event, 'fs10', 36)" class="f">fold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs11', 37)" onmouseover="showTip(event, 'fs11', 37)" class="i">st</span> <span onmouseout="hideTip(event, 'fs12', 38)" onmouseover="showTip(event, 'fs12', 38)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 39)" onmouseover="showTip(event, 'fs11', 39)" class="i">st</span><span class="o">@</span>[((<span onmouseout="hideTip(event, 'fs13', 40)" onmouseover="showTip(event, 'fs13', 40)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 41)" onmouseover="showTip(event, 'fs14', 41)" class="f">last</span> <span onmouseout="hideTip(event, 'fs11', 42)" onmouseover="showTip(event, 'fs11', 42)" class="i">st</span>)<span class="o">+</span>(<span onmouseout="hideTip(event, 'fs12', 43)" onmouseover="showTip(event, 'fs12', 43)" class="i">x</span><span class="o">+</span><span class="n">1.0</span>))] ) [<span class="n">1000.0</span>]  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 44)" onmouseover="showTip(event, 'fs15', 44)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 45)" onmouseover="showTip(event, 'fs16', 45)" class="f">toArray</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 46)" onmouseover="showTip(event, 'fs19', 46)" class="f">difvec</span> (<span onmouseout="hideTip(event, 'fs20', 47)" onmouseover="showTip(event, 'fs20', 47)" class="i">vecin</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs21', 48)" onmouseover="showTip(event, 'fs21', 48)" class="t">float</span> []) <span onmouseout="hideTip(event, 'fs22', 49)" onmouseover="showTip(event, 'fs22', 49)" class="i">lag</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 50)" onmouseover="showTip(event, 'fs23', 50)" class="i">vsub</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 51)" onmouseover="showTip(event, 'fs20', 51)" class="i">vecin</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 52)" onmouseover="showTip(event, 'fs9', 52)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 53)" onmouseover="showTip(event, 'fs24', 53)" class="f">skip</span> <span onmouseout="hideTip(event, 'fs22', 54)" onmouseover="showTip(event, 'fs22', 54)" class="i">lag</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 55)" onmouseover="showTip(event, 'fs25', 55)" class="i">dif</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 56)" onmouseover="showTip(event, 'fs23', 56)" class="i">vsub</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 57)" onmouseover="showTip(event, 'fs9', 57)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 58)" onmouseover="showTip(event, 'fs26', 58)" class="f">mapi</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs27', 59)" onmouseover="showTip(event, 'fs27', 59)" class="i">i</span> <span onmouseout="hideTip(event, 'fs12', 60)" onmouseover="showTip(event, 'fs12', 60)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs12', 61)" onmouseover="showTip(event, 'fs12', 61)" class="i">x</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs20', 62)" onmouseover="showTip(event, 'fs20', 62)" class="i">vecin</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs27', 63)" onmouseover="showTip(event, 'fs27', 63)" class="i">i</span>]  )
    <span onmouseout="hideTip(event, 'fs4', 64)" onmouseover="showTip(event, 'fs4', 64)" class="i">MathNet</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 65)" onmouseover="showTip(event, 'fs5', 65)" class="i">Numerics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 66)" onmouseover="showTip(event, 'fs28', 66)" class="i">Statistics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 67)" onmouseover="showTip(event, 'fs29', 67)" class="t">ArrayStatistics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 68)" onmouseover="showTip(event, 'fs30', 68)" class="f">StandardDeviation</span>(<span onmouseout="hideTip(event, 'fs25', 69)" onmouseover="showTip(event, 'fs25', 69)" class="i">dif</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs31', 70)" onmouseover="showTip(event, 'fs31', 70)" class="f">sqrt</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 71)" onmouseover="showTip(event, 'fs32', 71)" class="f">hurst</span> (<span onmouseout="hideTip(event, 'fs33', 72)" onmouseover="showTip(event, 'fs33', 72)" class="i">vecpriceraw</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs34', 73)" onmouseover="showTip(event, 'fs34', 73)" class="t">double</span> <span onmouseout="hideTip(event, 'fs35', 74)" onmouseover="showTip(event, 'fs35', 74)" class="t">array</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 75)" onmouseover="showTip(event, 'fs36', 75)" class="i">vecprice</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 76)" onmouseover="showTip(event, 'fs33', 76)" class="i">vecpriceraw</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 77)" onmouseover="showTip(event, 'fs9', 77)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 78)" onmouseover="showTip(event, 'fs37', 78)" class="f">map</span>(<span onmouseout="hideTip(event, 'fs38', 79)" onmouseover="showTip(event, 'fs38', 79)" class="f">log</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 80)" onmouseover="showTip(event, 'fs39', 80)" class="i">range</span> <span class="o">=</span> [|<span class="n">2..</span><span class="n">100</span>|]
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 81)" onmouseover="showTip(event, 'fs40', 81)" class="i">lagvec</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 82)" onmouseover="showTip(event, 'fs39', 82)" class="i">range</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 83)" onmouseover="showTip(event, 'fs9', 83)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 84)" onmouseover="showTip(event, 'fs37', 84)" class="f">map</span> (<span onmouseout="hideTip(event, 'fs19', 85)" onmouseover="showTip(event, 'fs19', 85)" class="f">difvec</span> <span onmouseout="hideTip(event, 'fs36', 86)" onmouseover="showTip(event, 'fs36', 86)" class="i">vecprice</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 87)" onmouseover="showTip(event, 'fs41', 87)" class="i">logvec</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 88)" onmouseover="showTip(event, 'fs40', 88)" class="i">lagvec</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 89)" onmouseover="showTip(event, 'fs9', 89)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 90)" onmouseover="showTip(event, 'fs37', 90)" class="f">map</span> (<span onmouseout="hideTip(event, 'fs38', 91)" onmouseover="showTip(event, 'fs38', 91)" class="f">log</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 92)" onmouseover="showTip(event, 'fs42', 92)" class="i">loglag</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 93)" onmouseover="showTip(event, 'fs39', 93)" class="i">range</span> <span class="o">|&gt;</span>  <span onmouseout="hideTip(event, 'fs9', 94)" onmouseover="showTip(event, 'fs9', 94)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 95)" onmouseover="showTip(event, 'fs37', 95)" class="f">map</span>(<span onmouseout="hideTip(event, 'fs21', 96)" onmouseover="showTip(event, 'fs21', 96)" class="f">float</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs38', 97)" onmouseover="showTip(event, 'fs38', 97)" class="f">log</span>)
    <span class="k">let</span> (_,<span onmouseout="hideTip(event, 'fs43', 98)" onmouseover="showTip(event, 'fs43', 98)" class="i">slope</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 99)" onmouseover="showTip(event, 'fs4', 99)" class="i">MathNet</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 100)" onmouseover="showTip(event, 'fs5', 100)" class="i">Numerics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 101)" onmouseover="showTip(event, 'fs44', 101)" class="i">LinearRegression</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 102)" onmouseover="showTip(event, 'fs45', 102)" class="t">SimpleRegression</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 103)" onmouseover="showTip(event, 'fs46', 103)" class="f">Fit</span> (<span onmouseout="hideTip(event, 'fs42', 104)" onmouseover="showTip(event, 'fs42', 104)" class="i">loglag</span>,<span onmouseout="hideTip(event, 'fs41', 105)" onmouseover="showTip(event, 'fs41', 105)" class="i">logvec</span>)
    <span onmouseout="hideTip(event, 'fs43', 106)" onmouseover="showTip(event, 'fs43', 106)" class="i">slope</span><span class="o">*</span><span class="n">2.0</span>
<span class="c">/// test the hurst exponent</span>
<span class="c">/// &gt; gbmts() |&gt; hurst;;</span>
<span class="c">/// val it : float = 0.5092820778</span>
<span class="c">/// &gt; mrevts() |&gt; hurst;;</span>
<span class="c">/// val it : float = -0.0003832790107</span>
<span class="c">/// &gt; trendts() |&gt; hurst;;</span>
<span class="c">/// val it : float = 0.9824236056</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">val gbmts : unit -&gt; float []<br /><br />Full name: Script.gbmts</div>
<div class="tip" id="fs3">val random : float []</div>
<div class="tip" id="fs4">namespace MathNet</div>
<div class="tip" id="fs5">namespace MathNet.Numerics</div>
<div class="tip" id="fs6">namespace MathNet.Numerics.Random</div>
<div class="tip" id="fs7">Multiple items<br />type SystemRandomSource =<br />&#160;&#160;inherit RandomSource<br />&#160;&#160;new : unit -&gt; SystemRandomSource + 3 overloads<br />&#160;&#160;static member Default : SystemRandomSource<br />&#160;&#160;static member DoubleSequence : unit -&gt; IEnumerable&lt;float&gt; + 1 overload<br />&#160;&#160;static member Doubles : values:float[] * seed:int -&gt; unit + 1 overload<br />&#160;&#160;static member FastDoubles : values:float[] -&gt; unit + 1 overload<br /><br />Full name: MathNet.Numerics.Random.SystemRandomSource<br /><br />--------------------<br />MathNet.Numerics.Random.SystemRandomSource() : unit<br />MathNet.Numerics.Random.SystemRandomSource(threadSafe: bool) : unit<br />MathNet.Numerics.Random.SystemRandomSource(seed: int) : unit<br />MathNet.Numerics.Random.SystemRandomSource(seed: int, threadSafe: bool) : unit</div>
<div class="tip" id="fs8">MathNet.Numerics.Random.SystemRandomSource.FastDoubles(length: int) : float []<br />MathNet.Numerics.Random.SystemRandomSource.FastDoubles(values: float []) : unit</div>
<div class="tip" id="fs9">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs10">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; array:&#39;T [] -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.Array.fold</div>
<div class="tip" id="fs11">val st : float list</div>
<div class="tip" id="fs12">val x : float</div>
<div class="tip" id="fs13">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs14">val last : list:&#39;T list -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.List.last</div>
<div class="tip" id="fs15">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs16">val toArray : source:seq&lt;&#39;T&gt; -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Seq.toArray</div>
<div class="tip" id="fs17">val mrevts : unit -&gt; float []<br /><br />Full name: Script.mrevts</div>
<div class="tip" id="fs18">val trendts : unit -&gt; float []<br /><br />Full name: Script.trendts</div>
<div class="tip" id="fs19">val difvec : vecin:float [] -&gt; lag:int -&gt; float<br /><br />Full name: Script.difvec</div>
<div class="tip" id="fs20">val vecin : float []</div>
<div class="tip" id="fs21">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs22">val lag : int</div>
<div class="tip" id="fs23">val vsub : float []</div>
<div class="tip" id="fs24">val skip : count:int -&gt; array:&#39;T [] -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.skip</div>
<div class="tip" id="fs25">val dif : float []</div>
<div class="tip" id="fs26">val mapi : mapping:(int -&gt; &#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.mapi</div>
<div class="tip" id="fs27">val i : int</div>
<div class="tip" id="fs28">namespace MathNet.Numerics.Statistics</div>
<div class="tip" id="fs29">type ArrayStatistics =<br />&#160;&#160;static member Covariance : samples1:float[] * samples2:float[] -&gt; float + 2 overloads<br />&#160;&#160;static member FiveNumberSummaryInplace : data:float[] -&gt; float[] + 1 overload<br />&#160;&#160;static member GeometricMean : data:float[] -&gt; float + 2 overloads<br />&#160;&#160;static member HarmonicMean : data:float[] -&gt; float + 2 overloads<br />&#160;&#160;static member InterquartileRangeInplace : data:float[] -&gt; float + 1 overload<br />&#160;&#160;static member LowerQuartileInplace : data:float[] -&gt; float + 1 overload<br />&#160;&#160;static member Maximum : data:float[] -&gt; float + 1 overload<br />&#160;&#160;static member MaximumAbsolute : data:float[] -&gt; float + 1 overload<br />&#160;&#160;static member MaximumMagnitudePhase : data:Complex[] -&gt; Complex + 1 overload<br />&#160;&#160;static member Mean : data:float[] -&gt; float + 2 overloads<br />&#160;&#160;...<br /><br />Full name: MathNet.Numerics.Statistics.ArrayStatistics</div>
<div class="tip" id="fs30">MathNet.Numerics.Statistics.ArrayStatistics.StandardDeviation(samples: float32 []) : float<br />MathNet.Numerics.Statistics.ArrayStatistics.StandardDeviation(samples: int []) : float<br />MathNet.Numerics.Statistics.ArrayStatistics.StandardDeviation(samples: float []) : float</div>
<div class="tip" id="fs31">val sqrt : value:&#39;T -&gt; &#39;U (requires member Sqrt)<br /><br />Full name: Microsoft.FSharp.Core.Operators.sqrt</div>
<div class="tip" id="fs32">val hurst : vecpriceraw:double array -&gt; float<br /><br />Full name: Script.hurst</div>
<div class="tip" id="fs33">val vecpriceraw : double array</div>
<div class="tip" id="fs34">Multiple items<br />val double : value:&#39;T -&gt; double (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.double<br /><br />--------------------<br />type double = Double<br /><br />Full name: Microsoft.FSharp.Core.double</div>
<div class="tip" id="fs35">type &#39;T array = &#39;T []<br /><br />Full name: Microsoft.FSharp.Core.array&lt;_&gt;</div>
<div class="tip" id="fs36">val vecprice : double []</div>
<div class="tip" id="fs37">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.map</div>
<div class="tip" id="fs38">val log : value:&#39;T -&gt; &#39;T (requires member Log)<br /><br />Full name: Microsoft.FSharp.Core.Operators.log</div>
<div class="tip" id="fs39">val range : int []</div>
<div class="tip" id="fs40">val lagvec : float []</div>
<div class="tip" id="fs41">val logvec : float []</div>
<div class="tip" id="fs42">val loglag : float []</div>
<div class="tip" id="fs43">val slope : float</div>
<div class="tip" id="fs44">namespace MathNet.Numerics.LinearRegression</div>
<div class="tip" id="fs45">type SimpleRegression =<br />&#160;&#160;static member Fit : samples:IEnumerable&lt;Tuple&lt;float, float&gt;&gt; -&gt; Tuple&lt;float, float&gt; + 1 overload<br /><br />Full name: MathNet.Numerics.LinearRegression.SimpleRegression</div>
<div class="tip" id="fs46">MathNet.Numerics.LinearRegression.SimpleRegression.Fit(samples: Collections.Generic.IEnumerable&lt;float * float&gt;) : float * float<br />MathNet.Numerics.LinearRegression.SimpleRegression.Fit(x: float [], y: float []) : float * float</div>

