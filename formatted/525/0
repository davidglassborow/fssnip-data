<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">GASig</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">Generic</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 6)" onmouseover="showTip(event, 'fs2', 6)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">IO</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 8)" onmouseover="showTip(event, 'fs2', 8)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="i">Reflection</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="i">Microsoft</span><span class="o">.</span><span class="i">Build</span><span class="o">.</span><span class="i">Framework</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="i">Microsoft</span><span class="o">.</span><span class="i">Build</span><span class="o">.</span><span class="i">Utilities</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="f">loadAssembly</span> <span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="i">references</span> (<span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="i">qname</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="t">string</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="i">name</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 17)" onmouseover="showTip(event, 'fs10', 17)" class="i">qname</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="f">Split</span>([|<span class="s">&#39;,&#39;</span>|])<span class="o">.</span>[<span class="n">0</span>]<span class="o">.</span><span class="f">ToLower</span>()

    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs9', 19)" onmouseover="showTip(event, 'fs9', 19)" class="i">references</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="f">tryFind</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="i">r</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs17', 23)" onmouseover="showTip(event, 'fs17', 23)" class="t">Path</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 24)" onmouseover="showTip(event, 'fs18', 24)" class="f">GetFileNameWithoutExtension</span>(<span onmouseout="hideTip(event, 'fs16', 25)" onmouseover="showTip(event, 'fs16', 25)" class="i">r</span>)<span class="o">.</span><span class="f">ToLower</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 26)" onmouseover="showTip(event, 'fs12', 26)" class="i">name</span>) <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs19', 27)" onmouseover="showTip(event, 'fs19', 27)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs20', 28)" onmouseover="showTip(event, 'fs20', 28)" class="i">path</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 29)" onmouseover="showTip(event, 'fs21', 29)" class="t">Assembly</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 30)" onmouseover="showTip(event, 'fs22', 30)" class="f">ReflectionOnlyLoadFrom</span>(<span onmouseout="hideTip(event, 'fs20', 31)" onmouseover="showTip(event, 'fs20', 31)" class="i">path</span>)
    | <span onmouseout="hideTip(event, 'fs23', 32)" onmouseover="showTip(event, 'fs23', 32)" class="p">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 33)" onmouseover="showTip(event, 'fs21', 33)" class="t">Assembly</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 34)" onmouseover="showTip(event, 'fs24', 34)" class="f">ReflectionOnlyLoad</span>(<span onmouseout="hideTip(event, 'fs10', 35)" onmouseover="showTip(event, 'fs10', 35)" class="i">qname</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 36)" onmouseover="showTip(event, 'fs25', 36)" class="f">outsort</span> <span onmouseout="hideTip(event, 'fs26', 37)" onmouseover="showTip(event, 'fs26', 37)" class="i">fd</span> <span onmouseout="hideTip(event, 'fs27', 38)" onmouseover="showTip(event, 'fs27', 38)" class="i">prefix</span> <span onmouseout="hideTip(event, 'fs28', 39)" onmouseover="showTip(event, 'fs28', 39)" class="i">data</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs28', 40)" onmouseover="showTip(event, 'fs28', 40)" class="i">data</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 41)" onmouseover="showTip(event, 'fs29', 41)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 42)" onmouseover="showTip(event, 'fs30', 42)" class="f">map</span> (<span onmouseout="hideTip(event, 'fs31', 43)" onmouseover="showTip(event, 'fs31', 43)" class="f">sprintf</span> <span class="s">&quot;</span><span class="pf">%O</span><span class="s">&quot;</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 44)" onmouseover="showTip(event, 'fs29', 44)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 45)" onmouseover="showTip(event, 'fs32', 45)" class="f">sort</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 46)" onmouseover="showTip(event, 'fs29', 46)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 47)" onmouseover="showTip(event, 'fs33', 47)" class="f">iter</span> (<span onmouseout="hideTip(event, 'fs34', 48)" onmouseover="showTip(event, 'fs34', 48)" class="f">fprintfn</span> <span onmouseout="hideTip(event, 'fs26', 49)" onmouseover="showTip(event, 'fs26', 49)" class="i">fd</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s"></span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs27', 50)" onmouseover="showTip(event, 'fs27', 50)" class="i">prefix</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 51)" onmouseover="showTip(event, 'fs35', 51)" class="f">outasm</span> <span onmouseout="hideTip(event, 'fs26', 52)" onmouseover="showTip(event, 'fs26', 52)" class="i">fd</span> (<span onmouseout="hideTip(event, 'fs36', 53)" onmouseover="showTip(event, 'fs36', 53)" class="i">asm</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs21', 54)" onmouseover="showTip(event, 'fs21', 54)" class="t">Assembly</span>) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs36', 55)" onmouseover="showTip(event, 'fs36', 55)" class="i">asm</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 56)" onmouseover="showTip(event, 'fs37', 56)" class="f">GetCustomAttributesData</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 57)" onmouseover="showTip(event, 'fs25', 57)" class="f">outsort</span> <span onmouseout="hideTip(event, 'fs26', 58)" onmouseover="showTip(event, 'fs26', 58)" class="i">fd</span> <span class="s">&quot;&quot;</span>
    <span onmouseout="hideTip(event, 'fs34', 59)" onmouseover="showTip(event, 'fs34', 59)" class="f">fprintfn</span> <span onmouseout="hideTip(event, 'fs26', 60)" onmouseover="showTip(event, 'fs26', 60)" class="i">fd</span> <span class="s">&quot;assembly </span><span class="pf">%s</span><span class="s"></span><span class="e">\n</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs36', 61)" onmouseover="showTip(event, 'fs36', 61)" class="i">asm</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 62)" onmouseover="showTip(event, 'fs38', 62)" class="i">FullName</span>

    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs39', 63)" onmouseover="showTip(event, 'fs39', 63)" class="i">t</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs36', 64)" onmouseover="showTip(event, 'fs36', 64)" class="i">asm</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 65)" onmouseover="showTip(event, 'fs40', 65)" class="f">GetExportedTypes</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs14', 66)" onmouseover="showTip(event, 'fs14', 66)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 67)" onmouseover="showTip(event, 'fs41', 67)" class="f">sortBy</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs39', 68)" onmouseover="showTip(event, 'fs39', 68)" class="i">t</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs39', 69)" onmouseover="showTip(event, 'fs39', 69)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 70)" onmouseover="showTip(event, 'fs42', 70)" class="i">FullName</span>) <span class="k">do</span>
        <span onmouseout="hideTip(event, 'fs39', 71)" onmouseover="showTip(event, 'fs39', 71)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 72)" onmouseover="showTip(event, 'fs43', 72)" class="f">GetCustomAttributesData</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 73)" onmouseover="showTip(event, 'fs25', 73)" class="f">outsort</span> <span onmouseout="hideTip(event, 'fs26', 74)" onmouseover="showTip(event, 'fs26', 74)" class="i">fd</span> <span class="s">&quot;&quot;</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs39', 75)" onmouseover="showTip(event, 'fs39', 75)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 76)" onmouseover="showTip(event, 'fs44', 76)" class="i">IsEnum</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs34', 77)" onmouseover="showTip(event, 'fs34', 77)" class="f">fprintfn</span> <span onmouseout="hideTip(event, 'fs26', 78)" onmouseover="showTip(event, 'fs26', 78)" class="i">fd</span> <span class="s">&quot;enum </span><span class="pf">%O</span><span class="s">: </span><span class="pf">%O</span><span class="s"> = </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs39', 79)" onmouseover="showTip(event, 'fs39', 79)" class="i">t</span> (<span onmouseout="hideTip(event, 'fs39', 80)" onmouseover="showTip(event, 'fs39', 80)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 81)" onmouseover="showTip(event, 'fs45', 81)" class="f">GetEnumUnderlyingType</span>()) (<span onmouseout="hideTip(event, 'fs39', 82)" onmouseover="showTip(event, 'fs39', 82)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 83)" onmouseover="showTip(event, 'fs46', 83)" class="f">GetEnumNames</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs47', 84)" onmouseover="showTip(event, 'fs47', 84)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 85)" onmouseover="showTip(event, 'fs48', 85)" class="f">concat</span> <span class="s">&quot;, &quot;</span>)
        <span class="k">else</span>
            <span onmouseout="hideTip(event, 'fs34', 86)" onmouseover="showTip(event, 'fs34', 86)" class="f">fprintfn</span> <span onmouseout="hideTip(event, 'fs26', 87)" onmouseover="showTip(event, 'fs26', 87)" class="i">fd</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s"> </span><span class="pf">%O</span><span class="s"> [</span><span class="pf">%O</span><span class="s">]&quot;</span> (<span class="k">if</span> <span onmouseout="hideTip(event, 'fs39', 88)" onmouseover="showTip(event, 'fs39', 88)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 89)" onmouseover="showTip(event, 'fs49', 89)" class="i">IsValueType</span> <span class="k">then</span> <span class="s">&quot;struct&quot;</span> <span class="k">else</span> <span class="s">&quot;class&quot;</span>) <span onmouseout="hideTip(event, 'fs39', 90)" onmouseover="showTip(event, 'fs39', 90)" class="i">t</span> <span onmouseout="hideTip(event, 'fs39', 91)" onmouseover="showTip(event, 'fs39', 91)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 92)" onmouseover="showTip(event, 'fs50', 92)" class="i">Attributes</span>
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs39', 93)" onmouseover="showTip(event, 'fs39', 93)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 94)" onmouseover="showTip(event, 'fs51', 94)" class="i">BaseType</span> <span class="o">&lt;&gt;</span> <span class="k">null</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs34', 95)" onmouseover="showTip(event, 'fs34', 95)" class="f">fprintfn</span> <span onmouseout="hideTip(event, 'fs26', 96)" onmouseover="showTip(event, 'fs26', 96)" class="i">fd</span> <span class="s">&quot;</span><span class="e">\t</span><span class="s">inherit </span><span class="pf">%O</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs39', 97)" onmouseover="showTip(event, 'fs39', 97)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 98)" onmouseover="showTip(event, 'fs51', 98)" class="i">BaseType</span>
            <span onmouseout="hideTip(event, 'fs39', 99)" onmouseover="showTip(event, 'fs39', 99)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 100)" onmouseover="showTip(event, 'fs52', 100)" class="f">GetInterfaces</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 101)" onmouseover="showTip(event, 'fs25', 101)" class="f">outsort</span> <span onmouseout="hideTip(event, 'fs26', 102)" onmouseover="showTip(event, 'fs26', 102)" class="i">fd</span> <span class="s">&quot;</span><span class="e">\t</span><span class="s">interface &quot;</span>

            <span onmouseout="hideTip(event, 'fs39', 103)" onmouseover="showTip(event, 'fs39', 103)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 104)" onmouseover="showTip(event, 'fs53', 104)" class="f">GetMembers</span>()
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 105)" onmouseover="showTip(event, 'fs29', 105)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 106)" onmouseover="showTip(event, 'fs30', 106)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs54', 107)" onmouseover="showTip(event, 'fs54', 107)" class="i">m</span> <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs54', 108)" onmouseover="showTip(event, 'fs54', 108)" class="i">m</span>,
                <span class="k">match</span> <span onmouseout="hideTip(event, 'fs54', 109)" onmouseover="showTip(event, 'fs54', 109)" class="i">m</span> <span class="k">with</span>
                | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs55', 110)" onmouseover="showTip(event, 'fs55', 110)" class="t">EventInfo</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs56', 111)" onmouseover="showTip(event, 'fs56', 111)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 112)" onmouseover="showTip(event, 'fs31', 112)" class="f">sprintf</span> <span class="s">&quot;e </span><span class="pf">%O</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs56', 113)" onmouseover="showTip(event, 'fs56', 113)" class="i">e</span>
                | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs57', 114)" onmouseover="showTip(event, 'fs57', 114)" class="t">FieldInfo</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs58', 115)" onmouseover="showTip(event, 'fs58', 115)" class="i">f</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 116)" onmouseover="showTip(event, 'fs31', 116)" class="f">sprintf</span> <span class="s">&quot;f </span><span class="pf">%O</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs58', 117)" onmouseover="showTip(event, 'fs58', 117)" class="i">f</span>
                | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs59', 118)" onmouseover="showTip(event, 'fs59', 118)" class="t">ConstructorInfo</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs60', 119)" onmouseover="showTip(event, 'fs60', 119)" class="i">c</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 120)" onmouseover="showTip(event, 'fs31', 120)" class="f">sprintf</span> <span class="s">&quot;c </span><span class="pf">%s</span><span class="s">(</span><span class="pf">%s</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs60', 121)" onmouseover="showTip(event, 'fs60', 121)" class="i">c</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 122)" onmouseover="showTip(event, 'fs61', 122)" class="i">Name</span> (<span onmouseout="hideTip(event, 'fs60', 123)" onmouseover="showTip(event, 'fs60', 123)" class="i">c</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 124)" onmouseover="showTip(event, 'fs62', 124)" class="f">GetParameters</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs14', 125)" onmouseover="showTip(event, 'fs14', 125)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 126)" onmouseover="showTip(event, 'fs63', 126)" class="f">map</span> <span onmouseout="hideTip(event, 'fs11', 127)" onmouseover="showTip(event, 'fs11', 127)" class="f">string</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs47', 128)" onmouseover="showTip(event, 'fs47', 128)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 129)" onmouseover="showTip(event, 'fs48', 129)" class="f">concat</span> <span class="s">&quot;, &quot;</span>)
                | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs64', 130)" onmouseover="showTip(event, 'fs64', 130)" class="t">MethodInfo</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs65', 131)" onmouseover="showTip(event, 'fs65', 131)" class="i">m</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 132)" onmouseover="showTip(event, 'fs31', 132)" class="f">sprintf</span> <span class="s">&quot;m </span><span class="pf">%O</span><span class="s"> </span><span class="pf">%s</span><span class="s">(</span><span class="pf">%s</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs65', 133)" onmouseover="showTip(event, 'fs65', 133)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 134)" onmouseover="showTip(event, 'fs66', 134)" class="i">ReturnType</span> <span onmouseout="hideTip(event, 'fs65', 135)" onmouseover="showTip(event, 'fs65', 135)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 136)" onmouseover="showTip(event, 'fs61', 136)" class="i">Name</span> (<span onmouseout="hideTip(event, 'fs65', 137)" onmouseover="showTip(event, 'fs65', 137)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 138)" onmouseover="showTip(event, 'fs62', 138)" class="f">GetParameters</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs14', 139)" onmouseover="showTip(event, 'fs14', 139)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 140)" onmouseover="showTip(event, 'fs63', 140)" class="f">map</span> <span onmouseout="hideTip(event, 'fs11', 141)" onmouseover="showTip(event, 'fs11', 141)" class="f">string</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs47', 142)" onmouseover="showTip(event, 'fs47', 142)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 143)" onmouseover="showTip(event, 'fs48', 143)" class="f">concat</span> <span class="s">&quot;, &quot;</span>)
                | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs67', 144)" onmouseover="showTip(event, 'fs67', 144)" class="t">PropertyInfo</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs68', 145)" onmouseover="showTip(event, 'fs68', 145)" class="i">p</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 146)" onmouseover="showTip(event, 'fs31', 146)" class="f">sprintf</span> <span class="s">&quot;p </span><span class="pf">%O</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs68', 147)" onmouseover="showTip(event, 'fs68', 147)" class="i">p</span>
                | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs69', 148)" onmouseover="showTip(event, 'fs69', 148)" class="t">Type</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs39', 149)" onmouseover="showTip(event, 'fs39', 149)" class="i">t</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 150)" onmouseover="showTip(event, 'fs31', 150)" class="f">sprintf</span> <span class="s">&quot;t </span><span class="pf">%O</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs39', 151)" onmouseover="showTip(event, 'fs39', 151)" class="i">t</span>
                | <span onmouseout="hideTip(event, 'fs70', 152)" onmouseover="showTip(event, 'fs70', 152)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs71', 153)" onmouseover="showTip(event, 'fs71', 153)" class="f">failwithf</span> <span class="s">&quot;Unknown member </span><span class="pf">%O</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs70', 154)" onmouseover="showTip(event, 'fs70', 154)" class="i">x</span>)
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 155)" onmouseover="showTip(event, 'fs29', 155)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 156)" onmouseover="showTip(event, 'fs72', 156)" class="f">sortBy</span> <span onmouseout="hideTip(event, 'fs73', 157)" onmouseover="showTip(event, 'fs73', 157)" class="f">snd</span>
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 158)" onmouseover="showTip(event, 'fs29', 158)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 159)" onmouseover="showTip(event, 'fs33', 159)" class="f">iter</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs54', 160)" onmouseover="showTip(event, 'fs54', 160)" class="i">m</span>, <span onmouseout="hideTip(event, 'fs74', 161)" onmouseover="showTip(event, 'fs74', 161)" class="i">s</span>) <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs54', 162)" onmouseover="showTip(event, 'fs54', 162)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 163)" onmouseover="showTip(event, 'fs43', 163)" class="f">GetCustomAttributesData</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 164)" onmouseover="showTip(event, 'fs25', 164)" class="f">outsort</span> <span onmouseout="hideTip(event, 'fs26', 165)" onmouseover="showTip(event, 'fs26', 165)" class="i">fd</span> <span class="s">&quot;</span><span class="e">\t</span><span class="s">&quot;</span>
                <span onmouseout="hideTip(event, 'fs34', 166)" onmouseover="showTip(event, 'fs34', 166)" class="f">fprintfn</span> <span onmouseout="hideTip(event, 'fs26', 167)" onmouseover="showTip(event, 'fs26', 167)" class="i">fd</span> <span class="s">&quot;</span><span class="e">\t</span><span class="s"></span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs74', 168)" onmouseover="showTip(event, 'fs74', 168)" class="i">s</span>)
        <span onmouseout="hideTip(event, 'fs34', 169)" onmouseover="showTip(event, 'fs34', 169)" class="f">fprintfn</span> <span onmouseout="hideTip(event, 'fs26', 170)" onmouseover="showTip(event, 'fs26', 170)" class="i">fd</span> <span class="s">&quot;&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs75', 171)" onmouseover="showTip(event, 'fs75', 171)" class="f">writeFileIfDiffers</span> <span onmouseout="hideTip(event, 'fs20', 172)" onmouseover="showTip(event, 'fs20', 172)" class="i">path</span> <span onmouseout="hideTip(event, 'fs76', 173)" onmouseover="showTip(event, 'fs76', 173)" class="i">contents</span> <span class="o">=</span>
    <span class="k">try</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs77', 174)" onmouseover="showTip(event, 'fs77', 174)" class="i">current</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs78', 175)" onmouseover="showTip(event, 'fs78', 175)" class="t">File</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 176)" onmouseover="showTip(event, 'fs79', 176)" class="f">ReadAllText</span>(<span onmouseout="hideTip(event, 'fs20', 177)" onmouseover="showTip(event, 'fs20', 177)" class="i">path</span>)
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs77', 178)" onmouseover="showTip(event, 'fs77', 178)" class="i">current</span> <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs76', 179)" onmouseover="showTip(event, 'fs76', 179)" class="i">contents</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs78', 180)" onmouseover="showTip(event, 'fs78', 180)" class="t">File</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs80', 181)" onmouseover="showTip(event, 'fs80', 181)" class="f">WriteAllText</span>(<span onmouseout="hideTip(event, 'fs20', 182)" onmouseover="showTip(event, 'fs20', 182)" class="i">path</span>, <span onmouseout="hideTip(event, 'fs76', 183)" onmouseover="showTip(event, 'fs76', 183)" class="i">contents</span>)
    <span class="k">with</span> <span onmouseout="hideTip(event, 'fs81', 184)" onmouseover="showTip(event, 'fs81', 184)" class="i">e</span> <span class="k">-&gt;</span> 
        <span onmouseout="hideTip(event, 'fs78', 185)" onmouseover="showTip(event, 'fs78', 185)" class="t">File</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs80', 186)" onmouseover="showTip(event, 'fs80', 186)" class="f">WriteAllText</span>(<span onmouseout="hideTip(event, 'fs20', 187)" onmouseover="showTip(event, 'fs20', 187)" class="i">path</span>, <span onmouseout="hideTip(event, 'fs76', 188)" onmouseover="showTip(event, 'fs76', 188)" class="i">contents</span>)

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs82', 189)" onmouseover="showTip(event, 'fs82', 189)" class="t">ResolveHandlerScope</span>(<span onmouseout="hideTip(event, 'fs9', 190)" onmouseover="showTip(event, 'fs9', 190)" class="i">references</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs83', 191)" onmouseover="showTip(event, 'fs83', 191)" class="i">handler</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs84', 192)" onmouseover="showTip(event, 'fs84', 192)" class="t">ResolveEventHandler</span>(<span class="k">fun</span> _ <span onmouseout="hideTip(event, 'fs85', 193)" onmouseover="showTip(event, 'fs85', 193)" class="i">args</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs8', 194)" onmouseover="showTip(event, 'fs8', 194)" class="f">loadAssembly</span> <span onmouseout="hideTip(event, 'fs9', 195)" onmouseover="showTip(event, 'fs9', 195)" class="i">references</span> <span onmouseout="hideTip(event, 'fs85', 196)" onmouseover="showTip(event, 'fs85', 196)" class="i">args</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs86', 197)" onmouseover="showTip(event, 'fs86', 197)" class="i">Name</span>)

    <span class="k">do</span> <span onmouseout="hideTip(event, 'fs87', 198)" onmouseover="showTip(event, 'fs87', 198)" class="t">AppDomain</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs88', 199)" onmouseover="showTip(event, 'fs88', 199)" class="i">CurrentDomain</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 200)" onmouseover="showTip(event, 'fs89', 200)" class="f">add_ReflectionOnlyAssemblyResolve</span>(<span class="i">handler</span>)

    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs90', 201)" onmouseover="showTip(event, 'fs90', 201)" class="t">IDisposable</span> <span class="k">with</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs91', 202)" onmouseover="showTip(event, 'fs91', 202)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs92', 203)" onmouseover="showTip(event, 'fs92', 203)" class="f">Dispose</span>() <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs87', 204)" onmouseover="showTip(event, 'fs87', 204)" class="t">AppDomain</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs88', 205)" onmouseover="showTip(event, 'fs88', 205)" class="i">CurrentDomain</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs93', 206)" onmouseover="showTip(event, 'fs93', 206)" class="f">remove_ReflectionOnlyAssemblyResolve</span>(<span onmouseout="hideTip(event, 'fs83', 207)" onmouseover="showTip(event, 'fs83', 207)" class="i">handler</span>)

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs94', 208)" onmouseover="showTip(event, 'fs94', 208)" class="t">AssemblySignatureGenerator</span>() <span class="o">=</span>
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs95', 209)" onmouseover="showTip(event, 'fs95', 209)" class="t">MarshalByRefObject</span>()

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs96', 210)" onmouseover="showTip(event, 'fs96', 210)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs97', 211)" onmouseover="showTip(event, 'fs97', 211)" class="f">Generate</span>(<span onmouseout="hideTip(event, 'fs98', 212)" onmouseover="showTip(event, 'fs98', 212)" class="i">input</span>, <span onmouseout="hideTip(event, 'fs99', 213)" onmouseover="showTip(event, 'fs99', 213)" class="i">output</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs11', 214)" onmouseover="showTip(event, 'fs11', 214)" class="t">string</span>, <span onmouseout="hideTip(event, 'fs9', 215)" onmouseover="showTip(event, 'fs9', 215)" class="i">references</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs100', 216)" onmouseover="showTip(event, 'fs100', 216)" class="f">printfn</span> <span class="s">&quot;Generate </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs99', 217)" onmouseover="showTip(event, 'fs99', 217)" class="i">output</span>
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs101', 218)" onmouseover="showTip(event, 'fs101', 218)" class="i">scope</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs82', 219)" onmouseover="showTip(event, 'fs82', 219)" class="t">ResolveHandlerScope</span>(<span onmouseout="hideTip(event, 'fs9', 220)" onmouseover="showTip(event, 'fs9', 220)" class="i">references</span>)
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 221)" onmouseover="showTip(event, 'fs36', 221)" class="i">asm</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 222)" onmouseover="showTip(event, 'fs21', 222)" class="t">Assembly</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 223)" onmouseover="showTip(event, 'fs22', 223)" class="f">ReflectionOnlyLoadFrom</span>(<span onmouseout="hideTip(event, 'fs98', 224)" onmouseover="showTip(event, 'fs98', 224)" class="i">input</span>)

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs102', 225)" onmouseover="showTip(event, 'fs102', 225)" class="i">fd</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs103', 226)" onmouseover="showTip(event, 'fs103', 226)" class="t">StringWriter</span>()
        <span onmouseout="hideTip(event, 'fs35', 227)" onmouseover="showTip(event, 'fs35', 227)" class="f">outasm</span> <span onmouseout="hideTip(event, 'fs102', 228)" onmouseover="showTip(event, 'fs102', 228)" class="i">fd</span> <span onmouseout="hideTip(event, 'fs36', 229)" onmouseover="showTip(event, 'fs36', 229)" class="i">asm</span>

        <span onmouseout="hideTip(event, 'fs75', 230)" onmouseover="showTip(event, 'fs75', 230)" class="f">writeFileIfDiffers</span> <span onmouseout="hideTip(event, 'fs99', 231)" onmouseover="showTip(event, 'fs99', 231)" class="i">output</span> (<span onmouseout="hideTip(event, 'fs102', 232)" onmouseover="showTip(event, 'fs102', 232)" class="i">fd</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs104', 233)" onmouseover="showTip(event, 'fs104', 233)" class="f">ToString</span>())

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs105', 234)" onmouseover="showTip(event, 'fs105', 234)" class="t">GenerateAssemblySignature</span>() <span class="o">=</span>
    <span class="k">inherit</span> <span class="i">Task</span>()

    <span class="k">member</span> <span class="k">val</span> <span onmouseout="hideTip(event, 'fs106', 235)" onmouseover="showTip(event, 'fs106', 235)" class="i">Input</span><span class="o">:</span> <span class="i">ITaskItem</span> <span class="o">=</span> <span class="k">null</span> <span class="k">with</span> <span class="i">get</span>, <span onmouseout="hideTip(event, 'fs107', 236)" onmouseover="showTip(event, 'fs107', 236)" class="i">set</span>
    <span class="k">member</span> <span class="k">val</span> <span onmouseout="hideTip(event, 'fs108', 237)" onmouseover="showTip(event, 'fs108', 237)" class="i">Output</span><span class="o">:</span> <span class="i">ITaskItem</span> <span class="o">=</span> <span class="k">null</span> <span class="k">with</span> <span class="i">get</span>, <span onmouseout="hideTip(event, 'fs107', 238)" onmouseover="showTip(event, 'fs107', 238)" class="i">set</span>
    <span class="k">member</span> <span class="k">val</span> <span onmouseout="hideTip(event, 'fs109', 239)" onmouseover="showTip(event, 'fs109', 239)" class="i">References</span><span class="o">:</span> <span class="i">ITaskItem</span>[] <span class="o">=</span> [||] <span class="k">with</span> <span class="i">get</span>, <span onmouseout="hideTip(event, 'fs107', 240)" onmouseover="showTip(event, 'fs107', 240)" class="i">set</span>

    <span class="k">override</span> <span class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 241)" onmouseover="showTip(event, 'fs110', 241)" class="f">Execute</span>() <span class="o">=</span>
        <span class="k">let</span> <span class="i">domain</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs87', 242)" onmouseover="showTip(event, 'fs87', 242)" class="i">AppDomain</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs111', 243)" onmouseover="showTip(event, 'fs111', 243)" class="i">CreateDomain</span>(<span class="s">&quot;gasig&quot;</span>)

        <span class="k">try</span>
            <span class="k">let</span> <span class="i">gen</span> <span class="o">=</span> <span class="i">domain</span><span class="o">.</span><span class="i">CreateInstanceFromAndUnwrap</span>(<span onmouseout="hideTip(event, 'fs112', 244)" onmouseover="showTip(event, 'fs112', 244)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs94', 245)" onmouseover="showTip(event, 'fs94', 245)" class="i">AssemblySignatureGenerator</span><span class="o">&gt;</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 246)" onmouseover="showTip(event, 'fs21', 246)" class="i">Assembly</span><span class="o">.</span><span class="i">Location</span>, <span onmouseout="hideTip(event, 'fs112', 247)" onmouseover="showTip(event, 'fs112', 247)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs94', 248)" onmouseover="showTip(event, 'fs94', 248)" class="i">AssemblySignatureGenerator</span><span class="o">&gt;</span><span class="o">.</span><span class="i">FullName</span>)
            (<span class="i">gen</span> <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs94', 249)" onmouseover="showTip(event, 'fs94', 249)" class="i">AssemblySignatureGenerator</span>)<span class="o">.</span><span class="i">Generate</span>(<span class="i">this</span><span class="o">.</span><span class="i">Input</span><span class="o">.</span><span class="i">ItemSpec</span>, <span class="i">this</span><span class="o">.</span><span class="i">Output</span><span class="o">.</span><span class="i">ItemSpec</span>, <span class="i">this</span><span class="o">.</span><span class="i">References</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs14', 250)" onmouseover="showTip(event, 'fs14', 250)" class="i">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 251)" onmouseover="showTip(event, 'fs63', 251)" class="i">map</span> (<span class="k">fun</span> <span class="i">r</span> <span class="k">-&gt;</span> <span class="i">r</span><span class="o">.</span><span class="i">ItemSpec</span>))
            <span class="k">true</span>
        <span class="k">finally</span>
            <span onmouseout="hideTip(event, 'fs87', 252)" onmouseover="showTip(event, 'fs87', 252)" class="i">AppDomain</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs113', 253)" onmouseover="showTip(event, 'fs113', 253)" class="i">Unload</span>(<span class="i">domain</span>)

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs114', 254)" onmouseover="showTip(event, 'fs114', 254)" class="t">GetAssemblySignatureList</span>() <span class="o">=</span>
    <span class="k">inherit</span> <span class="i">Task</span>()

    <span class="k">member</span> <span class="k">val</span> <span onmouseout="hideTip(event, 'fs115', 255)" onmouseover="showTip(event, 'fs115', 255)" class="i">Inputs</span><span class="o">:</span> <span class="i">ITaskItem</span>[] <span class="o">=</span> [||] <span class="k">with</span> <span class="i">get</span>, <span onmouseout="hideTip(event, 'fs107', 256)" onmouseover="showTip(event, 'fs107', 256)" class="i">set</span>

    <span class="k">override</span> <span class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs116', 257)" onmouseover="showTip(event, 'fs116', 257)" class="f">Execute</span>() <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs100', 258)" onmouseover="showTip(event, 'fs100', 258)" class="i">printfn</span> <span class="s">&quot;Get!&quot;</span>
        <span class="k">for</span> <span class="i">i</span> <span class="k">in</span> <span class="i">this</span><span class="o">.</span><span class="i">Inputs</span> <span class="k">do</span>
            <span class="k">let</span> <span class="i">sigf</span> <span class="o">=</span> <span class="i">i</span><span class="o">.</span><span class="i">ItemSpec</span> <span class="o">+</span> <span class="s">&quot;.sig&quot;</span>
            <span class="i">i</span><span class="o">.</span><span class="i">SetMetadata</span>(<span class="s">&quot;Signature&quot;</span>, <span class="k">if</span> <span onmouseout="hideTip(event, 'fs78', 259)" onmouseover="showTip(event, 'fs78', 259)" class="i">File</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs117', 260)" onmouseover="showTip(event, 'fs117', 260)" class="i">Exists</span>(<span class="i">sigf</span>) <span class="k">then</span> <span class="i">sigf</span> <span class="k">else</span> <span class="i">i</span><span class="o">.</span><span class="i">ItemSpec</span>)

        <span class="k">true</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module GASig</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace System.Collections</div>
<div class="tip" id="fs4">namespace System.Collections.Generic</div>
<div class="tip" id="fs5">namespace System.IO</div>
<div class="tip" id="fs6">namespace System.Reflection</div>
<div class="tip" id="fs7">namespace Microsoft</div>
<div class="tip" id="fs8">val loadAssembly : references:string [] -&gt; qname:string -&gt; Assembly<br /><br />Full name: GASig.loadAssembly</div>
<div class="tip" id="fs9">val references : string []</div>
<div class="tip" id="fs10">val qname : string</div>
<div class="tip" id="fs11">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs12">val name : string</div>
<div class="tip" id="fs13">String.Split([&lt;ParamArray&gt;] separator: char []) : string []<br />String.Split(separator: string [], options: StringSplitOptions) : string []<br />String.Split(separator: char [], options: StringSplitOptions) : string []<br />String.Split(separator: char [], count: int) : string []<br />String.Split(separator: string [], count: int, options: StringSplitOptions) : string []<br />String.Split(separator: char [], count: int, options: StringSplitOptions) : string []</div>
<div class="tip" id="fs14">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs15">val tryFind : predicate:(&#39;T -&gt; bool) -&gt; array:&#39;T [] -&gt; &#39;T option<br /><br />Full name: Microsoft.FSharp.Collections.Array.tryFind</div>
<div class="tip" id="fs16">val r : string</div>
<div class="tip" id="fs17">type Path =<br />&#160;&#160;static val DirectorySeparatorChar : char<br />&#160;&#160;static val AltDirectorySeparatorChar : char<br />&#160;&#160;static val VolumeSeparatorChar : char<br />&#160;&#160;static val InvalidPathChars : char[]<br />&#160;&#160;static val PathSeparator : char<br />&#160;&#160;static member ChangeExtension : path:string * extension:string -&gt; string<br />&#160;&#160;static member Combine : [&lt;ParamArray&gt;] paths:string[] -&gt; string + 3 overloads<br />&#160;&#160;static member GetDirectoryName : path:string -&gt; string<br />&#160;&#160;static member GetExtension : path:string -&gt; string<br />&#160;&#160;static member GetFileName : path:string -&gt; string<br />&#160;&#160;...<br /><br />Full name: System.IO.Path</div>
<div class="tip" id="fs18">Path.GetFileNameWithoutExtension(path: string) : string</div>
<div class="tip" id="fs19">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs20">val path : string</div>
<div class="tip" id="fs21">type Assembly =<br />&#160;&#160;member CodeBase : string<br />&#160;&#160;member CreateInstance : typeName:string -&gt; obj + 2 overloads<br />&#160;&#160;member EntryPoint : MethodInfo<br />&#160;&#160;member Equals : o:obj -&gt; bool<br />&#160;&#160;member EscapedCodeBase : string<br />&#160;&#160;member Evidence : Evidence<br />&#160;&#160;member FullName : string<br />&#160;&#160;member GetCustomAttributes : inherit:bool -&gt; obj[] + 1 overload<br />&#160;&#160;member GetCustomAttributesData : unit -&gt; IList&lt;CustomAttributeData&gt;<br />&#160;&#160;member GetExportedTypes : unit -&gt; Type[]<br />&#160;&#160;...<br /><br />Full name: System.Reflection.Assembly</div>
<div class="tip" id="fs22">Assembly.ReflectionOnlyLoadFrom(assemblyFile: string) : Assembly</div>
<div class="tip" id="fs23">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs24">Assembly.ReflectionOnlyLoad(rawAssembly: byte []) : Assembly<br />Assembly.ReflectionOnlyLoad(assemblyString: string) : Assembly</div>
<div class="tip" id="fs25">val outsort : fd:TextWriter -&gt; prefix:string -&gt; data:seq&lt;&#39;a&gt; -&gt; unit<br /><br />Full name: GASig.outsort</div>
<div class="tip" id="fs26">val fd : TextWriter</div>
<div class="tip" id="fs27">val prefix : string</div>
<div class="tip" id="fs28">val data : seq&lt;&#39;a&gt;</div>
<div class="tip" id="fs29">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs30">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs31">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs32">val sort : source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.sort</div>
<div class="tip" id="fs33">val iter : action:(&#39;T -&gt; unit) -&gt; source:seq&lt;&#39;T&gt; -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.Seq.iter</div>
<div class="tip" id="fs34">val fprintfn : textWriter:TextWriter -&gt; format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.fprintfn</div>
<div class="tip" id="fs35">val outasm : fd:TextWriter -&gt; asm:Assembly -&gt; unit<br /><br />Full name: GASig.outasm</div>
<div class="tip" id="fs36">val asm : Assembly</div>
<div class="tip" id="fs37">Assembly.GetCustomAttributesData() : IList&lt;CustomAttributeData&gt;</div>
<div class="tip" id="fs38">property Assembly.FullName: string</div>
<div class="tip" id="fs39">val t : Type</div>
<div class="tip" id="fs40">Assembly.GetExportedTypes() : Type []</div>
<div class="tip" id="fs41">val sortBy : projection:(&#39;T -&gt; &#39;Key) -&gt; array:&#39;T [] -&gt; &#39;T [] (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Array.sortBy</div>
<div class="tip" id="fs42">property Type.FullName: string</div>
<div class="tip" id="fs43">MemberInfo.GetCustomAttributesData() : IList&lt;CustomAttributeData&gt;</div>
<div class="tip" id="fs44">property Type.IsEnum: bool</div>
<div class="tip" id="fs45">Type.GetEnumUnderlyingType() : Type</div>
<div class="tip" id="fs46">Type.GetEnumNames() : string []</div>
<div class="tip" id="fs47">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs48">val concat : sep:string -&gt; strings:seq&lt;string&gt; -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.String.concat</div>
<div class="tip" id="fs49">property Type.IsValueType: bool</div>
<div class="tip" id="fs50">property Type.Attributes: TypeAttributes</div>
<div class="tip" id="fs51">property Type.BaseType: Type</div>
<div class="tip" id="fs52">Type.GetInterfaces() : Type []</div>
<div class="tip" id="fs53">Type.GetMembers() : MemberInfo []<br />Type.GetMembers(bindingAttr: BindingFlags) : MemberInfo []</div>
<div class="tip" id="fs54">val m : MemberInfo</div>
<div class="tip" id="fs55">type EventInfo =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member AddEventHandler : target:obj * handler:Delegate -&gt; unit<br />&#160;&#160;member Attributes : EventAttributes<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member EventHandlerType : Type<br />&#160;&#160;member GetAddMethod : unit -&gt; MethodInfo + 1 overload<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetOtherMethods : unit -&gt; MethodInfo[] + 1 overload<br />&#160;&#160;member GetRaiseMethod : unit -&gt; MethodInfo + 1 overload<br />&#160;&#160;member GetRemoveMethod : unit -&gt; MethodInfo + 1 overload<br />&#160;&#160;member IsMulticast : bool<br />&#160;&#160;...<br /><br />Full name: System.Reflection.EventInfo</div>
<div class="tip" id="fs56">val e : EventInfo</div>
<div class="tip" id="fs57">type FieldInfo =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Attributes : FieldAttributes<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member FieldHandle : RuntimeFieldHandle<br />&#160;&#160;member FieldType : Type<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetOptionalCustomModifiers : unit -&gt; Type[]<br />&#160;&#160;member GetRawConstantValue : unit -&gt; obj<br />&#160;&#160;member GetRequiredCustomModifiers : unit -&gt; Type[]<br />&#160;&#160;member GetValue : obj:obj -&gt; obj<br />&#160;&#160;member GetValueDirect : obj:TypedReference -&gt; obj<br />&#160;&#160;...<br /><br />Full name: System.Reflection.FieldInfo</div>
<div class="tip" id="fs58">val f : FieldInfo</div>
<div class="tip" id="fs59">type ConstructorInfo =<br />&#160;&#160;inherit MethodBase<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Invoke : parameters:obj[] -&gt; obj + 1 overload<br />&#160;&#160;member MemberType : MemberTypes<br />&#160;&#160;static val ConstructorName : string<br />&#160;&#160;static val TypeConstructorName : string<br /><br />Full name: System.Reflection.ConstructorInfo</div>
<div class="tip" id="fs60">val c : ConstructorInfo</div>
<div class="tip" id="fs61">property MemberInfo.Name: string</div>
<div class="tip" id="fs62">MethodBase.GetParameters() : ParameterInfo []</div>
<div class="tip" id="fs63">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.map</div>
<div class="tip" id="fs64">type MethodInfo =<br />&#160;&#160;inherit MethodBase<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetBaseDefinition : unit -&gt; MethodInfo<br />&#160;&#160;member GetGenericArguments : unit -&gt; Type[]<br />&#160;&#160;member GetGenericMethodDefinition : unit -&gt; MethodInfo<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member MakeGenericMethod : [&lt;ParamArray&gt;] typeArguments:Type[] -&gt; MethodInfo<br />&#160;&#160;member MemberType : MemberTypes<br />&#160;&#160;member ReturnParameter : ParameterInfo<br />&#160;&#160;member ReturnType : Type<br />&#160;&#160;member ReturnTypeCustomAttributes : ICustomAttributeProvider<br /><br />Full name: System.Reflection.MethodInfo</div>
<div class="tip" id="fs65">val m : MethodInfo</div>
<div class="tip" id="fs66">property MethodInfo.ReturnType: Type</div>
<div class="tip" id="fs67">type PropertyInfo =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Attributes : PropertyAttributes<br />&#160;&#160;member CanRead : bool<br />&#160;&#160;member CanWrite : bool<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetAccessors : unit -&gt; MethodInfo[] + 1 overload<br />&#160;&#160;member GetConstantValue : unit -&gt; obj<br />&#160;&#160;member GetGetMethod : unit -&gt; MethodInfo + 1 overload<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetIndexParameters : unit -&gt; ParameterInfo[]<br />&#160;&#160;member GetOptionalCustomModifiers : unit -&gt; Type[]<br />&#160;&#160;...<br /><br />Full name: System.Reflection.PropertyInfo</div>
<div class="tip" id="fs68">val p : PropertyInfo</div>
<div class="tip" id="fs69">type Type =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Assembly : Assembly<br />&#160;&#160;member AssemblyQualifiedName : string<br />&#160;&#160;member Attributes : TypeAttributes<br />&#160;&#160;member BaseType : Type<br />&#160;&#160;member ContainsGenericParameters : bool<br />&#160;&#160;member DeclaringMethod : MethodBase<br />&#160;&#160;member DeclaringType : Type<br />&#160;&#160;member Equals : o:obj -&gt; bool + 1 overload<br />&#160;&#160;member FindInterfaces : filter:TypeFilter * filterCriteria:obj -&gt; Type[]<br />&#160;&#160;member FindMembers : memberType:MemberTypes * bindingAttr:BindingFlags * filter:MemberFilter * filterCriteria:obj -&gt; MemberInfo[]<br />&#160;&#160;...<br /><br />Full name: System.Type</div>
<div class="tip" id="fs70">val x : MemberInfo</div>
<div class="tip" id="fs71">val failwithf : format:Printf.StringFormat&lt;&#39;T,&#39;Result&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.failwithf</div>
<div class="tip" id="fs72">val sortBy : projection:(&#39;T -&gt; &#39;Key) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.sortBy</div>
<div class="tip" id="fs73">val snd : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T2<br /><br />Full name: Microsoft.FSharp.Core.Operators.snd</div>
<div class="tip" id="fs74">val s : string</div>
<div class="tip" id="fs75">val writeFileIfDiffers : path:string -&gt; contents:string -&gt; unit<br /><br />Full name: GASig.writeFileIfDiffers</div>
<div class="tip" id="fs76">val contents : string</div>
<div class="tip" id="fs77">val current : string</div>
<div class="tip" id="fs78">type File =<br />&#160;&#160;static member AppendAllLines : path:string * contents:IEnumerable&lt;string&gt; -&gt; unit + 1 overload<br />&#160;&#160;static member AppendAllText : path:string * contents:string -&gt; unit + 1 overload<br />&#160;&#160;static member AppendText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Copy : sourceFileName:string * destFileName:string -&gt; unit + 1 overload<br />&#160;&#160;static member Create : path:string -&gt; FileStream + 3 overloads<br />&#160;&#160;static member CreateText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Decrypt : path:string -&gt; unit<br />&#160;&#160;static member Delete : path:string -&gt; unit<br />&#160;&#160;static member Encrypt : path:string -&gt; unit<br />&#160;&#160;static member Exists : path:string -&gt; bool<br />&#160;&#160;...<br /><br />Full name: System.IO.File</div>
<div class="tip" id="fs79">File.ReadAllText(path: string) : string<br />File.ReadAllText(path: string, encoding: Text.Encoding) : string</div>
<div class="tip" id="fs80">File.WriteAllText(path: string, contents: string) : unit<br />File.WriteAllText(path: string, contents: string, encoding: Text.Encoding) : unit</div>
<div class="tip" id="fs81">val e : exn</div>
<div class="tip" id="fs82">Multiple items<br />type ResolveHandlerScope =<br />&#160;&#160;interface IDisposable<br />&#160;&#160;new : references:string [] -&gt; ResolveHandlerScope<br /><br />Full name: GASig.ResolveHandlerScope<br /><br />--------------------<br />new : references:string [] -&gt; ResolveHandlerScope</div>
<div class="tip" id="fs83">val handler : ResolveEventHandler</div>
<div class="tip" id="fs84">type ResolveEventHandler =<br />&#160;&#160;delegate of obj * ResolveEventArgs -&gt; Assembly<br /><br />Full name: System.ResolveEventHandler</div>
<div class="tip" id="fs85">val args : ResolveEventArgs</div>
<div class="tip" id="fs86">property ResolveEventArgs.Name: string</div>
<div class="tip" id="fs87">type AppDomain =<br />&#160;&#160;inherit MarshalByRefObject<br />&#160;&#160;member ActivationContext : ActivationContext<br />&#160;&#160;member AppendPrivatePath : path:string -&gt; unit<br />&#160;&#160;member ApplicationIdentity : ApplicationIdentity<br />&#160;&#160;member ApplicationTrust : ApplicationTrust<br />&#160;&#160;member ApplyPolicy : assemblyName:string -&gt; string<br />&#160;&#160;member BaseDirectory : string<br />&#160;&#160;member ClearPrivatePath : unit -&gt; unit<br />&#160;&#160;member ClearShadowCopyPath : unit -&gt; unit<br />&#160;&#160;member CreateComInstanceFrom : assemblyName:string * typeName:string -&gt; ObjectHandle + 1 overload<br />&#160;&#160;member CreateInstance : assemblyName:string * typeName:string -&gt; ObjectHandle + 3 overloads<br />&#160;&#160;...<br /><br />Full name: System.AppDomain</div>
<div class="tip" id="fs88">property AppDomain.CurrentDomain: AppDomain</div>
<div class="tip" id="fs89">AppDomain.add_ReflectionOnlyAssemblyResolve(value: ResolveEventHandler) : unit</div>
<div class="tip" id="fs90">type IDisposable =<br />&#160;&#160;member Dispose : unit -&gt; unit<br /><br />Full name: System.IDisposable</div>
<div class="tip" id="fs91">val this : ResolveHandlerScope</div>
<div class="tip" id="fs92">override ResolveHandlerScope.Dispose : unit -&gt; unit<br /><br />Full name: GASig.ResolveHandlerScope.Dispose</div>
<div class="tip" id="fs93">AppDomain.remove_ReflectionOnlyAssemblyResolve(value: ResolveEventHandler) : unit</div>
<div class="tip" id="fs94">Multiple items<br />type AssemblySignatureGenerator =<br />&#160;&#160;inherit MarshalByRefObject<br />&#160;&#160;new : unit -&gt; AssemblySignatureGenerator<br />&#160;&#160;member Generate : input:string * output:string * references:string [] -&gt; unit<br /><br />Full name: GASig.AssemblySignatureGenerator<br /><br />--------------------<br />new : unit -&gt; AssemblySignatureGenerator</div>
<div class="tip" id="fs95">Multiple items<br />type MarshalByRefObject =<br />&#160;&#160;member CreateObjRef : requestedType:Type -&gt; ObjRef<br />&#160;&#160;member GetLifetimeService : unit -&gt; obj<br />&#160;&#160;member InitializeLifetimeService : unit -&gt; obj<br /><br />Full name: System.MarshalByRefObject<br /><br />--------------------<br />MarshalByRefObject() : unit</div>
<div class="tip" id="fs96">val this : AssemblySignatureGenerator</div>
<div class="tip" id="fs97">member AssemblySignatureGenerator.Generate : input:string * output:string * references:string [] -&gt; unit<br /><br />Full name: GASig.AssemblySignatureGenerator.Generate</div>
<div class="tip" id="fs98">val input : string</div>
<div class="tip" id="fs99">val output : string</div>
<div class="tip" id="fs100">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs101">val scope : ResolveHandlerScope</div>
<div class="tip" id="fs102">val fd : StringWriter</div>
<div class="tip" id="fs103">Multiple items<br />type StringWriter =<br />&#160;&#160;inherit TextWriter<br />&#160;&#160;new : unit -&gt; StringWriter + 3 overloads<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member Encoding : Encoding<br />&#160;&#160;member GetStringBuilder : unit -&gt; StringBuilder<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;member Write : value:char -&gt; unit + 2 overloads<br /><br />Full name: System.IO.StringWriter<br /><br />--------------------<br />StringWriter() : unit<br />StringWriter(formatProvider: IFormatProvider) : unit<br />StringWriter(sb: Text.StringBuilder) : unit<br />StringWriter(sb: Text.StringBuilder, formatProvider: IFormatProvider) : unit</div>
<div class="tip" id="fs104">StringWriter.ToString() : string</div>
<div class="tip" id="fs105">Multiple items<br />type GenerateAssemblySignature =<br />&#160;&#160;inherit obj<br />&#160;&#160;new : unit -&gt; GenerateAssemblySignature<br />&#160;&#160;override Execute : unit -&gt; &#39;a<br />&#160;&#160;member Input : &#39;a<br />&#160;&#160;member Output : &#39;a<br />&#160;&#160;member References : &#39;a []<br />&#160;&#160;member Input : &#39;a with set<br />&#160;&#160;member Output : &#39;a with set<br />&#160;&#160;member References : &#39;a with set<br /><br />Full name: GASig.GenerateAssemblySignature<br /><br />--------------------<br />new : unit -&gt; GenerateAssemblySignature</div>
<div class="tip" id="fs106">member GenerateAssemblySignature.Input : &#39;a with set<br /><br />Full name: GASig.GenerateAssemblySignature.Input</div>
<div class="tip" id="fs107">val set : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.set</div>
<div class="tip" id="fs108">member GenerateAssemblySignature.Output : &#39;a with set<br /><br />Full name: GASig.GenerateAssemblySignature.Output</div>
<div class="tip" id="fs109">member GenerateAssemblySignature.References : &#39;a with set<br /><br />Full name: GASig.GenerateAssemblySignature.References</div>
<div class="tip" id="fs110">override GenerateAssemblySignature.Execute : unit -&gt; &#39;a<br /><br />Full name: GASig.GenerateAssemblySignature.Execute</div>
<div class="tip" id="fs111">AppDomain.CreateDomain(friendlyName: string) : AppDomain<br />AppDomain.CreateDomain(friendlyName: string, securityInfo: Security.Policy.Evidence) : AppDomain<br />AppDomain.CreateDomain(friendlyName: string, securityInfo: Security.Policy.Evidence, info: AppDomainSetup) : AppDomain<br />AppDomain.CreateDomain(friendlyName: string, securityInfo: Security.Policy.Evidence, info: AppDomainSetup, grantSet: Security.PermissionSet, [&lt;ParamArray&gt;] fullTrustAssemblies: Security.Policy.StrongName []) : AppDomain<br />AppDomain.CreateDomain(friendlyName: string, securityInfo: Security.Policy.Evidence, appBasePath: string, appRelativeSearchPath: string, shadowCopyFiles: bool) : AppDomain<br />AppDomain.CreateDomain(friendlyName: string, securityInfo: Security.Policy.Evidence, appBasePath: string, appRelativeSearchPath: string, shadowCopyFiles: bool, adInit: AppDomainInitializer, adInitArgs: string []) : AppDomain</div>
<div class="tip" id="fs112">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs113">AppDomain.Unload(domain: AppDomain) : unit</div>
<div class="tip" id="fs114">Multiple items<br />type GetAssemblySignatureList =<br />&#160;&#160;inherit obj<br />&#160;&#160;new : unit -&gt; GetAssemblySignatureList<br />&#160;&#160;override Execute : unit -&gt; &#39;a<br />&#160;&#160;member Inputs : &#39;a []<br />&#160;&#160;member Inputs : &#39;a with set<br /><br />Full name: GASig.GetAssemblySignatureList<br /><br />--------------------<br />new : unit -&gt; GetAssemblySignatureList</div>
<div class="tip" id="fs115">member GetAssemblySignatureList.Inputs : &#39;a with set<br /><br />Full name: GASig.GetAssemblySignatureList.Inputs</div>
<div class="tip" id="fs116">override GetAssemblySignatureList.Execute : unit -&gt; &#39;a<br /><br />Full name: GASig.GetAssemblySignatureList.Execute</div>
<div class="tip" id="fs117">File.Exists(path: string) : bool</div>

