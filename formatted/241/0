<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Csv</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">IO</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">Reflection</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">Reflection</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="t">ColumnAttribute</span>(<span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="i">index</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="t">int</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="t">option</span>,<span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="i">name</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="t">string</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="t">option</span>) <span class="o">=</span>     
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="t">Attribute</span>()     
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs15', 18)" onmouseover="showTip(event, 'fs15', 18)" class="v">index</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 19)" onmouseover="showTip(event, 'fs15', 19)" class="i">index</span>
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs16', 20)" onmouseover="showTip(event, 'fs16', 20)" class="v">name</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 21)" onmouseover="showTip(event, 'fs16', 21)" class="i">name</span>
    <span class="k">new</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 22)" onmouseover="showTip(event, 'fs8', 22)" class="t">ColumnAttribute</span> (<span onmouseout="hideTip(event, 'fs17', 23)" onmouseover="showTip(event, 'fs17', 23)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="p">None</span>)
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 26)" onmouseover="showTip(event, 'fs19', 26)" class="i">Index</span>          
        <span class="k">with</span> <span class="i">get</span>() <span class="o">=</span> <span class="k">match</span> <span onmouseout="hideTip(event, 'fs15', 27)" onmouseover="showTip(event, 'fs15', 27)" class="v">index</span> <span class="k">with</span> | <span onmouseout="hideTip(event, 'fs20', 28)" onmouseover="showTip(event, 'fs20', 28)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs21', 29)" onmouseover="showTip(event, 'fs21', 29)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 30)" onmouseover="showTip(event, 'fs21', 30)" class="i">i</span> | <span onmouseout="hideTip(event, 'fs17', 31)" onmouseover="showTip(event, 'fs17', 31)" class="p">None</span> <span class="k">-&gt;</span> <span class="o">-</span><span class="n">1</span>
        <span class="k">and</span> <span onmouseout="hideTip(event, 'fs22', 32)" onmouseover="showTip(event, 'fs22', 32)" class="i">set</span> <span onmouseout="hideTip(event, 'fs23', 33)" onmouseover="showTip(event, 'fs23', 33)" class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 34)" onmouseover="showTip(event, 'fs15', 34)" class="v">index</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs20', 35)" onmouseover="showTip(event, 'fs20', 35)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs23', 36)" onmouseover="showTip(event, 'fs23', 36)" class="i">value</span>         
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs18', 37)" onmouseover="showTip(event, 'fs18', 37)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 38)" onmouseover="showTip(event, 'fs24', 38)" class="i">Name</span>          
        <span class="k">with</span> <span class="i">get</span>() <span class="o">=</span> <span class="k">match</span> <span onmouseout="hideTip(event, 'fs16', 39)" onmouseover="showTip(event, 'fs16', 39)" class="v">name</span> <span class="k">with</span> | <span onmouseout="hideTip(event, 'fs20', 40)" onmouseover="showTip(event, 'fs20', 40)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs25', 41)" onmouseover="showTip(event, 'fs25', 41)" class="i">n</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 42)" onmouseover="showTip(event, 'fs25', 42)" class="i">n</span> | <span onmouseout="hideTip(event, 'fs17', 43)" onmouseover="showTip(event, 'fs17', 43)" class="p">None</span> <span class="k">-&gt;</span> <span class="s">&quot;&quot;</span>
        <span class="k">and</span> <span onmouseout="hideTip(event, 'fs22', 44)" onmouseover="showTip(event, 'fs22', 44)" class="i">set</span> <span onmouseout="hideTip(event, 'fs26', 45)" onmouseover="showTip(event, 'fs26', 45)" class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 46)" onmouseover="showTip(event, 'fs16', 46)" class="v">name</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs20', 47)" onmouseover="showTip(event, 'fs20', 47)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs26', 48)" onmouseover="showTip(event, 'fs26', 48)" class="i">value</span>     

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs27', 49)" onmouseover="showTip(event, 'fs27', 49)" class="t">CsvReader</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs28', 50)" onmouseover="showTip(event, 'fs28', 50)" class="f">typeConverter</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs29', 51)" onmouseover="showTip(event, 'fs29', 51)" class="t">Type</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs13', 52)" onmouseover="showTip(event, 'fs13', 52)" class="t">string</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs30', 53)" onmouseover="showTip(event, 'fs30', 53)" class="t">obj</span>)) <span class="o">=</span> 
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs31', 54)" onmouseover="showTip(event, 'fs31', 54)" class="v">header</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 55)" onmouseover="showTip(event, 'fs32', 55)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 56)" onmouseover="showTip(event, 'fs33', 56)" class="i">empty</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 57)" onmouseover="showTip(event, 'fs34', 57)" class="i">recordType</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs35', 58)" onmouseover="showTip(event, 'fs35', 58)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>  
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 59)" onmouseover="showTip(event, 'fs36', 59)" class="i">fields</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs37', 60)" onmouseover="showTip(event, 'fs37', 60)" class="t">FSharpType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 61)" onmouseover="showTip(event, 'fs38', 61)" class="f">GetRecordFields</span>(<span onmouseout="hideTip(event, 'fs34', 62)" onmouseover="showTip(event, 'fs34', 62)" class="i">recordType</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 63)" onmouseover="showTip(event, 'fs39', 63)" class="f">objectBuilder</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 64)" onmouseover="showTip(event, 'fs40', 64)" class="t">FSharpValue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 65)" onmouseover="showTip(event, 'fs41', 65)" class="f">PreComputeRecordConstructor</span>(<span onmouseout="hideTip(event, 'fs34', 66)" onmouseover="showTip(event, 'fs34', 66)" class="i">recordType</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 67)" onmouseover="showTip(event, 'fs42', 67)" class="f">split</span> (<span onmouseout="hideTip(event, 'fs43', 68)" onmouseover="showTip(event, 'fs43', 68)" class="i">delim</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs44', 69)" onmouseover="showTip(event, 'fs44', 69)" class="t">char</span>) (<span onmouseout="hideTip(event, 'fs45', 70)" onmouseover="showTip(event, 'fs45', 70)" class="i">line</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs13', 71)" onmouseover="showTip(event, 'fs13', 71)" class="t">string</span>) <span class="o">=</span> 
       <span onmouseout="hideTip(event, 'fs45', 72)" onmouseover="showTip(event, 'fs45', 72)" class="i">line</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 73)" onmouseover="showTip(event, 'fs46', 73)" class="f">Split</span>([|<span onmouseout="hideTip(event, 'fs43', 74)" onmouseover="showTip(event, 'fs43', 74)" class="i">delim</span>|]) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs47', 75)" onmouseover="showTip(event, 'fs47', 75)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 76)" onmouseover="showTip(event, 'fs48', 76)" class="f">map</span>( <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs49', 77)" onmouseover="showTip(event, 'fs49', 77)" class="i">s</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs49', 78)" onmouseover="showTip(event, 'fs49', 78)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 79)" onmouseover="showTip(event, 'fs50', 79)" class="f">Trim</span>())

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs51', 80)" onmouseover="showTip(event, 'fs51', 80)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 81)" onmouseover="showTip(event, 'fs52', 81)" class="f">CreateRecord</span>(<span onmouseout="hideTip(event, 'fs53', 82)" onmouseover="showTip(event, 'fs53', 82)" class="i">header</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs32', 83)" onmouseover="showTip(event, 'fs32', 83)" class="t">Map</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs13', 84)" onmouseover="showTip(event, 'fs13', 84)" class="t">string</span>,<span onmouseout="hideTip(event, 'fs10', 85)" onmouseover="showTip(event, 'fs10', 85)" class="t">int</span><span class="o">&gt;</span>, <span onmouseout="hideTip(event, 'fs43', 86)" onmouseover="showTip(event, 'fs43', 86)" class="i">delim</span>, <span onmouseout="hideTip(event, 'fs45', 87)" onmouseover="showTip(event, 'fs45', 87)" class="i">line</span>) <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 88)" onmouseover="showTip(event, 'fs54', 88)" class="f">lookupFromHeader</span> (<span onmouseout="hideTip(event, 'fs55', 89)" onmouseover="showTip(event, 'fs55', 89)" class="i">column</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs8', 90)" onmouseover="showTip(event, 'fs8', 90)" class="t">ColumnAttribute</span>) <span class="o">=</span> 
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs55', 91)" onmouseover="showTip(event, 'fs55', 91)" class="i">column</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 92)" onmouseover="showTip(event, 'fs56', 92)" class="i">Name</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs57', 93)" onmouseover="showTip(event, 'fs57', 93)" class="i">name</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs57', 94)" onmouseover="showTip(event, 'fs57', 94)" class="i">name</span> <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs58', 95)" onmouseover="showTip(event, 'fs58', 95)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 96)" onmouseover="showTip(event, 'fs59', 96)" class="i">Empty</span> <span class="k">-&gt;</span>
                <span class="k">try</span>
                    <span onmouseout="hideTip(event, 'fs20', 97)" onmouseover="showTip(event, 'fs20', 97)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs53', 98)" onmouseover="showTip(event, 'fs53', 98)" class="i">header</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs57', 99)" onmouseover="showTip(event, 'fs57', 99)" class="i">name</span>]
                <span class="k">with</span> <span onmouseout="hideTip(event, 'fs60', 100)" onmouseover="showTip(event, 'fs60', 100)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs61', 101)" onmouseover="showTip(event, 'fs61', 101)" class="f">failwithf</span> <span class="s">&quot;no&quot;</span>  
            | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs17', 102)" onmouseover="showTip(event, 'fs17', 102)" class="p">None</span>
             
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs62', 103)" onmouseover="showTip(event, 'fs62', 103)" class="i">schema</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs36', 104)" onmouseover="showTip(event, 'fs36', 104)" class="i">fields</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs47', 105)" onmouseover="showTip(event, 'fs47', 105)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 106)" onmouseover="showTip(event, 'fs63', 106)" class="f">mapi</span>( <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs64', 107)" onmouseover="showTip(event, 'fs64', 107)" class="i">fieldIndex</span> <span onmouseout="hideTip(event, 'fs65', 108)" onmouseover="showTip(event, 'fs65', 108)" class="i">field</span> <span class="k">-&gt;</span> 
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs66', 109)" onmouseover="showTip(event, 'fs66', 109)" class="i">propertyInfo</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 110)" onmouseover="showTip(event, 'fs34', 110)" class="i">recordType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs67', 111)" onmouseover="showTip(event, 'fs67', 111)" class="f">GetProperty</span>(<span onmouseout="hideTip(event, 'fs65', 112)" onmouseover="showTip(event, 'fs65', 112)" class="i">field</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 113)" onmouseover="showTip(event, 'fs68', 113)" class="i">Name</span>)
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs69', 114)" onmouseover="showTip(event, 'fs69', 114)" class="f">deserializeColumnData</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 115)" onmouseover="showTip(event, 'fs28', 115)" class="f">typeConverter</span> <span onmouseout="hideTip(event, 'fs65', 116)" onmouseover="showTip(event, 'fs65', 116)" class="i">field</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 117)" onmouseover="showTip(event, 'fs70', 117)" class="i">PropertyType</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs71', 118)" onmouseover="showTip(event, 'fs71', 118)" class="i">columnIndex</span> <span class="o">=</span> 
                <span class="k">match</span> <span onmouseout="hideTip(event, 'fs66', 119)" onmouseover="showTip(event, 'fs66', 119)" class="i">propertyInfo</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 120)" onmouseover="showTip(event, 'fs72', 120)" class="f">GetCustomAttributes</span>(<span onmouseout="hideTip(event, 'fs35', 121)" onmouseover="showTip(event, 'fs35', 121)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs8', 122)" onmouseover="showTip(event, 'fs8', 122)" class="t">ColumnAttribute</span><span class="o">&gt;</span>,<span class="k">false</span>) <span class="k">with</span>
                | [| (<span class="o">:?</span> <span onmouseout="hideTip(event, 'fs8', 123)" onmouseover="showTip(event, 'fs8', 123)" class="t">ColumnAttribute</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs73', 124)" onmouseover="showTip(event, 'fs73', 124)" class="i">col</span>) |] <span class="k">-&gt;</span> 
                    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs73', 125)" onmouseover="showTip(event, 'fs73', 125)" class="i">col</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 126)" onmouseover="showTip(event, 'fs74', 126)" class="i">Index</span> <span class="k">with</span>
                    | <span onmouseout="hideTip(event, 'fs21', 127)" onmouseover="showTip(event, 'fs21', 127)" class="i">i</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs21', 128)" onmouseover="showTip(event, 'fs21', 128)" class="i">i</span> <span class="o">&gt;</span><span class="o">=</span> <span class="n">0</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 129)" onmouseover="showTip(event, 'fs21', 129)" class="i">i</span> 
                    | _ <span class="k">-&gt;</span> 
                        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs54', 130)" onmouseover="showTip(event, 'fs54', 130)" class="f">lookupFromHeader</span> <span onmouseout="hideTip(event, 'fs73', 131)" onmouseover="showTip(event, 'fs73', 131)" class="i">col</span> <span class="k">with</span>
                        | <span onmouseout="hideTip(event, 'fs20', 132)" onmouseover="showTip(event, 'fs20', 132)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs21', 133)" onmouseover="showTip(event, 'fs21', 133)" class="i">i</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 134)" onmouseover="showTip(event, 'fs21', 134)" class="i">i</span>
                        | <span onmouseout="hideTip(event, 'fs17', 135)" onmouseover="showTip(event, 'fs17', 135)" class="p">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs64', 136)" onmouseover="showTip(event, 'fs64', 136)" class="i">fieldIndex</span> 
                | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs64', 137)" onmouseover="showTip(event, 'fs64', 137)" class="i">fieldIndex</span>
                
            (<span onmouseout="hideTip(event, 'fs64', 138)" onmouseover="showTip(event, 'fs64', 138)" class="i">fieldIndex</span>, <span onmouseout="hideTip(event, 'fs65', 139)" onmouseover="showTip(event, 'fs65', 139)" class="i">field</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 140)" onmouseover="showTip(event, 'fs68', 140)" class="i">Name</span>, <span onmouseout="hideTip(event, 'fs71', 141)" onmouseover="showTip(event, 'fs71', 141)" class="i">columnIndex</span>, <span onmouseout="hideTip(event, 'fs69', 142)" onmouseover="showTip(event, 'fs69', 142)" class="f">deserializeColumnData</span>) )
        
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs75', 143)" onmouseover="showTip(event, 'fs75', 143)" class="f">fieldContentFromSchema</span> (<span onmouseout="hideTip(event, 'fs76', 144)" onmouseover="showTip(event, 'fs76', 144)" class="i">words</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs13', 145)" onmouseover="showTip(event, 'fs13', 145)" class="t">string</span>[]) <span class="o">=</span> 
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs77', 146)" onmouseover="showTip(event, 'fs77', 146)" class="i">deserializedData</span> <span class="o">=</span> 
                <span onmouseout="hideTip(event, 'fs62', 147)" onmouseover="showTip(event, 'fs62', 147)" class="i">schema</span> 
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs47', 148)" onmouseover="showTip(event, 'fs47', 148)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 149)" onmouseover="showTip(event, 'fs48', 149)" class="f">map</span>( <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs64', 150)" onmouseover="showTip(event, 'fs64', 150)" class="i">fieldIndex</span>, <span onmouseout="hideTip(event, 'fs78', 151)" onmouseover="showTip(event, 'fs78', 151)" class="i">fieldName</span>, <span onmouseout="hideTip(event, 'fs71', 152)" onmouseover="showTip(event, 'fs71', 152)" class="i">columnIndex</span>, <span onmouseout="hideTip(event, 'fs69', 153)" onmouseover="showTip(event, 'fs69', 153)" class="f">deserializeColumnData</span>) <span class="k">-&gt;</span> 
                        <span onmouseout="hideTip(event, 'fs69', 154)" onmouseover="showTip(event, 'fs69', 154)" class="f">deserializeColumnData</span> <span onmouseout="hideTip(event, 'fs76', 155)" onmouseover="showTip(event, 'fs76', 155)" class="i">words</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs71', 156)" onmouseover="showTip(event, 'fs71', 156)" class="i">columnIndex</span>])
            <span onmouseout="hideTip(event, 'fs77', 157)" onmouseover="showTip(event, 'fs77', 157)" class="i">deserializedData</span>

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs79', 158)" onmouseover="showTip(event, 'fs79', 158)" class="i">words</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs45', 159)" onmouseover="showTip(event, 'fs45', 159)" class="i">line</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs42', 160)" onmouseover="showTip(event, 'fs42', 160)" class="f">split</span> <span onmouseout="hideTip(event, 'fs43', 161)" onmouseover="showTip(event, 'fs43', 161)" class="i">delim</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs75', 162)" onmouseover="showTip(event, 'fs75', 162)" class="f">fieldContentFromSchema</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs80', 163)" onmouseover="showTip(event, 'fs80', 163)" class="f">convertColumn</span> <span onmouseout="hideTip(event, 'fs81', 164)" onmouseover="showTip(event, 'fs81', 164)" class="i">colText</span> (<span onmouseout="hideTip(event, 'fs78', 165)" onmouseover="showTip(event, 'fs78', 165)" class="i">fieldName</span>, <span onmouseout="hideTip(event, 'fs82', 166)" onmouseover="showTip(event, 'fs82', 166)" class="f">deserializeColumnData</span>) <span class="o">=</span>
            <span class="k">try</span> <span onmouseout="hideTip(event, 'fs82', 167)" onmouseover="showTip(event, 'fs82', 167)" class="f">deserializeColumnData</span> <span onmouseout="hideTip(event, 'fs81', 168)" onmouseover="showTip(event, 'fs81', 168)" class="i">colText</span>
            <span class="k">with</span> <span onmouseout="hideTip(event, 'fs60', 169)" onmouseover="showTip(event, 'fs60', 169)" class="i">e</span> <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs61', 170)" onmouseover="showTip(event, 'fs61', 170)" class="f">failwithf</span> <span class="s">&quot;error converting &#39;</span><span class="pf">%s</span><span class="s">&#39; to field &#39;</span><span class="pf">%s</span><span class="s">&#39;&quot;</span> <span onmouseout="hideTip(event, 'fs81', 171)" onmouseover="showTip(event, 'fs81', 171)" class="i">colText</span> <span onmouseout="hideTip(event, 'fs78', 172)" onmouseover="showTip(event, 'fs78', 172)" class="i">fieldName</span>

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs83', 173)" onmouseover="showTip(event, 'fs83', 173)" class="i">obj</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 174)" onmouseover="showTip(event, 'fs39', 174)" class="f">objectBuilder</span>(<span onmouseout="hideTip(event, 'fs79', 175)" onmouseover="showTip(event, 'fs79', 175)" class="i">words</span>)
        <span onmouseout="hideTip(event, 'fs84', 176)" onmouseover="showTip(event, 'fs84', 176)" class="f">unbox</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs83', 177)" onmouseover="showTip(event, 'fs83', 177)" class="i">obj</span>)
    
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs51', 178)" onmouseover="showTip(event, 'fs51', 178)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs85', 179)" onmouseover="showTip(event, 'fs85', 179)" class="f">ReadFile</span>(<span onmouseout="hideTip(event, 'fs86', 180)" onmouseover="showTip(event, 'fs86', 180)" class="i">file</span>, <span onmouseout="hideTip(event, 'fs87', 181)" onmouseover="showTip(event, 'fs87', 181)" class="i">separator</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs44', 182)" onmouseover="showTip(event, 'fs44', 182)" class="t">char</span>, <span onmouseout="hideTip(event, 'fs88', 183)" onmouseover="showTip(event, 'fs88', 183)" class="i">firstLineHasHeader</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs89', 184)" onmouseover="showTip(event, 'fs89', 184)" class="t">bool</span>) <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs90', 185)" onmouseover="showTip(event, 'fs90', 185)" class="i">seq</span> { 
            <span class="k">use</span> <span onmouseout="hideTip(event, 'fs91', 186)" onmouseover="showTip(event, 'fs91', 186)" class="i">textReader</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs92', 187)" onmouseover="showTip(event, 'fs92', 187)" class="t">File</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs93', 188)" onmouseover="showTip(event, 'fs93', 188)" class="f">OpenText</span>(<span onmouseout="hideTip(event, 'fs86', 189)" onmouseover="showTip(event, 'fs86', 189)" class="i">file</span>)
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs88', 190)" onmouseover="showTip(event, 'fs88', 190)" class="i">firstLineHasHeader</span> <span class="k">then</span>
                <span onmouseout="hideTip(event, 'fs31', 191)" onmouseover="showTip(event, 'fs31', 191)" class="v">header</span> <span class="o">&lt;-</span>
                    <span onmouseout="hideTip(event, 'fs91', 192)" onmouseover="showTip(event, 'fs91', 192)" class="i">textReader</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs94', 193)" onmouseover="showTip(event, 'fs94', 193)" class="f">ReadLine</span>() 
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs42', 194)" onmouseover="showTip(event, 'fs42', 194)" class="f">split</span> <span onmouseout="hideTip(event, 'fs87', 195)" onmouseover="showTip(event, 'fs87', 195)" class="i">separator</span>
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs47', 196)" onmouseover="showTip(event, 'fs47', 196)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs95', 197)" onmouseover="showTip(event, 'fs95', 197)" class="f">filter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs57', 198)" onmouseover="showTip(event, 'fs57', 198)" class="i">name</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs96', 199)" onmouseover="showTip(event, 'fs96', 199)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs58', 200)" onmouseover="showTip(event, 'fs58', 200)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs97', 201)" onmouseover="showTip(event, 'fs97', 201)" class="f">IsNullOrWhiteSpace</span> <span onmouseout="hideTip(event, 'fs57', 202)" onmouseover="showTip(event, 'fs57', 202)" class="i">name</span>))
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs47', 203)" onmouseover="showTip(event, 'fs47', 203)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 204)" onmouseover="showTip(event, 'fs63', 204)" class="f">mapi</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs21', 205)" onmouseover="showTip(event, 'fs21', 205)" class="i">i</span> <span onmouseout="hideTip(event, 'fs57', 206)" onmouseover="showTip(event, 'fs57', 206)" class="i">name</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs57', 207)" onmouseover="showTip(event, 'fs57', 207)" class="i">name</span>, <span onmouseout="hideTip(event, 'fs21', 208)" onmouseover="showTip(event, 'fs21', 208)" class="i">i</span>))
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs32', 209)" onmouseover="showTip(event, 'fs32', 209)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs98', 210)" onmouseover="showTip(event, 'fs98', 210)" class="f">ofArray</span>
            <span class="k">while</span> <span onmouseout="hideTip(event, 'fs96', 211)" onmouseover="showTip(event, 'fs96', 211)" class="f">not</span> <span onmouseout="hideTip(event, 'fs91', 212)" onmouseover="showTip(event, 'fs91', 212)" class="i">textReader</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs99', 213)" onmouseover="showTip(event, 'fs99', 213)" class="i">EndOfStream</span> <span class="k">do</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs45', 214)" onmouseover="showTip(event, 'fs45', 214)" class="i">line</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs91', 215)" onmouseover="showTip(event, 'fs91', 215)" class="i">textReader</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs94', 216)" onmouseover="showTip(event, 'fs94', 216)" class="f">ReadLine</span>()
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs96', 217)" onmouseover="showTip(event, 'fs96', 217)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs58', 218)" onmouseover="showTip(event, 'fs58', 218)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs100', 219)" onmouseover="showTip(event, 'fs100', 219)" class="f">IsNullOrEmpty</span> <span onmouseout="hideTip(event, 'fs45', 220)" onmouseover="showTip(event, 'fs45', 220)" class="i">line</span>) <span class="k">then</span>
                    <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs51', 221)" onmouseover="showTip(event, 'fs51', 221)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs101', 222)" onmouseover="showTip(event, 'fs101', 222)" class="f">CreateRecord</span>(<span onmouseout="hideTip(event, 'fs31', 223)" onmouseover="showTip(event, 'fs31', 223)" class="v">header</span>, <span onmouseout="hideTip(event, 'fs87', 224)" onmouseover="showTip(event, 'fs87', 224)" class="i">separator</span>, <span onmouseout="hideTip(event, 'fs45', 225)" onmouseover="showTip(event, 'fs45', 225)" class="i">line</span>)
        }


<span class="c">//Examples:</span>
<span class="c">//the csv-header is mandatory for this case!</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs102', 226)" onmouseover="showTip(event, 'fs102', 226)" class="t">Substance</span> <span class="o">=</span> {
    [&lt;<span onmouseout="hideTip(event, 'fs8', 227)" onmouseover="showTip(event, 'fs8', 227)" class="t">Column</span>(<span class="i">Name</span><span class="o">=</span><span class="s">&quot;subst id&quot;</span>)&gt;] <span onmouseout="hideTip(event, 'fs103', 228)" onmouseover="showTip(event, 'fs103', 228)" class="i">Id</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 229)" onmouseover="showTip(event, 'fs10', 229)" class="t">int</span> 
    [&lt;<span onmouseout="hideTip(event, 'fs8', 230)" onmouseover="showTip(event, 'fs8', 230)" class="t">Column</span>(<span class="i">Name</span><span class="o">=</span><span class="s">&quot;name&quot;</span>)&gt;] <span onmouseout="hideTip(event, 'fs104', 231)" onmouseover="showTip(event, 'fs104', 231)" class="i">Name</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs13', 232)" onmouseover="showTip(event, 'fs13', 232)" class="t">string</span>
    [&lt;<span onmouseout="hideTip(event, 'fs8', 233)" onmouseover="showTip(event, 'fs8', 233)" class="t">Column</span>(<span onmouseout="hideTip(event, 'fs104', 234)" onmouseover="showTip(event, 'fs104', 234)" class="i">Name</span><span class="o">=</span><span class="s">&quot;sequence&quot;</span>)&gt;] <span onmouseout="hideTip(event, 'fs105', 235)" onmouseover="showTip(event, 'fs105', 235)" class="i">Sequence</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs13', 236)" onmouseover="showTip(event, 'fs13', 236)" class="t">string</span>
}

<span class="c">// a one-to-one mapping to the column names</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs106', 237)" onmouseover="showTip(event, 'fs106', 237)" class="t">Probe</span> <span class="o">=</span> {
    <span onmouseout="hideTip(event, 'fs107', 238)" onmouseover="showTip(event, 'fs107', 238)" class="i">Name</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs13', 239)" onmouseover="showTip(event, 'fs13', 239)" class="t">string</span>
    <span onmouseout="hideTip(event, 'fs108', 240)" onmouseover="showTip(event, 'fs108', 240)" class="i">Mismatches</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 241)" onmouseover="showTip(event, 'fs10', 241)" class="t">int</span>
    <span onmouseout="hideTip(event, 'fs109', 242)" onmouseover="showTip(event, 'fs109', 242)" class="i">Feature</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs13', 243)" onmouseover="showTip(event, 'fs13', 243)" class="t">string</span>
    <span onmouseout="hideTip(event, 'fs110', 244)" onmouseover="showTip(event, 'fs110', 244)" class="i">HitLocation</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs13', 245)" onmouseover="showTip(event, 'fs13', 245)" class="t">string</span>
    <span onmouseout="hideTip(event, 'fs111', 246)" onmouseover="showTip(event, 'fs111', 246)" class="i">Strain</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs13', 247)" onmouseover="showTip(event, 'fs13', 247)" class="t">string</span>
} 

<span class="c">//0 based index mapping </span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs112', 248)" onmouseover="showTip(event, 'fs112', 248)" class="t">ProbeAlt</span> <span class="o">=</span> {
    [&lt;<span onmouseout="hideTip(event, 'fs8', 249)" onmouseover="showTip(event, 'fs8', 249)" class="t">Column</span>(<span class="i">Index</span><span class="o">=</span><span class="n">4</span>)&gt;]<span onmouseout="hideTip(event, 'fs113', 250)" onmouseover="showTip(event, 'fs113', 250)" class="i">Strain</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs13', 251)" onmouseover="showTip(event, 'fs13', 251)" class="t">string</span>
    [&lt;<span onmouseout="hideTip(event, 'fs8', 252)" onmouseover="showTip(event, 'fs8', 252)" class="t">Column</span>(<span class="i">Index</span><span class="o">=</span><span class="n">0</span>)&gt;]<span onmouseout="hideTip(event, 'fs114', 253)" onmouseover="showTip(event, 'fs114', 253)" class="i">Name</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs13', 254)" onmouseover="showTip(event, 'fs13', 254)" class="t">string</span>
}

<span class="c">//read the csv</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs115', 255)" onmouseover="showTip(event, 'fs115', 255)" class="f">typeConverter</span> <span class="i">_type</span> <span class="o">=</span>
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs116', 256)" onmouseover="showTip(event, 'fs116', 256)" class="i">_type</span> <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs117', 257)" onmouseover="showTip(event, 'fs117', 257)" class="i">t</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs117', 258)" onmouseover="showTip(event, 'fs117', 258)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs35', 259)" onmouseover="showTip(event, 'fs35', 259)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs118', 260)" onmouseover="showTip(event, 'fs118', 260)" class="t">float</span><span class="o">&gt;</span>    <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs2', 261)" onmouseover="showTip(event, 'fs2', 261)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs119', 262)" onmouseover="showTip(event, 'fs119', 262)" class="t">Double</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs120', 263)" onmouseover="showTip(event, 'fs120', 263)" class="f">Parse</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs121', 264)" onmouseover="showTip(event, 'fs121', 264)" class="f">box</span>)
    | <span onmouseout="hideTip(event, 'fs117', 265)" onmouseover="showTip(event, 'fs117', 265)" class="i">t</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs117', 266)" onmouseover="showTip(event, 'fs117', 266)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs35', 267)" onmouseover="showTip(event, 'fs35', 267)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs10', 268)" onmouseover="showTip(event, 'fs10', 268)" class="t">int</span><span class="o">&gt;</span>      <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs2', 269)" onmouseover="showTip(event, 'fs2', 269)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs122', 270)" onmouseover="showTip(event, 'fs122', 270)" class="t">Int32</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs123', 271)" onmouseover="showTip(event, 'fs123', 271)" class="f">Parse</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs121', 272)" onmouseover="showTip(event, 'fs121', 272)" class="f">box</span>)
    | <span onmouseout="hideTip(event, 'fs117', 273)" onmouseover="showTip(event, 'fs117', 273)" class="i">t</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs117', 274)" onmouseover="showTip(event, 'fs117', 274)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs35', 275)" onmouseover="showTip(event, 'fs35', 275)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs13', 276)" onmouseover="showTip(event, 'fs13', 276)" class="t">string</span><span class="o">&gt;</span>   <span class="k">-&gt;</span> (<span class="k">fun</span>(<span onmouseout="hideTip(event, 'fs49', 277)" onmouseover="showTip(event, 'fs49', 277)" class="i">s</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs13', 278)" onmouseover="showTip(event, 'fs13', 278)" class="t">string</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs121', 279)" onmouseover="showTip(event, 'fs121', 279)" class="f">box</span> <span onmouseout="hideTip(event, 'fs49', 280)" onmouseover="showTip(event, 'fs49', 280)" class="i">s</span>)
    | <span onmouseout="hideTip(event, 'fs117', 281)" onmouseover="showTip(event, 'fs117', 281)" class="i">t</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs117', 282)" onmouseover="showTip(event, 'fs117', 282)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs35', 283)" onmouseover="showTip(event, 'fs35', 283)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs89', 284)" onmouseover="showTip(event, 'fs89', 284)" class="t">bool</span><span class="o">&gt;</span>     <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs2', 285)" onmouseover="showTip(event, 'fs2', 285)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs124', 286)" onmouseover="showTip(event, 'fs124', 286)" class="t">Boolean</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs125', 287)" onmouseover="showTip(event, 'fs125', 287)" class="f">Parse</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs121', 288)" onmouseover="showTip(event, 'fs121', 288)" class="f">box</span>)
    | <span onmouseout="hideTip(event, 'fs117', 289)" onmouseover="showTip(event, 'fs117', 289)" class="i">t</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs61', 290)" onmouseover="showTip(event, 'fs61', 290)" class="f">failwithf</span> <span class="s">&quot;Unknown type </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs117', 291)" onmouseover="showTip(event, 'fs117', 291)" class="i">t</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs126', 292)" onmouseover="showTip(event, 'fs126', 292)" class="i">path</span> <span class="o">=</span> <span class="s">&quot;&quot;</span> <span class="c">//....</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs127', 293)" onmouseover="showTip(event, 'fs127', 293)" class="i">reader</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs27', 294)" onmouseover="showTip(event, 'fs27', 294)" class="t">CsvReader</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs106', 295)" onmouseover="showTip(event, 'fs106', 295)" class="t">Probe</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs115', 296)" onmouseover="showTip(event, 'fs115', 296)" class="f">typeConverter</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs128', 297)" onmouseover="showTip(event, 'fs128', 297)" class="i">hasHeader</span> <span class="o">=</span> <span class="k">true</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs129', 298)" onmouseover="showTip(event, 'fs129', 298)" class="i">separator</span> <span class="o">=</span> <span class="s">&#39;\t&#39;</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs130', 299)" onmouseover="showTip(event, 'fs130', 299)" class="i">probes</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs127', 300)" onmouseover="showTip(event, 'fs127', 300)" class="i">reader</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs131', 301)" onmouseover="showTip(event, 'fs131', 301)" class="f">ReadFile</span>(<span onmouseout="hideTip(event, 'fs126', 302)" onmouseover="showTip(event, 'fs126', 302)" class="i">path</span>, <span onmouseout="hideTip(event, 'fs129', 303)" onmouseover="showTip(event, 'fs129', 303)" class="i">separator</span>, <span onmouseout="hideTip(event, 'fs128', 304)" onmouseover="showTip(event, 'fs128', 304)" class="i">hasHeader</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module Csv</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace System.IO</div>
<div class="tip" id="fs4">namespace System.Reflection</div>
<div class="tip" id="fs5">namespace Microsoft</div>
<div class="tip" id="fs6">namespace Microsoft.FSharp</div>
<div class="tip" id="fs7">namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs8">Multiple items<br />type ColumnAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; ColumnAttribute<br />&#160;&#160;new : index:int option * name:string option -&gt; ColumnAttribute<br />&#160;&#160;member Index : int<br />&#160;&#160;member Name : string<br />&#160;&#160;member Index : int with set<br />&#160;&#160;member Name : string with set<br /><br />Full name: Csv.ColumnAttribute<br /><br />--------------------<br />new : unit -&gt; ColumnAttribute<br />new : index:int option * name:string option -&gt; ColumnAttribute</div>
<div class="tip" id="fs9">val index : int option</div>
<div class="tip" id="fs10">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs11">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs12">val name : string option</div>
<div class="tip" id="fs13">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs14">Multiple items<br />type Attribute =<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member IsDefaultAttribute : unit -&gt; bool<br />&#160;&#160;member Match : obj:obj -&gt; bool<br />&#160;&#160;member TypeId : obj<br />&#160;&#160;static member GetCustomAttribute : element:MemberInfo * attributeType:Type -&gt; Attribute + 7 overloads<br />&#160;&#160;static member GetCustomAttributes : element:MemberInfo -&gt; Attribute[] + 15 overloads<br />&#160;&#160;static member IsDefined : element:MemberInfo * attributeType:Type -&gt; bool + 7 overloads<br /><br />Full name: System.Attribute<br /><br />--------------------<br />Attribute() : unit</div>
<div class="tip" id="fs15">val mutable index : int option</div>
<div class="tip" id="fs16">val mutable name : string option</div>
<div class="tip" id="fs17">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs18">val x : ColumnAttribute</div>
<div class="tip" id="fs19">member ColumnAttribute.Index : int with set<br /><br />Full name: Csv.ColumnAttribute.Index</div>
<div class="tip" id="fs20">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs21">val i : int</div>
<div class="tip" id="fs22">val set : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.set</div>
<div class="tip" id="fs23">val value : int</div>
<div class="tip" id="fs24">member ColumnAttribute.Name : string with set<br /><br />Full name: Csv.ColumnAttribute.Name</div>
<div class="tip" id="fs25">val n : string</div>
<div class="tip" id="fs26">val value : string</div>
<div class="tip" id="fs27">Multiple items<br />type CsvReader&lt;&#39;a&gt; =<br />&#160;&#160;new : typeConverter:(Type -&gt; string -&gt; obj) -&gt; CsvReader&lt;&#39;a&gt;<br />&#160;&#160;member CreateRecord : header:Map&lt;string,int&gt; * delim:char * line:string -&gt; &#39;a<br />&#160;&#160;member ReadFile : file:string * separator:char * firstLineHasHeader:bool -&gt; seq&lt;&#39;a&gt;<br /><br />Full name: Csv.CsvReader&lt;_&gt;<br /><br />--------------------<br />new : typeConverter:(Type -&gt; string -&gt; obj) -&gt; CsvReader&lt;&#39;a&gt;</div>
<div class="tip" id="fs28">val typeConverter : (Type -&gt; string -&gt; obj)</div>
<div class="tip" id="fs29">type Type =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Assembly : Assembly<br />&#160;&#160;member AssemblyQualifiedName : string<br />&#160;&#160;member Attributes : TypeAttributes<br />&#160;&#160;member BaseType : Type<br />&#160;&#160;member ContainsGenericParameters : bool<br />&#160;&#160;member DeclaringMethod : MethodBase<br />&#160;&#160;member DeclaringType : Type<br />&#160;&#160;member Equals : o:obj -&gt; bool + 1 overload<br />&#160;&#160;member FindInterfaces : filter:TypeFilter * filterCriteria:obj -&gt; Type[]<br />&#160;&#160;member FindMembers : memberType:MemberTypes * bindingAttr:BindingFlags * filter:MemberFilter * filterCriteria:obj -&gt; MemberInfo[]<br />&#160;&#160;...<br /><br />Full name: System.Type</div>
<div class="tip" id="fs30">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs31">val mutable header : Map&lt;string,int&gt;</div>
<div class="tip" id="fs32">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member Remove : key:&#39;Key -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Map&lt;_,_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs33">val empty&lt;&#39;Key,&#39;T (requires comparison)&gt; : Map&lt;&#39;Key,&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.empty</div>
<div class="tip" id="fs34">val recordType : Type</div>
<div class="tip" id="fs35">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs36">val fields : PropertyInfo []</div>
<div class="tip" id="fs37">type FSharpType =<br />&#160;&#160;static member GetExceptionFields : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetFunctionElements : functionType:Type -&gt; Type * Type<br />&#160;&#160;static member GetRecordFields : recordType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetTupleElements : tupleType:Type -&gt; Type []<br />&#160;&#160;static member GetUnionCases : unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo []<br />&#160;&#160;static member IsExceptionRepresentation : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsFunction : typ:Type -&gt; bool<br />&#160;&#160;static member IsModule : typ:Type -&gt; bool<br />&#160;&#160;static member IsRecord : typ:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsTuple : typ:Type -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpType</div>
<div class="tip" id="fs38">static member FSharpType.GetRecordFields : recordType:Type * ?allowAccessToPrivateRepresentation:bool -&gt; PropertyInfo []<br />static member FSharpType.GetRecordFields : recordType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []</div>
<div class="tip" id="fs39">val objectBuilder : (obj [] -&gt; obj)</div>
<div class="tip" id="fs40">type FSharpValue =<br />&#160;&#160;static member GetExceptionFields : exn:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetRecordField : record:obj * info:PropertyInfo -&gt; obj<br />&#160;&#160;static member GetRecordFields : record:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetTupleField : tuple:obj * index:int -&gt; obj<br />&#160;&#160;static member GetTupleFields : tuple:obj -&gt; obj []<br />&#160;&#160;static member GetUnionFields : value:obj * unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo * obj []<br />&#160;&#160;static member MakeFunction : functionType:Type * implementation:(obj -&gt; obj) -&gt; obj<br />&#160;&#160;static member MakeRecord : recordType:Type * values:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;static member MakeTuple : tupleElements:obj [] * tupleType:Type -&gt; obj<br />&#160;&#160;static member MakeUnion : unionCase:UnionCaseInfo * args:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpValue</div>
<div class="tip" id="fs41">static member FSharpValue.PreComputeRecordConstructor : recordType:Type * ?allowAccessToPrivateRepresentation:bool -&gt; (obj [] -&gt; obj)<br />static member FSharpValue.PreComputeRecordConstructor : recordType:Type * ?bindingFlags:BindingFlags -&gt; (obj [] -&gt; obj)</div>
<div class="tip" id="fs42">val split : (char -&gt; string -&gt; string [])</div>
<div class="tip" id="fs43">val delim : char</div>
<div class="tip" id="fs44">Multiple items<br />val char : value:&#39;T -&gt; char (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.char<br /><br />--------------------<br />type char = Char<br /><br />Full name: Microsoft.FSharp.Core.char</div>
<div class="tip" id="fs45">val line : string</div>
<div class="tip" id="fs46">String.Split([&lt;ParamArray&gt;] separator: char []) : string []<br />String.Split(separator: string [], options: StringSplitOptions) : string []<br />String.Split(separator: char [], options: StringSplitOptions) : string []<br />String.Split(separator: char [], count: int) : string []<br />String.Split(separator: string [], count: int, options: StringSplitOptions) : string []<br />String.Split(separator: char [], count: int, options: StringSplitOptions) : string []</div>
<div class="tip" id="fs47">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs48">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.map</div>
<div class="tip" id="fs49">val s : string</div>
<div class="tip" id="fs50">String.Trim() : string<br />String.Trim([&lt;ParamArray&gt;] trimChars: char []) : string</div>
<div class="tip" id="fs51">val x : CsvReader&lt;&#39;a&gt;</div>
<div class="tip" id="fs52">member CsvReader.CreateRecord : header:Map&lt;string,int&gt; * delim:char * line:string -&gt; &#39;a<br /><br />Full name: Csv.CsvReader`1.CreateRecord</div>
<div class="tip" id="fs53">val header : Map&lt;string,int&gt;</div>
<div class="tip" id="fs54">val lookupFromHeader : (ColumnAttribute -&gt; int option)</div>
<div class="tip" id="fs55">val column : ColumnAttribute</div>
<div class="tip" id="fs56">property ColumnAttribute.Name: string</div>
<div class="tip" id="fs57">val name : string</div>
<div class="tip" id="fs58">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs59">field string.Empty</div>
<div class="tip" id="fs60">val e : exn</div>
<div class="tip" id="fs61">val failwithf : format:Printf.StringFormat&lt;&#39;T,&#39;Result&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.failwithf</div>
<div class="tip" id="fs62">val schema : (int * string * int * (string -&gt; obj)) []</div>
<div class="tip" id="fs63">val mapi : mapping:(int -&gt; &#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.mapi</div>
<div class="tip" id="fs64">val fieldIndex : int</div>
<div class="tip" id="fs65">val field : PropertyInfo</div>
<div class="tip" id="fs66">val propertyInfo : PropertyInfo</div>
<div class="tip" id="fs67">Type.GetProperty(name: string) : PropertyInfo<br />Type.GetProperty(name: string, returnType: Type) : PropertyInfo<br />Type.GetProperty(name: string, types: Type []) : PropertyInfo<br />Type.GetProperty(name: string, bindingAttr: BindingFlags) : PropertyInfo<br />Type.GetProperty(name: string, returnType: Type, types: Type []) : PropertyInfo<br />Type.GetProperty(name: string, returnType: Type, types: Type [], modifiers: ParameterModifier []) : PropertyInfo<br />Type.GetProperty(name: string, bindingAttr: BindingFlags, binder: Binder, returnType: Type, types: Type [], modifiers: ParameterModifier []) : PropertyInfo</div>
<div class="tip" id="fs68">property MemberInfo.Name: string</div>
<div class="tip" id="fs69">val deserializeColumnData : (string -&gt; obj)</div>
<div class="tip" id="fs70">property PropertyInfo.PropertyType: Type</div>
<div class="tip" id="fs71">val columnIndex : int</div>
<div class="tip" id="fs72">MemberInfo.GetCustomAttributes(inherit: bool) : obj []<br />MemberInfo.GetCustomAttributes(attributeType: Type, inherit: bool) : obj []</div>
<div class="tip" id="fs73">val col : ColumnAttribute</div>
<div class="tip" id="fs74">property ColumnAttribute.Index: int</div>
<div class="tip" id="fs75">val fieldContentFromSchema : (string [] -&gt; obj [])</div>
<div class="tip" id="fs76">val words : string []</div>
<div class="tip" id="fs77">val deserializedData : obj []</div>
<div class="tip" id="fs78">val fieldName : string</div>
<div class="tip" id="fs79">val words : obj []</div>
<div class="tip" id="fs80">val convertColumn : (string -&gt; string * (string -&gt; &#39;b) -&gt; &#39;b)</div>
<div class="tip" id="fs81">val colText : string</div>
<div class="tip" id="fs82">val deserializeColumnData : (string -&gt; &#39;b)</div>
<div class="tip" id="fs83">Multiple items<br />val obj : obj<br /><br />--------------------<br />type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs84">val unbox : value:obj -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.unbox</div>
<div class="tip" id="fs85">member CsvReader.ReadFile : file:string * separator:char * firstLineHasHeader:bool -&gt; seq&lt;&#39;a&gt;<br /><br />Full name: Csv.CsvReader`1.ReadFile</div>
<div class="tip" id="fs86">val file : string</div>
<div class="tip" id="fs87">val separator : char</div>
<div class="tip" id="fs88">val firstLineHasHeader : bool</div>
<div class="tip" id="fs89">type bool = Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs90">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs91">val textReader : StreamReader</div>
<div class="tip" id="fs92">type File =<br />&#160;&#160;static member AppendAllLines : path:string * contents:IEnumerable&lt;string&gt; -&gt; unit + 1 overload<br />&#160;&#160;static member AppendAllText : path:string * contents:string -&gt; unit + 1 overload<br />&#160;&#160;static member AppendText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Copy : sourceFileName:string * destFileName:string -&gt; unit + 1 overload<br />&#160;&#160;static member Create : path:string -&gt; FileStream + 3 overloads<br />&#160;&#160;static member CreateText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Decrypt : path:string -&gt; unit<br />&#160;&#160;static member Delete : path:string -&gt; unit<br />&#160;&#160;static member Encrypt : path:string -&gt; unit<br />&#160;&#160;static member Exists : path:string -&gt; bool<br />&#160;&#160;...<br /><br />Full name: System.IO.File</div>
<div class="tip" id="fs93">File.OpenText(path: string) : StreamReader</div>
<div class="tip" id="fs94">StreamReader.ReadLine() : string</div>
<div class="tip" id="fs95">val filter : predicate:(&#39;T -&gt; bool) -&gt; array:&#39;T [] -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.filter</div>
<div class="tip" id="fs96">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs97">String.IsNullOrWhiteSpace(value: string) : bool</div>
<div class="tip" id="fs98">val ofArray : elements:(&#39;Key * &#39;T) [] -&gt; Map&lt;&#39;Key,&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.ofArray</div>
<div class="tip" id="fs99">property StreamReader.EndOfStream: bool</div>
<div class="tip" id="fs100">String.IsNullOrEmpty(value: string) : bool</div>
<div class="tip" id="fs101">member CsvReader.CreateRecord : header:Map&lt;string,int&gt; * delim:char * line:string -&gt; &#39;a</div>
<div class="tip" id="fs102">type Substance =<br />&#160;&#160;{Id: int;<br />&#160;&#160;&#160;Name: string;<br />&#160;&#160;&#160;Sequence: string;}<br /><br />Full name: Csv.Substance</div>
<div class="tip" id="fs103">Substance.Id: int</div>
<div class="tip" id="fs104">Substance.Name: string</div>
<div class="tip" id="fs105">Substance.Sequence: string</div>
<div class="tip" id="fs106">type Probe =<br />&#160;&#160;{Name: string;<br />&#160;&#160;&#160;Mismatches: int;<br />&#160;&#160;&#160;Feature: string;<br />&#160;&#160;&#160;HitLocation: string;<br />&#160;&#160;&#160;Strain: string;}<br /><br />Full name: Csv.Probe</div>
<div class="tip" id="fs107">Probe.Name: string</div>
<div class="tip" id="fs108">Probe.Mismatches: int</div>
<div class="tip" id="fs109">Probe.Feature: string</div>
<div class="tip" id="fs110">Probe.HitLocation: string</div>
<div class="tip" id="fs111">Probe.Strain: string</div>
<div class="tip" id="fs112">type ProbeAlt =<br />&#160;&#160;{Strain: string;<br />&#160;&#160;&#160;Name: string;}<br /><br />Full name: Csv.ProbeAlt</div>
<div class="tip" id="fs113">ProbeAlt.Strain: string</div>
<div class="tip" id="fs114">ProbeAlt.Name: string</div>
<div class="tip" id="fs115">val typeConverter : _type:Type -&gt; (string -&gt; obj)<br /><br />Full name: Csv.typeConverter</div>
<div class="tip" id="fs116">val _type : Type</div>
<div class="tip" id="fs117">val t : Type</div>
<div class="tip" id="fs118">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs119">type Double =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 3 overloads<br />&#160;&#160;&#160;&#160;static val MinValue : float<br />&#160;&#160;&#160;&#160;static val MaxValue : float<br />&#160;&#160;&#160;&#160;static val Epsilon : float<br />&#160;&#160;&#160;&#160;static val NegativeInfinity : float<br />&#160;&#160;&#160;&#160;static val PositiveInfinity : float<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Double</div>
<div class="tip" id="fs120">Double.Parse(s: string) : float<br />Double.Parse(s: string, provider: IFormatProvider) : float<br />Double.Parse(s: string, style: Globalization.NumberStyles) : float<br />Double.Parse(s: string, style: Globalization.NumberStyles, provider: IFormatProvider) : float</div>
<div class="tip" id="fs121">val box : value:&#39;T -&gt; obj<br /><br />Full name: Microsoft.FSharp.Core.Operators.box</div>
<div class="tip" id="fs122">type Int32 =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 3 overloads<br />&#160;&#160;&#160;&#160;static val MaxValue : int<br />&#160;&#160;&#160;&#160;static val MinValue : int<br />&#160;&#160;&#160;&#160;static member Parse : s:string -&gt; int + 3 overloads<br />&#160;&#160;&#160;&#160;static member TryParse : s:string * result:int -&gt; bool + 1 overload<br />&#160;&#160;end<br /><br />Full name: System.Int32</div>
<div class="tip" id="fs123">Int32.Parse(s: string) : int<br />Int32.Parse(s: string, provider: IFormatProvider) : int<br />Int32.Parse(s: string, style: Globalization.NumberStyles) : int<br />Int32.Parse(s: string, style: Globalization.NumberStyles, provider: IFormatProvider) : int</div>
<div class="tip" id="fs124">type Boolean =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : obj:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 1 overload<br />&#160;&#160;&#160;&#160;static val TrueString : string<br />&#160;&#160;&#160;&#160;static val FalseString : string<br />&#160;&#160;&#160;&#160;static member Parse : value:string -&gt; bool<br />&#160;&#160;&#160;&#160;static member TryParse : value:string * result:bool -&gt; bool<br />&#160;&#160;end<br /><br />Full name: System.Boolean</div>
<div class="tip" id="fs125">Boolean.Parse(value: string) : bool</div>
<div class="tip" id="fs126">val path : string<br /><br />Full name: Csv.path</div>
<div class="tip" id="fs127">val reader : CsvReader&lt;Probe&gt;<br /><br />Full name: Csv.reader</div>
<div class="tip" id="fs128">val hasHeader : bool<br /><br />Full name: Csv.hasHeader</div>
<div class="tip" id="fs129">val separator : char<br /><br />Full name: Csv.separator</div>
<div class="tip" id="fs130">val probes : seq&lt;Probe&gt;<br /><br />Full name: Csv.probes</div>
<div class="tip" id="fs131">member CsvReader.ReadFile : file:string * separator:char * firstLineHasHeader:bool -&gt; seq&lt;&#39;a&gt;</div>

