<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">EasyNetQ</span>

<span class="c">// Publish a message via EasyNetQ. If it&#39;s not delivered within</span>
<span class="c">// the TimeSpan given, RabbitMQ will discard it without delivering.</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">expiringPublish</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">a</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">not</span> <span class="k">struct</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">bus</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">IBus</span>) <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="i">message</span> (<span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="i">expire</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="t">TimeSpan</span>) <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="i">topic</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 11)" onmouseover="showTip(event, 'fs11', 11)" class="i">dms</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 12)" onmouseover="showTip(event, 'fs5', 12)" class="i">bus</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="i">Advanced</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 14)" onmouseover="showTip(event, 'fs13', 14)" class="i">Container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 15)" onmouseover="showTip(event, 'fs14', 15)" class="f">Resolve</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs15', 16)" onmouseover="showTip(event, 'fs15', 16)" class="t">IMessageDeliveryModeStrategy</span><span class="o">&gt;</span>()
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 17)" onmouseover="showTip(event, 'fs16', 17)" class="i">ped</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 18)" onmouseover="showTip(event, 'fs5', 18)" class="i">bus</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="i">Advanced</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="i">Container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="f">Resolve</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="i">Producer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="t">IPublishExchangeDeclareStrategy</span><span class="o">&gt;</span>()
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 24)" onmouseover="showTip(event, 'fs19', 24)" class="i">messageType</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 25)" onmouseover="showTip(event, 'fs20', 25)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 26)" onmouseover="showTip(event, 'fs21', 26)" class="i">props</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 27)" onmouseover="showTip(event, 'fs22', 27)" class="t">MessageProperties</span>(<span class="i">Expiration</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs8', 28)" onmouseover="showTip(event, 'fs8', 28)" class="i">expire</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 29)" onmouseover="showTip(event, 'fs23', 29)" class="i">TotalMilliseconds</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs24', 30)" onmouseover="showTip(event, 'fs24', 30)" class="f">int</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 31)" onmouseover="showTip(event, 'fs25', 31)" class="f">string</span>), <span onmouseout="hideTip(event, 'fs26', 32)" onmouseover="showTip(event, 'fs26', 32)" class="i">DeliveryMode</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 33)" onmouseover="showTip(event, 'fs11', 33)" class="i">dms</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 34)" onmouseover="showTip(event, 'fs27', 34)" class="f">GetDeliveryMode</span>(<span onmouseout="hideTip(event, 'fs19', 35)" onmouseover="showTip(event, 'fs19', 35)" class="i">messageType</span>))
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 36)" onmouseover="showTip(event, 'fs28', 36)" class="i">enqMessage</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 37)" onmouseover="showTip(event, 'fs29', 37)" class="t">Message</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs7', 38)" onmouseover="showTip(event, 'fs7', 38)" class="i">message</span>, <span onmouseout="hideTip(event, 'fs21', 39)" onmouseover="showTip(event, 'fs21', 39)" class="i">props</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 40)" onmouseover="showTip(event, 'fs30', 40)" class="i">exchange</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 41)" onmouseover="showTip(event, 'fs16', 41)" class="i">ped</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 42)" onmouseover="showTip(event, 'fs31', 42)" class="f">DeclareExchange</span>(<span onmouseout="hideTip(event, 'fs5', 43)" onmouseover="showTip(event, 'fs5', 43)" class="i">bus</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 44)" onmouseover="showTip(event, 'fs12', 44)" class="i">Advanced</span>, <span onmouseout="hideTip(event, 'fs19', 45)" onmouseover="showTip(event, 'fs19', 45)" class="i">messageType</span>, <span onmouseout="hideTip(event, 'fs32', 46)" onmouseover="showTip(event, 'fs32', 46)" class="i">Topology</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 47)" onmouseover="showTip(event, 'fs33', 47)" class="t">ExchangeType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 48)" onmouseover="showTip(event, 'fs34', 48)" class="i">Topic</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 49)" onmouseover="showTip(event, 'fs35', 49)" class="i">finalTopic</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs10', 50)" onmouseover="showTip(event, 'fs10', 50)" class="i">topic</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs36', 51)" onmouseover="showTip(event, 'fs36', 51)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs37', 52)" onmouseover="showTip(event, 'fs37', 52)" class="i">t</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs37', 53)" onmouseover="showTip(event, 'fs37', 53)" class="i">t</span>
        | <span onmouseout="hideTip(event, 'fs38', 54)" onmouseover="showTip(event, 'fs38', 54)" class="p">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 55)" onmouseover="showTip(event, 'fs5', 55)" class="i">bus</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 56)" onmouseover="showTip(event, 'fs12', 56)" class="i">Advanced</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 57)" onmouseover="showTip(event, 'fs39', 57)" class="i">Conventions</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 58)" onmouseover="showTip(event, 'fs40', 58)" class="i">TopicNamingConvention</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 59)" onmouseover="showTip(event, 'fs41', 59)" class="f">Invoke</span> <span onmouseout="hideTip(event, 'fs19', 60)" onmouseover="showTip(event, 'fs19', 60)" class="i">messageType</span>
    <span onmouseout="hideTip(event, 'fs5', 61)" onmouseover="showTip(event, 'fs5', 61)" class="i">bus</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 62)" onmouseover="showTip(event, 'fs12', 62)" class="i">Advanced</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 63)" onmouseover="showTip(event, 'fs42', 63)" class="f">Publish</span>(<span onmouseout="hideTip(event, 'fs30', 64)" onmouseover="showTip(event, 'fs30', 64)" class="i">exchange</span>, <span onmouseout="hideTip(event, 'fs35', 65)" onmouseover="showTip(event, 'fs35', 65)" class="i">finalTopic</span>, <span class="k">false</span>, <span class="k">false</span>, <span onmouseout="hideTip(event, 'fs28', 66)" onmouseover="showTip(event, 'fs28', 66)" class="i">enqMessage</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace EasyNetQ</div>
<div class="tip" id="fs3">val expiringPublish : bus:IBus -&gt; message:&#39;a -&gt; expire:TimeSpan -&gt; topic:string option -&gt; unit (requires reference type)<br /><br />Full name: Script.expiringPublish</div>
<div class="tip" id="fs4">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs5">val bus : IBus</div>
<div class="tip" id="fs6">type IBus =<br />&#160;&#160;member Advanced : IAdvancedBus<br />&#160;&#160;member IsConnected : bool<br />&#160;&#160;member Publish&lt;&#39;T&gt; : message:&#39;T -&gt; unit + 1 overload<br />&#160;&#160;member PublishAsync&lt;&#39;T&gt; : message:&#39;T -&gt; Task + 1 overload<br />&#160;&#160;member Receive&lt;&#39;T&gt; : queue:string * onMessage:Action&lt;&#39;T&gt; -&gt; IDisposable + 5 overloads<br />&#160;&#160;member Request&lt;&#39;TRequest, &#39;TResponse&gt; : request:&#39;TRequest -&gt; &#39;TResponse<br />&#160;&#160;member RequestAsync&lt;&#39;TRequest, &#39;TResponse&gt; : request:&#39;TRequest -&gt; Task&lt;&#39;TResponse&gt;<br />&#160;&#160;member Respond&lt;&#39;TRequest, &#39;TResponse&gt; : responder:Func&lt;&#39;TRequest, &#39;TResponse&gt; -&gt; IDisposable + 1 overload<br />&#160;&#160;member RespondAsync&lt;&#39;TRequest, &#39;TResponse&gt; : responder:Func&lt;&#39;TRequest, Task&lt;&#39;TResponse&gt;&gt; -&gt; IDisposable + 1 overload<br />&#160;&#160;member Send&lt;&#39;T&gt; : queue:string * message:&#39;T -&gt; unit<br />&#160;&#160;...<br /><br />Full name: EasyNetQ.IBus</div>
<div class="tip" id="fs7">val message : &#39;a (requires reference type)</div>
<div class="tip" id="fs8">val expire : TimeSpan</div>
<div class="tip" id="fs9">Multiple items<br />type TimeSpan =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : ticks:int64 -&gt; TimeSpan + 3 overloads<br />&#160;&#160;&#160;&#160;member Add : ts:TimeSpan -&gt; TimeSpan<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Days : int<br />&#160;&#160;&#160;&#160;member Duration : unit -&gt; TimeSpan<br />&#160;&#160;&#160;&#160;member Equals : value:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member Hours : int<br />&#160;&#160;&#160;&#160;member Milliseconds : int<br />&#160;&#160;&#160;&#160;member Minutes : int<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.TimeSpan<br /><br />--------------------<br />TimeSpan()<br />TimeSpan(ticks: int64) : unit<br />TimeSpan(hours: int, minutes: int, seconds: int) : unit<br />TimeSpan(days: int, hours: int, minutes: int, seconds: int) : unit<br />TimeSpan(days: int, hours: int, minutes: int, seconds: int, milliseconds: int) : unit</div>
<div class="tip" id="fs10">val topic : string option</div>
<div class="tip" id="fs11">val dms : IMessageDeliveryModeStrategy</div>
<div class="tip" id="fs12">property IBus.Advanced: IAdvancedBus</div>
<div class="tip" id="fs13">property IAdvancedBus.Container: IContainer</div>
<div class="tip" id="fs14">IServiceProvider.Resolve&lt;&#39;TService (requires reference type)&gt;() : &#39;TService</div>
<div class="tip" id="fs15">type IMessageDeliveryModeStrategy =<br />&#160;&#160;member GetDeliveryMode : messageType:Type -&gt; byte<br /><br />Full name: EasyNetQ.IMessageDeliveryModeStrategy</div>
<div class="tip" id="fs16">val ped : Producer.IPublishExchangeDeclareStrategy</div>
<div class="tip" id="fs17">namespace EasyNetQ.Producer</div>
<div class="tip" id="fs18">type IPublishExchangeDeclareStrategy =<br />&#160;&#160;member DeclareExchange : advancedBus:IAdvancedBus * exchangeName:string * exchangeType:string -&gt; IExchange + 1 overload<br />&#160;&#160;member DeclareExchangeAsync : advancedBus:IAdvancedBus * exchangeName:string * exchangeType:string -&gt; Task&lt;IExchange&gt; + 1 overload<br /><br />Full name: EasyNetQ.Producer.IPublishExchangeDeclareStrategy</div>
<div class="tip" id="fs19">val messageType : Type</div>
<div class="tip" id="fs20">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs21">val props : MessageProperties</div>
<div class="tip" id="fs22">Multiple items<br />type MessageProperties =<br />&#160;&#160;new : unit -&gt; MessageProperties + 1 overload<br />&#160;&#160;member AppId : string with get, set<br />&#160;&#160;member AppIdPresent : bool with get, set<br />&#160;&#160;member ClusterId : string with get, set<br />&#160;&#160;member ClusterIdPresent : bool with get, set<br />&#160;&#160;member ContentEncoding : string with get, set<br />&#160;&#160;member ContentEncodingPresent : bool with get, set<br />&#160;&#160;member ContentType : string with get, set<br />&#160;&#160;member ContentTypePresent : bool with get, set<br />&#160;&#160;member CopyFrom : basicProperties:IBasicProperties -&gt; unit<br />&#160;&#160;...<br /><br />Full name: EasyNetQ.MessageProperties<br /><br />--------------------<br />MessageProperties() : unit<br />MessageProperties(basicProperties: RabbitMQ.Client.IBasicProperties) : unit</div>
<div class="tip" id="fs23">property TimeSpan.TotalMilliseconds: float</div>
<div class="tip" id="fs24">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs25">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs26">Multiple items<br />type DeliveryModeAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : isPersistent:bool -&gt; DeliveryModeAttribute<br />&#160;&#160;member IsPersistent : bool with get, set<br /><br />Full name: EasyNetQ.DeliveryModeAttribute<br /><br />--------------------<br />DeliveryModeAttribute(isPersistent: bool) : unit</div>
<div class="tip" id="fs27">IMessageDeliveryModeStrategy.GetDeliveryMode(messageType: Type) : byte</div>
<div class="tip" id="fs28">val enqMessage : Message&lt;&#39;a&gt; (requires reference type)</div>
<div class="tip" id="fs29">Multiple items<br />type Message&lt;&#39;T (requires reference type)&gt; =<br />&#160;&#160;new : body:&#39;T -&gt; Message&lt;&#39;T&gt; + 1 overload<br />&#160;&#160;member Body : &#39;T with get, set<br />&#160;&#160;member GetBody : unit -&gt; obj<br />&#160;&#160;member MessageType : Type with get, set<br />&#160;&#160;member Properties : MessageProperties with get, set<br />&#160;&#160;member SetProperties : properties:MessageProperties -&gt; unit<br /><br />Full name: EasyNetQ.Message&lt;_&gt;<br /><br />--------------------<br />Message(body: &#39;T) : unit<br />Message(body: &#39;T, properties: MessageProperties) : unit</div>
<div class="tip" id="fs30">val exchange : Topology.IExchange</div>
<div class="tip" id="fs31">Producer.IPublishExchangeDeclareStrategy.DeclareExchange(advancedBus: IAdvancedBus, messageType: Type, exchangeType: string) : Topology.IExchange<br />Producer.IPublishExchangeDeclareStrategy.DeclareExchange(advancedBus: IAdvancedBus, exchangeName: string, exchangeType: string) : Topology.IExchange</div>
<div class="tip" id="fs32">namespace EasyNetQ.Topology</div>
<div class="tip" id="fs33">type ExchangeType =<br />&#160;&#160;static val Direct : string<br />&#160;&#160;static val Topic : string<br />&#160;&#160;static val Fanout : string<br />&#160;&#160;static val Header : string<br /><br />Full name: EasyNetQ.Topology.ExchangeType</div>
<div class="tip" id="fs34">field Topology.ExchangeType.Topic = &quot;topic&quot;</div>
<div class="tip" id="fs35">val finalTopic : string</div>
<div class="tip" id="fs36">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs37">val t : string</div>
<div class="tip" id="fs38">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs39">property IAdvancedBus.Conventions: IConventions</div>
<div class="tip" id="fs40">property IConventions.TopicNamingConvention: TopicNameConvention</div>
<div class="tip" id="fs41">TopicNameConvention.Invoke(messageType: Type) : string</div>
<div class="tip" id="fs42">IAdvancedBus.Publish&lt;&#39;T (requires reference type)&gt;(exchange: Topology.IExchange, routingKey: string, mandatory: bool, immediate: bool, message: IMessage&lt;&#39;T&gt;) : unit<br />IAdvancedBus.Publish(exchange: Topology.IExchange, routingKey: string, mandatory: bool, immediate: bool, messageProperties: MessageProperties, body: byte []) : unit</div>

