<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
<span class="l">6: </span>
<span class="l">7: </span>
<span class="l">8: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Lazy</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span> 
  | <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="p">Lazy</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">T</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">ref</span>
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="f">RefValue</span>(<span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="p">Lazy</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="v">a</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="v">a</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">l</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="f">Force</span>() <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs5', 10)" onmouseover="showTip(event, 'fs5', 10)" class="t">Lazy</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="f">RefValue</span> <span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="i">l</span>) <span class="o">|&gt;</span> (<span class="o">!</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="i">lazyValue</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 14)" onmouseover="showTip(event, 'fs5', 14)" class="p">Lazy</span> (<span onmouseout="hideTip(event, 'fs3', 15)" onmouseover="showTip(event, 'fs3', 15)" class="f">ref</span> <span class="n">10</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="i">res</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 17)" onmouseover="showTip(event, 'fs10', 17)" class="i">lazyValue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="f">Force</span>()
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />active recognizer Lazy: Lazy&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.( |Lazy| )<br /><br />--------------------<br />type Lazy&lt;&#39;T&gt; = System.Lazy&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Lazy&lt;_&gt;</div>
<div class="tip" id="fs2">Multiple items<br />union case Lazy.Lazy: &#39;T ref -&gt; Lazy&lt;&#39;T&gt;<br /><br />--------------------<br />active recognizer Lazy: Lazy&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.( |Lazy| )<br /><br />--------------------<br />type Lazy&lt;&#39;T&gt; =<br />&#160;&#160;| Lazy of &#39;T ref<br />&#160;&#160;member Force : unit -&gt; &#39;T<br />&#160;&#160;static member RefValue : Lazy&lt;&#39;a&gt; -&gt; &#39;a ref<br /><br />Full name: Script.Lazy&lt;_&gt;</div>
<div class="tip" id="fs3">Multiple items<br />val ref : value:&#39;T -&gt; &#39;T ref<br /><br />Full name: Microsoft.FSharp.Core.Operators.ref<br /><br />--------------------<br />type &#39;T ref = Ref&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.ref&lt;_&gt;</div>
<div class="tip" id="fs4">static member Lazy.RefValue : Lazy&lt;&#39;a&gt; -&gt; &#39;a ref<br /><br />Full name: Script.Lazy`1.RefValue</div>
<div class="tip" id="fs5">Multiple items<br />union case Lazy.Lazy: &#39;T ref -&gt; Lazy&lt;&#39;T&gt;<br /><br />--------------------<br />type Lazy&lt;&#39;T&gt; =<br />&#160;&#160;| Lazy of &#39;T ref<br />&#160;&#160;member Force : unit -&gt; &#39;T<br />&#160;&#160;static member RefValue : Lazy&lt;&#39;a&gt; -&gt; &#39;a ref<br /><br />Full name: Script.Lazy&lt;_&gt;</div>
<div class="tip" id="fs6">val a : &#39;a ref</div>
<div class="tip" id="fs7">val l : Lazy&lt;&#39;T&gt;</div>
<div class="tip" id="fs8">member Lazy.Force : unit -&gt; &#39;T<br /><br />Full name: Script.Lazy`1.Force</div>
<div class="tip" id="fs9">static member Lazy.RefValue : Lazy&lt;&#39;a&gt; -&gt; &#39;a ref</div>
<div class="tip" id="fs10">val lazyValue : Lazy&lt;int&gt;<br /><br />Full name: Script.lazyValue</div>
<div class="tip" id="fs11">val res : int<br /><br />Full name: Script.res</div>
<div class="tip" id="fs12">member Lazy.Force : unit -&gt; &#39;T</div>

