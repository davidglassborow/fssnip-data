<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
<span class="l">154: </span>
<span class="l">155: </span>
<span class="l">156: </span>
<span class="l">157: </span>
<span class="l">158: </span>
<span class="l">159: </span>
<span class="l">160: </span>
<span class="l">161: </span>
<span class="l">162: </span>
<span class="l">163: </span>
<span class="l">164: </span>
<span class="l">165: </span>
<span class="l">166: </span>
<span class="l">167: </span>
<span class="l">168: </span>
<span class="l">169: </span>
<span class="l">170: </span>
<span class="l">171: </span>
<span class="l">172: </span>
<span class="l">173: </span>
<span class="l">174: </span>
<span class="l">175: </span>
<span class="l">176: </span>
<span class="l">177: </span>
<span class="l">178: </span>
<span class="l">179: </span>
<span class="l">180: </span>
<span class="l">181: </span>
<span class="l">182: </span>
<span class="l">183: </span>
<span class="l">184: </span>
<span class="l">185: </span>
<span class="l">186: </span>
<span class="l">187: </span>
<span class="l">188: </span>
<span class="l">189: </span>
<span class="l">190: </span>
<span class="l">191: </span>
<span class="l">192: </span>
<span class="l">193: </span>
<span class="l">194: </span>
<span class="l">195: </span>
<span class="l">196: </span>
<span class="l">197: </span>
<span class="l">198: </span>
<span class="l">199: </span>
<span class="l">200: </span>
<span class="l">201: </span>
<span class="l">202: </span>
<span class="l">203: </span>
<span class="l">204: </span>
<span class="l">205: </span>
<span class="l">206: </span>
<span class="l">207: </span>
<span class="l">208: </span>
<span class="l">209: </span>
<span class="l">210: </span>
<span class="l">211: </span>
<span class="l">212: </span>
<span class="l">213: </span>
<span class="l">214: </span>
<span class="l">215: </span>
<span class="l">216: </span>
<span class="l">217: </span>
<span class="l">218: </span>
<span class="l">219: </span>
<span class="l">220: </span>
<span class="l">221: </span>
<span class="l">222: </span>
<span class="l">223: </span>
<span class="l">224: </span>
<span class="l">225: </span>
<span class="l">226: </span>
<span class="l">227: </span>
<span class="l">228: </span>
<span class="l">229: </span>
<span class="l">230: </span>
<span class="l">231: </span>
<span class="l">232: </span>
<span class="l">233: </span>
<span class="l">234: </span>
<span class="l">235: </span>
<span class="l">236: </span>
<span class="l">237: </span>
<span class="l">238: </span>
<span class="l">239: </span>
<span class="l">240: </span>
<span class="l">241: </span>
<span class="l">242: </span>
<span class="l">243: </span>
<span class="l">244: </span>
<span class="l">245: </span>
<span class="l">246: </span>
<span class="l">247: </span>
<span class="l">248: </span>
<span class="l">249: </span>
<span class="l">250: </span>
<span class="l">251: </span>
<span class="l">252: </span>
<span class="l">253: </span>
<span class="l">254: </span>
<span class="l">255: </span>
<span class="l">256: </span>
<span class="l">257: </span>
<span class="l">258: </span>
<span class="l">259: </span>
<span class="l">260: </span>
<span class="l">261: </span>
<span class="l">262: </span>
<span class="l">263: </span>
<span class="l">264: </span>
<span class="l">265: </span>
<span class="l">266: </span>
<span class="l">267: </span>
<span class="l">268: </span>
<span class="l">269: </span>
<span class="l">270: </span>
<span class="l">271: </span>
<span class="l">272: </span>
<span class="l">273: </span>
<span class="l">274: </span>
<span class="l">275: </span>
<span class="l">276: </span>
<span class="l">277: </span>
<span class="l">278: </span>
<span class="l">279: </span>
<span class="l">280: </span>
<span class="l">281: </span>
<span class="l">282: </span>
<span class="l">283: </span>
<span class="l">284: </span>
<span class="l">285: </span>
<span class="l">286: </span>
<span class="l">287: </span>
<span class="l">288: </span>
<span class="l">289: </span>
<span class="l">290: </span>
<span class="l">291: </span>
<span class="l">292: </span>
<span class="l">293: </span>
<span class="l">294: </span>
<span class="l">295: </span>
<span class="l">296: </span>
<span class="l">297: </span>
<span class="l">298: </span>
<span class="l">299: </span>
<span class="l">300: </span>
<span class="l">301: </span>
<span class="l">302: </span>
<span class="l">303: </span>
<span class="l">304: </span>
<span class="l">305: </span>
<span class="l">306: </span>
<span class="l">307: </span>
<span class="l">308: </span>
<span class="l">309: </span>
<span class="l">310: </span>
<span class="l">311: </span>
<span class="l">312: </span>
<span class="l">313: </span>
<span class="l">314: </span>
<span class="l">315: </span>
<span class="l">316: </span>
<span class="l">317: </span>
<span class="l">318: </span>
<span class="l">319: </span>
<span class="l">320: </span>
<span class="l">321: </span>
<span class="l">322: </span>
<span class="l">323: </span>
<span class="l">324: </span>
<span class="l">325: </span>
<span class="l">326: </span>
<span class="l">327: </span>
<span class="l">328: </span>
<span class="l">329: </span>
<span class="l">330: </span>
<span class="l">331: </span>
<span class="l">332: </span>
<span class="l">333: </span>
<span class="l">334: </span>
<span class="l">335: </span>
<span class="l">336: </span>
<span class="l">337: </span>
<span class="l">338: </span>
<span class="l">339: </span>
<span class="l">340: </span>
<span class="l">341: </span>
<span class="l">342: </span>
<span class="l">343: </span>
<span class="l">344: </span>
<span class="l">345: </span>
<span class="l">346: </span>
<span class="l">347: </span>
<span class="l">348: </span>
<span class="l">349: </span>
<span class="l">350: </span>
<span class="l">351: </span>
<span class="l">352: </span>
<span class="l">353: </span>
<span class="l">354: </span>
<span class="l">355: </span>
<span class="l">356: </span>
<span class="l">357: </span>
<span class="l">358: </span>
<span class="l">359: </span>
<span class="l">360: </span>
<span class="l">361: </span>
<span class="l">362: </span>
<span class="l">363: </span>
<span class="l">364: </span>
<span class="l">365: </span>
<span class="l">366: </span>
<span class="l">367: </span>
<span class="l">368: </span>
<span class="l">369: </span>
<span class="l">370: </span>
<span class="l">371: </span>
<span class="l">372: </span>
<span class="l">373: </span>
<span class="l">374: </span>
<span class="l">375: </span>
<span class="l">376: </span>
<span class="l">377: </span>
<span class="l">378: </span>
<span class="l">379: </span>
<span class="l">380: </span>
<span class="l">381: </span>
<span class="l">382: </span>
<span class="l">383: </span>
<span class="l">384: </span>
<span class="l">385: </span>
<span class="l">386: </span>
<span class="l">387: </span>
<span class="l">388: </span>
<span class="l">389: </span>
<span class="l">390: </span>
<span class="l">391: </span>
<span class="l">392: </span>
<span class="l">393: </span>
<span class="l">394: </span>
<span class="l">395: </span>
<span class="l">396: </span>
<span class="l">397: </span>
<span class="l">398: </span>
<span class="l">399: </span>
<span class="l">400: </span>
<span class="l">401: </span>
<span class="l">402: </span>
<span class="l">403: </span>
<span class="l">404: </span>
<span class="l">405: </span>
<span class="l">406: </span>
<span class="l">407: </span>
<span class="l">408: </span>
<span class="l">409: </span>
<span class="l">410: </span>
<span class="l">411: </span>
<span class="l">412: </span>
<span class="l">413: </span>
<span class="l">414: </span>
<span class="l">415: </span>
<span class="l">416: </span>
<span class="l">417: </span>
<span class="l">418: </span>
<span class="l">419: </span>
<span class="l">420: </span>
<span class="l">421: </span>
<span class="l">422: </span>
<span class="l">423: </span>
<span class="l">424: </span>
<span class="l">425: </span>
<span class="l">426: </span>
<span class="l">427: </span>
<span class="l">428: </span>
<span class="l">429: </span>
<span class="l">430: </span>
<span class="l">431: </span>
<span class="l">432: </span>
<span class="l">433: </span>
<span class="l">434: </span>
<span class="l">435: </span>
<span class="l">436: </span>
<span class="l">437: </span>
<span class="l">438: </span>
<span class="l">439: </span>
<span class="l">440: </span>
<span class="l">441: </span>
<span class="l">442: </span>
<span class="l">443: </span>
<span class="l">444: </span>
<span class="l">445: </span>
<span class="l">446: </span>
<span class="l">447: </span>
<span class="l">448: </span>
<span class="l">449: </span>
<span class="l">450: </span>
<span class="l">451: </span>
<span class="l">452: </span>
<span class="l">453: </span>
<span class="l">454: </span>
<span class="l">455: </span>
<span class="l">456: </span>
<span class="l">457: </span>
<span class="l">458: </span>
<span class="l">459: </span>
<span class="l">460: </span>
<span class="l">461: </span>
<span class="l">462: </span>
<span class="l">463: </span>
<span class="l">464: </span>
<span class="l">465: </span>
<span class="l">466: </span>
<span class="l">467: </span>
<span class="l">468: </span>
<span class="l">469: </span>
<span class="l">470: </span>
<span class="l">471: </span>
<span class="l">472: </span>
<span class="l">473: </span>
<span class="l">474: </span>
<span class="l">475: </span>
<span class="l">476: </span>
<span class="l">477: </span>
<span class="l">478: </span>
<span class="l">479: </span>
<span class="l">480: </span>
<span class="l">481: </span>
<span class="l">482: </span>
<span class="l">483: </span>
<span class="l">484: </span>
<span class="l">485: </span>
<span class="l">486: </span>
<span class="l">487: </span>
<span class="l">488: </span>
<span class="l">489: </span>
<span class="l">490: </span>
<span class="l">491: </span>
<span class="l">492: </span>
<span class="l">493: </span>
<span class="l">494: </span>
<span class="l">495: </span>
<span class="l">496: </span>
<span class="l">497: </span>
<span class="l">498: </span>
<span class="l">499: </span>
<span class="l">500: </span>
<span class="l">501: </span>
<span class="l">502: </span>
<span class="l">503: </span>
<span class="l">504: </span>
<span class="l">505: </span>
<span class="l">506: </span>
<span class="l">507: </span>
<span class="l">508: </span>
<span class="l">509: </span>
<span class="l">510: </span>
<span class="l">511: </span>
<span class="l">512: </span>
<span class="l">513: </span>
<span class="l">514: </span>
<span class="l">515: </span>
<span class="l">516: </span>
<span class="l">517: </span>
<span class="l">518: </span>
<span class="l">519: </span>
<span class="l">520: </span>
<span class="l">521: </span>
<span class="l">522: </span>
<span class="l">523: </span>
<span class="l">524: </span>
<span class="l">525: </span>
<span class="l">526: </span>
<span class="l">527: </span>
<span class="l">528: </span>
<span class="l">529: </span>
<span class="l">530: </span>
<span class="l">531: </span>
<span class="l">532: </span>
<span class="l">533: </span>
<span class="l">534: </span>
<span class="l">535: </span>
<span class="l">536: </span>
<span class="l">537: </span>
<span class="l">538: </span>
<span class="l">539: </span>
<span class="l">540: </span>
<span class="l">541: </span>
<span class="l">542: </span>
<span class="l">543: </span>
<span class="l">544: </span>
<span class="l">545: </span>
<span class="l">546: </span>
<span class="l">547: </span>
<span class="l">548: </span>
<span class="l">549: </span>
<span class="l">550: </span>
<span class="l">551: </span>
<span class="l">552: </span>
<span class="l">553: </span>
<span class="l">554: </span>
<span class="l">555: </span>
<span class="l">556: </span>
<span class="l">557: </span>
<span class="l">558: </span>
<span class="l">559: </span>
<span class="l">560: </span>
<span class="l">561: </span>
<span class="l">562: </span>
<span class="l">563: </span>
<span class="l">564: </span>
<span class="l">565: </span>
<span class="l">566: </span>
<span class="l">567: </span>
<span class="l">568: </span>
<span class="l">569: </span>
<span class="l">570: </span>
<span class="l">571: </span>
<span class="l">572: </span>
<span class="l">573: </span>
<span class="l">574: </span>
<span class="l">575: </span>
<span class="l">576: </span>
<span class="l">577: </span>
<span class="l">578: </span>
<span class="l">579: </span>
<span class="l">580: </span>
<span class="l">581: </span>
<span class="l">582: </span>
<span class="l">583: </span>
<span class="l">584: </span>
<span class="l">585: </span>
<span class="l">586: </span>
<span class="l">587: </span>
<span class="l">588: </span>
<span class="l">589: </span>
<span class="l">590: </span>
<span class="l">591: </span>
<span class="l">592: </span>
<span class="l">593: </span>
<span class="l">594: </span>
<span class="l">595: </span>
<span class="l">596: </span>
<span class="l">597: </span>
<span class="l">598: </span>
<span class="l">599: </span>
<span class="l">600: </span>
<span class="l">601: </span>
<span class="l">602: </span>
<span class="l">603: </span>
<span class="l">604: </span>
<span class="l">605: </span>
<span class="l">606: </span>
<span class="l">607: </span>
<span class="l">608: </span>
<span class="l">609: </span>
<span class="l">610: </span>
<span class="l">611: </span>
<span class="l">612: </span>
<span class="l">613: </span>
<span class="l">614: </span>
<span class="l">615: </span>
<span class="l">616: </span>
<span class="l">617: </span>
<span class="l">618: </span>
<span class="l">619: </span>
<span class="l">620: </span>
<span class="l">621: </span>
<span class="l">622: </span>
<span class="l">623: </span>
<span class="l">624: </span>
<span class="l">625: </span>
<span class="l">626: </span>
<span class="l">627: </span>
<span class="l">628: </span>
<span class="l">629: </span>
<span class="l">630: </span>
<span class="l">631: </span>
<span class="l">632: </span>
<span class="l">633: </span>
<span class="l">634: </span>
<span class="l">635: </span>
<span class="l">636: </span>
<span class="l">637: </span>
<span class="l">638: </span>
<span class="l">639: </span>
<span class="l">640: </span>
<span class="l">641: </span>
<span class="l">642: </span>
<span class="l">643: </span>
<span class="l">644: </span>
<span class="l">645: </span>
<span class="l">646: </span>
<span class="l">647: </span>
<span class="l">648: </span>
<span class="l">649: </span>
<span class="l">650: </span>
<span class="l">651: </span>
<span class="l">652: </span>
<span class="l">653: </span>
<span class="l">654: </span>
<span class="l">655: </span>
<span class="l">656: </span>
<span class="l">657: </span>
<span class="l">658: </span>
<span class="l">659: </span>
<span class="l">660: </span>
<span class="l">661: </span>
<span class="l">662: </span>
<span class="l">663: </span>
<span class="l">664: </span>
<span class="l">665: </span>
<span class="l">666: </span>
<span class="l">667: </span>
<span class="l">668: </span>
<span class="l">669: </span>
<span class="l">670: </span>
<span class="l">671: </span>
<span class="l">672: </span>
<span class="l">673: </span>
<span class="l">674: </span>
<span class="l">675: </span>
<span class="l">676: </span>
<span class="l">677: </span>
<span class="l">678: </span>
<span class="l">679: </span>
<span class="l">680: </span>
<span class="l">681: </span>
<span class="l">682: </span>
<span class="l">683: </span>
<span class="l">684: </span>
<span class="l">685: </span>
<span class="l">686: </span>
<span class="l">687: </span>
<span class="l">688: </span>
<span class="l">689: </span>
<span class="l">690: </span>
<span class="l">691: </span>
<span class="l">692: </span>
<span class="l">693: </span>
<span class="l">694: </span>
<span class="l">695: </span>
<span class="l">696: </span>
<span class="l">697: </span>
<span class="l">698: </span>
<span class="l">699: </span>
<span class="l">700: </span>
<span class="l">701: </span>
<span class="l">702: </span>
<span class="l">703: </span>
<span class="l">704: </span>
<span class="l">705: </span>
<span class="l">706: </span>
<span class="l">707: </span>
<span class="l">708: </span>
<span class="l">709: </span>
<span class="l">710: </span>
<span class="l">711: </span>
<span class="l">712: </span>
<span class="l">713: </span>
<span class="l">714: </span>
<span class="l">715: </span>
<span class="l">716: </span>
<span class="l">717: </span>
<span class="l">718: </span>
<span class="l">719: </span>
<span class="l">720: </span>
<span class="l">721: </span>
<span class="l">722: </span>
<span class="l">723: </span>
<span class="l">724: </span>
<span class="l">725: </span>
<span class="l">726: </span>
<span class="l">727: </span>
<span class="l">728: </span>
<span class="l">729: </span>
<span class="l">730: </span>
<span class="l">731: </span>
<span class="l">732: </span>
<span class="l">733: </span>
<span class="l">734: </span>
<span class="l">735: </span>
<span class="l">736: </span>
<span class="l">737: </span>
<span class="l">738: </span>
<span class="l">739: </span>
<span class="l">740: </span>
<span class="l">741: </span>
<span class="l">742: </span>
<span class="l">743: </span>
<span class="l">744: </span>
<span class="l">745: </span>
<span class="l">746: </span>
<span class="l">747: </span>
<span class="l">748: </span>
<span class="l">749: </span>
<span class="l">750: </span>
<span class="l">751: </span>
<span class="l">752: </span>
<span class="l">753: </span>
<span class="l">754: </span>
<span class="l">755: </span>
<span class="l">756: </span>
<span class="l">757: </span>
<span class="l">758: </span>
<span class="l">759: </span>
<span class="l">760: </span>
<span class="l">761: </span>
<span class="l">762: </span>
<span class="l">763: </span>
<span class="l">764: </span>
<span class="l">765: </span>
<span class="l">766: </span>
<span class="l">767: </span>
<span class="l">768: </span>
<span class="l">769: </span>
<span class="l">770: </span>
<span class="l">771: </span>
<span class="l">772: </span>
<span class="l">773: </span>
<span class="l">774: </span>
<span class="l">775: </span>
<span class="l">776: </span>
<span class="l">777: </span>
<span class="l">778: </span>
<span class="l">779: </span>
<span class="l">780: </span>
<span class="l">781: </span>
<span class="l">782: </span>
<span class="l">783: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">namespace</span> <span class="i">XXX</span>

<span class="k">module</span> <span class="t">TextInput</span> <span class="o">=</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">Position</span> <span class="o">=</span> {
        <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">line</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">int</span>
        <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">column</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="t">int</span>
    }
    
    <span class="c">/// define an initial position</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">initialPos</span> <span class="o">=</span> {<span class="i">line</span><span class="o">=</span><span class="n">0</span>; <span class="i">column</span><span class="o">=</span><span class="n">0</span>}

    <span class="c">/// increment the column number</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="f">incrCol</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">pos</span> <span class="o">=</span> 
        {<span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">pos</span> <span class="k">with</span> <span class="i">column</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">pos</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 12)" onmouseover="showTip(event, 'fs5', 12)" class="i">column</span> <span class="o">+</span> <span class="n">1</span>}

    <span class="c">/// increment the line number and set the column to 0</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="f">incrLine</span> <span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="i">pos</span> <span class="o">=</span> 
        {<span class="i">line</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="i">pos</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 16)" onmouseover="showTip(event, 'fs3', 16)" class="i">line</span> <span class="o">+</span> <span class="n">1</span>; <span class="i">column</span><span class="o">=</span><span class="n">0</span>}

    <span class="c">/// Define the current input state</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs10', 17)" onmouseover="showTip(event, 'fs10', 17)" class="t">InputState</span> <span class="o">=</span> {
        <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="i">lines</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="t">string</span>[]
        <span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="i">position</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 21)" onmouseover="showTip(event, 'fs2', 21)" class="t">Position</span> 
    }

    <span class="c">// return the current line</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 22)" onmouseover="showTip(event, 'fs14', 22)" class="f">currentLine</span> <span onmouseout="hideTip(event, 'fs15', 23)" onmouseover="showTip(event, 'fs15', 23)" class="i">inputState</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 24)" onmouseover="showTip(event, 'fs16', 24)" class="i">linePos</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 25)" onmouseover="showTip(event, 'fs15', 25)" class="i">inputState</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 26)" onmouseover="showTip(event, 'fs13', 26)" class="i">position</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 27)" onmouseover="showTip(event, 'fs3', 27)" class="i">line</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs16', 28)" onmouseover="showTip(event, 'fs16', 28)" class="i">linePos</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs15', 29)" onmouseover="showTip(event, 'fs15', 29)" class="i">inputState</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 30)" onmouseover="showTip(event, 'fs11', 30)" class="i">lines</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 31)" onmouseover="showTip(event, 'fs17', 31)" class="i">Length</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs15', 32)" onmouseover="showTip(event, 'fs15', 32)" class="i">inputState</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 33)" onmouseover="showTip(event, 'fs11', 33)" class="i">lines</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs16', 34)" onmouseover="showTip(event, 'fs16', 34)" class="i">linePos</span>]
        <span class="k">else</span>
            <span class="s">&quot;end of file&quot;</span>

    <span class="c">/// Create a new InputState from a string</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 35)" onmouseover="showTip(event, 'fs18', 35)" class="f">fromStr</span> <span onmouseout="hideTip(event, 'fs19', 36)" onmouseover="showTip(event, 'fs19', 36)" class="i">str</span> <span class="o">=</span> 
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs20', 37)" onmouseover="showTip(event, 'fs20', 37)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 38)" onmouseover="showTip(event, 'fs21', 38)" class="f">IsNullOrEmpty</span>(<span onmouseout="hideTip(event, 'fs19', 39)" onmouseover="showTip(event, 'fs19', 39)" class="i">str</span>) <span class="k">then</span>
            {<span class="i">lines</span><span class="o">=</span>[||]; <span class="i">position</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs6', 40)" onmouseover="showTip(event, 'fs6', 40)" class="i">initialPos</span>}
        <span class="k">else</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 41)" onmouseover="showTip(event, 'fs22', 41)" class="i">separators</span> <span class="o">=</span> [| <span class="s">&quot;</span><span class="e">\r</span><span class="s"></span><span class="e">\n</span><span class="s">&quot;</span>; <span class="s">&quot;</span><span class="e">\n</span><span class="s">&quot;</span> |]
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 42)" onmouseover="showTip(event, 'fs23', 42)" class="i">lines</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 43)" onmouseover="showTip(event, 'fs19', 43)" class="i">str</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 44)" onmouseover="showTip(event, 'fs24', 44)" class="f">Split</span>(<span onmouseout="hideTip(event, 'fs22', 45)" onmouseover="showTip(event, 'fs22', 45)" class="i">separators</span>, <span onmouseout="hideTip(event, 'fs25', 46)" onmouseover="showTip(event, 'fs25', 46)" class="t">StringSplitOptions</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 47)" onmouseover="showTip(event, 'fs26', 47)" class="i">None</span>)
            {<span onmouseout="hideTip(event, 'fs23', 48)" onmouseover="showTip(event, 'fs23', 48)" class="i">lines</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs23', 49)" onmouseover="showTip(event, 'fs23', 49)" class="i">lines</span>; <span class="i">position</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs6', 50)" onmouseover="showTip(event, 'fs6', 50)" class="i">initialPos</span>}


    <span class="c">/// Get the next character from the input, if any</span>
    <span class="c">/// else return None. Also return the updated InputState</span>
    <span class="c">/// Signature: InputState -&gt; InputState * char option </span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 51)" onmouseover="showTip(event, 'fs27', 51)" class="f">nextChar</span> <span onmouseout="hideTip(event, 'fs28', 52)" onmouseover="showTip(event, 'fs28', 52)" class="i">input</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 53)" onmouseover="showTip(event, 'fs16', 53)" class="i">linePos</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 54)" onmouseover="showTip(event, 'fs28', 54)" class="i">input</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 55)" onmouseover="showTip(event, 'fs13', 55)" class="i">position</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 56)" onmouseover="showTip(event, 'fs3', 56)" class="i">line</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 57)" onmouseover="showTip(event, 'fs29', 57)" class="i">colPos</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 58)" onmouseover="showTip(event, 'fs28', 58)" class="i">input</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 59)" onmouseover="showTip(event, 'fs13', 59)" class="i">position</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 60)" onmouseover="showTip(event, 'fs5', 60)" class="i">column</span>
        <span class="c">// three cases</span>
        <span class="c">// 1) if line &gt;= maxLine -&gt; </span>
        <span class="c">//       return EOF</span>
        <span class="c">// 2) if col less than line length -&gt; </span>
        <span class="c">//       return char at colPos, increment colPos</span>
        <span class="c">// 3) if col at line length -&gt; </span>
        <span class="c">//       return NewLine, increment linePos</span>

        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs16', 61)" onmouseover="showTip(event, 'fs16', 61)" class="i">linePos</span> <span class="o">&gt;</span><span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 62)" onmouseover="showTip(event, 'fs28', 62)" class="i">input</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 63)" onmouseover="showTip(event, 'fs11', 63)" class="i">lines</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 64)" onmouseover="showTip(event, 'fs17', 64)" class="i">Length</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs28', 65)" onmouseover="showTip(event, 'fs28', 65)" class="i">input</span>, <span onmouseout="hideTip(event, 'fs30', 66)" onmouseover="showTip(event, 'fs30', 66)" class="p">None</span>
        <span class="k">else</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 67)" onmouseover="showTip(event, 'fs31', 67)" class="i">currentLine</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 68)" onmouseover="showTip(event, 'fs31', 68)" class="f">currentLine</span> <span onmouseout="hideTip(event, 'fs28', 69)" onmouseover="showTip(event, 'fs28', 69)" class="i">input</span>
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs29', 70)" onmouseover="showTip(event, 'fs29', 70)" class="i">colPos</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs31', 71)" onmouseover="showTip(event, 'fs31', 71)" class="i">currentLine</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 72)" onmouseover="showTip(event, 'fs32', 72)" class="i">Length</span> <span class="k">then</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 73)" onmouseover="showTip(event, 'fs33', 73)" class="i">char</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 74)" onmouseover="showTip(event, 'fs31', 74)" class="i">currentLine</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs29', 75)" onmouseover="showTip(event, 'fs29', 75)" class="i">colPos</span>]
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 76)" onmouseover="showTip(event, 'fs34', 76)" class="i">newPos</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 77)" onmouseover="showTip(event, 'fs7', 77)" class="f">incrCol</span> <span onmouseout="hideTip(event, 'fs28', 78)" onmouseover="showTip(event, 'fs28', 78)" class="i">input</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 79)" onmouseover="showTip(event, 'fs13', 79)" class="i">position</span> 
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 80)" onmouseover="showTip(event, 'fs35', 80)" class="i">newState</span> <span class="o">=</span> {<span onmouseout="hideTip(event, 'fs28', 81)" onmouseover="showTip(event, 'fs28', 81)" class="i">input</span> <span class="k">with</span> <span class="i">position</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs34', 82)" onmouseover="showTip(event, 'fs34', 82)" class="i">newPos</span>}
                <span onmouseout="hideTip(event, 'fs35', 83)" onmouseover="showTip(event, 'fs35', 83)" class="i">newState</span>, <span onmouseout="hideTip(event, 'fs36', 84)" onmouseover="showTip(event, 'fs36', 84)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs33', 85)" onmouseover="showTip(event, 'fs33', 85)" class="i">char</span>
            <span class="k">else</span> 
                <span class="c">// end of line, so return LF and move to next line</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 86)" onmouseover="showTip(event, 'fs33', 86)" class="i">char</span> <span class="o">=</span> <span class="s">&#39;\n&#39;</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 87)" onmouseover="showTip(event, 'fs34', 87)" class="i">newPos</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 88)" onmouseover="showTip(event, 'fs9', 88)" class="f">incrLine</span> <span onmouseout="hideTip(event, 'fs28', 89)" onmouseover="showTip(event, 'fs28', 89)" class="i">input</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 90)" onmouseover="showTip(event, 'fs13', 90)" class="i">position</span> 
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 91)" onmouseover="showTip(event, 'fs35', 91)" class="i">newState</span> <span class="o">=</span> {<span onmouseout="hideTip(event, 'fs28', 92)" onmouseover="showTip(event, 'fs28', 92)" class="i">input</span> <span class="k">with</span> <span class="i">position</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs34', 93)" onmouseover="showTip(event, 'fs34', 93)" class="i">newPos</span>}
                <span onmouseout="hideTip(event, 'fs35', 94)" onmouseover="showTip(event, 'fs35', 94)" class="i">newState</span>, <span onmouseout="hideTip(event, 'fs36', 95)" onmouseover="showTip(event, 'fs36', 95)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs33', 96)" onmouseover="showTip(event, 'fs33', 96)" class="i">char</span>

<span class="c">// ===========================================</span>
<span class="c">// Parser code</span>
<span class="c">// ===========================================</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 97)" onmouseover="showTip(event, 'fs1', 97)" class="i">System</span>

<span class="c">// Aliases for input, etc</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs37', 98)" onmouseover="showTip(event, 'fs37', 98)" class="t">Input</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 99)" onmouseover="showTip(event, 'fs38', 99)" class="t">TextInput</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 100)" onmouseover="showTip(event, 'fs10', 100)" class="t">InputState</span>   <span class="c">// type alias</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs39', 101)" onmouseover="showTip(event, 'fs39', 101)" class="t">ParserLabel</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 102)" onmouseover="showTip(event, 'fs12', 102)" class="t">string</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs40', 103)" onmouseover="showTip(event, 'fs40', 103)" class="t">ParserError</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 104)" onmouseover="showTip(event, 'fs12', 104)" class="t">string</span>

<span class="c">/// Stores information about the parser position for error messages</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs41', 105)" onmouseover="showTip(event, 'fs41', 105)" class="t">ParserPosition</span> <span class="o">=</span> {
    <span onmouseout="hideTip(event, 'fs42', 106)" onmouseover="showTip(event, 'fs42', 106)" class="i">currentLine</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs12', 107)" onmouseover="showTip(event, 'fs12', 107)" class="t">string</span>
    <span onmouseout="hideTip(event, 'fs43', 108)" onmouseover="showTip(event, 'fs43', 108)" class="i">line</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs4', 109)" onmouseover="showTip(event, 'fs4', 109)" class="t">int</span>
    <span onmouseout="hideTip(event, 'fs44', 110)" onmouseover="showTip(event, 'fs44', 110)" class="i">column</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs4', 111)" onmouseover="showTip(event, 'fs4', 111)" class="t">int</span>
    }

<span class="c">// Result type</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs45', 112)" onmouseover="showTip(event, 'fs45', 112)" class="t">Result</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs46', 113)" onmouseover="showTip(event, 'fs46', 113)" class="p">Success</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">a</span>
    | <span onmouseout="hideTip(event, 'fs47', 114)" onmouseover="showTip(event, 'fs47', 114)" class="p">Failure</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs39', 115)" onmouseover="showTip(event, 'fs39', 115)" class="t">ParserLabel</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs40', 116)" onmouseover="showTip(event, 'fs40', 116)" class="t">ParserError</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs41', 117)" onmouseover="showTip(event, 'fs41', 117)" class="t">ParserPosition</span> 

<span class="c">/// A Parser structure has a parsing function &amp; label</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs48', 118)" onmouseover="showTip(event, 'fs48', 118)" class="t">Parser</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">=</span> {
    <span onmouseout="hideTip(event, 'fs49', 119)" onmouseover="showTip(event, 'fs49', 119)" class="i">parseFn</span> <span class="o">:</span> (<span onmouseout="hideTip(event, 'fs37', 120)" onmouseover="showTip(event, 'fs37', 120)" class="t">Input</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs45', 121)" onmouseover="showTip(event, 'fs45', 121)" class="t">Result</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs37', 122)" onmouseover="showTip(event, 'fs37', 122)" class="t">Input</span><span class="o">&gt;</span>)
    <span onmouseout="hideTip(event, 'fs50', 123)" onmouseover="showTip(event, 'fs50', 123)" class="i">label</span><span class="o">:</span>  <span onmouseout="hideTip(event, 'fs39', 124)" onmouseover="showTip(event, 'fs39', 124)" class="t">ParserLabel</span> 
    }


<span class="c">/// Run the parser on a InputState</span>
<span class="k">let</span> <span class="i">runOnInput</span> <span class="i">parser</span> <span class="i">input</span> <span class="o">=</span> 
    <span class="c">// call inner function with input</span>
    <span class="i">parser</span><span class="o">.</span><span class="i">parseFn</span> <span class="i">input</span>

<span class="c">/// Run the parser on a string</span>
<span class="k">let</span> <span class="i">run</span> <span class="i">parser</span> <span class="i">inputStr</span> <span class="o">=</span> 
    <span class="c">// call inner function with input</span>
    <span class="i">runOnInput</span> <span class="i">parser</span> (<span onmouseout="hideTip(event, 'fs38', 125)" onmouseover="showTip(event, 'fs38', 125)" class="i">TextInput</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 126)" onmouseover="showTip(event, 'fs51', 126)" class="i">fromStr</span> <span class="i">inputStr</span>)

<span class="c">// =============================================</span>
<span class="c">// Error messages</span>
<span class="c">// =============================================</span>

<span class="k">let</span> <span class="i">parserPositionFromInputState</span> (<span class="i">inputState</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs37', 127)" onmouseover="showTip(event, 'fs37', 127)" class="i">Input</span>) <span class="o">=</span> {
    <span class="i">currentLine</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 128)" onmouseover="showTip(event, 'fs38', 128)" class="i">TextInput</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 129)" onmouseover="showTip(event, 'fs52', 129)" class="i">currentLine</span> <span class="i">inputState</span>
    <span class="i">line</span> <span class="o">=</span> <span class="i">inputState</span><span class="o">.</span><span class="i">position</span><span class="o">.</span><span class="i">line</span>
    <span class="i">column</span> <span class="o">=</span> <span class="i">inputState</span><span class="o">.</span><span class="i">position</span><span class="o">.</span><span class="i">column</span>
    }
        
<span class="k">let</span> <span class="i">printResult</span> <span class="i">result</span> <span class="o">=</span>
    <span class="k">match</span> <span class="i">result</span> <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs46', 130)" onmouseover="showTip(event, 'fs46', 130)" class="i">Success</span> (<span class="i">value</span>,<span class="i">input</span>) <span class="k">-&gt;</span> 
        <span onmouseout="hideTip(event, 'fs53', 131)" onmouseover="showTip(event, 'fs53', 131)" class="i">printfn</span> <span class="s">&quot;%A&quot;</span> <span class="i">value</span>
    | <span onmouseout="hideTip(event, 'fs54', 132)" onmouseover="showTip(event, 'fs54', 132)" class="i">Failure</span> (<span onmouseout="hideTip(event, 'fs50', 133)" onmouseover="showTip(event, 'fs50', 133)" class="i">label</span>,<span class="i">error</span>,<span class="i">parserPos</span>) <span class="k">-&gt;</span> 
        <span class="k">let</span> <span class="i">errorLine</span> <span class="o">=</span> <span class="i">parserPos</span><span class="o">.</span><span class="i">currentLine</span>
        <span class="k">let</span> <span class="i">colPos</span> <span class="o">=</span> <span class="i">parserPos</span><span class="o">.</span><span class="i">column</span>
        <span class="k">let</span> <span class="i">linePos</span> <span class="o">=</span> <span class="i">parserPos</span><span class="o">.</span><span class="i">line</span>
        <span class="k">let</span> <span class="i">failureCaret</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 134)" onmouseover="showTip(event, 'fs55', 134)" class="i">sprintf</span> <span class="s">&quot;%*s^%s&quot;</span> <span class="i">colPos</span> <span class="s">&quot;&quot;</span> <span class="i">error</span>
        <span class="c">// examples of formatting</span>
        <span class="c">//   sprintf &quot;%*s^%s&quot; 0 &quot;&quot; &quot;test&quot;</span>
        <span class="c">//   sprintf &quot;%*s^%s&quot; 10 &quot;&quot; &quot;test&quot;</span>
        <span onmouseout="hideTip(event, 'fs53', 135)" onmouseover="showTip(event, 'fs53', 135)" class="i">printfn</span> <span class="s">&quot;Line:%i Col:%i Error parsing %s</span><span class="e">\n</span><span class="s">%s</span><span class="e">\n</span><span class="s">%s&quot;</span> <span class="i">linePos</span> <span class="i">colPos</span> <span onmouseout="hideTip(event, 'fs50', 136)" onmouseover="showTip(event, 'fs50', 136)" class="i">label</span> <span class="i">errorLine</span> <span class="i">failureCaret</span> 


<span class="c">// =============================================</span>
<span class="c">// Label related</span>
<span class="c">// =============================================</span>

<span class="c">/// get the label from a parser</span>
<span class="k">let</span> <span class="i">getLabel</span> <span class="i">parser</span> <span class="o">=</span> 
    <span class="c">// get label</span>
    <span class="i">parser</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 137)" onmouseover="showTip(event, 'fs50', 137)" class="i">label</span>

<span class="c">/// update the label in the parser</span>
<span class="k">let</span> <span class="i">setLabel</span> <span class="i">parser</span> <span class="i">newLabel</span> <span class="o">=</span> 
    <span class="c">// change the inner function to use the new label</span>
    <span class="k">let</span> <span class="i">newInnerFn</span> <span class="i">input</span> <span class="o">=</span> 
        <span class="k">let</span> <span class="i">result</span> <span class="o">=</span> <span class="i">parser</span><span class="o">.</span><span class="i">parseFn</span> <span class="i">input</span>
        <span class="k">match</span> <span class="i">result</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs46', 138)" onmouseover="showTip(event, 'fs46', 138)" class="i">Success</span> <span class="i">s</span> <span class="k">-&gt;</span>
            <span class="c">// if Success, do nothing</span>
            <span onmouseout="hideTip(event, 'fs46', 139)" onmouseover="showTip(event, 'fs46', 139)" class="i">Success</span> <span class="i">s</span> 
        | <span onmouseout="hideTip(event, 'fs54', 140)" onmouseover="showTip(event, 'fs54', 140)" class="i">Failure</span> (<span class="i">oldLabel</span>,<span class="i">err</span>,<span class="i">pos</span>) <span class="k">-&gt;</span> 
            <span class="c">// if Failure, return new label</span>
            <span onmouseout="hideTip(event, 'fs54', 141)" onmouseover="showTip(event, 'fs54', 141)" class="i">Failure</span> (<span class="i">newLabel</span>,<span class="i">err</span>,<span class="i">pos</span>) 
    <span class="c">// return the Parser</span>
    {<span class="i">parseFn</span><span class="o">=</span><span class="i">newInnerFn</span>; <span onmouseout="hideTip(event, 'fs50', 142)" onmouseover="showTip(event, 'fs50', 142)" class="i">label</span><span class="o">=</span><span class="i">newLabel</span>}

<span class="c">/// infix version of setLabel</span>
<span class="k">let</span> ( <span class="o">&lt;?&gt;</span> ) <span class="o">=</span> <span class="i">setLabel</span>


<span class="c">// =============================================</span>
<span class="c">// Standard combinators</span>
<span class="c">// =============================================</span>

<span class="c">/// Match an input token if the predicate is satisfied</span>
<span class="k">let</span> <span class="i">satisfy</span> <span class="i">predicate</span> <span onmouseout="hideTip(event, 'fs50', 143)" onmouseover="showTip(event, 'fs50', 143)" class="i">label</span> <span class="o">=</span>
    <span class="k">let</span> <span class="i">innerFn</span> <span class="i">input</span> <span class="o">=</span>
        <span class="k">let</span> <span class="i">remainingInput</span>,<span class="i">charOpt</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 144)" onmouseover="showTip(event, 'fs38', 144)" class="i">TextInput</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 145)" onmouseover="showTip(event, 'fs56', 145)" class="i">nextChar</span> <span class="i">input</span> 
        <span class="k">match</span> <span class="i">charOpt</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs30', 146)" onmouseover="showTip(event, 'fs30', 146)" class="i">None</span> <span class="k">-&gt;</span> 
            <span class="k">let</span> <span class="i">err</span> <span class="o">=</span> <span class="s">&quot;No more input&quot;</span>
            <span class="k">let</span> <span class="i">pos</span> <span class="o">=</span> <span class="i">parserPositionFromInputState</span> <span class="i">input</span>
            <span onmouseout="hideTip(event, 'fs54', 147)" onmouseover="showTip(event, 'fs54', 147)" class="i">Failure</span> (<span onmouseout="hideTip(event, 'fs50', 148)" onmouseover="showTip(event, 'fs50', 148)" class="i">label</span>,<span class="i">err</span>,<span class="i">pos</span>)
        | <span onmouseout="hideTip(event, 'fs36', 149)" onmouseover="showTip(event, 'fs36', 149)" class="i">Some</span> <span class="i">first</span> <span class="k">-&gt;</span> 
            <span class="k">if</span> <span class="i">predicate</span> <span class="i">first</span> <span class="k">then</span>
                <span onmouseout="hideTip(event, 'fs46', 150)" onmouseover="showTip(event, 'fs46', 150)" class="i">Success</span> (<span class="i">first</span>,<span class="i">remainingInput</span>)
            <span class="k">else</span>
                <span class="k">let</span> <span class="i">err</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 151)" onmouseover="showTip(event, 'fs55', 151)" class="i">sprintf</span> <span class="s">&quot;Unexpected &#39;%c&#39;&quot;</span> <span class="i">first</span>
                <span class="k">let</span> <span class="i">pos</span> <span class="o">=</span> <span class="i">parserPositionFromInputState</span> <span class="i">input</span>
                <span onmouseout="hideTip(event, 'fs54', 152)" onmouseover="showTip(event, 'fs54', 152)" class="i">Failure</span> (<span onmouseout="hideTip(event, 'fs50', 153)" onmouseover="showTip(event, 'fs50', 153)" class="i">label</span>,<span class="i">err</span>,<span class="i">pos</span>)
    <span class="c">// return the parser</span>
    {<span class="i">parseFn</span><span class="o">=</span><span class="i">innerFn</span>;<span onmouseout="hideTip(event, 'fs50', 154)" onmouseover="showTip(event, 'fs50', 154)" class="i">label</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs50', 155)" onmouseover="showTip(event, 'fs50', 155)" class="i">label</span>}

<span class="c">/// &quot;bindP&quot; takes a parser-producing function f, and a parser p</span>
<span class="c">/// and passes the output of p into f, to create a new parser</span>
<span class="k">let</span> <span class="i">bindP</span> <span class="i">f</span> <span class="i">p</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 156)" onmouseover="showTip(event, 'fs50', 156)" class="i">label</span> <span class="o">=</span> <span class="s">&quot;unknown&quot;</span>
    <span class="k">let</span> <span class="i">innerFn</span> <span class="i">input</span> <span class="o">=</span>
        <span class="k">let</span> <span class="i">result1</span> <span class="o">=</span> <span class="i">runOnInput</span> <span class="i">p</span> <span class="i">input</span> 
        <span class="k">match</span> <span class="i">result1</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs54', 157)" onmouseover="showTip(event, 'fs54', 157)" class="i">Failure</span> (<span onmouseout="hideTip(event, 'fs50', 158)" onmouseover="showTip(event, 'fs50', 158)" class="i">label</span>,<span class="i">err</span>,<span class="i">pos</span>) <span class="k">-&gt;</span> 
            <span class="c">// return error from parser1</span>
            <span onmouseout="hideTip(event, 'fs54', 159)" onmouseover="showTip(event, 'fs54', 159)" class="i">Failure</span> (<span onmouseout="hideTip(event, 'fs50', 160)" onmouseover="showTip(event, 'fs50', 160)" class="i">label</span>,<span class="i">err</span>,<span class="i">pos</span>)  
        | <span onmouseout="hideTip(event, 'fs46', 161)" onmouseover="showTip(event, 'fs46', 161)" class="i">Success</span> (<span class="i">value1</span>,<span class="i">remainingInput</span>) <span class="k">-&gt;</span>
            <span class="c">// apply f to get a new parser</span>
            <span class="k">let</span> <span class="i">p2</span> <span class="o">=</span> <span class="i">f</span> <span class="i">value1</span>
            <span class="c">// run parser with remaining input</span>
            <span class="i">runOnInput</span> <span class="i">p2</span> <span class="i">remainingInput</span>
    {<span class="i">parseFn</span><span class="o">=</span><span class="i">innerFn</span>; <span onmouseout="hideTip(event, 'fs50', 162)" onmouseover="showTip(event, 'fs50', 162)" class="i">label</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs50', 163)" onmouseover="showTip(event, 'fs50', 163)" class="i">label</span>}

<span class="c">/// Infix version of bindP</span>
<span class="k">let</span> ( <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> ) <span class="i">p</span> <span class="i">f</span> <span class="o">=</span> <span class="i">bindP</span> <span class="i">f</span> <span class="i">p</span>

<span class="c">/// Lift a value to a Parser</span>
<span class="k">let</span> <span class="i">returnP</span> <span class="i">x</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 164)" onmouseover="showTip(event, 'fs50', 164)" class="i">label</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 165)" onmouseover="showTip(event, 'fs55', 165)" class="i">sprintf</span> <span class="s">&quot;%A&quot;</span> <span class="i">x</span>
    <span class="k">let</span> <span class="i">innerFn</span> <span class="i">input</span> <span class="o">=</span>
        <span class="c">// ignore the input and return x</span>
        <span onmouseout="hideTip(event, 'fs46', 166)" onmouseover="showTip(event, 'fs46', 166)" class="i">Success</span> (<span class="i">x</span>,<span class="i">input</span>)
    <span class="c">// return the inner function</span>
    {<span class="i">parseFn</span><span class="o">=</span><span class="i">innerFn</span>; <span onmouseout="hideTip(event, 'fs50', 167)" onmouseover="showTip(event, 'fs50', 167)" class="i">label</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs50', 168)" onmouseover="showTip(event, 'fs50', 168)" class="i">label</span>}

<span class="c">/// apply a function to the value inside a parser</span>
<span class="k">let</span> <span class="i">mapP</span> <span class="i">f</span> <span class="o">=</span> 
    <span class="i">bindP</span> (<span class="i">f</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span class="i">returnP</span>)

<span class="c">/// infix version of mapP</span>
<span class="k">let</span> ( <span class="o">&lt;!&gt;</span> ) <span class="o">=</span> <span class="i">mapP</span>

<span class="c">/// &quot;piping&quot; version of mapP</span>
<span class="k">let</span> ( <span class="o">|&gt;&gt;</span> ) <span class="i">x</span> <span class="i">f</span> <span class="o">=</span> <span class="i">mapP</span> <span class="i">f</span> <span class="i">x</span>

<span class="c">/// apply a wrapped function to a wrapped value</span>
<span class="k">let</span> <span class="i">applyP</span> <span class="i">fP</span> <span class="i">xP</span> <span class="o">=</span>         
    <span class="i">fP</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> (<span class="k">fun</span> <span class="i">f</span> <span class="k">-&gt;</span> 
    <span class="i">xP</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> (<span class="k">fun</span> <span class="i">x</span> <span class="k">-&gt;</span> 
        <span class="i">returnP</span> (<span class="i">f</span> <span class="i">x</span>) ))

<span class="c">/// infix version of apply</span>
<span class="k">let</span> ( <span class="o">&lt;*&gt;</span> ) <span class="o">=</span> <span class="i">applyP</span>

<span class="c">/// lift a two parameter function to Parser World</span>
<span class="k">let</span> <span class="i">lift2</span> <span class="i">f</span> <span class="i">xP</span> <span class="i">yP</span> <span class="o">=</span>
    <span class="i">returnP</span> <span class="i">f</span> <span class="o">&lt;*&gt;</span> <span class="i">xP</span> <span class="o">&lt;*&gt;</span> <span class="i">yP</span>

<span class="c">/// Combine two parsers as &quot;A andThen B&quot;</span>
<span class="k">let</span> <span class="i">andThen</span> <span class="i">p1</span> <span class="i">p2</span> <span class="o">=</span>         
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 169)" onmouseover="showTip(event, 'fs50', 169)" class="i">label</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 170)" onmouseover="showTip(event, 'fs55', 170)" class="i">sprintf</span> <span class="s">&quot;%s andThen %s&quot;</span> (<span class="i">getLabel</span> <span class="i">p1</span>) (<span class="i">getLabel</span> <span class="i">p2</span>)
    <span class="i">p1</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> (<span class="k">fun</span> <span class="i">p1Result</span> <span class="k">-&gt;</span> 
    <span class="i">p2</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> (<span class="k">fun</span> <span class="i">p2Result</span> <span class="k">-&gt;</span> 
        <span class="i">returnP</span> (<span class="i">p1Result</span>,<span class="i">p2Result</span>) ))
    <span class="o">&lt;?&gt;</span> <span onmouseout="hideTip(event, 'fs50', 171)" onmouseover="showTip(event, 'fs50', 171)" class="i">label</span>

<span class="c">/// Infix version of andThen</span>
<span class="k">let</span> ( <span class="o">.</span><span class="o">&gt;&gt;.</span> ) <span class="o">=</span> <span class="i">andThen</span>

<span class="c">/// Combine two parsers as &quot;A orElse B&quot;</span>
<span class="k">let</span> <span class="i">orElse</span> <span class="i">p1</span> <span class="i">p2</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 172)" onmouseover="showTip(event, 'fs50', 172)" class="i">label</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 173)" onmouseover="showTip(event, 'fs55', 173)" class="i">sprintf</span> <span class="s">&quot;%s orElse %s&quot;</span> (<span class="i">getLabel</span> <span class="i">p1</span>) (<span class="i">getLabel</span> <span class="i">p2</span>)
    <span class="k">let</span> <span class="i">innerFn</span> <span class="i">input</span> <span class="o">=</span>
        <span class="c">// run parser1 with the input</span>
        <span class="k">let</span> <span class="i">result1</span> <span class="o">=</span> <span class="i">runOnInput</span> <span class="i">p1</span> <span class="i">input</span>

        <span class="c">// test the result for Failure/Success</span>
        <span class="k">match</span> <span class="i">result1</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs46', 174)" onmouseover="showTip(event, 'fs46', 174)" class="i">Success</span> <span class="i">result</span> <span class="k">-&gt;</span> 
            <span class="c">// if success, return the original result</span>
            <span class="i">result1</span>

        | <span onmouseout="hideTip(event, 'fs54', 175)" onmouseover="showTip(event, 'fs54', 175)" class="i">Failure</span> _ <span class="k">-&gt;</span> 
            <span class="c">// if failed, run parser2 with the input</span>
            <span class="k">let</span> <span class="i">result2</span> <span class="o">=</span> <span class="i">runOnInput</span> <span class="i">p2</span> <span class="i">input</span>

            <span class="c">// return parser2&#39;s result</span>
            <span class="i">result2</span> 

    <span class="c">// return the inner function</span>
    {<span class="i">parseFn</span><span class="o">=</span><span class="i">innerFn</span>; <span onmouseout="hideTip(event, 'fs50', 176)" onmouseover="showTip(event, 'fs50', 176)" class="i">label</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs50', 177)" onmouseover="showTip(event, 'fs50', 177)" class="i">label</span>}

<span class="c">/// Infix version of orElse</span>
<span class="k">let</span> ( <span class="o">&lt;|&gt;</span> ) <span class="o">=</span> <span class="i">orElse</span>

<span class="c">/// Choose any of a list of parsers</span>
<span class="k">let</span> <span class="i">choice</span> <span class="i">listOfParsers</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs57', 178)" onmouseover="showTip(event, 'fs57', 178)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 179)" onmouseover="showTip(event, 'fs58', 179)" class="i">reduce</span> ( <span class="o">&lt;|&gt;</span> ) <span class="i">listOfParsers</span> 

<span class="k">let</span> <span class="k">rec</span> <span class="i">sequence</span> <span class="i">parserList</span> <span class="o">=</span>
    <span class="c">// define the &quot;cons&quot; function, which is a two parameter function</span>
    <span class="k">let</span> <span class="i">cons</span> <span class="i">head</span> <span class="i">tail</span> <span class="o">=</span> <span class="i">head</span><span class="o">::</span><span class="i">tail</span>

    <span class="c">// lift it to Parser World</span>
    <span class="k">let</span> <span class="i">consP</span> <span class="o">=</span> <span class="i">lift2</span> <span class="i">cons</span>

    <span class="c">// process the list of parsers recursively</span>
    <span class="k">match</span> <span class="i">parserList</span> <span class="k">with</span>
    | [] <span class="k">-&gt;</span> 
        <span class="i">returnP</span> []
    | <span class="i">head</span><span class="o">::</span><span class="i">tail</span> <span class="k">-&gt;</span>
        <span class="i">consP</span> <span class="i">head</span> (<span class="i">sequence</span> <span class="i">tail</span>)

<span class="c">/// (helper) match zero or more occurences of the specified parser</span>
<span class="k">let</span> <span class="k">rec</span> <span class="i">parseZeroOrMore</span> <span class="i">parser</span> <span class="i">input</span> <span class="o">=</span>
    <span class="c">// run parser with the input</span>
    <span class="k">let</span> <span class="i">firstResult</span> <span class="o">=</span> <span class="i">runOnInput</span> <span class="i">parser</span> <span class="i">input</span> 
    <span class="c">// test the result for Failure/Success</span>
    <span class="k">match</span> <span class="i">firstResult</span> <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs54', 180)" onmouseover="showTip(event, 'fs54', 180)" class="i">Failure</span> (_,_,_) <span class="k">-&gt;</span> 
        <span class="c">// if parse fails, return empty list</span>
        ([],<span class="i">input</span>)  
    | <span onmouseout="hideTip(event, 'fs46', 181)" onmouseover="showTip(event, 'fs46', 181)" class="i">Success</span> (<span class="i">firstValue</span>,<span class="i">inputAfterFirstParse</span>) <span class="k">-&gt;</span> 
        <span class="c">// if parse succeeds, call recursively</span>
        <span class="c">// to get the subsequent values</span>
        <span class="k">let</span> (<span class="i">subsequentValues</span>,<span class="i">remainingInput</span>) <span class="o">=</span> 
            <span class="i">parseZeroOrMore</span> <span class="i">parser</span> <span class="i">inputAfterFirstParse</span>
        <span class="k">let</span> <span class="i">values</span> <span class="o">=</span> <span class="i">firstValue</span><span class="o">::</span><span class="i">subsequentValues</span>
        (<span class="i">values</span>,<span class="i">remainingInput</span>)  

<span class="c">/// matches zero or more occurences of the specified parser</span>
<span class="k">let</span> <span class="i">many</span> <span class="i">parser</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 182)" onmouseover="showTip(event, 'fs50', 182)" class="i">label</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 183)" onmouseover="showTip(event, 'fs55', 183)" class="i">sprintf</span> <span class="s">&quot;many %s&quot;</span> (<span class="i">getLabel</span> <span class="i">parser</span>)
    <span class="k">let</span> <span class="k">rec</span> <span class="i">innerFn</span> <span class="i">input</span> <span class="o">=</span>
        <span class="c">// parse the input -- wrap in Success as it always succeeds</span>
        <span onmouseout="hideTip(event, 'fs46', 184)" onmouseover="showTip(event, 'fs46', 184)" class="i">Success</span> (<span class="i">parseZeroOrMore</span> <span class="i">parser</span> <span class="i">input</span>)
    {<span class="i">parseFn</span><span class="o">=</span><span class="i">innerFn</span>; <span onmouseout="hideTip(event, 'fs50', 185)" onmouseover="showTip(event, 'fs50', 185)" class="i">label</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs50', 186)" onmouseover="showTip(event, 'fs50', 186)" class="i">label</span>}

<span class="c">/// matches one or more occurences of the specified parser</span>
<span class="k">let</span> <span class="i">many1</span> <span class="i">p</span> <span class="o">=</span>         
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 187)" onmouseover="showTip(event, 'fs50', 187)" class="i">label</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 188)" onmouseover="showTip(event, 'fs55', 188)" class="i">sprintf</span> <span class="s">&quot;many1 %s&quot;</span> (<span class="i">getLabel</span> <span class="i">p</span>)

    <span class="i">p</span>      <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> (<span class="k">fun</span> <span class="i">head</span> <span class="k">-&gt;</span> 
    <span class="i">many</span> <span class="i">p</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> (<span class="k">fun</span> <span class="i">tail</span> <span class="k">-&gt;</span> 
        <span class="i">returnP</span> (<span class="i">head</span><span class="o">::</span><span class="i">tail</span>) ))
    <span class="o">&lt;?&gt;</span> <span onmouseout="hideTip(event, 'fs50', 189)" onmouseover="showTip(event, 'fs50', 189)" class="i">label</span>

<span class="c">/// Parses an optional occurrence of p and returns an option value.</span>
<span class="k">let</span> <span class="i">opt</span> <span class="i">p</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 190)" onmouseover="showTip(event, 'fs50', 190)" class="i">label</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 191)" onmouseover="showTip(event, 'fs55', 191)" class="i">sprintf</span> <span class="s">&quot;opt %s&quot;</span> (<span class="i">getLabel</span> <span class="i">p</span>)
    <span class="k">let</span> <span class="i">some</span> <span class="o">=</span> <span class="i">p</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs36', 192)" onmouseover="showTip(event, 'fs36', 192)" class="i">Some</span>
    <span class="k">let</span> <span class="i">none</span> <span class="o">=</span> <span class="i">returnP</span> <span onmouseout="hideTip(event, 'fs30', 193)" onmouseover="showTip(event, 'fs30', 193)" class="i">None</span>
    (<span class="i">some</span> <span class="o">&lt;|&gt;</span> <span class="i">none</span>) <span class="o">&lt;?&gt;</span> <span onmouseout="hideTip(event, 'fs50', 194)" onmouseover="showTip(event, 'fs50', 194)" class="i">label</span>

<span class="c">/// Keep only the result of the left side parser</span>
<span class="k">let</span> (<span class="o">.</span><span class="o">&gt;&gt;</span>) <span class="i">p1</span> <span class="i">p2</span> <span class="o">=</span> 
    <span class="c">// create a pair</span>
    <span class="i">p1</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">p2</span> 
    <span class="c">// then only keep the first value</span>
    <span class="o">|&gt;</span> <span class="i">mapP</span> (<span class="k">fun</span> (<span class="i">a</span>,<span class="i">b</span>) <span class="k">-&gt;</span> <span class="i">a</span>) 

<span class="c">/// Keep only the result of the right side parser</span>
<span class="k">let</span> (<span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span>) <span class="i">p1</span> <span class="i">p2</span> <span class="o">=</span> 
    <span class="c">// create a pair</span>
    <span class="i">p1</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">p2</span> 
    <span class="c">// then only keep the second value</span>
    <span class="o">|&gt;</span> <span class="i">mapP</span> (<span class="k">fun</span> (<span class="i">a</span>,<span class="i">b</span>) <span class="k">-&gt;</span> <span class="i">b</span>) 

<span class="c">/// Keep only the result of the middle parser</span>
<span class="k">let</span> <span class="i">between</span> <span class="i">p1</span> <span class="i">p2</span> <span class="i">p3</span> <span class="o">=</span> 
    <span class="i">p1</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">p2</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">p3</span> 

<span class="c">/// Parses one or more occurrences of p separated by sep</span>
<span class="k">let</span> <span class="i">sepBy1</span> <span class="i">p</span> <span class="i">sep</span> <span class="o">=</span>
    <span class="k">let</span> <span class="i">sepThenP</span> <span class="o">=</span> <span class="i">sep</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">p</span>            
    <span class="i">p</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">many</span> <span class="i">sepThenP</span> 
    <span class="o">|&gt;&gt;</span> <span class="k">fun</span> (<span class="i">p</span>,<span class="i">pList</span>) <span class="k">-&gt;</span> <span class="i">p</span><span class="o">::</span><span class="i">pList</span>

<span class="c">/// Parses zero or more occurrences of p separated by sep</span>
<span class="k">let</span> <span class="i">sepBy</span> <span class="i">p</span> <span class="i">sep</span> <span class="o">=</span>
    <span class="i">sepBy1</span> <span class="i">p</span> <span class="i">sep</span> <span class="o">&lt;|&gt;</span> <span class="i">returnP</span> []

<span class="c">// =============================================</span>
<span class="c">// Standard parsers </span>
<span class="c">// =============================================</span>


<span class="c">// ------------------------------</span>
<span class="c">// char and string parsing</span>
<span class="c">// ------------------------------</span>
            
<span class="c">/// parse a char </span>
<span class="k">let</span> <span class="i">pchar</span> <span class="i">charToMatch</span> <span class="o">=</span> 
    <span class="c">// label is just the character</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 195)" onmouseover="showTip(event, 'fs50', 195)" class="i">label</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 196)" onmouseover="showTip(event, 'fs55', 196)" class="i">sprintf</span> <span class="s">&quot;%c&quot;</span> <span class="i">charToMatch</span> 

    <span class="k">let</span> <span class="i">predicate</span> <span class="i">ch</span> <span class="o">=</span> (<span class="i">ch</span> <span class="o">=</span> <span class="i">charToMatch</span>) 
    <span class="i">satisfy</span> <span class="i">predicate</span> <span onmouseout="hideTip(event, 'fs50', 197)" onmouseover="showTip(event, 'fs50', 197)" class="i">label</span> 

<span class="c">/// Choose any of a list of characters</span>
<span class="k">let</span> <span class="i">anyOf</span> <span class="i">listOfChars</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 198)" onmouseover="showTip(event, 'fs50', 198)" class="i">label</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 199)" onmouseover="showTip(event, 'fs55', 199)" class="i">sprintf</span> <span class="s">&quot;anyOf %A&quot;</span> <span class="i">listOfChars</span> 
    <span class="i">listOfChars</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 200)" onmouseover="showTip(event, 'fs57', 200)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 201)" onmouseover="showTip(event, 'fs59', 201)" class="i">map</span> <span class="i">pchar</span> <span class="c">// convert into parsers</span>
    <span class="o">|&gt;</span> <span class="i">choice</span>
    <span class="o">&lt;?&gt;</span> <span onmouseout="hideTip(event, 'fs50', 202)" onmouseover="showTip(event, 'fs50', 202)" class="i">label</span>

<span class="c">/// Convert a list of chars to a string</span>
<span class="k">let</span> <span class="i">charListToStr</span> <span class="i">charList</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs20', 203)" onmouseover="showTip(event, 'fs20', 203)" class="i">String</span>(<span onmouseout="hideTip(event, 'fs57', 204)" onmouseover="showTip(event, 'fs57', 204)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 205)" onmouseover="showTip(event, 'fs60', 205)" class="i">toArray</span> <span class="i">charList</span>) 

<span class="c">/// Parses a sequence of zero or more chars with the char parser cp. </span>
<span class="c">/// It returns the parsed chars as a string.</span>
<span class="k">let</span> <span class="i">manyChars</span> <span class="i">cp</span> <span class="o">=</span>
    <span class="i">many</span> <span class="i">cp</span>
    <span class="o">|&gt;&gt;</span> <span class="i">charListToStr</span>

<span class="c">/// Parses a sequence of one or more chars with the char parser cp. </span>
<span class="c">/// It returns the parsed chars as a string.</span>
<span class="k">let</span> <span class="i">manyChars1</span> <span class="i">cp</span> <span class="o">=</span>
    <span class="i">many1</span> <span class="i">cp</span>
    <span class="o">|&gt;&gt;</span> <span class="i">charListToStr</span>

<span class="c">/// parse a specific string</span>
<span class="k">let</span> <span class="i">pstring</span> <span class="i">str</span> <span class="o">=</span> 
    <span class="c">// label is just the string</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 206)" onmouseover="showTip(event, 'fs50', 206)" class="i">label</span> <span class="o">=</span> <span class="i">str</span> 

    <span class="i">str</span>
    <span class="c">// convert to list of char</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 207)" onmouseover="showTip(event, 'fs57', 207)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 208)" onmouseover="showTip(event, 'fs61', 208)" class="i">ofSeq</span>
    <span class="c">// map each char to a pchar</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 209)" onmouseover="showTip(event, 'fs57', 209)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 210)" onmouseover="showTip(event, 'fs59', 210)" class="i">map</span> <span class="i">pchar</span> 
    <span class="c">// convert to Parser&lt;char list&gt;</span>
    <span class="o">|&gt;</span> <span class="i">sequence</span>
    <span class="c">// convert Parser&lt;char list&gt; to Parser&lt;string&gt;</span>
    <span class="o">|&gt;</span> <span class="i">mapP</span> <span class="i">charListToStr</span> 
    <span class="o">&lt;?&gt;</span> <span onmouseout="hideTip(event, 'fs50', 211)" onmouseover="showTip(event, 'fs50', 211)" class="i">label</span>

<span class="c">// ------------------------------</span>
<span class="c">// whitespace parsing</span>
<span class="c">// ------------------------------</span>

<span class="c">/// parse a whitespace char</span>
<span class="k">let</span> <span class="i">whitespaceChar</span> <span class="o">=</span> 
    <span class="k">let</span> <span class="i">predicate</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs62', 212)" onmouseover="showTip(event, 'fs62', 212)" class="i">Char</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 213)" onmouseover="showTip(event, 'fs63', 213)" class="i">IsWhiteSpace</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 214)" onmouseover="showTip(event, 'fs50', 214)" class="i">label</span> <span class="o">=</span> <span class="s">&quot;whitespace&quot;</span>
    <span class="i">satisfy</span> <span class="i">predicate</span> <span onmouseout="hideTip(event, 'fs50', 215)" onmouseover="showTip(event, 'fs50', 215)" class="i">label</span> 

<span class="c">/// parse zero or more whitespace char</span>
<span class="k">let</span> <span class="i">spaces</span> <span class="o">=</span> <span class="i">many</span> <span class="i">whitespaceChar</span>

<span class="c">/// parse one or more whitespace char</span>
<span class="k">let</span> <span class="i">spaces1</span> <span class="o">=</span> <span class="i">many1</span> <span class="i">whitespaceChar</span>



<span class="c">// ------------------------------</span>
<span class="c">// number parsing</span>
<span class="c">// ------------------------------</span>

<span class="c">/// parse a digit</span>
<span class="k">let</span> <span class="i">digitChar</span> <span class="o">=</span> 
    <span class="k">let</span> <span class="i">predicate</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs62', 216)" onmouseover="showTip(event, 'fs62', 216)" class="i">Char</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 217)" onmouseover="showTip(event, 'fs64', 217)" class="i">IsDigit</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 218)" onmouseover="showTip(event, 'fs50', 218)" class="i">label</span> <span class="o">=</span> <span class="s">&quot;digit&quot;</span>
    <span class="i">satisfy</span> <span class="i">predicate</span> <span onmouseout="hideTip(event, 'fs50', 219)" onmouseover="showTip(event, 'fs50', 219)" class="i">label</span> 


<span class="c">// parse an integer</span>
<span class="k">let</span> <span class="i">pint</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 220)" onmouseover="showTip(event, 'fs50', 220)" class="i">label</span> <span class="o">=</span> <span class="s">&quot;integer&quot;</span> 

    <span class="c">// helper</span>
    <span class="k">let</span> <span class="i">resultToInt</span> (<span onmouseout="hideTip(event, 'fs65', 221)" onmouseover="showTip(event, 'fs65', 221)" class="i">sign</span>,<span class="i">digits</span>) <span class="o">=</span> 
        <span class="k">let</span> <span class="i">i</span> <span class="o">=</span> <span class="i">digits</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs4', 222)" onmouseover="showTip(event, 'fs4', 222)" class="i">int</span>  <span class="c">// ignore int overflow for now</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs65', 223)" onmouseover="showTip(event, 'fs65', 223)" class="i">sign</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs36', 224)" onmouseover="showTip(event, 'fs36', 224)" class="i">Some</span> <span class="i">ch</span> <span class="k">-&gt;</span> <span class="o">-</span><span class="i">i</span>  <span class="c">// negate the int</span>
        | <span onmouseout="hideTip(event, 'fs30', 225)" onmouseover="showTip(event, 'fs30', 225)" class="i">None</span> <span class="k">-&gt;</span> <span class="i">i</span>
            
    <span class="c">// define parser for one or more digits</span>
    <span class="k">let</span> <span class="i">digits</span> <span class="o">=</span> <span class="i">manyChars1</span> <span class="i">digitChar</span> 

    <span class="c">// an &quot;int&quot; is optional sign + one or more digits</span>
    <span class="i">opt</span> (<span class="i">pchar</span> <span class="s">&#39;-&#39;</span>) <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">digits</span> 
    <span class="o">|&gt;</span> <span class="i">mapP</span> <span class="i">resultToInt</span>
    <span class="o">&lt;?&gt;</span> <span onmouseout="hideTip(event, 'fs50', 226)" onmouseover="showTip(event, 'fs50', 226)" class="i">label</span>

<span class="c">// parse a float</span>
<span class="k">let</span> <span class="i">pfloat</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 227)" onmouseover="showTip(event, 'fs50', 227)" class="i">label</span> <span class="o">=</span> <span class="s">&quot;float&quot;</span> 

    <span class="c">// helper</span>
    <span class="k">let</span> <span class="i">resultToFloat</span> (((<span onmouseout="hideTip(event, 'fs65', 228)" onmouseover="showTip(event, 'fs65', 228)" class="i">sign</span>,<span class="i">digits1</span>),<span class="i">point</span>),<span class="i">digits2</span>) <span class="o">=</span> 
        <span class="k">let</span> <span class="i">fl</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 229)" onmouseover="showTip(event, 'fs55', 229)" class="i">sprintf</span> <span class="s">&quot;%s.%s&quot;</span> <span class="i">digits1</span> <span class="i">digits2</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs66', 230)" onmouseover="showTip(event, 'fs66', 230)" class="i">float</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs65', 231)" onmouseover="showTip(event, 'fs65', 231)" class="i">sign</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs36', 232)" onmouseover="showTip(event, 'fs36', 232)" class="i">Some</span> <span class="i">ch</span> <span class="k">-&gt;</span> <span class="o">-</span><span class="i">fl</span>  <span class="c">// negate the float</span>
        | <span onmouseout="hideTip(event, 'fs30', 233)" onmouseover="showTip(event, 'fs30', 233)" class="i">None</span> <span class="k">-&gt;</span> <span class="i">fl</span>
            
    <span class="c">// define parser for one or more digits </span>
    <span class="k">let</span> <span class="i">digits</span> <span class="o">=</span> <span class="i">manyChars1</span> <span class="i">digitChar</span> 

    <span class="c">// a float is sign, digits, point, digits (ignore exponents for now)</span>
    <span class="i">opt</span> (<span class="i">pchar</span> <span class="s">&#39;-&#39;</span>) <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">digits</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">pchar</span> <span class="s">&#39;.&#39;</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">digits</span> 
    <span class="o">|&gt;</span> <span class="i">mapP</span> <span class="i">resultToFloat</span>
    <span class="o">&lt;?&gt;</span> <span onmouseout="hideTip(event, 'fs50', 234)" onmouseover="showTip(event, 'fs50', 234)" class="i">label</span>


<span class="c">(*</span>
<span class="c">JsonParser.fsx</span>

<span class="c">A JSON parser built from scratch using a combinator library.</span>

<span class="c">Related blog post: http://fsharpforfunandprofit.com/posts/understanding-parser-combinators-4/</span>

<span class="c">*)</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 235)" onmouseover="showTip(event, 'fs1', 235)" class="i">System</span>


<span class="c">(*</span>
<span class="c">// --------------------------------</span>
<span class="c">JSON spec from http://www.json.org/</span>
<span class="c">// --------------------------------</span>

<span class="c">The JSON spec is available at [json.org](http://www.json.org/). I&#39;ll paraphase it here:</span>

<span class="c">* A `value` can be a `string` or a `number` or a `bool` or `null` or an `object` or an `array`. </span>
<span class="c">  * These structures can be nested.</span>
<span class="c">* A `string` is a sequence of zero or more Unicode characters, wrapped in double quotes, using backslash escapes. </span>
<span class="c">* A `number` is very much like a C or Java number, except that the octal and hexadecimal formats are not used.</span>
<span class="c">* A `boolean` is the literal `true` or `false`</span>
<span class="c">* A `null` is the literal `null`</span>
<span class="c">* An `object` is an unordered set of name/value pairs. </span>
<span class="c">  * An object begins with { (left brace) and ends with } (right brace). </span>
<span class="c">  * Each name is followed by : (colon) and the name/value pairs are separated by , (comma).</span>
<span class="c">* An `array` is an ordered collection of values. </span>
<span class="c">  * An array begins with [ (left bracket) and ends with ] (right bracket). </span>
<span class="c">  * Values are separated by , (comma).</span>
<span class="c">* Whitespace can be inserted between any pair of tokens. </span>

<span class="c">*)</span>


<span class="k">type</span> <span onmouseout="hideTip(event, 'fs67', 236)" onmouseover="showTip(event, 'fs67', 236)" class="t">JValue</span> <span class="o">=</span> 
    | <span onmouseout="hideTip(event, 'fs68', 237)" onmouseover="showTip(event, 'fs68', 237)" class="p">JString</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs12', 238)" onmouseover="showTip(event, 'fs12', 238)" class="t">string</span>
    | <span onmouseout="hideTip(event, 'fs69', 239)" onmouseover="showTip(event, 'fs69', 239)" class="p">JNumber</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs66', 240)" onmouseover="showTip(event, 'fs66', 240)" class="t">float</span>
    | <span onmouseout="hideTip(event, 'fs70', 241)" onmouseover="showTip(event, 'fs70', 241)" class="p">JBool</span>   <span class="k">of</span> <span onmouseout="hideTip(event, 'fs71', 242)" onmouseover="showTip(event, 'fs71', 242)" class="t">bool</span>
    | <span onmouseout="hideTip(event, 'fs72', 243)" onmouseover="showTip(event, 'fs72', 243)" class="p">JNull</span>
    | <span onmouseout="hideTip(event, 'fs73', 244)" onmouseover="showTip(event, 'fs73', 244)" class="p">JObject</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs74', 245)" onmouseover="showTip(event, 'fs74', 245)" class="t">Map</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs12', 246)" onmouseover="showTip(event, 'fs12', 246)" class="t">string</span>, <span onmouseout="hideTip(event, 'fs67', 247)" onmouseover="showTip(event, 'fs67', 247)" class="t">JValue</span><span class="o">&gt;</span>
    | <span onmouseout="hideTip(event, 'fs75', 248)" onmouseover="showTip(event, 'fs75', 248)" class="p">JArray</span>  <span class="k">of</span> <span onmouseout="hideTip(event, 'fs67', 249)" onmouseover="showTip(event, 'fs67', 249)" class="t">JValue</span> <span onmouseout="hideTip(event, 'fs76', 250)" onmouseover="showTip(event, 'fs76', 250)" class="t">list</span>


<span class="c">// ======================================</span>
<span class="c">// Forward reference</span>
<span class="c">// ======================================</span>

<span class="c">/// Create a forward reference</span>
<span class="k">let</span> <span class="i">createParserForwardedToRef</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>() <span class="o">=</span>

    <span class="k">let</span> <span class="i">dummyParser</span><span class="o">=</span> 
        <span class="k">let</span> <span class="i">innerFn</span> <span class="i">input</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs45', 251)" onmouseover="showTip(event, 'fs45', 251)" class="i">Result</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs37', 252)" onmouseover="showTip(event, 'fs37', 252)" class="i">Input</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs77', 253)" onmouseover="showTip(event, 'fs77', 253)" class="i">failwith</span> <span class="s">&quot;unfixed forwarded parser&quot;</span>
        {<span class="i">parseFn</span><span class="o">=</span><span class="i">innerFn</span>; <span class="i">label</span><span class="o">=</span><span class="s">&quot;unknown&quot;</span>}
    
    <span class="c">// ref to placeholder Parser</span>
    <span class="k">let</span> <span class="i">parserRef</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs78', 254)" onmouseover="showTip(event, 'fs78', 254)" class="i">ref</span> <span class="i">dummyParser</span> 

    <span class="c">// wrapper Parser</span>
    <span class="k">let</span> <span class="i">innerFn</span> <span class="i">input</span> <span class="o">=</span> 
        <span class="c">// forward input to the placeholder</span>
        <span class="i">runOnInput</span> <span class="o">!</span><span class="i">parserRef</span> <span class="i">input</span> 
    <span class="k">let</span> <span class="i">wrapperParser</span> <span class="o">=</span> {<span class="i">parseFn</span><span class="o">=</span><span class="i">innerFn</span>; <span class="i">label</span><span class="o">=</span><span class="s">&quot;unknown&quot;</span>}

    <span class="i">wrapperParser</span>, <span class="i">parserRef</span>

<span class="k">let</span> <span class="i">jValue</span>,<span class="i">jValueRef</span> <span class="o">=</span> <span class="i">createParserForwardedToRef</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs67', 255)" onmouseover="showTip(event, 'fs67', 255)" class="i">JValue</span><span class="o">&gt;</span>()

<span class="c">// ======================================</span>
<span class="c">// Utility function</span>
<span class="c">// ======================================</span>

<span class="c">// applies the parser p, ignores the result, and returns x.</span>
<span class="k">let</span> (<span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span>) <span class="i">p</span> <span class="i">x</span> <span class="o">=</span>
    <span class="i">p</span> <span class="o">|&gt;&gt;</span> (<span class="k">fun</span> _ <span class="k">-&gt;</span> <span class="i">x</span>)

<span class="c">// ======================================</span>
<span class="c">// Parsing a JNull</span>
<span class="c">// ======================================</span>

<span class="k">let</span> <span class="i">jNull</span> <span class="o">=</span> 
    <span class="i">pstring</span> <span class="s">&quot;null&quot;</span> 
    <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span class="i">JNull</span>   <span class="c">// map to JNull</span>
    <span class="o">&lt;?&gt;</span> <span class="s">&quot;null&quot;</span>  <span class="c">// give it a label</span>

<span class="c">// ======================================</span>
<span class="c">// Parsing a JBool</span>
<span class="c">// ======================================</span>

<span class="k">let</span> <span class="i">jBool</span> <span class="o">=</span>   
    <span class="k">let</span> <span class="i">jtrue</span> <span class="o">=</span> 
        <span class="i">pstring</span> <span class="s">&quot;true&quot;</span> 
        <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span class="i">JBool</span> <span class="k">true</span>   <span class="c">// map to JBool</span>
    <span class="k">let</span> <span class="i">jfalse</span> <span class="o">=</span> 
        <span class="i">pstring</span> <span class="s">&quot;false&quot;</span> 
        <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span class="i">JBool</span> <span class="k">false</span>  <span class="c">// map to JBool </span>

    <span class="c">// choose between true and false</span>
    <span class="i">jtrue</span> <span class="o">&lt;|&gt;</span> <span class="i">jfalse</span>
    <span class="o">&lt;?&gt;</span> <span class="s">&quot;bool&quot;</span>           <span class="c">// give it a label</span>


<span class="c">// ======================================</span>
<span class="c">// Parsing a JString</span>
<span class="c">// ======================================</span>

<span class="c">/// Parse an unescaped char</span>
<span class="k">let</span> <span class="i">jUnescapedChar</span> <span class="o">=</span> 
    <span class="i">satisfy</span> (<span class="k">fun</span> <span class="i">ch</span> <span class="k">-&gt;</span> <span class="i">ch</span> <span class="o">&lt;&gt;</span> <span class="s">&#39;\\&#39;</span> <span class="o">&amp;&amp;</span> <span class="i">ch</span> <span class="o">&lt;&gt;</span> <span class="s">&#39;\&quot;&#39;</span>) <span class="s">&quot;char&quot;</span>

<span class="c">/// Parse an escaped char</span>
<span class="k">let</span> <span class="i">jEscapedChar</span> <span class="o">=</span> 
    [ 
    <span class="c">// (stringToMatch, resultChar)</span>
    (<span class="s">&quot;</span><span class="e">\\</span><span class="s"></span><span class="e">\&quot;</span><span class="s">&quot;</span>,<span class="s">&#39;\&quot;&#39;</span>)      <span class="c">// quote</span>
    (<span class="s">&quot;</span><span class="e">\\</span><span class="s"></span><span class="e">\\</span><span class="s">&quot;</span>,<span class="s">&#39;\\&#39;</span>)      <span class="c">// reverse solidus </span>
    (<span class="s">&quot;</span><span class="e">\\</span><span class="s">/&quot;</span>,<span class="s">&#39;/&#39;</span>)        <span class="c">// solidus</span>
    (<span class="s">&quot;</span><span class="e">\\</span><span class="s">b&quot;</span>,<span class="s">&#39;\b&#39;</span>)       <span class="c">// backspace</span>
    (<span class="s">&quot;</span><span class="e">\\</span><span class="s">f&quot;</span>,<span class="s">&#39;\f&#39;</span>)       <span class="c">// formfeed</span>
    (<span class="s">&quot;</span><span class="e">\\</span><span class="s">n&quot;</span>,<span class="s">&#39;\n&#39;</span>)       <span class="c">// newline</span>
    (<span class="s">&quot;</span><span class="e">\\</span><span class="s">r&quot;</span>,<span class="s">&#39;\r&#39;</span>)       <span class="c">// cr</span>
    (<span class="s">&quot;</span><span class="e">\\</span><span class="s">t&quot;</span>,<span class="s">&#39;\t&#39;</span>)       <span class="c">// tab</span>
    ] 
    <span class="c">// convert each pair into a parser</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 256)" onmouseover="showTip(event, 'fs57', 256)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 257)" onmouseover="showTip(event, 'fs59', 257)" class="i">map</span> (<span class="k">fun</span> (<span class="i">toMatch</span>,<span class="i">result</span>) <span class="k">-&gt;</span> 
        <span class="i">pstring</span> <span class="i">toMatch</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span class="i">result</span>)
    <span class="c">// and combine them into one</span>
    <span class="o">|&gt;</span> <span class="i">choice</span>
    <span class="o">&lt;?&gt;</span> <span class="s">&quot;escaped char&quot;</span> <span class="c">// set label</span>

<span class="c">/// Parse a unicode char</span>
<span class="k">let</span> <span class="i">jUnicodeChar</span> <span class="o">=</span> 
    
    <span class="c">// set up the &quot;primitive&quot; parsers        </span>
    <span class="k">let</span> <span class="i">backslash</span> <span class="o">=</span> <span class="i">pchar</span> <span class="s">&#39;\\&#39;</span>
    <span class="k">let</span> <span class="i">uChar</span> <span class="o">=</span> <span class="i">pchar</span> <span class="s">&#39;u&#39;</span>
    <span class="k">let</span> <span class="i">hexdigit</span> <span class="o">=</span> <span class="i">anyOf</span> ([<span class="s">&#39;0&#39;</span><span class="o">..</span><span class="s">&#39;9&#39;</span>] <span class="o">@</span> [<span class="s">&#39;A&#39;</span><span class="o">..</span><span class="s">&#39;F&#39;</span>] <span class="o">@</span> [<span class="s">&#39;a&#39;</span><span class="o">..</span><span class="s">&#39;f&#39;</span>])

    <span class="c">// convert the parser output (nested tuples)</span>
    <span class="c">// to a char</span>
    <span class="k">let</span> <span class="i">convertToChar</span> (((<span class="i">h1</span>,<span class="i">h2</span>),<span class="i">h3</span>),<span class="i">h4</span>) <span class="o">=</span> 
        <span class="k">let</span> <span class="i">str</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 258)" onmouseover="showTip(event, 'fs55', 258)" class="i">sprintf</span> <span class="s">&quot;%c%c%c%c&quot;</span> <span class="i">h1</span> <span class="i">h2</span> <span class="i">h3</span> <span class="i">h4</span>
        <span onmouseout="hideTip(event, 'fs79', 259)" onmouseover="showTip(event, 'fs79', 259)" class="i">Int32</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs80', 260)" onmouseover="showTip(event, 'fs80', 260)" class="i">Parse</span>(<span class="i">str</span>,<span onmouseout="hideTip(event, 'fs81', 261)" onmouseover="showTip(event, 'fs81', 261)" class="i">Globalization</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs82', 262)" onmouseover="showTip(event, 'fs82', 262)" class="i">NumberStyles</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs83', 263)" onmouseover="showTip(event, 'fs83', 263)" class="i">HexNumber</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs84', 264)" onmouseover="showTip(event, 'fs84', 264)" class="i">char</span>

    <span class="c">// set up the main parser</span>
    <span class="i">backslash</span>  <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">uChar</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">hexdigit</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">hexdigit</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">hexdigit</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">hexdigit</span>
    <span class="o">|&gt;&gt;</span> <span class="i">convertToChar</span> 


<span class="c">/// Parse a quoted string</span>
<span class="k">let</span> <span class="i">quotedString</span> <span class="o">=</span> 
    <span class="k">let</span> <span class="i">quote</span> <span class="o">=</span> <span class="i">pchar</span> <span class="s">&#39;\&quot;&#39;</span> <span class="o">&lt;?&gt;</span> <span class="s">&quot;quote&quot;</span>
    <span class="k">let</span> <span class="i">jchar</span> <span class="o">=</span> <span class="i">jUnescapedChar</span> <span class="o">&lt;|&gt;</span> <span class="i">jEscapedChar</span> <span class="o">&lt;|&gt;</span> <span class="i">jUnicodeChar</span> 

    <span class="c">// set up the main parser</span>
    <span class="i">quote</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">manyChars</span> <span class="i">jchar</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">quote</span> 

<span class="c">/// Parse a JString</span>
<span class="k">let</span> <span class="i">jString</span> <span class="o">=</span> 
    <span class="c">// wrap the string in a JString</span>
    <span class="i">quotedString</span>
    <span class="o">|&gt;&gt;</span> <span class="i">JString</span>           <span class="c">// convert to JString</span>
    <span class="o">&lt;?&gt;</span> <span class="s">&quot;quoted string&quot;</span>   <span class="c">// add label</span>

<span class="c">// ======================================</span>
<span class="c">// Parsing a JNumber</span>
<span class="c">// ======================================</span>

<span class="c">/// Parse a JNumber</span>
<span class="k">let</span> <span class="i">jNumber</span> <span class="o">=</span> 

    <span class="c">// set up the &quot;primitive&quot; parsers        </span>
    <span class="k">let</span> <span class="i">optSign</span> <span class="o">=</span> <span class="i">opt</span> (<span class="i">pchar</span> <span class="s">&#39;-&#39;</span>)

    <span class="k">let</span> <span class="i">zero</span> <span class="o">=</span> <span class="i">pstring</span> <span class="s">&quot;0&quot;</span>

    <span class="k">let</span> <span class="i">digitOneNine</span> <span class="o">=</span> 
        <span class="i">satisfy</span> (<span class="k">fun</span> <span class="i">ch</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs62', 265)" onmouseover="showTip(event, 'fs62', 265)" class="i">Char</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 266)" onmouseover="showTip(event, 'fs64', 266)" class="i">IsDigit</span> <span class="i">ch</span> <span class="o">&amp;&amp;</span> <span class="i">ch</span> <span class="o">&lt;&gt;</span> <span class="s">&#39;0&#39;</span>) <span class="s">&quot;1-9&quot;</span>

    <span class="k">let</span> <span class="i">digit</span> <span class="o">=</span> 
        <span class="i">satisfy</span> (<span class="k">fun</span> <span class="i">ch</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs62', 267)" onmouseover="showTip(event, 'fs62', 267)" class="i">Char</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 268)" onmouseover="showTip(event, 'fs64', 268)" class="i">IsDigit</span> <span class="i">ch</span> ) <span class="s">&quot;digit&quot;</span>

    <span class="k">let</span> <span class="i">point</span> <span class="o">=</span> <span class="i">pchar</span> <span class="s">&#39;.&#39;</span>

    <span class="k">let</span> <span class="i">e</span> <span class="o">=</span> <span class="i">pchar</span> <span class="s">&#39;e&#39;</span> <span class="o">&lt;|&gt;</span> <span class="i">pchar</span> <span class="s">&#39;E&#39;</span>

    <span class="k">let</span> <span class="i">optPlusMinus</span> <span class="o">=</span> <span class="i">opt</span> (<span class="i">pchar</span> <span class="s">&#39;-&#39;</span> <span class="o">&lt;|&gt;</span> <span class="i">pchar</span> <span class="s">&#39;+&#39;</span>)

    <span class="k">let</span> <span class="i">nonZeroInt</span> <span class="o">=</span> 
        <span class="i">digitOneNine</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">manyChars</span> <span class="i">digit</span> 
        <span class="o">|&gt;&gt;</span> <span class="k">fun</span> (<span class="i">first</span>,<span class="i">rest</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs12', 269)" onmouseover="showTip(event, 'fs12', 269)" class="i">string</span> <span class="i">first</span> <span class="o">+</span> <span class="i">rest</span>

    <span class="k">let</span> <span class="i">intPart</span> <span class="o">=</span> <span class="i">zero</span> <span class="o">&lt;|&gt;</span> <span class="i">nonZeroInt</span>

    <span class="k">let</span> <span class="i">fractionPart</span> <span class="o">=</span> <span class="i">point</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">manyChars1</span> <span class="i">digit</span>

    <span class="k">let</span> <span class="i">exponentPart</span> <span class="o">=</span> <span class="i">e</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">optPlusMinus</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">manyChars1</span> <span class="i">digit</span>

    <span class="c">// utility function to convert an optional value to a string, or &quot;&quot; if missing</span>
    <span class="k">let</span> ( <span class="o">|&gt;?</span> ) <span class="i">opt</span> <span class="i">f</span> <span class="o">=</span> 
        <span class="k">match</span> <span class="i">opt</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs30', 270)" onmouseover="showTip(event, 'fs30', 270)" class="i">None</span> <span class="k">-&gt;</span> <span class="s">&quot;&quot;</span>
        | <span onmouseout="hideTip(event, 'fs36', 271)" onmouseover="showTip(event, 'fs36', 271)" class="i">Some</span> <span class="i">x</span> <span class="k">-&gt;</span> <span class="i">f</span> <span class="i">x</span>

    <span class="k">let</span> <span class="i">convertToJNumber</span> (((<span class="i">optSign</span>,<span class="i">intPart</span>),<span class="i">fractionPart</span>),<span class="i">expPart</span>) <span class="o">=</span> 
        <span class="c">// convert to strings and let .NET parse them! - crude but ok for now.</span>

        <span class="k">let</span> <span class="i">signStr</span> <span class="o">=</span> 
            <span class="i">optSign</span> 
            <span class="o">|&gt;?</span> <span onmouseout="hideTip(event, 'fs12', 272)" onmouseover="showTip(event, 'fs12', 272)" class="i">string</span>   <span class="c">// e.g. &quot;-&quot;</span>

        <span class="k">let</span> <span class="i">fractionPartStr</span> <span class="o">=</span> 
            <span class="i">fractionPart</span> 
            <span class="o">|&gt;?</span> (<span class="k">fun</span> <span class="i">digits</span> <span class="k">-&gt;</span> <span class="s">&quot;.&quot;</span> <span class="o">+</span> <span class="i">digits</span> )  <span class="c">// e.g. &quot;.456&quot;</span>

        <span class="k">let</span> <span class="i">expPartStr</span> <span class="o">=</span> 
            <span class="i">expPart</span> 
            <span class="o">|&gt;?</span> <span class="k">fun</span> (<span class="i">optSign</span>, <span class="i">digits</span>) <span class="k">-&gt;</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs65', 273)" onmouseover="showTip(event, 'fs65', 273)" class="i">sign</span> <span class="o">=</span> <span class="i">optSign</span> <span class="o">|&gt;?</span> <span onmouseout="hideTip(event, 'fs12', 274)" onmouseover="showTip(event, 'fs12', 274)" class="i">string</span>
                <span class="s">&quot;e&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs65', 275)" onmouseover="showTip(event, 'fs65', 275)" class="i">sign</span> <span class="o">+</span> <span class="i">digits</span>          <span class="c">// e.g. &quot;e-12&quot;</span>

        <span class="c">// add the parts together and convert to a float, then wrap in a JNumber</span>
        (<span class="i">signStr</span> <span class="o">+</span> <span class="i">intPart</span> <span class="o">+</span> <span class="i">fractionPartStr</span> <span class="o">+</span> <span class="i">expPartStr</span>)
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs66', 276)" onmouseover="showTip(event, 'fs66', 276)" class="i">float</span>
        <span class="o">|&gt;</span> <span class="i">JNumber</span>

    <span class="c">// set up the main parser</span>
    <span class="i">optSign</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">intPart</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">opt</span> <span class="i">fractionPart</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">opt</span> <span class="i">exponentPart</span>
    <span class="o">|&gt;&gt;</span> <span class="i">convertToJNumber</span>
    <span class="o">&lt;?&gt;</span> <span class="s">&quot;number&quot;</span>   <span class="c">// add label</span>

<span class="c">// ======================================</span>
<span class="c">// Parsing a JArray</span>
<span class="c">// ======================================</span>

<span class="k">let</span> <span class="i">jArray</span> <span class="o">=</span> 

    <span class="c">// set up the &quot;primitive&quot; parsers        </span>
    <span class="k">let</span> <span class="i">left</span> <span class="o">=</span> <span class="i">pchar</span> <span class="s">&#39;[&#39;</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">spaces</span>
    <span class="k">let</span> <span class="i">right</span> <span class="o">=</span> <span class="i">pchar</span> <span class="s">&#39;]&#39;</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">spaces</span>
    <span class="k">let</span> <span class="i">comma</span> <span class="o">=</span> <span class="i">pchar</span> <span class="s">&#39;,&#39;</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">spaces</span>
    <span class="k">let</span> <span class="i">value</span> <span class="o">=</span> <span class="i">jValue</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">spaces</span>   

    <span class="c">// set up the list parser</span>
    <span class="k">let</span> <span class="i">values</span> <span class="o">=</span> <span class="i">sepBy1</span> <span class="i">value</span> <span class="i">comma</span>

    <span class="c">// set up the main parser</span>
    <span class="i">between</span> <span class="i">left</span> <span class="i">values</span> <span class="i">right</span> 
    <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs75', 277)" onmouseover="showTip(event, 'fs75', 277)" class="i">JArray</span>
    <span class="o">&lt;?&gt;</span> <span class="s">&quot;array&quot;</span>

<span class="c">// ======================================</span>
<span class="c">// Parsing a JObject</span>
<span class="c">// ======================================</span>


<span class="k">let</span> <span class="i">jObject</span> <span class="o">=</span> 

    <span class="c">// set up the &quot;primitive&quot; parsers        </span>
    <span class="k">let</span> <span class="i">left</span> <span class="o">=</span> <span class="i">pchar</span> <span class="s">&#39;{&#39;</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">spaces</span>
    <span class="k">let</span> <span class="i">right</span> <span class="o">=</span> <span class="i">pchar</span> <span class="s">&#39;}&#39;</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">spaces</span>
    <span class="k">let</span> <span class="i">colon</span> <span class="o">=</span> <span class="i">pchar</span> <span class="s">&#39;:&#39;</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">spaces</span>
    <span class="k">let</span> <span class="i">comma</span> <span class="o">=</span> <span class="i">pchar</span> <span class="s">&#39;,&#39;</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">spaces</span>
    <span class="k">let</span> <span class="i">key</span> <span class="o">=</span> <span class="i">quotedString</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">spaces</span> 
    <span class="k">let</span> <span class="i">value</span> <span class="o">=</span> <span class="i">jValue</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">spaces</span>

    <span class="c">// set up the list parser</span>
    <span class="k">let</span> <span class="i">keyValue</span> <span class="o">=</span> (<span class="i">key</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">colon</span>) <span class="o">.</span><span class="o">&gt;&gt;.</span> <span class="i">value</span>
    <span class="k">let</span> <span class="i">keyValues</span> <span class="o">=</span> <span class="i">sepBy1</span> <span class="i">keyValue</span> <span class="i">comma</span>

    <span class="c">// set up the main parser</span>
    <span class="i">between</span> <span class="i">left</span> <span class="i">keyValues</span> <span class="i">right</span> 
    <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs74', 278)" onmouseover="showTip(event, 'fs74', 278)" class="i">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs85', 279)" onmouseover="showTip(event, 'fs85', 279)" class="i">ofList</span>  <span class="c">// convert the list of keyValues into a Map</span>
    <span class="o">|&gt;&gt;</span> <span class="i">JObject</span>     <span class="c">// wrap in JObject     </span>
    <span class="o">&lt;?&gt;</span> <span class="s">&quot;object&quot;</span>    <span class="c">// add label</span>

<span class="c">// ======================================</span>
<span class="c">// Fixing up the jValue ref</span>
<span class="c">// ======================================</span>

<span class="c">// fixup the forward ref</span>
<span class="i">jValueRef</span> <span class="o">:=</span> <span class="i">choice</span> 
    [
    <span class="i">jNull</span> 
    <span class="i">jBool</span>
    <span class="i">jNumber</span>
    <span class="i">jString</span>
    <span class="i">jArray</span>
    <span class="i">jObject</span>
    ]
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">type Position =<br />&#160;&#160;{line: int;<br />&#160;&#160;&#160;column: int;}<br /><br />Full name: XXX.TextInput.Position</div>
<div class="tip" id="fs3">Position.line: int</div>
<div class="tip" id="fs4">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs5">Position.column: int</div>
<div class="tip" id="fs6">val initialPos : Position<br /><br />Full name: XXX.TextInput.initialPos<br /><em><br /><br />&#160;define an initial position</em></div>
<div class="tip" id="fs7">val incrCol : pos:Position -&gt; Position<br /><br />Full name: XXX.TextInput.incrCol<br /><em><br /><br />&#160;increment the column number</em></div>
<div class="tip" id="fs8">val pos : Position</div>
<div class="tip" id="fs9">val incrLine : pos:Position -&gt; Position<br /><br />Full name: XXX.TextInput.incrLine<br /><em><br /><br />&#160;increment the line number and set the column to 0</em></div>
<div class="tip" id="fs10">type InputState =<br />&#160;&#160;{lines: string [];<br />&#160;&#160;&#160;position: Position;}<br /><br />Full name: XXX.TextInput.InputState<br /><em><br /><br />&#160;Define the current input state</em></div>
<div class="tip" id="fs11">InputState.lines: string []</div>
<div class="tip" id="fs12">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs13">InputState.position: Position</div>
<div class="tip" id="fs14">val currentLine : inputState:InputState -&gt; string<br /><br />Full name: XXX.TextInput.currentLine</div>
<div class="tip" id="fs15">val inputState : InputState</div>
<div class="tip" id="fs16">val linePos : int</div>
<div class="tip" id="fs17">property Array.Length: int</div>
<div class="tip" id="fs18">val fromStr : str:string -&gt; InputState<br /><br />Full name: XXX.TextInput.fromStr<br /><em><br /><br />&#160;Create a new InputState from a string</em></div>
<div class="tip" id="fs19">val str : string</div>
<div class="tip" id="fs20">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs21">String.IsNullOrEmpty(value: string) : bool</div>
<div class="tip" id="fs22">val separators : string []</div>
<div class="tip" id="fs23">val lines : string []</div>
<div class="tip" id="fs24">String.Split([&lt;ParamArray&gt;] separator: char []) : string []<br />String.Split(separator: string [], options: StringSplitOptions) : string []<br />String.Split(separator: char [], options: StringSplitOptions) : string []<br />String.Split(separator: char [], count: int) : string []<br />String.Split(separator: string [], count: int, options: StringSplitOptions) : string []<br />String.Split(separator: char [], count: int, options: StringSplitOptions) : string []</div>
<div class="tip" id="fs25">type StringSplitOptions =<br />&#160;&#160;| None = 0<br />&#160;&#160;| RemoveEmptyEntries = 1<br /><br />Full name: System.StringSplitOptions</div>
<div class="tip" id="fs26">field StringSplitOptions.None = 0</div>
<div class="tip" id="fs27">val nextChar : input:InputState -&gt; InputState * char option<br /><br />Full name: XXX.TextInput.nextChar<br /><em><br /><br />&#160;Get the next character from the input, if any<br />&#160;else return None. Also return the updated InputState<br />&#160;Signature: InputState -&gt; InputState * char option </em></div>
<div class="tip" id="fs28">val input : InputState</div>
<div class="tip" id="fs29">val colPos : int</div>
<div class="tip" id="fs30">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs31">val currentLine : string</div>
<div class="tip" id="fs32">property String.Length: int</div>
<div class="tip" id="fs33">Multiple items<br />val char : char<br /><br />--------------------<br />type char = Char<br /><br />Full name: Microsoft.FSharp.Core.char</div>
<div class="tip" id="fs34">val newPos : Position</div>
<div class="tip" id="fs35">val newState : InputState</div>
<div class="tip" id="fs36">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs37">type Input = TextInput.InputState<br /><br />Full name: XXX.Input</div>
<div class="tip" id="fs38">module TextInput<br /><br />from XXX</div>
<div class="tip" id="fs39">type ParserLabel = string<br /><br />Full name: XXX.ParserLabel</div>
<div class="tip" id="fs40">type ParserError = string<br /><br />Full name: XXX.ParserError</div>
<div class="tip" id="fs41">type ParserPosition =<br />&#160;&#160;{currentLine: string;<br />&#160;&#160;&#160;line: int;<br />&#160;&#160;&#160;column: int;}<br /><br />Full name: XXX.ParserPosition<br /><em><br /><br />&#160;Stores information about the parser position for error messages</em></div>
<div class="tip" id="fs42">ParserPosition.currentLine: string</div>
<div class="tip" id="fs43">ParserPosition.line: int</div>
<div class="tip" id="fs44">ParserPosition.column: int</div>
<div class="tip" id="fs45">type Result&lt;&#39;a&gt; =<br />&#160;&#160;| Success of &#39;a<br />&#160;&#160;| Failure of ParserLabel * ParserError * ParserPosition<br /><br />Full name: XXX.Result&lt;_&gt;</div>
<div class="tip" id="fs46">union case Result.Success: &#39;a -&gt; Result&lt;&#39;a&gt;</div>
<div class="tip" id="fs47">Multiple items<br />union case Result.Failure: ParserLabel * ParserError * ParserPosition -&gt; Result&lt;&#39;a&gt;<br /><br />--------------------<br />active recognizer Failure: exn -&gt; string option<br /><br />Full name: Microsoft.FSharp.Core.Operators.( |Failure|_| )</div>
<div class="tip" id="fs48">type Parser&lt;&#39;a&gt; =<br />&#160;&#160;{parseFn: Input -&gt; Result&lt;&#39;a * Input&gt;;<br />&#160;&#160;&#160;label: ParserLabel;}<br /><br />Full name: XXX.Parser&lt;_&gt;<br /><em><br /><br />&#160;A Parser structure has a parsing function &amp; label</em></div>
<div class="tip" id="fs49">Parser.parseFn: Input -&gt; Result&lt;&#39;a * Input&gt;</div>
<div class="tip" id="fs50">Parser.label: ParserLabel</div>
<div class="tip" id="fs51">val fromStr : str:string -&gt; TextInput.InputState<br /><br />Full name: XXX.TextInput.fromStr<br /><em><br /><br />&#160;Create a new InputState from a string</em></div>
<div class="tip" id="fs52">val currentLine : inputState:TextInput.InputState -&gt; string<br /><br />Full name: XXX.TextInput.currentLine</div>
<div class="tip" id="fs53">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs54">union case Result.Failure: ParserLabel * ParserError * ParserPosition -&gt; Result&lt;&#39;a&gt;</div>
<div class="tip" id="fs55">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs56">val nextChar : input:TextInput.InputState -&gt; TextInput.InputState * char option<br /><br />Full name: XXX.TextInput.nextChar<br /><em><br /><br />&#160;Get the next character from the input, if any<br />&#160;else return None. Also return the updated InputState<br />&#160;Signature: InputState -&gt; InputState * char option </em></div>
<div class="tip" id="fs57">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs58">val reduce : reduction:(&#39;T -&gt; &#39;T -&gt; &#39;T) -&gt; list:&#39;T list -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.List.reduce</div>
<div class="tip" id="fs59">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs60">val toArray : list:&#39;T list -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.List.toArray</div>
<div class="tip" id="fs61">val ofSeq : source:seq&lt;&#39;T&gt; -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.ofSeq</div>
<div class="tip" id="fs62">type Char =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 1 overload<br />&#160;&#160;&#160;&#160;static val MaxValue : char<br />&#160;&#160;&#160;&#160;static val MinValue : char<br />&#160;&#160;&#160;&#160;static member ConvertFromUtf32 : utf32:int -&gt; string<br />&#160;&#160;&#160;&#160;static member ConvertToUtf32 : highSurrogate:char * lowSurrogate:char -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;static member GetNumericValue : c:char -&gt; float + 1 overload<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Char</div>
<div class="tip" id="fs63">Char.IsWhiteSpace(c: char) : bool<br />Char.IsWhiteSpace(s: string, index: int) : bool</div>
<div class="tip" id="fs64">Char.IsDigit(c: char) : bool<br />Char.IsDigit(s: string, index: int) : bool</div>
<div class="tip" id="fs65">val sign : value:&#39;T -&gt; int (requires member get_Sign)<br /><br />Full name: Microsoft.FSharp.Core.Operators.sign</div>
<div class="tip" id="fs66">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs67">type JValue =<br />&#160;&#160;| JString of string<br />&#160;&#160;| JNumber of float<br />&#160;&#160;| JBool of bool<br />&#160;&#160;| JNull<br />&#160;&#160;| JObject of Map&lt;string,JValue&gt;<br />&#160;&#160;| JArray of JValue list<br /><br />Full name: XXX.JValue</div>
<div class="tip" id="fs68">union case JValue.JString: string -&gt; JValue</div>
<div class="tip" id="fs69">union case JValue.JNumber: float -&gt; JValue</div>
<div class="tip" id="fs70">union case JValue.JBool: bool -&gt; JValue</div>
<div class="tip" id="fs71">type bool = Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs72">union case JValue.JNull: JValue</div>
<div class="tip" id="fs73">union case JValue.JObject: Map&lt;string,JValue&gt; -&gt; JValue</div>
<div class="tip" id="fs74">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member Remove : key:&#39;Key -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Map&lt;_,_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs75">union case JValue.JArray: JValue list -&gt; JValue</div>
<div class="tip" id="fs76">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs77">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs78">Multiple items<br />val ref : value:&#39;T -&gt; &#39;T ref<br /><br />Full name: Microsoft.FSharp.Core.Operators.ref<br /><br />--------------------<br />type &#39;T ref = Ref&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.ref&lt;_&gt;</div>
<div class="tip" id="fs79">type Int32 =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 3 overloads<br />&#160;&#160;&#160;&#160;static val MaxValue : int<br />&#160;&#160;&#160;&#160;static val MinValue : int<br />&#160;&#160;&#160;&#160;static member Parse : s:string -&gt; int + 3 overloads<br />&#160;&#160;&#160;&#160;static member TryParse : s:string * result:int -&gt; bool + 1 overload<br />&#160;&#160;end<br /><br />Full name: System.Int32</div>
<div class="tip" id="fs80">Int32.Parse(s: string) : int<br />Int32.Parse(s: string, provider: IFormatProvider) : int<br />Int32.Parse(s: string, style: Globalization.NumberStyles) : int<br />Int32.Parse(s: string, style: Globalization.NumberStyles, provider: IFormatProvider) : int</div>
<div class="tip" id="fs81">namespace System.Globalization</div>
<div class="tip" id="fs82">type NumberStyles =<br />&#160;&#160;| None = 0<br />&#160;&#160;| AllowLeadingWhite = 1<br />&#160;&#160;| AllowTrailingWhite = 2<br />&#160;&#160;| AllowLeadingSign = 4<br />&#160;&#160;| AllowTrailingSign = 8<br />&#160;&#160;| AllowParentheses = 16<br />&#160;&#160;| AllowDecimalPoint = 32<br />&#160;&#160;| AllowThousands = 64<br />&#160;&#160;| AllowExponent = 128<br />&#160;&#160;| AllowCurrencySymbol = 256<br />&#160;&#160;...<br /><br />Full name: System.Globalization.NumberStyles</div>
<div class="tip" id="fs83">field Globalization.NumberStyles.HexNumber = 515</div>
<div class="tip" id="fs84">Multiple items<br />val char : value:&#39;T -&gt; char (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.char<br /><br />--------------------<br />type char = Char<br /><br />Full name: Microsoft.FSharp.Core.char</div>
<div class="tip" id="fs85">val ofList : elements:(&#39;Key * &#39;T) list -&gt; Map&lt;&#39;Key,&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.ofList</div>

