<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
<span class="l">74: </span>
<span class="l">75: </span>
<span class="l">76: </span>
<span class="l">77: </span>
<span class="l">78: </span>
<span class="l">79: </span>
<span class="l">80: </span>
<span class="l">81: </span>
<span class="l">82: </span>
<span class="l">83: </span>
<span class="l">84: </span>
<span class="l">85: </span>
<span class="l">86: </span>
<span class="l">87: </span>
<span class="l">88: </span>
<span class="l">89: </span>
<span class="l">90: </span>
<span class="l">91: </span>
<span class="l">92: </span>
<span class="l">93: </span>
<span class="l">94: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// https://www.fewbutripe.com/2018/12/05/seemingly-impossible.html</span>

<span class="k">type</span> <span class="t">Bit</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">Zero</span> <span class="o">=</span> <span class="n">0</span>
    | <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">One</span> <span class="o">=</span> <span class="n">1</span>

<span class="c">/// An infinite sequence of bits.</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">BitSequence</span> <span class="o">=</span>
    {
        <span class="c">/// Answers the bit at the given index. Article calls this &quot;atIndex&quot;.</span>
        <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">Item</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">uint32</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">Bit</span>
    }

[&lt;<span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="t">AutoOpen</span>&gt;]
[&lt;<span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="t">CompilationRepresentation</span> (<span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="t">CompilationRepresentationFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="i">ModuleSuffix</span>)&gt;]
<span class="k">module</span> <span onmouseout="hideTip(event, 'fs3', 11)" onmouseover="showTip(event, 'fs3', 11)" class="t">BitSequence</span> <span class="o">=</span>

    <span class="c">/// Creates a bit sequence with the given lookup function.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="f">create</span> <span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="f">f</span> <span class="o">=</span> { <span class="i">Item</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="f">f</span> }

    <span class="c">/// Dumps the beginning of the given sequence to the console.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="f">dump</span> (<span onmouseout="hideTip(event, 'fs14', 16)" onmouseover="showTip(event, 'fs14', 16)" class="i">seq</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 17)" onmouseover="showTip(event, 'fs3', 17)" class="t">BitSequence</span>) <span class="o">=</span>
        [<span class="n">0u</span> <span class="o">..</span> <span class="n">10u</span>]
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 18)" onmouseover="showTip(event, 'fs15', 18)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 19)" onmouseover="showTip(event, 'fs16', 19)" class="f">iter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs17', 20)" onmouseover="showTip(event, 'fs17', 20)" class="i">i</span> <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs18', 21)" onmouseover="showTip(event, 'fs18', 21)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%d</span><span class="s">: </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="i">i</span> <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="i">seq</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="i">i</span>])

    <span class="c">/// Prepends the given bit to the given lazy sequence.</span>
    <span class="k">let</span> (<span class="o">++</span>) <span onmouseout="hideTip(event, 'fs19', 25)" onmouseover="showTip(event, 'fs19', 25)" class="i">bit</span> (<span onmouseout="hideTip(event, 'fs20', 26)" onmouseover="showTip(event, 'fs20', 26)" class="i">lseq</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs21', 27)" onmouseover="showTip(event, 'fs21', 27)" class="t">Lazy</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs3', 28)" onmouseover="showTip(event, 'fs3', 28)" class="t">BitSequence</span><span class="o">&gt;</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs11', 29)" onmouseover="showTip(event, 'fs11', 29)" class="f">create</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs17', 30)" onmouseover="showTip(event, 'fs17', 30)" class="i">i</span> <span class="k">-&gt;</span>
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs17', 31)" onmouseover="showTip(event, 'fs17', 31)" class="i">i</span> <span class="o">=</span> <span class="n">0u</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs19', 32)" onmouseover="showTip(event, 'fs19', 32)" class="i">bit</span>
            <span class="k">else</span> <span onmouseout="hideTip(event, 'fs20', 33)" onmouseover="showTip(event, 'fs20', 33)" class="i">lseq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 34)" onmouseover="showTip(event, 'fs22', 34)" class="i">Value</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs17', 35)" onmouseover="showTip(event, 'fs17', 35)" class="i">i</span> <span class="o">-</span> <span class="n">1u</span>])   <span class="c">// don&#39;t reify the given sequence until we have to</span>

    <span class="c">/// Finds a sequence for which the given predicate is true.</span>
    <span class="c">/// Warning: answers garbage sequence if no such sequence exists.</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs23', 36)" onmouseover="showTip(event, 'fs23', 36)" class="f">find</span> (<span onmouseout="hideTip(event, 'fs24', 37)" onmouseover="showTip(event, 'fs24', 37)" class="f">pred</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 38)" onmouseover="showTip(event, 'fs3', 38)" class="t">BitSequence</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 39)" onmouseover="showTip(event, 'fs25', 39)" class="t">bool</span>) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 40)" onmouseover="showTip(event, 'fs26', 40)" class="f">zeroPred</span> <span onmouseout="hideTip(event, 'fs14', 41)" onmouseover="showTip(event, 'fs14', 41)" class="i">seq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 42)" onmouseover="showTip(event, 'fs24', 42)" class="f">pred</span> (<span onmouseout="hideTip(event, 'fs6', 43)" onmouseover="showTip(event, 'fs6', 43)" class="t">Bit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs1', 44)" onmouseover="showTip(event, 'fs1', 44)" class="i">Zero</span> <span class="o">++</span> <span class="k">lazy</span> <span onmouseout="hideTip(event, 'fs14', 45)" onmouseover="showTip(event, 'fs14', 45)" class="i">seq</span>)
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs27', 46)" onmouseover="showTip(event, 'fs27', 46)" class="f">exists</span> <span onmouseout="hideTip(event, 'fs26', 47)" onmouseover="showTip(event, 'fs26', 47)" class="f">zeroPred</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs6', 48)" onmouseover="showTip(event, 'fs6', 48)" class="t">Bit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs1', 49)" onmouseover="showTip(event, 'fs1', 49)" class="i">Zero</span> <span class="o">++</span> <span class="k">lazy</span> (<span onmouseout="hideTip(event, 'fs23', 50)" onmouseover="showTip(event, 'fs23', 50)" class="f">find</span> <span onmouseout="hideTip(event, 'fs26', 51)" onmouseover="showTip(event, 'fs26', 51)" class="f">zeroPred</span>)
        <span class="k">else</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 52)" onmouseover="showTip(event, 'fs28', 52)" class="f">onePred</span> <span onmouseout="hideTip(event, 'fs14', 53)" onmouseover="showTip(event, 'fs14', 53)" class="i">seq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 54)" onmouseover="showTip(event, 'fs24', 54)" class="f">pred</span> (<span onmouseout="hideTip(event, 'fs6', 55)" onmouseover="showTip(event, 'fs6', 55)" class="t">Bit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 56)" onmouseover="showTip(event, 'fs2', 56)" class="i">One</span> <span class="o">++</span> <span class="k">lazy</span> <span onmouseout="hideTip(event, 'fs14', 57)" onmouseover="showTip(event, 'fs14', 57)" class="i">seq</span>)
            <span onmouseout="hideTip(event, 'fs6', 58)" onmouseover="showTip(event, 'fs6', 58)" class="t">Bit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 59)" onmouseover="showTip(event, 'fs2', 59)" class="i">One</span> <span class="o">++</span> <span class="k">lazy</span> (<span onmouseout="hideTip(event, 'fs23', 60)" onmouseover="showTip(event, 'fs23', 60)" class="f">find</span> <span onmouseout="hideTip(event, 'fs28', 61)" onmouseover="showTip(event, 'fs28', 61)" class="f">onePred</span>)

    <span class="c">/// Is there a sequence for which the given predicate is true? Article calls this &quot;anySatisfy&quot;.</span>
    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs27', 62)" onmouseover="showTip(event, 'fs27', 62)" class="f">exists</span> <span onmouseout="hideTip(event, 'fs24', 63)" onmouseover="showTip(event, 'fs24', 63)" class="f">pred</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 64)" onmouseover="showTip(event, 'fs20', 64)" class="i">lseq</span> <span class="o">=</span> <span class="k">lazy</span> (<span onmouseout="hideTip(event, 'fs23', 65)" onmouseover="showTip(event, 'fs23', 65)" class="f">find</span> <span onmouseout="hideTip(event, 'fs24', 66)" onmouseover="showTip(event, 'fs24', 66)" class="f">pred</span>)
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 67)" onmouseover="showTip(event, 'fs14', 67)" class="i">seq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 68)" onmouseover="showTip(event, 'fs11', 68)" class="f">create</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs17', 69)" onmouseover="showTip(event, 'fs17', 69)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 70)" onmouseover="showTip(event, 'fs20', 70)" class="i">lseq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 71)" onmouseover="showTip(event, 'fs22', 71)" class="i">Value</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs17', 72)" onmouseover="showTip(event, 'fs17', 72)" class="i">i</span>])
        <span onmouseout="hideTip(event, 'fs24', 73)" onmouseover="showTip(event, 'fs24', 73)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs14', 74)" onmouseover="showTip(event, 'fs14', 74)" class="i">seq</span>

    <span class="c">/// Do all sequences satisfy the given predicate? Article calls this &quot;allSatisfy&quot;.</span>
    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs29', 75)" onmouseover="showTip(event, 'fs29', 75)" class="f">forall</span> <span onmouseout="hideTip(event, 'fs24', 76)" onmouseover="showTip(event, 'fs24', 76)" class="f">pred</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs24', 77)" onmouseover="showTip(event, 'fs24', 77)" class="f">pred</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs30', 78)" onmouseover="showTip(event, 'fs30', 78)" class="f">not</span>
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs27', 79)" onmouseover="showTip(event, 'fs27', 79)" class="f">exists</span>
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 80)" onmouseover="showTip(event, 'fs30', 80)" class="f">not</span>

    <span class="c">/// Equality of functions that have BitSequence as their domains.</span>
    <span class="k">let</span> (<span class="o">==</span>) (<span onmouseout="hideTip(event, 'fs31', 81)" onmouseover="showTip(event, 'fs31', 81)" class="f">f1</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 82)" onmouseover="showTip(event, 'fs3', 82)" class="t">BitSequence</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">a</span>) (<span onmouseout="hideTip(event, 'fs32', 83)" onmouseover="showTip(event, 'fs32', 83)" class="f">f2</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 84)" onmouseover="showTip(event, 'fs3', 84)" class="t">BitSequence</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">a</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs29', 85)" onmouseover="showTip(event, 'fs29', 85)" class="f">forall</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs14', 86)" onmouseover="showTip(event, 'fs14', 86)" class="i">seq</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 87)" onmouseover="showTip(event, 'fs31', 87)" class="f">f1</span> <span onmouseout="hideTip(event, 'fs14', 88)" onmouseover="showTip(event, 'fs14', 88)" class="i">seq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 89)" onmouseover="showTip(event, 'fs32', 89)" class="f">f2</span> <span onmouseout="hideTip(event, 'fs14', 90)" onmouseover="showTip(event, 'fs14', 90)" class="i">seq</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 91)" onmouseover="showTip(event, 'fs33', 91)" class="f">oneOnFirstFiveEvens</span> () <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 92)" onmouseover="showTip(event, 'fs14', 92)" class="i">seq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 93)" onmouseover="showTip(event, 'fs34', 93)" class="t">BitSequence</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 94)" onmouseover="showTip(event, 'fs23', 94)" class="f">find</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs14', 95)" onmouseover="showTip(event, 'fs14', 95)" class="i">seq</span> <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs14', 96)" onmouseover="showTip(event, 'fs14', 96)" class="i">seq</span><span class="o">.</span>[<span class="n">0u</span>] <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 97)" onmouseover="showTip(event, 'fs6', 97)" class="t">Bit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 98)" onmouseover="showTip(event, 'fs2', 98)" class="i">One</span>
            <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs14', 99)" onmouseover="showTip(event, 'fs14', 99)" class="i">seq</span><span class="o">.</span>[<span class="n">2u</span>] <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 100)" onmouseover="showTip(event, 'fs6', 100)" class="t">Bit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 101)" onmouseover="showTip(event, 'fs2', 101)" class="i">One</span>
            <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs14', 102)" onmouseover="showTip(event, 'fs14', 102)" class="i">seq</span><span class="o">.</span>[<span class="n">4u</span>] <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 103)" onmouseover="showTip(event, 'fs6', 103)" class="t">Bit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 104)" onmouseover="showTip(event, 'fs2', 104)" class="i">One</span>
            <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs14', 105)" onmouseover="showTip(event, 'fs14', 105)" class="i">seq</span><span class="o">.</span>[<span class="n">6u</span>] <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 106)" onmouseover="showTip(event, 'fs6', 106)" class="t">Bit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 107)" onmouseover="showTip(event, 'fs2', 107)" class="i">One</span>
            <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs14', 108)" onmouseover="showTip(event, 'fs14', 108)" class="i">seq</span><span class="o">.</span>[<span class="n">8u</span>] <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 109)" onmouseover="showTip(event, 'fs6', 109)" class="t">Bit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 110)" onmouseover="showTip(event, 'fs2', 110)" class="i">One</span>)
    <span onmouseout="hideTip(event, 'fs34', 111)" onmouseover="showTip(event, 'fs34', 111)" class="t">BitSequence</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 112)" onmouseover="showTip(event, 'fs13', 112)" class="f">dump</span> <span onmouseout="hideTip(event, 'fs14', 113)" onmouseover="showTip(event, 'fs14', 113)" class="i">seq</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 114)" onmouseover="showTip(event, 'fs35', 114)" class="f">equality</span> () <span class="o">=</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 115)" onmouseover="showTip(event, 'fs36', 115)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs14', 116)" onmouseover="showTip(event, 'fs14', 116)" class="i">seq</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs34', 117)" onmouseover="showTip(event, 'fs34', 117)" class="t">BitSequence</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs37', 118)" onmouseover="showTip(event, 'fs37', 118)" class="f">int</span> <span onmouseout="hideTip(event, 'fs14', 119)" onmouseover="showTip(event, 'fs14', 119)" class="i">seq</span><span class="o">.</span>[<span class="n">1u</span>] <span class="o">*</span> <span onmouseout="hideTip(event, 'fs37', 120)" onmouseover="showTip(event, 'fs37', 120)" class="f">int</span> <span onmouseout="hideTip(event, 'fs14', 121)" onmouseover="showTip(event, 'fs14', 121)" class="i">seq</span><span class="o">.</span>[<span class="n">2u</span>]
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 122)" onmouseover="showTip(event, 'fs38', 122)" class="f">g</span> (<span onmouseout="hideTip(event, 'fs14', 123)" onmouseover="showTip(event, 'fs14', 123)" class="i">seq</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs34', 124)" onmouseover="showTip(event, 'fs34', 124)" class="t">BitSequence</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs37', 125)" onmouseover="showTip(event, 'fs37', 125)" class="f">int</span> <span onmouseout="hideTip(event, 'fs14', 126)" onmouseover="showTip(event, 'fs14', 126)" class="i">seq</span><span class="o">.</span>[<span class="n">1u</span>] <span class="o">+</span> <span onmouseout="hideTip(event, 'fs37', 127)" onmouseover="showTip(event, 'fs37', 127)" class="f">int</span> <span onmouseout="hideTip(event, 'fs14', 128)" onmouseover="showTip(event, 'fs14', 128)" class="i">seq</span><span class="o">.</span>[<span class="n">2u</span>]
    <span onmouseout="hideTip(event, 'fs18', 129)" onmouseover="showTip(event, 'fs18', 129)" class="f">printfn</span> <span class="s">&quot;f = f: </span><span class="pf">%A</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs36', 130)" onmouseover="showTip(event, 'fs36', 130)" class="f">f</span> <span class="o">==</span> <span onmouseout="hideTip(event, 'fs36', 131)" onmouseover="showTip(event, 'fs36', 131)" class="f">f</span>)
    <span onmouseout="hideTip(event, 'fs18', 132)" onmouseover="showTip(event, 'fs18', 132)" class="f">printfn</span> <span class="s">&quot;g = g: </span><span class="pf">%A</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs38', 133)" onmouseover="showTip(event, 'fs38', 133)" class="f">g</span> <span class="o">==</span> <span onmouseout="hideTip(event, 'fs38', 134)" onmouseover="showTip(event, 'fs38', 134)" class="f">g</span>)
    <span onmouseout="hideTip(event, 'fs18', 135)" onmouseover="showTip(event, 'fs18', 135)" class="f">printfn</span> <span class="s">&quot;f = g: </span><span class="pf">%A</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs36', 136)" onmouseover="showTip(event, 'fs36', 136)" class="f">f</span> <span class="o">==</span> <span onmouseout="hideTip(event, 'fs38', 137)" onmouseover="showTip(event, 'fs38', 137)" class="f">g</span>)

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 138)" onmouseover="showTip(event, 'fs39', 138)" class="f">h</span> (<span onmouseout="hideTip(event, 'fs14', 139)" onmouseover="showTip(event, 'fs14', 139)" class="i">seq</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs34', 140)" onmouseover="showTip(event, 'fs34', 140)" class="t">BitSequence</span>) <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs14', 141)" onmouseover="showTip(event, 'fs14', 141)" class="i">seq</span><span class="o">.</span>[<span class="n">1u</span>], <span onmouseout="hideTip(event, 'fs14', 142)" onmouseover="showTip(event, 'fs14', 142)" class="i">seq</span><span class="o">.</span>[<span class="n">2u</span>] <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs6', 143)" onmouseover="showTip(event, 'fs6', 143)" class="t">Bit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 144)" onmouseover="showTip(event, 'fs2', 144)" class="i">One</span>, <span onmouseout="hideTip(event, 'fs6', 145)" onmouseover="showTip(event, 'fs6', 145)" class="t">Bit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 146)" onmouseover="showTip(event, 'fs2', 146)" class="i">One</span> <span class="k">-&gt;</span> <span class="n">1</span>
            | _ <span class="k">-&gt;</span> <span class="n">0</span>
    <span onmouseout="hideTip(event, 'fs18', 147)" onmouseover="showTip(event, 'fs18', 147)" class="f">printfn</span> <span class="s">&quot;f = h: </span><span class="pf">%A</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs36', 148)" onmouseover="showTip(event, 'fs36', 148)" class="f">f</span> <span class="o">==</span> <span onmouseout="hideTip(event, 'fs39', 149)" onmouseover="showTip(event, 'fs39', 149)" class="f">h</span>)
    <span onmouseout="hideTip(event, 'fs18', 150)" onmouseover="showTip(event, 'fs18', 150)" class="f">printfn</span> <span class="s">&quot;g = h: </span><span class="pf">%A</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs38', 151)" onmouseover="showTip(event, 'fs38', 151)" class="f">g</span> <span class="o">==</span> <span onmouseout="hideTip(event, 'fs39', 152)" onmouseover="showTip(event, 'fs39', 152)" class="f">h</span>)

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 153)" onmouseover="showTip(event, 'fs40', 153)" class="f">k</span> (<span onmouseout="hideTip(event, 'fs14', 154)" onmouseover="showTip(event, 'fs14', 154)" class="i">seq</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs34', 155)" onmouseover="showTip(event, 'fs34', 155)" class="t">BitSequence</span>) <span class="o">=</span>
        ((<span onmouseout="hideTip(event, 'fs37', 156)" onmouseover="showTip(event, 'fs37', 156)" class="f">int</span> <span onmouseout="hideTip(event, 'fs14', 157)" onmouseover="showTip(event, 'fs14', 157)" class="i">seq</span><span class="o">.</span>[<span class="n">1u</span>] <span class="o">+</span> <span onmouseout="hideTip(event, 'fs37', 158)" onmouseover="showTip(event, 'fs37', 158)" class="f">int</span> <span onmouseout="hideTip(event, 'fs14', 159)" onmouseover="showTip(event, 'fs14', 159)" class="i">seq</span><span class="o">.</span>[<span class="n">2u</span>] <span class="o">+</span> <span class="n">908</span>) <span class="o">%</span> <span class="n">6</span>) <span class="o">/</span> <span class="n">4</span>
    <span onmouseout="hideTip(event, 'fs18', 160)" onmouseover="showTip(event, 'fs18', 160)" class="f">printfn</span> <span class="s">&quot;f = k: </span><span class="pf">%A</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs36', 161)" onmouseover="showTip(event, 'fs36', 161)" class="f">f</span> <span class="o">==</span> <span onmouseout="hideTip(event, 'fs40', 162)" onmouseover="showTip(event, 'fs40', 162)" class="f">k</span>)
    <span onmouseout="hideTip(event, 'fs18', 163)" onmouseover="showTip(event, 'fs18', 163)" class="f">printfn</span> <span class="s">&quot;g = k: </span><span class="pf">%A</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs38', 164)" onmouseover="showTip(event, 'fs38', 164)" class="f">g</span> <span class="o">==</span> <span onmouseout="hideTip(event, 'fs40', 165)" onmouseover="showTip(event, 'fs40', 165)" class="f">k</span>)
    <span onmouseout="hideTip(event, 'fs18', 166)" onmouseover="showTip(event, 'fs18', 166)" class="f">printfn</span> <span class="s">&quot;h = k: </span><span class="pf">%A</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs39', 167)" onmouseover="showTip(event, 'fs39', 167)" class="f">h</span> <span class="o">==</span> <span onmouseout="hideTip(event, 'fs40', 168)" onmouseover="showTip(event, 'fs40', 168)" class="f">k</span>)

[&lt;<span onmouseout="hideTip(event, 'fs41', 169)" onmouseover="showTip(event, 'fs41', 169)" class="t">EntryPoint</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 170)" onmouseover="showTip(event, 'fs42', 170)" class="f">main</span> <span onmouseout="hideTip(event, 'fs43', 171)" onmouseover="showTip(event, 'fs43', 171)" class="i">argv</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs33', 172)" onmouseover="showTip(event, 'fs33', 172)" class="f">oneOnFirstFiveEvens</span> ()
    <span onmouseout="hideTip(event, 'fs18', 173)" onmouseover="showTip(event, 'fs18', 173)" class="f">printfn</span> <span class="s">&quot;&quot;</span>
    <span onmouseout="hideTip(event, 'fs35', 174)" onmouseover="showTip(event, 'fs35', 174)" class="f">equality</span> ()
    <span class="n">0</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Bit.Zero: Bit = 0</div>
<div class="tip" id="fs2">Bit.One: Bit = 1</div>
<div class="tip" id="fs3">type BitSequence =<br />&#160;&#160;{Item: uint32 -&gt; Bit;}<br /><br />Full name: Script.BitSequence<br /><em><br /><br />&#160;An infinite sequence of bits.</em></div>
<div class="tip" id="fs4">BitSequence.Item: uint32 -&gt; Bit<br /><em><br /><br />&#160;Answers the bit at the given index. Article calls this &quot;atIndex&quot;.</em></div>
<div class="tip" id="fs5">Multiple items<br />val uint32 : value:&#39;T -&gt; uint32 (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.uint32<br /><br />--------------------<br />type uint32 = System.UInt32<br /><br />Full name: Microsoft.FSharp.Core.uint32</div>
<div class="tip" id="fs6">type Bit =<br />&#160;&#160;|  Zero  =  0<br />&#160;&#160;|  One  =  1<br /><br />Full name: Script.Bit</div>
<div class="tip" id="fs7">Multiple items<br />type AutoOpenAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AutoOpenAttribute<br />&#160;&#160;new : path:string -&gt; AutoOpenAttribute<br />&#160;&#160;member Path : string<br /><br />Full name: Microsoft.FSharp.Core.AutoOpenAttribute<br /><br />--------------------<br />new : unit -&gt; AutoOpenAttribute<br />new : path:string -&gt; AutoOpenAttribute</div>
<div class="tip" id="fs8">Multiple items<br />type CompilationRepresentationAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : flags:CompilationRepresentationFlags -&gt; CompilationRepresentationAttribute<br />&#160;&#160;member Flags : CompilationRepresentationFlags<br /><br />Full name: Microsoft.FSharp.Core.CompilationRepresentationAttribute<br /><br />--------------------<br />new : flags:CompilationRepresentationFlags -&gt; CompilationRepresentationAttribute</div>
<div class="tip" id="fs9">type CompilationRepresentationFlags =<br />&#160;&#160;|  None  =  0<br />&#160;&#160;|  Static  =  1<br />&#160;&#160;|  Instance  =  2<br />&#160;&#160;|  ModuleSuffix  =  4<br />&#160;&#160;|  UseNullAsTrueValue  =  8<br />&#160;&#160;|  Event  =  16<br /><br />Full name: Microsoft.FSharp.Core.CompilationRepresentationFlags</div>
<div class="tip" id="fs10">CompilationRepresentationFlags.ModuleSuffix: CompilationRepresentationFlags = 4</div>
<div class="tip" id="fs11">val create : f:(uint32 -&gt; Bit) -&gt; BitSequence<br /><br />Full name: Script.BitSequenceModule.create<br /><em><br /><br />&#160;Creates a bit sequence with the given lookup function.</em></div>
<div class="tip" id="fs12">val f : (uint32 -&gt; Bit)</div>
<div class="tip" id="fs13">val dump : seq:BitSequence -&gt; unit<br /><br />Full name: Script.BitSequenceModule.dump<br /><em><br /><br />&#160;Dumps the beginning of the given sequence to the console.</em></div>
<div class="tip" id="fs14">Multiple items<br />val seq : BitSequence<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = System.Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs15">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs16">val iter : action:(&#39;T -&gt; unit) -&gt; source:seq&lt;&#39;T&gt; -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.Seq.iter</div>
<div class="tip" id="fs17">val i : uint32</div>
<div class="tip" id="fs18">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs19">val bit : Bit</div>
<div class="tip" id="fs20">val lseq : Lazy&lt;BitSequence&gt;</div>
<div class="tip" id="fs21">Multiple items<br />active recognizer Lazy: Lazy&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.( |Lazy| )<br /><br />--------------------<br />type Lazy&lt;&#39;T&gt; = System.Lazy&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Lazy&lt;_&gt;</div>
<div class="tip" id="fs22">property System.Lazy.Value: BitSequence</div>
<div class="tip" id="fs23">val find : pred:(BitSequence -&gt; bool) -&gt; BitSequence<br /><br />Full name: Script.BitSequenceModule.find<br /><em><br /><br />&#160;Finds a sequence for which the given predicate is true.<br />&#160;Warning: answers garbage sequence if no such sequence exists.</em></div>
<div class="tip" id="fs24">val pred : (BitSequence -&gt; bool)</div>
<div class="tip" id="fs25">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs26">val zeroPred : (BitSequence -&gt; bool)</div>
<div class="tip" id="fs27">val exists : pred:(BitSequence -&gt; bool) -&gt; bool<br /><br />Full name: Script.BitSequenceModule.exists<br /><em><br /><br />&#160;Is there a sequence for which the given predicate is true? Article calls this &quot;anySatisfy&quot;.</em></div>
<div class="tip" id="fs28">val onePred : (BitSequence -&gt; bool)</div>
<div class="tip" id="fs29">val forall : pred:(BitSequence -&gt; bool) -&gt; bool<br /><br />Full name: Script.BitSequenceModule.forall<br /><em><br /><br />&#160;Do all sequences satisfy the given predicate? Article calls this &quot;allSatisfy&quot;.</em></div>
<div class="tip" id="fs30">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs31">val f1 : (BitSequence -&gt; &#39;a) (requires equality)</div>
<div class="tip" id="fs32">val f2 : (BitSequence -&gt; &#39;a) (requires equality)</div>
<div class="tip" id="fs33">val oneOnFirstFiveEvens : unit -&gt; unit<br /><br />Full name: Script.oneOnFirstFiveEvens</div>
<div class="tip" id="fs34">Multiple items<br />module BitSequence<br /><br />from Script<br /><br />--------------------<br />type BitSequence =<br />&#160;&#160;{Item: uint32 -&gt; Bit;}<br /><br />Full name: Script.BitSequence<br /><em><br /><br />&#160;An infinite sequence of bits.</em></div>
<div class="tip" id="fs35">val equality : unit -&gt; unit<br /><br />Full name: Script.equality</div>
<div class="tip" id="fs36">val f : (BitSequence -&gt; int)</div>
<div class="tip" id="fs37">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs38">val g : (BitSequence -&gt; int)</div>
<div class="tip" id="fs39">val h : (BitSequence -&gt; int)</div>
<div class="tip" id="fs40">val k : (BitSequence -&gt; int)</div>
<div class="tip" id="fs41">Multiple items<br />type EntryPointAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; EntryPointAttribute<br /><br />Full name: Microsoft.FSharp.Core.EntryPointAttribute<br /><br />--------------------<br />new : unit -&gt; EntryPointAttribute</div>
<div class="tip" id="fs42">val main : argv:string [] -&gt; int<br /><br />Full name: Script.main</div>
<div class="tip" id="fs43">val argv : string []</div>

