<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Threading</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">Threading</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">Tasks</span>

<span class="c">/// A standard representation of an awaitable action, such as an F# Async Workflow or a .NET Task</span>
[&lt;<span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="t">Struct</span>&gt;]
<span class="k">type</span> <span class="i">Awaitable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">=</span>
| <span class="i">AsyncWorkflow</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">async</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="i">Async</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>
| <span class="i">DotNetTask</span> <span class="k">of</span> <span class="i">task</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="i">Task</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>

[&lt;<span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="t">CompilationRepresentation</span>(<span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="t">CompilationRepresentationFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="i">ModuleSuffix</span>)&gt;]
<span class="k">module</span> <span class="t">Awaitable</span> <span class="o">=</span>
    <span class="k">let</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="f">await</span> <span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="i">f</span> <span onmouseout="hideTip(event, 'fs13', 16)" onmouseover="showTip(event, 'fs13', 16)" class="i">g</span> <span class="o">=</span> <span class="k">function</span>
    | <span class="i">AsyncWorkflow</span> <span class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="i">f</span> <span class="i">a</span>
    | <span class="i">DotNetTask</span> <span class="i">t</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="i">g</span> <span class="i">t</span>

    <span class="c">/// Convert an F# Async Workflow to an Awaitable</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="i">ofAsync</span> <span class="o">=</span> <span class="i">AsyncWorkflow</span>

    <span class="c">/// Convert a .NET Event into an Awaitable</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="f">ofEvent</span> <span onmouseout="hideTip(event, 'fs16', 21)" onmouseover="showTip(event, 'fs16', 21)" class="i">event</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 22)" onmouseover="showTip(event, 'fs6', 22)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 23)" onmouseover="showTip(event, 'fs17', 23)" class="f">AwaitEvent</span> <span onmouseout="hideTip(event, 'fs16', 24)" onmouseover="showTip(event, 'fs16', 24)" class="i">event</span> <span class="o">|&gt;</span> <span class="i">AsyncWorkflow</span>

    <span class="c">/// Convert a .NET Task&lt;T&gt; into an Awaitable</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="i">ofTask</span> <span class="o">=</span> <span class="i">DotNetTask</span>

    <span class="c">/// Convert a .NET Task into an Awaitable</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 26)" onmouseover="showTip(event, 'fs19', 26)" class="f">ofUnitTask</span> (<span onmouseout="hideTip(event, 'fs20', 27)" onmouseover="showTip(event, 'fs20', 27)" class="i">t</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 28)" onmouseover="showTip(event, 'fs7', 28)" class="t">Task</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs20', 29)" onmouseover="showTip(event, 'fs20', 29)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 30)" onmouseover="showTip(event, 'fs21', 30)" class="f">ContinueWith</span>(<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs22', 31)" onmouseover="showTip(event, 'fs22', 31)" class="i">task</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 32)" onmouseover="showTip(event, 'fs7', 32)" class="t">Task</span>) <span class="k">-&gt;</span> 
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 33)" onmouseover="showTip(event, 'fs23', 33)" class="i">tcs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 34)" onmouseover="showTip(event, 'fs24', 34)" class="t">TaskCompletionSource</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs25', 35)" onmouseover="showTip(event, 'fs25', 35)" class="t">unit</span><span class="o">&gt;</span>()
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs22', 36)" onmouseover="showTip(event, 'fs22', 36)" class="i">task</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 37)" onmouseover="showTip(event, 'fs26', 37)" class="i">Status</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 38)" onmouseover="showTip(event, 'fs27', 38)" class="t">TaskStatus</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 39)" onmouseover="showTip(event, 'fs28', 39)" class="i">Canceled</span>
            <span class="k">then</span> <span onmouseout="hideTip(event, 'fs23', 40)" onmouseover="showTip(event, 'fs23', 40)" class="i">tcs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 41)" onmouseover="showTip(event, 'fs29', 41)" class="f">SetCanceled</span>()
            <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs22', 42)" onmouseover="showTip(event, 'fs22', 42)" class="i">task</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 43)" onmouseover="showTip(event, 'fs26', 43)" class="i">Status</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 44)" onmouseover="showTip(event, 'fs27', 44)" class="t">TaskStatus</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 45)" onmouseover="showTip(event, 'fs30', 45)" class="i">Faulted</span>
            <span class="k">then</span> <span onmouseout="hideTip(event, 'fs23', 46)" onmouseover="showTip(event, 'fs23', 46)" class="i">tcs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 47)" onmouseover="showTip(event, 'fs31', 47)" class="f">SetException</span>(<span onmouseout="hideTip(event, 'fs22', 48)" onmouseover="showTip(event, 'fs22', 48)" class="i">task</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 49)" onmouseover="showTip(event, 'fs32', 49)" class="i">Exception</span>)
            <span class="k">else</span> <span onmouseout="hideTip(event, 'fs23', 50)" onmouseover="showTip(event, 'fs23', 50)" class="i">tcs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 51)" onmouseover="showTip(event, 'fs33', 51)" class="f">SetResult</span>()
            <span onmouseout="hideTip(event, 'fs23', 52)" onmouseover="showTip(event, 'fs23', 52)" class="i">tcs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 53)" onmouseover="showTip(event, 'fs34', 53)" class="i">Task</span>)<span class="o">.</span><span class="f">Unwrap</span>() <span class="o">|&gt;</span> <span class="i">DotNetTask</span>

    <span class="c">/// Start an Awaitable, if it is not already running</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 54)" onmouseover="showTip(event, 'fs35', 54)" class="f">start</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 55)" onmouseover="showTip(event, 'fs11', 55)" class="f">await</span> <span onmouseout="hideTip(event, 'fs6', 56)" onmouseover="showTip(event, 'fs6', 56)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 57)" onmouseover="showTip(event, 'fs36', 57)" class="f">Start</span> <span class="o">&lt;|</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs37', 58)" onmouseover="showTip(event, 'fs37', 58)" class="i">t</span> <span class="k">-&gt;</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs37', 59)" onmouseover="showTip(event, 'fs37', 59)" class="i">t</span><span class="o">.</span><span class="i">Status</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 60)" onmouseover="showTip(event, 'fs27', 60)" class="t">TaskStatus</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 61)" onmouseover="showTip(event, 'fs38', 61)" class="i">Created</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs37', 62)" onmouseover="showTip(event, 'fs37', 62)" class="i">t</span><span class="o">.</span><span class="i">Start</span>()

    <span class="c">/// Create an Awaitable that will sleep for the specified amount of time</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 63)" onmouseover="showTip(event, 'fs39', 63)" class="f">sleep</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 64)" onmouseover="showTip(event, 'fs6', 64)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 65)" onmouseover="showTip(event, 'fs40', 65)" class="f">Sleep</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span class="i">AsyncWorkflow</span>
    
    <span class="c">/// Convert an Awaitable into an F# Async Workflow</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 66)" onmouseover="showTip(event, 'fs41', 66)" class="f">toAsync</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">:</span> <span class="i">Awaitable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 67)" onmouseover="showTip(event, 'fs6', 67)" class="t">Async</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 68)" onmouseover="showTip(event, 'fs11', 68)" class="f">await</span> <span onmouseout="hideTip(event, 'fs42', 69)" onmouseover="showTip(event, 'fs42', 69)" class="f">id</span> <span onmouseout="hideTip(event, 'fs6', 70)" onmouseover="showTip(event, 'fs6', 70)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 71)" onmouseover="showTip(event, 'fs43', 71)" class="f">AwaitTask</span>

    <span class="c">/// Convert an Awaitable into a .NET Task&lt;T&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 72)" onmouseover="showTip(event, 'fs44', 72)" class="f">toTask</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">:</span> <span class="i">Awaitable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 73)" onmouseover="showTip(event, 'fs7', 73)" class="t">Task</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>  <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 74)" onmouseover="showTip(event, 'fs11', 74)" class="f">await</span> <span onmouseout="hideTip(event, 'fs6', 75)" onmouseover="showTip(event, 'fs6', 75)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 76)" onmouseover="showTip(event, 'fs45', 76)" class="f">StartAsTask</span> <span onmouseout="hideTip(event, 'fs42', 77)" onmouseover="showTip(event, 'fs42', 77)" class="f">id</span>

    <span class="c">/// Construct an Awaitable from an existing value</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 78)" onmouseover="showTip(event, 'fs46', 78)" class="f">value</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span class="i">Awaitable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 79)" onmouseover="showTip(event, 'fs5', 79)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 80)" onmouseover="showTip(event, 'fs47', 80)" class="f">Return</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span class="i">AsyncWorkflow</span>
    
    <span class="c">/// Synchronously wait for the Awaitable to complete and return the result</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 81)" onmouseover="showTip(event, 'fs48', 81)" class="f">wait</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">:</span> <span class="i">Awaitable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 82)" onmouseover="showTip(event, 'fs11', 82)" class="f">await</span> <span onmouseout="hideTip(event, 'fs6', 83)" onmouseover="showTip(event, 'fs6', 83)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 84)" onmouseover="showTip(event, 'fs49', 84)" class="f">RunSynchronously</span> <span class="o">&lt;|</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs37', 85)" onmouseover="showTip(event, 'fs37', 85)" class="i">t</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs37', 86)" onmouseover="showTip(event, 'fs37', 86)" class="i">t</span><span class="o">.</span><span class="i">RunSynchronously</span>(); <span onmouseout="hideTip(event, 'fs37', 87)" onmouseover="showTip(event, 'fs37', 87)" class="i">t</span><span class="o">.</span><span class="i">Result</span>
    
    <span class="c">/// Run a set of Awaitables in parallel and create a single Awaitable that returns all of the resutls in an array</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 88)" onmouseover="showTip(event, 'fs50', 88)" class="f">Parallel</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">:</span> <span class="i">Awaitable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs51', 89)" onmouseover="showTip(event, 'fs51', 89)" class="t">seq</span> <span class="k">-&gt;</span> <span class="i">Awaitable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span> []<span class="o">&gt;</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs52', 90)" onmouseover="showTip(event, 'fs52', 90)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 91)" onmouseover="showTip(event, 'fs53', 91)" class="f">map</span> <span onmouseout="hideTip(event, 'fs41', 92)" onmouseover="showTip(event, 'fs41', 92)" class="f">toAsync</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs6', 93)" onmouseover="showTip(event, 'fs6', 93)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs54', 94)" onmouseover="showTip(event, 'fs54', 94)" class="f">Parallel</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span class="i">AsyncWorkflow</span>
        
    <span class="c">/// Monadic bind, extract the value from inside an Awaitable and pass it to the given function</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs55', 95)" onmouseover="showTip(event, 'fs55', 95)" class="f">bind</span> <span onmouseout="hideTip(event, 'fs12', 96)" onmouseover="showTip(event, 'fs12', 96)" class="i">f</span> <span class="o">=</span> <span class="k">function</span>
    | <span class="i">AsyncWorkflow</span> <span class="i">a</span> <span class="k">-&gt;</span> 
        <span onmouseout="hideTip(event, 'fs5', 97)" onmouseover="showTip(event, 'fs5', 97)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 98)" onmouseover="showTip(event, 'fs56', 98)" class="i">Bind</span>(<span class="i">a</span>, <span onmouseout="hideTip(event, 'fs12', 99)" onmouseover="showTip(event, 'fs12', 99)" class="i">f</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs41', 100)" onmouseover="showTip(event, 'fs41', 100)" class="i">toAsync</span>) <span class="o">|&gt;</span> <span class="i">AsyncWorkflow</span>        
    | <span class="i">DotNetTask</span> <span class="i">t</span> <span class="k">-&gt;</span> <span class="i">t</span><span class="o">.</span><span class="i">ContinueWith</span>(<span class="k">fun</span> (<span class="i">c</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 101)" onmouseover="showTip(event, 'fs7', 101)" class="i">Task</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span class="k">-&gt;</span> 
        (<span class="i">c</span><span class="o">.</span><span class="i">Result</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs12', 102)" onmouseover="showTip(event, 'fs12', 102)" class="i">f</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs44', 103)" onmouseover="showTip(event, 'fs44', 103)" class="i">toTask</span>))<span class="o">.</span><span class="i">Unwrap</span>() <span class="o">|&gt;</span> <span class="i">DotNetTask</span>

    <span class="c">/// Delay the evaluation of the given function, wrapping it in an Awaitable</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 104)" onmouseover="showTip(event, 'fs57', 104)" class="f">delay</span> <span onmouseout="hideTip(event, 'fs12', 105)" onmouseover="showTip(event, 'fs12', 105)" class="i">f</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 106)" onmouseover="showTip(event, 'fs55', 106)" class="f">bind</span> <span onmouseout="hideTip(event, 'fs12', 107)" onmouseover="showTip(event, 'fs12', 107)" class="i">f</span> (<span onmouseout="hideTip(event, 'fs46', 108)" onmouseover="showTip(event, 'fs46', 108)" class="f">value</span> ())

    <span class="c">/// Combine an Awaitable&lt;unit&gt; with an Awaitable&lt;&#39;a&gt;, </span>
    <span class="c">/// running them sequentially and returning an Awaitable&lt;&#39;a&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 109)" onmouseover="showTip(event, 'fs58', 109)" class="f">combine</span> <span onmouseout="hideTip(event, 'fs59', 110)" onmouseover="showTip(event, 'fs59', 110)" class="i">a</span> <span onmouseout="hideTip(event, 'fs60', 111)" onmouseover="showTip(event, 'fs60', 111)" class="i">b</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 112)" onmouseover="showTip(event, 'fs55', 112)" class="f">bind</span> (<span class="k">fun</span> () <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs60', 113)" onmouseover="showTip(event, 'fs60', 113)" class="i">b</span>) <span onmouseout="hideTip(event, 'fs59', 114)" onmouseover="showTip(event, 'fs59', 114)" class="i">a</span>

    <span class="c">/// Evaluate an Awaitable&lt;&#39;a&gt; until the guard condition returns false</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs61', 115)" onmouseover="showTip(event, 'fs61', 115)" class="f">doWhile</span> <span onmouseout="hideTip(event, 'fs62', 116)" onmouseover="showTip(event, 'fs62', 116)" class="f">guard</span> <span onmouseout="hideTip(event, 'fs59', 117)" onmouseover="showTip(event, 'fs59', 117)" class="i">a</span> <span class="o">=</span> 
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs62', 118)" onmouseover="showTip(event, 'fs62', 118)" class="f">guard</span> ()
        <span class="k">then</span> <span onmouseout="hideTip(event, 'fs55', 119)" onmouseover="showTip(event, 'fs55', 119)" class="f">bind</span> (<span class="k">fun</span> () <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs61', 120)" onmouseover="showTip(event, 'fs61', 120)" class="f">doWhile</span> <span onmouseout="hideTip(event, 'fs62', 121)" onmouseover="showTip(event, 'fs62', 121)" class="f">guard</span> <span onmouseout="hideTip(event, 'fs59', 122)" onmouseover="showTip(event, 'fs59', 122)" class="i">a</span>) <span onmouseout="hideTip(event, 'fs59', 123)" onmouseover="showTip(event, 'fs59', 123)" class="i">a</span>
        <span class="k">else</span> <span onmouseout="hideTip(event, 'fs7', 124)" onmouseover="showTip(event, 'fs7', 124)" class="i">Task</span><span class="o">.</span><span class="i">FromResult</span>() <span class="o">|&gt;</span> <span class="i">DotNetTask</span>

    <span class="c">/// Try to evaluate the given Awaitable function, then unconditionally run the `finally`</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 125)" onmouseover="showTip(event, 'fs63', 125)" class="f">tryFinally</span> <span onmouseout="hideTip(event, 'fs64', 126)" onmouseover="showTip(event, 'fs64', 126)" class="f">fin</span> (<span onmouseout="hideTip(event, 'fs65', 127)" onmouseover="showTip(event, 'fs65', 127)" class="f">f</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs25', 128)" onmouseover="showTip(event, 'fs25', 128)" class="t">unit</span> <span class="k">-&gt;</span> <span class="i">Awaitable</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs5', 129)" onmouseover="showTip(event, 'fs5', 129)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 130)" onmouseover="showTip(event, 'fs66', 130)" class="f">TryFinally</span>(<span onmouseout="hideTip(event, 'fs65', 131)" onmouseover="showTip(event, 'fs65', 131)" class="f">f</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 132)" onmouseover="showTip(event, 'fs41', 132)" class="f">toAsync</span>, <span onmouseout="hideTip(event, 'fs64', 133)" onmouseover="showTip(event, 'fs64', 133)" class="f">fin</span>) <span class="o">|&gt;</span> <span class="i">AsyncWorkflow</span>

    <span class="c">/// Try to evaluate the given Awaitable function, running the `catch` if an exception is thrown</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs67', 134)" onmouseover="showTip(event, 'fs67', 134)" class="f">tryCatch</span> <span onmouseout="hideTip(event, 'fs68', 135)" onmouseover="showTip(event, 'fs68', 135)" class="f">catch</span> (<span onmouseout="hideTip(event, 'fs65', 136)" onmouseover="showTip(event, 'fs65', 136)" class="f">f</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs25', 137)" onmouseover="showTip(event, 'fs25', 137)" class="t">unit</span> <span class="k">-&gt;</span> <span class="i">Awaitable</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs5', 138)" onmouseover="showTip(event, 'fs5', 138)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 139)" onmouseover="showTip(event, 'fs69', 139)" class="f">TryWith</span>(<span onmouseout="hideTip(event, 'fs65', 140)" onmouseover="showTip(event, 'fs65', 140)" class="f">f</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 141)" onmouseover="showTip(event, 'fs41', 141)" class="f">toAsync</span>, <span onmouseout="hideTip(event, 'fs68', 142)" onmouseover="showTip(event, 'fs68', 142)" class="f">catch</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs41', 143)" onmouseover="showTip(event, 'fs41', 143)" class="f">toAsync</span>) <span class="o">|&gt;</span> <span class="i">AsyncWorkflow</span>

    <span class="c">/// Scope the given IDisposable resource to the Awaitable function,</span>
    <span class="c">/// disposing the resource when the Awaitable has completed</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs70', 144)" onmouseover="showTip(event, 'fs70', 144)" class="f">using</span> (<span onmouseout="hideTip(event, 'fs71', 145)" onmouseover="showTip(event, 'fs71', 145)" class="i">a</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs72', 146)" onmouseover="showTip(event, 'fs72', 146)" class="t">IDisposable</span>) (<span onmouseout="hideTip(event, 'fs73', 147)" onmouseover="showTip(event, 'fs73', 147)" class="f">f</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span class="i">Awaitable</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs74', 148)" onmouseover="showTip(event, 'fs74', 148)" class="f">dispose</span> <span class="o">=</span>
            <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs75', 149)" onmouseover="showTip(event, 'fs75', 149)" class="v">flag</span> <span class="o">=</span> <span class="n">0</span>
            <span class="k">fun</span> () <span class="k">-&gt;</span>
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs76', 150)" onmouseover="showTip(event, 'fs76', 150)" class="t">Interlocked</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs77', 151)" onmouseover="showTip(event, 'fs77', 151)" class="f">CompareExchange</span>(<span class="o">&amp;</span><span onmouseout="hideTip(event, 'fs75', 152)" onmouseover="showTip(event, 'fs75', 152)" class="v">flag</span>, <span class="n">1</span>, <span class="n">0</span>) <span class="o">=</span> <span class="n">0</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs71', 153)" onmouseover="showTip(event, 'fs71', 153)" class="i">a</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs78', 154)" onmouseover="showTip(event, 'fs78', 154)" class="f">box</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs79', 155)" onmouseover="showTip(event, 'fs79', 155)" class="f">isNull</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs80', 156)" onmouseover="showTip(event, 'fs80', 156)" class="f">not</span>
                <span class="k">then</span> (<span onmouseout="hideTip(event, 'fs71', 157)" onmouseover="showTip(event, 'fs71', 157)" class="i">a</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs72', 158)" onmouseover="showTip(event, 'fs72', 158)" class="t">IDisposable</span>)<span class="o">.</span><span class="f">Dispose</span>()
        <span onmouseout="hideTip(event, 'fs63', 159)" onmouseover="showTip(event, 'fs63', 159)" class="f">tryFinally</span> <span onmouseout="hideTip(event, 'fs74', 160)" onmouseover="showTip(event, 'fs74', 160)" class="f">dispose</span> (<span class="k">fun</span> () <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs55', 161)" onmouseover="showTip(event, 'fs55', 161)" class="f">bind</span> <span onmouseout="hideTip(event, 'fs73', 162)" onmouseover="showTip(event, 'fs73', 162)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs46', 163)" onmouseover="showTip(event, 'fs46', 163)" class="f">value</span> <span onmouseout="hideTip(event, 'fs71', 164)" onmouseover="showTip(event, 'fs71', 164)" class="i">a</span>))

    <span class="c">/// Evaluate the given Awaitable function for each element in the sequence</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs81', 165)" onmouseover="showTip(event, 'fs81', 165)" class="f">forEach</span> (<span onmouseout="hideTip(event, 'fs82', 166)" onmouseover="showTip(event, 'fs82', 166)" class="i">items</span><span class="o">:</span> _ <span onmouseout="hideTip(event, 'fs51', 167)" onmouseover="showTip(event, 'fs51', 167)" class="t">seq</span>) <span onmouseout="hideTip(event, 'fs83', 168)" onmouseover="showTip(event, 'fs83', 168)" class="f">f</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs70', 169)" onmouseover="showTip(event, 'fs70', 169)" class="f">using</span> (<span onmouseout="hideTip(event, 'fs82', 170)" onmouseover="showTip(event, 'fs82', 170)" class="i">items</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs84', 171)" onmouseover="showTip(event, 'fs84', 171)" class="f">GetEnumerator</span>()) (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs85', 172)" onmouseover="showTip(event, 'fs85', 172)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs61', 173)" onmouseover="showTip(event, 'fs61', 173)" class="f">doWhile</span> (<span class="k">fun</span> () <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs85', 174)" onmouseover="showTip(event, 'fs85', 174)" class="i">e</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs86', 175)" onmouseover="showTip(event, 'fs86', 175)" class="f">MoveNext</span>()) (<span onmouseout="hideTip(event, 'fs57', 176)" onmouseover="showTip(event, 'fs57', 176)" class="f">delay</span> <span class="o">&lt;|</span> <span class="k">fun</span> () <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs83', 177)" onmouseover="showTip(event, 'fs83', 177)" class="f">f</span> <span onmouseout="hideTip(event, 'fs85', 178)" onmouseover="showTip(event, 'fs85', 178)" class="i">e</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs87', 179)" onmouseover="showTip(event, 'fs87', 179)" class="i">Current</span>))

    <span class="c">/// Ignore the result of an Awaitable&lt;&#39;a&gt; and return an Awaitable&lt;unit&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs88', 180)" onmouseover="showTip(event, 'fs88', 180)" class="f">ignore</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">:</span> <span class="i">Awaitable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span class="i">Awaitable</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs25', 181)" onmouseover="showTip(event, 'fs25', 181)" class="i">unit</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 182)" onmouseover="showTip(event, 'fs55', 182)" class="f">bind</span> (<span onmouseout="hideTip(event, 'fs88', 183)" onmouseover="showTip(event, 'fs88', 183)" class="f">ignore</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs46', 184)" onmouseover="showTip(event, 'fs46', 184)" class="f">value</span>)

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs89', 185)" onmouseover="showTip(event, 'fs89', 185)" class="t">AwaitableBuilder</span> () <span class="o">=</span>
    <span class="k">member</span> <span class="k">inline</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs90', 186)" onmouseover="showTip(event, 'fs90', 186)" class="f">Bind</span> (<span onmouseout="hideTip(event, 'fs91', 187)" onmouseover="showTip(event, 'fs91', 187)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs92', 188)" onmouseover="showTip(event, 'fs92', 188)" class="i">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 189)" onmouseover="showTip(event, 'fs93', 189)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 190)" onmouseover="showTip(event, 'fs55', 190)" class="f">bind</span> <span onmouseout="hideTip(event, 'fs92', 191)" onmouseover="showTip(event, 'fs92', 191)" class="i">f</span> <span onmouseout="hideTip(event, 'fs91', 192)" onmouseover="showTip(event, 'fs91', 192)" class="i">x</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 193)" onmouseover="showTip(event, 'fs94', 193)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs95', 194)" onmouseover="showTip(event, 'fs95', 194)" class="f">Bind</span> (<span onmouseout="hideTip(event, 'fs96', 195)" onmouseover="showTip(event, 'fs96', 195)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs97', 196)" onmouseover="showTip(event, 'fs97', 196)" class="i">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs96', 197)" onmouseover="showTip(event, 'fs96', 197)" class="i">a</span> <span class="o">|&gt;</span> <span class="i">AsyncWorkflow</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs93', 198)" onmouseover="showTip(event, 'fs93', 198)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 199)" onmouseover="showTip(event, 'fs55', 199)" class="f">bind</span> <span onmouseout="hideTip(event, 'fs97', 200)" onmouseover="showTip(event, 'fs97', 200)" class="i">f</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 201)" onmouseover="showTip(event, 'fs94', 201)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs98', 202)" onmouseover="showTip(event, 'fs98', 202)" class="f">Bind</span> (<span onmouseout="hideTip(event, 'fs99', 203)" onmouseover="showTip(event, 'fs99', 203)" class="i">t</span>, <span onmouseout="hideTip(event, 'fs100', 204)" onmouseover="showTip(event, 'fs100', 204)" class="i">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs99', 205)" onmouseover="showTip(event, 'fs99', 205)" class="i">t</span> <span class="o">|&gt;</span> <span class="i">DotNetTask</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs93', 206)" onmouseover="showTip(event, 'fs93', 206)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 207)" onmouseover="showTip(event, 'fs55', 207)" class="f">bind</span> <span onmouseout="hideTip(event, 'fs100', 208)" onmouseover="showTip(event, 'fs100', 208)" class="i">f</span>    
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 209)" onmouseover="showTip(event, 'fs94', 209)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs101', 210)" onmouseover="showTip(event, 'fs101', 210)" class="f">Delay</span> <span onmouseout="hideTip(event, 'fs102', 211)" onmouseover="showTip(event, 'fs102', 211)" class="i">f</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 212)" onmouseover="showTip(event, 'fs93', 212)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 213)" onmouseover="showTip(event, 'fs57', 213)" class="f">delay</span> <span onmouseout="hideTip(event, 'fs102', 214)" onmouseover="showTip(event, 'fs102', 214)" class="i">f</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 215)" onmouseover="showTip(event, 'fs94', 215)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs103', 216)" onmouseover="showTip(event, 'fs103', 216)" class="f">Return</span> <span onmouseout="hideTip(event, 'fs104', 217)" onmouseover="showTip(event, 'fs104', 217)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 218)" onmouseover="showTip(event, 'fs93', 218)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 219)" onmouseover="showTip(event, 'fs46', 219)" class="f">value</span> <span onmouseout="hideTip(event, 'fs104', 220)" onmouseover="showTip(event, 'fs104', 220)" class="i">x</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 221)" onmouseover="showTip(event, 'fs94', 221)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs105', 222)" onmouseover="showTip(event, 'fs105', 222)" class="f">ReturnFrom</span> (<span onmouseout="hideTip(event, 'fs106', 223)" onmouseover="showTip(event, 'fs106', 223)" class="i">x</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs93', 224)" onmouseover="showTip(event, 'fs93', 224)" class="i">Awaitable</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs106', 225)" onmouseover="showTip(event, 'fs106', 225)" class="i">x</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 226)" onmouseover="showTip(event, 'fs94', 226)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs107', 227)" onmouseover="showTip(event, 'fs107', 227)" class="f">ReturnFrom</span> <span onmouseout="hideTip(event, 'fs108', 228)" onmouseover="showTip(event, 'fs108', 228)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs108', 229)" onmouseover="showTip(event, 'fs108', 229)" class="i">a</span> <span class="o">|&gt;</span> <span class="i">AsyncWorkflow</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 230)" onmouseover="showTip(event, 'fs94', 230)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs109', 231)" onmouseover="showTip(event, 'fs109', 231)" class="f">ReturnFrom</span> <span onmouseout="hideTip(event, 'fs110', 232)" onmouseover="showTip(event, 'fs110', 232)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs110', 233)" onmouseover="showTip(event, 'fs110', 233)" class="i">t</span> <span class="o">|&gt;</span> <span class="i">DotNetTask</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 234)" onmouseover="showTip(event, 'fs94', 234)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs111', 235)" onmouseover="showTip(event, 'fs111', 235)" class="f">Zero</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 236)" onmouseover="showTip(event, 'fs5', 236)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 237)" onmouseover="showTip(event, 'fs47', 237)" class="f">Return</span>() <span class="o">|&gt;</span> <span class="i">AsyncWorkflow</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 238)" onmouseover="showTip(event, 'fs94', 238)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs112', 239)" onmouseover="showTip(event, 'fs112', 239)" class="f">Combine</span> (<span onmouseout="hideTip(event, 'fs113', 240)" onmouseover="showTip(event, 'fs113', 240)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs114', 241)" onmouseover="showTip(event, 'fs114', 241)" class="i">b</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 242)" onmouseover="showTip(event, 'fs93', 242)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 243)" onmouseover="showTip(event, 'fs58', 243)" class="f">combine</span> <span onmouseout="hideTip(event, 'fs113', 244)" onmouseover="showTip(event, 'fs113', 244)" class="i">a</span> <span onmouseout="hideTip(event, 'fs114', 245)" onmouseover="showTip(event, 'fs114', 245)" class="i">b</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 246)" onmouseover="showTip(event, 'fs94', 246)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs115', 247)" onmouseover="showTip(event, 'fs115', 247)" class="f">Combine</span> (<span onmouseout="hideTip(event, 'fs116', 248)" onmouseover="showTip(event, 'fs116', 248)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs117', 249)" onmouseover="showTip(event, 'fs117', 249)" class="i">b</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 250)" onmouseover="showTip(event, 'fs93', 250)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 251)" onmouseover="showTip(event, 'fs58', 251)" class="f">combine</span> (<span class="i">AsyncWorkflow</span> <span onmouseout="hideTip(event, 'fs116', 252)" onmouseover="showTip(event, 'fs116', 252)" class="i">a</span>) <span onmouseout="hideTip(event, 'fs117', 253)" onmouseover="showTip(event, 'fs117', 253)" class="i">b</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 254)" onmouseover="showTip(event, 'fs94', 254)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs118', 255)" onmouseover="showTip(event, 'fs118', 255)" class="f">Combine</span> (<span onmouseout="hideTip(event, 'fs119', 256)" onmouseover="showTip(event, 'fs119', 256)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs120', 257)" onmouseover="showTip(event, 'fs120', 257)" class="i">b</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 258)" onmouseover="showTip(event, 'fs93', 258)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 259)" onmouseover="showTip(event, 'fs58', 259)" class="f">combine</span> (<span class="i">DotNetTask</span> <span onmouseout="hideTip(event, 'fs119', 260)" onmouseover="showTip(event, 'fs119', 260)" class="i">a</span>) <span onmouseout="hideTip(event, 'fs120', 261)" onmouseover="showTip(event, 'fs120', 261)" class="i">b</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 262)" onmouseover="showTip(event, 'fs94', 262)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs121', 263)" onmouseover="showTip(event, 'fs121', 263)" class="f">While</span> (<span onmouseout="hideTip(event, 'fs122', 264)" onmouseover="showTip(event, 'fs122', 264)" class="f">g</span>, <span onmouseout="hideTip(event, 'fs123', 265)" onmouseover="showTip(event, 'fs123', 265)" class="i">a</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 266)" onmouseover="showTip(event, 'fs93', 266)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 267)" onmouseover="showTip(event, 'fs61', 267)" class="f">doWhile</span> <span onmouseout="hideTip(event, 'fs122', 268)" onmouseover="showTip(event, 'fs122', 268)" class="f">g</span> <span onmouseout="hideTip(event, 'fs123', 269)" onmouseover="showTip(event, 'fs123', 269)" class="i">a</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 270)" onmouseover="showTip(event, 'fs94', 270)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs124', 271)" onmouseover="showTip(event, 'fs124', 271)" class="f">For</span> (<span onmouseout="hideTip(event, 'fs125', 272)" onmouseover="showTip(event, 'fs125', 272)" class="i">s</span>, <span onmouseout="hideTip(event, 'fs126', 273)" onmouseover="showTip(event, 'fs126', 273)" class="f">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 274)" onmouseover="showTip(event, 'fs93', 274)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 275)" onmouseover="showTip(event, 'fs81', 275)" class="f">forEach</span> <span onmouseout="hideTip(event, 'fs125', 276)" onmouseover="showTip(event, 'fs125', 276)" class="i">s</span> <span onmouseout="hideTip(event, 'fs126', 277)" onmouseover="showTip(event, 'fs126', 277)" class="f">f</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 278)" onmouseover="showTip(event, 'fs94', 278)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs127', 279)" onmouseover="showTip(event, 'fs127', 279)" class="f">TryWith</span> (<span onmouseout="hideTip(event, 'fs65', 280)" onmouseover="showTip(event, 'fs65', 280)" class="f">f</span>, <span onmouseout="hideTip(event, 'fs128', 281)" onmouseover="showTip(event, 'fs128', 281)" class="f">c</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 282)" onmouseover="showTip(event, 'fs93', 282)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs67', 283)" onmouseover="showTip(event, 'fs67', 283)" class="f">tryCatch</span> <span onmouseout="hideTip(event, 'fs128', 284)" onmouseover="showTip(event, 'fs128', 284)" class="f">c</span> <span onmouseout="hideTip(event, 'fs65', 285)" onmouseover="showTip(event, 'fs65', 285)" class="f">f</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 286)" onmouseover="showTip(event, 'fs94', 286)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs129', 287)" onmouseover="showTip(event, 'fs129', 287)" class="f">TryFinally</span> (<span onmouseout="hideTip(event, 'fs65', 288)" onmouseover="showTip(event, 'fs65', 288)" class="f">f</span>, <span onmouseout="hideTip(event, 'fs64', 289)" onmouseover="showTip(event, 'fs64', 289)" class="f">fin</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 290)" onmouseover="showTip(event, 'fs93', 290)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 291)" onmouseover="showTip(event, 'fs63', 291)" class="f">tryFinally</span> <span onmouseout="hideTip(event, 'fs64', 292)" onmouseover="showTip(event, 'fs64', 292)" class="f">fin</span> <span onmouseout="hideTip(event, 'fs65', 293)" onmouseover="showTip(event, 'fs65', 293)" class="f">f</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 294)" onmouseover="showTip(event, 'fs94', 294)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs130', 295)" onmouseover="showTip(event, 'fs130', 295)" class="f">Using</span> (<span onmouseout="hideTip(event, 'fs131', 296)" onmouseover="showTip(event, 'fs131', 296)" class="i">d</span>, <span onmouseout="hideTip(event, 'fs132', 297)" onmouseover="showTip(event, 'fs132', 297)" class="f">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 298)" onmouseover="showTip(event, 'fs93', 298)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 299)" onmouseover="showTip(event, 'fs70', 299)" class="f">using</span> <span onmouseout="hideTip(event, 'fs131', 300)" onmouseover="showTip(event, 'fs131', 300)" class="i">d</span> <span onmouseout="hideTip(event, 'fs132', 301)" onmouseover="showTip(event, 'fs132', 301)" class="f">f</span>
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 302)" onmouseover="showTip(event, 'fs94', 302)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs133', 303)" onmouseover="showTip(event, 'fs133', 303)" class="f">Using</span> (<span onmouseout="hideTip(event, 'fs131', 304)" onmouseover="showTip(event, 'fs131', 304)" class="i">d</span>, <span onmouseout="hideTip(event, 'fs134', 305)" onmouseover="showTip(event, 'fs134', 305)" class="f">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 306)" onmouseover="showTip(event, 'fs93', 306)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 307)" onmouseover="showTip(event, 'fs70', 307)" class="f">using</span> <span onmouseout="hideTip(event, 'fs131', 308)" onmouseover="showTip(event, 'fs131', 308)" class="i">d</span> (<span onmouseout="hideTip(event, 'fs134', 309)" onmouseover="showTip(event, 'fs134', 309)" class="f">f</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span class="i">AsyncWorkflow</span>)
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs94', 310)" onmouseover="showTip(event, 'fs94', 310)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs135', 311)" onmouseover="showTip(event, 'fs135', 311)" class="f">Using</span> (<span onmouseout="hideTip(event, 'fs131', 312)" onmouseover="showTip(event, 'fs131', 312)" class="i">d</span>, <span onmouseout="hideTip(event, 'fs136', 313)" onmouseover="showTip(event, 'fs136', 313)" class="f">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 314)" onmouseover="showTip(event, 'fs93', 314)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 315)" onmouseover="showTip(event, 'fs70', 315)" class="f">using</span> <span onmouseout="hideTip(event, 'fs131', 316)" onmouseover="showTip(event, 'fs131', 316)" class="i">d</span> (<span onmouseout="hideTip(event, 'fs136', 317)" onmouseover="showTip(event, 'fs136', 317)" class="f">f</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span class="i">DotNetTask</span>)

[&lt;<span onmouseout="hideTip(event, 'fs137', 318)" onmouseover="showTip(event, 'fs137', 318)" class="t">AutoOpen</span>&gt;]
[&lt;<span onmouseout="hideTip(event, 'fs8', 319)" onmouseover="showTip(event, 'fs8', 319)" class="t">CompilationRepresentation</span>(<span onmouseout="hideTip(event, 'fs9', 320)" onmouseover="showTip(event, 'fs9', 320)" class="t">CompilationRepresentationFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 321)" onmouseover="showTip(event, 'fs10', 321)" class="i">ModuleSuffix</span>)&gt;]
<span class="k">module</span> <span onmouseout="hideTip(event, 'fs89', 322)" onmouseover="showTip(event, 'fs89', 322)" class="t">AwaitableBuilder</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs138', 323)" onmouseover="showTip(event, 'fs138', 323)" class="i">await</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs89', 324)" onmouseover="showTip(event, 'fs89', 324)" class="t">AwaitableBuilder</span>()



<span class="c">// Example Usage:</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs139', 325)" onmouseover="showTip(event, 'fs139', 325)" class="i">awaitable</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs138', 326)" onmouseover="showTip(event, 'fs138', 326)" class="i">await</span> {
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs140', 327)" onmouseover="showTip(event, 'fs140', 327)" class="i">asyncValue</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 328)" onmouseover="showTip(event, 'fs5', 328)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 329)" onmouseover="showTip(event, 'fs47', 329)" class="f">Return</span>(<span class="n">3</span>)
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs141', 330)" onmouseover="showTip(event, 'fs141', 330)" class="i">taskValue</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 331)" onmouseover="showTip(event, 'fs7', 331)" class="i">Task</span><span class="o">.</span><span class="i">Run</span>(<span class="k">fun</span> () <span class="k">-&gt;</span> <span class="n">5</span>)
        <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs5', 332)" onmouseover="showTip(event, 'fs5', 332)" class="i">async</span> { <span class="k">return</span> <span onmouseout="hideTip(event, 'fs140', 333)" onmouseover="showTip(event, 'fs140', 333)" class="i">asyncValue</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs141', 334)" onmouseover="showTip(event, 'fs141', 334)" class="i">taskValue</span> }
    }

<span onmouseout="hideTip(event, 'fs142', 335)" onmouseover="showTip(event, 'fs142', 335)" class="f">printfn</span> <span class="s">&quot;Awaitable Result: </span><span class="pf">%d</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs139', 336)" onmouseover="showTip(event, 'fs139', 336)" class="i">awaitable</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs93', 337)" onmouseover="showTip(event, 'fs93', 337)" class="t">Awaitable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 338)" onmouseover="showTip(event, 'fs48', 338)" class="f">wait</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Threading</div>
<div class="tip" id="fs3">namespace System.Threading.Tasks</div>
<div class="tip" id="fs4">Multiple items<br />type StructAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; StructAttribute<br /><br />Full name: Microsoft.FSharp.Core.StructAttribute<br /><br />--------------------<br />new : unit -&gt; StructAttribute</div>
<div class="tip" id="fs5">val async : AsyncBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.async</div>
<div class="tip" id="fs6">Multiple items<br />type Async<br />static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member AwaitTask : task:Task -&gt; Async&lt;unit&gt;<br />static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member CancelDefaultToken : unit -&gt; unit<br />static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromContinuations : callback:((&#39;T -&gt; unit) * (exn -&gt; unit) * (OperationCanceledException -&gt; unit) -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;<br />static member OnCancel : interruption:(unit -&gt; unit) -&gt; Async&lt;IDisposable&gt;<br />static member Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;<br />static member RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T<br />static member Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;<br />static member Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;<br />static member StartChild : computation:Async&lt;&#39;T&gt; * ?millisecondsTimeout:int -&gt; Async&lt;Async&lt;&#39;T&gt;&gt;<br />static member StartChildAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions -&gt; Async&lt;Task&lt;&#39;T&gt;&gt;<br />static member StartImmediate : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartWithContinuations : computation:Async&lt;&#39;T&gt; * continuation:(&#39;T -&gt; unit) * exceptionContinuation:(exn -&gt; unit) * cancellationContinuation:(OperationCanceledException -&gt; unit) * ?cancellationToken:CancellationToken -&gt; unit<br />static member SwitchToContext : syncContext:SynchronizationContext -&gt; Async&lt;unit&gt;<br />static member SwitchToNewThread : unit -&gt; Async&lt;unit&gt;<br />static member SwitchToThreadPool : unit -&gt; Async&lt;unit&gt;<br />static member TryCancelled : computation:Async&lt;&#39;T&gt; * compensation:(OperationCanceledException -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member CancellationToken : Async&lt;CancellationToken&gt;<br />static member DefaultCancellationToken : CancellationToken<br /><br />Full name: Microsoft.FSharp.Control.Async<br /><br />--------------------<br />type Async&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Async&lt;_&gt;</div>
<div class="tip" id="fs7">Multiple items<br />type Task =<br />&#160;&#160;new : action:Action -&gt; Task + 7 overloads<br />&#160;&#160;member AsyncState : obj<br />&#160;&#160;member ContinueWith : continuationAction:Action&lt;Task&gt; -&gt; Task + 9 overloads<br />&#160;&#160;member CreationOptions : TaskCreationOptions<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member Exception : AggregateException<br />&#160;&#160;member Id : int<br />&#160;&#160;member IsCanceled : bool<br />&#160;&#160;member IsCompleted : bool<br />&#160;&#160;member IsFaulted : bool<br />&#160;&#160;...<br /><br />Full name: System.Threading.Tasks.Task<br /><br />--------------------<br />type Task&lt;&#39;TResult&gt; =<br />&#160;&#160;inherit Task<br />&#160;&#160;new : function:Func&lt;&#39;TResult&gt; -&gt; Task&lt;&#39;TResult&gt; + 7 overloads<br />&#160;&#160;member ContinueWith : continuationAction:Action&lt;Task&lt;&#39;TResult&gt;&gt; -&gt; Task + 9 overloads<br />&#160;&#160;member Result : &#39;TResult with get, set<br />&#160;&#160;static member Factory : TaskFactory&lt;&#39;TResult&gt;<br /><br />Full name: System.Threading.Tasks.Task&lt;_&gt;<br /><br />--------------------<br />Task(action: Action) : unit<br />Task(action: Action, cancellationToken: CancellationToken) : unit<br />Task(action: Action, creationOptions: TaskCreationOptions) : unit<br />Task(action: Action&lt;obj&gt;, state: obj) : unit<br />Task(action: Action, cancellationToken: CancellationToken, creationOptions: TaskCreationOptions) : unit<br />Task(action: Action&lt;obj&gt;, state: obj, cancellationToken: CancellationToken) : unit<br />Task(action: Action&lt;obj&gt;, state: obj, creationOptions: TaskCreationOptions) : unit<br />Task(action: Action&lt;obj&gt;, state: obj, cancellationToken: CancellationToken, creationOptions: TaskCreationOptions) : unit<br /><br />--------------------<br />Task(function: Func&lt;&#39;TResult&gt;) : unit<br />Task(function: Func&lt;&#39;TResult&gt;, cancellationToken: CancellationToken) : unit<br />Task(function: Func&lt;&#39;TResult&gt;, creationOptions: TaskCreationOptions) : unit<br />Task(function: Func&lt;obj,&#39;TResult&gt;, state: obj) : unit<br />Task(function: Func&lt;&#39;TResult&gt;, cancellationToken: CancellationToken, creationOptions: TaskCreationOptions) : unit<br />Task(function: Func&lt;obj,&#39;TResult&gt;, state: obj, cancellationToken: CancellationToken) : unit<br />Task(function: Func&lt;obj,&#39;TResult&gt;, state: obj, creationOptions: TaskCreationOptions) : unit<br />Task(function: Func&lt;obj,&#39;TResult&gt;, state: obj, cancellationToken: CancellationToken, creationOptions: TaskCreationOptions) : unit</div>
<div class="tip" id="fs8">Multiple items<br />type CompilationRepresentationAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : flags:CompilationRepresentationFlags -&gt; CompilationRepresentationAttribute<br />&#160;&#160;member Flags : CompilationRepresentationFlags<br /><br />Full name: Microsoft.FSharp.Core.CompilationRepresentationAttribute<br /><br />--------------------<br />new : flags:CompilationRepresentationFlags -&gt; CompilationRepresentationAttribute</div>
<div class="tip" id="fs9">type CompilationRepresentationFlags =<br />&#160;&#160;|  None  =  0<br />&#160;&#160;|  Static  =  1<br />&#160;&#160;|  Instance  =  2<br />&#160;&#160;|  ModuleSuffix  =  4<br />&#160;&#160;|  UseNullAsTrueValue  =  8<br />&#160;&#160;|  Event  =  16<br /><br />Full name: Microsoft.FSharp.Core.CompilationRepresentationFlags</div>
<div class="tip" id="fs10">CompilationRepresentationFlags.ModuleSuffix: CompilationRepresentationFlags = 4</div>
<div class="tip" id="fs11">val private await : f:&#39;a -&gt; g:&#39;b -&gt; (&#39;c -&gt; &#39;d)<br /><br />Full name: Script.AwaitableModule.await</div>
<div class="tip" id="fs12">val f : &#39;a</div>
<div class="tip" id="fs13">val g : &#39;b</div>
<div class="tip" id="fs14">val ofAsync : obj<br /><br />Full name: Script.AwaitableModule.ofAsync<br /><em><br /><br />&#160;Convert an F# Async Workflow to an Awaitable</em></div>
<div class="tip" id="fs15">val ofEvent : event:IEvent&lt;&#39;a,&#39;b&gt; -&gt; &#39;c (requires delegate and &#39;a :&gt; Delegate)<br /><br />Full name: Script.AwaitableModule.ofEvent<br /><em><br /><br />&#160;Convert a .NET Event into an Awaitable</em></div>
<div class="tip" id="fs16">val event : IEvent&lt;&#39;a,&#39;b&gt; (requires delegate and &#39;a :&gt; Delegate)</div>
<div class="tip" id="fs17">static member Async.AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)</div>
<div class="tip" id="fs18">val ofTask : obj<br /><br />Full name: Script.AwaitableModule.ofTask<br /><em><br /><br />&#160;Convert a .NET Task&lt;T&gt; into an Awaitable</em></div>
<div class="tip" id="fs19">val ofUnitTask : t:Task -&gt; &#39;a<br /><br />Full name: Script.AwaitableModule.ofUnitTask<br /><em><br /><br />&#160;Convert a .NET Task into an Awaitable</em></div>
<div class="tip" id="fs20">val t : Task</div>
<div class="tip" id="fs21">Task.ContinueWith&lt;&#39;TResult&gt;(continuationFunction: Func&lt;Task,&#39;TResult&gt;) : Task&lt;&#39;TResult&gt;<br />Task.ContinueWith(continuationAction: Action&lt;Task&gt;) : Task<br />Task.ContinueWith&lt;&#39;TResult&gt;(continuationFunction: Func&lt;Task,&#39;TResult&gt;, continuationOptions: TaskContinuationOptions) : Task&lt;&#39;TResult&gt;<br />Task.ContinueWith&lt;&#39;TResult&gt;(continuationFunction: Func&lt;Task,&#39;TResult&gt;, scheduler: TaskScheduler) : Task&lt;&#39;TResult&gt;<br />Task.ContinueWith&lt;&#39;TResult&gt;(continuationFunction: Func&lt;Task,&#39;TResult&gt;, cancellationToken: CancellationToken) : Task&lt;&#39;TResult&gt;<br />Task.ContinueWith(continuationAction: Action&lt;Task&gt;, continuationOptions: TaskContinuationOptions) : Task<br />Task.ContinueWith(continuationAction: Action&lt;Task&gt;, scheduler: TaskScheduler) : Task<br />Task.ContinueWith(continuationAction: Action&lt;Task&gt;, cancellationToken: CancellationToken) : Task<br />Task.ContinueWith&lt;&#39;TResult&gt;(continuationFunction: Func&lt;Task,&#39;TResult&gt;, cancellationToken: CancellationToken, continuationOptions: TaskContinuationOptions, scheduler: TaskScheduler) : Task&lt;&#39;TResult&gt;<br />Task.ContinueWith(continuationAction: Action&lt;Task&gt;, cancellationToken: CancellationToken, continuationOptions: TaskContinuationOptions, scheduler: TaskScheduler) : Task</div>
<div class="tip" id="fs22">val task : Task</div>
<div class="tip" id="fs23">val tcs : TaskCompletionSource&lt;unit&gt;</div>
<div class="tip" id="fs24">Multiple items<br />type TaskCompletionSource&lt;&#39;TResult&gt; =<br />&#160;&#160;new : unit -&gt; TaskCompletionSource&lt;&#39;TResult&gt; + 3 overloads<br />&#160;&#160;member SetCanceled : unit -&gt; unit<br />&#160;&#160;member SetException : exception:Exception -&gt; unit + 1 overload<br />&#160;&#160;member SetResult : result:&#39;TResult -&gt; unit<br />&#160;&#160;member Task : Task&lt;&#39;TResult&gt;<br />&#160;&#160;member TrySetCanceled : unit -&gt; bool<br />&#160;&#160;member TrySetException : exception:Exception -&gt; bool + 1 overload<br />&#160;&#160;member TrySetResult : result:&#39;TResult -&gt; bool<br /><br />Full name: System.Threading.Tasks.TaskCompletionSource&lt;_&gt;<br /><br />--------------------<br />TaskCompletionSource() : unit<br />TaskCompletionSource(creationOptions: TaskCreationOptions) : unit<br />TaskCompletionSource(state: obj) : unit<br />TaskCompletionSource(state: obj, creationOptions: TaskCreationOptions) : unit</div>
<div class="tip" id="fs25">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs26">property Task.Status: TaskStatus</div>
<div class="tip" id="fs27">type TaskStatus =<br />&#160;&#160;| Created = 0<br />&#160;&#160;| WaitingForActivation = 1<br />&#160;&#160;| WaitingToRun = 2<br />&#160;&#160;| Running = 3<br />&#160;&#160;| WaitingForChildrenToComplete = 4<br />&#160;&#160;| RanToCompletion = 5<br />&#160;&#160;| Canceled = 6<br />&#160;&#160;| Faulted = 7<br /><br />Full name: System.Threading.Tasks.TaskStatus</div>
<div class="tip" id="fs28">field TaskStatus.Canceled = 6</div>
<div class="tip" id="fs29">TaskCompletionSource.SetCanceled() : unit</div>
<div class="tip" id="fs30">field TaskStatus.Faulted = 7</div>
<div class="tip" id="fs31">TaskCompletionSource.SetException(exceptions: Collections.Generic.IEnumerable&lt;exn&gt;) : unit<br />TaskCompletionSource.SetException(exception: exn) : unit</div>
<div class="tip" id="fs32">property Task.Exception: AggregateException</div>
<div class="tip" id="fs33">TaskCompletionSource.SetResult(result: unit) : unit</div>
<div class="tip" id="fs34">property TaskCompletionSource.Task: Task&lt;unit&gt;</div>
<div class="tip" id="fs35">val start : (obj -&gt; obj)<br /><br />Full name: Script.AwaitableModule.start<br /><em><br /><br />&#160;Start an Awaitable, if it is not already running</em></div>
<div class="tip" id="fs36">static member Async.Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit</div>
<div class="tip" id="fs37">val t : obj</div>
<div class="tip" id="fs38">field TaskStatus.Created = 0</div>
<div class="tip" id="fs39">val sleep : (int -&gt; obj)<br /><br />Full name: Script.AwaitableModule.sleep<br /><em><br /><br />&#160;Create an Awaitable that will sleep for the specified amount of time</em></div>
<div class="tip" id="fs40">static member Async.Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs41">val toAsync&lt;&#39;a&gt; : (obj -&gt; Async&lt;&#39;a&gt;)<br /><br />Full name: Script.AwaitableModule.toAsync<br /><em><br /><br />&#160;Convert an Awaitable into an F# Async Workflow</em></div>
<div class="tip" id="fs42">val id : x:&#39;T -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.id</div>
<div class="tip" id="fs43">static member Async.AwaitTask : task:Task -&gt; Async&lt;unit&gt;<br />static member Async.AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs44">val toTask&lt;&#39;a&gt; : (obj -&gt; Task&lt;&#39;a&gt;)<br /><br />Full name: Script.AwaitableModule.toTask<br /><em><br /><br />&#160;Convert an Awaitable into a .NET Task&lt;T&gt;</em></div>
<div class="tip" id="fs45">static member Async.StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;</div>
<div class="tip" id="fs46">val value&lt;&#39;a&gt; : (&#39;a -&gt; obj)<br /><br />Full name: Script.AwaitableModule.value<br /><em><br /><br />&#160;Construct an Awaitable from an existing value</em></div>
<div class="tip" id="fs47">member AsyncBuilder.Return : value:&#39;T -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs48">val wait&lt;&#39;a&gt; : (obj -&gt; &#39;a)<br /><br />Full name: Script.AwaitableModule.wait<br /><em><br /><br />&#160;Synchronously wait for the Awaitable to complete and return the result</em></div>
<div class="tip" id="fs49">static member Async.RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T</div>
<div class="tip" id="fs50">Multiple items<br />val Parallel&lt;&#39;a&gt; : (seq&lt;obj&gt; -&gt; obj)<br /><br />Full name: Script.AwaitableModule.Parallel<br /><em><br /><br />&#160;Run a set of Awaitables in parallel and create a single Awaitable that returns all of the resutls in an array</em><br /><br />--------------------<br />type Parallel =<br />&#160;&#160;static member For : fromInclusive:int * toExclusive:int * body:Action&lt;int&gt; -&gt; ParallelLoopResult + 11 overloads<br />&#160;&#160;static member ForEach&lt;&#39;TSource&gt; : source:IEnumerable&lt;&#39;TSource&gt; * body:Action&lt;&#39;TSource&gt; -&gt; ParallelLoopResult + 19 overloads<br />&#160;&#160;static member Invoke : [&lt;ParamArray&gt;] actions:Action[] -&gt; unit + 1 overload<br /><br />Full name: System.Threading.Tasks.Parallel</div>
<div class="tip" id="fs51">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs52">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs53">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs54">static member Async.Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;</div>
<div class="tip" id="fs55">val bind : f:&#39;a -&gt; (&#39;b -&gt; &#39;c)<br /><br />Full name: Script.AwaitableModule.bind<br /><em><br /><br />&#160;Monadic bind, extract the value from inside an Awaitable and pass it to the given function</em></div>
<div class="tip" id="fs56">member AsyncBuilder.Bind : computation:Async&lt;&#39;T&gt; * binder:(&#39;T -&gt; Async&lt;&#39;U&gt;) -&gt; Async&lt;&#39;U&gt;</div>
<div class="tip" id="fs57">val delay : f:&#39;a -&gt; &#39;b<br /><br />Full name: Script.AwaitableModule.delay<br /><em><br /><br />&#160;Delay the evaluation of the given function, wrapping it in an Awaitable</em></div>
<div class="tip" id="fs58">val combine : a:&#39;a -&gt; b:&#39;b -&gt; &#39;c<br /><br />Full name: Script.AwaitableModule.combine<br /><em><br /><br />&#160;Combine an Awaitable&lt;unit&gt; with an Awaitable&lt;&#39;a&gt;, <br />&#160;running them sequentially and returning an Awaitable&lt;&#39;a&gt;</em></div>
<div class="tip" id="fs59">val a : &#39;a</div>
<div class="tip" id="fs60">val b : &#39;b</div>
<div class="tip" id="fs61">val doWhile : guard:(unit -&gt; bool) -&gt; a:&#39;a -&gt; &#39;b<br /><br />Full name: Script.AwaitableModule.doWhile<br /><em><br /><br />&#160;Evaluate an Awaitable&lt;&#39;a&gt; until the guard condition returns false</em></div>
<div class="tip" id="fs62">val guard : (unit -&gt; bool)</div>
<div class="tip" id="fs63">val tryFinally : fin:(unit -&gt; unit) -&gt; f:(unit -&gt; obj) -&gt; &#39;a<br /><br />Full name: Script.AwaitableModule.tryFinally<br /><em><br /><br />&#160;Try to evaluate the given Awaitable function, then unconditionally run the `finally`</em></div>
<div class="tip" id="fs64">val fin : (unit -&gt; unit)</div>
<div class="tip" id="fs65">val f : (unit -&gt; obj)</div>
<div class="tip" id="fs66">member AsyncBuilder.TryFinally : computation:Async&lt;&#39;T&gt; * compensation:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs67">val tryCatch : catch:(exn -&gt; obj) -&gt; f:(unit -&gt; obj) -&gt; &#39;a<br /><br />Full name: Script.AwaitableModule.tryCatch<br /><em><br /><br />&#160;Try to evaluate the given Awaitable function, running the `catch` if an exception is thrown</em></div>
<div class="tip" id="fs68">val catch : (exn -&gt; obj)</div>
<div class="tip" id="fs69">member AsyncBuilder.TryWith : computation:Async&lt;&#39;T&gt; * catchHandler:(exn -&gt; Async&lt;&#39;T&gt;) -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs70">val using : a:&#39;a -&gt; f:(&#39;a -&gt; &#39;a0) -&gt; &#39;b (requires &#39;a :&gt; IDisposable)<br /><br />Full name: Script.AwaitableModule.using<br /><em><br /><br />&#160;Scope the given IDisposable resource to the Awaitable function,<br />&#160;disposing the resource when the Awaitable has completed</em></div>
<div class="tip" id="fs71">val a : #IDisposable</div>
<div class="tip" id="fs72">type IDisposable =<br />&#160;&#160;member Dispose : unit -&gt; unit<br /><br />Full name: System.IDisposable</div>
<div class="tip" id="fs73">val f : (#IDisposable -&gt; &#39;a0)</div>
<div class="tip" id="fs74">val dispose : (unit -&gt; unit)</div>
<div class="tip" id="fs75">val mutable flag : int</div>
<div class="tip" id="fs76">type Interlocked =<br />&#160;&#160;static member Add : location1:int * value:int -&gt; int + 1 overload<br />&#160;&#160;static member CompareExchange : location1:int * value:int * comparand:int -&gt; int + 6 overloads<br />&#160;&#160;static member Decrement : location:int -&gt; int + 1 overload<br />&#160;&#160;static member Exchange : location1:int * value:int -&gt; int + 6 overloads<br />&#160;&#160;static member Increment : location:int -&gt; int + 1 overload<br />&#160;&#160;static member Read : location:int64 -&gt; int64<br /><br />Full name: System.Threading.Interlocked</div>
<div class="tip" id="fs77">Interlocked.CompareExchange&lt;&#39;T (requires reference type)&gt;(location1: byref&lt;&#39;T&gt;, value: &#39;T, comparand: &#39;T) : &#39;T<br />Interlocked.CompareExchange(location1: byref&lt;nativeint&gt;, value: nativeint, comparand: nativeint) : nativeint<br />Interlocked.CompareExchange(location1: byref&lt;obj&gt;, value: obj, comparand: obj) : obj<br />Interlocked.CompareExchange(location1: byref&lt;float&gt;, value: float, comparand: float) : float<br />Interlocked.CompareExchange(location1: byref&lt;float32&gt;, value: float32, comparand: float32) : float32<br />Interlocked.CompareExchange(location1: byref&lt;int64&gt;, value: int64, comparand: int64) : int64<br />Interlocked.CompareExchange(location1: byref&lt;int&gt;, value: int, comparand: int) : int</div>
<div class="tip" id="fs78">val box : value:&#39;T -&gt; obj<br /><br />Full name: Microsoft.FSharp.Core.Operators.box</div>
<div class="tip" id="fs79">val isNull : value:&#39;T -&gt; bool (requires &#39;T : null)<br /><br />Full name: Microsoft.FSharp.Core.Operators.isNull</div>
<div class="tip" id="fs80">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs81">val forEach : items:seq&lt;&#39;a&gt; -&gt; f:(&#39;a -&gt; &#39;b) -&gt; &#39;c<br /><br />Full name: Script.AwaitableModule.forEach<br /><em><br /><br />&#160;Evaluate the given Awaitable function for each element in the sequence</em></div>
<div class="tip" id="fs82">val items : seq&lt;&#39;a&gt;</div>
<div class="tip" id="fs83">val f : (&#39;a -&gt; &#39;b)</div>
<div class="tip" id="fs84">Collections.Generic.IEnumerable.GetEnumerator() : Collections.Generic.IEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs85">val e : Collections.Generic.IEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs86">Collections.IEnumerator.MoveNext() : bool</div>
<div class="tip" id="fs87">property Collections.Generic.IEnumerator.Current: &#39;a</div>
<div class="tip" id="fs88">val ignore&lt;&#39;a&gt; : (obj -&gt; obj)<br /><br />Full name: Script.AwaitableModule.ignore<br /><em><br /><br />&#160;Ignore the result of an Awaitable&lt;&#39;a&gt; and return an Awaitable&lt;unit&gt;</em></div>
<div class="tip" id="fs89">Multiple items<br />type AwaitableBuilder =<br />&#160;&#160;new : unit -&gt; AwaitableBuilder<br />&#160;&#160;member Bind : x:&#39;a21 * f:&#39;a22 -&gt; &#39;a23<br />&#160;&#160;member Bind : a:&#39;a18 * f:&#39;a19 -&gt; &#39;a20<br />&#160;&#160;member Bind : t:&#39;a15 * f:&#39;a16 -&gt; &#39;a17<br />&#160;&#160;member Combine : a:&#39;a3 * b:&#39;a4 -&gt; &#39;a5<br />&#160;&#160;member Combine : a:&#39;t * b:&#39;a1 -&gt; &#39;a2<br />&#160;&#160;member Combine : a:&#39;q * b:&#39;r -&gt; &#39;s<br />&#160;&#160;member Delay : f:&#39;a13 -&gt; &#39;a14<br />&#160;&#160;member For : s:seq&lt;&#39;l&gt; * f:(&#39;l -&gt; &#39;m) -&gt; &#39;n<br />&#160;&#160;member Return : x:&#39;a12 -&gt; obj<br />&#160;&#160;...<br /><br />Full name: Script.AwaitableBuilder<br /><br />--------------------<br />new : unit -&gt; AwaitableBuilder</div>
<div class="tip" id="fs90">member AwaitableBuilder.Bind : x:&#39;a21 * f:&#39;a22 -&gt; &#39;a23<br /><br />Full name: Script.AwaitableBuilder.Bind</div>
<div class="tip" id="fs91">val x : &#39;a21</div>
<div class="tip" id="fs92">val f : &#39;a22</div>
<div class="tip" id="fs93">module Awaitable<br /><br />from Script</div>
<div class="tip" id="fs94">val __ : AwaitableBuilder</div>
<div class="tip" id="fs95">member AwaitableBuilder.Bind : a:&#39;a18 * f:&#39;a19 -&gt; &#39;a20<br /><br />Full name: Script.AwaitableBuilder.Bind</div>
<div class="tip" id="fs96">val a : &#39;a18</div>
<div class="tip" id="fs97">val f : &#39;a19</div>
<div class="tip" id="fs98">member AwaitableBuilder.Bind : t:&#39;a15 * f:&#39;a16 -&gt; &#39;a17<br /><br />Full name: Script.AwaitableBuilder.Bind</div>
<div class="tip" id="fs99">val t : &#39;a15</div>
<div class="tip" id="fs100">val f : &#39;a16</div>
<div class="tip" id="fs101">member AwaitableBuilder.Delay : f:&#39;a13 -&gt; &#39;a14<br /><br />Full name: Script.AwaitableBuilder.Delay</div>
<div class="tip" id="fs102">val f : &#39;a13</div>
<div class="tip" id="fs103">member AwaitableBuilder.Return : x:&#39;a12 -&gt; obj<br /><br />Full name: Script.AwaitableBuilder.Return</div>
<div class="tip" id="fs104">val x : &#39;a12</div>
<div class="tip" id="fs105">member AwaitableBuilder.ReturnFrom : x:&#39;a11 -&gt; &#39;a11<br /><br />Full name: Script.AwaitableBuilder.ReturnFrom</div>
<div class="tip" id="fs106">val x : &#39;a11</div>
<div class="tip" id="fs107">member AwaitableBuilder.ReturnFrom : a:&#39;a9 -&gt; &#39;a10<br /><br />Full name: Script.AwaitableBuilder.ReturnFrom</div>
<div class="tip" id="fs108">val a : &#39;a9</div>
<div class="tip" id="fs109">member AwaitableBuilder.ReturnFrom : t:&#39;a7 -&gt; &#39;a8<br /><br />Full name: Script.AwaitableBuilder.ReturnFrom</div>
<div class="tip" id="fs110">val t : &#39;a7</div>
<div class="tip" id="fs111">member AwaitableBuilder.Zero : unit -&gt; &#39;a6<br /><br />Full name: Script.AwaitableBuilder.Zero</div>
<div class="tip" id="fs112">member AwaitableBuilder.Combine : a:&#39;a3 * b:&#39;a4 -&gt; &#39;a5<br /><br />Full name: Script.AwaitableBuilder.Combine</div>
<div class="tip" id="fs113">val a : &#39;a3</div>
<div class="tip" id="fs114">val b : &#39;a4</div>
<div class="tip" id="fs115">member AwaitableBuilder.Combine : a:&#39;t * b:&#39;a1 -&gt; &#39;a2<br /><br />Full name: Script.AwaitableBuilder.Combine</div>
<div class="tip" id="fs116">val a : &#39;t</div>
<div class="tip" id="fs117">val b : &#39;a1</div>
<div class="tip" id="fs118">member AwaitableBuilder.Combine : a:&#39;q * b:&#39;r -&gt; &#39;s<br /><br />Full name: Script.AwaitableBuilder.Combine</div>
<div class="tip" id="fs119">val a : &#39;q</div>
<div class="tip" id="fs120">val b : &#39;r</div>
<div class="tip" id="fs121">member AwaitableBuilder.While : g:(unit -&gt; bool) * a:&#39;o -&gt; &#39;p<br /><br />Full name: Script.AwaitableBuilder.While</div>
<div class="tip" id="fs122">val g : (unit -&gt; bool)</div>
<div class="tip" id="fs123">val a : &#39;o</div>
<div class="tip" id="fs124">member AwaitableBuilder.For : s:seq&lt;&#39;l&gt; * f:(&#39;l -&gt; &#39;m) -&gt; &#39;n<br /><br />Full name: Script.AwaitableBuilder.For</div>
<div class="tip" id="fs125">val s : seq&lt;&#39;l&gt;</div>
<div class="tip" id="fs126">val f : (&#39;l -&gt; &#39;m)</div>
<div class="tip" id="fs127">member AwaitableBuilder.TryWith : f:(unit -&gt; obj) * c:(exn -&gt; obj) -&gt; &#39;k<br /><br />Full name: Script.AwaitableBuilder.TryWith</div>
<div class="tip" id="fs128">val c : (exn -&gt; obj)</div>
<div class="tip" id="fs129">member AwaitableBuilder.TryFinally : f:(unit -&gt; obj) * fin:(unit -&gt; unit) -&gt; &#39;j<br /><br />Full name: Script.AwaitableBuilder.TryFinally</div>
<div class="tip" id="fs130">member AwaitableBuilder.Using : d:&#39;g * f:(&#39;g -&gt; &#39;h) -&gt; &#39;i (requires &#39;g :&gt; IDisposable)<br /><br />Full name: Script.AwaitableBuilder.Using</div>
<div class="tip" id="fs131">val d : #IDisposable</div>
<div class="tip" id="fs132">val f : (#IDisposable -&gt; &#39;h)</div>
<div class="tip" id="fs133">member AwaitableBuilder.Using : d:&#39;d * f:(&#39;d -&gt; &#39;e) -&gt; &#39;f (requires &#39;d :&gt; IDisposable)<br /><br />Full name: Script.AwaitableBuilder.Using</div>
<div class="tip" id="fs134">val f : (#IDisposable -&gt; &#39;e)</div>
<div class="tip" id="fs135">member AwaitableBuilder.Using : d:&#39;a * f:(&#39;a -&gt; &#39;b) -&gt; &#39;c (requires &#39;a :&gt; IDisposable)<br /><br />Full name: Script.AwaitableBuilder.Using</div>
<div class="tip" id="fs136">val f : (#IDisposable -&gt; &#39;b)</div>
<div class="tip" id="fs137">Multiple items<br />type AutoOpenAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AutoOpenAttribute<br />&#160;&#160;new : path:string -&gt; AutoOpenAttribute<br />&#160;&#160;member Path : string<br /><br />Full name: Microsoft.FSharp.Core.AutoOpenAttribute<br /><br />--------------------<br />new : unit -&gt; AutoOpenAttribute<br />new : path:string -&gt; AutoOpenAttribute</div>
<div class="tip" id="fs138">val await : AwaitableBuilder<br /><br />Full name: Script.AwaitableBuilderModule.await</div>
<div class="tip" id="fs139">val awaitable : obj<br /><br />Full name: Script.awaitable</div>
<div class="tip" id="fs140">val asyncValue : &#39;a (requires member ( * ))</div>
<div class="tip" id="fs141">val taskValue : &#39;a (requires member ( * ))</div>
<div class="tip" id="fs142">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>

