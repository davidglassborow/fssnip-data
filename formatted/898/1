<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span class="t">Validation</span> <span class="o">=</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">Quotations</span>

    <span class="k">type</span> <span class="o">&#39;</span><span class="i">e</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">Test</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="p">Test</span> <span class="k">of</span> (<span class="o">&#39;</span><span class="i">e</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">string</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="t">string</span>) <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="t">option</span>) 
   
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="f">CreateValidator</span> (<span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="f">f</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">e</span> <span class="k">-&gt;</span> (<span class="o">&#39;</span><span class="i">e</span> <span onmouseout="hideTip(event, 'fs5', 12)" onmouseover="showTip(event, 'fs5', 12)" class="t">Test</span> <span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="t">list</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">e</span> <span onmouseout="hideTip(event, 'fs5', 14)" onmouseover="showTip(event, 'fs5', 14)" class="t">Test</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="t">list</span>)) <span class="o">=</span>  
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="i">entries</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 17)" onmouseover="showTip(event, 'fs9', 17)" class="f">f</span> <span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="t">Unchecked</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="i">defaultof</span><span class="o">&lt;</span>_<span class="o">&gt;</span> []
        <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="i">entity</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="f">choose</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs5', 23)" onmouseover="showTip(event, 'fs5', 23)" class="p">Test</span> <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="f">test</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs17', 25)" onmouseover="showTip(event, 'fs17', 25)" class="f">test</span> <span onmouseout="hideTip(event, 'fs14', 26)" onmouseover="showTip(event, 'fs14', 26)" class="i">entity</span>) <span onmouseout="hideTip(event, 'fs11', 27)" onmouseover="showTip(event, 'fs11', 27)" class="i">entries</span>

    <span class="k">let</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="f">add</span> (<span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="i">propQ</span><span class="o">:</span><span class="o">&#39;</span><span class="i">x</span> <span onmouseout="hideTip(event, 'fs20', 30)" onmouseover="showTip(event, 'fs20', 30)" class="t">Expr</span>) <span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="i">args</span> <span onmouseout="hideTip(event, 'fs22', 32)" onmouseover="showTip(event, 'fs22', 32)" class="i">message</span> <span onmouseout="hideTip(event, 'fs23', 33)" onmouseover="showTip(event, 'fs23', 33)" class="f">fx</span> (<span onmouseout="hideTip(event, 'fs24', 34)" onmouseover="showTip(event, 'fs24', 34)" class="i">xs</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">e</span> <span onmouseout="hideTip(event, 'fs5', 35)" onmouseover="showTip(event, 'fs5', 35)" class="t">Test</span> <span onmouseout="hideTip(event, 'fs10', 36)" onmouseover="showTip(event, 'fs10', 36)" class="t">list</span>) <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 37)" onmouseover="showTip(event, 'fs25', 37)" class="i">propName</span>, <span onmouseout="hideTip(event, 'fs26', 38)" onmouseover="showTip(event, 'fs26', 38)" class="f">eval</span> <span class="o">=</span>
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs19', 39)" onmouseover="showTip(event, 'fs19', 39)" class="i">propQ</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs27', 40)" onmouseover="showTip(event, 'fs27', 40)" class="t">Patterns</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 41)" onmouseover="showTip(event, 'fs28', 41)" class="p">PropertyGet</span> (_,<span onmouseout="hideTip(event, 'fs29', 42)" onmouseover="showTip(event, 'fs29', 42)" class="i">p</span>,_) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs29', 43)" onmouseover="showTip(event, 'fs29', 43)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 44)" onmouseover="showTip(event, 'fs30', 44)" class="i">Name</span>, <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs31', 45)" onmouseover="showTip(event, 'fs31', 45)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs29', 46)" onmouseover="showTip(event, 'fs29', 46)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 47)" onmouseover="showTip(event, 'fs32', 47)" class="f">GetValue</span>(<span onmouseout="hideTip(event, 'fs31', 48)" onmouseover="showTip(event, 'fs31', 48)" class="i">x</span>,[||])
            | <span onmouseout="hideTip(event, 'fs27', 49)" onmouseover="showTip(event, 'fs27', 49)" class="t">Patterns</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 50)" onmouseover="showTip(event, 'fs33', 50)" class="p">Value</span> (_, <span onmouseout="hideTip(event, 'fs34', 51)" onmouseover="showTip(event, 'fs34', 51)" class="i">ty</span>) <span class="k">when</span> <span onmouseout="hideTip(event, 'fs34', 52)" onmouseover="showTip(event, 'fs34', 52)" class="i">ty</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs35', 53)" onmouseover="showTip(event, 'fs35', 53)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">e</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span class="s">&quot;x&quot;</span>, <span onmouseout="hideTip(event, 'fs36', 54)" onmouseover="showTip(event, 'fs36', 54)" class="f">box</span> 
            | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs37', 55)" onmouseover="showTip(event, 'fs37', 55)" class="f">failwith</span> <span class="s">&quot;Unsupported expression&quot;</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 56)" onmouseover="showTip(event, 'fs17', 56)" class="f">test</span> <span onmouseout="hideTip(event, 'fs14', 57)" onmouseover="showTip(event, 'fs14', 57)" class="i">entity</span> <span class="o">=</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 58)" onmouseover="showTip(event, 'fs38', 58)" class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 59)" onmouseover="showTip(event, 'fs26', 59)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs14', 60)" onmouseover="showTip(event, 'fs14', 60)" class="i">entity</span>
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs23', 61)" onmouseover="showTip(event, 'fs23', 61)" class="f">fx</span> (<span onmouseout="hideTip(event, 'fs39', 62)" onmouseover="showTip(event, 'fs39', 62)" class="f">unbox</span> <span onmouseout="hideTip(event, 'fs38', 63)" onmouseover="showTip(event, 'fs38', 63)" class="i">value</span>) <span class="k">then</span> <span onmouseout="hideTip(event, 'fs40', 64)" onmouseover="showTip(event, 'fs40', 64)" class="p">None</span>
            <span class="k">else</span>  <span onmouseout="hideTip(event, 'fs41', 65)" onmouseover="showTip(event, 'fs41', 65)" class="p">Some</span> (<span onmouseout="hideTip(event, 'fs25', 66)" onmouseover="showTip(event, 'fs25', 66)" class="i">propName</span>, <span onmouseout="hideTip(event, 'fs42', 67)" onmouseover="showTip(event, 'fs42', 67)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 68)" onmouseover="showTip(event, 'fs43', 68)" class="f">Format</span>(<span onmouseout="hideTip(event, 'fs22', 69)" onmouseover="showTip(event, 'fs22', 69)" class="i">message</span>, <span onmouseout="hideTip(event, 'fs44', 70)" onmouseover="showTip(event, 'fs44', 70)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 71)" onmouseover="showTip(event, 'fs45', 71)" class="f">ofList</span> (<span onmouseout="hideTip(event, 'fs38', 72)" onmouseover="showTip(event, 'fs38', 72)" class="i">value</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs21', 73)" onmouseover="showTip(event, 'fs21', 73)" class="i">args</span>)))
        <span onmouseout="hideTip(event, 'fs5', 74)" onmouseover="showTip(event, 'fs5', 74)" class="p">Test</span>(<span onmouseout="hideTip(event, 'fs17', 75)" onmouseover="showTip(event, 'fs17', 75)" class="f">test</span>) <span class="o">::</span> <span onmouseout="hideTip(event, 'fs24', 76)" onmouseover="showTip(event, 'fs24', 76)" class="i">xs</span>
    
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 77)" onmouseover="showTip(event, 'fs46', 77)" class="f">email</span> <span onmouseout="hideTip(event, 'fs47', 78)" onmouseover="showTip(event, 'fs47', 78)" class="i">propQ</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 79)" onmouseover="showTip(event, 'fs48', 79)" class="i">regex</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 80)" onmouseover="showTip(event, 'fs49', 80)" class="i">Text</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 81)" onmouseover="showTip(event, 'fs50', 81)" class="i">RegularExpressions</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 82)" onmouseover="showTip(event, 'fs51', 82)" class="t">Regex</span>(<span class="s">@&quot;\w+([-+.&#39;]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*&quot;</span>)
        <span onmouseout="hideTip(event, 'fs18', 83)" onmouseover="showTip(event, 'fs18', 83)" class="f">add</span> <span onmouseout="hideTip(event, 'fs47', 84)" onmouseover="showTip(event, 'fs47', 84)" class="i">propQ</span> [] <span class="s">&quot;Please enter a valid email address&quot;</span> <span onmouseout="hideTip(event, 'fs48', 85)" onmouseover="showTip(event, 'fs48', 85)" class="i">regex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 86)" onmouseover="showTip(event, 'fs52', 86)" class="f">IsMatch</span>
         
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 87)" onmouseover="showTip(event, 'fs53', 87)" class="f">required</span> <span onmouseout="hideTip(event, 'fs47', 88)" onmouseover="showTip(event, 'fs47', 88)" class="i">propQ</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs18', 89)" onmouseover="showTip(event, 'fs18', 89)" class="f">add</span> <span onmouseout="hideTip(event, 'fs47', 90)" onmouseover="showTip(event, 'fs47', 90)" class="i">propQ</span> [] <span class="s">&quot;Is a required field&quot;</span> (<span onmouseout="hideTip(event, 'fs42', 91)" onmouseover="showTip(event, 'fs42', 91)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs54', 92)" onmouseover="showTip(event, 'fs54', 92)" class="f">IsNullOrWhiteSpace</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs55', 93)" onmouseover="showTip(event, 'fs55', 93)" class="f">not</span>)
    
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 94)" onmouseover="showTip(event, 'fs56', 94)" class="f">between</span> <span onmouseout="hideTip(event, 'fs47', 95)" onmouseover="showTip(event, 'fs47', 95)" class="i">propQ</span> <span onmouseout="hideTip(event, 'fs57', 96)" onmouseover="showTip(event, 'fs57', 96)" class="i">min</span> <span onmouseout="hideTip(event, 'fs58', 97)" onmouseover="showTip(event, 'fs58', 97)" class="i">max</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs18', 98)" onmouseover="showTip(event, 'fs18', 98)" class="f">add</span> <span onmouseout="hideTip(event, 'fs47', 99)" onmouseover="showTip(event, 'fs47', 99)" class="i">propQ</span> [<span onmouseout="hideTip(event, 'fs36', 100)" onmouseover="showTip(event, 'fs36', 100)" class="f">box</span> <span onmouseout="hideTip(event, 'fs57', 101)" onmouseover="showTip(event, 'fs57', 101)" class="i">min</span>; <span onmouseout="hideTip(event, 'fs36', 102)" onmouseover="showTip(event, 'fs36', 102)" class="f">box</span> <span onmouseout="hideTip(event, 'fs58', 103)" onmouseover="showTip(event, 'fs58', 103)" class="i">max</span>] <span class="s">&quot;Must be at least {2} and great {1}&quot;</span>  
            (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs59', 104)" onmouseover="showTip(event, 'fs59', 104)" class="i">v</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs59', 105)" onmouseover="showTip(event, 'fs59', 105)" class="i">v</span> <span class="o">&gt;</span><span class="o">=</span> <span onmouseout="hideTip(event, 'fs57', 106)" onmouseover="showTip(event, 'fs57', 106)" class="i">min</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs59', 107)" onmouseover="showTip(event, 'fs59', 107)" class="i">v</span> <span class="o">&lt;=</span> <span onmouseout="hideTip(event, 'fs58', 108)" onmouseover="showTip(event, 'fs58', 108)" class="i">max</span>)
    
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 109)" onmouseover="showTip(event, 'fs60', 109)" class="f">cardNumber</span> <span onmouseout="hideTip(event, 'fs47', 110)" onmouseover="showTip(event, 'fs47', 110)" class="i">propQ</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs18', 111)" onmouseover="showTip(event, 'fs18', 111)" class="f">add</span> <span onmouseout="hideTip(event, 'fs47', 112)" onmouseover="showTip(event, 'fs47', 112)" class="i">propQ</span> [] <span class="s">&quot;Invlid card number&quot;</span> <span class="o">&lt;|</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs61', 113)" onmouseover="showTip(event, 'fs61', 113)" class="i">value</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 114)" onmouseover="showTip(event, 'fs6', 114)" class="t">string</span>) <span class="k">-&gt;</span> 
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs62', 115)" onmouseover="showTip(event, 'fs62', 115)" class="f">checkSum</span> <span onmouseout="hideTip(event, 'fs63', 116)" onmouseover="showTip(event, 'fs63', 116)" class="i">index</span> <span onmouseout="hideTip(event, 'fs64', 117)" onmouseover="showTip(event, 'fs64', 117)" class="i">digit</span> <span class="o">=</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs65', 118)" onmouseover="showTip(event, 'fs65', 118)" class="i">v</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs66', 119)" onmouseover="showTip(event, 'fs66', 119)" class="f">int</span> <span onmouseout="hideTip(event, 'fs64', 120)" onmouseover="showTip(event, 'fs64', 120)" class="i">digit</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs66', 121)" onmouseover="showTip(event, 'fs66', 121)" class="f">int</span> <span class="s">&#39;0&#39;</span>) <span class="o">*</span> (<span onmouseout="hideTip(event, 'fs63', 122)" onmouseover="showTip(event, 'fs63', 122)" class="i">index</span> <span class="o">%</span> <span class="n">2</span> <span class="o">+</span> <span class="n">1</span>)
                <span onmouseout="hideTip(event, 'fs65', 123)" onmouseover="showTip(event, 'fs65', 123)" class="i">v</span> <span class="o">%</span> <span class="n">10</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs65', 124)" onmouseover="showTip(event, 'fs65', 124)" class="i">v</span> <span class="o">/</span> <span class="n">10</span> <span class="o">%</span> <span class="n">10</span>
            <span onmouseout="hideTip(event, 'fs67', 125)" onmouseover="showTip(event, 'fs67', 125)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 126)" onmouseover="showTip(event, 'fs68', 126)" class="f">forall</span> <span onmouseout="hideTip(event, 'fs69', 127)" onmouseover="showTip(event, 'fs69', 127)" class="t">Char</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 128)" onmouseover="showTip(event, 'fs70', 128)" class="f">IsDigit</span> <span onmouseout="hideTip(event, 'fs61', 129)" onmouseover="showTip(event, 'fs61', 129)" class="i">value</span>
            <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs67', 130)" onmouseover="showTip(event, 'fs67', 130)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 131)" onmouseover="showTip(event, 'fs71', 131)" class="f">sum</span> (<span onmouseout="hideTip(event, 'fs67', 132)" onmouseover="showTip(event, 'fs67', 132)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 133)" onmouseover="showTip(event, 'fs72', 133)" class="f">mapi</span> <span onmouseout="hideTip(event, 'fs62', 134)" onmouseover="showTip(event, 'fs62', 134)" class="f">checkSum</span> <span onmouseout="hideTip(event, 'fs61', 135)" onmouseover="showTip(event, 'fs61', 135)" class="i">value</span>) <span class="o">%</span> <span class="n">10</span> <span class="o">=</span> <span class="n">0</span>   
 

<span class="c">// usage</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs73', 136)" onmouseover="showTip(event, 'fs73', 136)" class="i">Validation</span>
    
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs74', 137)" onmouseover="showTip(event, 'fs74', 137)" class="t">Account</span> <span class="o">=</span> 
    { <span onmouseout="hideTip(event, 'fs75', 138)" onmouseover="showTip(event, 'fs75', 138)" class="i">Email</span>      <span class="o">:</span> <span onmouseout="hideTip(event, 'fs76', 139)" onmouseover="showTip(event, 'fs76', 139)" class="t">string</span>
      <span onmouseout="hideTip(event, 'fs77', 140)" onmouseover="showTip(event, 'fs77', 140)" class="i">BirthYear</span>  <span class="o">:</span> <span onmouseout="hideTip(event, 'fs66', 141)" onmouseover="showTip(event, 'fs66', 141)" class="t">int</span>
      <span onmouseout="hideTip(event, 'fs78', 142)" onmouseover="showTip(event, 'fs78', 142)" class="i">CardNumber</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs76', 143)" onmouseover="showTip(event, 'fs76', 143)" class="t">string</span> }

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs79', 144)" onmouseover="showTip(event, 'fs79', 144)" class="f">validateAccount</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs8', 145)" onmouseover="showTip(event, 'fs8', 145)" class="f">CreateValidator</span> <span class="o">&lt;|</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs80', 146)" onmouseover="showTip(event, 'fs80', 146)" class="i">x</span> <span class="k">-&gt;</span> 
        <span onmouseout="hideTip(event, 'fs81', 147)" onmouseover="showTip(event, 'fs81', 147)" class="f">required</span>   &lt;@ <span onmouseout="hideTip(event, 'fs80', 148)" onmouseover="showTip(event, 'fs80', 148)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs75', 149)" onmouseover="showTip(event, 'fs75', 149)" class="i">Email</span> @&gt; <span class="o">&gt;</span><span class="o">&gt;</span>
        <span onmouseout="hideTip(event, 'fs82', 150)" onmouseover="showTip(event, 'fs82', 150)" class="f">email</span>      &lt;@ <span onmouseout="hideTip(event, 'fs80', 151)" onmouseover="showTip(event, 'fs80', 151)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs75', 152)" onmouseover="showTip(event, 'fs75', 152)" class="i">Email</span> @&gt; <span class="o">&gt;</span><span class="o">&gt;</span>
        <span onmouseout="hideTip(event, 'fs83', 153)" onmouseover="showTip(event, 'fs83', 153)" class="f">between</span>    &lt;@ <span onmouseout="hideTip(event, 'fs80', 154)" onmouseover="showTip(event, 'fs80', 154)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs77', 155)" onmouseover="showTip(event, 'fs77', 155)" class="i">BirthYear</span> @&gt; <span class="n">1920</span> <span class="n">2000</span> <span class="o">&gt;</span><span class="o">&gt;</span>
        <span onmouseout="hideTip(event, 'fs81', 156)" onmouseover="showTip(event, 'fs81', 156)" class="f">required</span>   &lt;@ <span onmouseout="hideTip(event, 'fs80', 157)" onmouseover="showTip(event, 'fs80', 157)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs78', 158)" onmouseover="showTip(event, 'fs78', 158)" class="i">CardNumber</span> @&gt; <span class="o">&gt;</span><span class="o">&gt;</span>
        <span onmouseout="hideTip(event, 'fs84', 159)" onmouseover="showTip(event, 'fs84', 159)" class="f">cardNumber</span> &lt;@ <span onmouseout="hideTip(event, 'fs80', 160)" onmouseover="showTip(event, 'fs80', 160)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs78', 161)" onmouseover="showTip(event, 'fs78', 161)" class="i">CardNumber</span> @&gt;

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs85', 162)" onmouseover="showTip(event, 'fs85', 162)" class="i">acc</span> <span class="o">=</span> { <span class="i">Email</span> <span class="o">=</span> <span class="s">&quot;example#mail.com&quot;</span>; <span class="i">BirthYear</span> <span class="o">=</span> <span class="n">2003</span>; <span class="i">CardNumber</span> <span class="o">=</span> <span class="s">&quot;&quot;</span> }
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs86', 163)" onmouseover="showTip(event, 'fs86', 163)" class="i">validResult</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs79', 164)" onmouseover="showTip(event, 'fs79', 164)" class="f">validateAccount</span> <span onmouseout="hideTip(event, 'fs85', 165)" onmouseover="showTip(event, 'fs85', 165)" class="i">acc</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace Microsoft</div>
<div class="tip" id="fs3">namespace Microsoft.FSharp</div>
<div class="tip" id="fs4">namespace Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs5">Multiple items<br />union case Test.Test: (&#39;e -&gt; (string * string) option) -&gt; &#39;e Test<br /><br />--------------------<br />type &#39;e Test = | Test of (&#39;e -&gt; (string * string) option)<br /><br />Full name: Script.Validation.Test&lt;_&gt;</div>
<div class="tip" id="fs6">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs7">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs8">val CreateValidator : f:(&#39;e -&gt; &#39;e Test list -&gt; &#39;e Test list) -&gt; (&#39;e -&gt; (string * string) list)<br /><br />Full name: Script.Validation.CreateValidator</div>
<div class="tip" id="fs9">val f : (&#39;e -&gt; &#39;e Test list -&gt; &#39;e Test list)</div>
<div class="tip" id="fs10">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs11">val entries : &#39;e Test list</div>
<div class="tip" id="fs12">module Unchecked<br /><br />from Microsoft.FSharp.Core.Operators</div>
<div class="tip" id="fs13">val defaultof&lt;&#39;T&gt; : &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.Unchecked.defaultof</div>
<div class="tip" id="fs14">val entity : &#39;e</div>
<div class="tip" id="fs15">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs16">val choose : chooser:(&#39;T -&gt; &#39;U option) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.choose</div>
<div class="tip" id="fs17">val test : (&#39;e -&gt; (string * string) option)</div>
<div class="tip" id="fs18">val private add : propQ:Expr&lt;&#39;x&gt; -&gt; args:obj list -&gt; message:string -&gt; fx:(&#39;a -&gt; bool) -&gt; xs:&#39;e Test list -&gt; &#39;e Test list<br /><br />Full name: Script.Validation.add</div>
<div class="tip" id="fs19">val propQ : Expr&lt;&#39;x&gt;</div>
<div class="tip" id="fs20">Multiple items<br />type Expr =<br />&#160;&#160;override Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetFreeVars : unit -&gt; seq&lt;Var&gt;<br />&#160;&#160;member Substitute : substitution:(Var -&gt; Expr option) -&gt; Expr<br />&#160;&#160;member ToString : full:bool -&gt; string<br />&#160;&#160;member CustomAttributes : Expr list<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member AddressOf : target:Expr -&gt; Expr<br />&#160;&#160;static member AddressSet : target:Expr * value:Expr -&gt; Expr<br />&#160;&#160;static member Application : functionExpr:Expr * argument:Expr -&gt; Expr<br />&#160;&#160;static member Applications : functionExpr:Expr * arguments:Expr list list -&gt; Expr<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Quotations.Expr<br /><br />--------------------<br />type Expr&lt;&#39;T&gt; =<br />&#160;&#160;inherit Expr<br />&#160;&#160;member Raw : Expr<br /><br />Full name: Microsoft.FSharp.Quotations.Expr&lt;_&gt;</div>
<div class="tip" id="fs21">val args : obj list</div>
<div class="tip" id="fs22">val message : string</div>
<div class="tip" id="fs23">val fx : (&#39;a -&gt; bool)</div>
<div class="tip" id="fs24">val xs : &#39;e Test list</div>
<div class="tip" id="fs25">val propName : string</div>
<div class="tip" id="fs26">val eval : (&#39;e -&gt; obj)</div>
<div class="tip" id="fs27">module Patterns<br /><br />from Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs28">active recognizer PropertyGet: Expr -&gt; (Expr option * Reflection.PropertyInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |PropertyGet|_| )</div>
<div class="tip" id="fs29">val p : Reflection.PropertyInfo</div>
<div class="tip" id="fs30">property Reflection.MemberInfo.Name: string</div>
<div class="tip" id="fs31">val x : &#39;e</div>
<div class="tip" id="fs32">Reflection.PropertyInfo.GetValue(obj: obj, index: obj []) : obj<br />Reflection.PropertyInfo.GetValue(obj: obj, invokeAttr: Reflection.BindingFlags, binder: Reflection.Binder, index: obj [], culture: Globalization.CultureInfo) : obj</div>
<div class="tip" id="fs33">active recognizer Value: Expr -&gt; (obj * Type) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Value|_| )</div>
<div class="tip" id="fs34">val ty : Type</div>
<div class="tip" id="fs35">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs36">val box : value:&#39;T -&gt; obj<br /><br />Full name: Microsoft.FSharp.Core.Operators.box</div>
<div class="tip" id="fs37">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs38">val value : obj</div>
<div class="tip" id="fs39">val unbox : value:obj -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.unbox</div>
<div class="tip" id="fs40">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs41">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs42">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs43">String.Format(format: string, [&lt;ParamArray&gt;] args: obj []) : string<br />String.Format(format: string, arg0: obj) : string<br />String.Format(provider: IFormatProvider, format: string, [&lt;ParamArray&gt;] args: obj []) : string<br />String.Format(format: string, arg0: obj, arg1: obj) : string<br />String.Format(format: string, arg0: obj, arg1: obj, arg2: obj) : string</div>
<div class="tip" id="fs44">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs45">val ofList : list:&#39;T list -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.ofList</div>
<div class="tip" id="fs46">val email : propQ:Expr&lt;&#39;a&gt; -&gt; (&#39;b Test list -&gt; &#39;b Test list)<br /><br />Full name: Script.Validation.email</div>
<div class="tip" id="fs47">val propQ : Expr&lt;&#39;a&gt;</div>
<div class="tip" id="fs48">val regex : Text.RegularExpressions.Regex</div>
<div class="tip" id="fs49">namespace System.Text</div>
<div class="tip" id="fs50">namespace System.Text.RegularExpressions</div>
<div class="tip" id="fs51">Multiple items<br />type Regex =<br />&#160;&#160;new : pattern:string -&gt; Regex + 1 overload<br />&#160;&#160;member GetGroupNames : unit -&gt; string[]<br />&#160;&#160;member GetGroupNumbers : unit -&gt; int[]<br />&#160;&#160;member GroupNameFromNumber : i:int -&gt; string<br />&#160;&#160;member GroupNumberFromName : name:string -&gt; int<br />&#160;&#160;member IsMatch : input:string -&gt; bool + 1 overload<br />&#160;&#160;member Match : input:string -&gt; Match + 2 overloads<br />&#160;&#160;member Matches : input:string -&gt; MatchCollection + 1 overload<br />&#160;&#160;member Options : RegexOptions<br />&#160;&#160;member Replace : input:string * replacement:string -&gt; string + 5 overloads<br />&#160;&#160;...<br /><br />Full name: System.Text.RegularExpressions.Regex<br /><br />--------------------<br />Text.RegularExpressions.Regex(pattern: string) : unit<br />Text.RegularExpressions.Regex(pattern: string, options: Text.RegularExpressions.RegexOptions) : unit</div>
<div class="tip" id="fs52">Text.RegularExpressions.Regex.IsMatch(input: string) : bool<br />Text.RegularExpressions.Regex.IsMatch(input: string, startat: int) : bool</div>
<div class="tip" id="fs53">val required : propQ:Expr&lt;&#39;a&gt; -&gt; (&#39;b Test list -&gt; &#39;b Test list)<br /><br />Full name: Script.Validation.required</div>
<div class="tip" id="fs54">String.IsNullOrWhiteSpace(value: string) : bool</div>
<div class="tip" id="fs55">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs56">val between : propQ:Expr&lt;&#39;a&gt; -&gt; min:&#39;b -&gt; max:&#39;b -&gt; (&#39;c Test list -&gt; &#39;c Test list) (requires comparison)<br /><br />Full name: Script.Validation.between</div>
<div class="tip" id="fs57">val min : &#39;b (requires comparison)</div>
<div class="tip" id="fs58">val max : &#39;b (requires comparison)</div>
<div class="tip" id="fs59">val v : &#39;b (requires comparison)</div>
<div class="tip" id="fs60">val cardNumber : propQ:Expr&lt;&#39;a&gt; -&gt; (&#39;b Test list -&gt; &#39;b Test list)<br /><br />Full name: Script.Validation.cardNumber</div>
<div class="tip" id="fs61">val value : string</div>
<div class="tip" id="fs62">val checkSum : (int -&gt; char -&gt; int)</div>
<div class="tip" id="fs63">val index : int</div>
<div class="tip" id="fs64">val digit : char</div>
<div class="tip" id="fs65">val v : int</div>
<div class="tip" id="fs66">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs67">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs68">val forall : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.Seq.forall</div>
<div class="tip" id="fs69">type Char =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 1 overload<br />&#160;&#160;&#160;&#160;static val MaxValue : char<br />&#160;&#160;&#160;&#160;static val MinValue : char<br />&#160;&#160;&#160;&#160;static member ConvertFromUtf32 : utf32:int -&gt; string<br />&#160;&#160;&#160;&#160;static member ConvertToUtf32 : highSurrogate:char * lowSurrogate:char -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;static member GetNumericValue : c:char -&gt; float + 1 overload<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Char</div>
<div class="tip" id="fs70">Char.IsDigit(c: char) : bool<br />Char.IsDigit(s: string, index: int) : bool</div>
<div class="tip" id="fs71">val sum : source:seq&lt;&#39;T&gt; -&gt; &#39;T (requires member ( + ) and member get_Zero)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.sum</div>
<div class="tip" id="fs72">val mapi : mapping:(int -&gt; &#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.mapi</div>
<div class="tip" id="fs73">module Validation<br /><br />from Script</div>
<div class="tip" id="fs74">type Account =<br />&#160;&#160;{Email: string;<br />&#160;&#160;&#160;BirthYear: int;<br />&#160;&#160;&#160;CardNumber: string;}<br /><br />Full name: Script.Account</div>
<div class="tip" id="fs75">Account.Email: string</div>
<div class="tip" id="fs76">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs77">Account.BirthYear: int</div>
<div class="tip" id="fs78">Account.CardNumber: string</div>
<div class="tip" id="fs79">val validateAccount : (Account -&gt; (string * string) list)<br /><br />Full name: Script.validateAccount</div>
<div class="tip" id="fs80">val x : Account</div>
<div class="tip" id="fs81">val required : propQ:Quotations.Expr&lt;&#39;a&gt; -&gt; (&#39;b Test list -&gt; &#39;b Test list)<br /><br />Full name: Script.Validation.required</div>
<div class="tip" id="fs82">val email : propQ:Quotations.Expr&lt;&#39;a&gt; -&gt; (&#39;b Test list -&gt; &#39;b Test list)<br /><br />Full name: Script.Validation.email</div>
<div class="tip" id="fs83">val between : propQ:Quotations.Expr&lt;&#39;a&gt; -&gt; min:&#39;b -&gt; max:&#39;b -&gt; (&#39;c Test list -&gt; &#39;c Test list) (requires comparison)<br /><br />Full name: Script.Validation.between</div>
<div class="tip" id="fs84">val cardNumber : propQ:Quotations.Expr&lt;&#39;a&gt; -&gt; (&#39;b Test list -&gt; &#39;b Test list)<br /><br />Full name: Script.Validation.cardNumber</div>
<div class="tip" id="fs85">val acc : Account<br /><br />Full name: Script.acc</div>
<div class="tip" id="fs86">val validResult : (string * string) list<br /><br />Full name: Script.validResult</div>

