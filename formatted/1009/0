<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">//simple factorial</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">factorial</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">n</span> <span class="o">=</span> 
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">n</span> <span class="o">=</span> <span class="n">0I</span> <span class="k">then</span> <span class="n">1I</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs2', 4)" onmouseover="showTip(event, 'fs2', 4)" class="i">n</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs1', 5)" onmouseover="showTip(event, 'fs1', 5)" class="f">factorial</span> (<span onmouseout="hideTip(event, 'fs2', 6)" onmouseover="showTip(event, 'fs2', 6)" class="i">n</span><span class="o">-</span><span class="n">1I</span>)
<span onmouseout="hideTip(event, 'fs1', 7)" onmouseover="showTip(event, 'fs1', 7)" class="f">factorial</span> <span class="n">10I</span>


<span class="c">//tied and untied factorial - equivalent to simple recursion</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs3', 8)" onmouseover="showTip(event, 'fs3', 8)" class="f">factorialu</span> <span onmouseout="hideTip(event, 'fs4', 9)" onmouseover="showTip(event, 'fs4', 9)" class="f">factorial&#39;</span> <span onmouseout="hideTip(event, 'fs2', 10)" onmouseover="showTip(event, 'fs2', 10)" class="i">n</span> <span class="o">=</span> 
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs2', 11)" onmouseover="showTip(event, 'fs2', 11)" class="i">n</span> <span class="o">=</span> <span class="n">0I</span> <span class="k">then</span> <span class="n">1I</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs2', 12)" onmouseover="showTip(event, 'fs2', 12)" class="i">n</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs4', 13)" onmouseover="showTip(event, 'fs4', 13)" class="f">factorial&#39;</span> (<span onmouseout="hideTip(event, 'fs2', 14)" onmouseover="showTip(event, 'fs2', 14)" class="i">n</span><span class="o">-</span><span class="n">1I</span>)

<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs5', 15)" onmouseover="showTip(event, 'fs5', 15)" class="f">y</span> <span onmouseout="hideTip(event, 'fs6', 16)" onmouseover="showTip(event, 'fs6', 16)" class="f">f</span> <span onmouseout="hideTip(event, 'fs7', 17)" onmouseover="showTip(event, 'fs7', 17)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 18)" onmouseover="showTip(event, 'fs6', 18)" class="f">f</span>  (<span onmouseout="hideTip(event, 'fs5', 19)" onmouseover="showTip(event, 'fs5', 19)" class="f">y</span> <span onmouseout="hideTip(event, 'fs6', 20)" onmouseover="showTip(event, 'fs6', 20)" class="f">f</span> ) <span onmouseout="hideTip(event, 'fs7', 21)" onmouseover="showTip(event, 'fs7', 21)" class="i">x</span>
<span onmouseout="hideTip(event, 'fs5', 22)" onmouseover="showTip(event, 'fs5', 22)" class="f">y</span> <span onmouseout="hideTip(event, 'fs3', 23)" onmouseover="showTip(event, 'fs3', 23)" class="f">factorialu</span> <span class="n">10I</span> 

<span class="c">//dynamic programming</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs8', 24)" onmouseover="showTip(event, 'fs8', 24)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 25)" onmouseover="showTip(event, 'fs9', 25)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 26)" onmouseover="showTip(event, 'fs10', 26)" class="i">Generic</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 27)" onmouseover="showTip(event, 'fs11', 27)" class="f">memoize</span> (<span onmouseout="hideTip(event, 'fs12', 28)" onmouseover="showTip(event, 'fs12', 28)" class="i">d</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs13', 29)" onmouseover="showTip(event, 'fs13', 29)" class="t">Dictionary</span><span class="o">&lt;</span>_,_<span class="o">&gt;</span>) <span onmouseout="hideTip(event, 'fs14', 30)" onmouseover="showTip(event, 'fs14', 30)" class="f">f</span> <span onmouseout="hideTip(event, 'fs15', 31)" onmouseover="showTip(event, 'fs15', 31)" class="i">n</span> <span class="o">=</span> 
   <span class="k">if</span> <span onmouseout="hideTip(event, 'fs12', 32)" onmouseover="showTip(event, 'fs12', 32)" class="i">d</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 33)" onmouseover="showTip(event, 'fs16', 33)" class="f">ContainsKey</span> <span onmouseout="hideTip(event, 'fs15', 34)" onmouseover="showTip(event, 'fs15', 34)" class="i">n</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs12', 35)" onmouseover="showTip(event, 'fs12', 35)" class="i">d</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs15', 36)" onmouseover="showTip(event, 'fs15', 36)" class="i">n</span>] 
   <span class="k">else</span> <span onmouseout="hideTip(event, 'fs8', 37)" onmouseover="showTip(event, 'fs8', 37)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 38)" onmouseover="showTip(event, 'fs17', 38)" class="i">Threading</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 39)" onmouseover="showTip(event, 'fs18', 39)" class="t">Thread</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 40)" onmouseover="showTip(event, 'fs19', 40)" class="f">Sleep</span>(<span class="n">10</span>) <span class="c">// to slow down</span>
        <span onmouseout="hideTip(event, 'fs12', 41)" onmouseover="showTip(event, 'fs12', 41)" class="i">d</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 42)" onmouseover="showTip(event, 'fs20', 42)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs15', 43)" onmouseover="showTip(event, 'fs15', 43)" class="i">n</span>, <span onmouseout="hideTip(event, 'fs14', 44)" onmouseover="showTip(event, 'fs14', 44)" class="f">f</span> <span onmouseout="hideTip(event, 'fs15', 45)" onmouseover="showTip(event, 'fs15', 45)" class="i">n</span>)
        <span onmouseout="hideTip(event, 'fs12', 46)" onmouseover="showTip(event, 'fs12', 46)" class="i">d</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs15', 47)" onmouseover="showTip(event, 'fs15', 47)" class="i">n</span>]

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 48)" onmouseover="showTip(event, 'fs21', 48)" class="f">factorialdp</span>  <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 49)" onmouseover="showTip(event, 'fs22', 49)" class="i">d</span> <span class="o">=</span>  <span onmouseout="hideTip(event, 'fs13', 50)" onmouseover="showTip(event, 'fs13', 50)" class="t">Dictionary</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs23', 51)" onmouseover="showTip(event, 'fs23', 51)" class="t">bigint</span>, <span onmouseout="hideTip(event, 'fs23', 52)" onmouseover="showTip(event, 'fs23', 52)" class="t">bigint</span><span class="o">&gt;</span>()<span class="c">// Seq.empty</span>
    <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs2', 53)" onmouseover="showTip(event, 'fs2', 53)" class="i">n</span> <span class="k">-&gt;</span>  
        <span onmouseout="hideTip(event, 'fs5', 54)" onmouseover="showTip(event, 'fs5', 54)" class="f">y</span> (<span onmouseout="hideTip(event, 'fs3', 55)" onmouseover="showTip(event, 'fs3', 55)" class="f">factorialu</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs24', 56)" onmouseover="showTip(event, 'fs24', 56)" class="f">f</span> <span onmouseout="hideTip(event, 'fs2', 57)" onmouseover="showTip(event, 'fs2', 57)" class="i">n</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 58)" onmouseover="showTip(event, 'fs11', 58)" class="f">memoize</span> <span onmouseout="hideTip(event, 'fs22', 59)" onmouseover="showTip(event, 'fs22', 59)" class="i">d</span> <span onmouseout="hideTip(event, 'fs24', 60)" onmouseover="showTip(event, 'fs24', 60)" class="f">f</span> <span onmouseout="hideTip(event, 'fs2', 61)" onmouseover="showTip(event, 'fs2', 61)" class="i">n</span> ) <span onmouseout="hideTip(event, 'fs2', 62)" onmouseover="showTip(event, 'fs2', 62)" class="i">n</span>
    
<span class="prep">#time</span>
<span onmouseout="hideTip(event, 'fs21', 63)" onmouseover="showTip(event, 'fs21', 63)" class="f">factorialdp</span> <span class="n">15I</span>  <span class="c">//242 ms</span>

<span onmouseout="hideTip(event, 'fs21', 64)" onmouseover="showTip(event, 'fs21', 64)" class="f">factorialdp</span> <span class="n">15I</span>  <span class="c">//0 ms</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val factorial : n:System.Numerics.BigInteger -&gt; System.Numerics.BigInteger<br /><br />Full name: Script.factorial</div>
<div class="tip" id="fs2">val n : System.Numerics.BigInteger</div>
<div class="tip" id="fs3">val factorialu : factorial&#39;:(System.Numerics.BigInteger -&gt; System.Numerics.BigInteger) -&gt; n:System.Numerics.BigInteger -&gt; System.Numerics.BigInteger<br /><br />Full name: Script.factorialu</div>
<div class="tip" id="fs4">val factorial&#39; : (System.Numerics.BigInteger -&gt; System.Numerics.BigInteger)</div>
<div class="tip" id="fs5">val y : f:((&#39;a -&gt; &#39;b) -&gt; &#39;a -&gt; &#39;b) -&gt; x:&#39;a -&gt; &#39;b<br /><br />Full name: Script.y</div>
<div class="tip" id="fs6">val f : ((&#39;a -&gt; &#39;b) -&gt; &#39;a -&gt; &#39;b)</div>
<div class="tip" id="fs7">val x : &#39;a</div>
<div class="tip" id="fs8">namespace System</div>
<div class="tip" id="fs9">namespace System.Collections</div>
<div class="tip" id="fs10">namespace System.Collections.Generic</div>
<div class="tip" id="fs11">val memoize : d:Dictionary&lt;&#39;a,&#39;b&gt; -&gt; f:(&#39;a -&gt; &#39;b) -&gt; n:&#39;a -&gt; &#39;b<br /><br />Full name: Script.memoize</div>
<div class="tip" id="fs12">val d : Dictionary&lt;&#39;a,&#39;b&gt;</div>
<div class="tip" id="fs13">Multiple items<br />type Dictionary&lt;&#39;TKey,&#39;TValue&gt; =<br />&#160;&#160;new : unit -&gt; Dictionary&lt;&#39;TKey, &#39;TValue&gt; + 5 overloads<br />&#160;&#160;member Add : key:&#39;TKey * value:&#39;TValue -&gt; unit<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Comparer : IEqualityComparer&lt;&#39;TKey&gt;<br />&#160;&#160;member ContainsKey : key:&#39;TKey -&gt; bool<br />&#160;&#160;member ContainsValue : value:&#39;TValue -&gt; bool<br />&#160;&#160;member Count : int<br />&#160;&#160;member GetEnumerator : unit -&gt; Enumerator&lt;&#39;TKey, &#39;TValue&gt;<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;member Item : &#39;TKey -&gt; &#39;TValue with get, set<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br />&#160;&#160;nested type KeyCollection<br />&#160;&#160;nested type ValueCollection<br /><br />Full name: System.Collections.Generic.Dictionary&lt;_,_&gt;<br /><br />--------------------<br />Dictionary() : unit<br />Dictionary(capacity: int) : unit<br />Dictionary(comparer: IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Dictionary(dictionary: IDictionary&lt;&#39;TKey,&#39;TValue&gt;) : unit<br />Dictionary(capacity: int, comparer: IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Dictionary(dictionary: IDictionary&lt;&#39;TKey,&#39;TValue&gt;, comparer: IEqualityComparer&lt;&#39;TKey&gt;) : unit</div>
<div class="tip" id="fs14">val f : (&#39;a -&gt; &#39;b)</div>
<div class="tip" id="fs15">val n : &#39;a</div>
<div class="tip" id="fs16">Dictionary.ContainsKey(key: &#39;a) : bool</div>
<div class="tip" id="fs17">namespace System.Threading</div>
<div class="tip" id="fs18">Multiple items<br />type Thread =<br />&#160;&#160;inherit CriticalFinalizerObject<br />&#160;&#160;new : start:ThreadStart -&gt; Thread + 3 overloads<br />&#160;&#160;member Abort : unit -&gt; unit + 1 overload<br />&#160;&#160;member ApartmentState : ApartmentState with get, set<br />&#160;&#160;member CurrentCulture : CultureInfo with get, set<br />&#160;&#160;member CurrentUICulture : CultureInfo with get, set<br />&#160;&#160;member DisableComObjectEagerCleanup : unit -&gt; unit<br />&#160;&#160;member ExecutionContext : ExecutionContext<br />&#160;&#160;member GetApartmentState : unit -&gt; ApartmentState<br />&#160;&#160;member GetCompressedStack : unit -&gt; CompressedStack<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.Threading.Thread<br /><br />--------------------<br />System.Threading.Thread(start: System.Threading.ThreadStart) : unit<br />System.Threading.Thread(start: System.Threading.ParameterizedThreadStart) : unit<br />System.Threading.Thread(start: System.Threading.ThreadStart, maxStackSize: int) : unit<br />System.Threading.Thread(start: System.Threading.ParameterizedThreadStart, maxStackSize: int) : unit</div>
<div class="tip" id="fs19">System.Threading.Thread.Sleep(timeout: System.TimeSpan) : unit<br />System.Threading.Thread.Sleep(millisecondsTimeout: int) : unit</div>
<div class="tip" id="fs20">Dictionary.Add(key: &#39;a, value: &#39;b) : unit</div>
<div class="tip" id="fs21">val factorialdp : (System.Numerics.BigInteger -&gt; System.Numerics.BigInteger)<br /><br />Full name: Script.factorialdp</div>
<div class="tip" id="fs22">val d : Dictionary&lt;bigint,bigint&gt;</div>
<div class="tip" id="fs23">type bigint = System.Numerics.BigInteger<br /><br />Full name: Microsoft.FSharp.Core.bigint</div>
<div class="tip" id="fs24">val f : (System.Numerics.BigInteger -&gt; System.Numerics.BigInteger)</div>

