<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Program</span>

<span class="k">open</span> <span class="i">Varak</span>
<span class="k">open</span> <span class="i">Varak</span><span class="o">.</span><span class="i">UI</span>
<span class="k">open</span> <span class="i">Varak</span><span class="o">.</span><span class="i">UI</span><span class="o">.</span><span class="i">GLTools</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>


<span class="c">/// Will be called after OpenGL setup but before rendering</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">init</span> (<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">rWin</span> <span class="o">:</span> <span class="i">RenderWindow</span>) <span class="o">=</span>
    <span class="c">// Premultiplied alpha and y-flip are assumed in images.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">texA</span> <span class="o">=</span> <span class="i">Texture</span><span class="o">.</span><span class="i">FromFilePA</span> <span class="s">&quot;myTex.png&quot;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">texB</span> <span class="o">=</span> <span class="i">Texture</span><span class="o">.</span><span class="i">FromFilePA</span> <span class="s">&quot;myOtherTex.png&quot;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="i">renderer</span> <span class="o">=</span> <span class="k">new</span> <span class="i">RectRenderer</span>()

    <span class="c">// A primitive viewer that just paints a texture over the whole view</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="f">makeTestViewer</span> <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="i">texture</span> <span class="o">=</span>
        { <span class="k">new</span> <span class="i">IView</span> <span class="k">with</span>
            <span class="k">member</span> <span class="i">v</span><span class="o">.</span><span class="i">Render</span> _ <span class="o">=</span> <span class="c">// Argument is view diagonal in isotropic coords</span>
                <span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="i">renderer</span><span class="o">.</span><span class="i">Render</span>(<span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="i">texture</span>, <span class="i">Rect</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">unit</span>, <span class="i">Mat</span><span class="o">.</span><span class="i">Id2d</span>) }
        <span class="o">|&gt;</span> <span class="i">ViewArea</span>

    <span class="c">// Dispose resources when a window is closed (OpenTK GameWindow feature)</span>
    <span onmouseout="hideTip(event, 'fs4', 13)" onmouseover="showTip(event, 'fs4', 13)" class="i">rWin</span><span class="o">.</span><span class="i">Unload</span><span class="o">.</span><span class="i">Add</span>(<span class="k">fun</span> _ <span class="k">-&gt;</span>
        <span class="i">dispose</span> <span onmouseout="hideTip(event, 'fs5', 14)" onmouseover="showTip(event, 'fs5', 14)" class="i">texA</span>
        <span class="i">dispose</span> <span onmouseout="hideTip(event, 'fs6', 15)" onmouseover="showTip(event, 'fs6', 15)" class="i">texB</span>
        <span class="i">dispose</span> <span onmouseout="hideTip(event, 'fs7', 16)" onmouseover="showTip(event, 'fs7', 16)" class="i">renderer</span>
    )

    <span class="c">// The initializer returns a ViewPartition object that can subdivide the main window.</span>
    <span class="c">// ViewPartitions are DU trees that can be used for window managers, split-screen etc.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">leftRect</span>, <span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="i">rightRect</span> <span class="o">=</span> <span class="i">Rect</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 19)" onmouseover="showTip(event, 'fs10', 19)" class="i">unit</span><span class="o">.</span><span class="i">SplitHorizontal</span> <span class="n">0.5</span>
    <span class="i">ViewDivision</span> [<span onmouseout="hideTip(event, 'fs11', 20)" onmouseover="showTip(event, 'fs11', 20)" class="i">leftRect</span>, <span onmouseout="hideTip(event, 'fs8', 21)" onmouseover="showTip(event, 'fs8', 21)" class="i">makeTestViewer</span> <span onmouseout="hideTip(event, 'fs5', 22)" onmouseover="showTip(event, 'fs5', 22)" class="i">texA</span>; <span onmouseout="hideTip(event, 'fs12', 23)" onmouseover="showTip(event, 'fs12', 23)" class="i">rightRect</span>, <span onmouseout="hideTip(event, 'fs8', 24)" onmouseover="showTip(event, 'fs8', 24)" class="i">makeTestViewer</span> <span onmouseout="hideTip(event, 'fs6', 25)" onmouseover="showTip(event, 'fs6', 25)" class="i">texB</span>]


[&lt;<span onmouseout="hideTip(event, 'fs13', 26)" onmouseover="showTip(event, 'fs13', 26)" class="t">EntryPoint</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 27)" onmouseover="showTip(event, 'fs14', 27)" class="f">main</span> <span onmouseout="hideTip(event, 'fs15', 28)" onmouseover="showTip(event, 'fs15', 28)" class="i">argv</span> <span class="o">=</span>
    <span class="k">use</span> <span onmouseout="hideTip(event, 'fs16', 29)" onmouseover="showTip(event, 'fs16', 29)" class="i">main</span> <span class="o">=</span> <span class="k">new</span> <span class="i">RenderWindow</span>(<span onmouseout="hideTip(event, 'fs3', 30)" onmouseover="showTip(event, 'fs3', 30)" class="i">init</span>, <span class="n">1920</span>, <span class="n">1080</span>)
    <span onmouseout="hideTip(event, 'fs16', 31)" onmouseover="showTip(event, 'fs16', 31)" class="i">main</span><span class="o">.</span><span class="i">Run</span>() <span class="c">// You should now see a window split into two texturized areas.</span>
    <span class="n">0</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module Program</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">val init : rWin:&#39;a -&gt; &#39;b<br /><br />Full name: Program.init<br /><em><br /><br />&#160;Will be called after OpenGL setup but before rendering</em></div>
<div class="tip" id="fs4">val rWin : &#39;a</div>
<div class="tip" id="fs5">val texA : obj</div>
<div class="tip" id="fs6">val texB : obj</div>
<div class="tip" id="fs7">val renderer : obj</div>
<div class="tip" id="fs8">val makeTestViewer : (&#39;c -&gt; &#39;d)</div>
<div class="tip" id="fs9">val texture : &#39;c</div>
<div class="tip" id="fs10">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs11">val leftRect : obj</div>
<div class="tip" id="fs12">val rightRect : obj</div>
<div class="tip" id="fs13">Multiple items<br />type EntryPointAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; EntryPointAttribute<br /><br />Full name: Microsoft.FSharp.Core.EntryPointAttribute<br /><br />--------------------<br />new : unit -&gt; EntryPointAttribute</div>
<div class="tip" id="fs14">val main : argv:string [] -&gt; int<br /><br />Full name: Program.main</div>
<div class="tip" id="fs15">val argv : string []</div>
<div class="tip" id="fs16">val main : IDisposable</div>

