<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Net</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">Net</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">Sockets</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 7)" onmouseover="showTip(event, 'fs1', 7)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="i">Threading</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="t">Socket</span> <span class="k">with</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="i">socket</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="f">AsyncAccept</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="f">FromBeginEnd</span>(<span onmouseout="hideTip(event, 'fs6', 14)" onmouseover="showTip(event, 'fs6', 14)" class="i">socket</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="f">BeginAccept</span>, <span onmouseout="hideTip(event, 'fs6', 16)" onmouseover="showTip(event, 'fs6', 16)" class="i">socket</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="f">EndAccept</span>)
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs6', 18)" onmouseover="showTip(event, 'fs6', 18)" class="i">socket</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="f">AsyncReceive</span>(<span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="i">buffer</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="t">byte</span>[], <span class="o">?</span><span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="i">offset</span>, <span class="o">?</span><span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="i">count</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="i">offset</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="f">defaultArg</span> <span onmouseout="hideTip(event, 'fs17', 26)" onmouseover="showTip(event, 'fs17', 26)" class="i">offset</span> <span class="n">0</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 27)" onmouseover="showTip(event, 'fs19', 27)" class="i">count</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="f">defaultArg</span> <span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="i">count</span> <span onmouseout="hideTip(event, 'fs13', 30)" onmouseover="showTip(event, 'fs13', 30)" class="i">buffer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 31)" onmouseover="showTip(event, 'fs20', 31)" class="i">Length</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 32)" onmouseover="showTip(event, 'fs21', 32)" class="f">beginReceive</span>(<span onmouseout="hideTip(event, 'fs22', 33)" onmouseover="showTip(event, 'fs22', 33)" class="i">b</span>,<span onmouseout="hideTip(event, 'fs23', 34)" onmouseover="showTip(event, 'fs23', 34)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs24', 35)" onmouseover="showTip(event, 'fs24', 35)" class="i">c</span>,<span onmouseout="hideTip(event, 'fs25', 36)" onmouseover="showTip(event, 'fs25', 36)" class="i">cb</span>,<span onmouseout="hideTip(event, 'fs26', 37)" onmouseover="showTip(event, 'fs26', 37)" class="i">s</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 38)" onmouseover="showTip(event, 'fs6', 38)" class="i">socket</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 39)" onmouseover="showTip(event, 'fs27', 39)" class="f">BeginReceive</span>(<span onmouseout="hideTip(event, 'fs22', 40)" onmouseover="showTip(event, 'fs22', 40)" class="i">b</span>,<span onmouseout="hideTip(event, 'fs23', 41)" onmouseover="showTip(event, 'fs23', 41)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs24', 42)" onmouseover="showTip(event, 'fs24', 42)" class="i">c</span>,<span onmouseout="hideTip(event, 'fs28', 43)" onmouseover="showTip(event, 'fs28', 43)" class="t">SocketFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 44)" onmouseover="showTip(event, 'fs29', 44)" class="i">None</span>,<span onmouseout="hideTip(event, 'fs25', 45)" onmouseover="showTip(event, 'fs25', 45)" class="i">cb</span>,<span onmouseout="hideTip(event, 'fs26', 46)" onmouseover="showTip(event, 'fs26', 46)" class="i">s</span>)
    <span onmouseout="hideTip(event, 'fs8', 47)" onmouseover="showTip(event, 'fs8', 47)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 48)" onmouseover="showTip(event, 'fs9', 48)" class="f">FromBeginEnd</span>(<span onmouseout="hideTip(event, 'fs13', 49)" onmouseover="showTip(event, 'fs13', 49)" class="i">buffer</span>, <span onmouseout="hideTip(event, 'fs17', 50)" onmouseover="showTip(event, 'fs17', 50)" class="i">offset</span>, <span onmouseout="hideTip(event, 'fs19', 51)" onmouseover="showTip(event, 'fs19', 51)" class="i">count</span>, <span onmouseout="hideTip(event, 'fs21', 52)" onmouseover="showTip(event, 'fs21', 52)" class="f">beginReceive</span>, <span onmouseout="hideTip(event, 'fs6', 53)" onmouseover="showTip(event, 'fs6', 53)" class="i">socket</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 54)" onmouseover="showTip(event, 'fs30', 54)" class="f">EndReceive</span>)
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs6', 55)" onmouseover="showTip(event, 'fs6', 55)" class="i">socket</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 56)" onmouseover="showTip(event, 'fs31', 56)" class="f">AsyncSend</span>(<span onmouseout="hideTip(event, 'fs13', 57)" onmouseover="showTip(event, 'fs13', 57)" class="i">buffer</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs14', 58)" onmouseover="showTip(event, 'fs14', 58)" class="t">byte</span>[], <span class="o">?</span><span onmouseout="hideTip(event, 'fs15', 59)" onmouseover="showTip(event, 'fs15', 59)" class="i">offset</span>, <span class="o">?</span><span onmouseout="hideTip(event, 'fs16', 60)" onmouseover="showTip(event, 'fs16', 60)" class="i">count</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 61)" onmouseover="showTip(event, 'fs17', 61)" class="i">offset</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 62)" onmouseover="showTip(event, 'fs18', 62)" class="f">defaultArg</span> <span onmouseout="hideTip(event, 'fs17', 63)" onmouseover="showTip(event, 'fs17', 63)" class="i">offset</span> <span class="n">0</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 64)" onmouseover="showTip(event, 'fs19', 64)" class="i">count</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 65)" onmouseover="showTip(event, 'fs18', 65)" class="f">defaultArg</span> <span onmouseout="hideTip(event, 'fs19', 66)" onmouseover="showTip(event, 'fs19', 66)" class="i">count</span> <span onmouseout="hideTip(event, 'fs13', 67)" onmouseover="showTip(event, 'fs13', 67)" class="i">buffer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 68)" onmouseover="showTip(event, 'fs20', 68)" class="i">Length</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 69)" onmouseover="showTip(event, 'fs32', 69)" class="f">beginSend</span>(<span onmouseout="hideTip(event, 'fs22', 70)" onmouseover="showTip(event, 'fs22', 70)" class="i">b</span>,<span onmouseout="hideTip(event, 'fs23', 71)" onmouseover="showTip(event, 'fs23', 71)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs24', 72)" onmouseover="showTip(event, 'fs24', 72)" class="i">c</span>,<span onmouseout="hideTip(event, 'fs25', 73)" onmouseover="showTip(event, 'fs25', 73)" class="i">cb</span>,<span onmouseout="hideTip(event, 'fs26', 74)" onmouseover="showTip(event, 'fs26', 74)" class="i">s</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 75)" onmouseover="showTip(event, 'fs6', 75)" class="i">socket</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 76)" onmouseover="showTip(event, 'fs33', 76)" class="f">BeginSend</span>(<span onmouseout="hideTip(event, 'fs22', 77)" onmouseover="showTip(event, 'fs22', 77)" class="i">b</span>,<span onmouseout="hideTip(event, 'fs23', 78)" onmouseover="showTip(event, 'fs23', 78)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs24', 79)" onmouseover="showTip(event, 'fs24', 79)" class="i">c</span>,<span onmouseout="hideTip(event, 'fs28', 80)" onmouseover="showTip(event, 'fs28', 80)" class="t">SocketFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 81)" onmouseover="showTip(event, 'fs29', 81)" class="i">None</span>,<span onmouseout="hideTip(event, 'fs25', 82)" onmouseover="showTip(event, 'fs25', 82)" class="i">cb</span>,<span onmouseout="hideTip(event, 'fs26', 83)" onmouseover="showTip(event, 'fs26', 83)" class="i">s</span>)
    <span onmouseout="hideTip(event, 'fs8', 84)" onmouseover="showTip(event, 'fs8', 84)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 85)" onmouseover="showTip(event, 'fs9', 85)" class="f">FromBeginEnd</span>(<span onmouseout="hideTip(event, 'fs13', 86)" onmouseover="showTip(event, 'fs13', 86)" class="i">buffer</span>, <span onmouseout="hideTip(event, 'fs17', 87)" onmouseover="showTip(event, 'fs17', 87)" class="i">offset</span>, <span onmouseout="hideTip(event, 'fs19', 88)" onmouseover="showTip(event, 'fs19', 88)" class="i">count</span>, <span onmouseout="hideTip(event, 'fs32', 89)" onmouseover="showTip(event, 'fs32', 89)" class="f">beginSend</span>, <span onmouseout="hideTip(event, 'fs6', 90)" onmouseover="showTip(event, 'fs6', 90)" class="i">socket</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 91)" onmouseover="showTip(event, 'fs34', 91)" class="f">EndSend</span>)

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs35', 92)" onmouseover="showTip(event, 'fs35', 92)" class="t">Server</span>() <span class="o">=</span>
  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs36', 93)" onmouseover="showTip(event, 'fs36', 93)" class="f">Start</span>(<span onmouseout="hideTip(event, 'fs37', 94)" onmouseover="showTip(event, 'fs37', 94)" class="i">hostname</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs38', 95)" onmouseover="showTip(event, 'fs38', 95)" class="t">string</span>, <span class="o">?</span><span onmouseout="hideTip(event, 'fs39', 96)" onmouseover="showTip(event, 'fs39', 96)" class="i">port</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 97)" onmouseover="showTip(event, 'fs40', 97)" class="i">ipAddress</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs41', 98)" onmouseover="showTip(event, 'fs41', 98)" class="t">Dns</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 99)" onmouseover="showTip(event, 'fs42', 99)" class="f">GetHostEntry</span>(<span onmouseout="hideTip(event, 'fs37', 100)" onmouseover="showTip(event, 'fs37', 100)" class="i">hostname</span>)<span class="o">.</span><span class="i">AddressList</span><span class="o">.</span>[<span class="n">0</span>]
    <span onmouseout="hideTip(event, 'fs35', 101)" onmouseover="showTip(event, 'fs35', 101)" class="t">Server</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 102)" onmouseover="showTip(event, 'fs43', 102)" class="f">Start</span>(<span onmouseout="hideTip(event, 'fs40', 103)" onmouseover="showTip(event, 'fs40', 103)" class="i">ipAddress</span>, <span class="o">?</span><span onmouseout="hideTip(event, 'fs39', 104)" onmouseover="showTip(event, 'fs39', 104)" class="i">port</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 105)" onmouseover="showTip(event, 'fs39', 105)" class="i">port</span>)

  <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs44', 106)" onmouseover="showTip(event, 'fs44', 106)" class="f">Start</span>(<span class="o">?</span><span onmouseout="hideTip(event, 'fs45', 107)" onmouseover="showTip(event, 'fs45', 107)" class="i">ipAddress</span>, <span class="o">?</span><span onmouseout="hideTip(event, 'fs39', 108)" onmouseover="showTip(event, 'fs39', 108)" class="i">port</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 109)" onmouseover="showTip(event, 'fs40', 109)" class="i">ipAddress</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 110)" onmouseover="showTip(event, 'fs18', 110)" class="f">defaultArg</span> <span onmouseout="hideTip(event, 'fs40', 111)" onmouseover="showTip(event, 'fs40', 111)" class="i">ipAddress</span> <span onmouseout="hideTip(event, 'fs46', 112)" onmouseover="showTip(event, 'fs46', 112)" class="t">IPAddress</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 113)" onmouseover="showTip(event, 'fs47', 113)" class="i">Any</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 114)" onmouseover="showTip(event, 'fs48', 114)" class="i">port</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 115)" onmouseover="showTip(event, 'fs18', 115)" class="f">defaultArg</span> <span onmouseout="hideTip(event, 'fs48', 116)" onmouseover="showTip(event, 'fs48', 116)" class="i">port</span> <span class="n">80</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs49', 117)" onmouseover="showTip(event, 'fs49', 117)" class="i">endpoint</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs50', 118)" onmouseover="showTip(event, 'fs50', 118)" class="t">IPEndPoint</span>(<span onmouseout="hideTip(event, 'fs40', 119)" onmouseover="showTip(event, 'fs40', 119)" class="i">ipAddress</span>, <span onmouseout="hideTip(event, 'fs48', 120)" onmouseover="showTip(event, 'fs48', 120)" class="i">port</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 121)" onmouseover="showTip(event, 'fs51', 121)" class="i">cts</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs52', 122)" onmouseover="showTip(event, 'fs52', 122)" class="t">CancellationTokenSource</span>()
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 123)" onmouseover="showTip(event, 'fs53', 123)" class="i">listener</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs5', 124)" onmouseover="showTip(event, 'fs5', 124)" class="t">Socket</span>(<span onmouseout="hideTip(event, 'fs54', 125)" onmouseover="showTip(event, 'fs54', 125)" class="t">AddressFamily</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 126)" onmouseover="showTip(event, 'fs55', 126)" class="i">InterNetwork</span>, <span onmouseout="hideTip(event, 'fs56', 127)" onmouseover="showTip(event, 'fs56', 127)" class="t">SocketType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 128)" onmouseover="showTip(event, 'fs57', 128)" class="i">Stream</span>, <span onmouseout="hideTip(event, 'fs58', 129)" onmouseover="showTip(event, 'fs58', 129)" class="t">ProtocolType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 130)" onmouseover="showTip(event, 'fs59', 130)" class="i">Tcp</span>)
    <span onmouseout="hideTip(event, 'fs53', 131)" onmouseover="showTip(event, 'fs53', 131)" class="i">listener</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 132)" onmouseover="showTip(event, 'fs60', 132)" class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs49', 133)" onmouseover="showTip(event, 'fs49', 133)" class="i">endpoint</span>)
    <span onmouseout="hideTip(event, 'fs53', 134)" onmouseover="showTip(event, 'fs53', 134)" class="i">listener</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 135)" onmouseover="showTip(event, 'fs61', 135)" class="f">Listen</span>(<span onmouseout="hideTip(event, 'fs62', 136)" onmouseover="showTip(event, 'fs62', 136)" class="f">int</span> <span onmouseout="hideTip(event, 'fs63', 137)" onmouseover="showTip(event, 'fs63', 137)" class="t">SocketOptionName</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 138)" onmouseover="showTip(event, 'fs64', 138)" class="i">MaxConnections</span>)
    <span onmouseout="hideTip(event, 'fs65', 139)" onmouseover="showTip(event, 'fs65', 139)" class="f">printfn</span> <span class="s">&quot;Started listening on port </span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs48', 140)" onmouseover="showTip(event, 'fs48', 140)" class="i">port</span>

    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs66', 141)" onmouseover="showTip(event, 'fs66', 141)" class="f">loop</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs67', 142)" onmouseover="showTip(event, 'fs67', 142)" class="i">async</span> {
      <span onmouseout="hideTip(event, 'fs65', 143)" onmouseover="showTip(event, 'fs65', 143)" class="f">printfn</span> <span class="s">&quot;Waiting for request ...&quot;</span>
      <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs6', 144)" onmouseover="showTip(event, 'fs6', 144)" class="i">socket</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 145)" onmouseover="showTip(event, 'fs53', 145)" class="i">listener</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 146)" onmouseover="showTip(event, 'fs68', 146)" class="f">AsyncAccept</span>()
      <span onmouseout="hideTip(event, 'fs65', 147)" onmouseover="showTip(event, 'fs65', 147)" class="f">printfn</span> <span class="s">&quot;Received request&quot;</span>
      <span class="c">// NOTE: This has been giving me problems; I&#39;ll update once it&#39;s working.</span>
      <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs69', 148)" onmouseover="showTip(event, 'fs69', 148)" class="i">bytesSent</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 149)" onmouseover="showTip(event, 'fs6', 149)" class="i">socket</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 150)" onmouseover="showTip(event, 'fs70', 150)" class="f">AsyncSend</span>(<span class="s">&quot;Hello world!&quot;B</span>)
      <span onmouseout="hideTip(event, 'fs65', 151)" onmouseover="showTip(event, 'fs65', 151)" class="f">printfn</span> <span class="s">&quot;Sent response&quot;</span>
      <span onmouseout="hideTip(event, 'fs6', 152)" onmouseover="showTip(event, 'fs6', 152)" class="i">socket</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 153)" onmouseover="showTip(event, 'fs71', 153)" class="f">Shutdown</span>(<span onmouseout="hideTip(event, 'fs72', 154)" onmouseover="showTip(event, 'fs72', 154)" class="t">SocketShutdown</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 155)" onmouseover="showTip(event, 'fs73', 155)" class="i">Both</span>)
      <span onmouseout="hideTip(event, 'fs6', 156)" onmouseover="showTip(event, 'fs6', 156)" class="i">socket</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 157)" onmouseover="showTip(event, 'fs74', 157)" class="f">Close</span>()
      <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs66', 158)" onmouseover="showTip(event, 'fs66', 158)" class="f">loop</span>() }

    <span onmouseout="hideTip(event, 'fs8', 159)" onmouseover="showTip(event, 'fs8', 159)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs75', 160)" onmouseover="showTip(event, 'fs75', 160)" class="f">Start</span>(<span onmouseout="hideTip(event, 'fs66', 161)" onmouseover="showTip(event, 'fs66', 161)" class="f">loop</span>(), <span class="i">cancellationToken</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 162)" onmouseover="showTip(event, 'fs51', 162)" class="i">cts</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs76', 163)" onmouseover="showTip(event, 'fs76', 163)" class="i">Token</span>)
    { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs77', 164)" onmouseover="showTip(event, 'fs77', 164)" class="t">IDisposable</span> <span class="k">with</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs78', 165)" onmouseover="showTip(event, 'fs78', 165)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 166)" onmouseover="showTip(event, 'fs79', 166)" class="f">Dispose</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 167)" onmouseover="showTip(event, 'fs51', 167)" class="i">cts</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs80', 168)" onmouseover="showTip(event, 'fs80', 168)" class="f">Cancel</span>(); <span onmouseout="hideTip(event, 'fs53', 169)" onmouseover="showTip(event, 'fs53', 169)" class="i">listener</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 170)" onmouseover="showTip(event, 'fs74', 170)" class="f">Close</span>() }

<span class="c">// Demo</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs81', 171)" onmouseover="showTip(event, 'fs81', 171)" class="i">disposable</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs35', 172)" onmouseover="showTip(event, 'fs35', 172)" class="t">Server</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 173)" onmouseover="showTip(event, 'fs43', 173)" class="f">Start</span>(<span class="i">port</span> <span class="o">=</span> <span class="n">8090</span>)
<span onmouseout="hideTip(event, 'fs81', 174)" onmouseover="showTip(event, 'fs81', 174)" class="i">disposable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 175)" onmouseover="showTip(event, 'fs79', 175)" class="f">Dispose</span>()
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Net</div>
<div class="tip" id="fs3">namespace System.Net.Sockets</div>
<div class="tip" id="fs4">namespace System.Threading</div>
<div class="tip" id="fs5">Multiple items<br />type Socket =<br />&#160;&#160;new : socketInformation:SocketInformation -&gt; Socket + 1 overload<br />&#160;&#160;member Accept : unit -&gt; Socket<br />&#160;&#160;member AcceptAsync : e:SocketAsyncEventArgs -&gt; bool<br />&#160;&#160;member AddressFamily : AddressFamily<br />&#160;&#160;member Available : int<br />&#160;&#160;member BeginAccept : callback:AsyncCallback * state:obj -&gt; IAsyncResult + 2 overloads<br />&#160;&#160;member BeginConnect : remoteEP:EndPoint * callback:AsyncCallback * state:obj -&gt; IAsyncResult + 3 overloads<br />&#160;&#160;member BeginDisconnect : reuseSocket:bool * callback:AsyncCallback * state:obj -&gt; IAsyncResult<br />&#160;&#160;member BeginReceive : buffers:IList&lt;ArraySegment&lt;byte&gt;&gt; * socketFlags:SocketFlags * callback:AsyncCallback * state:obj -&gt; IAsyncResult + 3 overloads<br />&#160;&#160;member BeginReceiveFrom : buffer:byte[] * offset:int * size:int * socketFlags:SocketFlags * remoteEP:EndPoint * callback:AsyncCallback * state:obj -&gt; IAsyncResult<br />&#160;&#160;...<br /><br />Full name: System.Net.Sockets.Socket<br /><br />--------------------<br />Socket(socketInformation: SocketInformation) : unit<br />Socket(addressFamily: AddressFamily, socketType: SocketType, protocolType: ProtocolType) : unit</div>
<div class="tip" id="fs6">val socket : Socket</div>
<div class="tip" id="fs7">member Socket.AsyncAccept : unit -&gt; Async&lt;Socket&gt;<br /><br />Full name: Script.AsyncAccept</div>
<div class="tip" id="fs8">Multiple items<br />type Async<br />static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member CancelDefaultToken : unit -&gt; unit<br />static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromContinuations : callback:((&#39;T -&gt; unit) * (exn -&gt; unit) * (OperationCanceledException -&gt; unit) -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;<br />static member OnCancel : interruption:(unit -&gt; unit) -&gt; Async&lt;IDisposable&gt;<br />static member Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;<br />static member RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T<br />static member Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;<br />static member Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;<br />static member StartChild : computation:Async&lt;&#39;T&gt; * ?millisecondsTimeout:int -&gt; Async&lt;Async&lt;&#39;T&gt;&gt;<br />static member StartChildAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions -&gt; Async&lt;Task&lt;&#39;T&gt;&gt;<br />static member StartImmediate : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartWithContinuations : computation:Async&lt;&#39;T&gt; * continuation:(&#39;T -&gt; unit) * exceptionContinuation:(exn -&gt; unit) * cancellationContinuation:(OperationCanceledException -&gt; unit) * ?cancellationToken:CancellationToken -&gt; unit<br />static member SwitchToContext : syncContext:SynchronizationContext -&gt; Async&lt;unit&gt;<br />static member SwitchToNewThread : unit -&gt; Async&lt;unit&gt;<br />static member SwitchToThreadPool : unit -&gt; Async&lt;unit&gt;<br />static member TryCancelled : computation:Async&lt;&#39;T&gt; * compensation:(OperationCanceledException -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member CancellationToken : Async&lt;CancellationToken&gt;<br />static member DefaultCancellationToken : CancellationToken<br /><br />Full name: Microsoft.FSharp.Control.Async<br /><br />--------------------<br />type Async&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Async&lt;_&gt;</div>
<div class="tip" id="fs9">static member Async.FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Async.FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Async.FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Async.FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs10">Socket.BeginAccept(callback: AsyncCallback, state: obj) : IAsyncResult<br />Socket.BeginAccept(receiveSize: int, callback: AsyncCallback, state: obj) : IAsyncResult<br />Socket.BeginAccept(acceptSocket: Socket, receiveSize: int, callback: AsyncCallback, state: obj) : IAsyncResult</div>
<div class="tip" id="fs11">Socket.EndAccept(asyncResult: IAsyncResult) : Socket<br />Socket.EndAccept(buffer: byref&lt;byte []&gt;, asyncResult: IAsyncResult) : Socket<br />Socket.EndAccept(buffer: byref&lt;byte []&gt;, bytesTransferred: byref&lt;int&gt;, asyncResult: IAsyncResult) : Socket</div>
<div class="tip" id="fs12">member Socket.AsyncReceive : buffer:byte [] * ?offset:int * ?count:int -&gt; Async&lt;int&gt;<br /><br />Full name: Script.AsyncReceive</div>
<div class="tip" id="fs13">val buffer : byte []</div>
<div class="tip" id="fs14">Multiple items<br />val byte : value:&#39;T -&gt; byte (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.byte<br /><br />--------------------<br />type byte = Byte<br /><br />Full name: Microsoft.FSharp.Core.byte</div>
<div class="tip" id="fs15">val offset : int option</div>
<div class="tip" id="fs16">val count : int option</div>
<div class="tip" id="fs17">val offset : int</div>
<div class="tip" id="fs18">val defaultArg : arg:&#39;T option -&gt; defaultValue:&#39;T -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.defaultArg</div>
<div class="tip" id="fs19">val count : int</div>
<div class="tip" id="fs20">property Array.Length: int</div>
<div class="tip" id="fs21">val beginReceive : (byte [] * int * int * AsyncCallback * &#39;a -&gt; IAsyncResult)</div>
<div class="tip" id="fs22">val b : byte []</div>
<div class="tip" id="fs23">val o : int</div>
<div class="tip" id="fs24">val c : int</div>
<div class="tip" id="fs25">val cb : AsyncCallback</div>
<div class="tip" id="fs26">val s : &#39;a</div>
<div class="tip" id="fs27">Socket.BeginReceive(buffers: Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt;, socketFlags: SocketFlags, callback: AsyncCallback, state: obj) : IAsyncResult<br />Socket.BeginReceive(buffers: Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt;, socketFlags: SocketFlags, errorCode: byref&lt;SocketError&gt;, callback: AsyncCallback, state: obj) : IAsyncResult<br />Socket.BeginReceive(buffer: byte [], offset: int, size: int, socketFlags: SocketFlags, callback: AsyncCallback, state: obj) : IAsyncResult<br />Socket.BeginReceive(buffer: byte [], offset: int, size: int, socketFlags: SocketFlags, errorCode: byref&lt;SocketError&gt;, callback: AsyncCallback, state: obj) : IAsyncResult</div>
<div class="tip" id="fs28">type SocketFlags =<br />&#160;&#160;| None = 0<br />&#160;&#160;| OutOfBand = 1<br />&#160;&#160;| Peek = 2<br />&#160;&#160;| DontRoute = 4<br />&#160;&#160;| MaxIOVectorLength = 16<br />&#160;&#160;| Truncated = 256<br />&#160;&#160;| ControlDataTruncated = 512<br />&#160;&#160;| Broadcast = 1024<br />&#160;&#160;| Multicast = 2048<br />&#160;&#160;| Partial = 32768<br /><br />Full name: System.Net.Sockets.SocketFlags</div>
<div class="tip" id="fs29">field SocketFlags.None = 0</div>
<div class="tip" id="fs30">Socket.EndReceive(asyncResult: IAsyncResult) : int<br />Socket.EndReceive(asyncResult: IAsyncResult, errorCode: byref&lt;SocketError&gt;) : int</div>
<div class="tip" id="fs31">member Socket.AsyncSend : buffer:byte [] * ?offset:int * ?count:int -&gt; Async&lt;int&gt;<br /><br />Full name: Script.AsyncSend</div>
<div class="tip" id="fs32">val beginSend : (byte [] * int * int * AsyncCallback * &#39;a -&gt; IAsyncResult)</div>
<div class="tip" id="fs33">Socket.BeginSend(buffers: Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt;, socketFlags: SocketFlags, callback: AsyncCallback, state: obj) : IAsyncResult<br />Socket.BeginSend(buffers: Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt;, socketFlags: SocketFlags, errorCode: byref&lt;SocketError&gt;, callback: AsyncCallback, state: obj) : IAsyncResult<br />Socket.BeginSend(buffer: byte [], offset: int, size: int, socketFlags: SocketFlags, callback: AsyncCallback, state: obj) : IAsyncResult<br />Socket.BeginSend(buffer: byte [], offset: int, size: int, socketFlags: SocketFlags, errorCode: byref&lt;SocketError&gt;, callback: AsyncCallback, state: obj) : IAsyncResult</div>
<div class="tip" id="fs34">Socket.EndSend(asyncResult: IAsyncResult) : int<br />Socket.EndSend(asyncResult: IAsyncResult, errorCode: byref&lt;SocketError&gt;) : int</div>
<div class="tip" id="fs35">Multiple items<br />type Server =<br />&#160;&#160;new : unit -&gt; Server<br />&#160;&#160;static member Start : hostname:string * ?port:int -&gt; IDisposable<br />&#160;&#160;static member Start : ?ipAddress:IPAddress * ?port:int -&gt; IDisposable<br /><br />Full name: Script.Server<br /><br />--------------------<br />new : unit -&gt; Server</div>
<div class="tip" id="fs36">static member Server.Start : hostname:string * ?port:int -&gt; IDisposable<br /><br />Full name: Script.Server.Start</div>
<div class="tip" id="fs37">val hostname : string</div>
<div class="tip" id="fs38">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs39">val port : int option</div>
<div class="tip" id="fs40">val ipAddress : IPAddress</div>
<div class="tip" id="fs41">type Dns =<br />&#160;&#160;static member BeginGetHostAddresses : hostNameOrAddress:string * requestCallback:AsyncCallback * state:obj -&gt; IAsyncResult<br />&#160;&#160;static member BeginGetHostByName : hostName:string * requestCallback:AsyncCallback * stateObject:obj -&gt; IAsyncResult<br />&#160;&#160;static member BeginGetHostEntry : hostNameOrAddress:string * requestCallback:AsyncCallback * stateObject:obj -&gt; IAsyncResult + 1 overload<br />&#160;&#160;static member BeginResolve : hostName:string * requestCallback:AsyncCallback * stateObject:obj -&gt; IAsyncResult<br />&#160;&#160;static member EndGetHostAddresses : asyncResult:IAsyncResult -&gt; IPAddress[]<br />&#160;&#160;static member EndGetHostByName : asyncResult:IAsyncResult -&gt; IPHostEntry<br />&#160;&#160;static member EndGetHostEntry : asyncResult:IAsyncResult -&gt; IPHostEntry<br />&#160;&#160;static member EndResolve : asyncResult:IAsyncResult -&gt; IPHostEntry<br />&#160;&#160;static member GetHostAddresses : hostNameOrAddress:string -&gt; IPAddress[]<br />&#160;&#160;static member GetHostByAddress : address:string -&gt; IPHostEntry + 1 overload<br />&#160;&#160;...<br /><br />Full name: System.Net.Dns</div>
<div class="tip" id="fs42">Dns.GetHostEntry(address: IPAddress) : IPHostEntry<br />Dns.GetHostEntry(hostNameOrAddress: string) : IPHostEntry</div>
<div class="tip" id="fs43">static member Server.Start : hostname:string * ?port:int -&gt; IDisposable<br />static member Server.Start : ?ipAddress:IPAddress * ?port:int -&gt; IDisposable</div>
<div class="tip" id="fs44">static member Server.Start : ?ipAddress:IPAddress * ?port:int -&gt; IDisposable<br /><br />Full name: Script.Server.Start</div>
<div class="tip" id="fs45">val ipAddress : IPAddress option</div>
<div class="tip" id="fs46">Multiple items<br />type IPAddress =<br />&#160;&#160;new : newAddress:int64 -&gt; IPAddress + 2 overloads<br />&#160;&#160;member Address : int64 with get, set<br />&#160;&#160;member AddressFamily : AddressFamily<br />&#160;&#160;member Equals : comparand:obj -&gt; bool<br />&#160;&#160;member GetAddressBytes : unit -&gt; byte[]<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member IsIPv6LinkLocal : bool<br />&#160;&#160;member IsIPv6Multicast : bool<br />&#160;&#160;member IsIPv6SiteLocal : bool<br />&#160;&#160;member IsIPv6Teredo : bool<br />&#160;&#160;...<br /><br />Full name: System.Net.IPAddress<br /><br />--------------------<br />IPAddress(newAddress: int64) : unit<br />IPAddress(address: byte []) : unit<br />IPAddress(address: byte [], scopeid: int64) : unit</div>
<div class="tip" id="fs47">field IPAddress.Any</div>
<div class="tip" id="fs48">val port : int</div>
<div class="tip" id="fs49">val endpoint : IPEndPoint</div>
<div class="tip" id="fs50">Multiple items<br />type IPEndPoint =<br />&#160;&#160;inherit EndPoint<br />&#160;&#160;new : address:int64 * port:int -&gt; IPEndPoint + 1 overload<br />&#160;&#160;member Address : IPAddress with get, set<br />&#160;&#160;member AddressFamily : AddressFamily<br />&#160;&#160;member Create : socketAddress:SocketAddress -&gt; EndPoint<br />&#160;&#160;member Equals : comparand:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Port : int with get, set<br />&#160;&#160;member Serialize : unit -&gt; SocketAddress<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;static val MinPort : int<br />&#160;&#160;...<br /><br />Full name: System.Net.IPEndPoint<br /><br />--------------------<br />IPEndPoint(address: int64, port: int) : unit<br />IPEndPoint(address: IPAddress, port: int) : unit</div>
<div class="tip" id="fs51">val cts : CancellationTokenSource</div>
<div class="tip" id="fs52">Multiple items<br />type CancellationTokenSource =<br />&#160;&#160;new : unit -&gt; CancellationTokenSource<br />&#160;&#160;member Cancel : unit -&gt; unit + 1 overload<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member IsCancellationRequested : bool<br />&#160;&#160;member Token : CancellationToken<br />&#160;&#160;static member CreateLinkedTokenSource : [&lt;ParamArray&gt;] tokens:CancellationToken[] -&gt; CancellationTokenSource + 1 overload<br /><br />Full name: System.Threading.CancellationTokenSource<br /><br />--------------------<br />CancellationTokenSource() : unit</div>
<div class="tip" id="fs53">val listener : Socket</div>
<div class="tip" id="fs54">type AddressFamily =<br />&#160;&#160;| Unknown = -1<br />&#160;&#160;| Unspecified = 0<br />&#160;&#160;| Unix = 1<br />&#160;&#160;| InterNetwork = 2<br />&#160;&#160;| ImpLink = 3<br />&#160;&#160;| Pup = 4<br />&#160;&#160;| Chaos = 5<br />&#160;&#160;| NS = 6<br />&#160;&#160;| Ipx = 6<br />&#160;&#160;| Iso = 7<br />&#160;&#160;...<br /><br />Full name: System.Net.Sockets.AddressFamily</div>
<div class="tip" id="fs55">field AddressFamily.InterNetwork = 2</div>
<div class="tip" id="fs56">type SocketType =<br />&#160;&#160;| Stream = 1<br />&#160;&#160;| Dgram = 2<br />&#160;&#160;| Raw = 3<br />&#160;&#160;| Rdm = 4<br />&#160;&#160;| Seqpacket = 5<br />&#160;&#160;| Unknown = -1<br /><br />Full name: System.Net.Sockets.SocketType</div>
<div class="tip" id="fs57">field SocketType.Stream = 1</div>
<div class="tip" id="fs58">type ProtocolType =<br />&#160;&#160;| IP = 0<br />&#160;&#160;| IPv6HopByHopOptions = 0<br />&#160;&#160;| Icmp = 1<br />&#160;&#160;| Igmp = 2<br />&#160;&#160;| Ggp = 3<br />&#160;&#160;| IPv4 = 4<br />&#160;&#160;| Tcp = 6<br />&#160;&#160;| Pup = 12<br />&#160;&#160;| Udp = 17<br />&#160;&#160;| Idp = 22<br />&#160;&#160;...<br /><br />Full name: System.Net.Sockets.ProtocolType</div>
<div class="tip" id="fs59">field ProtocolType.Tcp = 6</div>
<div class="tip" id="fs60">Socket.Bind(localEP: EndPoint) : unit</div>
<div class="tip" id="fs61">Socket.Listen(backlog: int) : unit</div>
<div class="tip" id="fs62">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs63">type SocketOptionName =<br />&#160;&#160;| Debug = 1<br />&#160;&#160;| AcceptConnection = 2<br />&#160;&#160;| ReuseAddress = 4<br />&#160;&#160;| KeepAlive = 8<br />&#160;&#160;| DontRoute = 16<br />&#160;&#160;| Broadcast = 32<br />&#160;&#160;| UseLoopback = 64<br />&#160;&#160;| Linger = 128<br />&#160;&#160;| OutOfBandInline = 256<br />&#160;&#160;| DontLinger = -129<br />&#160;&#160;...<br /><br />Full name: System.Net.Sockets.SocketOptionName</div>
<div class="tip" id="fs64">field SocketOptionName.MaxConnections = 2147483647</div>
<div class="tip" id="fs65">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs66">val loop : (unit -&gt; Async&lt;&#39;a&gt;)</div>
<div class="tip" id="fs67">val async : AsyncBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.async</div>
<div class="tip" id="fs68">member Socket.AsyncAccept : unit -&gt; Async&lt;Socket&gt;</div>
<div class="tip" id="fs69">val bytesSent : int</div>
<div class="tip" id="fs70">member Socket.AsyncSend : buffer:byte [] * ?offset:int * ?count:int -&gt; Async&lt;int&gt;</div>
<div class="tip" id="fs71">Socket.Shutdown(how: SocketShutdown) : unit</div>
<div class="tip" id="fs72">type SocketShutdown =<br />&#160;&#160;| Receive = 0<br />&#160;&#160;| Send = 1<br />&#160;&#160;| Both = 2<br /><br />Full name: System.Net.Sockets.SocketShutdown</div>
<div class="tip" id="fs73">field SocketShutdown.Both = 2</div>
<div class="tip" id="fs74">Socket.Close() : unit<br />Socket.Close(timeout: int) : unit</div>
<div class="tip" id="fs75">static member Async.Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit</div>
<div class="tip" id="fs76">property CancellationTokenSource.Token: CancellationToken</div>
<div class="tip" id="fs77">type IDisposable =<br />&#160;&#160;member Dispose : unit -&gt; unit<br /><br />Full name: System.IDisposable</div>
<div class="tip" id="fs78">val x : IDisposable</div>
<div class="tip" id="fs79">IDisposable.Dispose() : unit</div>
<div class="tip" id="fs80">CancellationTokenSource.Cancel() : unit<br />CancellationTokenSource.Cancel(throwOnFirstException: bool) : unit</div>
<div class="tip" id="fs81">val disposable : IDisposable<br /><br />Full name: Script.disposable</div>

