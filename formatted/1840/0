<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="prep">#if</span> <span class="i">INTERACTIVE</span>
<span class="inactive">#r</span><span class="inactive"> </span><span class="inactive">&quot;System.Drawing.dll&quot;</span>
<span class="prep">#endif</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Drawing</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">isSierpinskiCarpetPixelFilled</span>(<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">y</span>) <span class="o">=</span>
   <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">y</span>) <span class="o">=</span>
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs4', 9)" onmouseover="showTip(event, 'fs4', 9)" class="i">x</span> <span class="o">&gt;</span> <span class="n">0</span> <span class="o">||</span> <span onmouseout="hideTip(event, 'fs5', 10)" onmouseover="showTip(event, 'fs5', 10)" class="i">y</span> <span class="o">&gt;</span> <span class="n">0</span> <span class="k">then</span>
         <span class="k">if</span> <span onmouseout="hideTip(event, 'fs4', 11)" onmouseover="showTip(event, 'fs4', 11)" class="i">x</span> <span class="o">%</span> <span class="n">3</span> <span class="o">=</span> <span class="n">1</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs5', 12)" onmouseover="showTip(event, 'fs5', 12)" class="i">y</span> <span class="o">%</span> <span class="n">3</span> <span class="o">=</span> <span class="n">1</span> <span class="k">then</span> <span class="k">false</span>
         <span class="k">else</span> <span onmouseout="hideTip(event, 'fs6', 13)" onmouseover="showTip(event, 'fs6', 13)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs4', 14)" onmouseover="showTip(event, 'fs4', 14)" class="i">x</span><span class="o">/</span><span class="n">3</span>,<span onmouseout="hideTip(event, 'fs5', 15)" onmouseover="showTip(event, 'fs5', 15)" class="i">y</span><span class="o">/</span><span class="n">3</span>)
      <span class="k">else</span> <span class="k">true</span>
   <span onmouseout="hideTip(event, 'fs6', 16)" onmouseover="showTip(event, 'fs6', 16)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs4', 17)" onmouseover="showTip(event, 'fs4', 17)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs5', 18)" onmouseover="showTip(event, 'fs5', 18)" class="i">y</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 19)" onmouseover="showTip(event, 'fs7', 19)" class="i">width</span>,<span onmouseout="hideTip(event, 'fs8', 20)" onmouseover="showTip(event, 'fs8', 20)" class="i">height</span> <span class="o">=</span> <span class="n">728</span>, <span class="n">728</span>   
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 21)" onmouseover="showTip(event, 'fs9', 21)" class="i">image</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs10', 22)" onmouseover="showTip(event, 'fs10', 22)" class="t">Bitmap</span>(<span onmouseout="hideTip(event, 'fs7', 23)" onmouseover="showTip(event, 'fs7', 23)" class="i">width</span>, <span onmouseout="hideTip(event, 'fs8', 24)" onmouseover="showTip(event, 'fs8', 24)" class="i">height</span>)   
<span class="k">for</span> <span onmouseout="hideTip(event, 'fs5', 25)" onmouseover="showTip(event, 'fs5', 25)" class="i">y</span> <span class="o">=</span> <span class="n">0</span> <span class="k">to</span> <span onmouseout="hideTip(event, 'fs8', 26)" onmouseover="showTip(event, 'fs8', 26)" class="i">height</span><span class="o">-</span><span class="n">1</span> <span class="k">do</span>
   <span class="k">for</span> <span onmouseout="hideTip(event, 'fs4', 27)" onmouseover="showTip(event, 'fs4', 27)" class="i">x</span> <span class="o">=</span> <span class="n">0</span> <span class="k">to</span> <span onmouseout="hideTip(event, 'fs7', 28)" onmouseover="showTip(event, 'fs7', 28)" class="i">width</span><span class="o">-</span><span class="n">1</span> <span class="k">do</span>
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs3', 29)" onmouseover="showTip(event, 'fs3', 29)" class="f">isSierpinskiCarpetPixelFilled</span>(<span onmouseout="hideTip(event, 'fs4', 30)" onmouseover="showTip(event, 'fs4', 30)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs5', 31)" onmouseover="showTip(event, 'fs5', 31)" class="i">y</span>) 
      <span class="k">then</span> <span onmouseout="hideTip(event, 'fs9', 32)" onmouseover="showTip(event, 'fs9', 32)" class="i">image</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 33)" onmouseover="showTip(event, 'fs11', 33)" class="f">SetPixel</span>(<span onmouseout="hideTip(event, 'fs4', 34)" onmouseover="showTip(event, 'fs4', 34)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs5', 35)" onmouseover="showTip(event, 'fs5', 35)" class="i">y</span>,<span onmouseout="hideTip(event, 'fs12', 36)" onmouseover="showTip(event, 'fs12', 36)" class="t">Color</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 37)" onmouseover="showTip(event, 'fs13', 37)" class="i">Black</span>)
   
<span onmouseout="hideTip(event, 'fs9', 38)" onmouseover="showTip(event, 'fs9', 38)" class="i">image</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 39)" onmouseover="showTip(event, 'fs14', 39)" class="f">Save</span>(<span class="s">&quot;carpet.png&quot;</span>, <span onmouseout="hideTip(event, 'fs15', 40)" onmouseover="showTip(event, 'fs15', 40)" class="i">Imaging</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 41)" onmouseover="showTip(event, 'fs16', 41)" class="t">ImageFormat</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 42)" onmouseover="showTip(event, 'fs17', 42)" class="i">Png</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Drawing</div>
<div class="tip" id="fs3">val isSierpinskiCarpetPixelFilled : x:int * y:int -&gt; bool<br /><br />Full name: Script.isSierpinskiCarpetPixelFilled</div>
<div class="tip" id="fs4">val x : int</div>
<div class="tip" id="fs5">val y : int</div>
<div class="tip" id="fs6">val f : (int * int -&gt; bool)</div>
<div class="tip" id="fs7">val width : int<br /><br />Full name: Script.width</div>
<div class="tip" id="fs8">val height : int<br /><br />Full name: Script.height</div>
<div class="tip" id="fs9">val image : Bitmap<br /><br />Full name: Script.image</div>
<div class="tip" id="fs10">Multiple items<br />type Bitmap =<br />&#160;&#160;inherit Image<br />&#160;&#160;new : filename:string -&gt; Bitmap + 11 overloads<br />&#160;&#160;member Clone : rect:Rectangle * format:PixelFormat -&gt; Bitmap + 1 overload<br />&#160;&#160;member GetHbitmap : unit -&gt; nativeint + 1 overload<br />&#160;&#160;member GetHicon : unit -&gt; nativeint<br />&#160;&#160;member GetPixel : x:int * y:int -&gt; Color<br />&#160;&#160;member LockBits : rect:Rectangle * flags:ImageLockMode * format:PixelFormat -&gt; BitmapData + 1 overload<br />&#160;&#160;member MakeTransparent : unit -&gt; unit + 1 overload<br />&#160;&#160;member SetPixel : x:int * y:int * color:Color -&gt; unit<br />&#160;&#160;member SetResolution : xDpi:float32 * yDpi:float32 -&gt; unit<br />&#160;&#160;member UnlockBits : bitmapdata:BitmapData -&gt; unit<br />&#160;&#160;...<br /><br />Full name: System.Drawing.Bitmap<br /><br />--------------------<br />Bitmap(filename: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(stream: System.IO.Stream) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(original: Image) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(filename: string, useIcm: bool) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(type: System.Type, resource: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(stream: System.IO.Stream, useIcm: bool) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(width: int, height: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(original: Image, newSize: Size) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(width: int, height: int, format: Imaging.PixelFormat) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(width: int, height: int, g: Graphics) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs11">Bitmap.SetPixel(x: int, y: int, color: Color) : unit</div>
<div class="tip" id="fs12">type Color =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member A : byte<br />&#160;&#160;&#160;&#160;member B : byte<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;&#160;&#160;member G : byte<br />&#160;&#160;&#160;&#160;member GetBrightness : unit -&gt; float32<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetHue : unit -&gt; float32<br />&#160;&#160;&#160;&#160;member GetSaturation : unit -&gt; float32<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;member IsKnownColor : bool<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Drawing.Color</div>
<div class="tip" id="fs13">property Color.Black: Color</div>
<div class="tip" id="fs14">Image.Save(filename: string) : unit<br />Image.Save(stream: System.IO.Stream, format: Imaging.ImageFormat) : unit<br />Image.Save(filename: string, format: Imaging.ImageFormat) : unit<br />Image.Save(stream: System.IO.Stream, encoder: Imaging.ImageCodecInfo, encoderParams: Imaging.EncoderParameters) : unit<br />Image.Save(filename: string, encoder: Imaging.ImageCodecInfo, encoderParams: Imaging.EncoderParameters) : unit</div>
<div class="tip" id="fs15">namespace System.Drawing.Imaging</div>
<div class="tip" id="fs16">Multiple items<br />type ImageFormat =<br />&#160;&#160;new : guid:Guid -&gt; ImageFormat<br />&#160;&#160;member Equals : o:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Guid : Guid<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;static member Bmp : ImageFormat<br />&#160;&#160;static member Emf : ImageFormat<br />&#160;&#160;static member Exif : ImageFormat<br />&#160;&#160;static member Gif : ImageFormat<br />&#160;&#160;static member Icon : ImageFormat<br />&#160;&#160;...<br /><br />Full name: System.Drawing.Imaging.ImageFormat<br /><br />--------------------<br />Imaging.ImageFormat(guid: System.Guid) : unit</div>
<div class="tip" id="fs17">property Imaging.ImageFormat.Png: Imaging.ImageFormat</div>

