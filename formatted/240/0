<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="prep">#r</span> <span class="s">&quot;FSharp.PowerPack.dll&quot;</span>


<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>

<span class="c">// Generic container of &#39;T </span>
<span class="c">// Also parameterized by &#39;TypeClass : (new : unit -&gt; &#39;TypeClass) to implicit get a &#39;TypeClass instance (like passing the type class dictionary)</span>
<span class="c">// The idea is to encode Type Classes with subtype polymorphism and OOP Classes </span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">TypeClass</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">TypeClass</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">TypeClass</span>)<span class="o">&gt;</span> <span class="o">=</span> <span class="k">interface</span> <span class="k">end</span>

<span class="k">type</span> [&lt;<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">AbstractClass</span>&gt;] <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">FunctorClass</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">FunctorClass</span> <span class="k">when</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">FunctorClass</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="t">FunctorClass</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="i">FunctorClass</span><span class="o">&gt;</span> 
                                                  <span class="k">and</span>  <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs5', 10)" onmouseover="showTip(event, 'fs5', 10)" class="i">FunctorClass</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 11)" onmouseover="showTip(event, 'fs3', 11)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs5', 12)" onmouseover="showTip(event, 'fs5', 12)" class="i">FunctorClass</span>)<span class="o">&gt;</span>() <span class="o">=</span> 
    <span class="k">abstract</span> <span onmouseout="hideTip(event, 'fs6', 13)" onmouseover="showTip(event, 'fs6', 13)" class="f">FMap</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span> <span class="o">:</span> (<span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">R</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 14)" onmouseover="showTip(event, 'fs2', 14)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs5', 15)" onmouseover="showTip(event, 'fs5', 15)" class="i">FunctorClass</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 16)" onmouseover="showTip(event, 'fs2', 16)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs5', 17)" onmouseover="showTip(event, 'fs5', 17)" class="i">FunctorClass</span><span class="o">&gt;</span>

<span class="k">type</span> [&lt;<span onmouseout="hideTip(event, 'fs4', 18)" onmouseover="showTip(event, 'fs4', 18)" class="t">AbstractClass</span>&gt;] <span onmouseout="hideTip(event, 'fs7', 19)" onmouseover="showTip(event, 'fs7', 19)" class="t">ApplicativeClass</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 20)" onmouseover="showTip(event, 'fs7', 20)" class="i">ApplicativeClass</span> <span class="k">when</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 21)" onmouseover="showTip(event, 'fs7', 21)" class="i">ApplicativeClass</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs7', 22)" onmouseover="showTip(event, 'fs7', 22)" class="t">ApplicativeClass</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 23)" onmouseover="showTip(event, 'fs7', 23)" class="i">ApplicativeClass</span><span class="o">&gt;</span> 
                                                  <span class="k">and</span>  <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 24)" onmouseover="showTip(event, 'fs7', 24)" class="i">ApplicativeClass</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 25)" onmouseover="showTip(event, 'fs3', 25)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 26)" onmouseover="showTip(event, 'fs7', 26)" class="i">ApplicativeClass</span>)<span class="o">&gt;</span>() <span class="o">=</span> 
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs5', 27)" onmouseover="showTip(event, 'fs5', 27)" class="t">FunctorClass</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 28)" onmouseover="showTip(event, 'fs7', 28)" class="i">ApplicativeClass</span><span class="o">&gt;</span>() 
    <span class="c">// abstract methods</span>
    <span class="k">abstract</span> <span onmouseout="hideTip(event, 'fs8', 29)" onmouseover="showTip(event, 'fs8', 29)" class="f">Pure</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 30)" onmouseover="showTip(event, 'fs2', 30)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 31)" onmouseover="showTip(event, 'fs7', 31)" class="i">ApplicativeClass</span><span class="o">&gt;</span>
    <span class="k">abstract</span> <span onmouseout="hideTip(event, 'fs9', 32)" onmouseover="showTip(event, 'fs9', 32)" class="f">Apply</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 33)" onmouseover="showTip(event, 'fs2', 33)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 34)" onmouseover="showTip(event, 'fs7', 34)" class="i">ApplicativeClass</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 35)" onmouseover="showTip(event, 'fs2', 35)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 36)" onmouseover="showTip(event, 'fs7', 36)" class="i">ApplicativeClass</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 37)" onmouseover="showTip(event, 'fs2', 37)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 38)" onmouseover="showTip(event, 'fs7', 38)" class="i">ApplicativeClass</span><span class="o">&gt;</span>
    <span class="c">// Functor default implementation</span>
    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs10', 39)" onmouseover="showTip(event, 'fs10', 39)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 40)" onmouseover="showTip(event, 'fs11', 40)" class="f">FMap</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs12', 41)" onmouseover="showTip(event, 'fs12', 41)" class="f">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">R</span>) (<span onmouseout="hideTip(event, 'fs13', 42)" onmouseover="showTip(event, 'fs13', 42)" class="i">fa</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 43)" onmouseover="showTip(event, 'fs2', 43)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 44)" onmouseover="showTip(event, 'fs7', 44)" class="i">ApplicativeClass</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 45)" onmouseover="showTip(event, 'fs2', 45)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 46)" onmouseover="showTip(event, 'fs7', 46)" class="i">ApplicativeClass</span><span class="o">&gt;</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs10', 47)" onmouseover="showTip(event, 'fs10', 47)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 48)" onmouseover="showTip(event, 'fs14', 48)" class="f">Apply</span> (<span onmouseout="hideTip(event, 'fs10', 49)" onmouseover="showTip(event, 'fs10', 49)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 50)" onmouseover="showTip(event, 'fs15', 50)" class="f">Pure</span> <span onmouseout="hideTip(event, 'fs12', 51)" onmouseover="showTip(event, 'fs12', 51)" class="f">f</span>) <span onmouseout="hideTip(event, 'fs13', 52)" onmouseover="showTip(event, 'fs13', 52)" class="i">fa</span>

<span class="k">type</span> [&lt;<span onmouseout="hideTip(event, 'fs4', 53)" onmouseover="showTip(event, 'fs4', 53)" class="t">AbstractClass</span>&gt;] <span onmouseout="hideTip(event, 'fs16', 54)" onmouseover="showTip(event, 'fs16', 54)" class="t">MonadClass</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 55)" onmouseover="showTip(event, 'fs16', 55)" class="i">MonadClass</span> <span class="k">when</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 56)" onmouseover="showTip(event, 'fs16', 56)" class="i">MonadClass</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs16', 57)" onmouseover="showTip(event, 'fs16', 57)" class="t">MonadClass</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 58)" onmouseover="showTip(event, 'fs16', 58)" class="i">MonadClass</span><span class="o">&gt;</span> 
                                              <span class="k">and</span>  <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 59)" onmouseover="showTip(event, 'fs16', 59)" class="i">MonadClass</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 60)" onmouseover="showTip(event, 'fs3', 60)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 61)" onmouseover="showTip(event, 'fs16', 61)" class="i">MonadClass</span>)<span class="o">&gt;</span>() <span class="o">=</span>
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs7', 62)" onmouseover="showTip(event, 'fs7', 62)" class="t">ApplicativeClass</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 63)" onmouseover="showTip(event, 'fs16', 63)" class="i">MonadClass</span><span class="o">&gt;</span>() 
    <span class="c">// abstract methods</span>
    <span class="k">abstract</span> <span onmouseout="hideTip(event, 'fs17', 64)" onmouseover="showTip(event, 'fs17', 64)" class="f">Return</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 65)" onmouseover="showTip(event, 'fs2', 65)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 66)" onmouseover="showTip(event, 'fs16', 66)" class="i">MonadClass</span><span class="o">&gt;</span>
    <span class="k">abstract</span> <span onmouseout="hideTip(event, 'fs18', 67)" onmouseover="showTip(event, 'fs18', 67)" class="f">Bind</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 68)" onmouseover="showTip(event, 'fs2', 68)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 69)" onmouseover="showTip(event, 'fs16', 69)" class="i">MonadClass</span><span class="o">&gt;</span> <span class="o">*</span> (<span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 70)" onmouseover="showTip(event, 'fs2', 70)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 71)" onmouseover="showTip(event, 'fs16', 71)" class="i">MonadClass</span><span class="o">&gt;</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 72)" onmouseover="showTip(event, 'fs2', 72)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 73)" onmouseover="showTip(event, 'fs16', 73)" class="i">MonadClass</span><span class="o">&gt;</span>
    <span class="c">// Default implementations</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs19', 74)" onmouseover="showTip(event, 'fs19', 74)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 75)" onmouseover="showTip(event, 'fs20', 75)" class="f">Then</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span> ((<span onmouseout="hideTip(event, 'fs21', 76)" onmouseover="showTip(event, 'fs21', 76)" class="i">ma</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 77)" onmouseover="showTip(event, 'fs2', 77)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 78)" onmouseover="showTip(event, 'fs16', 78)" class="i">MonadClass</span><span class="o">&gt;</span>), (<span onmouseout="hideTip(event, 'fs22', 79)" onmouseover="showTip(event, 'fs22', 79)" class="i">mb</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 80)" onmouseover="showTip(event, 'fs2', 80)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 81)" onmouseover="showTip(event, 'fs16', 81)" class="i">MonadClass</span><span class="o">&gt;</span>)) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 82)" onmouseover="showTip(event, 'fs2', 82)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 83)" onmouseover="showTip(event, 'fs16', 83)" class="i">MonadClass</span><span class="o">&gt;</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs19', 84)" onmouseover="showTip(event, 'fs19', 84)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 85)" onmouseover="showTip(event, 'fs23', 85)" class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs21', 86)" onmouseover="showTip(event, 'fs21', 86)" class="i">ma</span>, <span class="k">fun</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs22', 87)" onmouseover="showTip(event, 'fs22', 87)" class="i">mb</span>)
    <span class="c">// Applicative default implementation</span>
    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs19', 88)" onmouseover="showTip(event, 'fs19', 88)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 89)" onmouseover="showTip(event, 'fs24', 89)" class="f">Pure</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs25', 90)" onmouseover="showTip(event, 'fs25', 90)" class="i">value</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 91)" onmouseover="showTip(event, 'fs2', 91)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 92)" onmouseover="showTip(event, 'fs16', 92)" class="i">MonadClass</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 93)" onmouseover="showTip(event, 'fs19', 93)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 94)" onmouseover="showTip(event, 'fs26', 94)" class="f">Return</span> <span onmouseout="hideTip(event, 'fs25', 95)" onmouseover="showTip(event, 'fs25', 95)" class="i">value</span>
    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs19', 96)" onmouseover="showTip(event, 'fs19', 96)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 97)" onmouseover="showTip(event, 'fs27', 97)" class="f">Apply</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs28', 98)" onmouseover="showTip(event, 'fs28', 98)" class="i">mf</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 99)" onmouseover="showTip(event, 'fs2', 99)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 100)" onmouseover="showTip(event, 'fs16', 100)" class="i">MonadClass</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs21', 101)" onmouseover="showTip(event, 'fs21', 101)" class="i">ma</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 102)" onmouseover="showTip(event, 'fs2', 102)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 103)" onmouseover="showTip(event, 'fs16', 103)" class="i">MonadClass</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 104)" onmouseover="showTip(event, 'fs2', 104)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 105)" onmouseover="showTip(event, 'fs16', 105)" class="i">MonadClass</span><span class="o">&gt;</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs19', 106)" onmouseover="showTip(event, 'fs19', 106)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 107)" onmouseover="showTip(event, 'fs23', 107)" class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs28', 108)" onmouseover="showTip(event, 'fs28', 108)" class="i">mf</span>, <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs12', 109)" onmouseover="showTip(event, 'fs12', 109)" class="f">f</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 110)" onmouseover="showTip(event, 'fs19', 110)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 111)" onmouseover="showTip(event, 'fs23', 111)" class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs21', 112)" onmouseover="showTip(event, 'fs21', 112)" class="i">ma</span>, <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs29', 113)" onmouseover="showTip(event, 'fs29', 113)" class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 114)" onmouseover="showTip(event, 'fs19', 114)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 115)" onmouseover="showTip(event, 'fs30', 115)" class="f">Pure</span> (<span onmouseout="hideTip(event, 'fs12', 116)" onmouseover="showTip(event, 'fs12', 116)" class="f">f</span> <span onmouseout="hideTip(event, 'fs29', 117)" onmouseover="showTip(event, 'fs29', 117)" class="i">a</span>)))

<span class="c">// Maybe Monad</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs31', 118)" onmouseover="showTip(event, 'fs31', 118)" class="t">Maybe</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 119)" onmouseover="showTip(event, 'fs32', 119)" class="p">None</span> | <span onmouseout="hideTip(event, 'fs33', 120)" onmouseover="showTip(event, 'fs33', 120)" class="p">Some</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">with</span>
    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs2', 121)" onmouseover="showTip(event, 'fs2', 121)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span onmouseout="hideTip(event, 'fs34', 122)" onmouseover="showTip(event, 'fs34', 122)" class="t">MaybeClass</span><span class="o">&gt;</span> 
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs34', 123)" onmouseover="showTip(event, 'fs34', 123)" class="t">MaybeClass</span>() <span class="o">=</span> 
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs16', 124)" onmouseover="showTip(event, 'fs16', 124)" class="t">MonadClass</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs34', 125)" onmouseover="showTip(event, 'fs34', 125)" class="t">MaybeClass</span><span class="o">&gt;</span>() <span class="k">with</span>
        <span class="k">override</span> <span onmouseout="hideTip(event, 'fs35', 126)" onmouseover="showTip(event, 'fs35', 126)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 127)" onmouseover="showTip(event, 'fs36', 127)" class="f">Return</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs37', 128)" onmouseover="showTip(event, 'fs37', 128)" class="i">v</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 129)" onmouseover="showTip(event, 'fs33', 129)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs37', 130)" onmouseover="showTip(event, 'fs37', 130)" class="i">v</span> <span class="o">:&gt;</span> _
        <span class="k">override</span> <span onmouseout="hideTip(event, 'fs35', 131)" onmouseover="showTip(event, 'fs35', 131)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 132)" onmouseover="showTip(event, 'fs38', 132)" class="f">Bind</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span> ((<span onmouseout="hideTip(event, 'fs39', 133)" onmouseover="showTip(event, 'fs39', 133)" class="i">m</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 134)" onmouseover="showTip(event, 'fs2', 134)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span onmouseout="hideTip(event, 'fs34', 135)" onmouseover="showTip(event, 'fs34', 135)" class="t">MaybeClass</span><span class="o">&gt;</span>), (<span onmouseout="hideTip(event, 'fs40', 136)" onmouseover="showTip(event, 'fs40', 136)" class="f">f</span> <span class="o">:</span> (<span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 137)" onmouseover="showTip(event, 'fs2', 137)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span onmouseout="hideTip(event, 'fs34', 138)" onmouseover="showTip(event, 'fs34', 138)" class="t">MaybeClass</span><span class="o">&gt;</span>))) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 139)" onmouseover="showTip(event, 'fs2', 139)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span onmouseout="hideTip(event, 'fs34', 140)" onmouseover="showTip(event, 'fs34', 140)" class="t">MaybeClass</span><span class="o">&gt;</span> <span class="o">=</span> 
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs39', 141)" onmouseover="showTip(event, 'fs39', 141)" class="i">m</span> <span class="o">:?&gt;</span> _ <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs33', 142)" onmouseover="showTip(event, 'fs33', 142)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs37', 143)" onmouseover="showTip(event, 'fs37', 143)" class="i">v</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs40', 144)" onmouseover="showTip(event, 'fs40', 144)" class="f">f</span> <span onmouseout="hideTip(event, 'fs37', 145)" onmouseover="showTip(event, 'fs37', 145)" class="i">v</span>
            | <span onmouseout="hideTip(event, 'fs32', 146)" onmouseover="showTip(event, 'fs32', 146)" class="p">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs32', 147)" onmouseover="showTip(event, 'fs32', 147)" class="p">None</span> <span class="o">:&gt;</span> _

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 148)" onmouseover="showTip(event, 'fs41', 148)" class="i">maybe</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs34', 149)" onmouseover="showTip(event, 'fs34', 149)" class="t">MaybeClass</span>() <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs16', 150)" onmouseover="showTip(event, 'fs16', 150)" class="t">MonadClass</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs34', 151)" onmouseover="showTip(event, 'fs34', 151)" class="t">MaybeClass</span><span class="o">&gt;</span>

<span class="c">// List Monad </span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs42', 152)" onmouseover="showTip(event, 'fs42', 152)" class="t">ListMonadGeneric</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs42', 153)" onmouseover="showTip(event, 'fs42', 153)" class="p">ListMonadGeneric</span> <span class="k">of</span> <span class="i">LazyList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">with</span>
    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs2', 154)" onmouseover="showTip(event, 'fs2', 154)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span onmouseout="hideTip(event, 'fs43', 155)" onmouseover="showTip(event, 'fs43', 155)" class="t">ListMonadClass</span><span class="o">&gt;</span>    

<span class="k">and</span> <span onmouseout="hideTip(event, 'fs43', 156)" onmouseover="showTip(event, 'fs43', 156)" class="t">ListMonadClass</span>() <span class="o">=</span> 
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs16', 157)" onmouseover="showTip(event, 'fs16', 157)" class="t">MonadClass</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs43', 158)" onmouseover="showTip(event, 'fs43', 158)" class="t">ListMonadClass</span><span class="o">&gt;</span>() <span class="k">with</span>
        <span class="k">override</span> <span onmouseout="hideTip(event, 'fs44', 159)" onmouseover="showTip(event, 'fs44', 159)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 160)" onmouseover="showTip(event, 'fs45', 160)" class="f">Return</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs37', 161)" onmouseover="showTip(event, 'fs37', 161)" class="i">v</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs42', 162)" onmouseover="showTip(event, 'fs42', 162)" class="p">ListMonadGeneric</span> (<span class="i">LazyList</span><span class="o">.</span><span class="i">ofList</span> [<span onmouseout="hideTip(event, 'fs37', 163)" onmouseover="showTip(event, 'fs37', 163)" class="i">v</span>]) <span class="o">:&gt;</span> _
        <span class="k">override</span> <span onmouseout="hideTip(event, 'fs44', 164)" onmouseover="showTip(event, 'fs44', 164)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 165)" onmouseover="showTip(event, 'fs46', 165)" class="f">Bind</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span> ((<span onmouseout="hideTip(event, 'fs47', 166)" onmouseover="showTip(event, 'fs47', 166)" class="i">m</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 167)" onmouseover="showTip(event, 'fs2', 167)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span onmouseout="hideTip(event, 'fs43', 168)" onmouseover="showTip(event, 'fs43', 168)" class="t">ListMonadClass</span><span class="o">&gt;</span>), (<span onmouseout="hideTip(event, 'fs48', 169)" onmouseover="showTip(event, 'fs48', 169)" class="f">f</span> <span class="o">:</span> (<span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 170)" onmouseover="showTip(event, 'fs2', 170)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span onmouseout="hideTip(event, 'fs43', 171)" onmouseover="showTip(event, 'fs43', 171)" class="t">ListMonadClass</span><span class="o">&gt;</span>))) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 172)" onmouseover="showTip(event, 'fs2', 172)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span onmouseout="hideTip(event, 'fs43', 173)" onmouseover="showTip(event, 'fs43', 173)" class="t">ListMonadClass</span><span class="o">&gt;</span> <span class="o">=</span> 
            <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs42', 174)" onmouseover="showTip(event, 'fs42', 174)" class="p">ListMonadGeneric</span> <span onmouseout="hideTip(event, 'fs49', 175)" onmouseover="showTip(event, 'fs49', 175)" class="i">list</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs47', 176)" onmouseover="showTip(event, 'fs47', 176)" class="i">m</span> <span class="o">:?&gt;</span> _ <span class="k">in</span> <span onmouseout="hideTip(event, 'fs42', 177)" onmouseover="showTip(event, 'fs42', 177)" class="p">ListMonadGeneric</span> (<span class="i">LazyList</span><span class="o">.</span><span class="i">ofSeq</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs50', 178)" onmouseover="showTip(event, 'fs50', 178)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 179)" onmouseover="showTip(event, 'fs51', 179)" class="f">collect</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs37', 180)" onmouseover="showTip(event, 'fs37', 180)" class="i">v</span> <span class="k">-&gt;</span> <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs42', 181)" onmouseover="showTip(event, 'fs42', 181)" class="p">ListMonadGeneric</span> <span onmouseout="hideTip(event, 'fs52', 182)" onmouseover="showTip(event, 'fs52', 182)" class="i">list&#39;</span>) <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs48', 183)" onmouseover="showTip(event, 'fs48', 183)" class="f">f</span> <span onmouseout="hideTip(event, 'fs37', 184)" onmouseover="showTip(event, 'fs37', 184)" class="i">v</span>) <span class="o">:?&gt;</span> _ <span class="k">in</span> <span onmouseout="hideTip(event, 'fs52', 185)" onmouseover="showTip(event, 'fs52', 185)" class="i">list&#39;</span>) <span onmouseout="hideTip(event, 'fs49', 186)" onmouseover="showTip(event, 'fs49', 186)" class="i">list</span>) <span class="o">:&gt;</span> _

<span class="c">// ZipList Applicative Functor</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs53', 187)" onmouseover="showTip(event, 'fs53', 187)" class="t">ListAppGeneric</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 188)" onmouseover="showTip(event, 'fs53', 188)" class="p">ListAppGeneric</span> <span class="k">of</span> <span class="i">LazyList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">with</span>
    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs2', 189)" onmouseover="showTip(event, 'fs2', 189)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span onmouseout="hideTip(event, 'fs54', 190)" onmouseover="showTip(event, 'fs54', 190)" class="t">ListApplicativeClass</span><span class="o">&gt;</span>
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs54', 191)" onmouseover="showTip(event, 'fs54', 191)" class="t">ListApplicativeClass</span>() <span class="o">=</span> 
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs7', 192)" onmouseover="showTip(event, 'fs7', 192)" class="t">ApplicativeClass</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs54', 193)" onmouseover="showTip(event, 'fs54', 193)" class="t">ListApplicativeClass</span><span class="o">&gt;</span>() <span class="k">with</span>
        <span class="k">override</span> <span onmouseout="hideTip(event, 'fs55', 194)" onmouseover="showTip(event, 'fs55', 194)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 195)" onmouseover="showTip(event, 'fs56', 195)" class="f">Pure</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs37', 196)" onmouseover="showTip(event, 'fs37', 196)" class="i">v</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 197)" onmouseover="showTip(event, 'fs53', 197)" class="p">ListAppGeneric</span> (<span class="i">LazyList</span><span class="o">.</span><span class="i">repeat</span> <span onmouseout="hideTip(event, 'fs37', 198)" onmouseover="showTip(event, 'fs37', 198)" class="i">v</span>) <span class="o">:&gt;</span> _
        <span class="k">override</span> <span onmouseout="hideTip(event, 'fs55', 199)" onmouseover="showTip(event, 'fs55', 199)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 200)" onmouseover="showTip(event, 'fs57', 200)" class="f">Apply</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs58', 201)" onmouseover="showTip(event, 'fs58', 201)" class="i">ff</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 202)" onmouseover="showTip(event, 'fs2', 202)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">R</span>, <span onmouseout="hideTip(event, 'fs54', 203)" onmouseover="showTip(event, 'fs54', 203)" class="t">ListApplicativeClass</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs59', 204)" onmouseover="showTip(event, 'fs59', 204)" class="i">fa</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 205)" onmouseover="showTip(event, 'fs2', 205)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span onmouseout="hideTip(event, 'fs54', 206)" onmouseover="showTip(event, 'fs54', 206)" class="t">ListApplicativeClass</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 207)" onmouseover="showTip(event, 'fs2', 207)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span onmouseout="hideTip(event, 'fs54', 208)" onmouseover="showTip(event, 'fs54', 208)" class="t">ListApplicativeClass</span><span class="o">&gt;</span> <span class="o">=</span> 
            <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs53', 209)" onmouseover="showTip(event, 'fs53', 209)" class="p">ListAppGeneric</span> <span onmouseout="hideTip(event, 'fs60', 210)" onmouseover="showTip(event, 'fs60', 210)" class="i">listf</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs58', 211)" onmouseover="showTip(event, 'fs58', 211)" class="i">ff</span> <span class="o">:?&gt;</span> _ <span class="k">in</span> <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs53', 212)" onmouseover="showTip(event, 'fs53', 212)" class="p">ListAppGeneric</span> <span onmouseout="hideTip(event, 'fs49', 213)" onmouseover="showTip(event, 'fs49', 213)" class="i">list</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs59', 214)" onmouseover="showTip(event, 'fs59', 214)" class="i">fa</span> <span class="o">:?&gt;</span> _ <span class="k">in</span> <span onmouseout="hideTip(event, 'fs53', 215)" onmouseover="showTip(event, 'fs53', 215)" class="p">ListAppGeneric</span> (<span class="i">LazyList</span><span class="o">.</span><span class="i">map</span> (<span class="k">fun</span> (<span class="i">f</span>, <span class="i">a</span>) <span class="k">-&gt;</span> <span class="i">f</span> <span class="i">a</span>) (<span class="i">LazyList</span><span class="o">.</span><span class="i">zip</span> <span onmouseout="hideTip(event, 'fs60', 216)" onmouseover="showTip(event, 'fs60', 216)" class="i">listf</span> <span onmouseout="hideTip(event, 'fs49', 217)" onmouseover="showTip(event, 'fs49', 217)" class="i">list</span>)) <span class="o">:&gt;</span> _


<span class="c">//  Generic functions that operate over all Applicative Funtors</span>
[&lt;<span onmouseout="hideTip(event, 'fs61', 218)" onmouseover="showTip(event, 'fs61', 218)" class="t">AutoOpen</span>&gt;]
<span class="k">module</span> <span class="t">ApplicativeModule</span> <span class="o">=</span> 

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs62', 219)" onmouseover="showTip(event, 'fs62', 219)" class="f">pure</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 220)" onmouseover="showTip(event, 'fs7', 220)" class="i">ApplicativeClass</span> <span class="k">when</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 221)" onmouseover="showTip(event, 'fs7', 221)" class="i">ApplicativeClass</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs7', 222)" onmouseover="showTip(event, 'fs7', 222)" class="t">ApplicativeClass</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 223)" onmouseover="showTip(event, 'fs7', 223)" class="i">ApplicativeClass</span><span class="o">&gt;</span> 
                             <span class="k">and</span>  <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 224)" onmouseover="showTip(event, 'fs7', 224)" class="i">ApplicativeClass</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 225)" onmouseover="showTip(event, 'fs3', 225)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 226)" onmouseover="showTip(event, 'fs7', 226)" class="i">ApplicativeClass</span>)<span class="o">&gt;</span> 
        (<span onmouseout="hideTip(event, 'fs37', 227)" onmouseover="showTip(event, 'fs37', 227)" class="i">v</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 228)" onmouseover="showTip(event, 'fs2', 228)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 229)" onmouseover="showTip(event, 'fs7', 229)" class="i">ApplicativeClass</span><span class="o">&gt;</span> <span class="o">=</span> 
        (<span class="k">new</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 230)" onmouseover="showTip(event, 'fs7', 230)" class="i">ApplicativeClass</span>())<span class="o">.</span><span class="f">Pure</span> <span onmouseout="hideTip(event, 'fs37', 231)" onmouseover="showTip(event, 'fs37', 231)" class="i">v</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 232)" onmouseover="showTip(event, 'fs63', 232)" class="f">apply</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 233)" onmouseover="showTip(event, 'fs7', 233)" class="i">ApplicativeClass</span> <span class="k">when</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 234)" onmouseover="showTip(event, 'fs7', 234)" class="i">ApplicativeClass</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs7', 235)" onmouseover="showTip(event, 'fs7', 235)" class="t">ApplicativeClass</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 236)" onmouseover="showTip(event, 'fs7', 236)" class="i">ApplicativeClass</span><span class="o">&gt;</span> 
                                 <span class="k">and</span>  <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 237)" onmouseover="showTip(event, 'fs7', 237)" class="i">ApplicativeClass</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 238)" onmouseover="showTip(event, 'fs3', 238)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 239)" onmouseover="showTip(event, 'fs7', 239)" class="i">ApplicativeClass</span>)<span class="o">&gt;</span> 
        (<span onmouseout="hideTip(event, 'fs64', 240)" onmouseover="showTip(event, 'fs64', 240)" class="i">ff</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 241)" onmouseover="showTip(event, 'fs2', 241)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 242)" onmouseover="showTip(event, 'fs7', 242)" class="i">ApplicativeClass</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs13', 243)" onmouseover="showTip(event, 'fs13', 243)" class="i">fa</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 244)" onmouseover="showTip(event, 'fs2', 244)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 245)" onmouseover="showTip(event, 'fs7', 245)" class="i">ApplicativeClass</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 246)" onmouseover="showTip(event, 'fs2', 246)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 247)" onmouseover="showTip(event, 'fs7', 247)" class="i">ApplicativeClass</span><span class="o">&gt;</span> <span class="o">=</span>
        (<span class="k">new</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs7', 248)" onmouseover="showTip(event, 'fs7', 248)" class="i">ApplicativeClass</span>())<span class="o">.</span><span class="f">Apply</span> <span onmouseout="hideTip(event, 'fs64', 249)" onmouseover="showTip(event, 'fs64', 249)" class="i">ff</span> <span onmouseout="hideTip(event, 'fs13', 250)" onmouseover="showTip(event, 'fs13', 250)" class="i">fa</span>

    <span class="k">let</span> (<span class="o">&lt;*&gt;</span>) <span onmouseout="hideTip(event, 'fs65', 251)" onmouseover="showTip(event, 'fs65', 251)" class="i">ff</span> <span onmouseout="hideTip(event, 'fs66', 252)" onmouseover="showTip(event, 'fs66', 252)" class="i">fa</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs63', 253)" onmouseover="showTip(event, 'fs63', 253)" class="f">apply</span> <span onmouseout="hideTip(event, 'fs65', 254)" onmouseover="showTip(event, 'fs65', 254)" class="i">ff</span> <span onmouseout="hideTip(event, 'fs66', 255)" onmouseover="showTip(event, 'fs66', 255)" class="i">fa</span>
    <span class="k">let</span> (<span class="o">$</span>) <span onmouseout="hideTip(event, 'fs67', 256)" onmouseover="showTip(event, 'fs67', 256)" class="f">f</span> <span onmouseout="hideTip(event, 'fs66', 257)" onmouseover="showTip(event, 'fs66', 257)" class="i">fa</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs62', 258)" onmouseover="showTip(event, 'fs62', 258)" class="f">pure</span> <span onmouseout="hideTip(event, 'fs67', 259)" onmouseover="showTip(event, 'fs67', 259)" class="f">f</span> <span class="o">&lt;*&gt;</span> <span onmouseout="hideTip(event, 'fs66', 260)" onmouseover="showTip(event, 'fs66', 260)" class="i">fa</span>
    <span class="c">// Monoidal - pair</span>
    <span class="k">let</span> (<span class="o">&lt;.&gt;</span>) <span onmouseout="hideTip(event, 'fs68', 261)" onmouseover="showTip(event, 'fs68', 261)" class="i">fa</span> <span onmouseout="hideTip(event, 'fs69', 262)" onmouseover="showTip(event, 'fs69', 262)" class="i">fb</span> <span class="o">=</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs70', 263)" onmouseover="showTip(event, 'fs70', 263)" class="i">a</span> <span onmouseout="hideTip(event, 'fs71', 264)" onmouseover="showTip(event, 'fs71', 264)" class="i">b</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs70', 265)" onmouseover="showTip(event, 'fs70', 265)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs71', 266)" onmouseover="showTip(event, 'fs71', 266)" class="i">b</span>)) <span class="o">$</span> <span onmouseout="hideTip(event, 'fs68', 267)" onmouseover="showTip(event, 'fs68', 267)" class="i">fa</span> <span class="o">&lt;*&gt;</span> <span onmouseout="hideTip(event, 'fs69', 268)" onmouseover="showTip(event, 'fs69', 268)" class="i">fb</span>


<span class="c">//  Generic functions that operate over all Monads</span>
[&lt;<span onmouseout="hideTip(event, 'fs61', 269)" onmouseover="showTip(event, 'fs61', 269)" class="t">AutoOpen</span>&gt;]
<span class="k">module</span> <span class="t">MonadModule</span> <span class="o">=</span> 

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs72', 270)" onmouseover="showTip(event, 'fs72', 270)" class="f">unit</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 271)" onmouseover="showTip(event, 'fs16', 271)" class="i">MonadClass</span> <span class="k">when</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 272)" onmouseover="showTip(event, 'fs16', 272)" class="i">MonadClass</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs16', 273)" onmouseover="showTip(event, 'fs16', 273)" class="t">MonadClass</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 274)" onmouseover="showTip(event, 'fs16', 274)" class="i">MonadClass</span><span class="o">&gt;</span> 
                             <span class="k">and</span>  <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 275)" onmouseover="showTip(event, 'fs16', 275)" class="i">MonadClass</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs72', 276)" onmouseover="showTip(event, 'fs72', 276)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 277)" onmouseover="showTip(event, 'fs16', 277)" class="i">MonadClass</span>)<span class="o">&gt;</span> 
        (<span onmouseout="hideTip(event, 'fs37', 278)" onmouseover="showTip(event, 'fs37', 278)" class="i">v</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 279)" onmouseover="showTip(event, 'fs2', 279)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 280)" onmouseover="showTip(event, 'fs16', 280)" class="i">MonadClass</span><span class="o">&gt;</span> <span class="o">=</span> 
        (<span class="k">new</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 281)" onmouseover="showTip(event, 'fs16', 281)" class="i">MonadClass</span>())<span class="o">.</span><span class="f">Return</span> <span onmouseout="hideTip(event, 'fs37', 282)" onmouseover="showTip(event, 'fs37', 282)" class="i">v</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs73', 283)" onmouseover="showTip(event, 'fs73', 283)" class="f">bind</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 284)" onmouseover="showTip(event, 'fs16', 284)" class="i">MonadClass</span> <span class="k">when</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 285)" onmouseover="showTip(event, 'fs16', 285)" class="i">MonadClass</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs16', 286)" onmouseover="showTip(event, 'fs16', 286)" class="t">MonadClass</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 287)" onmouseover="showTip(event, 'fs16', 287)" class="i">MonadClass</span><span class="o">&gt;</span> 
                                 <span class="k">and</span>  <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 288)" onmouseover="showTip(event, 'fs16', 288)" class="i">MonadClass</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs72', 289)" onmouseover="showTip(event, 'fs72', 289)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 290)" onmouseover="showTip(event, 'fs16', 290)" class="i">MonadClass</span>)<span class="o">&gt;</span> 
        (<span onmouseout="hideTip(event, 'fs74', 291)" onmouseover="showTip(event, 'fs74', 291)" class="i">m</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 292)" onmouseover="showTip(event, 'fs2', 292)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 293)" onmouseover="showTip(event, 'fs16', 293)" class="i">MonadClass</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs75', 294)" onmouseover="showTip(event, 'fs75', 294)" class="f">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 295)" onmouseover="showTip(event, 'fs2', 295)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 296)" onmouseover="showTip(event, 'fs16', 296)" class="i">MonadClass</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 297)" onmouseover="showTip(event, 'fs2', 297)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 298)" onmouseover="showTip(event, 'fs16', 298)" class="i">MonadClass</span><span class="o">&gt;</span> <span class="o">=</span> 
        (<span class="k">new</span> <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 299)" onmouseover="showTip(event, 'fs16', 299)" class="i">MonadClass</span>())<span class="o">.</span><span class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs74', 300)" onmouseover="showTip(event, 'fs74', 300)" class="i">m</span>, <span onmouseout="hideTip(event, 'fs75', 301)" onmouseover="showTip(event, 'fs75', 301)" class="f">f</span>)

    <span class="k">let</span> (<span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs73', 302)" onmouseover="showTip(event, 'fs73', 302)" class="f">bind</span>
    <span class="k">let</span> (<span class="o">&gt;</span><span class="o">&gt;</span>) <span onmouseout="hideTip(event, 'fs76', 303)" onmouseover="showTip(event, 'fs76', 303)" class="i">ma</span> <span onmouseout="hideTip(event, 'fs77', 304)" onmouseover="showTip(event, 'fs77', 304)" class="i">mb</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs76', 305)" onmouseover="showTip(event, 'fs76', 305)" class="i">ma</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs77', 306)" onmouseover="showTip(event, 'fs77', 306)" class="i">mb</span>

    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs78', 307)" onmouseover="showTip(event, 'fs78', 307)" class="f">sequence</span> (<span onmouseout="hideTip(event, 'fs79', 308)" onmouseover="showTip(event, 'fs79', 308)" class="i">list</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 309)" onmouseover="showTip(event, 'fs2', 309)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 310)" onmouseover="showTip(event, 'fs16', 310)" class="i">MonadClass</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs79', 311)" onmouseover="showTip(event, 'fs79', 311)" class="t">list</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 312)" onmouseover="showTip(event, 'fs2', 312)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span onmouseout="hideTip(event, 'fs79', 313)" onmouseover="showTip(event, 'fs79', 313)" class="t">list</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 314)" onmouseover="showTip(event, 'fs16', 314)" class="i">MonadClass</span><span class="o">&gt;</span> <span class="o">=</span> 
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs79', 315)" onmouseover="showTip(event, 'fs79', 315)" class="i">list</span> <span class="k">with</span>
            | [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs72', 316)" onmouseover="showTip(event, 'fs72', 316)" class="f">unit</span> []
            | <span onmouseout="hideTip(event, 'fs80', 317)" onmouseover="showTip(event, 'fs80', 317)" class="i">m</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs81', 318)" onmouseover="showTip(event, 'fs81', 318)" class="i">ms</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs80', 319)" onmouseover="showTip(event, 'fs80', 319)" class="i">m</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs37', 320)" onmouseover="showTip(event, 'fs37', 320)" class="i">v</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs78', 321)" onmouseover="showTip(event, 'fs78', 321)" class="f">sequence</span> <span onmouseout="hideTip(event, 'fs81', 322)" onmouseover="showTip(event, 'fs81', 322)" class="i">ms</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs82', 323)" onmouseover="showTip(event, 'fs82', 323)" class="i">vs</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs72', 324)" onmouseover="showTip(event, 'fs72', 324)" class="f">unit</span> (<span onmouseout="hideTip(event, 'fs37', 325)" onmouseover="showTip(event, 'fs37', 325)" class="i">v</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs82', 326)" onmouseover="showTip(event, 'fs82', 326)" class="i">vs</span>)

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs83', 327)" onmouseover="showTip(event, 'fs83', 327)" class="f">mapM</span> (<span onmouseout="hideTip(event, 'fs84', 328)" onmouseover="showTip(event, 'fs84', 328)" class="f">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 329)" onmouseover="showTip(event, 'fs2', 329)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 330)" onmouseover="showTip(event, 'fs16', 330)" class="i">MonadClass</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs85', 331)" onmouseover="showTip(event, 'fs85', 331)" class="i">list</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span onmouseout="hideTip(event, 'fs85', 332)" onmouseover="showTip(event, 'fs85', 332)" class="t">list</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 333)" onmouseover="showTip(event, 'fs2', 333)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span> <span onmouseout="hideTip(event, 'fs85', 334)" onmouseover="showTip(event, 'fs85', 334)" class="t">list</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 335)" onmouseover="showTip(event, 'fs16', 335)" class="i">MonadClass</span><span class="o">&gt;</span> <span class="o">=</span> 
        (<span onmouseout="hideTip(event, 'fs78', 336)" onmouseover="showTip(event, 'fs78', 336)" class="f">sequence</span> <span class="o">&lt;&lt;</span> <span onmouseout="hideTip(event, 'fs86', 337)" onmouseover="showTip(event, 'fs86', 337)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs87', 338)" onmouseover="showTip(event, 'fs87', 338)" class="f">map</span> <span onmouseout="hideTip(event, 'fs84', 339)" onmouseover="showTip(event, 'fs84', 339)" class="f">f</span>) <span onmouseout="hideTip(event, 'fs85', 340)" onmouseover="showTip(event, 'fs85', 340)" class="i">list</span>

    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs88', 341)" onmouseover="showTip(event, 'fs88', 341)" class="f">filterM</span> (<span onmouseout="hideTip(event, 'fs89', 342)" onmouseover="showTip(event, 'fs89', 342)" class="f">p</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 343)" onmouseover="showTip(event, 'fs2', 343)" class="t">Generic</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs90', 344)" onmouseover="showTip(event, 'fs90', 344)" class="t">bool</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 345)" onmouseover="showTip(event, 'fs16', 345)" class="i">MonadClass</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs85', 346)" onmouseover="showTip(event, 'fs85', 346)" class="i">list</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span onmouseout="hideTip(event, 'fs85', 347)" onmouseover="showTip(event, 'fs85', 347)" class="t">list</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 348)" onmouseover="showTip(event, 'fs2', 348)" class="t">Generic</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span onmouseout="hideTip(event, 'fs85', 349)" onmouseover="showTip(event, 'fs85', 349)" class="t">list</span>, <span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs16', 350)" onmouseover="showTip(event, 'fs16', 350)" class="i">MonadClass</span><span class="o">&gt;</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs85', 351)" onmouseover="showTip(event, 'fs85', 351)" class="i">list</span>  <span class="k">with</span>
        | [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs72', 352)" onmouseover="showTip(event, 'fs72', 352)" class="f">unit</span> []
        | <span onmouseout="hideTip(event, 'fs91', 353)" onmouseover="showTip(event, 'fs91', 353)" class="i">x</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs92', 354)" onmouseover="showTip(event, 'fs92', 354)" class="i">xs</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs89', 355)" onmouseover="showTip(event, 'fs89', 355)" class="f">p</span> <span onmouseout="hideTip(event, 'fs91', 356)" onmouseover="showTip(event, 'fs91', 356)" class="i">x</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs93', 357)" onmouseover="showTip(event, 'fs93', 357)" class="i">b</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs88', 358)" onmouseover="showTip(event, 'fs88', 358)" class="f">filterM</span> <span onmouseout="hideTip(event, 'fs89', 359)" onmouseover="showTip(event, 'fs89', 359)" class="f">p</span> <span onmouseout="hideTip(event, 'fs92', 360)" onmouseover="showTip(event, 'fs92', 360)" class="i">xs</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs94', 361)" onmouseover="showTip(event, 'fs94', 361)" class="i">ys</span> <span class="k">-&gt;</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs93', 362)" onmouseover="showTip(event, 'fs93', 362)" class="i">b</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs72', 363)" onmouseover="showTip(event, 'fs72', 363)" class="f">unit</span> (<span onmouseout="hideTip(event, 'fs91', 364)" onmouseover="showTip(event, 'fs91', 364)" class="i">x</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs94', 365)" onmouseover="showTip(event, 'fs94', 365)" class="i">ys</span>) <span class="k">else</span> <span onmouseout="hideTip(event, 'fs72', 366)" onmouseover="showTip(event, 'fs72', 366)" class="f">unit</span> <span onmouseout="hideTip(event, 'fs94', 367)" onmouseover="showTip(event, 'fs94', 367)" class="i">ys</span>

<span class="c">// Examples</span>

<span class="c">// Maybe Monad Examples</span>
<span onmouseout="hideTip(event, 'fs41', 368)" onmouseover="showTip(event, 'fs41', 368)" class="i">maybe</span> { <span class="k">return</span> <span class="n">1</span> } <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs95', 369)" onmouseover="showTip(event, 'fs95', 369)" class="i">k</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs41', 370)" onmouseover="showTip(event, 'fs41', 370)" class="i">maybe</span> { <span class="k">return</span> <span onmouseout="hideTip(event, 'fs95', 371)" onmouseover="showTip(event, 'fs95', 371)" class="i">k</span> <span class="o">+</span> <span class="n">1</span> } <span class="c">// Some 2</span>
<span onmouseout="hideTip(event, 'fs41', 372)" onmouseover="showTip(event, 'fs41', 372)" class="i">maybe</span> { <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs95', 373)" onmouseover="showTip(event, 'fs95', 373)" class="i">k</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs41', 374)" onmouseover="showTip(event, 'fs41', 374)" class="i">maybe</span> { <span class="k">return</span> <span class="n">1</span> } <span class="k">in</span> <span class="k">return</span> <span onmouseout="hideTip(event, 'fs95', 375)" onmouseover="showTip(event, 'fs95', 375)" class="i">k</span> <span class="o">+</span> <span class="n">1</span> } <span class="c">// Some 2</span>

<span onmouseout="hideTip(event, 'fs78', 376)" onmouseover="showTip(event, 'fs78', 376)" class="f">sequence</span> [<span onmouseout="hideTip(event, 'fs41', 377)" onmouseover="showTip(event, 'fs41', 377)" class="i">maybe</span> { <span class="k">return</span> <span class="n">1</span> }; <span onmouseout="hideTip(event, 'fs41', 378)" onmouseover="showTip(event, 'fs41', 378)" class="i">maybe</span> { <span class="k">return</span> <span class="n">2</span> }; <span onmouseout="hideTip(event, 'fs41', 379)" onmouseover="showTip(event, 'fs41', 379)" class="i">maybe</span> { <span class="k">return</span> <span class="n">3</span> }] <span class="c">// Some [1; 2; 3]</span>
<span onmouseout="hideTip(event, 'fs83', 380)" onmouseover="showTip(event, 'fs83', 380)" class="f">mapM</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs96', 381)" onmouseover="showTip(event, 'fs96', 381)" class="i">v</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs41', 382)" onmouseover="showTip(event, 'fs41', 382)" class="i">maybe</span> { <span class="k">return</span> <span onmouseout="hideTip(event, 'fs96', 383)" onmouseover="showTip(event, 'fs96', 383)" class="i">v</span> <span class="o">*</span> <span class="n">2</span> }) [<span class="n">1</span> <span class="o">..</span> <span class="n">5</span>] <span class="c">//  Some [2; 4; 6; 8]</span>
<span onmouseout="hideTip(event, 'fs88', 384)" onmouseover="showTip(event, 'fs88', 384)" class="f">filterM</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs96', 385)" onmouseover="showTip(event, 'fs96', 385)" class="i">v</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs41', 386)" onmouseover="showTip(event, 'fs41', 386)" class="i">maybe</span> { <span class="k">return</span> <span onmouseout="hideTip(event, 'fs96', 387)" onmouseover="showTip(event, 'fs96', 387)" class="i">v</span> <span class="o">%</span> <span class="n">2</span> <span class="o">=</span> <span class="n">0</span> }) [<span class="n">1..</span><span class="n">5</span>] <span class="c">// Some [2; 4]</span>

<span class="c">// ZipList example</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs97', 388)" onmouseover="showTip(event, 'fs97', 388)" class="f">transpose</span> (<span onmouseout="hideTip(event, 'fs98', 389)" onmouseover="showTip(event, 'fs98', 389)" class="i">listoflist</span> <span class="o">:</span> <span class="i">LazyList</span><span class="o">&lt;</span><span class="i">LazyList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 390)" onmouseover="showTip(event, 'fs2', 390)" class="t">Generic</span><span class="o">&lt;</span><span class="i">LazyList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>, <span onmouseout="hideTip(event, 'fs54', 391)" onmouseover="showTip(event, 'fs54', 391)" class="i">ListApplicativeClass</span><span class="o">&gt;</span> <span class="o">=</span> 
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs98', 392)" onmouseover="showTip(event, 'fs98', 392)" class="i">listoflist</span> <span class="k">with</span>
    | <span class="i">LazyList</span><span class="o">.</span><span class="i">Nil</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs62', 393)" onmouseover="showTip(event, 'fs62', 393)" class="i">pure</span> <span class="i">LazyList</span><span class="o">.</span><span class="i">empty</span>
    | <span class="i">LazyList</span><span class="o">.</span><span class="i">Cons</span> (<span class="i">xs</span>, <span class="i">xss</span>) <span class="k">-&gt;</span> <span class="i">LazyList</span><span class="o">.</span><span class="i">cons</span> <span class="o">$</span> (<span onmouseout="hideTip(event, 'fs53', 394)" onmouseover="showTip(event, 'fs53', 394)" class="i">ListAppGeneric</span> <span class="i">xs</span>) <span class="o">&lt;*&gt;</span> <span onmouseout="hideTip(event, 'fs97', 395)" onmouseover="showTip(event, 'fs97', 395)" class="i">transpose</span> <span class="i">xss</span>

[[<span class="n">1</span>; <span class="n">2</span>; <span class="n">3</span>]; [<span class="n">4</span>; <span class="n">5</span>; <span class="n">6</span>]]
  <span class="o">|&gt;</span> <span class="i">LazyList</span><span class="o">.</span><span class="i">ofList</span>
  <span class="o">|&gt;</span> <span class="i">LazyList</span><span class="o">.</span><span class="i">map</span> <span class="i">LazyList</span><span class="o">.</span><span class="i">ofList</span>
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs97', 396)" onmouseover="showTip(event, 'fs97', 396)" class="f">transpose</span> <span class="c">// result: ListAppGeneric (seq [seq [1; 4]; seq [2; 5]; seq [3; 6]])</span>

<span class="c">// List Monad example</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs99', 397)" onmouseover="showTip(event, 'fs99', 397)" class="i">onetoten</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs42', 398)" onmouseover="showTip(event, 'fs42', 398)" class="p">ListMonadGeneric</span> (<span class="i">LazyList</span><span class="o">.</span><span class="i">ofList</span> [<span class="n">1..</span><span class="n">3</span>]) 
(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs100', 399)" onmouseover="showTip(event, 'fs100', 399)" class="i">a</span> <span onmouseout="hideTip(event, 'fs101', 400)" onmouseover="showTip(event, 'fs101', 400)" class="i">b</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs102', 401)" onmouseover="showTip(event, 'fs102', 401)" class="f">sprintf</span> <span class="s">&quot;</span><span class="pf">%d</span><span class="s"> * </span><span class="pf">%d</span><span class="s"> = </span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs100', 402)" onmouseover="showTip(event, 'fs100', 402)" class="i">a</span> <span onmouseout="hideTip(event, 'fs101', 403)" onmouseover="showTip(event, 'fs101', 403)" class="i">b</span> (<span onmouseout="hideTip(event, 'fs100', 404)" onmouseover="showTip(event, 'fs100', 404)" class="i">a</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs101', 405)" onmouseover="showTip(event, 'fs101', 405)" class="i">b</span>)) <span class="o">$</span> <span onmouseout="hideTip(event, 'fs99', 406)" onmouseover="showTip(event, 'fs99', 406)" class="i">onetoten</span> <span class="o">&lt;*&gt;</span> <span onmouseout="hideTip(event, 'fs99', 407)" onmouseover="showTip(event, 'fs99', 407)" class="i">onetoten</span> 
<span class="c">// result: ListMonadGeneric (seq [&quot;1 * 1 = 1&quot;; &quot;1 * 2 = 2&quot;; &quot;1 * 3 = 3&quot;; &quot;2 * 1 = 2&quot;; ...])</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">type Generic&lt;&#39;T,&#39;TypeClass (requires default constructor)&gt;<br /><br />Full name: Script.Generic&lt;_,_&gt;</div>
<div class="tip" id="fs3">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs4">Multiple items<br />type AbstractClassAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AbstractClassAttribute<br /><br />Full name: Microsoft.FSharp.Core.AbstractClassAttribute<br /><br />--------------------<br />new : unit -&gt; AbstractClassAttribute</div>
<div class="tip" id="fs5">Multiple items<br />type FunctorClass&lt;&#39;FunctorClass (requires &#39;FunctorClass :&gt; FunctorClass&lt;&#39;FunctorClass&gt; and default constructor)&gt; =<br />&#160;&#160;new : unit -&gt; FunctorClass&lt;&#39;FunctorClass&gt;<br />&#160;&#160;abstract member FMap : (&#39;T -&gt; &#39;R) -&gt; Generic&lt;&#39;T,&#39;FunctorClass&gt; -&gt; Generic&lt;&#39;R,&#39;FunctorClass&gt;<br /><br />Full name: Script.FunctorClass&lt;_&gt;<br /><br />--------------------<br />new : unit -&gt; FunctorClass&lt;&#39;FunctorClass&gt;</div>
<div class="tip" id="fs6">abstract member FunctorClass.FMap : (&#39;T -&gt; &#39;R) -&gt; Generic&lt;&#39;T,&#39;FunctorClass&gt; -&gt; Generic&lt;&#39;R,&#39;FunctorClass&gt;<br /><br />Full name: Script.FunctorClass`1.FMap</div>
<div class="tip" id="fs7">Multiple items<br />type ApplicativeClass&lt;&#39;ApplicativeClass (requires &#39;ApplicativeClass :&gt; ApplicativeClass&lt;&#39;ApplicativeClass&gt; and default constructor)&gt; =<br />&#160;&#160;inherit FunctorClass&lt;&#39;ApplicativeClass&gt;<br />&#160;&#160;new : unit -&gt; ApplicativeClass&lt;&#39;ApplicativeClass&gt;<br />&#160;&#160;abstract member Apply : Generic&lt;(&#39;T -&gt; &#39;R),&#39;ApplicativeClass&gt; -&gt; Generic&lt;&#39;T,&#39;ApplicativeClass&gt; -&gt; Generic&lt;&#39;R,&#39;ApplicativeClass&gt;<br />&#160;&#160;abstract member Pure : &#39;T -&gt; Generic&lt;&#39;T,&#39;ApplicativeClass&gt;<br />&#160;&#160;override FMap : f:(&#39;T -&gt; &#39;R) -&gt; fa:Generic&lt;&#39;T,&#39;ApplicativeClass&gt; -&gt; Generic&lt;&#39;R,&#39;ApplicativeClass&gt;<br /><br />Full name: Script.ApplicativeClass&lt;_&gt;<br /><br />--------------------<br />new : unit -&gt; ApplicativeClass&lt;&#39;ApplicativeClass&gt;</div>
<div class="tip" id="fs8">abstract member ApplicativeClass.Pure : &#39;T -&gt; Generic&lt;&#39;T,&#39;ApplicativeClass&gt;<br /><br />Full name: Script.ApplicativeClass`1.Pure</div>
<div class="tip" id="fs9">abstract member ApplicativeClass.Apply : Generic&lt;(&#39;T -&gt; &#39;R),&#39;ApplicativeClass&gt; -&gt; Generic&lt;&#39;T,&#39;ApplicativeClass&gt; -&gt; Generic&lt;&#39;R,&#39;ApplicativeClass&gt;<br /><br />Full name: Script.ApplicativeClass`1.Apply</div>
<div class="tip" id="fs10">val this : ApplicativeClass&lt;&#39;ApplicativeClass&gt; (requires &#39;ApplicativeClass :&gt; ApplicativeClass&lt;&#39;ApplicativeClass&gt; and default constructor)</div>
<div class="tip" id="fs11">override ApplicativeClass.FMap : f:(&#39;T -&gt; &#39;R) -&gt; fa:Generic&lt;&#39;T,&#39;ApplicativeClass&gt; -&gt; Generic&lt;&#39;R,&#39;ApplicativeClass&gt;<br /><br />Full name: Script.ApplicativeClass`1.FMap</div>
<div class="tip" id="fs12">val f : (&#39;T -&gt; &#39;R)</div>
<div class="tip" id="fs13">val fa : Generic&lt;&#39;T,&#39;ApplicativeClass&gt; (requires &#39;ApplicativeClass :&gt; ApplicativeClass&lt;&#39;ApplicativeClass&gt; and default constructor)</div>
<div class="tip" id="fs14">abstract member ApplicativeClass.Apply : Generic&lt;(&#39;T -&gt; &#39;R),&#39;ApplicativeClass&gt; -&gt; Generic&lt;&#39;T,&#39;ApplicativeClass&gt; -&gt; Generic&lt;&#39;R,&#39;ApplicativeClass&gt;</div>
<div class="tip" id="fs15">abstract member ApplicativeClass.Pure : &#39;T -&gt; Generic&lt;&#39;T,&#39;ApplicativeClass&gt;</div>
<div class="tip" id="fs16">Multiple items<br />type MonadClass&lt;&#39;MonadClass (requires &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt; and default constructor)&gt; =<br />&#160;&#160;inherit ApplicativeClass&lt;&#39;MonadClass&gt;<br />&#160;&#160;new : unit -&gt; MonadClass&lt;&#39;MonadClass&gt;<br />&#160;&#160;abstract member Bind : Generic&lt;&#39;T,&#39;MonadClass&gt; * (&#39;T -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;) -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;<br />&#160;&#160;abstract member Return : &#39;T -&gt; Generic&lt;&#39;T,&#39;MonadClass&gt;<br />&#160;&#160;override Apply : mf:Generic&lt;(&#39;T -&gt; &#39;R),&#39;MonadClass&gt; -&gt; ma:Generic&lt;&#39;T,&#39;MonadClass&gt; -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;<br />&#160;&#160;override Pure : value:&#39;T -&gt; Generic&lt;&#39;T,&#39;MonadClass&gt;<br />&#160;&#160;member Then : ma:Generic&lt;&#39;T,&#39;MonadClass&gt; * mb:Generic&lt;&#39;R,&#39;MonadClass&gt; -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;<br /><br />Full name: Script.MonadClass&lt;_&gt;<br /><br />--------------------<br />new : unit -&gt; MonadClass&lt;&#39;MonadClass&gt;</div>
<div class="tip" id="fs17">abstract member MonadClass.Return : &#39;T -&gt; Generic&lt;&#39;T,&#39;MonadClass&gt;<br /><br />Full name: Script.MonadClass`1.Return</div>
<div class="tip" id="fs18">abstract member MonadClass.Bind : Generic&lt;&#39;T,&#39;MonadClass&gt; * (&#39;T -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;) -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;<br /><br />Full name: Script.MonadClass`1.Bind</div>
<div class="tip" id="fs19">val this : MonadClass&lt;&#39;MonadClass&gt; (requires &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt; and default constructor)</div>
<div class="tip" id="fs20">member MonadClass.Then : ma:Generic&lt;&#39;T,&#39;MonadClass&gt; * mb:Generic&lt;&#39;R,&#39;MonadClass&gt; -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;<br /><br />Full name: Script.MonadClass`1.Then</div>
<div class="tip" id="fs21">val ma : Generic&lt;&#39;T,&#39;MonadClass&gt; (requires &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt; and default constructor)</div>
<div class="tip" id="fs22">val mb : Generic&lt;&#39;R,&#39;MonadClass&gt; (requires &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt; and default constructor)</div>
<div class="tip" id="fs23">abstract member MonadClass.Bind : Generic&lt;&#39;T,&#39;MonadClass&gt; * (&#39;T -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;) -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;</div>
<div class="tip" id="fs24">override MonadClass.Pure : value:&#39;T -&gt; Generic&lt;&#39;T,&#39;MonadClass&gt;<br /><br />Full name: Script.MonadClass`1.Pure</div>
<div class="tip" id="fs25">val value : &#39;T</div>
<div class="tip" id="fs26">abstract member MonadClass.Return : &#39;T -&gt; Generic&lt;&#39;T,&#39;MonadClass&gt;</div>
<div class="tip" id="fs27">override MonadClass.Apply : mf:Generic&lt;(&#39;T -&gt; &#39;R),&#39;MonadClass&gt; -&gt; ma:Generic&lt;&#39;T,&#39;MonadClass&gt; -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;<br /><br />Full name: Script.MonadClass`1.Apply</div>
<div class="tip" id="fs28">val mf : Generic&lt;(&#39;T -&gt; &#39;R),&#39;MonadClass&gt; (requires &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt; and default constructor)</div>
<div class="tip" id="fs29">val a : &#39;T</div>
<div class="tip" id="fs30">override MonadClass.Pure : value:&#39;T -&gt; Generic&lt;&#39;T,&#39;MonadClass&gt;</div>
<div class="tip" id="fs31">type Maybe&lt;&#39;T&gt; =<br />&#160;&#160;| None<br />&#160;&#160;| Some of &#39;T<br />&#160;&#160;interface Generic&lt;&#39;T,MaybeClass&gt;<br /><br />Full name: Script.Maybe&lt;_&gt;</div>
<div class="tip" id="fs32">union case Maybe.None: Maybe&lt;&#39;T&gt;</div>
<div class="tip" id="fs33">union case Maybe.Some: &#39;T -&gt; Maybe&lt;&#39;T&gt;</div>
<div class="tip" id="fs34">Multiple items<br />type MaybeClass =<br />&#160;&#160;inherit MonadClass&lt;MaybeClass&gt;<br />&#160;&#160;new : unit -&gt; MaybeClass<br />&#160;&#160;override Bind : m:Generic&lt;&#39;T,MaybeClass&gt; * f:(&#39;T -&gt; Generic&lt;&#39;R,MaybeClass&gt;) -&gt; Generic&lt;&#39;R,MaybeClass&gt;<br />&#160;&#160;override Return : v:&#39;T -&gt; Generic&lt;&#39;T,MaybeClass&gt;<br /><br />Full name: Script.MaybeClass<br /><br />--------------------<br />new : unit -&gt; MaybeClass</div>
<div class="tip" id="fs35">val this : MaybeClass</div>
<div class="tip" id="fs36">override MaybeClass.Return : v:&#39;T -&gt; Generic&lt;&#39;T,MaybeClass&gt;<br /><br />Full name: Script.MaybeClass.Return</div>
<div class="tip" id="fs37">val v : &#39;T</div>
<div class="tip" id="fs38">override MaybeClass.Bind : m:Generic&lt;&#39;T,MaybeClass&gt; * f:(&#39;T -&gt; Generic&lt;&#39;R,MaybeClass&gt;) -&gt; Generic&lt;&#39;R,MaybeClass&gt;<br /><br />Full name: Script.MaybeClass.Bind</div>
<div class="tip" id="fs39">val m : Generic&lt;&#39;T,MaybeClass&gt;</div>
<div class="tip" id="fs40">val f : (&#39;T -&gt; Generic&lt;&#39;R,MaybeClass&gt;)</div>
<div class="tip" id="fs41">val maybe : MonadClass&lt;MaybeClass&gt;<br /><br />Full name: Script.maybe</div>
<div class="tip" id="fs42">Multiple items<br />union case ListMonadGeneric.ListMonadGeneric: obj -&gt; ListMonadGeneric&lt;&#39;T&gt;<br /><br />--------------------<br />type ListMonadGeneric&lt;&#39;T&gt; =<br />&#160;&#160;| ListMonadGeneric of obj<br />&#160;&#160;interface Generic&lt;&#39;T,ListMonadClass&gt;<br /><br />Full name: Script.ListMonadGeneric&lt;_&gt;</div>
<div class="tip" id="fs43">Multiple items<br />type ListMonadClass =<br />&#160;&#160;inherit MonadClass&lt;ListMonadClass&gt;<br />&#160;&#160;new : unit -&gt; ListMonadClass<br />&#160;&#160;override Bind : m:Generic&lt;&#39;T,ListMonadClass&gt; * f:(&#39;T -&gt; Generic&lt;&#39;R,ListMonadClass&gt;) -&gt; Generic&lt;&#39;R,ListMonadClass&gt;<br />&#160;&#160;override Return : v:&#39;T -&gt; Generic&lt;&#39;T,ListMonadClass&gt;<br /><br />Full name: Script.ListMonadClass<br /><br />--------------------<br />new : unit -&gt; ListMonadClass</div>
<div class="tip" id="fs44">val this : ListMonadClass</div>
<div class="tip" id="fs45">override ListMonadClass.Return : v:&#39;T -&gt; Generic&lt;&#39;T,ListMonadClass&gt;<br /><br />Full name: Script.ListMonadClass.Return</div>
<div class="tip" id="fs46">override ListMonadClass.Bind : m:Generic&lt;&#39;T,ListMonadClass&gt; * f:(&#39;T -&gt; Generic&lt;&#39;R,ListMonadClass&gt;) -&gt; Generic&lt;&#39;R,ListMonadClass&gt;<br /><br />Full name: Script.ListMonadClass.Bind</div>
<div class="tip" id="fs47">val m : Generic&lt;&#39;T,ListMonadClass&gt;</div>
<div class="tip" id="fs48">val f : (&#39;T -&gt; Generic&lt;&#39;R,ListMonadClass&gt;)</div>
<div class="tip" id="fs49">Multiple items<br />val list : obj<br /><br />--------------------<br />type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs50">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs51">val collect : mapping:(&#39;T -&gt; #seq&lt;&#39;U&gt;) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.collect</div>
<div class="tip" id="fs52">val list&#39; : obj</div>
<div class="tip" id="fs53">Multiple items<br />union case ListAppGeneric.ListAppGeneric: obj -&gt; ListAppGeneric&lt;&#39;T&gt;<br /><br />--------------------<br />type ListAppGeneric&lt;&#39;T&gt; =<br />&#160;&#160;| ListAppGeneric of obj<br />&#160;&#160;interface Generic&lt;&#39;T,ListApplicativeClass&gt;<br /><br />Full name: Script.ListAppGeneric&lt;_&gt;</div>
<div class="tip" id="fs54">Multiple items<br />type ListApplicativeClass =<br />&#160;&#160;inherit ApplicativeClass&lt;ListApplicativeClass&gt;<br />&#160;&#160;new : unit -&gt; ListApplicativeClass<br />&#160;&#160;override Apply : ff:Generic&lt;(&#39;T -&gt; &#39;R),ListApplicativeClass&gt; -&gt; fa:Generic&lt;&#39;T,ListApplicativeClass&gt; -&gt; Generic&lt;&#39;R,ListApplicativeClass&gt;<br />&#160;&#160;override Pure : v:&#39;T -&gt; Generic&lt;&#39;T,ListApplicativeClass&gt;<br /><br />Full name: Script.ListApplicativeClass<br /><br />--------------------<br />new : unit -&gt; ListApplicativeClass</div>
<div class="tip" id="fs55">val this : ListApplicativeClass</div>
<div class="tip" id="fs56">override ListApplicativeClass.Pure : v:&#39;T -&gt; Generic&lt;&#39;T,ListApplicativeClass&gt;<br /><br />Full name: Script.ListApplicativeClass.Pure</div>
<div class="tip" id="fs57">override ListApplicativeClass.Apply : ff:Generic&lt;(&#39;T -&gt; &#39;R),ListApplicativeClass&gt; -&gt; fa:Generic&lt;&#39;T,ListApplicativeClass&gt; -&gt; Generic&lt;&#39;R,ListApplicativeClass&gt;<br /><br />Full name: Script.ListApplicativeClass.Apply</div>
<div class="tip" id="fs58">val ff : Generic&lt;(&#39;T -&gt; &#39;R),ListApplicativeClass&gt;</div>
<div class="tip" id="fs59">val fa : Generic&lt;&#39;T,ListApplicativeClass&gt;</div>
<div class="tip" id="fs60">val listf : obj</div>
<div class="tip" id="fs61">Multiple items<br />type AutoOpenAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AutoOpenAttribute<br />&#160;&#160;new : path:string -&gt; AutoOpenAttribute<br />&#160;&#160;member Path : string<br /><br />Full name: Microsoft.FSharp.Core.AutoOpenAttribute<br /><br />--------------------<br />new : unit -&gt; AutoOpenAttribute<br />new : path:string -&gt; AutoOpenAttribute</div>
<div class="tip" id="fs62">val pure : v:&#39;T -&gt; Generic&lt;&#39;T,&#39;ApplicativeClass&gt; (requires &#39;ApplicativeClass :&gt; ApplicativeClass&lt;&#39;ApplicativeClass&gt; and default constructor)<br /><br />Full name: Script.ApplicativeModule.pure</div>
<div class="tip" id="fs63">val apply : ff:Generic&lt;(&#39;T -&gt; &#39;R),&#39;ApplicativeClass&gt; -&gt; fa:Generic&lt;&#39;T,&#39;ApplicativeClass&gt; -&gt; Generic&lt;&#39;R,&#39;ApplicativeClass&gt; (requires &#39;ApplicativeClass :&gt; ApplicativeClass&lt;&#39;ApplicativeClass&gt; and default constructor)<br /><br />Full name: Script.ApplicativeModule.apply</div>
<div class="tip" id="fs64">val ff : Generic&lt;(&#39;T -&gt; &#39;R),&#39;ApplicativeClass&gt; (requires &#39;ApplicativeClass :&gt; ApplicativeClass&lt;&#39;ApplicativeClass&gt; and default constructor)</div>
<div class="tip" id="fs65">val ff : Generic&lt;(&#39;a -&gt; &#39;b),&#39;c&gt; (requires &#39;c :&gt; ApplicativeClass&lt;&#39;c&gt; and default constructor)</div>
<div class="tip" id="fs66">val fa : Generic&lt;&#39;a,&#39;c&gt; (requires &#39;c :&gt; ApplicativeClass&lt;&#39;c&gt; and default constructor)</div>
<div class="tip" id="fs67">val f : (&#39;a -&gt; &#39;b)</div>
<div class="tip" id="fs68">val fa : Generic&lt;&#39;a,&#39;b&gt; (requires &#39;b :&gt; ApplicativeClass&lt;&#39;b&gt; and default constructor)</div>
<div class="tip" id="fs69">val fb : Generic&lt;&#39;c,&#39;b&gt; (requires &#39;b :&gt; ApplicativeClass&lt;&#39;b&gt; and default constructor)</div>
<div class="tip" id="fs70">val a : &#39;a</div>
<div class="tip" id="fs71">val b : &#39;c</div>
<div class="tip" id="fs72">Multiple items<br />val unit : v:&#39;T -&gt; Generic&lt;&#39;T,&#39;MonadClass&gt; (requires &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt; and default constructor)<br /><br />Full name: Script.MonadModule.unit<br /><br />--------------------<br />type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs73">val bind : m:Generic&lt;&#39;T,&#39;MonadClass&gt; -&gt; f:(&#39;T -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;) -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt; (requires &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt; and default constructor)<br /><br />Full name: Script.MonadModule.bind</div>
<div class="tip" id="fs74">val m : Generic&lt;&#39;T,&#39;MonadClass&gt; (requires &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt; and default constructor)</div>
<div class="tip" id="fs75">val f : (&#39;T -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;) (requires &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt; and default constructor)</div>
<div class="tip" id="fs76">val ma : Generic&lt;&#39;a,&#39;b&gt; (requires &#39;b :&gt; MonadClass&lt;&#39;b&gt; and default constructor)</div>
<div class="tip" id="fs77">val mb : Generic&lt;&#39;c,&#39;b&gt; (requires &#39;b :&gt; MonadClass&lt;&#39;b&gt; and default constructor)</div>
<div class="tip" id="fs78">val sequence : list:Generic&lt;&#39;T,&#39;MonadClass&gt; list -&gt; Generic&lt;&#39;T list,&#39;MonadClass&gt; (requires default constructor and &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt;)<br /><br />Full name: Script.MonadModule.sequence</div>
<div class="tip" id="fs79">Multiple items<br />val list : Generic&lt;&#39;T,&#39;MonadClass&gt; list (requires default constructor and &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt;)<br /><br />--------------------<br />type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs80">val m : Generic&lt;&#39;T,&#39;MonadClass&gt; (requires default constructor and &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt;)</div>
<div class="tip" id="fs81">val ms : Generic&lt;&#39;T,&#39;MonadClass&gt; list (requires default constructor and &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt;)</div>
<div class="tip" id="fs82">val vs : &#39;T list</div>
<div class="tip" id="fs83">val mapM : f:(&#39;T -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;) -&gt; list:&#39;T list -&gt; Generic&lt;&#39;R list,&#39;MonadClass&gt; (requires default constructor and &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt;)<br /><br />Full name: Script.MonadModule.mapM</div>
<div class="tip" id="fs84">val f : (&#39;T -&gt; Generic&lt;&#39;R,&#39;MonadClass&gt;) (requires default constructor and &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt;)</div>
<div class="tip" id="fs85">Multiple items<br />val list : &#39;T list<br /><br />--------------------<br />type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs86">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs87">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs88">val filterM : p:(&#39;T -&gt; Generic&lt;bool,&#39;MonadClass&gt;) -&gt; list:&#39;T list -&gt; Generic&lt;&#39;T list,&#39;MonadClass&gt; (requires default constructor and &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt;)<br /><br />Full name: Script.MonadModule.filterM</div>
<div class="tip" id="fs89">val p : (&#39;T -&gt; Generic&lt;bool,&#39;MonadClass&gt;) (requires default constructor and &#39;MonadClass :&gt; MonadClass&lt;&#39;MonadClass&gt;)</div>
<div class="tip" id="fs90">type bool = Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs91">val x : &#39;T</div>
<div class="tip" id="fs92">val xs : &#39;T list</div>
<div class="tip" id="fs93">val b : bool</div>
<div class="tip" id="fs94">val ys : &#39;T list</div>
<div class="tip" id="fs95">val k : int</div>
<div class="tip" id="fs96">val v : int</div>
<div class="tip" id="fs97">val transpose : listoflist:&#39;a -&gt; &#39;b<br /><br />Full name: Script.transpose</div>
<div class="tip" id="fs98">val listoflist : &#39;a</div>
<div class="tip" id="fs99">val onetoten : ListMonadGeneric&lt;int&gt;<br /><br />Full name: Script.onetoten</div>
<div class="tip" id="fs100">val a : int</div>
<div class="tip" id="fs101">val b : int</div>
<div class="tip" id="fs102">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>

