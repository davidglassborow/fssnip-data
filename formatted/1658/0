<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="o">/*</span><span class="i">Tripwire</span> <span class="i">is</span> <span class="i">a</span> <span class="i">special</span> <span class="i">part</span> <span class="k">of</span> <span class="i">motion</span> <span class="i">detection</span> <span class="i">that</span> <span class="i">can</span> <span class="i">be</span> <span class="i">used</span> <span class="k">to</span> <span class="i">monitor</span> <span class="k">and</span> <span class="i">alert</span> <span class="i">on</span> <span class="i">specific</span> <span class="i">changes</span><span class="o">.</span> <span class="i">More</span> <span class="i">specifically</span><span class="o">:</span> <span class="i">tripwire</span> <span class="i">means</span> <span class="i">the</span> <span class="i">detection</span> <span class="k">of</span> <span class="i">intrusion</span><span class="o">.</span>

<span class="i">This</span> <span class="i">code</span> <span class="i">snippet</span> <span class="i">presents</span> <span class="i">how</span> <span class="k">to</span> <span class="i">create</span> <span class="i">a</span> <span class="i">C#</span> <span class="i">software</span> <span class="i">by</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">using</span> <span class="i">prewritten</span> <span class="i">computer</span> <span class="i">vision</span> <span class="i">components</span> (<span class="i">http</span><span class="o">:</span><span class="c">//www.camera-sdk.com/) allowing you to get notified when your USB webcam triggers an intrusion. For instance, by using this application, you can use your camera to alarm when a people enters into the shop/office, or even to count how many people entered, etc.</span>

<span class="i">After</span> <span class="i">the</span> <span class="i">necessary</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">using</span> <span class="i">lines</span> <span class="k">and</span> <span class="i">objects</span> <span class="i">you</span> <span class="i">need</span> <span class="k">to</span> <span class="i">implement</span> <span class="i">the</span> <span class="i">Main</span> <span class="i">method</span> <span class="k">and</span> <span class="i">the</span> <span class="i">necessary</span> <span class="i">functions</span> <span class="k">for</span> <span class="i">connecting</span> <span class="k">to</span> <span class="i">a</span> <span class="i">USB</span> <span class="i">webcamera</span><span class="o">.</span> <span class="i">The</span> <span class="i">startBt_Click</span> <span class="i">method</span> <span class="i">is</span> <span class="i">used</span> <span class="k">to</span> <span class="i">start</span> <span class="i">the</span> <span class="i">tripwire</span> <span class="i">functionality</span><span class="o">.</span> <span class="i">Thereafter</span> <span class="i">you</span> <span class="i">can</span> <span class="i">see</span> <span class="i">how</span> <span class="k">to</span> <span class="i">handle</span> <span class="i">the</span> <span class="i">enter</span> <span class="k">and</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">exit</span> <span class="i">events</span><span class="o">.</span> 

<span class="i">Nothing</span> <span class="i">could</span> <span class="i">be</span> <span class="i">more</span> <span class="i">simple!</span> <span class="o">:</span>) <span class="o">*/</span>

<span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">using</span> <span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">System</span>;
<span onmouseout="hideTip(event, 'fs1', 6)" onmouseover="showTip(event, 'fs1', 6)" class="i">using</span> <span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="i">Drawing</span>;
<span onmouseout="hideTip(event, 'fs1', 9)" onmouseover="showTip(event, 'fs1', 9)" class="i">using</span> <span onmouseout="hideTip(event, 'fs3', 10)" onmouseover="showTip(event, 'fs3', 10)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 11)" onmouseover="showTip(event, 'fs5', 11)" class="i">Windows</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="i">Forms</span>;
<span onmouseout="hideTip(event, 'fs1', 13)" onmouseover="showTip(event, 'fs1', 13)" class="i">using</span> <span class="i">Ozeki</span><span class="o">.</span><span class="i">Media</span><span class="o">.</span><span class="i">MediaHandlers</span>;
<span onmouseout="hideTip(event, 'fs1', 14)" onmouseover="showTip(event, 'fs1', 14)" class="i">using</span> <span class="i">Ozeki</span><span class="o">.</span><span class="i">Media</span><span class="o">.</span><span class="i">MediaHandlers</span><span class="o">.</span><span class="i">Video</span>;
 
<span class="k">namespace</span> <span class="i">Tripwire_WF</span>
{
    <span class="k">public</span> <span class="i">partial</span> <span class="k">class</span> <span class="i">MainForm</span> <span class="o">:</span> <span class="i">Form</span>
    {
        <span class="k">private</span> <span class="i">WebCamera</span> <span class="i">_camera</span>;
        <span class="k">private</span> <span class="i">DrawingImageProvider</span> <span class="i">_provider</span>;
        <span class="k">private</span> <span class="i">MediaConnector</span> <span class="i">_connector</span>;
 
        <span class="k">private</span> <span class="i">Tripwire</span> <span class="i">tripwire</span>;
 
        <span class="k">private</span> <span class="i">Point</span> <span class="i">_p1</span>, <span class="i">_p2</span>;
 
        <span class="k">public</span> <span class="i">MainForm</span>()
        {
            <span class="i">InitializeComponent</span>();
 
            <span class="i">tripwire</span> <span class="o">=</span> <span class="k">new</span> <span class="i">Tripwire</span>();
 
            <span class="i">_provider</span> <span class="o">=</span> <span class="k">new</span> <span class="i">DrawingImageProvider</span>();
            <span class="i">_connector</span> <span class="o">=</span> <span class="k">new</span> <span class="i">MediaConnector</span>();
        }
 
        <span class="k">private</span> <span class="k">void</span> <span class="i">connectBt_Click</span>(<span class="i">object</span> <span class="i">sender</span>, <span class="i">EventArgs</span> <span class="i">e</span>)
        {
            <span class="i">_camera</span> <span class="o">=</span> <span class="i">WebCamera</span><span class="o">.</span><span class="i">GetDefaultDevice</span>();
            <span class="k">if</span> (<span class="i">_camera</span> <span class="o">==</span> <span class="k">null</span>) <span class="k">return</span>;
 
            <span class="i">videoViewerWF1</span><span class="o">.</span><span class="i">SetImageProvider</span>(<span class="i">_provider</span>);
 
            <span class="i">_connector</span><span class="o">.</span><span class="i">Connect</span>(<span class="i">_camera</span>, <span class="i">tripwire</span>);
            <span class="i">_connector</span><span class="o">.</span><span class="i">Connect</span>(<span class="i">tripwire</span>, <span class="i">_provider</span>);
 
            <span class="i">_camera</span><span class="o">.</span><span class="i">Start</span>();
 
            <span class="i">videoViewerWF1</span><span class="o">.</span><span class="i">Start</span>();
        }
 
        <span class="k">private</span> <span class="k">void</span> <span class="i">startBt_Click</span>(<span class="i">object</span> <span class="i">sender</span>, <span class="i">EventArgs</span> <span class="i">e</span>)
        {
            <span class="i">tripwire</span><span class="o">.</span><span class="i">Line</span><span class="o">.</span><span class="i">LineWidth</span> <span class="o">=</span> <span class="n">3</span>;
            <span class="i">tripwire</span><span class="o">.</span><span class="i">LineColor</span> <span class="o">=</span> <span class="i">Color</span><span class="o">.</span><span class="i">Red</span>;
 
            <span class="i">tripwire</span><span class="o">.</span><span class="i">SetPoints</span>(<span class="k">new</span> <span class="i">Point</span>(<span class="n">300</span>, <span class="n">100</span>), <span class="k">new</span> <span class="i">Point</span>(<span class="n">150</span>, <span class="n">300</span>));
            <span class="i">tripwire</span><span class="o">.</span><span class="i">HighlightMotion</span> <span class="o">=</span> <span class="i">HighlightMotion</span><span class="o">.</span><span class="i">Highlight</span>;
 
            <span class="i">tripwire</span><span class="o">.</span><span class="i">MotionColor</span> <span class="o">=</span> <span class="i">Color</span><span class="o">.</span><span class="i">Blue</span>;
            <span class="i">tripwire</span><span class="o">.</span><span class="i">TripwireMotionEnteredToLine</span> <span class="o">+=</span> <span class="i">TripwireTripwireMotionEnteredToLine</span>;
            <span class="i">tripwire</span><span class="o">.</span><span class="i">TripwireMotionLeaveFromLine</span> <span class="o">+=</span> <span class="i">TripwireTripwireMotionLeaveFromLine</span>;
 
            <span class="i">tripwire</span><span class="o">.</span><span class="i">Start</span>();
        }
 
        <span class="k">private</span> <span class="k">void</span> <span class="i">stopBt_Click</span>(<span class="i">object</span> <span class="i">sender</span>, <span class="i">EventArgs</span> <span class="i">e</span>)
        {
            <span class="i">tripwire</span><span class="o">.</span><span class="i">Stop</span>();
        }
 
        <span class="k">void</span> <span class="i">InvokeThread</span>(<span class="i">Action</span> <span class="i">action</span>)
        {
            <span class="i">Invoke</span>(<span class="i">action</span>);
        }
 
        <span class="k">void</span> <span class="i">TripwireTripwireMotionLeaveFromLine</span>(<span class="i">object</span> <span class="i">sender</span>, <span class="i">TripwireMotionCrossedArgs</span> <span class="i">e</span>)
        {
            <span class="i">InvokeThread</span>(() <span class="o">=&gt;</span> { <span class="i">crossedText</span><span class="o">.</span><span class="i">Text</span> <span class="o">=</span> <span class="s">@&quot;EXIT!!!&quot;</span>; });
        }
 
        <span class="k">void</span> <span class="i">TripwireTripwireMotionEnteredToLine</span>(<span class="i">object</span> <span class="i">sender</span>, <span class="i">TripwireMotionCrossedArgs</span> <span class="i">e</span>)
        {
            <span class="i">InvokeThread</span>(() <span class="o">=&gt;</span> { <span class="i">crossedText</span><span class="o">.</span><span class="i">Text</span> <span class="o">=</span> <span class="s">@&quot;ENTER!!!&quot;</span>; });
        }
 
        <span class="k">private</span> <span class="k">void</span> <span class="i">videoViewerWF1_MouseDown</span>(<span class="i">object</span> <span class="i">sender</span>, <span class="i">MouseEventArgs</span> <span class="i">e</span>)
        {
            <span class="k">if</span> (<span class="i">e</span><span class="o">.</span><span class="i">Button</span> <span class="o">!=</span> <span class="i">MouseButtons</span><span class="o">.</span><span class="i">Left</span>) <span class="k">return</span>;
            <span class="i">_p1</span> <span class="o">=</span> <span class="i">e</span><span class="o">.</span><span class="i">Location</span>;
            <span class="i">videoViewerWF1</span><span class="o">.</span><span class="i">MouseMove</span> <span class="o">+=</span> <span class="i">videoViewerWF1_MouseMove</span>;
        }
 
        <span class="k">private</span> <span class="k">void</span> <span class="i">videoViewerWF1_MouseUp</span>(<span class="i">object</span> <span class="i">sender</span>, <span class="i">MouseEventArgs</span> <span class="i">e</span>)
        {
            <span class="k">if</span> (<span class="i">e</span><span class="o">.</span><span class="i">Button</span> <span class="o">!=</span> <span class="i">MouseButtons</span><span class="o">.</span><span class="i">Left</span>) <span class="k">return</span>;
            <span class="i">_p2</span> <span class="o">=</span> <span class="i">e</span><span class="o">.</span><span class="i">Location</span>;
            <span class="i">tripwire</span><span class="o">.</span><span class="i">SetPoints</span>(<span class="i">_p1</span>, <span class="i">_p2</span>);
            <span class="i">videoViewerWF1</span><span class="o">.</span><span class="i">MouseMove</span> <span class="o">-=</span> <span class="i">videoViewerWF1_MouseMove</span>;
        }
 
        <span class="k">private</span> <span class="k">void</span> <span class="i">videoViewerWF1_MouseMove</span>(<span class="i">object</span> <span class="i">sender</span>, <span class="i">MouseEventArgs</span> <span class="i">e</span>)
        {
            <span class="i">_p2</span> <span class="o">=</span> <span class="i">e</span><span class="o">.</span><span class="i">Location</span>;
            <span class="i">tripwire</span><span class="o">.</span><span class="i">SetPoints</span>(<span class="i">_p1</span>, <span class="i">_p2</span>);
        }
    }
}
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val using : resource:&#39;T -&gt; action:(&#39;T -&gt; &#39;U) -&gt; &#39;U (requires &#39;T :&gt; System.IDisposable)<br /><br />Full name: Microsoft.FSharp.Core.Operators.using</div>
<div class="tip" id="fs2">val exit : exitcode:int -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.exit</div>
<div class="tip" id="fs3">namespace System</div>
<div class="tip" id="fs4">namespace System.Drawing</div>
<div class="tip" id="fs5">namespace System.Windows</div>
<div class="tip" id="fs6">namespace System.Windows.Forms</div>

