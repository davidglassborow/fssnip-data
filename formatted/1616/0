<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">/// Validation can succeed or report a list</span>
<span class="c">/// of validation error messages </span>
<span class="k">type</span> <span class="t">ValidationResult</span> <span class="o">=</span> 
  | <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="p">OK</span>
  | <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="p">Invalid</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">string</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">list</span>

<span class="c">// Validation #1 - check that name is not empty</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="f">validateName</span> (<span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">name</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="t">string</span>, _, _) <span class="o">=</span>
  <span class="k">if</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">name</span> <span class="o">=</span> <span class="s">&quot;&quot;</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs2', 9)" onmouseover="showTip(event, 'fs2', 9)" class="p">Invalid</span> [<span class="s">&quot;Name cannot be empty&quot;</span>]
  <span class="k">else</span> <span onmouseout="hideTip(event, 'fs1', 10)" onmouseover="showTip(event, 'fs1', 10)" class="p">OK</span>

<span class="c">// Validation #2 - check that passwords match</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="f">validatePass</span> (_, <span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="i">pass1</span>, <span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="i">pass2</span>) <span class="o">=</span> 
  <span class="k">if</span> <span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="i">pass1</span> <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="i">pass2</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs2', 16)" onmouseover="showTip(event, 'fs2', 16)" class="p">Invalid</span> [<span class="s">&quot;Passwords do not match&quot;</span>]
  <span class="k">else</span> <span onmouseout="hideTip(event, 'fs1', 17)" onmouseover="showTip(event, 'fs1', 17)" class="p">OK</span>

<span class="c">// Validation #3 - check that password is long enough</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 18)" onmouseover="showTip(event, 'fs10', 18)" class="f">validatePassLen</span> (_, <span onmouseout="hideTip(event, 'fs11', 19)" onmouseover="showTip(event, 'fs11', 19)" class="i">pass</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs3', 20)" onmouseover="showTip(event, 'fs3', 20)" class="t">string</span>, _) <span class="o">=</span> 
  <span class="k">if</span> <span onmouseout="hideTip(event, 'fs11', 21)" onmouseover="showTip(event, 'fs11', 21)" class="i">pass</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 22)" onmouseover="showTip(event, 'fs12', 22)" class="i">Length</span> <span class="o">&lt;</span> <span class="n">5</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs2', 23)" onmouseover="showTip(event, 'fs2', 23)" class="p">Invalid</span> [<span class="s">&quot;Passwords too short&quot;</span>]
  <span class="k">else</span> <span onmouseout="hideTip(event, 'fs1', 24)" onmouseover="showTip(event, 'fs1', 24)" class="p">OK</span>

<span class="c">// When combining two validation functions, we pass the input &#39;x&#39; to</span>
<span class="c">// both of them. Then we either return OK, if both returned OK, or</span>
<span class="c">// we collect error messages from both funtions</span>
<span class="k">let</span> (<span class="o">&lt;&amp;&gt;</span>) <span onmouseout="hideTip(event, 'fs13', 25)" onmouseover="showTip(event, 'fs13', 25)" class="f">f1</span> <span onmouseout="hideTip(event, 'fs14', 26)" onmouseover="showTip(event, 'fs14', 26)" class="f">f2</span> <span onmouseout="hideTip(event, 'fs15', 27)" onmouseover="showTip(event, 'fs15', 27)" class="i">x</span> <span class="o">=</span> 
  <span class="k">match</span> <span onmouseout="hideTip(event, 'fs13', 28)" onmouseover="showTip(event, 'fs13', 28)" class="f">f1</span> <span onmouseout="hideTip(event, 'fs15', 29)" onmouseover="showTip(event, 'fs15', 29)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs14', 30)" onmouseover="showTip(event, 'fs14', 30)" class="f">f2</span> <span onmouseout="hideTip(event, 'fs15', 31)" onmouseover="showTip(event, 'fs15', 31)" class="i">x</span> <span class="k">with</span>
  | <span onmouseout="hideTip(event, 'fs1', 32)" onmouseover="showTip(event, 'fs1', 32)" class="p">OK</span>, <span onmouseout="hideTip(event, 'fs1', 33)" onmouseover="showTip(event, 'fs1', 33)" class="p">OK</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs1', 34)" onmouseover="showTip(event, 'fs1', 34)" class="p">OK</span>
  | <span onmouseout="hideTip(event, 'fs2', 35)" onmouseover="showTip(event, 'fs2', 35)" class="p">Invalid</span> <span onmouseout="hideTip(event, 'fs16', 36)" onmouseover="showTip(event, 'fs16', 36)" class="i">e1</span>, <span onmouseout="hideTip(event, 'fs2', 37)" onmouseover="showTip(event, 'fs2', 37)" class="p">Invalid</span> <span onmouseout="hideTip(event, 'fs17', 38)" onmouseover="showTip(event, 'fs17', 38)" class="i">e2</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 39)" onmouseover="showTip(event, 'fs2', 39)" class="p">Invalid</span> (<span class="i">e1</span> <span class="o">@</span> <span onmouseout="hideTip(event, 'fs17', 40)" onmouseover="showTip(event, 'fs17', 40)" class="i">e2</span>)
  | <span onmouseout="hideTip(event, 'fs2', 41)" onmouseover="showTip(event, 'fs2', 41)" class="p">Invalid</span> <span onmouseout="hideTip(event, 'fs18', 42)" onmouseover="showTip(event, 'fs18', 42)" class="i">e</span>, <span onmouseout="hideTip(event, 'fs1', 43)" onmouseover="showTip(event, 'fs1', 43)" class="p">OK</span> | <span onmouseout="hideTip(event, 'fs1', 44)" onmouseover="showTip(event, 'fs1', 44)" class="p">OK</span>, <span onmouseout="hideTip(event, 'fs2', 45)" onmouseover="showTip(event, 'fs2', 45)" class="p">Invalid</span> <span onmouseout="hideTip(event, 'fs18', 46)" onmouseover="showTip(event, 'fs18', 46)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 47)" onmouseover="showTip(event, 'fs2', 47)" class="p">Invalid</span> <span onmouseout="hideTip(event, 'fs18', 48)" onmouseover="showTip(event, 'fs18', 48)" class="i">e</span>

<span class="c">// Now we can compose validation functions</span>
<span class="c">// (to get function that reports all errors)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 49)" onmouseover="showTip(event, 'fs19', 49)" class="f">validate</span> <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs5', 50)" onmouseover="showTip(event, 'fs5', 50)" class="f">validateName</span> <span class="o">&lt;&amp;&gt;</span>
  <span onmouseout="hideTip(event, 'fs7', 51)" onmouseover="showTip(event, 'fs7', 51)" class="f">validatePass</span> <span class="o">&lt;&amp;&gt;</span>
  <span onmouseout="hideTip(event, 'fs10', 52)" onmouseover="showTip(event, 'fs10', 52)" class="f">validatePassLen</span>

<span onmouseout="hideTip(event, 'fs19', 53)" onmouseover="showTip(event, 'fs19', 53)" class="f">validate</span> (<span class="s">&quot;Tomas&quot;</span>, <span class="s">&quot;pa&quot;</span>, <span class="s">&quot;password&quot;</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">union case ValidationResult.OK: ValidationResult</div>
<div class="tip" id="fs2">union case ValidationResult.Invalid: string list -&gt; ValidationResult</div>
<div class="tip" id="fs3">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs4">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs5">val validateName : name:string * &#39;a * &#39;b -&gt; ValidationResult<br /><br />Full name: Script.validateName</div>
<div class="tip" id="fs6">val name : string</div>
<div class="tip" id="fs7">val validatePass : &#39;a * pass1:&#39;b * pass2:&#39;b -&gt; ValidationResult (requires equality)<br /><br />Full name: Script.validatePass</div>
<div class="tip" id="fs8">val pass1 : &#39;b (requires equality)</div>
<div class="tip" id="fs9">val pass2 : &#39;b (requires equality)</div>
<div class="tip" id="fs10">val validatePassLen : &#39;a * pass:string * &#39;b -&gt; ValidationResult<br /><br />Full name: Script.validatePassLen</div>
<div class="tip" id="fs11">val pass : string</div>
<div class="tip" id="fs12">property System.String.Length: int</div>
<div class="tip" id="fs13">val f1 : (&#39;a -&gt; ValidationResult)</div>
<div class="tip" id="fs14">val f2 : (&#39;a -&gt; ValidationResult)</div>
<div class="tip" id="fs15">val x : &#39;a</div>
<div class="tip" id="fs16">val e1 : string list</div>
<div class="tip" id="fs17">val e2 : string list</div>
<div class="tip" id="fs18">val e : string list</div>
<div class="tip" id="fs19">val validate : (string * string * string -&gt; ValidationResult)<br /><br />Full name: Script.validate</div>

