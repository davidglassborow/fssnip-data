<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>

<span class="k">type</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">Parser</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="p">Parser</span> <span class="k">of</span> (<span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="t">char</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="t">list</span> <span class="k">-&gt;</span> (<span class="o">&#39;</span><span class="i">a</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="t">char</span> <span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="t">list</span>) <span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="t">list</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="f">parse</span> (<span onmouseout="hideTip(event, 'fs2', 10)" onmouseover="showTip(event, 'fs2', 10)" class="p">Parser</span> <span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="f">p</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="f">p</span> 

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs7', 13)" onmouseover="showTip(event, 'fs7', 13)" class="t">ParserBuilder</span> () <span class="o">=</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="f">Return</span> <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 17)" onmouseover="showTip(event, 'fs2', 17)" class="p">Parser</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="i">cs</span> <span class="k">-&gt;</span> [<span onmouseout="hideTip(event, 'fs10', 19)" onmouseover="showTip(event, 'fs10', 19)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs11', 20)" onmouseover="showTip(event, 'fs11', 20)" class="i">cs</span>])
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs8', 21)" onmouseover="showTip(event, 'fs8', 21)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 22)" onmouseover="showTip(event, 'fs12', 22)" class="f">Bind</span> (<span onmouseout="hideTip(event, 'fs13', 23)" onmouseover="showTip(event, 'fs13', 23)" class="i">p</span>, <span onmouseout="hideTip(event, 'fs14', 24)" onmouseover="showTip(event, 'fs14', 24)" class="f">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 25)" onmouseover="showTip(event, 'fs2', 25)" class="p">Parser</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs11', 26)" onmouseover="showTip(event, 'fs11', 26)" class="i">cs</span> <span class="k">-&gt;</span> 
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs5', 27)" onmouseover="showTip(event, 'fs5', 27)" class="f">parse</span> <span onmouseout="hideTip(event, 'fs13', 28)" onmouseover="showTip(event, 'fs13', 28)" class="i">p</span> <span onmouseout="hideTip(event, 'fs11', 29)" onmouseover="showTip(event, 'fs11', 29)" class="i">cs</span> <span class="k">with</span>
        | (<span onmouseout="hideTip(event, 'fs15', 30)" onmouseover="showTip(event, 'fs15', 30)" class="i">c&#39;</span>, <span onmouseout="hideTip(event, 'fs16', 31)" onmouseover="showTip(event, 'fs16', 31)" class="i">cs&#39;</span>)<span class="o">::</span>_ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 32)" onmouseover="showTip(event, 'fs5', 32)" class="f">parse</span> (<span onmouseout="hideTip(event, 'fs14', 33)" onmouseover="showTip(event, 'fs14', 33)" class="f">f</span> <span onmouseout="hideTip(event, 'fs15', 34)" onmouseover="showTip(event, 'fs15', 34)" class="i">c&#39;</span>) <span onmouseout="hideTip(event, 'fs16', 35)" onmouseover="showTip(event, 'fs16', 35)" class="i">cs&#39;</span>
        | [] <span class="k">-&gt;</span> []
    )
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs8', 36)" onmouseover="showTip(event, 'fs8', 36)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 37)" onmouseover="showTip(event, 'fs17', 37)" class="f">Zero</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 38)" onmouseover="showTip(event, 'fs2', 38)" class="p">Parser</span> (<span class="k">fun</span> _ <span class="k">-&gt;</span> [])
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs8', 39)" onmouseover="showTip(event, 'fs8', 39)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 40)" onmouseover="showTip(event, 'fs18', 40)" class="f">ReturnFrom</span> <span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 42)" onmouseover="showTip(event, 'fs19', 42)" class="i">a</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 43)" onmouseover="showTip(event, 'fs20', 43)" class="i">parser</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 44)" onmouseover="showTip(event, 'fs7', 44)" class="t">ParserBuilder</span>() 

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 45)" onmouseover="showTip(event, 'fs21', 45)" class="i">item</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 46)" onmouseover="showTip(event, 'fs2', 46)" class="p">Parser</span> (<span class="k">function</span> [] <span class="k">-&gt;</span> [] | <span onmouseout="hideTip(event, 'fs22', 47)" onmouseover="showTip(event, 'fs22', 47)" class="i">c</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs11', 48)" onmouseover="showTip(event, 'fs11', 48)" class="i">cs</span> <span class="k">-&gt;</span> [<span onmouseout="hideTip(event, 'fs22', 49)" onmouseover="showTip(event, 'fs22', 49)" class="i">c</span>, <span onmouseout="hideTip(event, 'fs11', 50)" onmouseover="showTip(event, 'fs11', 50)" class="i">cs</span>])
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 51)" onmouseover="showTip(event, 'fs23', 51)" class="f">sat</span> <span onmouseout="hideTip(event, 'fs24', 52)" onmouseover="showTip(event, 'fs24', 52)" class="f">pred</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 53)" onmouseover="showTip(event, 'fs20', 53)" class="i">parser</span> {
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs22', 54)" onmouseover="showTip(event, 'fs22', 54)" class="i">c</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 55)" onmouseover="showTip(event, 'fs21', 55)" class="i">item</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs24', 56)" onmouseover="showTip(event, 'fs24', 56)" class="f">pred</span> <span onmouseout="hideTip(event, 'fs22', 57)" onmouseover="showTip(event, 'fs22', 57)" class="i">c</span> <span class="k">then</span> <span class="k">return</span> <span onmouseout="hideTip(event, 'fs22', 58)" onmouseover="showTip(event, 'fs22', 58)" class="i">c</span>
}
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 59)" onmouseover="showTip(event, 'fs25', 59)" class="f">tChar</span> <span onmouseout="hideTip(event, 'fs22', 60)" onmouseover="showTip(event, 'fs22', 60)" class="i">c</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 61)" onmouseover="showTip(event, 'fs23', 61)" class="f">sat</span> ((<span class="o">=</span>) <span onmouseout="hideTip(event, 'fs22', 62)" onmouseover="showTip(event, 'fs22', 62)" class="i">c</span>)

<span class="c">/// Concatenates the results of applying parser p and parser q</span>
<span class="k">let</span> (<span class="o">&lt;+&gt;</span>) <span onmouseout="hideTip(event, 'fs26', 63)" onmouseover="showTip(event, 'fs26', 63)" class="i">p</span> <span onmouseout="hideTip(event, 'fs27', 64)" onmouseover="showTip(event, 'fs27', 64)" class="i">q</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 65)" onmouseover="showTip(event, 'fs2', 65)" class="p">Parser</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs11', 66)" onmouseover="showTip(event, 'fs11', 66)" class="i">cs</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs5', 67)" onmouseover="showTip(event, 'fs5', 67)" class="f">parse</span> <span onmouseout="hideTip(event, 'fs26', 68)" onmouseover="showTip(event, 'fs26', 68)" class="i">p</span> <span onmouseout="hideTip(event, 'fs11', 69)" onmouseover="showTip(event, 'fs11', 69)" class="i">cs</span>) <span class="o">@</span> (<span onmouseout="hideTip(event, 'fs5', 70)" onmouseover="showTip(event, 'fs5', 70)" class="f">parse</span> <span onmouseout="hideTip(event, 'fs27', 71)" onmouseover="showTip(event, 'fs27', 71)" class="i">q</span> <span onmouseout="hideTip(event, 'fs11', 72)" onmouseover="showTip(event, 'fs11', 72)" class="i">cs</span>))
<span class="c">/// Applies parser p or parser q and returns at most one result</span>
<span class="k">let</span> (<span class="o">&lt;|&gt;</span>) <span onmouseout="hideTip(event, 'fs26', 73)" onmouseover="showTip(event, 'fs26', 73)" class="i">p</span> <span onmouseout="hideTip(event, 'fs27', 74)" onmouseover="showTip(event, 'fs27', 74)" class="i">q</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 75)" onmouseover="showTip(event, 'fs2', 75)" class="p">Parser</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs11', 76)" onmouseover="showTip(event, 'fs11', 76)" class="i">cs</span> <span class="k">-&gt;</span> 
    <span class="k">match</span> (<span onmouseout="hideTip(event, 'fs5', 77)" onmouseover="showTip(event, 'fs5', 77)" class="f">parse</span> (<span onmouseout="hideTip(event, 'fs26', 78)" onmouseover="showTip(event, 'fs26', 78)" class="i">p</span> <span class="o">&lt;+&gt;</span> <span onmouseout="hideTip(event, 'fs27', 79)" onmouseover="showTip(event, 'fs27', 79)" class="i">q</span>) <span onmouseout="hideTip(event, 'fs11', 80)" onmouseover="showTip(event, 'fs11', 80)" class="i">cs</span>) <span class="k">with</span>
    | []    <span class="k">-&gt;</span> []
    | <span onmouseout="hideTip(event, 'fs28', 81)" onmouseover="showTip(event, 'fs28', 81)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs29', 82)" onmouseover="showTip(event, 'fs29', 82)" class="i">xs</span> <span class="k">-&gt;</span> [<span onmouseout="hideTip(event, 'fs28', 83)" onmouseover="showTip(event, 'fs28', 83)" class="i">x</span>]
)

<span class="c">/// Given a char list, returns a parser that parsers it</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs30', 84)" onmouseover="showTip(event, 'fs30', 84)" class="f">text</span> <span class="o">=</span> <span class="k">function</span>
    | []  <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 85)" onmouseover="showTip(event, 'fs20', 85)" class="i">parser</span> { <span class="k">return</span> [] }
    | <span onmouseout="hideTip(event, 'fs22', 86)" onmouseover="showTip(event, 'fs22', 86)" class="i">c</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs11', 87)" onmouseover="showTip(event, 'fs11', 87)" class="i">cs</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 88)" onmouseover="showTip(event, 'fs20', 88)" class="i">parser</span> { 
        <span class="k">let!</span> _ <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 89)" onmouseover="showTip(event, 'fs25', 89)" class="f">tChar</span> <span onmouseout="hideTip(event, 'fs22', 90)" onmouseover="showTip(event, 'fs22', 90)" class="i">c</span>
        <span class="k">let!</span> _ <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 91)" onmouseover="showTip(event, 'fs30', 91)" class="f">text</span> <span onmouseout="hideTip(event, 'fs11', 92)" onmouseover="showTip(event, 'fs11', 92)" class="i">cs</span>
        <span class="k">return</span> <span onmouseout="hideTip(event, 'fs22', 93)" onmouseover="showTip(event, 'fs22', 93)" class="i">c</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs11', 94)" onmouseover="showTip(event, 'fs11', 94)" class="i">cs</span> 
    } 

<span class="c">/// Combines many (0 or more) applications of parser p</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs31', 95)" onmouseover="showTip(event, 'fs31', 95)" class="f">many</span> <span onmouseout="hideTip(event, 'fs26', 96)" onmouseover="showTip(event, 'fs26', 96)" class="i">p</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs32', 97)" onmouseover="showTip(event, 'fs32', 97)" class="f">many1</span> <span onmouseout="hideTip(event, 'fs26', 98)" onmouseover="showTip(event, 'fs26', 98)" class="i">p</span>) <span class="o">&lt;|&gt;</span> <span onmouseout="hideTip(event, 'fs20', 99)" onmouseover="showTip(event, 'fs20', 99)" class="i">parser</span> { <span class="k">return</span> [] }
<span class="c">/// Combines at least one (1 or more) applications of parser p</span>
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs32', 100)" onmouseover="showTip(event, 'fs32', 100)" class="f">many1</span> <span onmouseout="hideTip(event, 'fs26', 101)" onmouseover="showTip(event, 'fs26', 101)" class="i">p</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs20', 102)" onmouseover="showTip(event, 'fs20', 102)" class="i">parser</span> { 
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs33', 103)" onmouseover="showTip(event, 'fs33', 103)" class="i">r</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 104)" onmouseover="showTip(event, 'fs26', 104)" class="i">p</span>
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs34', 105)" onmouseover="showTip(event, 'fs34', 105)" class="i">rs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 106)" onmouseover="showTip(event, 'fs31', 106)" class="f">many</span> <span onmouseout="hideTip(event, 'fs26', 107)" onmouseover="showTip(event, 'fs26', 107)" class="i">p</span>
        <span class="k">return</span> <span onmouseout="hideTip(event, 'fs33', 108)" onmouseover="showTip(event, 'fs33', 108)" class="i">r</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs34', 109)" onmouseover="showTip(event, 'fs34', 109)" class="i">rs</span>
    } 

<span class="c">/// Combines 0 or more applications of parser p separated by parser sep</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs35', 110)" onmouseover="showTip(event, 'fs35', 110)" class="f">sepby</span> <span onmouseout="hideTip(event, 'fs26', 111)" onmouseover="showTip(event, 'fs26', 111)" class="i">p</span> <span onmouseout="hideTip(event, 'fs36', 112)" onmouseover="showTip(event, 'fs36', 112)" class="i">sep</span> <span class="o">=</span>  (<span onmouseout="hideTip(event, 'fs37', 113)" onmouseover="showTip(event, 'fs37', 113)" class="f">sepby1</span> <span onmouseout="hideTip(event, 'fs26', 114)" onmouseover="showTip(event, 'fs26', 114)" class="i">p</span> <span onmouseout="hideTip(event, 'fs36', 115)" onmouseover="showTip(event, 'fs36', 115)" class="i">sep</span>) <span class="o">&lt;|&gt;</span> <span onmouseout="hideTip(event, 'fs20', 116)" onmouseover="showTip(event, 'fs20', 116)" class="i">parser</span> { <span class="k">return</span> [] }
<span class="c">/// Combines 1 or more applications of parser p separated by parser sep</span>
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs37', 117)" onmouseover="showTip(event, 'fs37', 117)" class="f">sepby1</span> <span onmouseout="hideTip(event, 'fs26', 118)" onmouseover="showTip(event, 'fs26', 118)" class="i">p</span> <span onmouseout="hideTip(event, 'fs36', 119)" onmouseover="showTip(event, 'fs36', 119)" class="i">sep</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs20', 120)" onmouseover="showTip(event, 'fs20', 120)" class="i">parser</span> {
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs33', 121)" onmouseover="showTip(event, 'fs33', 121)" class="i">r</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 122)" onmouseover="showTip(event, 'fs26', 122)" class="i">p</span>
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs34', 123)" onmouseover="showTip(event, 'fs34', 123)" class="i">rs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 124)" onmouseover="showTip(event, 'fs31', 124)" class="f">many</span> (<span onmouseout="hideTip(event, 'fs20', 125)" onmouseover="showTip(event, 'fs20', 125)" class="i">parser</span> { 
            <span class="k">let!</span> _ <span class="o">=</span> <span onmouseout="hideTip(event, 'fs36', 126)" onmouseover="showTip(event, 'fs36', 126)" class="i">sep</span>
            <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs26', 127)" onmouseover="showTip(event, 'fs26', 127)" class="i">p</span>
        })
        <span class="k">return</span> <span onmouseout="hideTip(event, 'fs33', 128)" onmouseover="showTip(event, 'fs33', 128)" class="i">r</span><span class="o">::</span><span class="i">rs</span>
    } 

<span class="c">/// Chain 0 or more applications of parser p separated by applications of parser op</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs38', 129)" onmouseover="showTip(event, 'fs38', 129)" class="f">chainl</span> <span onmouseout="hideTip(event, 'fs26', 130)" onmouseover="showTip(event, 'fs26', 130)" class="i">p</span> <span onmouseout="hideTip(event, 'fs39', 131)" onmouseover="showTip(event, 'fs39', 131)" class="i">op</span> <span onmouseout="hideTip(event, 'fs19', 132)" onmouseover="showTip(event, 'fs19', 132)" class="i">a</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs40', 133)" onmouseover="showTip(event, 'fs40', 133)" class="f">chainl1</span>  <span onmouseout="hideTip(event, 'fs26', 134)" onmouseover="showTip(event, 'fs26', 134)" class="i">p</span> <span onmouseout="hideTip(event, 'fs39', 135)" onmouseover="showTip(event, 'fs39', 135)" class="i">op</span>) <span class="o">&lt;|&gt;</span> <span onmouseout="hideTip(event, 'fs20', 136)" onmouseover="showTip(event, 'fs20', 136)" class="i">parser</span> { <span class="k">return</span> <span onmouseout="hideTip(event, 'fs19', 137)" onmouseover="showTip(event, 'fs19', 137)" class="i">a</span> }
<span class="c">/// Chain 1 or more applications of parser p separated by applications of parser op</span>
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs40', 138)" onmouseover="showTip(event, 'fs40', 138)" class="f">chainl1</span> <span onmouseout="hideTip(event, 'fs26', 139)" onmouseover="showTip(event, 'fs26', 139)" class="i">p</span> <span onmouseout="hideTip(event, 'fs39', 140)" onmouseover="showTip(event, 'fs39', 140)" class="i">op</span> <span class="o">=</span>  
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs41', 141)" onmouseover="showTip(event, 'fs41', 141)" class="f">rest</span> <span onmouseout="hideTip(event, 'fs33', 142)" onmouseover="showTip(event, 'fs33', 142)" class="i">r</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs20', 143)" onmouseover="showTip(event, 'fs20', 143)" class="i">parser</span> {
            <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs42', 144)" onmouseover="showTip(event, 'fs42', 144)" class="f">f</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 145)" onmouseover="showTip(event, 'fs39', 145)" class="i">op</span>
            <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs43', 146)" onmouseover="showTip(event, 'fs43', 146)" class="i">r&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 147)" onmouseover="showTip(event, 'fs26', 147)" class="i">p</span>
            <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs41', 148)" onmouseover="showTip(event, 'fs41', 148)" class="f">rest</span> (<span onmouseout="hideTip(event, 'fs42', 149)" onmouseover="showTip(event, 'fs42', 149)" class="f">f</span> <span onmouseout="hideTip(event, 'fs33', 150)" onmouseover="showTip(event, 'fs33', 150)" class="i">r</span> <span onmouseout="hideTip(event, 'fs43', 151)" onmouseover="showTip(event, 'fs43', 151)" class="i">r&#39;</span>)
        } <span class="o">&lt;|&gt;</span> <span onmouseout="hideTip(event, 'fs20', 152)" onmouseover="showTip(event, 'fs20', 152)" class="i">parser</span> {<span class="k">return</span> <span onmouseout="hideTip(event, 'fs33', 153)" onmouseover="showTip(event, 'fs33', 153)" class="i">r</span>}

    <span onmouseout="hideTip(event, 'fs20', 154)" onmouseover="showTip(event, 'fs20', 154)" class="i">parser</span> { <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs19', 155)" onmouseover="showTip(event, 'fs19', 155)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 156)" onmouseover="showTip(event, 'fs26', 156)" class="i">p</span> <span class="k">in</span> <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs41', 157)" onmouseover="showTip(event, 'fs41', 157)" class="f">rest</span> <span onmouseout="hideTip(event, 'fs19', 158)" onmouseover="showTip(event, 'fs19', 158)" class="i">a</span> }

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 159)" onmouseover="showTip(event, 'fs44', 159)" class="f">isSpace</span> <span class="o">=</span>
    <span class="c">// list of &quot;space&quot; chars based on </span>
    <span class="c">// http://hackage.haskell.org/packages/archive/base/latest/doc/html/Data-Char.html#v:isSpace</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs45', 160)" onmouseover="showTip(event, 'fs45', 160)" class="i">cs</span> <span class="o">=</span> [<span class="s">&#39; &#39;</span>; <span class="s">&#39;\t&#39;</span>; <span class="s">&#39;\n&#39;</span>; <span class="s">&#39;\r&#39;</span>; <span class="s">&#39;\f&#39;</span>; <span class="s">&#39;\v&#39;</span>] <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs46', 161)" onmouseover="showTip(event, 'fs46', 161)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 162)" onmouseover="showTip(event, 'fs47', 162)" class="f">ofList</span>
    <span onmouseout="hideTip(event, 'fs45', 163)" onmouseover="showTip(event, 'fs45', 163)" class="i">cs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 164)" onmouseover="showTip(event, 'fs48', 164)" class="f">Contains</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs49', 165)" onmouseover="showTip(event, 'fs49', 165)" class="i">space</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 166)" onmouseover="showTip(event, 'fs31', 166)" class="f">many</span> (<span onmouseout="hideTip(event, 'fs23', 167)" onmouseover="showTip(event, 'fs23', 167)" class="f">sat</span> <span onmouseout="hideTip(event, 'fs44', 168)" onmouseover="showTip(event, 'fs44', 168)" class="f">isSpace</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 169)" onmouseover="showTip(event, 'fs50', 169)" class="f">token</span> <span onmouseout="hideTip(event, 'fs26', 170)" onmouseover="showTip(event, 'fs26', 170)" class="i">p</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 171)" onmouseover="showTip(event, 'fs20', 171)" class="i">parser</span> { 
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs33', 172)" onmouseover="showTip(event, 'fs33', 172)" class="i">r</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 173)" onmouseover="showTip(event, 'fs26', 173)" class="i">p</span>
    <span class="k">let!</span> _ <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 174)" onmouseover="showTip(event, 'fs49', 174)" class="i">space</span>
    <span class="k">return</span> <span onmouseout="hideTip(event, 'fs33', 175)" onmouseover="showTip(event, 'fs33', 175)" class="i">r</span>
}

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 176)" onmouseover="showTip(event, 'fs51', 176)" class="f">symb</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 177)" onmouseover="showTip(event, 'fs30', 177)" class="f">text</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs50', 178)" onmouseover="showTip(event, 'fs50', 178)" class="f">token</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs52', 179)" onmouseover="showTip(event, 'fs52', 179)" class="f">apply</span> <span onmouseout="hideTip(event, 'fs26', 180)" onmouseover="showTip(event, 'fs26', 180)" class="i">p</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 181)" onmouseover="showTip(event, 'fs5', 181)" class="f">parse</span> (<span onmouseout="hideTip(event, 'fs20', 182)" onmouseover="showTip(event, 'fs20', 182)" class="i">parser</span> {
    <span class="k">let!</span> _ <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 183)" onmouseover="showTip(event, 'fs49', 183)" class="i">space</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs33', 184)" onmouseover="showTip(event, 'fs33', 184)" class="i">r</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 185)" onmouseover="showTip(event, 'fs26', 185)" class="i">p</span>
    <span class="k">return</span> <span onmouseout="hideTip(event, 'fs33', 186)" onmouseover="showTip(event, 'fs33', 186)" class="i">r</span>
})

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 187)" onmouseover="showTip(event, 'fs53', 187)" class="f">s2cs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs54', 188)" onmouseover="showTip(event, 'fs54', 188)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 189)" onmouseover="showTip(event, 'fs55', 189)" class="f">ofSeq</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 190)" onmouseover="showTip(event, 'fs56', 190)" class="f">cs2s</span> <span onmouseout="hideTip(event, 'fs11', 191)" onmouseover="showTip(event, 'fs11', 191)" class="i">cs</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs57', 192)" onmouseover="showTip(event, 'fs57', 192)" class="t">String</span>(<span onmouseout="hideTip(event, 'fs58', 193)" onmouseover="showTip(event, 'fs58', 193)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 194)" onmouseover="showTip(event, 'fs59', 194)" class="f">ofList</span> <span onmouseout="hideTip(event, 'fs11', 195)" onmouseover="showTip(event, 'fs11', 195)" class="i">cs</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 196)" onmouseover="showTip(event, 'fs60', 196)" class="f">runParser</span> <span onmouseout="hideTip(event, 'fs26', 197)" onmouseover="showTip(event, 'fs26', 197)" class="i">p</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs53', 198)" onmouseover="showTip(event, 'fs53', 198)" class="f">s2cs</span> <span class="o">&gt;</span><span class="o">&gt;</span>
    <span onmouseout="hideTip(event, 'fs52', 199)" onmouseover="showTip(event, 'fs52', 199)" class="f">apply</span> <span onmouseout="hideTip(event, 'fs26', 200)" onmouseover="showTip(event, 'fs26', 200)" class="i">p</span> <span class="o">&gt;</span><span class="o">&gt;</span>
    <span class="k">function</span>
        | [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs61', 201)" onmouseover="showTip(event, 'fs61', 201)" class="f">failwith</span> <span class="s">&quot;Error parsing input string.&quot;</span>
        | (<span onmouseout="hideTip(event, 'fs62', 202)" onmouseover="showTip(event, 'fs62', 202)" class="i">result</span>,_)<span class="o">::</span>_ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs62', 203)" onmouseover="showTip(event, 'fs62', 203)" class="i">result</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">Multiple items<br />union case Parser.Parser: (char list -&gt; (&#39;a * char list) list) -&gt; &#39;a Parser<br /><br />--------------------<br />type &#39;a Parser = | Parser of (char list -&gt; (&#39;a * char list) list)<br /><br />Full name: Script.Parser&lt;_&gt;</div>
<div class="tip" id="fs3">Multiple items<br />val char : value:&#39;T -&gt; char (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.char<br /><br />--------------------<br />type char = Char<br /><br />Full name: Microsoft.FSharp.Core.char</div>
<div class="tip" id="fs4">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs5">val parse : &#39;a Parser -&gt; (char list -&gt; (&#39;a * char list) list)<br /><br />Full name: Script.parse</div>
<div class="tip" id="fs6">val p : (char list -&gt; (&#39;a * char list) list)</div>
<div class="tip" id="fs7">Multiple items<br />type ParserBuilder =<br />&#160;&#160;new : unit -&gt; ParserBuilder<br />&#160;&#160;member Bind : p:&#39;c Parser * f:(&#39;c -&gt; &#39;d Parser) -&gt; &#39;d Parser<br />&#160;&#160;member Return : a:&#39;e -&gt; &#39;e Parser<br />&#160;&#160;member ReturnFrom : a:&#39;a -&gt; &#39;a<br />&#160;&#160;member Zero : unit -&gt; &#39;b Parser<br /><br />Full name: Script.ParserBuilder<br /><br />--------------------<br />new : unit -&gt; ParserBuilder</div>
<div class="tip" id="fs8">val x : ParserBuilder</div>
<div class="tip" id="fs9">member ParserBuilder.Return : a:&#39;e -&gt; &#39;e Parser<br /><br />Full name: Script.ParserBuilder.Return</div>
<div class="tip" id="fs10">val a : &#39;e</div>
<div class="tip" id="fs11">val cs : char list</div>
<div class="tip" id="fs12">member ParserBuilder.Bind : p:&#39;c Parser * f:(&#39;c -&gt; &#39;d Parser) -&gt; &#39;d Parser<br /><br />Full name: Script.ParserBuilder.Bind</div>
<div class="tip" id="fs13">val p : &#39;c Parser</div>
<div class="tip" id="fs14">val f : (&#39;c -&gt; &#39;d Parser)</div>
<div class="tip" id="fs15">val c&#39; : &#39;c</div>
<div class="tip" id="fs16">val cs&#39; : char list</div>
<div class="tip" id="fs17">member ParserBuilder.Zero : unit -&gt; &#39;b Parser<br /><br />Full name: Script.ParserBuilder.Zero</div>
<div class="tip" id="fs18">member ParserBuilder.ReturnFrom : a:&#39;a -&gt; &#39;a<br /><br />Full name: Script.ParserBuilder.ReturnFrom</div>
<div class="tip" id="fs19">val a : &#39;a</div>
<div class="tip" id="fs20">val parser : ParserBuilder<br /><br />Full name: Script.parser</div>
<div class="tip" id="fs21">val item : char Parser<br /><br />Full name: Script.item</div>
<div class="tip" id="fs22">val c : char</div>
<div class="tip" id="fs23">val sat : pred:(char -&gt; bool) -&gt; char Parser<br /><br />Full name: Script.sat</div>
<div class="tip" id="fs24">val pred : (char -&gt; bool)</div>
<div class="tip" id="fs25">val tChar : c:char -&gt; char Parser<br /><br />Full name: Script.tChar</div>
<div class="tip" id="fs26">val p : &#39;a Parser</div>
<div class="tip" id="fs27">val q : &#39;a Parser</div>
<div class="tip" id="fs28">val x : &#39;a * char list</div>
<div class="tip" id="fs29">val xs : (&#39;a * char list) list</div>
<div class="tip" id="fs30">val text : _arg1:char list -&gt; char list Parser<br /><br />Full name: Script.text<br /><em><br /><br />&#160;Given a char list, returns a parser that parsers it</em></div>
<div class="tip" id="fs31">val many : p:&#39;a Parser -&gt; &#39;a list Parser<br /><br />Full name: Script.many<br /><em><br /><br />&#160;Combines many (0 or more) applications of parser p</em></div>
<div class="tip" id="fs32">val many1 : p:&#39;a Parser -&gt; &#39;a list Parser<br /><br />Full name: Script.many1<br /><em><br /><br />&#160;Combines at least one (1 or more) applications of parser p</em></div>
<div class="tip" id="fs33">val r : &#39;a</div>
<div class="tip" id="fs34">val rs : &#39;a list</div>
<div class="tip" id="fs35">val sepby : p:&#39;a Parser -&gt; sep:&#39;b Parser -&gt; &#39;a list Parser<br /><br />Full name: Script.sepby<br /><em><br /><br />&#160;Combines 0 or more applications of parser p separated by parser sep</em></div>
<div class="tip" id="fs36">val sep : &#39;b Parser</div>
<div class="tip" id="fs37">val sepby1 : p:&#39;a Parser -&gt; sep:&#39;b Parser -&gt; &#39;a list Parser<br /><br />Full name: Script.sepby1<br /><em><br /><br />&#160;Combines 1 or more applications of parser p separated by parser sep</em></div>
<div class="tip" id="fs38">val chainl : p:&#39;a Parser -&gt; op:(&#39;a -&gt; &#39;a -&gt; &#39;a) Parser -&gt; a:&#39;a -&gt; &#39;a Parser<br /><br />Full name: Script.chainl<br /><em><br /><br />&#160;Chain 0 or more applications of parser p separated by applications of parser op</em></div>
<div class="tip" id="fs39">val op : (&#39;a -&gt; &#39;a -&gt; &#39;a) Parser</div>
<div class="tip" id="fs40">val chainl1 : p:&#39;a Parser -&gt; op:(&#39;a -&gt; &#39;a -&gt; &#39;a) Parser -&gt; &#39;a Parser<br /><br />Full name: Script.chainl1<br /><em><br /><br />&#160;Chain 1 or more applications of parser p separated by applications of parser op</em></div>
<div class="tip" id="fs41">val rest : (&#39;a -&gt; &#39;a Parser)</div>
<div class="tip" id="fs42">val f : (&#39;a -&gt; &#39;a -&gt; &#39;a)</div>
<div class="tip" id="fs43">val r&#39; : &#39;a</div>
<div class="tip" id="fs44">val isSpace : (char -&gt; bool)<br /><br />Full name: Script.isSpace</div>
<div class="tip" id="fs45">val cs : Set&lt;char&gt;</div>
<div class="tip" id="fs46">Multiple items<br />module Set<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Set&lt;&#39;T (requires comparison)&gt; =<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;interface ICollection&lt;&#39;T&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Add : value:&#39;T -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Contains : value:&#39;T -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member IsProperSubsetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;member IsProperSupersetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Set&lt;_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;</div>
<div class="tip" id="fs47">val ofList : elements:&#39;T list -&gt; Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Set.ofList</div>
<div class="tip" id="fs48">member Set.Contains : value:&#39;T -&gt; bool</div>
<div class="tip" id="fs49">val space : char list Parser<br /><br />Full name: Script.space</div>
<div class="tip" id="fs50">val token : p:&#39;a Parser -&gt; &#39;a Parser<br /><br />Full name: Script.token</div>
<div class="tip" id="fs51">val symb : (char list -&gt; char list Parser)<br /><br />Full name: Script.symb</div>
<div class="tip" id="fs52">val apply : p:&#39;a Parser -&gt; (char list -&gt; (&#39;a * char list) list)<br /><br />Full name: Script.apply</div>
<div class="tip" id="fs53">val s2cs : (seq&lt;&#39;a&gt; -&gt; &#39;a list)<br /><br />Full name: Script.s2cs</div>
<div class="tip" id="fs54">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs55">val ofSeq : source:seq&lt;&#39;T&gt; -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.ofSeq</div>
<div class="tip" id="fs56">val cs2s : cs:char list -&gt; String<br /><br />Full name: Script.cs2s</div>
<div class="tip" id="fs57">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs58">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs59">val ofList : list:&#39;T list -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.ofList</div>
<div class="tip" id="fs60">val runParser : p:&#39;a Parser -&gt; (seq&lt;char&gt; -&gt; &#39;a)<br /><br />Full name: Script.runParser</div>
<div class="tip" id="fs61">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs62">val result : &#39;a</div>

