<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">IO</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">nullOut</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">StreamWriter</span>(<span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">Stream</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">Null</span>) <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="t">TextWriter</span>

<span class="c">// this has the same type as printf, but it doesn&#39;t print anything</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="f">fakePrintf</span> <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="i">fmt</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="f">fprintf</span> <span onmouseout="hideTip(event, 'fs3', 11)" onmouseover="showTip(event, 'fs3', 11)" class="i">nullOut</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="i">fmt</span>

<span class="c">// set the verbosity</span>
<span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="v">verboseLevel</span> <span class="o">=</span> <span class="n">3</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="f">debug</span> <span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="i">n</span> <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs13', 16)" onmouseover="showTip(event, 'fs13', 16)" class="i">n</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="v">verboseLevel</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="f">printfn</span>
    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs8', 19)" onmouseover="showTip(event, 'fs8', 19)" class="f">fakePrintf</span>

<span onmouseout="hideTip(event, 'fs12', 20)" onmouseover="showTip(event, 'fs12', 20)" class="f">debug</span> <span class="n">2</span> <span class="s">&quot;test </span><span class="pf">%d</span><span class="s">&quot;</span> <span class="n">42</span> <span class="c">// is displayed</span>
<span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="f">debug</span> <span class="n">3</span> <span class="s">&quot;test </span><span class="pf">%d</span><span class="s">&quot;</span> <span class="n">42</span> <span class="c">// not displayed</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.IO</div>
<div class="tip" id="fs3">val nullOut : TextWriter<br /><br />Full name: Script.nullOut</div>
<div class="tip" id="fs4">Multiple items<br />type StreamWriter =<br />&#160;&#160;inherit TextWriter<br />&#160;&#160;new : stream:Stream -&gt; StreamWriter + 6 overloads<br />&#160;&#160;member AutoFlush : bool with get, set<br />&#160;&#160;member BaseStream : Stream<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member Encoding : Encoding<br />&#160;&#160;member Flush : unit -&gt; unit<br />&#160;&#160;member Write : value:char -&gt; unit + 3 overloads<br />&#160;&#160;static val Null : StreamWriter<br /><br />Full name: System.IO.StreamWriter<br /><br />--------------------<br />StreamWriter(stream: Stream) : unit<br />StreamWriter(path: string) : unit<br />StreamWriter(stream: Stream, encoding: System.Text.Encoding) : unit<br />StreamWriter(path: string, append: bool) : unit<br />StreamWriter(stream: Stream, encoding: System.Text.Encoding, bufferSize: int) : unit<br />StreamWriter(path: string, append: bool, encoding: System.Text.Encoding) : unit<br />StreamWriter(path: string, append: bool, encoding: System.Text.Encoding, bufferSize: int) : unit</div>
<div class="tip" id="fs5">type Stream =<br />&#160;&#160;inherit MarshalByRefObject<br />&#160;&#160;member BeginRead : buffer:byte[] * offset:int * count:int * callback:AsyncCallback * state:obj -&gt; IAsyncResult<br />&#160;&#160;member BeginWrite : buffer:byte[] * offset:int * count:int * callback:AsyncCallback * state:obj -&gt; IAsyncResult<br />&#160;&#160;member CanRead : bool<br />&#160;&#160;member CanSeek : bool<br />&#160;&#160;member CanTimeout : bool<br />&#160;&#160;member CanWrite : bool<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member CopyTo : destination:Stream -&gt; unit + 1 overload<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member EndRead : asyncResult:IAsyncResult -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.IO.Stream</div>
<div class="tip" id="fs6">field Stream.Null</div>
<div class="tip" id="fs7">type TextWriter =<br />&#160;&#160;inherit MarshalByRefObject<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member Encoding : Encoding<br />&#160;&#160;member Flush : unit -&gt; unit<br />&#160;&#160;member FormatProvider : IFormatProvider<br />&#160;&#160;member NewLine : string with get, set<br />&#160;&#160;member Write : value:char -&gt; unit + 16 overloads<br />&#160;&#160;member WriteLine : unit -&gt; unit + 17 overloads<br />&#160;&#160;static val Null : TextWriter<br />&#160;&#160;static member Synchronized : writer:TextWriter -&gt; TextWriter<br /><br />Full name: System.IO.TextWriter</div>
<div class="tip" id="fs8">val fakePrintf : fmt:Printf.TextWriterFormat&lt;&#39;a&gt; -&gt; &#39;a<br /><br />Full name: Script.fakePrintf</div>
<div class="tip" id="fs9">val fmt : Printf.TextWriterFormat&lt;&#39;a&gt;</div>
<div class="tip" id="fs10">val fprintf : textWriter:TextWriter -&gt; format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.fprintf</div>
<div class="tip" id="fs11">val mutable verboseLevel : int<br /><br />Full name: Script.verboseLevel</div>
<div class="tip" id="fs12">val debug : n:int -&gt; (Printf.TextWriterFormat&lt;&#39;a&gt; -&gt; &#39;a)<br /><br />Full name: Script.debug</div>
<div class="tip" id="fs13">val n : int</div>
<div class="tip" id="fs14">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>

