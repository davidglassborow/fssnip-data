<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">fastPow</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">x</span> (<span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">n</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">int</span>) <span class="o">=</span>
   <span class="k">if</span> <span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">n</span> <span class="o">&lt;</span> <span class="n">1</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="f">failwith</span> <span class="s">&quot;Parameter n must be greater then 0&quot;</span>
   <span class="k">else</span>
   <span class="k">new</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="t">BitArray</span>([|<span onmouseout="hideTip(event, 'fs3', 10)" onmouseover="showTip(event, 'fs3', 10)" class="i">n</span>|]) 
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="f">cast</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="t">bool</span><span class="o">&gt;</span>                     <span class="c">//cast bit array to bool array</span>
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="f">rev</span>                           
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 16)" onmouseover="showTip(event, 'fs9', 16)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="f">skipWhile</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="i">b</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 19)" onmouseover="showTip(event, 'fs15', 19)" class="f">not</span> <span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="i">b</span>)     <span class="c">//skip leading false bits </span>
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 21)" onmouseover="showTip(event, 'fs9', 21)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="f">skip</span> <span class="n">1</span>                                       <span class="c">//skip one true bit</span>
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 23)" onmouseover="showTip(event, 'fs9', 23)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="f">fold</span> (
                     <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="i">a</span> <span onmouseout="hideTip(event, 'fs14', 26)" onmouseover="showTip(event, 'fs14', 26)" class="i">b</span> <span class="k">-&gt;</span> 
                                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 27)" onmouseover="showTip(event, 'fs19', 27)" class="i">sq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="i">a</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="i">a</span>
                                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs14', 30)" onmouseover="showTip(event, 'fs14', 30)" class="i">b</span> <span class="k">then</span>   <span class="c">//if true bit</span>
                                  <span onmouseout="hideTip(event, 'fs20', 31)" onmouseover="showTip(event, 'fs20', 31)" class="f">printfn</span> <span class="s">&quot;square and mul (2 ops)&quot;</span>
                                  <span onmouseout="hideTip(event, 'fs19', 32)" onmouseover="showTip(event, 'fs19', 32)" class="i">sq</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs2', 33)" onmouseover="showTip(event, 'fs2', 33)" class="i">x</span>             <span class="c">//squaring and then multiplying  </span>
                                <span class="k">else</span>        <span class="c">//if false bit</span>
                                  <span onmouseout="hideTip(event, 'fs20', 34)" onmouseover="showTip(event, 'fs20', 34)" class="f">printfn</span> <span class="s">&quot;just square (1 op)&quot;</span>
                                  <span onmouseout="hideTip(event, 'fs19', 35)" onmouseover="showTip(event, 'fs19', 35)" class="i">sq</span>                 <span class="c">//only squaring</span>
                     ) <span onmouseout="hideTip(event, 'fs2', 36)" onmouseover="showTip(event, 'fs2', 36)" class="i">x</span>
<span class="c">//test</span>
<span onmouseout="hideTip(event, 'fs1', 37)" onmouseover="showTip(event, 'fs1', 37)" class="f">fastPow</span> <span class="n">3</span> <span class="n">11</span>
<span onmouseout="hideTip(event, 'fs1', 38)" onmouseover="showTip(event, 'fs1', 38)" class="f">fastPow</span> <span class="n">1.3</span> <span class="n">16</span>
<span onmouseout="hideTip(event, 'fs1', 39)" onmouseover="showTip(event, 'fs1', 39)" class="f">fastPow</span> (<span class="k">new</span> <span onmouseout="hideTip(event, 'fs6', 40)" onmouseover="showTip(event, 'fs6', 40)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 41)" onmouseover="showTip(event, 'fs21', 41)" class="i">Numerics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 42)" onmouseover="showTip(event, 'fs22', 42)" class="t">Complex</span>(<span class="n">1.1</span>,<span class="n">1.02</span>)) <span class="n">17</span>
<span onmouseout="hideTip(event, 'fs1', 43)" onmouseover="showTip(event, 'fs1', 43)" class="f">fastPow</span> <span class="n">15I</span> <span class="n">16</span>
<span class="c">//function narrowed to float type</span>
<span class="c">//let floatPow x n:float = if n = 0 then 1.0 elif n&lt;0 then 1.0 / (fastPow x (-n)) else fastPow x n</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val fastPow : x:&#39;a -&gt; n:int -&gt; &#39;a (requires member ( * ))<br /><br />Full name: Script.fastPow</div>
<div class="tip" id="fs2">val x : &#39;a (requires member ( * ))</div>
<div class="tip" id="fs3">val n : int</div>
<div class="tip" id="fs4">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs5">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs6">namespace System</div>
<div class="tip" id="fs7">namespace System.Collections</div>
<div class="tip" id="fs8">Multiple items<br />type BitArray =<br />&#160;&#160;new : length:int -&gt; BitArray + 5 overloads<br />&#160;&#160;member And : value:BitArray -&gt; BitArray<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit<br />&#160;&#160;member Count : int<br />&#160;&#160;member Get : index:int -&gt; bool<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member IsReadOnly : bool<br />&#160;&#160;member IsSynchronized : bool<br />&#160;&#160;member Item : int -&gt; bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Collections.BitArray<br /><br />--------------------<br />System.Collections.BitArray(length: int) : unit<br />System.Collections.BitArray(bytes: byte []) : unit<br />System.Collections.BitArray(values: bool []) : unit<br />System.Collections.BitArray(values: int []) : unit<br />System.Collections.BitArray(bits: System.Collections.BitArray) : unit<br />System.Collections.BitArray(length: int, defaultValue: bool) : unit</div>
<div class="tip" id="fs9">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs10">val cast : source:System.Collections.IEnumerable -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.cast</div>
<div class="tip" id="fs11">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs12">val rev : source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.rev</div>
<div class="tip" id="fs13">val skipWhile : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.skipWhile</div>
<div class="tip" id="fs14">val b : bool</div>
<div class="tip" id="fs15">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs16">val skip : count:int -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.skip</div>
<div class="tip" id="fs17">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.Seq.fold</div>
<div class="tip" id="fs18">val a : &#39;a (requires member ( * ))</div>
<div class="tip" id="fs19">val sq : &#39;a (requires member ( * ))</div>
<div class="tip" id="fs20">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs21">namespace System.Numerics</div>
<div class="tip" id="fs22">Multiple items<br />type Complex =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : real:float * imaginary:float -&gt; Complex<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member Imaginary : float<br />&#160;&#160;&#160;&#160;member Magnitude : float<br />&#160;&#160;&#160;&#160;member Phase : float<br />&#160;&#160;&#160;&#160;member Real : float<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 3 overloads<br />&#160;&#160;&#160;&#160;static val Zero : Complex<br />&#160;&#160;&#160;&#160;static val One : Complex<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Numerics.Complex<br /><br />--------------------<br />System.Numerics.Complex()<br />System.Numerics.Complex(real: float, imaginary: float) : unit</div>

