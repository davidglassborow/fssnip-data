<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Net</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Windows</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">Forms</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 6)" onmouseover="showTip(event, 'fs1', 6)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">Drawing</span>

<span class="c">/// Download a picture of an unpunched punched card from the internet</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">punchCard</span> <span class="o">=</span> 
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">wc</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="t">WebClient</span>()
  <span class="k">use</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="i">sr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="i">wc</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="f">OpenRead</span>(<span class="s">&quot;http://www.columbia.edu/cu/computinghistory/card05.gif&quot;</span>)
  <span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="t">Bitmap</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="f">FromStream</span>(<span onmouseout="hideTip(event, 'fs9', 16)" onmouseover="showTip(event, 'fs9', 16)" class="i">sr</span>)

<span class="c">/// Display an image in a newly opened windows form</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="f">show</span> (<span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="i">bmp</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs15', 19)" onmouseover="showTip(event, 'fs15', 19)" class="t">Image</span>) <span class="o">=</span>
  <span class="k">new</span> <span onmouseout="hideTip(event, 'fs16', 20)" onmouseover="showTip(event, 'fs16', 20)" class="t">Form</span>(<span class="i">BackgroundImage</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="i">bmp</span>, <span class="i">Visible</span><span class="o">=</span><span class="k">true</span>, 
           <span class="i">ClientSize</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="t">Size</span>(<span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="i">bmp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 24)" onmouseover="showTip(event, 'fs18', 24)" class="i">Width</span>, <span onmouseout="hideTip(event, 'fs14', 25)" onmouseover="showTip(event, 'fs14', 25)" class="i">bmp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 26)" onmouseover="showTip(event, 'fs19', 26)" class="i">Height</span>))

<span class="c">// Specifies where the places to punch are on the punched card</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 27)" onmouseover="showTip(event, 'fs20', 27)" class="i">offsX</span>, <span onmouseout="hideTip(event, 'fs21', 28)" onmouseover="showTip(event, 'fs21', 28)" class="i">offsY</span> <span class="o">=</span> <span class="n">0.0f</span>, <span class="n">12.0f</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 29)" onmouseover="showTip(event, 'fs22', 29)" class="i">spaceX</span>, <span onmouseout="hideTip(event, 'fs23', 30)" onmouseover="showTip(event, 'fs23', 30)" class="i">spaceY</span> <span class="o">=</span> <span class="n">7.15f</span>, <span class="n">20.4f</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 31)" onmouseover="showTip(event, 'fs24', 31)" class="i">widthX</span>, <span onmouseout="hideTip(event, 'fs25', 32)" onmouseover="showTip(event, 'fs25', 32)" class="i">widthY</span> <span class="o">=</span> <span class="n">3.2f</span>, <span class="n">8.0f</span>

<span class="c">/// Create a punched card showing the specified text</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 33)" onmouseover="showTip(event, 'fs26', 33)" class="f">punch</span> <span onmouseout="hideTip(event, 'fs27', 34)" onmouseover="showTip(event, 'fs27', 34)" class="i">text</span> <span class="o">=</span> 
  <span class="c">/// Generate a bitmap that contains the text in a big font</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 35)" onmouseover="showTip(event, 'fs28', 35)" class="i">textLayer</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 36)" onmouseover="showTip(event, 'fs29', 36)" class="i">bmp</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs11', 37)" onmouseover="showTip(event, 'fs11', 37)" class="t">Bitmap</span>(<span onmouseout="hideTip(event, 'fs6', 38)" onmouseover="showTip(event, 'fs6', 38)" class="i">punchCard</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 39)" onmouseover="showTip(event, 'fs18', 39)" class="i">Width</span>, <span onmouseout="hideTip(event, 'fs6', 40)" onmouseover="showTip(event, 'fs6', 40)" class="i">punchCard</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="i">Height</span>)
    <span class="k">use</span> <span onmouseout="hideTip(event, 'fs30', 42)" onmouseover="showTip(event, 'fs30', 42)" class="i">gr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 43)" onmouseover="showTip(event, 'fs31', 43)" class="t">Graphics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 44)" onmouseover="showTip(event, 'fs32', 44)" class="f">FromImage</span>(<span onmouseout="hideTip(event, 'fs29', 45)" onmouseover="showTip(event, 'fs29', 45)" class="i">bmp</span>)
    <span onmouseout="hideTip(event, 'fs30', 46)" onmouseover="showTip(event, 'fs30', 46)" class="i">gr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 47)" onmouseover="showTip(event, 'fs33', 47)" class="f">DrawString</span>(<span onmouseout="hideTip(event, 'fs27', 48)" onmouseover="showTip(event, 'fs27', 48)" class="i">text</span>, <span class="k">new</span> <span onmouseout="hideTip(event, 'fs34', 49)" onmouseover="showTip(event, 'fs34', 49)" class="t">Font</span>(<span class="s">&quot;Consolas&quot;</span>, <span class="n">160.0f</span>), 
                  <span onmouseout="hideTip(event, 'fs35', 50)" onmouseover="showTip(event, 'fs35', 50)" class="t">Brushes</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 51)" onmouseover="showTip(event, 'fs36', 51)" class="i">Black</span>, <span onmouseout="hideTip(event, 'fs37', 52)" onmouseover="showTip(event, 'fs37', 52)" class="t">PointF</span>(<span class="o">-</span><span class="n">40.0f</span>, <span class="n">30.0f</span>))
    <span onmouseout="hideTip(event, 'fs29', 53)" onmouseover="showTip(event, 'fs29', 53)" class="i">bmp</span>

  <span class="c">/// Calculate if the specified rectangle contains some part</span>
  <span class="c">/// of the text (in the &#39;textLayer&#39; bitmap)</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 54)" onmouseover="showTip(event, 'fs38', 54)" class="f">mostlyBlack</span> (<span onmouseout="hideTip(event, 'fs39', 55)" onmouseover="showTip(event, 'fs39', 55)" class="i">rect</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs40', 56)" onmouseover="showTip(event, 'fs40', 56)" class="t">RectangleF</span>) <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 57)" onmouseover="showTip(event, 'fs41', 57)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs42', 58)" onmouseover="showTip(event, 'fs42', 58)" class="f">int</span> <span onmouseout="hideTip(event, 'fs39', 59)" onmouseover="showTip(event, 'fs39', 59)" class="i">rect</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 60)" onmouseover="showTip(event, 'fs43', 60)" class="i">X</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 61)" onmouseover="showTip(event, 'fs44', 61)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs42', 62)" onmouseover="showTip(event, 'fs42', 62)" class="f">int</span> <span onmouseout="hideTip(event, 'fs39', 63)" onmouseover="showTip(event, 'fs39', 63)" class="i">rect</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 64)" onmouseover="showTip(event, 'fs45', 64)" class="i">Y</span>
    <span class="c">// Average the &#39;A&#39; component over the given rectangle</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 65)" onmouseover="showTip(event, 'fs46', 65)" class="i">avg</span> <span class="o">=</span>
      <span onmouseout="hideTip(event, 'fs47', 66)" onmouseover="showTip(event, 'fs47', 66)" class="i">seq</span> { <span class="k">for</span> <span onmouseout="hideTip(event, 'fs48', 67)" onmouseover="showTip(event, 'fs48', 67)" class="i">x</span> <span class="k">in</span> <span class="n">0</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs42', 68)" onmouseover="showTip(event, 'fs42', 68)" class="f">int</span> <span onmouseout="hideTip(event, 'fs39', 69)" onmouseover="showTip(event, 'fs39', 69)" class="i">rect</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 70)" onmouseover="showTip(event, 'fs49', 70)" class="i">Width</span> <span class="k">do</span>
              <span class="k">for</span> <span onmouseout="hideTip(event, 'fs50', 71)" onmouseover="showTip(event, 'fs50', 71)" class="i">y</span> <span class="k">in</span> <span class="n">0</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs42', 72)" onmouseover="showTip(event, 'fs42', 72)" class="f">int</span> <span onmouseout="hideTip(event, 'fs39', 73)" onmouseover="showTip(event, 'fs39', 73)" class="i">rect</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 74)" onmouseover="showTip(event, 'fs51', 74)" class="i">Height</span> <span class="k">do</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs52', 75)" onmouseover="showTip(event, 'fs52', 75)" class="f">rx</span> <span onmouseout="hideTip(event, 'fs53', 76)" onmouseover="showTip(event, 'fs53', 76)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs54', 77)" onmouseover="showTip(event, 'fs54', 77)" class="f">max</span> <span class="n">0</span> (<span onmouseout="hideTip(event, 'fs55', 78)" onmouseover="showTip(event, 'fs55', 78)" class="f">min</span> (<span onmouseout="hideTip(event, 'fs28', 79)" onmouseover="showTip(event, 'fs28', 79)" class="i">textLayer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 80)" onmouseover="showTip(event, 'fs18', 80)" class="i">Width</span> <span class="o">-</span> <span class="n">1</span>) <span onmouseout="hideTip(event, 'fs53', 81)" onmouseover="showTip(event, 'fs53', 81)" class="i">a</span>)
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 82)" onmouseover="showTip(event, 'fs56', 82)" class="f">ry</span> <span onmouseout="hideTip(event, 'fs53', 83)" onmouseover="showTip(event, 'fs53', 83)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs54', 84)" onmouseover="showTip(event, 'fs54', 84)" class="f">max</span> <span class="n">0</span> (<span onmouseout="hideTip(event, 'fs55', 85)" onmouseover="showTip(event, 'fs55', 85)" class="f">min</span> (<span onmouseout="hideTip(event, 'fs28', 86)" onmouseover="showTip(event, 'fs28', 86)" class="i">textLayer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 87)" onmouseover="showTip(event, 'fs19', 87)" class="i">Height</span> <span class="o">-</span> <span class="n">1</span>) <span onmouseout="hideTip(event, 'fs53', 88)" onmouseover="showTip(event, 'fs53', 88)" class="i">a</span>)
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 89)" onmouseover="showTip(event, 'fs57', 89)" class="i">pix</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 90)" onmouseover="showTip(event, 'fs28', 90)" class="i">textLayer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 91)" onmouseover="showTip(event, 'fs58', 91)" class="f">GetPixel</span>(<span onmouseout="hideTip(event, 'fs52', 92)" onmouseover="showTip(event, 'fs52', 92)" class="f">rx</span> (<span onmouseout="hideTip(event, 'fs41', 93)" onmouseover="showTip(event, 'fs41', 93)" class="i">l</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs48', 94)" onmouseover="showTip(event, 'fs48', 94)" class="i">x</span>), <span onmouseout="hideTip(event, 'fs56', 95)" onmouseover="showTip(event, 'fs56', 95)" class="f">ry</span> (<span onmouseout="hideTip(event, 'fs44', 96)" onmouseover="showTip(event, 'fs44', 96)" class="i">t</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs50', 97)" onmouseover="showTip(event, 'fs50', 97)" class="i">y</span>))
                <span class="k">yield</span> (<span onmouseout="hideTip(event, 'fs59', 98)" onmouseover="showTip(event, 'fs59', 98)" class="f">float</span> <span onmouseout="hideTip(event, 'fs57', 99)" onmouseover="showTip(event, 'fs57', 99)" class="i">pix</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 100)" onmouseover="showTip(event, 'fs60', 100)" class="i">A</span>) <span class="o">/</span> <span class="n">255.0</span> }
      <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs61', 101)" onmouseover="showTip(event, 'fs61', 101)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 102)" onmouseover="showTip(event, 'fs62', 102)" class="f">average</span>
    <span onmouseout="hideTip(event, 'fs46', 103)" onmouseover="showTip(event, 'fs46', 103)" class="i">avg</span> <span class="o">&gt;</span> <span class="n">0.1</span>

  <span class="c">/// Create a new layer to represent punches in the card</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 104)" onmouseover="showTip(event, 'fs63', 104)" class="i">punchLayer</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs11', 105)" onmouseover="showTip(event, 'fs11', 105)" class="t">Bitmap</span>(<span onmouseout="hideTip(event, 'fs6', 106)" onmouseover="showTip(event, 'fs6', 106)" class="i">punchCard</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 107)" onmouseover="showTip(event, 'fs18', 107)" class="i">Width</span>, <span onmouseout="hideTip(event, 'fs6', 108)" onmouseover="showTip(event, 'fs6', 108)" class="i">punchCard</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 109)" onmouseover="showTip(event, 'fs19', 109)" class="i">Height</span>)
  <span class="k">use</span> <span onmouseout="hideTip(event, 'fs30', 110)" onmouseover="showTip(event, 'fs30', 110)" class="i">gr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 111)" onmouseover="showTip(event, 'fs31', 111)" class="t">Graphics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 112)" onmouseover="showTip(event, 'fs32', 112)" class="f">FromImage</span>(<span onmouseout="hideTip(event, 'fs63', 113)" onmouseover="showTip(event, 'fs63', 113)" class="i">punchLayer</span>)

  <span class="c">/// Iterate over the possible holes in the punched card</span>
  <span class="k">for</span> <span onmouseout="hideTip(event, 'fs64', 114)" onmouseover="showTip(event, 'fs64', 114)" class="i">x</span> <span class="k">in</span> <span class="n">0</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs6', 115)" onmouseover="showTip(event, 'fs6', 115)" class="i">punchCard</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 116)" onmouseover="showTip(event, 'fs18', 116)" class="i">Width</span> <span class="o">/</span> <span onmouseout="hideTip(event, 'fs42', 117)" onmouseover="showTip(event, 'fs42', 117)" class="f">int</span> <span onmouseout="hideTip(event, 'fs22', 118)" onmouseover="showTip(event, 'fs22', 118)" class="i">spaceX</span> <span class="k">do</span>
    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs65', 119)" onmouseover="showTip(event, 'fs65', 119)" class="i">y</span> <span class="k">in</span> <span class="n">0</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs6', 120)" onmouseover="showTip(event, 'fs6', 120)" class="i">punchCard</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 121)" onmouseover="showTip(event, 'fs19', 121)" class="i">Height</span> <span class="o">/</span> <span onmouseout="hideTip(event, 'fs42', 122)" onmouseover="showTip(event, 'fs42', 122)" class="f">int</span> <span onmouseout="hideTip(event, 'fs23', 123)" onmouseover="showTip(event, 'fs23', 123)" class="i">spaceY</span> <span class="k">do</span>
      <span class="c">// A rectangle representing the hole location</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs66', 124)" onmouseover="showTip(event, 'fs66', 124)" class="i">rect</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs40', 125)" onmouseover="showTip(event, 'fs40', 125)" class="t">RectangleF</span>
          (<span onmouseout="hideTip(event, 'fs20', 126)" onmouseover="showTip(event, 'fs20', 126)" class="i">offsX</span> <span class="o">+</span> (<span onmouseout="hideTip(event, 'fs67', 127)" onmouseover="showTip(event, 'fs67', 127)" class="f">float32</span> <span onmouseout="hideTip(event, 'fs64', 128)" onmouseover="showTip(event, 'fs64', 128)" class="i">x</span>) <span class="o">*</span> <span onmouseout="hideTip(event, 'fs22', 129)" onmouseover="showTip(event, 'fs22', 129)" class="i">spaceX</span>, 
           <span onmouseout="hideTip(event, 'fs21', 130)" onmouseover="showTip(event, 'fs21', 130)" class="i">offsY</span> <span class="o">+</span> (<span onmouseout="hideTip(event, 'fs67', 131)" onmouseover="showTip(event, 'fs67', 131)" class="f">float32</span> <span onmouseout="hideTip(event, 'fs65', 132)" onmouseover="showTip(event, 'fs65', 132)" class="i">y</span>) <span class="o">*</span> <span onmouseout="hideTip(event, 'fs23', 133)" onmouseover="showTip(event, 'fs23', 133)" class="i">spaceY</span>, <span onmouseout="hideTip(event, 'fs24', 134)" onmouseover="showTip(event, 'fs24', 134)" class="i">widthX</span>, <span onmouseout="hideTip(event, 'fs25', 135)" onmouseover="showTip(event, 'fs25', 135)" class="i">widthY</span>)

      <span class="c">// If the rectangle overlaps with text, then punch it!</span>
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs38', 136)" onmouseover="showTip(event, 'fs38', 136)" class="f">mostlyBlack</span> <span onmouseout="hideTip(event, 'fs66', 137)" onmouseover="showTip(event, 'fs66', 137)" class="i">rect</span> <span class="k">then</span>
        <span onmouseout="hideTip(event, 'fs66', 138)" onmouseover="showTip(event, 'fs66', 138)" class="i">rect</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 139)" onmouseover="showTip(event, 'fs68', 139)" class="f">Inflate</span>(<span class="n">0.3f</span>, <span class="n">2.0f</span>)
        <span onmouseout="hideTip(event, 'fs30', 140)" onmouseover="showTip(event, 'fs30', 140)" class="i">gr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 141)" onmouseover="showTip(event, 'fs69', 141)" class="f">FillRectangle</span>(<span onmouseout="hideTip(event, 'fs35', 142)" onmouseover="showTip(event, 'fs35', 142)" class="t">Brushes</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 143)" onmouseover="showTip(event, 'fs36', 143)" class="i">Black</span>, <span onmouseout="hideTip(event, 'fs66', 144)" onmouseover="showTip(event, 'fs66', 144)" class="i">rect</span>)

  <span class="c">// Generate composed bitmap and return it</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs70', 145)" onmouseover="showTip(event, 'fs70', 145)" class="i">img</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs11', 146)" onmouseover="showTip(event, 'fs11', 146)" class="t">Bitmap</span>(<span onmouseout="hideTip(event, 'fs6', 147)" onmouseover="showTip(event, 'fs6', 147)" class="i">punchCard</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 148)" onmouseover="showTip(event, 'fs18', 148)" class="i">Width</span>, <span onmouseout="hideTip(event, 'fs6', 149)" onmouseover="showTip(event, 'fs6', 149)" class="i">punchCard</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 150)" onmouseover="showTip(event, 'fs19', 150)" class="i">Height</span>)
  <span class="k">use</span> <span onmouseout="hideTip(event, 'fs30', 151)" onmouseover="showTip(event, 'fs30', 151)" class="i">gr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 152)" onmouseover="showTip(event, 'fs31', 152)" class="t">Graphics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 153)" onmouseover="showTip(event, 'fs32', 153)" class="f">FromImage</span>(<span onmouseout="hideTip(event, 'fs70', 154)" onmouseover="showTip(event, 'fs70', 154)" class="i">img</span>)
  <span onmouseout="hideTip(event, 'fs30', 155)" onmouseover="showTip(event, 'fs30', 155)" class="i">gr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 156)" onmouseover="showTip(event, 'fs71', 156)" class="f">DrawImage</span>(<span onmouseout="hideTip(event, 'fs6', 157)" onmouseover="showTip(event, 'fs6', 157)" class="i">punchCard</span>, <span onmouseout="hideTip(event, 'fs72', 158)" onmouseover="showTip(event, 'fs72', 158)" class="t">Point</span>(<span class="n">0</span>, <span class="n">0</span>))
  <span onmouseout="hideTip(event, 'fs30', 159)" onmouseover="showTip(event, 'fs30', 159)" class="i">gr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 160)" onmouseover="showTip(event, 'fs71', 160)" class="f">DrawImage</span>(<span onmouseout="hideTip(event, 'fs63', 161)" onmouseover="showTip(event, 'fs63', 161)" class="i">punchLayer</span>, <span onmouseout="hideTip(event, 'fs72', 162)" onmouseover="showTip(event, 'fs72', 162)" class="t">Point</span>(<span class="n">0</span>, <span class="n">0</span>))
  <span onmouseout="hideTip(event, 'fs70', 163)" onmouseover="showTip(event, 'fs70', 163)" class="i">img</span>

<span class="c">// Enterprise punched card</span>
<span onmouseout="hideTip(event, 'fs13', 164)" onmouseover="showTip(event, 'fs13', 164)" class="f">show</span> (<span onmouseout="hideTip(event, 'fs26', 165)" onmouseover="showTip(event, 'fs26', 165)" class="f">punch</span> <span class="s">&quot;&lt;?xml&quot;</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Net</div>
<div class="tip" id="fs3">namespace System.Windows</div>
<div class="tip" id="fs4">namespace System.Windows.Forms</div>
<div class="tip" id="fs5">namespace System.Drawing</div>
<div class="tip" id="fs6">val punchCard : Image<br /><br />Full name: Script.punchCard<br /><em><br /><br />&#160;Download a picture of an unpunched punched card from the internet</em></div>
<div class="tip" id="fs7">val wc : WebClient</div>
<div class="tip" id="fs8">Multiple items<br />type WebClient =<br />&#160;&#160;inherit Component<br />&#160;&#160;new : unit -&gt; WebClient<br />&#160;&#160;member BaseAddress : string with get, set<br />&#160;&#160;member CachePolicy : RequestCachePolicy with get, set<br />&#160;&#160;member CancelAsync : unit -&gt; unit<br />&#160;&#160;member Credentials : ICredentials with get, set<br />&#160;&#160;member DownloadData : address:string -&gt; byte[] + 1 overload<br />&#160;&#160;member DownloadDataAsync : address:Uri -&gt; unit + 1 overload<br />&#160;&#160;member DownloadFile : address:string * fileName:string -&gt; unit + 1 overload<br />&#160;&#160;member DownloadFileAsync : address:Uri * fileName:string -&gt; unit + 1 overload<br />&#160;&#160;member DownloadString : address:string -&gt; string + 1 overload<br />&#160;&#160;...<br /><br />Full name: System.Net.WebClient<br /><br />--------------------<br />WebClient() : unit</div>
<div class="tip" id="fs9">val sr : System.IO.Stream</div>
<div class="tip" id="fs10">WebClient.OpenRead(address: System.Uri) : System.IO.Stream<br />WebClient.OpenRead(address: string) : System.IO.Stream</div>
<div class="tip" id="fs11">Multiple items<br />type Bitmap =<br />&#160;&#160;inherit Image<br />&#160;&#160;new : filename:string -&gt; Bitmap + 11 overloads<br />&#160;&#160;member Clone : rect:Rectangle * format:PixelFormat -&gt; Bitmap + 1 overload<br />&#160;&#160;member GetHbitmap : unit -&gt; nativeint + 1 overload<br />&#160;&#160;member GetHicon : unit -&gt; nativeint<br />&#160;&#160;member GetPixel : x:int * y:int -&gt; Color<br />&#160;&#160;member LockBits : rect:Rectangle * flags:ImageLockMode * format:PixelFormat -&gt; BitmapData + 1 overload<br />&#160;&#160;member MakeTransparent : unit -&gt; unit + 1 overload<br />&#160;&#160;member SetPixel : x:int * y:int * color:Color -&gt; unit<br />&#160;&#160;member SetResolution : xDpi:float32 * yDpi:float32 -&gt; unit<br />&#160;&#160;member UnlockBits : bitmapdata:BitmapData -&gt; unit<br />&#160;&#160;...<br /><br />Full name: System.Drawing.Bitmap<br /><br />--------------------<br />Bitmap(filename: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(stream: System.IO.Stream) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(original: Image) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(filename: string, useIcm: bool) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(type: System.Type, resource: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(stream: System.IO.Stream, useIcm: bool) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(width: int, height: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(original: Image, newSize: Size) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(width: int, height: int, format: Imaging.PixelFormat) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(width: int, height: int, g: Graphics) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs12">Image.FromStream(stream: System.IO.Stream) : Image<br />Image.FromStream(stream: System.IO.Stream, useEmbeddedColorManagement: bool) : Image<br />Image.FromStream(stream: System.IO.Stream, useEmbeddedColorManagement: bool, validateImageData: bool) : Image</div>
<div class="tip" id="fs13">val show : bmp:Image -&gt; Form<br /><br />Full name: Script.show<br /><em><br /><br />&#160;Display an image in a newly opened windows form</em></div>
<div class="tip" id="fs14">val bmp : Image</div>
<div class="tip" id="fs15">type Image =<br />&#160;&#160;inherit MarshalByRefObject<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member Flags : int<br />&#160;&#160;member FrameDimensionsList : Guid[]<br />&#160;&#160;member GetBounds : pageUnit:GraphicsUnit -&gt; RectangleF<br />&#160;&#160;member GetEncoderParameterList : encoder:Guid -&gt; EncoderParameters<br />&#160;&#160;member GetFrameCount : dimension:FrameDimension -&gt; int<br />&#160;&#160;member GetPropertyItem : propid:int -&gt; PropertyItem<br />&#160;&#160;member GetThumbnailImage : thumbWidth:int * thumbHeight:int * callback:GetThumbnailImageAbort * callbackData:nativeint -&gt; Image<br />&#160;&#160;member Height : int<br />&#160;&#160;...<br />&#160;&#160;nested type GetThumbnailImageAbort<br /><br />Full name: System.Drawing.Image</div>
<div class="tip" id="fs16">Multiple items<br />type Form =<br />&#160;&#160;inherit ContainerControl<br />&#160;&#160;new : unit -&gt; Form<br />&#160;&#160;member AcceptButton : IButtonControl with get, set<br />&#160;&#160;member Activate : unit -&gt; unit<br />&#160;&#160;member ActiveMdiChild : Form<br />&#160;&#160;member AddOwnedForm : ownedForm:Form -&gt; unit<br />&#160;&#160;member AllowTransparency : bool with get, set<br />&#160;&#160;member AutoScale : bool with get, set<br />&#160;&#160;member AutoScaleBaseSize : Size with get, set<br />&#160;&#160;member AutoScroll : bool with get, set<br />&#160;&#160;member AutoSize : bool with get, set<br />&#160;&#160;...<br />&#160;&#160;nested type ControlCollection<br /><br />Full name: System.Windows.Forms.Form<br /><br />--------------------<br />Form() : unit</div>
<div class="tip" id="fs17">Multiple items<br />type Size =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : pt:Point -&gt; Size + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member Height : int with get, set<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;&#160;&#160;member Width : int with get, set<br />&#160;&#160;&#160;&#160;static val Empty : Size<br />&#160;&#160;&#160;&#160;static member Add : sz1:Size * sz2:Size -&gt; Size<br />&#160;&#160;&#160;&#160;static member Ceiling : value:SizeF -&gt; Size<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Drawing.Size<br /><br />--------------------<br />Size()<br />Size(pt: Point) : unit<br />Size(width: int, height: int) : unit</div>
<div class="tip" id="fs18">property Image.Width: int</div>
<div class="tip" id="fs19">property Image.Height: int</div>
<div class="tip" id="fs20">val offsX : float32<br /><br />Full name: Script.offsX</div>
<div class="tip" id="fs21">val offsY : float32<br /><br />Full name: Script.offsY</div>
<div class="tip" id="fs22">val spaceX : float32<br /><br />Full name: Script.spaceX</div>
<div class="tip" id="fs23">val spaceY : float32<br /><br />Full name: Script.spaceY</div>
<div class="tip" id="fs24">val widthX : float32<br /><br />Full name: Script.widthX</div>
<div class="tip" id="fs25">val widthY : float32<br /><br />Full name: Script.widthY</div>
<div class="tip" id="fs26">val punch : text:string -&gt; Bitmap<br /><br />Full name: Script.punch<br /><em><br /><br />&#160;Create a punched card showing the specified text</em></div>
<div class="tip" id="fs27">val text : string</div>
<div class="tip" id="fs28">val textLayer : Bitmap<br /><em><br /><br />&#160;Generate a bitmap that contains the text in a big font</em></div>
<div class="tip" id="fs29">val bmp : Bitmap</div>
<div class="tip" id="fs30">val gr : Graphics</div>
<div class="tip" id="fs31">type Graphics =<br />&#160;&#160;inherit MarshalByRefObject<br />&#160;&#160;member AddMetafileComment : data:byte[] -&gt; unit<br />&#160;&#160;member BeginContainer : unit -&gt; GraphicsContainer + 2 overloads<br />&#160;&#160;member Clear : color:Color -&gt; unit<br />&#160;&#160;member Clip : Region with get, set<br />&#160;&#160;member ClipBounds : RectangleF<br />&#160;&#160;member CompositingMode : CompositingMode with get, set<br />&#160;&#160;member CompositingQuality : CompositingQuality with get, set<br />&#160;&#160;member CopyFromScreen : upperLeftSource:Point * upperLeftDestination:Point * blockRegionSize:Size -&gt; unit + 3 overloads<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member DpiX : float32<br />&#160;&#160;...<br />&#160;&#160;nested type DrawImageAbort<br />&#160;&#160;nested type EnumerateMetafileProc<br /><br />Full name: System.Drawing.Graphics</div>
<div class="tip" id="fs32">Graphics.FromImage(image: Image) : Graphics</div>
<div class="tip" id="fs33">Graphics.DrawString(s: string, font: Font, brush: Brush, layoutRectangle: RectangleF) : unit<br />Graphics.DrawString(s: string, font: Font, brush: Brush, point: PointF) : unit<br />Graphics.DrawString(s: string, font: Font, brush: Brush, layoutRectangle: RectangleF, format: StringFormat) : unit<br />Graphics.DrawString(s: string, font: Font, brush: Brush, point: PointF, format: StringFormat) : unit<br />Graphics.DrawString(s: string, font: Font, brush: Brush, x: float32, y: float32) : unit<br />Graphics.DrawString(s: string, font: Font, brush: Brush, x: float32, y: float32, format: StringFormat) : unit</div>
<div class="tip" id="fs34">Multiple items<br />type Font =<br />&#160;&#160;inherit MarshalByRefObject<br />&#160;&#160;new : prototype:Font * newStyle:FontStyle -&gt; Font + 12 overloads<br />&#160;&#160;member Bold : bool<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member FontFamily : FontFamily<br />&#160;&#160;member GdiCharSet : byte<br />&#160;&#160;member GdiVerticalFont : bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetHeight : unit -&gt; float32 + 2 overloads<br />&#160;&#160;...<br /><br />Full name: System.Drawing.Font<br /><br />--------------------<br />Font(prototype: Font, newStyle: FontStyle) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Font(family: FontFamily, emSize: float32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Font(familyName: string, emSize: float32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Font(family: FontFamily, emSize: float32, style: FontStyle) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Font(family: FontFamily, emSize: float32, unit: GraphicsUnit) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Font(familyName: string, emSize: float32, style: FontStyle) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Font(familyName: string, emSize: float32, unit: GraphicsUnit) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Font(family: FontFamily, emSize: float32, style: FontStyle, unit: GraphicsUnit) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Font(familyName: string, emSize: float32, style: FontStyle, unit: GraphicsUnit) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Font(family: FontFamily, emSize: float32, style: FontStyle, unit: GraphicsUnit, gdiCharSet: byte) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs35">type Brushes =<br />&#160;&#160;static member AliceBlue : Brush<br />&#160;&#160;static member AntiqueWhite : Brush<br />&#160;&#160;static member Aqua : Brush<br />&#160;&#160;static member Aquamarine : Brush<br />&#160;&#160;static member Azure : Brush<br />&#160;&#160;static member Beige : Brush<br />&#160;&#160;static member Bisque : Brush<br />&#160;&#160;static member Black : Brush<br />&#160;&#160;static member BlanchedAlmond : Brush<br />&#160;&#160;static member Blue : Brush<br />&#160;&#160;...<br /><br />Full name: System.Drawing.Brushes</div>
<div class="tip" id="fs36">property Brushes.Black: Brush</div>
<div class="tip" id="fs37">Multiple items<br />type PointF =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : x:float32 * y:float32 -&gt; PointF<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;&#160;&#160;member X : float32 with get, set<br />&#160;&#160;&#160;&#160;member Y : float32 with get, set<br />&#160;&#160;&#160;&#160;static val Empty : PointF<br />&#160;&#160;&#160;&#160;static member Add : pt:PointF * sz:Size -&gt; PointF + 1 overload<br />&#160;&#160;&#160;&#160;static member Subtract : pt:PointF * sz:Size -&gt; PointF + 1 overload<br />&#160;&#160;end<br /><br />Full name: System.Drawing.PointF<br /><br />--------------------<br />PointF()<br />PointF(x: float32, y: float32) : unit</div>
<div class="tip" id="fs38">val mostlyBlack : (RectangleF -&gt; bool)<br /><em><br /><br />&#160;Calculate if the specified rectangle contains some part<br />&#160;of the text (in the &#39;textLayer&#39; bitmap)</em></div>
<div class="tip" id="fs39">val rect : RectangleF</div>
<div class="tip" id="fs40">Multiple items<br />type RectangleF =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : location:PointF * size:SizeF -&gt; RectangleF + 1 overload<br />&#160;&#160;&#160;&#160;member Bottom : float32<br />&#160;&#160;&#160;&#160;member Contains : pt:PointF -&gt; bool + 2 overloads<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member Height : float32 with get, set<br />&#160;&#160;&#160;&#160;member Inflate : size:SizeF -&gt; unit + 1 overload<br />&#160;&#160;&#160;&#160;member Intersect : rect:RectangleF -&gt; unit<br />&#160;&#160;&#160;&#160;member IntersectsWith : rect:RectangleF -&gt; bool<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Drawing.RectangleF<br /><br />--------------------<br />RectangleF()<br />RectangleF(location: PointF, size: SizeF) : unit<br />RectangleF(x: float32, y: float32, width: float32, height: float32) : unit</div>
<div class="tip" id="fs41">val l : int</div>
<div class="tip" id="fs42">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs43">property RectangleF.X: float32</div>
<div class="tip" id="fs44">val t : int</div>
<div class="tip" id="fs45">property RectangleF.Y: float32</div>
<div class="tip" id="fs46">val avg : float</div>
<div class="tip" id="fs47">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = System.Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs48">val x : int</div>
<div class="tip" id="fs49">property RectangleF.Width: float32</div>
<div class="tip" id="fs50">val y : int</div>
<div class="tip" id="fs51">property RectangleF.Height: float32</div>
<div class="tip" id="fs52">val rx : (int -&gt; int)</div>
<div class="tip" id="fs53">val a : int</div>
<div class="tip" id="fs54">val max : e1:&#39;T -&gt; e2:&#39;T -&gt; &#39;T (requires comparison)<br /><br />Full name: Microsoft.FSharp.Core.Operators.max</div>
<div class="tip" id="fs55">val min : e1:&#39;T -&gt; e2:&#39;T -&gt; &#39;T (requires comparison)<br /><br />Full name: Microsoft.FSharp.Core.Operators.min</div>
<div class="tip" id="fs56">val ry : (int -&gt; int)</div>
<div class="tip" id="fs57">val pix : Color</div>
<div class="tip" id="fs58">Bitmap.GetPixel(x: int, y: int) : Color</div>
<div class="tip" id="fs59">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = System.Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs60">property Color.A: byte</div>
<div class="tip" id="fs61">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs62">val average : source:seq&lt;&#39;T&gt; -&gt; &#39;T (requires member ( + ) and member DivideByInt and member get_Zero)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.average</div>
<div class="tip" id="fs63">val punchLayer : Bitmap<br /><em><br /><br />&#160;Create a new layer to represent punches in the card</em></div>
<div class="tip" id="fs64">val x : int32</div>
<div class="tip" id="fs65">val y : int32</div>
<div class="tip" id="fs66">val rect : RectangleF<br /><em><br /><br />&#160;Iterate over the possible holes in the punched card</em></div>
<div class="tip" id="fs67">Multiple items<br />val float32 : value:&#39;T -&gt; float32 (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float32<br /><br />--------------------<br />type float32 = System.Single<br /><br />Full name: Microsoft.FSharp.Core.float32<br /><br />--------------------<br />type float32&lt;&#39;Measure&gt; = float32<br /><br />Full name: Microsoft.FSharp.Core.float32&lt;_&gt;</div>
<div class="tip" id="fs68">RectangleF.Inflate(size: SizeF) : unit<br />RectangleF.Inflate(x: float32, y: float32) : unit</div>
<div class="tip" id="fs69">Graphics.FillRectangle(brush: Brush, rect: Rectangle) : unit<br />Graphics.FillRectangle(brush: Brush, rect: RectangleF) : unit<br />Graphics.FillRectangle(brush: Brush, x: int, y: int, width: int, height: int) : unit<br />Graphics.FillRectangle(brush: Brush, x: float32, y: float32, width: float32, height: float32) : unit</div>
<div class="tip" id="fs70">val img : Bitmap</div>
<div class="tip" id="fs71">Graphics.DrawImage(image: Image, destPoints: Point []) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Graphics.DrawImage(image: Image, destPoints: PointF []) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Graphics.DrawImage(image: Image, rect: Rectangle) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Graphics.DrawImage(image: Image, point: Point) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Graphics.DrawImage(image: Image, rect: RectangleF) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Graphics.DrawImage(image: Image, point: PointF) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Graphics.DrawImage(image: Image, x: int, y: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Graphics.DrawImage(image: Image, x: float32, y: float32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Graphics.DrawImage(image: Image, destPoints: Point [], srcRect: Rectangle, srcUnit: GraphicsUnit) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Graphics.DrawImage(image: Image, destPoints: PointF [], srcRect: RectangleF, srcUnit: GraphicsUnit) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs72">Multiple items<br />type Point =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : sz:Size -&gt; Point + 2 overloads<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;member Offset : p:Point -&gt; unit + 1 overload<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;&#160;&#160;member X : int with get, set<br />&#160;&#160;&#160;&#160;member Y : int with get, set<br />&#160;&#160;&#160;&#160;static val Empty : Point<br />&#160;&#160;&#160;&#160;static member Add : pt:Point * sz:Size -&gt; Point<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Drawing.Point<br /><br />--------------------<br />Point()<br />Point(sz: Size) : unit<br />Point(dw: int) : unit<br />Point(x: int, y: int) : unit</div>

