<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// Lightweight Staged Numeric code</span>

<span class="prep">#r</span> <span class="s">&quot;packages/FSharp.Compiler.Service.1.3.1.0/lib/net45/FSharp.Compiler.Service.dll&quot;</span>
<span class="prep">#r</span> <span class="s">&quot;packages/QuotationCompiler.0.0.7-alpha/lib/net45/QuotationCompiler.dll&quot;</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span class="i">QuotationCompiler</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">Quotations</span>

<span class="c">// &lt;@ fun x -&gt; (% &lt;@ x @&gt; ) @&gt; ~ lambda (fun x -&gt; x)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="f">lambda</span> (<span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="f">f</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">var</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="t">Var</span>(<span class="s">&quot;__temp__&quot;</span>, <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>)
    <span onmouseout="hideTip(event, 'fs7', 13)" onmouseover="showTip(event, 'fs7', 13)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="f">Cast</span><span class="o">&lt;</span>_<span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs7', 15)" onmouseover="showTip(event, 'fs7', 15)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="f">Lambda</span>(<span onmouseout="hideTip(event, 'fs8', 17)" onmouseover="showTip(event, 'fs8', 17)" class="i">var</span>,  <span onmouseout="hideTip(event, 'fs6', 18)" onmouseover="showTip(event, 'fs6', 18)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs7', 19)" onmouseover="showTip(event, 'fs7', 19)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 20)" onmouseover="showTip(event, 'fs11', 20)" class="f">Cast</span><span class="o">&lt;</span>_<span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs7', 21)" onmouseover="showTip(event, 'fs7', 21)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="f">Var</span> <span onmouseout="hideTip(event, 'fs8', 23)" onmouseover="showTip(event, 'fs8', 23)" class="i">var</span>))))


<span class="k">type</span> <span onmouseout="hideTip(event, 'fs14', 24)" onmouseover="showTip(event, 'fs14', 24)" class="t">ExprPlus</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 25)" onmouseover="showTip(event, 'fs14', 25)" class="p">ExprPlus</span> <span class="k">with</span>
    <span class="k">static</span> <span class="k">member</span> <span class="k">inline</span> (<span class="o">?&lt;-</span>) (<span onmouseout="hideTip(event, 'fs15', 26)" onmouseover="showTip(event, 'fs15', 26)" class="i">a</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 27)" onmouseover="showTip(event, 'fs7', 27)" class="t">Expr</span><span class="o">&lt;</span>_<span class="o">&gt;</span>, <span onmouseout="hideTip(event, 'fs14', 28)" onmouseover="showTip(event, 'fs14', 28)" class="p">ExprPlus</span>, <span onmouseout="hideTip(event, 'fs16', 29)" onmouseover="showTip(event, 'fs16', 29)" class="i">b</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 30)" onmouseover="showTip(event, 'fs7', 30)" class="t">Expr</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span class="o">=</span> &lt;@ <span class="o">%</span><span onmouseout="hideTip(event, 'fs15', 31)" onmouseover="showTip(event, 'fs15', 31)" class="i">a</span> <span class="o">+</span> <span class="o">%</span><span onmouseout="hideTip(event, 'fs16', 32)" onmouseover="showTip(event, 'fs16', 32)" class="i">b</span> @&gt;
    <span class="k">static</span> <span class="k">member</span> <span class="k">inline</span> (<span class="o">?&lt;-</span>) (<span onmouseout="hideTip(event, 'fs17', 33)" onmouseover="showTip(event, 'fs17', 33)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs14', 34)" onmouseover="showTip(event, 'fs14', 34)" class="p">ExprPlus</span>, <span onmouseout="hideTip(event, 'fs18', 35)" onmouseover="showTip(event, 'fs18', 35)" class="i">b</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 36)" onmouseover="showTip(event, 'fs17', 36)" class="i">a</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs18', 37)" onmouseover="showTip(event, 'fs18', 37)" class="i">b</span>

<span class="k">let</span> <span class="k">inline</span> (<span class="o">+</span>) <span onmouseout="hideTip(event, 'fs19', 38)" onmouseover="showTip(event, 'fs19', 38)" class="i">a</span> <span onmouseout="hideTip(event, 'fs20', 39)" onmouseover="showTip(event, 'fs20', 39)" class="i">b</span> <span class="o">=</span>  <span onmouseout="hideTip(event, 'fs19', 40)" onmouseover="showTip(event, 'fs19', 40)" class="i">a</span> <span class="o">?</span> (<span onmouseout="hideTip(event, 'fs14', 41)" onmouseover="showTip(event, 'fs14', 41)" class="p">ExprPlus</span>) <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs20', 42)" onmouseover="showTip(event, 'fs20', 42)" class="i">b</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs21', 43)" onmouseover="showTip(event, 'fs21', 43)" class="t">ExprTimes</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 44)" onmouseover="showTip(event, 'fs21', 44)" class="p">ExprTimes</span> <span class="k">with</span>
    <span class="k">static</span> <span class="k">member</span> <span class="k">inline</span> (<span class="o">?&lt;-</span>) (<span onmouseout="hideTip(event, 'fs22', 45)" onmouseover="showTip(event, 'fs22', 45)" class="i">a</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 46)" onmouseover="showTip(event, 'fs7', 46)" class="t">Expr</span><span class="o">&lt;</span>_<span class="o">&gt;</span>, <span onmouseout="hideTip(event, 'fs21', 47)" onmouseover="showTip(event, 'fs21', 47)" class="p">ExprTimes</span>, <span onmouseout="hideTip(event, 'fs23', 48)" onmouseover="showTip(event, 'fs23', 48)" class="i">b</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 49)" onmouseover="showTip(event, 'fs7', 49)" class="t">Expr</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span class="o">=</span> &lt;@ <span class="o">%</span><span onmouseout="hideTip(event, 'fs22', 50)" onmouseover="showTip(event, 'fs22', 50)" class="i">a</span> <span class="o">*</span> <span class="o">%</span><span onmouseout="hideTip(event, 'fs23', 51)" onmouseover="showTip(event, 'fs23', 51)" class="i">b</span> @&gt;
    <span class="k">static</span> <span class="k">member</span> <span class="k">inline</span> (<span class="o">?&lt;-</span>) (<span onmouseout="hideTip(event, 'fs24', 52)" onmouseover="showTip(event, 'fs24', 52)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs21', 53)" onmouseover="showTip(event, 'fs21', 53)" class="p">ExprTimes</span>, <span onmouseout="hideTip(event, 'fs25', 54)" onmouseover="showTip(event, 'fs25', 54)" class="i">b</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 55)" onmouseover="showTip(event, 'fs24', 55)" class="i">a</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs25', 56)" onmouseover="showTip(event, 'fs25', 56)" class="i">b</span>

<span class="k">let</span> <span class="k">inline</span> <span class="o">(*)</span> <span onmouseout="hideTip(event, 'fs19', 57)" onmouseover="showTip(event, 'fs19', 57)" class="i">a</span> <span onmouseout="hideTip(event, 'fs20', 58)" onmouseover="showTip(event, 'fs20', 58)" class="i">b</span> <span class="o">=</span>  <span onmouseout="hideTip(event, 'fs19', 59)" onmouseover="showTip(event, 'fs19', 59)" class="i">a</span> <span class="o">?</span> (<span onmouseout="hideTip(event, 'fs21', 60)" onmouseover="showTip(event, 'fs21', 60)" class="p">ExprTimes</span>) <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs20', 61)" onmouseover="showTip(event, 'fs20', 61)" class="i">b</span>

<span class="k">module</span> <span class="t">NumericLiteralG</span> <span class="o">=</span> 
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs26', 62)" onmouseover="showTip(event, 'fs26', 62)" class="f">FromZero</span>() <span class="o">=</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 63)" onmouseover="showTip(event, 'fs27', 63)" class="i">zero</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 64)" onmouseover="showTip(event, 'fs28', 64)" class="t">LanguagePrimitives</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 65)" onmouseover="showTip(event, 'fs29', 65)" class="i">GenericZero</span> <span class="k">in</span> &lt;@ <span onmouseout="hideTip(event, 'fs27', 66)" onmouseover="showTip(event, 'fs27', 66)" class="i">zero</span> @&gt;
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs30', 67)" onmouseover="showTip(event, 'fs30', 67)" class="f">FromOne</span>() <span class="o">=</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 68)" onmouseover="showTip(event, 'fs31', 68)" class="i">one</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 69)" onmouseover="showTip(event, 'fs28', 69)" class="t">LanguagePrimitives</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 70)" onmouseover="showTip(event, 'fs32', 70)" class="i">GenericOne</span> <span class="k">in</span> &lt;@ <span onmouseout="hideTip(event, 'fs31', 71)" onmouseover="showTip(event, 'fs31', 71)" class="i">one</span> @&gt;
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs33', 72)" onmouseover="showTip(event, 'fs33', 72)" class="f">FromInt32</span> (<span onmouseout="hideTip(event, 'fs34', 73)" onmouseover="showTip(event, 'fs34', 73)" class="i">n</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs35', 74)" onmouseover="showTip(event, 'fs35', 74)" class="t">int</span>) <span class="o">=</span> &lt;@ <span onmouseout="hideTip(event, 'fs34', 75)" onmouseover="showTip(event, 'fs34', 75)" class="i">n</span> @&gt;

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 76)" onmouseover="showTip(event, 'fs36', 76)" class="f">compile</span> (<span onmouseout="hideTip(event, 'fs6', 77)" onmouseover="showTip(event, 'fs6', 77)" class="f">f</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 78)" onmouseover="showTip(event, 'fs7', 78)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 79)" onmouseover="showTip(event, 'fs7', 79)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span>) <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">R</span> <span class="o">=</span> <span class="i">QuotationCompiler</span><span class="o">.</span><span class="i">ToFunc</span>(<span onmouseout="hideTip(event, 'fs5', 80)" onmouseover="showTip(event, 'fs5', 80)" class="i">lambda</span> <span onmouseout="hideTip(event, 'fs6', 81)" onmouseover="showTip(event, 'fs6', 81)" class="i">f</span>) ()

<span class="c">// Example</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 82)" onmouseover="showTip(event, 'fs37', 82)" class="f">f</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 83)" onmouseover="showTip(event, 'fs7', 83)" class="t">Expr</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs35', 84)" onmouseover="showTip(event, 'fs35', 84)" class="t">int</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 85)" onmouseover="showTip(event, 'fs7', 85)" class="t">Expr</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs35', 86)" onmouseover="showTip(event, 'fs35', 86)" class="t">int</span><span class="o">&gt;</span> <span class="o">=</span> 
    (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs38', 87)" onmouseover="showTip(event, 'fs38', 87)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs38', 88)" onmouseover="showTip(event, 'fs38', 88)" class="i">x</span> <span class="o">*</span> <span class="n">2G</span>) <span class="o">&lt;&lt;</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs38', 89)" onmouseover="showTip(event, 'fs38', 89)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs38', 90)" onmouseover="showTip(event, 'fs38', 90)" class="i">x</span> <span class="o">+</span> <span class="n">1G</span>)

<span onmouseout="hideTip(event, 'fs36', 91)" onmouseover="showTip(event, 'fs36', 91)" class="f">compile</span> <span onmouseout="hideTip(event, 'fs37', 92)" onmouseover="showTip(event, 'fs37', 92)" class="f">f</span> <span class="n">2</span> <span class="c">// 6</span>
 
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace Microsoft</div>
<div class="tip" id="fs3">namespace Microsoft.FSharp</div>
<div class="tip" id="fs4">namespace Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs5">val lambda : f:(Expr&lt;&#39;T&gt; -&gt; Expr&lt;&#39;R&gt;) -&gt; Expr&lt;(&#39;T -&gt; &#39;R)&gt;<br /><br />Full name: Script.lambda</div>
<div class="tip" id="fs6">val f : (Expr&lt;&#39;T&gt; -&gt; Expr&lt;&#39;R&gt;)</div>
<div class="tip" id="fs7">Multiple items<br />type Expr =<br />&#160;&#160;override Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetFreeVars : unit -&gt; seq&lt;Var&gt;<br />&#160;&#160;member Substitute : substitution:(Var -&gt; Expr option) -&gt; Expr<br />&#160;&#160;member ToString : full:bool -&gt; string<br />&#160;&#160;member CustomAttributes : Expr list<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member AddressOf : target:Expr -&gt; Expr<br />&#160;&#160;static member AddressSet : target:Expr * value:Expr -&gt; Expr<br />&#160;&#160;static member Application : functionExpr:Expr * argument:Expr -&gt; Expr<br />&#160;&#160;static member Applications : functionExpr:Expr * arguments:Expr list list -&gt; Expr<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Quotations.Expr<br /><br />--------------------<br />type Expr&lt;&#39;T&gt; =<br />&#160;&#160;inherit Expr<br />&#160;&#160;member Raw : Expr<br /><br />Full name: Microsoft.FSharp.Quotations.Expr&lt;_&gt;</div>
<div class="tip" id="fs8">val var : Var</div>
<div class="tip" id="fs9">Multiple items<br />type Var =<br />&#160;&#160;interface IComparable<br />&#160;&#160;new : name:string * typ:Type * ?isMutable:bool -&gt; Var<br />&#160;&#160;member IsMutable : bool<br />&#160;&#160;member Name : string<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member Global : name:string * typ:Type -&gt; Var<br /><br />Full name: Microsoft.FSharp.Quotations.Var<br /><br />--------------------<br />new : name:string * typ:Type * ?isMutable:bool -&gt; Var</div>
<div class="tip" id="fs10">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs11">static member Expr.Cast : source:Expr -&gt; Expr&lt;&#39;T&gt;</div>
<div class="tip" id="fs12">static member Expr.Lambda : parameter:Var * body:Expr -&gt; Expr</div>
<div class="tip" id="fs13">static member Expr.Var : variable:Var -&gt; Expr</div>
<div class="tip" id="fs14">Multiple items<br />union case ExprPlus.ExprPlus: ExprPlus<br /><br />--------------------<br />type ExprPlus =<br />&#160;&#160;| ExprPlus<br />&#160;&#160;static member ( ?&lt;- ) : a:Expr&lt;&#39;a&gt; * ExprPlus:ExprPlus * b:Expr&lt;&#39;b&gt; -&gt; Expr&lt;&#39;c&gt; (requires member ( + ))<br />&#160;&#160;static member ( ?&lt;- ) : a:&#39;a * ExprPlus:ExprPlus * b:&#39;b -&gt; &#39;c (requires member ( + ))<br /><br />Full name: Script.ExprPlus</div>
<div class="tip" id="fs15">val a : Expr&lt;&#39;a&gt; (requires member ( + ))</div>
<div class="tip" id="fs16">val b : Expr&lt;&#39;b&gt; (requires member ( + ))</div>
<div class="tip" id="fs17">val a : &#39;a (requires member ( + ))</div>
<div class="tip" id="fs18">val b : &#39;b (requires member ( + ))</div>
<div class="tip" id="fs19">val a : &#39;a (requires member ( ?&lt;- ))</div>
<div class="tip" id="fs20">val b : &#39;b (requires member ( ?&lt;- ))</div>
<div class="tip" id="fs21">Multiple items<br />union case ExprTimes.ExprTimes: ExprTimes<br /><br />--------------------<br />type ExprTimes =<br />&#160;&#160;| ExprTimes<br />&#160;&#160;static member ( ?&lt;- ) : a:Expr&lt;&#39;a&gt; * ExprTimes:ExprTimes * b:Expr&lt;&#39;b&gt; -&gt; Expr&lt;&#39;c&gt; (requires member ( * ))<br />&#160;&#160;static member ( ?&lt;- ) : a:&#39;a * ExprTimes:ExprTimes * b:&#39;b -&gt; &#39;c (requires member ( * ))<br /><br />Full name: Script.ExprTimes</div>
<div class="tip" id="fs22">val a : Expr&lt;&#39;a&gt; (requires member ( * ))</div>
<div class="tip" id="fs23">val b : Expr&lt;&#39;b&gt; (requires member ( * ))</div>
<div class="tip" id="fs24">val a : &#39;a (requires member ( * ))</div>
<div class="tip" id="fs25">val b : &#39;b (requires member ( * ))</div>
<div class="tip" id="fs26">val FromZero : unit -&gt; Expr&lt;&#39;a&gt; (requires member get_Zero)<br /><br />Full name: Script.NumericLiteralG.FromZero</div>
<div class="tip" id="fs27">val zero : &#39;a (requires member get_Zero)</div>
<div class="tip" id="fs28">module LanguagePrimitives<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs29">val GenericZero&lt;&#39;T (requires member get_Zero)&gt; : &#39;T (requires member get_Zero)<br /><br />Full name: Microsoft.FSharp.Core.LanguagePrimitives.GenericZero</div>
<div class="tip" id="fs30">val FromOne : unit -&gt; Expr&lt;&#39;a&gt; (requires member get_One)<br /><br />Full name: Script.NumericLiteralG.FromOne</div>
<div class="tip" id="fs31">val one : &#39;a (requires member get_One)</div>
<div class="tip" id="fs32">val GenericOne&lt;&#39;T (requires member get_One)&gt; : &#39;T (requires member get_One)<br /><br />Full name: Microsoft.FSharp.Core.LanguagePrimitives.GenericOne</div>
<div class="tip" id="fs33">val FromInt32 : n:int -&gt; Expr&lt;int&gt;<br /><br />Full name: Script.NumericLiteralG.FromInt32</div>
<div class="tip" id="fs34">val n : int</div>
<div class="tip" id="fs35">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs36">val compile : f:(Expr&lt;&#39;T&gt; -&gt; Expr&lt;&#39;R&gt;) -&gt; (&#39;T -&gt; &#39;R)<br /><br />Full name: Script.compile</div>
<div class="tip" id="fs37">val f : (Expr&lt;int&gt; -&gt; Expr&lt;int&gt;)<br /><br />Full name: Script.f</div>
<div class="tip" id="fs38">val x : Expr&lt;int&gt;</div>

