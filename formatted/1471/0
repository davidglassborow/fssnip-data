<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">//Some usefull Async module extensions: </span>
<span class="c">//      1. CreateAsyncChannel - return channel for transmitting data between </span>
<span class="c">//         subsystems. Result is two functions - data sender and data receiver.</span>
<span class="c">//      2. ParallelGrouped - async for launching sequence of asyncs in groups </span>
<span class="c">//         by specified count.</span>
<span class="c">//      3. ParallelGroupedWithResults - async for launching sequence of asyncs </span>
<span class="c">//         in groups by specified count and return results as array.</span>
<span class="c">// 2. can be usefull instead of (Async.Parallel &gt;&gt; Async.Ignore &gt;&gt; Async.Start) </span>
<span class="c">// for preventing threadpool starvation (especially on system startup)</span>

<span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Async</span> <span class="o">=</span>
    <span class="k">type</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">msg</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">=</span> 
        | <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="p">Result</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">a</span> 
        | <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="p">IntermediateResult</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">a</span> 
        | <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="p">GetResult</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">AsyncReplyChannel</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="t">bool</span><span class="o">&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="f">CreateAsyncChannel</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> () <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="i">inbox</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="t">MailboxProcessor</span><span class="o">&lt;</span>_<span class="o">&gt;</span>( <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="i">inbox</span> <span class="k">-&gt;</span>
            <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="f">waitResponse</span> (<span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="i">repl</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 14)" onmouseover="showTip(event, 'fs6', 14)" class="t">AsyncReplyChannel</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs7', 15)" onmouseover="showTip(event, 'fs7', 15)" class="t">bool</span><span class="o">&gt;</span>) <span class="o">=</span> 
                <span onmouseout="hideTip(event, 'fs9', 16)" onmouseover="showTip(event, 'fs9', 16)" class="i">inbox</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="f">Scan</span> <span class="o">&lt;|</span> <span class="k">function</span>
                    | <span onmouseout="hideTip(event, 'fs5', 18)" onmouseover="showTip(event, 'fs5', 18)" class="p">GetResult</span> <span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="i">repl</span> <span class="k">-&gt;</span> 
                        <span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="p">Some</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs11', 21)" onmouseover="showTip(event, 'fs11', 21)" class="f">waitResponse</span> <span onmouseout="hideTip(event, 'fs12', 22)" onmouseover="showTip(event, 'fs12', 22)" class="i">repl</span>
                    | <span onmouseout="hideTip(event, 'fs4', 23)" onmouseover="showTip(event, 'fs4', 23)" class="p">IntermediateResult</span> <span onmouseout="hideTip(event, 'fs15', 24)" onmouseover="showTip(event, 'fs15', 24)" class="i">res</span> <span class="k">-&gt;</span>
                        <span onmouseout="hideTip(event, 'fs12', 25)" onmouseover="showTip(event, 'fs12', 25)" class="i">repl</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="f">Reply</span> (<span onmouseout="hideTip(event, 'fs15', 27)" onmouseover="showTip(event, 'fs15', 27)" class="i">res</span>, <span class="k">false</span>)
                        <span onmouseout="hideTip(event, 'fs14', 28)" onmouseover="showTip(event, 'fs14', 28)" class="p">Some</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs17', 29)" onmouseover="showTip(event, 'fs17', 29)" class="f">waitRepl</span> ()
                    | <span onmouseout="hideTip(event, 'fs3', 30)" onmouseover="showTip(event, 'fs3', 30)" class="p">Result</span> <span onmouseout="hideTip(event, 'fs15', 31)" onmouseover="showTip(event, 'fs15', 31)" class="i">res</span> <span class="k">-&gt;</span> 
                        <span onmouseout="hideTip(event, 'fs12', 32)" onmouseover="showTip(event, 'fs12', 32)" class="i">repl</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 33)" onmouseover="showTip(event, 'fs16', 33)" class="f">Reply</span> (<span onmouseout="hideTip(event, 'fs15', 34)" onmouseover="showTip(event, 'fs15', 34)" class="i">res</span>, <span class="k">true</span>)
                        <span onmouseout="hideTip(event, 'fs14', 35)" onmouseover="showTip(event, 'fs14', 35)" class="p">Some</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs18', 36)" onmouseover="showTip(event, 'fs18', 36)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 37)" onmouseover="showTip(event, 'fs19', 37)" class="f">Return</span> ()
            <span class="k">and</span> <span onmouseout="hideTip(event, 'fs17', 38)" onmouseover="showTip(event, 'fs17', 38)" class="f">waitRepl</span> () <span class="o">=</span>
                <span onmouseout="hideTip(event, 'fs9', 39)" onmouseover="showTip(event, 'fs9', 39)" class="i">inbox</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 40)" onmouseover="showTip(event, 'fs13', 40)" class="f">Scan</span> <span class="o">&lt;|</span> <span class="k">function</span>
                    | <span onmouseout="hideTip(event, 'fs5', 41)" onmouseover="showTip(event, 'fs5', 41)" class="p">GetResult</span> <span onmouseout="hideTip(event, 'fs12', 42)" onmouseover="showTip(event, 'fs12', 42)" class="i">repl</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 43)" onmouseover="showTip(event, 'fs14', 43)" class="p">Some</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs11', 44)" onmouseover="showTip(event, 'fs11', 44)" class="f">waitResponse</span> <span onmouseout="hideTip(event, 'fs12', 45)" onmouseover="showTip(event, 'fs12', 45)" class="i">repl</span>
                    | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 46)" onmouseover="showTip(event, 'fs20', 46)" class="p">None</span>
            <span onmouseout="hideTip(event, 'fs17', 47)" onmouseover="showTip(event, 'fs17', 47)" class="f">waitRepl</span> ()
        )
        <span onmouseout="hideTip(event, 'fs9', 48)" onmouseover="showTip(event, 'fs9', 48)" class="i">inbox</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 49)" onmouseover="showTip(event, 'fs21', 49)" class="f">Start</span>()
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 50)" onmouseover="showTip(event, 'fs22', 50)" class="f">resultWaiter</span> <span onmouseout="hideTip(event, 'fs23', 51)" onmouseover="showTip(event, 'fs23', 51)" class="i">timeout</span> <span class="o">=</span>             
            <span onmouseout="hideTip(event, 'fs9', 52)" onmouseover="showTip(event, 'fs9', 52)" class="i">inbox</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 53)" onmouseover="showTip(event, 'fs24', 53)" class="f">PostAndTryAsyncReply</span> ((<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs25', 54)" onmouseover="showTip(event, 'fs25', 54)" class="i">replChannel</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 55)" onmouseover="showTip(event, 'fs5', 55)" class="p">GetResult</span> <span onmouseout="hideTip(event, 'fs25', 56)" onmouseover="showTip(event, 'fs25', 56)" class="i">replChannel</span>), <span onmouseout="hideTip(event, 'fs23', 57)" onmouseover="showTip(event, 'fs23', 57)" class="i">timeout</span>)
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 58)" onmouseover="showTip(event, 'fs26', 58)" class="f">postResult</span> <span onmouseout="hideTip(event, 'fs27', 59)" onmouseover="showTip(event, 'fs27', 59)" class="i">closeChannel</span> <span class="o">=</span> 
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs27', 60)" onmouseover="showTip(event, 'fs27', 60)" class="i">closeChannel</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs3', 61)" onmouseover="showTip(event, 'fs3', 61)" class="p">Result</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs4', 62)" onmouseover="showTip(event, 'fs4', 62)" class="p">IntermediateResult</span>
            <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs9', 63)" onmouseover="showTip(event, 'fs9', 63)" class="i">inbox</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 64)" onmouseover="showTip(event, 'fs28', 64)" class="f">Post</span>
        (<span onmouseout="hideTip(event, 'fs22', 65)" onmouseover="showTip(event, 'fs22', 65)" class="f">resultWaiter</span>, <span onmouseout="hideTip(event, 'fs26', 66)" onmouseover="showTip(event, 'fs26', 66)" class="f">postResult</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 67)" onmouseover="showTip(event, 'fs29', 67)" class="f">ParallelGrouped</span> (<span onmouseout="hideTip(event, 'fs30', 68)" onmouseover="showTip(event, 'fs30', 68)" class="i">delay</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs31', 69)" onmouseover="showTip(event, 'fs31', 69)" class="t">int</span>) (<span onmouseout="hideTip(event, 'fs32', 70)" onmouseover="showTip(event, 'fs32', 70)" class="i">n</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs31', 71)" onmouseover="showTip(event, 'fs31', 71)" class="t">int</span>) (<span onmouseout="hideTip(event, 'fs33', 72)" onmouseover="showTip(event, 'fs33', 72)" class="i">asyncs</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs34', 73)" onmouseover="showTip(event, 'fs34', 73)" class="t">seq</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs1', 74)" onmouseover="showTip(event, 'fs1', 74)" class="t">Async</span><span class="o">&lt;</span>_<span class="o">&gt;</span><span class="o">&gt;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 75)" onmouseover="showTip(event, 'fs18', 75)" class="i">async</span> {
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 76)" onmouseover="showTip(event, 'fs30', 76)" class="i">delay</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs35', 77)" onmouseover="showTip(event, 'fs35', 77)" class="f">max</span> <span class="n">100</span> <span onmouseout="hideTip(event, 'fs30', 78)" onmouseover="showTip(event, 'fs30', 78)" class="i">delay</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 79)" onmouseover="showTip(event, 'fs36', 79)" class="i">asyncAcc</span>, <span onmouseout="hideTip(event, 'fs37', 80)" onmouseover="showTip(event, 'fs37', 80)" class="i">lastGroup</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs33', 81)" onmouseover="showTip(event, 'fs33', 81)" class="i">asyncs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs38', 82)" onmouseover="showTip(event, 'fs38', 82)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 83)" onmouseover="showTip(event, 'fs39', 83)" class="f">fold</span>(<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs36', 84)" onmouseover="showTip(event, 'fs36', 84)" class="i">asyncAcc</span>, <span onmouseout="hideTip(event, 'fs40', 85)" onmouseover="showTip(event, 'fs40', 85)" class="i">group</span>) <span onmouseout="hideTip(event, 'fs41', 86)" onmouseover="showTip(event, 'fs41', 86)" class="i">op</span> <span class="k">-&gt;</span> 
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 87)" onmouseover="showTip(event, 'fs40', 87)" class="i">group</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs41', 88)" onmouseover="showTip(event, 'fs41', 88)" class="i">op</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs40', 89)" onmouseover="showTip(event, 'fs40', 89)" class="i">group</span>
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs40', 90)" onmouseover="showTip(event, 'fs40', 90)" class="i">group</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 91)" onmouseover="showTip(event, 'fs42', 91)" class="i">Length</span> <span class="o">&gt;</span><span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 92)" onmouseover="showTip(event, 'fs32', 92)" class="i">n</span> <span class="k">then</span>
                    <span onmouseout="hideTip(event, 'fs18', 93)" onmouseover="showTip(event, 'fs18', 93)" class="i">async</span> {
                        <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs40', 94)" onmouseover="showTip(event, 'fs40', 94)" class="i">group</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 95)" onmouseover="showTip(event, 'fs1', 95)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 96)" onmouseover="showTip(event, 'fs43', 96)" class="f">Parallel</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 97)" onmouseover="showTip(event, 'fs1', 97)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 98)" onmouseover="showTip(event, 'fs44', 98)" class="f">Ignore</span>                        
                        <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs1', 99)" onmouseover="showTip(event, 'fs1', 99)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 100)" onmouseover="showTip(event, 'fs45', 100)" class="f">Sleep</span> <span onmouseout="hideTip(event, 'fs30', 101)" onmouseover="showTip(event, 'fs30', 101)" class="i">delay</span>
                        <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs36', 102)" onmouseover="showTip(event, 'fs36', 102)" class="i">asyncAcc</span>
                    }, []
                <span class="k">else</span> <span onmouseout="hideTip(event, 'fs36', 103)" onmouseover="showTip(event, 'fs36', 103)" class="i">asyncAcc</span>, <span onmouseout="hideTip(event, 'fs40', 104)" onmouseover="showTip(event, 'fs40', 104)" class="i">group</span>) (<span onmouseout="hideTip(event, 'fs18', 105)" onmouseover="showTip(event, 'fs18', 105)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 106)" onmouseover="showTip(event, 'fs19', 106)" class="f">Return</span> (), [])
        <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs36', 107)" onmouseover="showTip(event, 'fs36', 107)" class="i">asyncAcc</span>
        <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs37', 108)" onmouseover="showTip(event, 'fs37', 108)" class="i">lastGroup</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 109)" onmouseover="showTip(event, 'fs1', 109)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 110)" onmouseover="showTip(event, 'fs43', 110)" class="f">Parallel</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 111)" onmouseover="showTip(event, 'fs1', 111)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 112)" onmouseover="showTip(event, 'fs44', 112)" class="f">Ignore</span> 
    }
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 113)" onmouseover="showTip(event, 'fs46', 113)" class="f">ParallelGroupedWithResults</span> (<span onmouseout="hideTip(event, 'fs30', 114)" onmouseover="showTip(event, 'fs30', 114)" class="i">delay</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs31', 115)" onmouseover="showTip(event, 'fs31', 115)" class="t">int</span>) (<span onmouseout="hideTip(event, 'fs32', 116)" onmouseover="showTip(event, 'fs32', 116)" class="i">n</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs31', 117)" onmouseover="showTip(event, 'fs31', 117)" class="t">int</span>) (<span onmouseout="hideTip(event, 'fs33', 118)" onmouseover="showTip(event, 'fs33', 118)" class="i">asyncs</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs34', 119)" onmouseover="showTip(event, 'fs34', 119)" class="t">seq</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs1', 120)" onmouseover="showTip(event, 'fs1', 120)" class="t">Async</span><span class="o">&lt;</span>_<span class="o">&gt;</span><span class="o">&gt;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 121)" onmouseover="showTip(event, 'fs18', 121)" class="i">async</span> {
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 122)" onmouseover="showTip(event, 'fs30', 122)" class="i">delay</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs35', 123)" onmouseover="showTip(event, 'fs35', 123)" class="f">max</span> <span class="n">100</span> <span onmouseout="hideTip(event, 'fs30', 124)" onmouseover="showTip(event, 'fs30', 124)" class="i">delay</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs47', 125)" onmouseover="showTip(event, 'fs47', 125)" class="i">asyncAcc</span>, <span onmouseout="hideTip(event, 'fs37', 126)" onmouseover="showTip(event, 'fs37', 126)" class="i">lastGroup</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs33', 127)" onmouseover="showTip(event, 'fs33', 127)" class="i">asyncs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs38', 128)" onmouseover="showTip(event, 'fs38', 128)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 129)" onmouseover="showTip(event, 'fs39', 129)" class="f">fold</span>(<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs47', 130)" onmouseover="showTip(event, 'fs47', 130)" class="i">asyncAcc</span>, <span onmouseout="hideTip(event, 'fs40', 131)" onmouseover="showTip(event, 'fs40', 131)" class="i">group</span>) <span onmouseout="hideTip(event, 'fs41', 132)" onmouseover="showTip(event, 'fs41', 132)" class="i">op</span> <span class="k">-&gt;</span> 
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 133)" onmouseover="showTip(event, 'fs40', 133)" class="i">group</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs41', 134)" onmouseover="showTip(event, 'fs41', 134)" class="i">op</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs40', 135)" onmouseover="showTip(event, 'fs40', 135)" class="i">group</span>
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs40', 136)" onmouseover="showTip(event, 'fs40', 136)" class="i">group</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 137)" onmouseover="showTip(event, 'fs42', 137)" class="i">Length</span> <span class="o">&gt;</span><span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 138)" onmouseover="showTip(event, 'fs32', 138)" class="i">n</span> <span class="k">then</span>
                    <span onmouseout="hideTip(event, 'fs18', 139)" onmouseover="showTip(event, 'fs18', 139)" class="i">async</span> {
                        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs48', 140)" onmouseover="showTip(event, 'fs48', 140)" class="i">res1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 141)" onmouseover="showTip(event, 'fs40', 141)" class="i">group</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 142)" onmouseover="showTip(event, 'fs1', 142)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 143)" onmouseover="showTip(event, 'fs43', 143)" class="f">Parallel</span>                      
                        <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs1', 144)" onmouseover="showTip(event, 'fs1', 144)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 145)" onmouseover="showTip(event, 'fs45', 145)" class="f">Sleep</span> <span onmouseout="hideTip(event, 'fs30', 146)" onmouseover="showTip(event, 'fs30', 146)" class="i">delay</span>
                        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs49', 147)" onmouseover="showTip(event, 'fs49', 147)" class="i">res2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs47', 148)" onmouseover="showTip(event, 'fs47', 148)" class="i">asyncAcc</span>
                        <span class="k">return</span> [|<span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs49', 149)" onmouseover="showTip(event, 'fs49', 149)" class="i">res2</span>; <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs48', 150)" onmouseover="showTip(event, 'fs48', 150)" class="i">res1</span>|]
                    }, []
                <span class="k">else</span> <span onmouseout="hideTip(event, 'fs47', 151)" onmouseover="showTip(event, 'fs47', 151)" class="i">asyncAcc</span>, <span onmouseout="hideTip(event, 'fs40', 152)" onmouseover="showTip(event, 'fs40', 152)" class="i">group</span>) (<span onmouseout="hideTip(event, 'fs18', 153)" onmouseover="showTip(event, 'fs18', 153)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 154)" onmouseover="showTip(event, 'fs19', 154)" class="f">Return</span> <span onmouseout="hideTip(event, 'fs50', 155)" onmouseover="showTip(event, 'fs50', 155)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 156)" onmouseover="showTip(event, 'fs51', 156)" class="i">empty</span>, [])
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs48', 157)" onmouseover="showTip(event, 'fs48', 157)" class="i">res1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs47', 158)" onmouseover="showTip(event, 'fs47', 158)" class="i">asyncAcc</span>
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs49', 159)" onmouseover="showTip(event, 'fs49', 159)" class="i">res2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs37', 160)" onmouseover="showTip(event, 'fs37', 160)" class="i">lastGroup</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 161)" onmouseover="showTip(event, 'fs1', 161)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 162)" onmouseover="showTip(event, 'fs43', 162)" class="f">Parallel</span>
        <span class="k">return</span> [|<span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs48', 163)" onmouseover="showTip(event, 'fs48', 163)" class="i">res1</span>; <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs49', 164)" onmouseover="showTip(event, 'fs49', 164)" class="i">res2</span>|]
    }

<span class="c">//usage</span>
<span class="c">//dataReciever and dataSender could be passed to different independed parts of program to make channel</span>
<span class="k">let</span> (<span onmouseout="hideTip(event, 'fs52', 165)" onmouseover="showTip(event, 'fs52', 165)" class="f">dataReciever</span>, <span onmouseout="hideTip(event, 'fs53', 166)" onmouseover="showTip(event, 'fs53', 166)" class="f">dataSender</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs54', 167)" onmouseover="showTip(event, 'fs54', 167)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 168)" onmouseover="showTip(event, 'fs8', 168)" class="f">CreateAsyncChannel</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs31', 169)" onmouseover="showTip(event, 'fs31', 169)" class="t">int</span><span class="o">&gt;</span>()

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs55', 170)" onmouseover="showTip(event, 'fs55', 170)" class="i">timeout</span> <span class="o">=</span> <span class="n">5000</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs56', 171)" onmouseover="showTip(event, 'fs56', 171)" class="f">printer</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 172)" onmouseover="showTip(event, 'fs18', 172)" class="i">async</span> {
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs57', 173)" onmouseover="showTip(event, 'fs57', 173)" class="i">resultOpt</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs52', 174)" onmouseover="showTip(event, 'fs52', 174)" class="f">dataReciever</span> <span onmouseout="hideTip(event, 'fs55', 175)" onmouseover="showTip(event, 'fs55', 175)" class="i">timeout</span>
    <span class="k">return!</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs57', 176)" onmouseover="showTip(event, 'fs57', 176)" class="i">resultOpt</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs20', 177)" onmouseover="showTip(event, 'fs20', 177)" class="p">None</span> <span class="k">-&gt;</span> <span class="c">//timeout</span>
            <span onmouseout="hideTip(event, 'fs58', 178)" onmouseover="showTip(event, 'fs58', 178)" class="f">printfn</span> <span class="s">&quot;So much free time - maybe other side has some problems&quot;</span>
            <span onmouseout="hideTip(event, 'fs56', 179)" onmouseover="showTip(event, 'fs56', 179)" class="f">printer</span>() <span class="c">//but continue </span>
        | <span onmouseout="hideTip(event, 'fs14', 180)" onmouseover="showTip(event, 'fs14', 180)" class="p">Some</span> (<span onmouseout="hideTip(event, 'fs59', 181)" onmouseover="showTip(event, 'fs59', 181)" class="i">result</span>, <span class="k">false</span>) <span class="k">-&gt;</span> <span class="c">//intermediate result - channel still open </span>
            <span onmouseout="hideTip(event, 'fs58', 182)" onmouseover="showTip(event, 'fs58', 182)" class="f">printfn</span> <span class="s">&quot;Retrieved message: </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs59', 183)" onmouseover="showTip(event, 'fs59', 183)" class="i">result</span>
            <span onmouseout="hideTip(event, 'fs56', 184)" onmouseover="showTip(event, 'fs56', 184)" class="f">printer</span>()
        | <span onmouseout="hideTip(event, 'fs14', 185)" onmouseover="showTip(event, 'fs14', 185)" class="p">Some</span> (<span onmouseout="hideTip(event, 'fs59', 186)" onmouseover="showTip(event, 'fs59', 186)" class="i">result</span>, _) <span class="k">-&gt;</span> <span class="c">//channel is closed by this message</span>
            <span onmouseout="hideTip(event, 'fs58', 187)" onmouseover="showTip(event, 'fs58', 187)" class="f">printfn</span> <span class="s">&quot;Last message: </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs59', 188)" onmouseover="showTip(event, 'fs59', 188)" class="i">result</span>
            <span onmouseout="hideTip(event, 'fs18', 189)" onmouseover="showTip(event, 'fs18', 189)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 190)" onmouseover="showTip(event, 'fs19', 190)" class="f">Return</span> ()
    }

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 191)" onmouseover="showTip(event, 'fs60', 191)" class="i">cancelation</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs61', 192)" onmouseover="showTip(event, 'fs61', 192)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 193)" onmouseover="showTip(event, 'fs62', 193)" class="i">Threading</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 194)" onmouseover="showTip(event, 'fs63', 194)" class="t">CancellationTokenSource</span>()
<span onmouseout="hideTip(event, 'fs54', 195)" onmouseover="showTip(event, 'fs54', 195)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 196)" onmouseover="showTip(event, 'fs64', 196)" class="f">Start</span>(<span onmouseout="hideTip(event, 'fs56', 197)" onmouseover="showTip(event, 'fs56', 197)" class="f">printer</span>(), <span onmouseout="hideTip(event, 'fs60', 198)" onmouseover="showTip(event, 'fs60', 198)" class="i">cancelation</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 199)" onmouseover="showTip(event, 'fs65', 199)" class="i">Token</span>)

<span onmouseout="hideTip(event, 'fs18', 200)" onmouseover="showTip(event, 'fs18', 200)" class="i">async</span> {
    <span onmouseout="hideTip(event, 'fs53', 201)" onmouseover="showTip(event, 'fs53', 201)" class="f">dataSender</span> <span class="k">false</span> <span class="n">1</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs54', 202)" onmouseover="showTip(event, 'fs54', 202)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 203)" onmouseover="showTip(event, 'fs45', 203)" class="f">Sleep</span> <span class="n">1000</span>
    <span onmouseout="hideTip(event, 'fs53', 204)" onmouseover="showTip(event, 'fs53', 204)" class="f">dataSender</span> <span class="k">false</span> <span class="n">2</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs54', 205)" onmouseover="showTip(event, 'fs54', 205)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 206)" onmouseover="showTip(event, 'fs45', 206)" class="f">Sleep</span> <span class="n">6000</span>
    <span onmouseout="hideTip(event, 'fs53', 207)" onmouseover="showTip(event, 'fs53', 207)" class="f">dataSender</span> <span class="k">false</span> <span class="n">3</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs54', 208)" onmouseover="showTip(event, 'fs54', 208)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 209)" onmouseover="showTip(event, 'fs45', 209)" class="f">Sleep</span> <span class="n">2000</span>
    <span onmouseout="hideTip(event, 'fs53', 210)" onmouseover="showTip(event, 'fs53', 210)" class="f">dataSender</span> <span class="k">true</span> <span class="n">4</span>
} <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs54', 211)" onmouseover="showTip(event, 'fs54', 211)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 212)" onmouseover="showTip(event, 'fs64', 212)" class="f">Start</span>

<span onmouseout="hideTip(event, 'fs60', 213)" onmouseover="showTip(event, 'fs60', 213)" class="i">cancelation</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 214)" onmouseover="showTip(event, 'fs66', 214)" class="f">Cancel</span>()

<span class="c">//example of ParallelGrouped</span>
<span onmouseout="hideTip(event, 'fs34', 215)" onmouseover="showTip(event, 'fs34', 215)" class="i">seq</span> {
    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs67', 216)" onmouseover="showTip(event, 'fs67', 216)" class="i">i</span> <span class="k">in</span> <span class="n">1..</span><span class="n">100</span> <span class="k">do</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs18', 217)" onmouseover="showTip(event, 'fs18', 217)" class="i">async</span> { <span onmouseout="hideTip(event, 'fs58', 218)" onmouseover="showTip(event, 'fs58', 218)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs67', 219)" onmouseover="showTip(event, 'fs67', 219)" class="i">i</span> }
} <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs54', 220)" onmouseover="showTip(event, 'fs54', 220)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 221)" onmouseover="showTip(event, 'fs29', 221)" class="f">ParallelGrouped</span> <span class="n">10000</span> <span class="n">10</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs54', 222)" onmouseover="showTip(event, 'fs54', 222)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 223)" onmouseover="showTip(event, 'fs64', 223)" class="f">Start</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />type Async<br />static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member CancelDefaultToken : unit -&gt; unit<br />static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromContinuations : callback:((&#39;T -&gt; unit) * (exn -&gt; unit) * (OperationCanceledException -&gt; unit) -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;<br />static member OnCancel : interruption:(unit -&gt; unit) -&gt; Async&lt;IDisposable&gt;<br />static member Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;<br />static member RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T<br />static member Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;<br />static member Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;<br />static member StartChild : computation:Async&lt;&#39;T&gt; * ?millisecondsTimeout:int -&gt; Async&lt;Async&lt;&#39;T&gt;&gt;<br />static member StartChildAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions -&gt; Async&lt;Task&lt;&#39;T&gt;&gt;<br />static member StartImmediate : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartWithContinuations : computation:Async&lt;&#39;T&gt; * continuation:(&#39;T -&gt; unit) * exceptionContinuation:(exn -&gt; unit) * cancellationContinuation:(OperationCanceledException -&gt; unit) * ?cancellationToken:CancellationToken -&gt; unit<br />static member SwitchToContext : syncContext:SynchronizationContext -&gt; Async&lt;unit&gt;<br />static member SwitchToNewThread : unit -&gt; Async&lt;unit&gt;<br />static member SwitchToThreadPool : unit -&gt; Async&lt;unit&gt;<br />static member TryCancelled : computation:Async&lt;&#39;T&gt; * compensation:(OperationCanceledException -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member CancellationToken : Async&lt;CancellationToken&gt;<br />static member DefaultCancellationToken : CancellationToken<br /><br />Full name: Microsoft.FSharp.Control.Async<br /><br />--------------------<br />type Async&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Async&lt;_&gt;</div>
<div class="tip" id="fs2">type private msg&lt;&#39;a&gt; =<br />&#160;&#160;| Result of &#39;a<br />&#160;&#160;| IntermediateResult of &#39;a<br />&#160;&#160;| GetResult of AsyncReplyChannel&lt;&#39;a * bool&gt;<br /><br />Full name: Script.Async.msg&lt;_&gt;</div>
<div class="tip" id="fs3">union case msg.Result: &#39;a -&gt; msg&lt;&#39;a&gt;</div>
<div class="tip" id="fs4">union case msg.IntermediateResult: &#39;a -&gt; msg&lt;&#39;a&gt;</div>
<div class="tip" id="fs5">union case msg.GetResult: AsyncReplyChannel&lt;&#39;a * bool&gt; -&gt; msg&lt;&#39;a&gt;</div>
<div class="tip" id="fs6">type AsyncReplyChannel&lt;&#39;Reply&gt;<br />member Reply : value:&#39;Reply -&gt; unit<br /><br />Full name: Microsoft.FSharp.Control.AsyncReplyChannel&lt;_&gt;</div>
<div class="tip" id="fs7">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs8">val CreateAsyncChannel : unit -&gt; (int -&gt; Async&lt;(&#39;a * bool) option&gt;) * (bool -&gt; &#39;a -&gt; unit)<br /><br />Full name: Script.Async.CreateAsyncChannel</div>
<div class="tip" id="fs9">val inbox : MailboxProcessor&lt;msg&lt;&#39;a&gt;&gt;</div>
<div class="tip" id="fs10">Multiple items<br />type MailboxProcessor&lt;&#39;Msg&gt; =<br />&#160;&#160;interface IDisposable<br />&#160;&#160;new : body:(MailboxProcessor&lt;&#39;Msg&gt; -&gt; Async&lt;unit&gt;) * ?cancellationToken:CancellationToken -&gt; MailboxProcessor&lt;&#39;Msg&gt;<br />&#160;&#160;member Post : message:&#39;Msg -&gt; unit<br />&#160;&#160;member PostAndAsyncReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; Async&lt;&#39;Reply&gt;<br />&#160;&#160;member PostAndReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; &#39;Reply<br />&#160;&#160;member PostAndTryAsyncReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; Async&lt;&#39;Reply option&gt;<br />&#160;&#160;member Receive : ?timeout:int -&gt; Async&lt;&#39;Msg&gt;<br />&#160;&#160;member Scan : scanner:(&#39;Msg -&gt; Async&lt;&#39;T&gt; option) * ?timeout:int -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;member Start : unit -&gt; unit<br />&#160;&#160;member TryPostAndReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; &#39;Reply option<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Control.MailboxProcessor&lt;_&gt;<br /><br />--------------------<br />new : body:(MailboxProcessor&lt;&#39;Msg&gt; -&gt; Async&lt;unit&gt;) * ?cancellationToken:System.Threading.CancellationToken -&gt; MailboxProcessor&lt;&#39;Msg&gt;</div>
<div class="tip" id="fs11">val waitResponse : (AsyncReplyChannel&lt;&#39;a * bool&gt; -&gt; Async&lt;unit&gt;)</div>
<div class="tip" id="fs12">val repl : AsyncReplyChannel&lt;&#39;a * bool&gt;</div>
<div class="tip" id="fs13">member MailboxProcessor.Scan : scanner:(&#39;Msg -&gt; Async&lt;&#39;T&gt; option) * ?timeout:int -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs14">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs15">val res : &#39;a</div>
<div class="tip" id="fs16">member AsyncReplyChannel.Reply : value:&#39;Reply -&gt; unit</div>
<div class="tip" id="fs17">val waitRepl : (unit -&gt; Async&lt;unit&gt;)</div>
<div class="tip" id="fs18">val async : AsyncBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.async</div>
<div class="tip" id="fs19">member AsyncBuilder.Return : value:&#39;T -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs20">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs21">member MailboxProcessor.Start : unit -&gt; unit</div>
<div class="tip" id="fs22">val resultWaiter : (int -&gt; Async&lt;(&#39;a * bool) option&gt;)</div>
<div class="tip" id="fs23">val timeout : int</div>
<div class="tip" id="fs24">member MailboxProcessor.PostAndTryAsyncReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; Async&lt;&#39;Reply option&gt;</div>
<div class="tip" id="fs25">val replChannel : AsyncReplyChannel&lt;&#39;a * bool&gt;</div>
<div class="tip" id="fs26">val postResult : (bool -&gt; &#39;a -&gt; unit)</div>
<div class="tip" id="fs27">val closeChannel : bool</div>
<div class="tip" id="fs28">member MailboxProcessor.Post : message:&#39;Msg -&gt; unit</div>
<div class="tip" id="fs29">val ParallelGrouped : delay:int -&gt; n:int -&gt; asyncs:seq&lt;Async&lt;&#39;a&gt;&gt; -&gt; Async&lt;unit&gt;<br /><br />Full name: Script.Async.ParallelGrouped</div>
<div class="tip" id="fs30">val delay : int</div>
<div class="tip" id="fs31">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs32">val n : int</div>
<div class="tip" id="fs33">val asyncs : seq&lt;Async&lt;&#39;a&gt;&gt;</div>
<div class="tip" id="fs34">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = System.Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs35">val max : e1:&#39;T -&gt; e2:&#39;T -&gt; &#39;T (requires comparison)<br /><br />Full name: Microsoft.FSharp.Core.Operators.max</div>
<div class="tip" id="fs36">val asyncAcc : Async&lt;unit&gt;</div>
<div class="tip" id="fs37">val lastGroup : Async&lt;&#39;a&gt; list</div>
<div class="tip" id="fs38">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs39">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.Seq.fold</div>
<div class="tip" id="fs40">val group : Async&lt;&#39;a&gt; list</div>
<div class="tip" id="fs41">val op : Async&lt;&#39;a&gt;</div>
<div class="tip" id="fs42">property List.Length: int</div>
<div class="tip" id="fs43">static member Async.Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;</div>
<div class="tip" id="fs44">static member Async.Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs45">static member Async.Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs46">val ParallelGroupedWithResults : delay:int -&gt; n:int -&gt; asyncs:seq&lt;Async&lt;&#39;a&gt;&gt; -&gt; Async&lt;&#39;a []&gt;<br /><br />Full name: Script.Async.ParallelGroupedWithResults</div>
<div class="tip" id="fs47">val asyncAcc : Async&lt;&#39;a []&gt;</div>
<div class="tip" id="fs48">val res1 : &#39;a []</div>
<div class="tip" id="fs49">val res2 : &#39;a []</div>
<div class="tip" id="fs50">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs51">val empty&lt;&#39;T&gt; : &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.empty</div>
<div class="tip" id="fs52">val dataReciever : (int -&gt; Async&lt;(int * bool) option&gt;)<br /><br />Full name: Script.dataReciever</div>
<div class="tip" id="fs53">val dataSender : (bool -&gt; int -&gt; unit)<br /><br />Full name: Script.dataSender</div>
<div class="tip" id="fs54">Multiple items<br />module Async<br /><br />from Script<br /><br />--------------------<br />type Async<br />static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member CancelDefaultToken : unit -&gt; unit<br />static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromContinuations : callback:((&#39;T -&gt; unit) * (exn -&gt; unit) * (OperationCanceledException -&gt; unit) -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;<br />static member OnCancel : interruption:(unit -&gt; unit) -&gt; Async&lt;IDisposable&gt;<br />static member Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;<br />static member RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T<br />static member Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;<br />static member Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;<br />static member StartChild : computation:Async&lt;&#39;T&gt; * ?millisecondsTimeout:int -&gt; Async&lt;Async&lt;&#39;T&gt;&gt;<br />static member StartChildAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions -&gt; Async&lt;Task&lt;&#39;T&gt;&gt;<br />static member StartImmediate : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartWithContinuations : computation:Async&lt;&#39;T&gt; * continuation:(&#39;T -&gt; unit) * exceptionContinuation:(exn -&gt; unit) * cancellationContinuation:(OperationCanceledException -&gt; unit) * ?cancellationToken:CancellationToken -&gt; unit<br />static member SwitchToContext : syncContext:SynchronizationContext -&gt; Async&lt;unit&gt;<br />static member SwitchToNewThread : unit -&gt; Async&lt;unit&gt;<br />static member SwitchToThreadPool : unit -&gt; Async&lt;unit&gt;<br />static member TryCancelled : computation:Async&lt;&#39;T&gt; * compensation:(OperationCanceledException -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member CancellationToken : Async&lt;CancellationToken&gt;<br />static member DefaultCancellationToken : CancellationToken<br /><br />Full name: Microsoft.FSharp.Control.Async<br /><br />--------------------<br />type Async&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Async&lt;_&gt;</div>
<div class="tip" id="fs55">val timeout : int<br /><br />Full name: Script.timeout</div>
<div class="tip" id="fs56">val printer : unit -&gt; Async&lt;unit&gt;<br /><br />Full name: Script.printer</div>
<div class="tip" id="fs57">val resultOpt : (int * bool) option</div>
<div class="tip" id="fs58">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs59">val result : int</div>
<div class="tip" id="fs60">val cancelation : System.Threading.CancellationTokenSource<br /><br />Full name: Script.cancelation</div>
<div class="tip" id="fs61">namespace System</div>
<div class="tip" id="fs62">namespace System.Threading</div>
<div class="tip" id="fs63">Multiple items<br />type CancellationTokenSource =<br />&#160;&#160;new : unit -&gt; CancellationTokenSource<br />&#160;&#160;member Cancel : unit -&gt; unit + 1 overload<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member IsCancellationRequested : bool<br />&#160;&#160;member Token : CancellationToken<br />&#160;&#160;static member CreateLinkedTokenSource : [&lt;ParamArray&gt;] tokens:CancellationToken[] -&gt; CancellationTokenSource + 1 overload<br /><br />Full name: System.Threading.CancellationTokenSource<br /><br />--------------------<br />System.Threading.CancellationTokenSource() : unit</div>
<div class="tip" id="fs64">static member Async.Start : computation:Async&lt;unit&gt; * ?cancellationToken:System.Threading.CancellationToken -&gt; unit</div>
<div class="tip" id="fs65">property System.Threading.CancellationTokenSource.Token: System.Threading.CancellationToken</div>
<div class="tip" id="fs66">System.Threading.CancellationTokenSource.Cancel() : unit<br />System.Threading.CancellationTokenSource.Cancel(throwOnFirstException: bool) : unit</div>
<div class="tip" id="fs67">val i : int</div>

