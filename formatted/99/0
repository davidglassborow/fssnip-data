<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">IO</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">Security</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">Cryptography</span>

<span class="c">// synchronous file hashing</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="f">hashFile</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">f</span> <span class="o">=</span> 
    <span class="k">use</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">fs</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="t">FileStream</span>(<span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="i">f</span>, <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="t">FileMode</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="i">Open</span>)
    <span class="k">use</span> <span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="i">hashFunction</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="t">SHA512Managed</span>()
    <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="i">hashFunction</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="f">ComputeHash</span> <span onmouseout="hideTip(event, 'fs7', 18)" onmouseover="showTip(event, 'fs7', 18)" class="i">fs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="t">Convert</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="f">ToBase64String</span>

<span class="c">// async stream hashing</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 21)" onmouseover="showTip(event, 'fs16', 21)" class="f">hashAsync</span> <span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="i">bufferSize</span> (<span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="i">hashFunction</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs19', 24)" onmouseover="showTip(event, 'fs19', 24)" class="t">HashAlgorithm</span>) (<span onmouseout="hideTip(event, 'fs20', 25)" onmouseover="showTip(event, 'fs20', 25)" class="i">stream</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs21', 26)" onmouseover="showTip(event, 'fs21', 26)" class="t">Stream</span>) <span class="o">=</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs22', 27)" onmouseover="showTip(event, 'fs22', 27)" class="f">hashBlock</span> <span onmouseout="hideTip(event, 'fs23', 28)" onmouseover="showTip(event, 'fs23', 28)" class="i">currentBlock</span> <span onmouseout="hideTip(event, 'fs24', 29)" onmouseover="showTip(event, 'fs24', 29)" class="i">count</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 30)" onmouseover="showTip(event, 'fs25', 30)" class="i">async</span> {
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 31)" onmouseover="showTip(event, 'fs26', 31)" class="i">buffer</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 32)" onmouseover="showTip(event, 'fs27', 32)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 33)" onmouseover="showTip(event, 'fs28', 33)" class="f">zeroCreate</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs29', 34)" onmouseover="showTip(event, 'fs29', 34)" class="t">byte</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs17', 35)" onmouseover="showTip(event, 'fs17', 35)" class="i">bufferSize</span>
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs30', 36)" onmouseover="showTip(event, 'fs30', 36)" class="i">readCount</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 37)" onmouseover="showTip(event, 'fs20', 37)" class="i">stream</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 38)" onmouseover="showTip(event, 'fs31', 38)" class="f">AsyncRead</span> <span onmouseout="hideTip(event, 'fs26', 39)" onmouseover="showTip(event, 'fs26', 39)" class="i">buffer</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs30', 40)" onmouseover="showTip(event, 'fs30', 40)" class="i">readCount</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs18', 41)" onmouseover="showTip(event, 'fs18', 41)" class="i">hashFunction</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 42)" onmouseover="showTip(event, 'fs32', 42)" class="f">TransformFinalBlock</span>(<span onmouseout="hideTip(event, 'fs23', 43)" onmouseover="showTip(event, 'fs23', 43)" class="i">currentBlock</span>, <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs24', 44)" onmouseover="showTip(event, 'fs24', 44)" class="i">count</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs33', 45)" onmouseover="showTip(event, 'fs33', 45)" class="f">ignore</span>
        <span class="k">else</span> 
            <span onmouseout="hideTip(event, 'fs18', 46)" onmouseover="showTip(event, 'fs18', 46)" class="i">hashFunction</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 47)" onmouseover="showTip(event, 'fs34', 47)" class="f">TransformBlock</span>(<span onmouseout="hideTip(event, 'fs23', 48)" onmouseover="showTip(event, 'fs23', 48)" class="i">currentBlock</span>, <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs24', 49)" onmouseover="showTip(event, 'fs24', 49)" class="i">count</span>, <span onmouseout="hideTip(event, 'fs23', 50)" onmouseover="showTip(event, 'fs23', 50)" class="i">currentBlock</span>, <span class="n">0</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs33', 51)" onmouseover="showTip(event, 'fs33', 51)" class="f">ignore</span>
            <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs22', 52)" onmouseover="showTip(event, 'fs22', 52)" class="f">hashBlock</span> <span onmouseout="hideTip(event, 'fs26', 53)" onmouseover="showTip(event, 'fs26', 53)" class="i">buffer</span> <span onmouseout="hideTip(event, 'fs30', 54)" onmouseover="showTip(event, 'fs30', 54)" class="i">readCount</span>
    }
    <span onmouseout="hideTip(event, 'fs25', 55)" onmouseover="showTip(event, 'fs25', 55)" class="i">async</span> {
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 56)" onmouseover="showTip(event, 'fs26', 56)" class="i">buffer</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 57)" onmouseover="showTip(event, 'fs27', 57)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 58)" onmouseover="showTip(event, 'fs28', 58)" class="f">zeroCreate</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs29', 59)" onmouseover="showTip(event, 'fs29', 59)" class="t">byte</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs17', 60)" onmouseover="showTip(event, 'fs17', 60)" class="i">bufferSize</span>
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs30', 61)" onmouseover="showTip(event, 'fs30', 61)" class="i">readCount</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 62)" onmouseover="showTip(event, 'fs20', 62)" class="i">stream</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 63)" onmouseover="showTip(event, 'fs31', 63)" class="f">AsyncRead</span> <span onmouseout="hideTip(event, 'fs26', 64)" onmouseover="showTip(event, 'fs26', 64)" class="i">buffer</span>
        <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs22', 65)" onmouseover="showTip(event, 'fs22', 65)" class="f">hashBlock</span> <span onmouseout="hideTip(event, 'fs26', 66)" onmouseover="showTip(event, 'fs26', 66)" class="i">buffer</span> <span onmouseout="hideTip(event, 'fs30', 67)" onmouseover="showTip(event, 'fs30', 67)" class="i">readCount</span>
        <span class="k">return</span> <span onmouseout="hideTip(event, 'fs18', 68)" onmouseover="showTip(event, 'fs18', 68)" class="i">hashFunction</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 69)" onmouseover="showTip(event, 'fs35', 69)" class="i">Hash</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs14', 70)" onmouseover="showTip(event, 'fs14', 70)" class="t">Convert</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 71)" onmouseover="showTip(event, 'fs15', 71)" class="f">ToBase64String</span>
    }

<span class="c">// async file hashing</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 72)" onmouseover="showTip(event, 'fs36', 72)" class="f">hashFileAsync</span> <span onmouseout="hideTip(event, 'fs6', 73)" onmouseover="showTip(event, 'fs6', 73)" class="i">f</span> <span class="o">=</span>    
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 74)" onmouseover="showTip(event, 'fs17', 74)" class="i">bufferSize</span> <span class="o">=</span> <span class="n">32768</span>
    <span onmouseout="hideTip(event, 'fs25', 75)" onmouseover="showTip(event, 'fs25', 75)" class="i">async</span> {
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs7', 76)" onmouseover="showTip(event, 'fs7', 76)" class="i">fs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs37', 77)" onmouseover="showTip(event, 'fs37', 77)" class="t">File</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 78)" onmouseover="showTip(event, 'fs38', 78)" class="f">OpenRead</span> <span onmouseout="hideTip(event, 'fs6', 79)" onmouseover="showTip(event, 'fs6', 79)" class="i">f</span>
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs11', 80)" onmouseover="showTip(event, 'fs11', 80)" class="i">hashFunction</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs12', 81)" onmouseover="showTip(event, 'fs12', 81)" class="t">SHA512Managed</span>()
        <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs16', 82)" onmouseover="showTip(event, 'fs16', 82)" class="f">hashAsync</span> <span onmouseout="hideTip(event, 'fs17', 83)" onmouseover="showTip(event, 'fs17', 83)" class="i">bufferSize</span> <span onmouseout="hideTip(event, 'fs11', 84)" onmouseover="showTip(event, 'fs11', 84)" class="i">hashFunction</span> <span onmouseout="hideTip(event, 'fs7', 85)" onmouseover="showTip(event, 'fs7', 85)" class="i">fs</span>
    }
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.IO</div>
<div class="tip" id="fs3">namespace System.Security</div>
<div class="tip" id="fs4">namespace System.Security.Cryptography</div>
<div class="tip" id="fs5">val hashFile : f:string -&gt; string<br /><br />Full name: Script.hashFile</div>
<div class="tip" id="fs6">val f : string</div>
<div class="tip" id="fs7">val fs : FileStream</div>
<div class="tip" id="fs8">Multiple items<br />type FileStream =<br />&#160;&#160;inherit Stream<br />&#160;&#160;new : path:string * mode:FileMode -&gt; FileStream + 14 overloads<br />&#160;&#160;member BeginRead : array:byte[] * offset:int * numBytes:int * userCallback:AsyncCallback * stateObject:obj -&gt; IAsyncResult<br />&#160;&#160;member BeginWrite : array:byte[] * offset:int * numBytes:int * userCallback:AsyncCallback * stateObject:obj -&gt; IAsyncResult<br />&#160;&#160;member CanRead : bool<br />&#160;&#160;member CanSeek : bool<br />&#160;&#160;member CanWrite : bool<br />&#160;&#160;member EndRead : asyncResult:IAsyncResult -&gt; int<br />&#160;&#160;member EndWrite : asyncResult:IAsyncResult -&gt; unit<br />&#160;&#160;member Flush : unit -&gt; unit + 1 overload<br />&#160;&#160;member GetAccessControl : unit -&gt; FileSecurity<br />&#160;&#160;...<br /><br />Full name: System.IO.FileStream<br /><br />--------------------<br />FileStream(path: string, mode: FileMode) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />FileStream(handle: Win32.SafeHandles.SafeFileHandle, access: FileAccess) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />FileStream(path: string, mode: FileMode, access: FileAccess) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />FileStream(handle: Win32.SafeHandles.SafeFileHandle, access: FileAccess, bufferSize: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />FileStream(path: string, mode: FileMode, access: FileAccess, share: FileShare) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />FileStream(handle: Win32.SafeHandles.SafeFileHandle, access: FileAccess, bufferSize: int, isAsync: bool) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />FileStream(path: string, mode: FileMode, access: FileAccess, share: FileShare, bufferSize: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />FileStream(path: string, mode: FileMode, access: FileAccess, share: FileShare, bufferSize: int, options: FileOptions) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />FileStream(path: string, mode: FileMode, access: FileAccess, share: FileShare, bufferSize: int, useAsync: bool) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />FileStream(path: string, mode: FileMode, rights: Security.AccessControl.FileSystemRights, share: FileShare, bufferSize: int, options: FileOptions) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs9">type FileMode =<br />&#160;&#160;| CreateNew = 1<br />&#160;&#160;| Create = 2<br />&#160;&#160;| Open = 3<br />&#160;&#160;| OpenOrCreate = 4<br />&#160;&#160;| Truncate = 5<br />&#160;&#160;| Append = 6<br /><br />Full name: System.IO.FileMode</div>
<div class="tip" id="fs10">field FileMode.Open = 3</div>
<div class="tip" id="fs11">val hashFunction : SHA512Managed</div>
<div class="tip" id="fs12">Multiple items<br />type SHA512Managed =<br />&#160;&#160;inherit SHA512<br />&#160;&#160;new : unit -&gt; SHA512Managed<br />&#160;&#160;member Initialize : unit -&gt; unit<br /><br />Full name: System.Security.Cryptography.SHA512Managed<br /><br />--------------------<br />SHA512Managed() : unit</div>
<div class="tip" id="fs13">HashAlgorithm.ComputeHash(buffer: byte []) : byte []<br />HashAlgorithm.ComputeHash(inputStream: Stream) : byte []<br />HashAlgorithm.ComputeHash(buffer: byte [], offset: int, count: int) : byte []</div>
<div class="tip" id="fs14">type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>
<div class="tip" id="fs15">Convert.ToBase64String(inArray: byte []) : string<br />Convert.ToBase64String(inArray: byte [], options: Base64FormattingOptions) : string<br />Convert.ToBase64String(inArray: byte [], offset: int, length: int) : string<br />Convert.ToBase64String(inArray: byte [], offset: int, length: int, options: Base64FormattingOptions) : string</div>
<div class="tip" id="fs16">val hashAsync : bufferSize:int -&gt; hashFunction:HashAlgorithm -&gt; stream:Stream -&gt; Async&lt;string&gt;<br /><br />Full name: Script.hashAsync</div>
<div class="tip" id="fs17">val bufferSize : int</div>
<div class="tip" id="fs18">val hashFunction : HashAlgorithm</div>
<div class="tip" id="fs19">type HashAlgorithm =<br />&#160;&#160;member CanReuseTransform : bool<br />&#160;&#160;member CanTransformMultipleBlocks : bool<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member ComputeHash : inputStream:Stream -&gt; byte[] + 2 overloads<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member Hash : byte[]<br />&#160;&#160;member HashSize : int<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member InputBlockSize : int<br />&#160;&#160;member OutputBlockSize : int<br />&#160;&#160;...<br /><br />Full name: System.Security.Cryptography.HashAlgorithm</div>
<div class="tip" id="fs20">val stream : Stream</div>
<div class="tip" id="fs21">type Stream =<br />&#160;&#160;inherit MarshalByRefObject<br />&#160;&#160;member BeginRead : buffer:byte[] * offset:int * count:int * callback:AsyncCallback * state:obj -&gt; IAsyncResult<br />&#160;&#160;member BeginWrite : buffer:byte[] * offset:int * count:int * callback:AsyncCallback * state:obj -&gt; IAsyncResult<br />&#160;&#160;member CanRead : bool<br />&#160;&#160;member CanSeek : bool<br />&#160;&#160;member CanTimeout : bool<br />&#160;&#160;member CanWrite : bool<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member CopyTo : destination:Stream -&gt; unit + 1 overload<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member EndRead : asyncResult:IAsyncResult -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.IO.Stream</div>
<div class="tip" id="fs22">val hashBlock : (byte [] -&gt; int -&gt; Async&lt;unit&gt;)</div>
<div class="tip" id="fs23">val currentBlock : byte []</div>
<div class="tip" id="fs24">val count : int</div>
<div class="tip" id="fs25">val async : AsyncBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.async</div>
<div class="tip" id="fs26">val buffer : byte []</div>
<div class="tip" id="fs27">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs28">val zeroCreate : count:int -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.zeroCreate</div>
<div class="tip" id="fs29">Multiple items<br />val byte : value:&#39;T -&gt; byte (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.byte<br /><br />--------------------<br />type byte = Byte<br /><br />Full name: Microsoft.FSharp.Core.byte</div>
<div class="tip" id="fs30">val readCount : int</div>
<div class="tip" id="fs31">member Stream.AsyncRead : count:int -&gt; Async&lt;byte []&gt;<br />member Stream.AsyncRead : buffer:byte [] * ?offset:int * ?count:int -&gt; Async&lt;int&gt;</div>
<div class="tip" id="fs32">HashAlgorithm.TransformFinalBlock(inputBuffer: byte [], inputOffset: int, inputCount: int) : byte []</div>
<div class="tip" id="fs33">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>
<div class="tip" id="fs34">HashAlgorithm.TransformBlock(inputBuffer: byte [], inputOffset: int, inputCount: int, outputBuffer: byte [], outputOffset: int) : int</div>
<div class="tip" id="fs35">property HashAlgorithm.Hash: byte []</div>
<div class="tip" id="fs36">val hashFileAsync : f:string -&gt; Async&lt;string&gt;<br /><br />Full name: Script.hashFileAsync</div>
<div class="tip" id="fs37">type File =<br />&#160;&#160;static member AppendAllLines : path:string * contents:IEnumerable&lt;string&gt; -&gt; unit + 1 overload<br />&#160;&#160;static member AppendAllText : path:string * contents:string -&gt; unit + 1 overload<br />&#160;&#160;static member AppendText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Copy : sourceFileName:string * destFileName:string -&gt; unit + 1 overload<br />&#160;&#160;static member Create : path:string -&gt; FileStream + 3 overloads<br />&#160;&#160;static member CreateText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Decrypt : path:string -&gt; unit<br />&#160;&#160;static member Delete : path:string -&gt; unit<br />&#160;&#160;static member Encrypt : path:string -&gt; unit<br />&#160;&#160;static member Exists : path:string -&gt; bool<br />&#160;&#160;...<br /><br />Full name: System.IO.File</div>
<div class="tip" id="fs38">File.OpenRead(path: string) : FileStream</div>

