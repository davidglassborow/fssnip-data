<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">(* Sample log:</span>

<span class="c">2013-10-26 17:11:49$$INFO$$some text$$more text$$etc$$</span>
<span class="c">2013-10-26 17:12:40$$INFO$$some text$$more text$$etc$$</span>
<span class="c">2013-10-26 17:20:39$$INFO$$some text$$more text$$etc$$</span>
<span class="c">Some-unimportant-info...</span>
<span class="c">2013-10-26 17:20:50$$INFO$$some text$$more text$$etc$$</span>
<span class="c">2013-10-27 14:21:24$$ERROR$$some text$$more text$$Operation failed: $$</span>
<span class="c">System.InvalidOperationException: My error</span>
<span class="c">   at MyCompany.MyClass.Method(String id)</span>
<span class="c">   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc&amp; rpc)</span>
<span class="c">   at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)</span>
<span class="c">2013-10-27 14:21:47$$INFO$$some text$$more text$$etc$$</span>
<span class="c">2013-10-27 14:22:20$$ERROR$$some text$$more text$$Operation failed: $$</span>
<span class="c">System.InvalidOperationException: My error</span>
<span class="c">   at MyCompany.MyClass.Method(String id)</span>
<span class="c">   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc&amp; rpc)</span>
<span class="c">   at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)</span>
<span class="c">2013-10-27 14:22:45$$ERROR$$some text$$more text$$Timeout expired: $$</span>
<span class="c">System.Data.SqlClient.SqlException: Timeout expired.  The timeout period...</span>
<span class="c">   --- End of inner exception stack trace ---</span>
<span class="c">   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action wrapCloseInAction)</span>
<span class="c">   at MyCompany.MyClass2.OtherMethod(String param)</span>

<span class="c">*)</span>

<span class="prep">#if</span> <span class="i">INTERACTIVE</span>
<span class="prep">#else</span>
<span class="k">module</span> <span class="i">LogReader</span>
<span class="prep">#endif</span>
<span class="c">//Log file parser for log4Net files.</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">IO</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="t">CollectData</span> <span class="o">=</span>
| <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="p">NotIntresting</span>
| <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="p">SeekStackTraceLine</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">string</span>
| <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="p">SeekCompanyStackTraceLine</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="t">string</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="t">string</span>

<span class="c">///Log4Net item separator</span>
[&lt;<span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="t">Literal</span>&gt;] 
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="i">separator</span> <span class="o">=</span> <span class="s">&quot;$$&quot;</span>

<span class="c">///Beginig for a normal line. e.g. date like 2013-10-27</span>
[&lt;<span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="t">Literal</span>&gt;] 
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="i">normalLineBegin</span> <span class="o">=</span> <span class="s">&quot;201&quot;</span>

<span class="c">///Company namespace in the stacktrace</span>
[&lt;<span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="t">Literal</span>&gt;] 
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="i">companyStackTraceSign</span> <span class="o">=</span> <span class="s">&quot;MyCompany&quot;</span>

<span class="c">///Detect error line in the log: contains this string</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="i">errorsign</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 18)" onmouseover="showTip(event, 'fs9', 18)" class="i">separator</span> <span class="o">+</span> <span class="s">&quot;ERROR&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs9', 19)" onmouseover="showTip(event, 'fs9', 19)" class="i">separator</span>

<span class="c">///This will parse the lines to resultset of errors</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="f">collectErrorInfo</span> <span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="i">lines</span> <span class="o">=</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="f">readLines</span> (<span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="i">myLines</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 24)" onmouseover="showTip(event, 'fs6', 24)" class="t">string</span> <span onmouseout="hideTip(event, 'fs17', 25)" onmouseover="showTip(event, 'fs17', 25)" class="t">list</span>) (<span onmouseout="hideTip(event, 'fs18', 26)" onmouseover="showTip(event, 'fs18', 26)" class="i">mode</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs3', 27)" onmouseover="showTip(event, 'fs3', 27)" class="t">CollectData</span>) <span onmouseout="hideTip(event, 'fs19', 28)" onmouseover="showTip(event, 'fs19', 28)" class="i">resultdata</span> <span class="o">=</span>

        <span class="c">// Add current findings to collection, just in case</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 29)" onmouseover="showTip(event, 'fs20', 29)" class="i">collectedResult</span> <span class="o">=</span> 
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="i">mode</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs4', 31)" onmouseover="showTip(event, 'fs4', 31)" class="p">NotIntresting</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 32)" onmouseover="showTip(event, 'fs19', 32)" class="i">resultdata</span> 
            | <span onmouseout="hideTip(event, 'fs5', 33)" onmouseover="showTip(event, 'fs5', 33)" class="p">SeekStackTraceLine</span>(<span onmouseout="hideTip(event, 'fs21', 34)" onmouseover="showTip(event, 'fs21', 34)" class="i">a</span>) <span class="k">-&gt;</span> 
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 35)" onmouseover="showTip(event, 'fs22', 35)" class="i">info</span> <span class="o">=</span> <span class="s">&quot;No-StackTrace&quot;</span>, <span class="s">&quot;&quot;</span>, <span onmouseout="hideTip(event, 'fs21', 36)" onmouseover="showTip(event, 'fs21', 36)" class="i">a</span>
                (<span onmouseout="hideTip(event, 'fs22', 37)" onmouseover="showTip(event, 'fs22', 37)" class="i">info</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 38)" onmouseover="showTip(event, 'fs19', 38)" class="i">resultdata</span>)
            | <span onmouseout="hideTip(event, 'fs7', 39)" onmouseover="showTip(event, 'fs7', 39)" class="p">SeekCompanyStackTraceLine</span>(<span onmouseout="hideTip(event, 'fs21', 40)" onmouseover="showTip(event, 'fs21', 40)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs23', 41)" onmouseover="showTip(event, 'fs23', 41)" class="i">b</span>) <span class="k">-&gt;</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 42)" onmouseover="showTip(event, 'fs22', 42)" class="i">info</span> <span class="o">=</span> <span class="s">&quot;Non-&quot;</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs11', 43)" onmouseover="showTip(event, 'fs11', 43)" class="i">companyStackTraceSign</span><span class="o">+</span><span class="s">&quot;-StackTrace&quot;</span>, <span onmouseout="hideTip(event, 'fs21', 44)" onmouseover="showTip(event, 'fs21', 44)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs23', 45)" onmouseover="showTip(event, 'fs23', 45)" class="i">b</span>
                (<span onmouseout="hideTip(event, 'fs22', 46)" onmouseover="showTip(event, 'fs22', 46)" class="i">info</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 47)" onmouseover="showTip(event, 'fs19', 47)" class="i">resultdata</span>)
                
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs16', 48)" onmouseover="showTip(event, 'fs16', 48)" class="i">myLines</span>, <span onmouseout="hideTip(event, 'fs18', 49)" onmouseover="showTip(event, 'fs18', 49)" class="i">mode</span> <span class="k">with</span>
        <span class="c">//New error-line: try to seek stacktrace, store current findings</span>
        | <span onmouseout="hideTip(event, 'fs24', 50)" onmouseover="showTip(event, 'fs24', 50)" class="i">h</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs25', 51)" onmouseover="showTip(event, 'fs25', 51)" class="i">t</span>, _ <span class="k">when</span> <span onmouseout="hideTip(event, 'fs24', 52)" onmouseover="showTip(event, 'fs24', 52)" class="i">h</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 53)" onmouseover="showTip(event, 'fs26', 53)" class="f">StartsWith</span>(<span onmouseout="hideTip(event, 'fs10', 54)" onmouseover="showTip(event, 'fs10', 54)" class="i">normalLineBegin</span>) <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs24', 55)" onmouseover="showTip(event, 'fs24', 55)" class="i">h</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 56)" onmouseover="showTip(event, 'fs27', 56)" class="f">Contains</span>(<span onmouseout="hideTip(event, 'fs12', 57)" onmouseover="showTip(event, 'fs12', 57)" class="i">errorsign</span>) <span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs15', 58)" onmouseover="showTip(event, 'fs15', 58)" class="f">readLines</span> <span onmouseout="hideTip(event, 'fs25', 59)" onmouseover="showTip(event, 'fs25', 59)" class="i">t</span> (<span onmouseout="hideTip(event, 'fs5', 60)" onmouseover="showTip(event, 'fs5', 60)" class="p">SeekStackTraceLine</span>(<span onmouseout="hideTip(event, 'fs24', 61)" onmouseover="showTip(event, 'fs24', 61)" class="i">h</span>)) <span onmouseout="hideTip(event, 'fs20', 62)" onmouseover="showTip(event, 'fs20', 62)" class="i">collectedResult</span>
        <span class="c">//New info-line: dont seek stacktrace, store current findings</span>
        | <span onmouseout="hideTip(event, 'fs24', 63)" onmouseover="showTip(event, 'fs24', 63)" class="i">h</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs25', 64)" onmouseover="showTip(event, 'fs25', 64)" class="i">t</span>, _ <span class="k">when</span> <span onmouseout="hideTip(event, 'fs24', 65)" onmouseover="showTip(event, 'fs24', 65)" class="i">h</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 66)" onmouseover="showTip(event, 'fs26', 66)" class="f">StartsWith</span>(<span onmouseout="hideTip(event, 'fs10', 67)" onmouseover="showTip(event, 'fs10', 67)" class="i">normalLineBegin</span>) <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs28', 68)" onmouseover="showTip(event, 'fs28', 68)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs24', 69)" onmouseover="showTip(event, 'fs24', 69)" class="i">h</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 70)" onmouseover="showTip(event, 'fs27', 70)" class="f">Contains</span>(<span onmouseout="hideTip(event, 'fs12', 71)" onmouseover="showTip(event, 'fs12', 71)" class="i">errorsign</span>)) <span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs15', 72)" onmouseover="showTip(event, 'fs15', 72)" class="f">readLines</span> <span onmouseout="hideTip(event, 'fs25', 73)" onmouseover="showTip(event, 'fs25', 73)" class="i">t</span> <span onmouseout="hideTip(event, 'fs4', 74)" onmouseover="showTip(event, 'fs4', 74)" class="p">NotIntresting</span> <span onmouseout="hideTip(event, 'fs20', 75)" onmouseover="showTip(event, 'fs20', 75)" class="i">collectedResult</span>
                
        <span class="c">//New stacktrace-line: try to seek Company-stack, dont store yet</span>
        | <span onmouseout="hideTip(event, 'fs24', 76)" onmouseover="showTip(event, 'fs24', 76)" class="i">h</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs25', 77)" onmouseover="showTip(event, 'fs25', 77)" class="i">t</span>, <span onmouseout="hideTip(event, 'fs5', 78)" onmouseover="showTip(event, 'fs5', 78)" class="p">SeekStackTraceLine</span>(<span onmouseout="hideTip(event, 'fs29', 79)" onmouseover="showTip(event, 'fs29', 79)" class="i">l</span>) <span class="k">when</span> <span onmouseout="hideTip(event, 'fs28', 80)" onmouseover="showTip(event, 'fs28', 80)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs24', 81)" onmouseover="showTip(event, 'fs24', 81)" class="i">h</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 82)" onmouseover="showTip(event, 'fs26', 82)" class="f">StartsWith</span>(<span onmouseout="hideTip(event, 'fs10', 83)" onmouseover="showTip(event, 'fs10', 83)" class="i">normalLineBegin</span>)) <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs15', 84)" onmouseover="showTip(event, 'fs15', 84)" class="f">readLines</span> <span onmouseout="hideTip(event, 'fs25', 85)" onmouseover="showTip(event, 'fs25', 85)" class="i">t</span> (<span onmouseout="hideTip(event, 'fs7', 86)" onmouseover="showTip(event, 'fs7', 86)" class="p">SeekCompanyStackTraceLine</span>(<span onmouseout="hideTip(event, 'fs24', 87)" onmouseover="showTip(event, 'fs24', 87)" class="i">h</span>, <span onmouseout="hideTip(event, 'fs29', 88)" onmouseover="showTip(event, 'fs29', 88)" class="i">l</span>)) <span onmouseout="hideTip(event, 'fs19', 89)" onmouseover="showTip(event, 'fs19', 89)" class="i">resultdata</span>

        <span class="c">//New Company-stack-line: everything ok, lets store the result and continue</span>
        | <span onmouseout="hideTip(event, 'fs24', 90)" onmouseover="showTip(event, 'fs24', 90)" class="i">h</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs25', 91)" onmouseover="showTip(event, 'fs25', 91)" class="i">t</span>, <span onmouseout="hideTip(event, 'fs7', 92)" onmouseover="showTip(event, 'fs7', 92)" class="p">SeekCompanyStackTraceLine</span>(<span onmouseout="hideTip(event, 'fs21', 93)" onmouseover="showTip(event, 'fs21', 93)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs23', 94)" onmouseover="showTip(event, 'fs23', 94)" class="i">b</span>) <span class="k">when</span> <span onmouseout="hideTip(event, 'fs28', 95)" onmouseover="showTip(event, 'fs28', 95)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs24', 96)" onmouseover="showTip(event, 'fs24', 96)" class="i">h</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 97)" onmouseover="showTip(event, 'fs26', 97)" class="f">StartsWith</span>(<span onmouseout="hideTip(event, 'fs10', 98)" onmouseover="showTip(event, 'fs10', 98)" class="i">normalLineBegin</span>)) <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs24', 99)" onmouseover="showTip(event, 'fs24', 99)" class="i">h</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 100)" onmouseover="showTip(event, 'fs27', 100)" class="f">Contains</span>(<span onmouseout="hideTip(event, 'fs11', 101)" onmouseover="showTip(event, 'fs11', 101)" class="i">companyStackTraceSign</span>) <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs15', 102)" onmouseover="showTip(event, 'fs15', 102)" class="f">readLines</span> <span onmouseout="hideTip(event, 'fs25', 103)" onmouseover="showTip(event, 'fs25', 103)" class="i">t</span> <span onmouseout="hideTip(event, 'fs4', 104)" onmouseover="showTip(event, 'fs4', 104)" class="p">NotIntresting</span> <span onmouseout="hideTip(event, 'fs20', 105)" onmouseover="showTip(event, 'fs20', 105)" class="i">collectedResult</span>

        <span class="c">//All the other cases: continue to next line</span>
        | <span onmouseout="hideTip(event, 'fs24', 106)" onmouseover="showTip(event, 'fs24', 106)" class="i">h</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs25', 107)" onmouseover="showTip(event, 'fs25', 107)" class="i">t</span>, _  <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 108)" onmouseover="showTip(event, 'fs15', 108)" class="f">readLines</span> <span onmouseout="hideTip(event, 'fs25', 109)" onmouseover="showTip(event, 'fs25', 109)" class="i">t</span> <span onmouseout="hideTip(event, 'fs18', 110)" onmouseover="showTip(event, 'fs18', 110)" class="i">mode</span> <span onmouseout="hideTip(event, 'fs19', 111)" onmouseover="showTip(event, 'fs19', 111)" class="i">resultdata</span>

        <span class="c">//End of file: return all with the last one</span>
        | [], _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 112)" onmouseover="showTip(event, 'fs20', 112)" class="i">collectedResult</span>

    <span onmouseout="hideTip(event, 'fs15', 113)" onmouseover="showTip(event, 'fs15', 113)" class="f">readLines</span> (<span onmouseout="hideTip(event, 'fs14', 114)" onmouseover="showTip(event, 'fs14', 114)" class="i">lines</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 115)" onmouseover="showTip(event, 'fs30', 115)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 116)" onmouseover="showTip(event, 'fs31', 116)" class="f">toList</span>) <span onmouseout="hideTip(event, 'fs4', 117)" onmouseover="showTip(event, 'fs4', 117)" class="p">NotIntresting</span> []

<span class="c">///Function to break-down lines by separator.</span>
<span class="c">///e.g. for csv-import: by default Excel doesn&#39;t support multiple character separators</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 118)" onmouseover="showTip(event, 'fs32', 118)" class="f">breakLineDetails</span> <span onmouseout="hideTip(event, 'fs33', 119)" onmouseover="showTip(event, 'fs33', 119)" class="i">mySeq</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 120)" onmouseover="showTip(event, 'fs34', 120)" class="f">breakLineDetail</span> (<span onmouseout="hideTip(event, 'fs35', 121)" onmouseover="showTip(event, 'fs35', 121)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs36', 122)" onmouseover="showTip(event, 'fs36', 122)" class="i">b</span>,<span onmouseout="hideTip(event, 'fs37', 123)" onmouseover="showTip(event, 'fs37', 123)" class="i">c</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 124)" onmouseover="showTip(event, 'fs6', 124)" class="t">string</span>) <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs35', 125)" onmouseover="showTip(event, 'fs35', 125)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs36', 126)" onmouseover="showTip(event, 'fs36', 126)" class="i">b</span>,<span onmouseout="hideTip(event, 'fs37', 127)" onmouseover="showTip(event, 'fs37', 127)" class="i">c</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 128)" onmouseover="showTip(event, 'fs38', 128)" class="f">Split</span>([|<span onmouseout="hideTip(event, 'fs9', 129)" onmouseover="showTip(event, 'fs9', 129)" class="i">separator</span>|],<span onmouseout="hideTip(event, 'fs39', 130)" onmouseover="showTip(event, 'fs39', 130)" class="t">StringSplitOptions</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 131)" onmouseover="showTip(event, 'fs40', 131)" class="i">None</span>)
    <span onmouseout="hideTip(event, 'fs33', 132)" onmouseover="showTip(event, 'fs33', 132)" class="i">mySeq</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 133)" onmouseover="showTip(event, 'fs30', 133)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 134)" onmouseover="showTip(event, 'fs41', 134)" class="f">map</span> <span onmouseout="hideTip(event, 'fs34', 135)" onmouseover="showTip(event, 'fs34', 135)" class="f">breakLineDetail</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 136)" onmouseover="showTip(event, 'fs42', 136)" class="f">filesByPath</span> <span onmouseout="hideTip(event, 'fs43', 137)" onmouseover="showTip(event, 'fs43', 137)" class="i">path</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs44', 138)" onmouseover="showTip(event, 'fs44', 138)" class="t">Directory</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 139)" onmouseover="showTip(event, 'fs45', 139)" class="f">EnumerateFiles</span>(<span onmouseout="hideTip(event, 'fs43', 140)" onmouseover="showTip(event, 'fs43', 140)" class="i">path</span>,<span class="s">&quot;*.log&quot;</span>,<span onmouseout="hideTip(event, 'fs46', 141)" onmouseover="showTip(event, 'fs46', 141)" class="t">SearchOption</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 142)" onmouseover="showTip(event, 'fs47', 142)" class="i">AllDirectories</span>)

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 143)" onmouseover="showTip(event, 'fs1', 143)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 144)" onmouseover="showTip(event, 'fs48', 144)" class="i">Linq</span>

<span class="c">/// This will read the file, parse it and give results.</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs49', 145)" onmouseover="showTip(event, 'fs49', 145)" class="f">processFiles</span> <span onmouseout="hideTip(event, 'fs50', 146)" onmouseover="showTip(event, 'fs50', 146)" class="i">files</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 147)" onmouseover="showTip(event, 'fs51', 147)" class="i">result</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs50', 148)" onmouseover="showTip(event, 'fs50', 148)" class="i">files</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 149)" onmouseover="showTip(event, 'fs30', 149)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 150)" onmouseover="showTip(event, 'fs41', 150)" class="f">map</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs52', 151)" onmouseover="showTip(event, 'fs52', 151)" class="i">fileOrPath</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 152)" onmouseover="showTip(event, 'fs6', 152)" class="t">string</span>) <span class="k">-&gt;</span> 
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs52', 153)" onmouseover="showTip(event, 'fs52', 153)" class="i">fileOrPath</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs43', 154)" onmouseover="showTip(event, 'fs43', 154)" class="i">path</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs43', 155)" onmouseover="showTip(event, 'fs43', 155)" class="i">path</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 156)" onmouseover="showTip(event, 'fs53', 156)" class="f">EndsWith</span>(<span class="s">@&quot;\&quot;</span>) <span class="o">||</span> <span onmouseout="hideTip(event, 'fs43', 157)" onmouseover="showTip(event, 'fs43', 157)" class="i">path</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 158)" onmouseover="showTip(event, 'fs53', 158)" class="f">EndsWith</span>(<span class="s">@&quot;/&quot;</span>) <span class="k">-&gt;</span> 
                    <span onmouseout="hideTip(event, 'fs42', 159)" onmouseover="showTip(event, 'fs42', 159)" class="f">filesByPath</span> <span onmouseout="hideTip(event, 'fs43', 160)" onmouseover="showTip(event, 'fs43', 160)" class="i">path</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 161)" onmouseover="showTip(event, 'fs30', 161)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 162)" onmouseover="showTip(event, 'fs41', 162)" class="f">map</span> <span onmouseout="hideTip(event, 'fs54', 163)" onmouseover="showTip(event, 'fs54', 163)" class="t">File</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 164)" onmouseover="showTip(event, 'fs55', 164)" class="f">ReadLines</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 165)" onmouseover="showTip(event, 'fs30', 165)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 166)" onmouseover="showTip(event, 'fs56', 166)" class="f">concat</span>
            | <span onmouseout="hideTip(event, 'fs57', 167)" onmouseover="showTip(event, 'fs57', 167)" class="i">file</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs54', 168)" onmouseover="showTip(event, 'fs54', 168)" class="t">File</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 169)" onmouseover="showTip(event, 'fs55', 169)" class="f">ReadLines</span> <span onmouseout="hideTip(event, 'fs57', 170)" onmouseover="showTip(event, 'fs57', 170)" class="i">file</span>)
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 171)" onmouseover="showTip(event, 'fs30', 171)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 172)" onmouseover="showTip(event, 'fs56', 172)" class="f">concat</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs13', 173)" onmouseover="showTip(event, 'fs13', 173)" class="f">collectErrorInfo</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs32', 174)" onmouseover="showTip(event, 'fs32', 174)" class="f">breakLineDetails</span>
    <span onmouseout="hideTip(event, 'fs51', 175)" onmouseover="showTip(event, 'fs51', 175)" class="i">result</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 176)" onmouseover="showTip(event, 'fs58', 176)" class="f">GroupBy</span>(<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs21', 177)" onmouseover="showTip(event, 'fs21', 177)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs23', 178)" onmouseover="showTip(event, 'fs23', 178)" class="i">b</span>,<span onmouseout="hideTip(event, 'fs59', 179)" onmouseover="showTip(event, 'fs59', 179)" class="i">c</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 180)" onmouseover="showTip(event, 'fs21', 180)" class="i">a</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs23', 181)" onmouseover="showTip(event, 'fs23', 181)" class="i">b</span>)<span class="o">.</span><span class="f">OrderByDescending</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs60', 182)" onmouseover="showTip(event, 'fs60', 182)" class="i">k</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs60', 183)" onmouseover="showTip(event, 'fs60', 183)" class="i">k</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 184)" onmouseover="showTip(event, 'fs61', 184)" class="f">Count</span>())

<span class="c">///For console program, we can use this</span>
<span class="c">// For good UI we would input fileName and output results</span>
<span class="c">// (results is a grouped list of errors by type)</span>
[&lt;<span onmouseout="hideTip(event, 'fs62', 185)" onmouseover="showTip(event, 'fs62', 185)" class="t">EntryPoint</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 186)" onmouseover="showTip(event, 'fs63', 186)" class="f">main</span> <span onmouseout="hideTip(event, 'fs64', 187)" onmouseover="showTip(event, 'fs64', 187)" class="i">argv</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs65', 188)" onmouseover="showTip(event, 'fs65', 188)" class="i">filtered</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs64', 189)" onmouseover="showTip(event, 'fs64', 189)" class="i">argv</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs66', 190)" onmouseover="showTip(event, 'fs66', 190)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs67', 191)" onmouseover="showTip(event, 'fs67', 191)" class="f">filter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs68', 192)" onmouseover="showTip(event, 'fs68', 192)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs28', 193)" onmouseover="showTip(event, 'fs28', 193)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs68', 194)" onmouseover="showTip(event, 'fs68', 194)" class="i">i</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>))
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs65', 195)" onmouseover="showTip(event, 'fs65', 195)" class="i">filtered</span> <span class="k">with</span>
    | [||] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs69', 196)" onmouseover="showTip(event, 'fs69', 196)" class="f">printfn</span> <span class="s">&quot;Please input filename as argument.&quot;</span>
    | <span onmouseout="hideTip(event, 'fs70', 197)" onmouseover="showTip(event, 'fs70', 197)" class="i">fileNames</span> <span class="k">-&gt;</span> 
        <span class="c">//let fileNames = [|@&quot;C:\...\MyProgram.log&quot;|]</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs71', 198)" onmouseover="showTip(event, 'fs71', 198)" class="i">results</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 199)" onmouseover="showTip(event, 'fs49', 199)" class="f">processFiles</span> <span onmouseout="hideTip(event, 'fs70', 200)" onmouseover="showTip(event, 'fs70', 200)" class="i">fileNames</span>
        <span class="k">for</span> <span onmouseout="hideTip(event, 'fs72', 201)" onmouseover="showTip(event, 'fs72', 201)" class="i">i</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs71', 202)" onmouseover="showTip(event, 'fs71', 202)" class="i">results</span>
            <span class="k">do</span> <span onmouseout="hideTip(event, 'fs73', 203)" onmouseover="showTip(event, 'fs73', 203)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 204)" onmouseover="showTip(event, 'fs74', 204)" class="f">WriteLine</span>(<span class="s">&quot;Count: &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs72', 205)" onmouseover="showTip(event, 'fs72', 205)" class="i">i</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 206)" onmouseover="showTip(event, 'fs61', 206)" class="f">Count</span>()<span class="o">.</span><span class="f">ToString</span>() <span class="o">+</span> <span class="s">&quot;, Item: &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs72', 207)" onmouseover="showTip(event, 'fs72', 207)" class="i">i</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs75', 208)" onmouseover="showTip(event, 'fs75', 208)" class="i">Key</span>)
    <span class="n">0</span> <span class="c">// return an integer exit code</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.IO</div>
<div class="tip" id="fs3">type CollectData =<br />&#160;&#160;| NotIntresting<br />&#160;&#160;| SeekStackTraceLine of string<br />&#160;&#160;| SeekCompanyStackTraceLine of string * string<br /><br />Full name: Script.CollectData</div>
<div class="tip" id="fs4">union case CollectData.NotIntresting: CollectData</div>
<div class="tip" id="fs5">union case CollectData.SeekStackTraceLine: string -&gt; CollectData</div>
<div class="tip" id="fs6">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs7">union case CollectData.SeekCompanyStackTraceLine: string * string -&gt; CollectData</div>
<div class="tip" id="fs8">Multiple items<br />type LiteralAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; LiteralAttribute<br /><br />Full name: Microsoft.FSharp.Core.LiteralAttribute<br /><br />--------------------<br />new : unit -&gt; LiteralAttribute</div>
<div class="tip" id="fs9">val separator : string<br /><br />Full name: Script.separator<br /><em><br /><br />Log4Net item separator</em></div>
<div class="tip" id="fs10">val normalLineBegin : string<br /><br />Full name: Script.normalLineBegin<br /><em><br /><br />Beginig for a normal line. e.g. date like 2013-10-27</em></div>
<div class="tip" id="fs11">val companyStackTraceSign : string<br /><br />Full name: Script.companyStackTraceSign<br /><em><br /><br />Company namespace in the stacktrace</em></div>
<div class="tip" id="fs12">val errorsign : string<br /><br />Full name: Script.errorsign<br /><em><br /><br />Detect error line in the log: contains this string</em></div>
<div class="tip" id="fs13">val collectErrorInfo : lines:seq&lt;string&gt; -&gt; (string * string * string) list<br /><br />Full name: Script.collectErrorInfo<br /><em><br /><br />This will parse the lines to resultset of errors</em></div>
<div class="tip" id="fs14">val lines : seq&lt;string&gt;</div>
<div class="tip" id="fs15">val readLines : (string list -&gt; CollectData -&gt; (string * string * string) list -&gt; (string * string * string) list)</div>
<div class="tip" id="fs16">val myLines : string list</div>
<div class="tip" id="fs17">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs18">val mode : CollectData</div>
<div class="tip" id="fs19">val resultdata : (string * string * string) list</div>
<div class="tip" id="fs20">val collectedResult : (string * string * string) list</div>
<div class="tip" id="fs21">val a : string</div>
<div class="tip" id="fs22">val info : string * string * string</div>
<div class="tip" id="fs23">val b : string</div>
<div class="tip" id="fs24">val h : string</div>
<div class="tip" id="fs25">val t : string list</div>
<div class="tip" id="fs26">String.StartsWith(value: string) : bool<br />String.StartsWith(value: string, comparisonType: StringComparison) : bool<br />String.StartsWith(value: string, ignoreCase: bool, culture: Globalization.CultureInfo) : bool</div>
<div class="tip" id="fs27">String.Contains(value: string) : bool</div>
<div class="tip" id="fs28">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs29">val l : string</div>
<div class="tip" id="fs30">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs31">val toList : source:seq&lt;&#39;T&gt; -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.Seq.toList</div>
<div class="tip" id="fs32">val breakLineDetails : mySeq:seq&lt;&#39;a * &#39;b * string&gt; -&gt; seq&lt;&#39;a * &#39;b * string []&gt;<br /><br />Full name: Script.breakLineDetails<br /><em><br /><br />Function to break-down lines by separator.<br />e.g. for csv-import: by default Excel doesn&#39;t support multiple character separators</em></div>
<div class="tip" id="fs33">val mySeq : seq&lt;&#39;a * &#39;b * string&gt;</div>
<div class="tip" id="fs34">val breakLineDetail : (&#39;c * &#39;d * string -&gt; &#39;c * &#39;d * string [])</div>
<div class="tip" id="fs35">val a : &#39;c</div>
<div class="tip" id="fs36">val b : &#39;d</div>
<div class="tip" id="fs37">val c : string</div>
<div class="tip" id="fs38">String.Split([&lt;ParamArray&gt;] separator: char []) : string []<br />String.Split(separator: string [], options: StringSplitOptions) : string []<br />String.Split(separator: char [], options: StringSplitOptions) : string []<br />String.Split(separator: char [], count: int) : string []<br />String.Split(separator: string [], count: int, options: StringSplitOptions) : string []<br />String.Split(separator: char [], count: int, options: StringSplitOptions) : string []</div>
<div class="tip" id="fs39">type StringSplitOptions =<br />&#160;&#160;| None = 0<br />&#160;&#160;| RemoveEmptyEntries = 1<br /><br />Full name: System.StringSplitOptions</div>
<div class="tip" id="fs40">field StringSplitOptions.None = 0</div>
<div class="tip" id="fs41">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs42">val filesByPath : path:string -&gt; Collections.Generic.IEnumerable&lt;string&gt;<br /><br />Full name: Script.filesByPath</div>
<div class="tip" id="fs43">val path : string</div>
<div class="tip" id="fs44">type Directory =<br />&#160;&#160;static member CreateDirectory : path:string -&gt; DirectoryInfo + 1 overload<br />&#160;&#160;static member Delete : path:string -&gt; unit + 1 overload<br />&#160;&#160;static member EnumerateDirectories : path:string -&gt; IEnumerable&lt;string&gt; + 2 overloads<br />&#160;&#160;static member EnumerateFileSystemEntries : path:string -&gt; IEnumerable&lt;string&gt; + 2 overloads<br />&#160;&#160;static member EnumerateFiles : path:string -&gt; IEnumerable&lt;string&gt; + 2 overloads<br />&#160;&#160;static member Exists : path:string -&gt; bool<br />&#160;&#160;static member GetAccessControl : path:string -&gt; DirectorySecurity + 1 overload<br />&#160;&#160;static member GetCreationTime : path:string -&gt; DateTime<br />&#160;&#160;static member GetCreationTimeUtc : path:string -&gt; DateTime<br />&#160;&#160;static member GetCurrentDirectory : unit -&gt; string<br />&#160;&#160;...<br /><br />Full name: System.IO.Directory</div>
<div class="tip" id="fs45">Directory.EnumerateFiles(path: string) : Collections.Generic.IEnumerable&lt;string&gt;<br />Directory.EnumerateFiles(path: string, searchPattern: string) : Collections.Generic.IEnumerable&lt;string&gt;<br />Directory.EnumerateFiles(path: string, searchPattern: string, searchOption: SearchOption) : Collections.Generic.IEnumerable&lt;string&gt;</div>
<div class="tip" id="fs46">type SearchOption =<br />&#160;&#160;| TopDirectoryOnly = 0<br />&#160;&#160;| AllDirectories = 1<br /><br />Full name: System.IO.SearchOption</div>
<div class="tip" id="fs47">field SearchOption.AllDirectories = 1</div>
<div class="tip" id="fs48">namespace System.Linq</div>
<div class="tip" id="fs49">val processFiles : files:seq&lt;string&gt; -&gt; IOrderedEnumerable&lt;IGrouping&lt;string,(string * string * string [])&gt;&gt;<br /><br />Full name: Script.processFiles<br /><em><br /><br />&#160;This will read the file, parse it and give results.</em></div>
<div class="tip" id="fs50">val files : seq&lt;string&gt;</div>
<div class="tip" id="fs51">val result : seq&lt;string * string * string []&gt;</div>
<div class="tip" id="fs52">val fileOrPath : string</div>
<div class="tip" id="fs53">String.EndsWith(value: string) : bool<br />String.EndsWith(value: string, comparisonType: StringComparison) : bool<br />String.EndsWith(value: string, ignoreCase: bool, culture: Globalization.CultureInfo) : bool</div>
<div class="tip" id="fs54">type File =<br />&#160;&#160;static member AppendAllLines : path:string * contents:IEnumerable&lt;string&gt; -&gt; unit + 1 overload<br />&#160;&#160;static member AppendAllText : path:string * contents:string -&gt; unit + 1 overload<br />&#160;&#160;static member AppendText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Copy : sourceFileName:string * destFileName:string -&gt; unit + 1 overload<br />&#160;&#160;static member Create : path:string -&gt; FileStream + 3 overloads<br />&#160;&#160;static member CreateText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Decrypt : path:string -&gt; unit<br />&#160;&#160;static member Delete : path:string -&gt; unit<br />&#160;&#160;static member Encrypt : path:string -&gt; unit<br />&#160;&#160;static member Exists : path:string -&gt; bool<br />&#160;&#160;...<br /><br />Full name: System.IO.File</div>
<div class="tip" id="fs55">File.ReadLines(path: string) : Collections.Generic.IEnumerable&lt;string&gt;<br />File.ReadLines(path: string, encoding: Text.Encoding) : Collections.Generic.IEnumerable&lt;string&gt;</div>
<div class="tip" id="fs56">val concat : sources:seq&lt;#seq&lt;&#39;T&gt;&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.concat</div>
<div class="tip" id="fs57">val file : string</div>
<div class="tip" id="fs58">(extension) Collections.Generic.IEnumerable.GroupBy&lt;&#39;TSource,&#39;TKey&gt;(keySelector: Func&lt;&#39;TSource,&#39;TKey&gt;) : Collections.Generic.IEnumerable&lt;IGrouping&lt;&#39;TKey,&#39;TSource&gt;&gt;<br />(extension) Collections.Generic.IEnumerable.GroupBy&lt;&#39;TSource,&#39;TKey&gt;(keySelector: Func&lt;&#39;TSource,&#39;TKey&gt;, comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : Collections.Generic.IEnumerable&lt;IGrouping&lt;&#39;TKey,&#39;TSource&gt;&gt;<br />(extension) Collections.Generic.IEnumerable.GroupBy&lt;&#39;TSource,&#39;TKey,&#39;TElement&gt;(keySelector: Func&lt;&#39;TSource,&#39;TKey&gt;, elementSelector: Func&lt;&#39;TSource,&#39;TElement&gt;) : Collections.Generic.IEnumerable&lt;IGrouping&lt;&#39;TKey,&#39;TElement&gt;&gt;<br />(extension) Collections.Generic.IEnumerable.GroupBy&lt;&#39;TSource,&#39;TKey,&#39;TResult&gt;(keySelector: Func&lt;&#39;TSource,&#39;TKey&gt;, resultSelector: Func&lt;&#39;TKey,Collections.Generic.IEnumerable&lt;&#39;TSource&gt;,&#39;TResult&gt;) : Collections.Generic.IEnumerable&lt;&#39;TResult&gt;<br />(extension) Collections.Generic.IEnumerable.GroupBy&lt;&#39;TSource,&#39;TKey,&#39;TElement&gt;(keySelector: Func&lt;&#39;TSource,&#39;TKey&gt;, elementSelector: Func&lt;&#39;TSource,&#39;TElement&gt;, comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : Collections.Generic.IEnumerable&lt;IGrouping&lt;&#39;TKey,&#39;TElement&gt;&gt;<br />(extension) Collections.Generic.IEnumerable.GroupBy&lt;&#39;TSource,&#39;TKey,&#39;TElement,&#39;TResult&gt;(keySelector: Func&lt;&#39;TSource,&#39;TKey&gt;, elementSelector: Func&lt;&#39;TSource,&#39;TElement&gt;, resultSelector: Func&lt;&#39;TKey,Collections.Generic.IEnumerable&lt;&#39;TElement&gt;,&#39;TResult&gt;) : Collections.Generic.IEnumerable&lt;&#39;TResult&gt;<br />(extension) Collections.Generic.IEnumerable.GroupBy&lt;&#39;TSource,&#39;TKey,&#39;TResult&gt;(keySelector: Func&lt;&#39;TSource,&#39;TKey&gt;, resultSelector: Func&lt;&#39;TKey,Collections.Generic.IEnumerable&lt;&#39;TSource&gt;,&#39;TResult&gt;, comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : Collections.Generic.IEnumerable&lt;&#39;TResult&gt;<br />(extension) Collections.Generic.IEnumerable.GroupBy&lt;&#39;TSource,&#39;TKey,&#39;TElement,&#39;TResult&gt;(keySelector: Func&lt;&#39;TSource,&#39;TKey&gt;, elementSelector: Func&lt;&#39;TSource,&#39;TElement&gt;, resultSelector: Func&lt;&#39;TKey,Collections.Generic.IEnumerable&lt;&#39;TElement&gt;,&#39;TResult&gt;, comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : Collections.Generic.IEnumerable&lt;&#39;TResult&gt;</div>
<div class="tip" id="fs59">val c : string []</div>
<div class="tip" id="fs60">val k : IGrouping&lt;string,(string * string * string [])&gt;</div>
<div class="tip" id="fs61">(extension) Collections.Generic.IEnumerable.Count&lt;&#39;TSource&gt;() : int<br />(extension) Collections.Generic.IEnumerable.Count&lt;&#39;TSource&gt;(predicate: Func&lt;&#39;TSource,bool&gt;) : int</div>
<div class="tip" id="fs62">Multiple items<br />type EntryPointAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; EntryPointAttribute<br /><br />Full name: Microsoft.FSharp.Core.EntryPointAttribute<br /><br />--------------------<br />new : unit -&gt; EntryPointAttribute</div>
<div class="tip" id="fs63">val main : argv:string [] -&gt; int<br /><br />Full name: Script.main<br /><em><br /><br />For console program, we can use this</em></div>
<div class="tip" id="fs64">val argv : string []</div>
<div class="tip" id="fs65">val filtered : string []</div>
<div class="tip" id="fs66">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs67">val filter : predicate:(&#39;T -&gt; bool) -&gt; array:&#39;T [] -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.filter</div>
<div class="tip" id="fs68">val i : string</div>
<div class="tip" id="fs69">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs70">val fileNames : string []</div>
<div class="tip" id="fs71">val results : IOrderedEnumerable&lt;IGrouping&lt;string,(string * string * string [])&gt;&gt;</div>
<div class="tip" id="fs72">val i : IGrouping&lt;string,(string * string * string [])&gt;</div>
<div class="tip" id="fs73">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs74">Console.WriteLine() : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: obj) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: decimal) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs75">property IGrouping.Key: string</div>

