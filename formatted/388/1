<h2><a name="Iteratee" class="anchor" href="#Iteratee">Iteratee</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">/// A stream of chunks of data generated by an Enumerator.</span>
<span class="c">/// The stream can be composed of chunks of &#39;a, empty blocks indicating a wait, or an EOF marker.</span>
<span class="c">/// In Haskell, the Chunk is usually composed of a list of ListLike type, but F# doesn&#39;t support</span>
<span class="c">/// Monad Transforms or ^M in type declarations. Thus, the Chunk is left open to various internal</span>
<span class="c">/// types, but a bit more work must be done in order to maintain the meaningfulness of &quot;chunk&quot;.</span>
<span class="c">/// That said, the &#39;a allows a large number of chunk-y types to be used, including other monads.</span>
<span class="c">/// Be aware that when using #seq&lt;_&gt; types, you will need to check for both Seq.empty ([]) and Empty.</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Stream</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">=</span>
  | <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="p">Chunk</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">a</span>
  | <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="p">Empty</span>
  | <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="p">EOF</span>

<span class="c">/// The iteratee is a stream consumer that will consume a stream of data until either </span>
<span class="c">/// it receives an EOF or meets its own requirements for consuming data. The iteratee</span>
<span class="c">/// will return Continue whenever it is ready to receive the next chunk. An iteratee</span>
<span class="c">/// is fed data by an Enumerator, which generates a Stream. </span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">Iteratee</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">el</span>,<span class="o">&#39;</span><span class="i">acc</span><span class="o">&gt;</span> <span class="o">=</span>
  | <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="p">Continue</span> <span class="k">of</span> (<span onmouseout="hideTip(event, 'fs1', 7)" onmouseover="showTip(event, 'fs1', 7)" class="t">Stream</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">el</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="t">Iteratee</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">el</span>,<span class="o">&#39;</span><span class="i">acc</span><span class="o">&gt;</span>)
  | <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="p">Yield</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">acc</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs1', 10)" onmouseover="showTip(event, 'fs1', 10)" class="t">Stream</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">el</span><span class="o">&gt;</span>
  | <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="p">Error</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="t">exn</span>

<span class="c">/// An enumerator generates a stream of data and feeds an iteratee, returning a new iteratee.</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="t">Enumerator</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">el</span>,<span class="o">&#39;</span><span class="i">acc</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 14)" onmouseover="showTip(event, 'fs5', 14)" class="t">Iteratee</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">el</span>,<span class="o">&#39;</span><span class="i">acc</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 15)" onmouseover="showTip(event, 'fs5', 15)" class="t">Iteratee</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">el</span>,<span class="o">&#39;</span><span class="i">acc</span><span class="o">&gt;</span>

<span class="c">/// An Enumeratee is an Enumerator that feeds data streams to an internal iteratee.</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="t">Enumeratee</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">elo</span>,<span class="o">&#39;</span><span class="i">eli</span>,<span class="o">&#39;</span><span class="i">acc</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 17)" onmouseover="showTip(event, 'fs5', 17)" class="t">Iteratee</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">eli</span>,<span class="o">&#39;</span><span class="i">acc</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 18)" onmouseover="showTip(event, 'fs5', 18)" class="t">Iteratee</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">elo</span>, <span onmouseout="hideTip(event, 'fs5', 19)" onmouseover="showTip(event, 'fs5', 19)" class="t">Iteratee</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">eli</span>,<span class="o">&#39;</span><span class="i">acc</span><span class="o">&gt;</span><span class="o">&gt;</span>

<span class="c">// TODO: Make calls to bind tail recursive.</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs12', 20)" onmouseover="showTip(event, 'fs12', 20)" class="f">bind</span> <span onmouseout="hideTip(event, 'fs13', 21)" onmouseover="showTip(event, 'fs13', 21)" class="i">m</span> <span onmouseout="hideTip(event, 'fs14', 22)" onmouseover="showTip(event, 'fs14', 22)" class="f">f</span> <span class="o">=</span>
  <span class="k">match</span> <span onmouseout="hideTip(event, 'fs13', 23)" onmouseover="showTip(event, 'fs13', 23)" class="i">m</span> <span class="k">with</span>
  | <span onmouseout="hideTip(event, 'fs6', 24)" onmouseover="showTip(event, 'fs6', 24)" class="p">Continue</span> <span onmouseout="hideTip(event, 'fs15', 25)" onmouseover="showTip(event, 'fs15', 25)" class="f">k</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 26)" onmouseover="showTip(event, 'fs6', 26)" class="p">Continue</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs16', 27)" onmouseover="showTip(event, 'fs16', 27)" class="i">s</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs12', 28)" onmouseover="showTip(event, 'fs12', 28)" class="f">bind</span> (<span onmouseout="hideTip(event, 'fs15', 29)" onmouseover="showTip(event, 'fs15', 29)" class="f">k</span> <span onmouseout="hideTip(event, 'fs16', 30)" onmouseover="showTip(event, 'fs16', 30)" class="i">s</span>) <span onmouseout="hideTip(event, 'fs14', 31)" onmouseover="showTip(event, 'fs14', 31)" class="f">f</span>)
  | <span onmouseout="hideTip(event, 'fs8', 32)" onmouseover="showTip(event, 'fs8', 32)" class="p">Error</span> <span onmouseout="hideTip(event, 'fs17', 33)" onmouseover="showTip(event, 'fs17', 33)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs8', 34)" onmouseover="showTip(event, 'fs8', 34)" class="p">Error</span> <span onmouseout="hideTip(event, 'fs17', 35)" onmouseover="showTip(event, 'fs17', 35)" class="i">e</span>
  | <span onmouseout="hideTip(event, 'fs7', 36)" onmouseover="showTip(event, 'fs7', 36)" class="p">Yield</span>(<span onmouseout="hideTip(event, 'fs18', 37)" onmouseover="showTip(event, 'fs18', 37)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs3', 38)" onmouseover="showTip(event, 'fs3', 38)" class="p">Empty</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 39)" onmouseover="showTip(event, 'fs14', 39)" class="f">f</span> <span onmouseout="hideTip(event, 'fs18', 40)" onmouseover="showTip(event, 'fs18', 40)" class="i">x</span>
  | <span onmouseout="hideTip(event, 'fs7', 41)" onmouseover="showTip(event, 'fs7', 41)" class="p">Yield</span>(<span onmouseout="hideTip(event, 'fs18', 42)" onmouseover="showTip(event, 'fs18', 42)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs19', 43)" onmouseover="showTip(event, 'fs19', 43)" class="i">extra</span>) <span class="k">-&gt;</span>
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs14', 44)" onmouseover="showTip(event, 'fs14', 44)" class="f">f</span> <span onmouseout="hideTip(event, 'fs18', 45)" onmouseover="showTip(event, 'fs18', 45)" class="i">x</span> <span class="k">with</span>
      | <span onmouseout="hideTip(event, 'fs6', 46)" onmouseover="showTip(event, 'fs6', 46)" class="p">Continue</span> <span onmouseout="hideTip(event, 'fs20', 47)" onmouseover="showTip(event, 'fs20', 47)" class="f">k</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 48)" onmouseover="showTip(event, 'fs20', 48)" class="f">k</span> <span onmouseout="hideTip(event, 'fs19', 49)" onmouseover="showTip(event, 'fs19', 49)" class="i">extra</span>
      | <span onmouseout="hideTip(event, 'fs8', 50)" onmouseover="showTip(event, 'fs8', 50)" class="p">Error</span> <span onmouseout="hideTip(event, 'fs17', 51)" onmouseover="showTip(event, 'fs17', 51)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs8', 52)" onmouseover="showTip(event, 'fs8', 52)" class="p">Error</span> <span onmouseout="hideTip(event, 'fs17', 53)" onmouseover="showTip(event, 'fs17', 53)" class="i">e</span>
      | <span onmouseout="hideTip(event, 'fs7', 54)" onmouseover="showTip(event, 'fs7', 54)" class="p">Yield</span>(<span onmouseout="hideTip(event, 'fs21', 55)" onmouseover="showTip(event, 'fs21', 55)" class="i">acc&#39;</span>,_) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 56)" onmouseover="showTip(event, 'fs7', 56)" class="p">Yield</span>(<span onmouseout="hideTip(event, 'fs21', 57)" onmouseover="showTip(event, 'fs21', 57)" class="i">acc&#39;</span>, <span onmouseout="hideTip(event, 'fs19', 58)" onmouseover="showTip(event, 'fs19', 58)" class="i">extra</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 59)" onmouseover="showTip(event, 'fs22', 59)" class="f">combine</span> <span onmouseout="hideTip(event, 'fs23', 60)" onmouseover="showTip(event, 'fs23', 60)" class="i">comp1</span> <span onmouseout="hideTip(event, 'fs24', 61)" onmouseover="showTip(event, 'fs24', 61)" class="i">comp2</span> <span class="o">=</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 62)" onmouseover="showTip(event, 'fs25', 62)" class="f">binder</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 63)" onmouseover="showTip(event, 'fs24', 63)" class="i">comp2</span>
  <span onmouseout="hideTip(event, 'fs12', 64)" onmouseover="showTip(event, 'fs12', 64)" class="f">bind</span> <span onmouseout="hideTip(event, 'fs23', 65)" onmouseover="showTip(event, 'fs23', 65)" class="i">comp1</span> <span onmouseout="hideTip(event, 'fs25', 66)" onmouseover="showTip(event, 'fs25', 66)" class="f">binder</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs26', 67)" onmouseover="showTip(event, 'fs26', 67)" class="t">IterateeBuilder</span>() <span class="o">=</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs27', 68)" onmouseover="showTip(event, 'fs27', 68)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 69)" onmouseover="showTip(event, 'fs28', 69)" class="f">Return</span>(<span onmouseout="hideTip(event, 'fs29', 70)" onmouseover="showTip(event, 'fs29', 70)" class="i">x</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 71)" onmouseover="showTip(event, 'fs7', 71)" class="p">Yield</span>(<span onmouseout="hideTip(event, 'fs29', 72)" onmouseover="showTip(event, 'fs29', 72)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs3', 73)" onmouseover="showTip(event, 'fs3', 73)" class="p">Empty</span>)
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs27', 74)" onmouseover="showTip(event, 'fs27', 74)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 75)" onmouseover="showTip(event, 'fs30', 75)" class="f">ReturnFrom</span>(<span onmouseout="hideTip(event, 'fs31', 76)" onmouseover="showTip(event, 'fs31', 76)" class="i">m</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs5', 77)" onmouseover="showTip(event, 'fs5', 77)" class="t">Iteratee</span><span class="o">&lt;</span>_,_<span class="o">&gt;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 78)" onmouseover="showTip(event, 'fs31', 78)" class="i">m</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs27', 79)" onmouseover="showTip(event, 'fs27', 79)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 80)" onmouseover="showTip(event, 'fs32', 80)" class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs33', 81)" onmouseover="showTip(event, 'fs33', 81)" class="i">m</span>, <span onmouseout="hideTip(event, 'fs34', 82)" onmouseover="showTip(event, 'fs34', 82)" class="f">k</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 83)" onmouseover="showTip(event, 'fs12', 83)" class="f">bind</span> <span onmouseout="hideTip(event, 'fs33', 84)" onmouseover="showTip(event, 'fs33', 84)" class="i">m</span> <span onmouseout="hideTip(event, 'fs34', 85)" onmouseover="showTip(event, 'fs34', 85)" class="f">k</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs27', 86)" onmouseover="showTip(event, 'fs27', 86)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 87)" onmouseover="showTip(event, 'fs35', 87)" class="f">Zero</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 88)" onmouseover="showTip(event, 'fs7', 88)" class="p">Yield</span>((), <span onmouseout="hideTip(event, 'fs3', 89)" onmouseover="showTip(event, 'fs3', 89)" class="p">Empty</span>)
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs27', 90)" onmouseover="showTip(event, 'fs27', 90)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 91)" onmouseover="showTip(event, 'fs36', 91)" class="f">Combine</span>(<span onmouseout="hideTip(event, 'fs37', 92)" onmouseover="showTip(event, 'fs37', 92)" class="i">comp1</span>, <span onmouseout="hideTip(event, 'fs38', 93)" onmouseover="showTip(event, 'fs38', 93)" class="i">comp2</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 94)" onmouseover="showTip(event, 'fs22', 94)" class="f">combine</span> <span onmouseout="hideTip(event, 'fs37', 95)" onmouseover="showTip(event, 'fs37', 95)" class="i">comp1</span> <span onmouseout="hideTip(event, 'fs38', 96)" onmouseover="showTip(event, 'fs38', 96)" class="i">comp2</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs27', 97)" onmouseover="showTip(event, 'fs27', 97)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 98)" onmouseover="showTip(event, 'fs39', 98)" class="f">Delay</span>(<span onmouseout="hideTip(event, 'fs40', 99)" onmouseover="showTip(event, 'fs40', 99)" class="f">f</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 100)" onmouseover="showTip(event, 'fs12', 100)" class="f">bind</span> (<span onmouseout="hideTip(event, 'fs7', 101)" onmouseover="showTip(event, 'fs7', 101)" class="p">Yield</span>((), <span onmouseout="hideTip(event, 'fs3', 102)" onmouseover="showTip(event, 'fs3', 102)" class="p">Empty</span>)) <span onmouseout="hideTip(event, 'fs40', 103)" onmouseover="showTip(event, 'fs40', 103)" class="f">f</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 104)" onmouseover="showTip(event, 'fs41', 104)" class="i">iteratee</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 105)" onmouseover="showTip(event, 'fs26', 105)" class="t">IterateeBuilder</span>()
</code></pre></td>
</tr>
</table>
<h2><a name="Iteratee-runners" class="anchor" href="#Iteratee-runners">Iteratee runners</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs42', 106)" onmouseover="showTip(event, 'fs42', 106)" class="f">enumEOF</span> <span class="o">=</span> <span class="k">function</span>
  | <span onmouseout="hideTip(event, 'fs7', 107)" onmouseover="showTip(event, 'fs7', 107)" class="p">Yield</span>(<span onmouseout="hideTip(event, 'fs18', 108)" onmouseover="showTip(event, 'fs18', 108)" class="i">x</span>,_) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 109)" onmouseover="showTip(event, 'fs7', 109)" class="p">Yield</span>(<span onmouseout="hideTip(event, 'fs18', 110)" onmouseover="showTip(event, 'fs18', 110)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs4', 111)" onmouseover="showTip(event, 'fs4', 111)" class="p">EOF</span>)
  | <span onmouseout="hideTip(event, 'fs8', 112)" onmouseover="showTip(event, 'fs8', 112)" class="p">Error</span> <span onmouseout="hideTip(event, 'fs17', 113)" onmouseover="showTip(event, 'fs17', 113)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs8', 114)" onmouseover="showTip(event, 'fs8', 114)" class="p">Error</span> <span onmouseout="hideTip(event, 'fs17', 115)" onmouseover="showTip(event, 'fs17', 115)" class="i">e</span>
  | <span onmouseout="hideTip(event, 'fs6', 116)" onmouseover="showTip(event, 'fs6', 116)" class="p">Continue</span> <span onmouseout="hideTip(event, 'fs15', 117)" onmouseover="showTip(event, 'fs15', 117)" class="f">k</span> <span class="k">-&gt;</span>
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs15', 118)" onmouseover="showTip(event, 'fs15', 118)" class="f">k</span> <span onmouseout="hideTip(event, 'fs4', 119)" onmouseover="showTip(event, 'fs4', 119)" class="p">EOF</span> <span class="k">with</span>
      | <span onmouseout="hideTip(event, 'fs6', 120)" onmouseover="showTip(event, 'fs6', 120)" class="p">Continue</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs43', 121)" onmouseover="showTip(event, 'fs43', 121)" class="f">failwith</span> <span class="s">&quot;enumEOF: divergent iteratee&quot;</span>
      | <span onmouseout="hideTip(event, 'fs44', 122)" onmouseover="showTip(event, 'fs44', 122)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs42', 123)" onmouseover="showTip(event, 'fs42', 123)" class="f">enumEOF</span> <span onmouseout="hideTip(event, 'fs44', 124)" onmouseover="showTip(event, 'fs44', 124)" class="i">i</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs45', 125)" onmouseover="showTip(event, 'fs45', 125)" class="f">run</span> <span onmouseout="hideTip(event, 'fs44', 126)" onmouseover="showTip(event, 'fs44', 126)" class="i">i</span> <span class="o">=</span>
  <span class="k">match</span> <span onmouseout="hideTip(event, 'fs42', 127)" onmouseover="showTip(event, 'fs42', 127)" class="f">enumEOF</span> <span onmouseout="hideTip(event, 'fs44', 128)" onmouseover="showTip(event, 'fs44', 128)" class="i">i</span> <span class="k">with</span>
  | <span onmouseout="hideTip(event, 'fs8', 129)" onmouseover="showTip(event, 'fs8', 129)" class="p">Error</span> <span onmouseout="hideTip(event, 'fs17', 130)" onmouseover="showTip(event, 'fs17', 130)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs46', 131)" onmouseover="showTip(event, 'fs46', 131)" class="p">Choice1Of2</span> <span onmouseout="hideTip(event, 'fs17', 132)" onmouseover="showTip(event, 'fs17', 132)" class="i">e</span>
  | <span onmouseout="hideTip(event, 'fs7', 133)" onmouseover="showTip(event, 'fs7', 133)" class="p">Yield</span>(<span onmouseout="hideTip(event, 'fs18', 134)" onmouseover="showTip(event, 'fs18', 134)" class="i">x</span>,_) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs47', 135)" onmouseover="showTip(event, 'fs47', 135)" class="p">Choice2Of2</span> <span onmouseout="hideTip(event, 'fs18', 136)" onmouseover="showTip(event, 'fs18', 136)" class="i">x</span>
  | <span onmouseout="hideTip(event, 'fs6', 137)" onmouseover="showTip(event, 'fs6', 137)" class="p">Continue</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs43', 138)" onmouseover="showTip(event, 'fs43', 138)" class="f">failwith</span> <span class="s">&quot;run: divergent iteratee&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 139)" onmouseover="showTip(event, 'fs48', 139)" class="f">run_</span> <span onmouseout="hideTip(event, 'fs44', 140)" onmouseover="showTip(event, 'fs44', 140)" class="i">i</span> <span class="o">=</span>
  <span class="k">match</span> <span onmouseout="hideTip(event, 'fs45', 141)" onmouseover="showTip(event, 'fs45', 141)" class="f">run</span> <span onmouseout="hideTip(event, 'fs44', 142)" onmouseover="showTip(event, 'fs44', 142)" class="i">i</span> <span class="k">with</span>
  | <span onmouseout="hideTip(event, 'fs46', 143)" onmouseover="showTip(event, 'fs46', 143)" class="p">Choice1Of2</span> <span onmouseout="hideTip(event, 'fs17', 144)" onmouseover="showTip(event, 'fs17', 144)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs49', 145)" onmouseover="showTip(event, 'fs49', 145)" class="f">raise</span> <span onmouseout="hideTip(event, 'fs17', 146)" onmouseover="showTip(event, 'fs17', 146)" class="i">e</span>
  | <span onmouseout="hideTip(event, 'fs50', 147)" onmouseover="showTip(event, 'fs50', 147)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs50', 148)" onmouseover="showTip(event, 'fs50', 148)" class="i">x</span>
</code></pre></td>
</tr>
</table>
<h2><a name="Sample-iteratees" class="anchor" href="#Sample-iteratees">Sample iteratees</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span class="i">length</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 149)" onmouseover="showTip(event, 'fs5', 149)" class="i">Iteratee</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs51', 150)" onmouseover="showTip(event, 'fs51', 150)" class="i">list</span>, <span onmouseout="hideTip(event, 'fs52', 151)" onmouseover="showTip(event, 'fs52', 151)" class="i">int</span><span class="o">&gt;</span> <span class="o">=</span>
  <span class="k">let</span> <span class="k">rec</span> <span class="i">step</span> <span class="i">n</span> <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs3', 152)" onmouseover="showTip(event, 'fs3', 152)" class="i">Empty</span> | <span onmouseout="hideTip(event, 'fs2', 153)" onmouseover="showTip(event, 'fs2', 153)" class="i">Chunk</span> [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 154)" onmouseover="showTip(event, 'fs6', 154)" class="i">Continue</span> (<span class="i">step</span> <span class="i">n</span>)
    | <span onmouseout="hideTip(event, 'fs2', 155)" onmouseover="showTip(event, 'fs2', 155)" class="i">Chunk</span> <span class="i">x</span>          <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 156)" onmouseover="showTip(event, 'fs6', 156)" class="i">Continue</span> (<span class="i">step</span> (<span class="i">n</span> <span class="o">+</span> <span class="n">1</span>))
    | <span onmouseout="hideTip(event, 'fs4', 157)" onmouseover="showTip(event, 'fs4', 157)" class="i">EOF</span>         <span class="k">as</span> <span class="i">s</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 158)" onmouseover="showTip(event, 'fs7', 158)" class="i">Yield</span>(<span class="i">n</span>, <span class="i">s</span>)
  <span onmouseout="hideTip(event, 'fs6', 159)" onmouseover="showTip(event, 'fs6', 159)" class="i">Continue</span> (<span class="i">step</span> <span class="n">0</span>)

<span class="k">let</span> <span class="k">rec</span> <span class="i">peek</span> <span class="o">=</span>
  <span class="k">let</span> <span class="k">rec</span> <span class="i">step</span> <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs3', 160)" onmouseover="showTip(event, 'fs3', 160)" class="i">Empty</span> | <span onmouseout="hideTip(event, 'fs2', 161)" onmouseover="showTip(event, 'fs2', 161)" class="i">Chunk</span> []  <span class="k">-&gt;</span> <span class="i">peek</span>
    | <span onmouseout="hideTip(event, 'fs2', 162)" onmouseover="showTip(event, 'fs2', 162)" class="i">Chunk</span>(<span class="i">x</span><span class="o">::</span><span class="i">xs</span>) <span class="k">as</span> <span class="i">s</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 163)" onmouseover="showTip(event, 'fs7', 163)" class="i">Yield</span>(<span onmouseout="hideTip(event, 'fs53', 164)" onmouseover="showTip(event, 'fs53', 164)" class="i">Some</span> <span class="i">x</span>, <span class="i">s</span>)
    | <span class="i">s</span>                 <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 165)" onmouseover="showTip(event, 'fs7', 165)" class="i">Yield</span>(<span onmouseout="hideTip(event, 'fs54', 166)" onmouseover="showTip(event, 'fs54', 166)" class="i">None</span>, <span class="i">s</span>)
  <span onmouseout="hideTip(event, 'fs6', 167)" onmouseover="showTip(event, 'fs6', 167)" class="i">Continue</span> <span class="i">step</span>

<span class="k">let</span> <span class="k">rec</span> <span class="i">head</span> <span class="o">=</span>
  <span class="k">let</span> <span class="k">rec</span> <span class="i">step</span> <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs3', 168)" onmouseover="showTip(event, 'fs3', 168)" class="i">Empty</span> | <span onmouseout="hideTip(event, 'fs2', 169)" onmouseover="showTip(event, 'fs2', 169)" class="i">Chunk</span> [] <span class="k">-&gt;</span> <span class="i">head</span>
    | <span onmouseout="hideTip(event, 'fs2', 170)" onmouseover="showTip(event, 'fs2', 170)" class="i">Chunk</span>(<span class="i">x</span><span class="o">::</span><span class="i">xs</span>)     <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 171)" onmouseover="showTip(event, 'fs7', 171)" class="i">Yield</span>(<span onmouseout="hideTip(event, 'fs53', 172)" onmouseover="showTip(event, 'fs53', 172)" class="i">Some</span> <span class="i">x</span>, (<span onmouseout="hideTip(event, 'fs2', 173)" onmouseover="showTip(event, 'fs2', 173)" class="i">Chunk</span> <span class="i">xs</span>))
    | <span onmouseout="hideTip(event, 'fs4', 174)" onmouseover="showTip(event, 'fs4', 174)" class="i">EOF</span>              <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 175)" onmouseover="showTip(event, 'fs7', 175)" class="i">Yield</span>(<span onmouseout="hideTip(event, 'fs54', 176)" onmouseover="showTip(event, 'fs54', 176)" class="i">None</span>, <span onmouseout="hideTip(event, 'fs4', 177)" onmouseover="showTip(event, 'fs4', 177)" class="i">EOF</span>)
  <span onmouseout="hideTip(event, 'fs6', 178)" onmouseover="showTip(event, 'fs6', 178)" class="i">Continue</span> <span class="i">step</span>

<span class="k">let</span> <span class="k">rec</span> <span class="i">drop</span> <span class="i">n</span> <span class="o">=</span>
  <span class="k">let</span> <span class="k">rec</span> <span class="i">step</span> <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs3', 179)" onmouseover="showTip(event, 'fs3', 179)" class="i">Empty</span> | <span onmouseout="hideTip(event, 'fs2', 180)" onmouseover="showTip(event, 'fs2', 180)" class="i">Chunk</span> [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 181)" onmouseover="showTip(event, 'fs6', 181)" class="i">Continue</span> <span class="i">step</span>
    | <span onmouseout="hideTip(event, 'fs2', 182)" onmouseover="showTip(event, 'fs2', 182)" class="i">Chunk</span> <span class="i">x</span>          <span class="k">-&gt;</span> <span class="i">drop</span> (<span class="i">n</span> <span class="o">-</span> <span class="n">1</span>)
    | <span onmouseout="hideTip(event, 'fs4', 183)" onmouseover="showTip(event, 'fs4', 183)" class="i">EOF</span>         <span class="k">as</span> <span class="i">s</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 184)" onmouseover="showTip(event, 'fs7', 184)" class="i">Yield</span>((), <span class="i">s</span>)
  <span class="k">if</span> <span class="i">n</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs7', 185)" onmouseover="showTip(event, 'fs7', 185)" class="i">Yield</span>((), <span onmouseout="hideTip(event, 'fs3', 186)" onmouseover="showTip(event, 'fs3', 186)" class="i">Empty</span>) <span class="k">else</span> <span onmouseout="hideTip(event, 'fs6', 187)" onmouseover="showTip(event, 'fs6', 187)" class="i">Continue</span> <span class="i">step</span>

<span class="k">let</span> <span class="i">split</span> (<span class="i">pred</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs55', 188)" onmouseover="showTip(event, 'fs55', 188)" class="i">char</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs56', 189)" onmouseover="showTip(event, 'fs56', 189)" class="i">bool</span>) <span class="o">=</span>
  <span class="k">let</span> <span class="k">rec</span> <span class="i">step</span> <span class="i">before</span> <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs3', 190)" onmouseover="showTip(event, 'fs3', 190)" class="i">Empty</span> | <span onmouseout="hideTip(event, 'fs2', 191)" onmouseover="showTip(event, 'fs2', 191)" class="i">Chunk</span> [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 192)" onmouseover="showTip(event, 'fs6', 192)" class="i">Continue</span> (<span class="i">step</span> <span class="i">before</span>)
    | <span onmouseout="hideTip(event, 'fs2', 193)" onmouseover="showTip(event, 'fs2', 193)" class="i">Chunk</span> <span class="i">str</span> <span class="k">-&gt;</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs57', 194)" onmouseover="showTip(event, 'fs57', 194)" class="i">List</span><span class="o">.</span><span class="i">split</span> <span class="i">pred</span> <span class="i">str</span> <span class="k">with</span>
        | (_,[]) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 195)" onmouseover="showTip(event, 'fs6', 195)" class="i">Continue</span> (<span class="i">step</span> (<span class="i">before</span> <span class="o">@</span> <span class="i">str</span>))
        | (<span class="i">str</span>,<span class="i">tail</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 196)" onmouseover="showTip(event, 'fs7', 196)" class="i">Yield</span>((<span class="i">before</span> <span class="o">@</span> <span class="i">str</span>), <span onmouseout="hideTip(event, 'fs2', 197)" onmouseover="showTip(event, 'fs2', 197)" class="i">Chunk</span> <span class="i">tail</span>)
    | <span class="i">s</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 198)" onmouseover="showTip(event, 'fs7', 198)" class="i">Yield</span>(<span class="i">before</span>, <span class="i">s</span>)
  <span onmouseout="hideTip(event, 'fs6', 199)" onmouseover="showTip(event, 'fs6', 199)" class="i">Continue</span> (<span class="i">step</span> [])

<span class="k">let</span> <span class="i">heads</span> <span class="i">str</span> <span class="o">=</span>
  <span class="k">let</span> <span class="k">rec</span> <span class="i">loop</span> <span class="i">count</span> <span class="i">str</span> <span class="o">=</span>
    <span class="k">match</span> <span class="i">count</span>, <span class="i">str</span> <span class="k">with</span>
    | (<span class="i">count</span>, []) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 200)" onmouseover="showTip(event, 'fs7', 200)" class="i">Yield</span>(<span class="i">count</span>, <span onmouseout="hideTip(event, 'fs4', 201)" onmouseover="showTip(event, 'fs4', 201)" class="i">EOF</span>)
    | (<span class="i">count</span>, <span class="i">str</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 202)" onmouseover="showTip(event, 'fs6', 202)" class="i">Continue</span> (<span class="i">step</span> <span class="i">count</span> <span class="i">str</span>)
  <span class="k">and</span> <span class="i">step</span> <span class="i">count</span> <span class="i">str</span> <span class="i">s</span> <span class="o">=</span>
    <span class="k">let</span> <span class="i">str</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs57', 203)" onmouseover="showTip(event, 'fs57', 203)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 204)" onmouseover="showTip(event, 'fs58', 204)" class="i">ofSeq</span> <span class="i">str</span>
    <span class="k">match</span> <span class="i">str</span>, <span class="i">s</span> <span class="k">with</span>
    | <span class="i">str</span>, <span onmouseout="hideTip(event, 'fs3', 205)" onmouseover="showTip(event, 'fs3', 205)" class="i">Empty</span> <span class="k">-&gt;</span> <span class="i">loop</span> <span class="i">count</span> <span class="i">str</span>
    | <span class="i">str</span>, (<span onmouseout="hideTip(event, 'fs2', 206)" onmouseover="showTip(event, 'fs2', 206)" class="i">Chunk</span> []) <span class="k">-&gt;</span> <span class="i">loop</span> <span class="i">count</span> <span class="i">str</span>
    | <span class="i">c</span><span class="o">::</span><span class="i">t</span>, (<span onmouseout="hideTip(event, 'fs2', 207)" onmouseover="showTip(event, 'fs2', 207)" class="i">Chunk</span> (<span class="i">c&#39;</span><span class="o">::</span><span class="i">t&#39;</span>)) <span class="k">-&gt;</span>
        <span class="k">if</span> <span class="i">c</span> <span class="o">=</span> <span class="i">c&#39;</span> <span class="k">then</span> <span class="i">step</span> (<span class="i">count</span> <span class="o">+</span> <span class="n">1</span>) <span class="i">t</span> (<span onmouseout="hideTip(event, 'fs2', 208)" onmouseover="showTip(event, 'fs2', 208)" class="i">Chunk</span> <span class="i">t&#39;</span>) 
        <span class="k">else</span> <span onmouseout="hideTip(event, 'fs7', 209)" onmouseover="showTip(event, 'fs7', 209)" class="i">Yield</span>(<span class="i">count</span>, (<span onmouseout="hideTip(event, 'fs2', 210)" onmouseover="showTip(event, 'fs2', 210)" class="i">Chunk</span> (<span class="i">c&#39;</span><span class="o">::</span><span class="i">t&#39;</span>)))
    | _, <span class="i">s</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 211)" onmouseover="showTip(event, 'fs7', 211)" class="i">Yield</span>(<span class="i">count</span>, <span class="i">s</span>)
  <span class="i">loop</span> <span class="n">0</span> <span class="i">str</span>

<span class="k">let</span> <span class="i">readLines</span> <span class="o">=</span>
  <span class="k">let</span> <span class="i">toString</span> <span class="i">chars</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs59', 212)" onmouseover="showTip(event, 'fs59', 212)" class="i">String</span>(<span onmouseout="hideTip(event, 'fs60', 213)" onmouseover="showTip(event, 'fs60', 213)" class="i">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 214)" onmouseover="showTip(event, 'fs61', 214)" class="i">ofList</span> <span class="i">chars</span>)
  <span class="k">let</span> <span class="i">crlf</span> <span class="o">=</span> [<span class="s">&#39;\r&#39;</span>;<span class="s">&#39;\n&#39;</span>]
  <span class="k">let</span> <span class="i">lf</span> <span class="o">=</span> [<span class="s">&#39;\n&#39;</span>]
  <span class="k">let</span> <span class="i">isNewline</span> <span class="i">c</span> <span class="o">=</span> <span class="i">c</span> <span class="o">=</span> <span class="s">&#39;\r&#39;</span> <span class="o">||</span> <span class="i">c</span> <span class="o">=</span> <span class="s">&#39;\n&#39;</span>
  <span class="k">let</span> <span class="i">terminators</span> <span class="o">=</span> <span class="i">heads</span> <span class="i">crlf</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> <span class="i">n</span> <span class="k">-&gt;</span> <span class="k">if</span> <span class="i">n</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span> <span class="i">heads</span> <span class="i">lf</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs7', 215)" onmouseover="showTip(event, 'fs7', 215)" class="i">Yield</span>(<span class="i">n</span>, <span onmouseout="hideTip(event, 'fs3', 216)" onmouseover="showTip(event, 'fs3', 216)" class="i">Empty</span>)
  <span class="k">let</span> <span class="k">rec</span> <span class="i">lines</span> <span class="i">acc</span> <span class="o">=</span> <span class="i">split</span> <span class="i">isNewline</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> <span class="i">l</span> <span class="k">-&gt;</span> <span class="i">terminators</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="i">check</span> <span class="i">acc</span> <span class="i">l</span>
  <span class="k">and</span> <span class="i">check</span> <span class="i">acc</span> <span class="i">l</span> <span class="i">count</span> <span class="o">=</span>
    <span class="k">match</span> <span class="i">l</span>, <span class="i">count</span> <span class="k">with</span>
    | [], _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 217)" onmouseover="showTip(event, 'fs7', 217)" class="i">Yield</span> (<span onmouseout="hideTip(event, 'fs47', 218)" onmouseover="showTip(event, 'fs47', 218)" class="i">Choice2Of2</span> (<span onmouseout="hideTip(event, 'fs57', 219)" onmouseover="showTip(event, 'fs57', 219)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 220)" onmouseover="showTip(event, 'fs62', 220)" class="i">rev</span> <span class="i">acc</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 221)" onmouseover="showTip(event, 'fs57', 221)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 222)" onmouseover="showTip(event, 'fs63', 222)" class="i">map</span> <span class="i">toString</span>), <span onmouseout="hideTip(event, 'fs4', 223)" onmouseover="showTip(event, 'fs4', 223)" class="i">EOF</span>)
    | <span class="i">l</span>, <span class="n">0</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 224)" onmouseover="showTip(event, 'fs7', 224)" class="i">Yield</span> (<span onmouseout="hideTip(event, 'fs46', 225)" onmouseover="showTip(event, 'fs46', 225)" class="i">Choice1Of2</span> (<span onmouseout="hideTip(event, 'fs57', 226)" onmouseover="showTip(event, 'fs57', 226)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 227)" onmouseover="showTip(event, 'fs62', 227)" class="i">rev</span> <span class="i">acc</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 228)" onmouseover="showTip(event, 'fs57', 228)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 229)" onmouseover="showTip(event, 'fs63', 229)" class="i">map</span> <span class="i">toString</span>), <span onmouseout="hideTip(event, 'fs2', 230)" onmouseover="showTip(event, 'fs2', 230)" class="i">Chunk</span> <span class="i">l</span>)
    | <span class="i">l</span>, _ <span class="k">-&gt;</span> <span class="i">lines</span> (<span class="i">l</span><span class="o">::</span><span class="i">acc</span>)
  <span class="i">lines</span> []
</code></pre></td>
</tr>
</table>
<h2><a name="Sample-enumerators" class="anchor" href="#Sample-enumerators">Sample enumerators</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">//val enumerate :: &#39;a list -&gt; Enumerator&lt;&#39;a list,&#39;b&gt;</span>
<span class="k">let</span> <span class="k">rec</span> <span class="i">enumerate</span> <span class="i">input</span> <span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs44', 231)" onmouseover="showTip(event, 'fs44', 231)" class="i">i</span> <span class="k">-&gt;</span>
  <span class="k">match</span> <span class="i">input</span>, <span onmouseout="hideTip(event, 'fs44', 232)" onmouseover="showTip(event, 'fs44', 232)" class="i">i</span> <span class="k">with</span>
  | [], <span onmouseout="hideTip(event, 'fs6', 233)" onmouseover="showTip(event, 'fs6', 233)" class="i">Continue</span> <span class="i">k</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 234)" onmouseover="showTip(event, 'fs6', 234)" class="i">Continue</span> <span class="i">k</span>
  | (<span class="i">x</span><span class="o">::</span><span class="i">xs</span>), <span onmouseout="hideTip(event, 'fs6', 235)" onmouseover="showTip(event, 'fs6', 235)" class="i">Continue</span> <span class="i">k</span> <span class="k">-&gt;</span> <span class="i">enumerate</span> <span class="i">xs</span> (<span class="i">k</span> (<span onmouseout="hideTip(event, 'fs2', 236)" onmouseover="showTip(event, 'fs2', 236)" class="i">Chunk</span> [<span class="i">x</span>]))
  | _, <span onmouseout="hideTip(event, 'fs44', 237)" onmouseover="showTip(event, 'fs44', 237)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs44', 238)" onmouseover="showTip(event, 'fs44', 238)" class="i">i</span>

<span class="c">// val enumeratePure1Chunk :: &#39;a list -&gt; Enumerator&lt;&#39;a list,&#39;b&gt;</span>
<span class="k">let</span> <span class="i">enumeratePure1Chunk</span> (<span class="i">str</span><span class="o">:</span><span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs51', 239)" onmouseover="showTip(event, 'fs51', 239)" class="i">list</span>) <span class="o">=</span> <span class="k">function</span>
  | <span onmouseout="hideTip(event, 'fs6', 240)" onmouseover="showTip(event, 'fs6', 240)" class="i">Continue</span> <span class="i">k</span> <span class="k">-&gt;</span> <span class="i">k</span> (<span onmouseout="hideTip(event, 'fs2', 241)" onmouseover="showTip(event, 'fs2', 241)" class="i">Chunk</span> <span class="i">str</span>)
  | <span onmouseout="hideTip(event, 'fs44', 242)" onmouseover="showTip(event, 'fs44', 242)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs44', 243)" onmouseover="showTip(event, 'fs44', 243)" class="i">i</span>

<span class="c">// val enumeratePureNChunk :: &#39;a list -&gt; int -&gt; Enumerator&lt;&#39;a list,&#39;b&gt;</span>
<span class="k">let</span> <span class="k">rec</span> <span class="i">enumeratePureNChunk</span> <span class="i">str</span> <span class="i">n</span> <span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs44', 244)" onmouseover="showTip(event, 'fs44', 244)" class="i">i</span> <span class="k">-&gt;</span>
  <span class="k">match</span> <span class="i">str</span>, <span onmouseout="hideTip(event, 'fs44', 245)" onmouseover="showTip(event, 'fs44', 245)" class="i">i</span> <span class="k">with</span>
  | _<span class="o">::</span>_, <span onmouseout="hideTip(event, 'fs6', 246)" onmouseover="showTip(event, 'fs6', 246)" class="i">Continue</span> <span class="i">k</span> <span class="k">-&gt;</span>
      <span class="k">let</span> (<span class="i">s1</span>, <span class="i">s2</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs57', 247)" onmouseover="showTip(event, 'fs57', 247)" class="i">List</span><span class="o">.</span><span class="i">splitAt</span> <span class="i">n</span> <span class="i">str</span>
      <span class="i">enumeratePureNChunk</span> <span class="i">s2</span> <span class="i">n</span> (<span class="i">k</span> (<span onmouseout="hideTip(event, 'fs2', 248)" onmouseover="showTip(event, 'fs2', 248)" class="i">Chunk</span> <span class="i">s1</span>))
  | _, <span onmouseout="hideTip(event, 'fs44', 249)" onmouseover="showTip(event, 'fs44', 249)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs44', 250)" onmouseover="showTip(event, 'fs44', 250)" class="i">i</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">type Stream&lt;&#39;a&gt; =<br />&#160;&#160;| Chunk of &#39;a<br />&#160;&#160;| Empty<br />&#160;&#160;| EOF<br /><br />Full name: FSharp.Monad.Iteratee.Core.Stream&lt;_&gt;<br /><em><br /><br />&#160;A stream of chunks of data generated by an Enumerator.<br />&#160;The stream can be composed of chunks of &#39;a, empty blocks indicating a wait, or an EOF marker.<br />&#160;In Haskell, the Chunk is usually composed of a list of ListLike type, but F# doesn&#39;t support<br />&#160;Monad Transforms or ^M in type declarations. Thus, the Chunk is left open to various internal<br />&#160;types, but a bit more work must be done in order to maintain the meaningfulness of &quot;chunk&quot;.<br />&#160;That said, the &#39;a allows a large number of chunk-y types to be used, including other monads.<br />&#160;Be aware that when using #seq&lt;_&gt; types, you will need to check for both Seq.empty ([]) and Empty.</em></div>
<div class="tip" id="fs2">union case Stream.Chunk: &#39;a -&gt; Stream&lt;&#39;a&gt;</div>
<div class="tip" id="fs3">union case Stream.Empty: Stream&lt;&#39;a&gt;</div>
<div class="tip" id="fs4">union case Stream.EOF: Stream&lt;&#39;a&gt;</div>
<div class="tip" id="fs5">type Iteratee&lt;&#39;el,&#39;acc&gt; =<br />&#160;&#160;| Continue of (Stream&lt;&#39;el&gt; -&gt; Iteratee&lt;&#39;el,&#39;acc&gt;)<br />&#160;&#160;| Yield of &#39;acc * Stream&lt;&#39;el&gt;<br />&#160;&#160;| Error of exn<br /><br />Full name: FSharp.Monad.Iteratee.Core.Iteratee&lt;_,_&gt;<br /><em><br /><br />&#160;The iteratee is a stream consumer that will consume a stream of data until either <br />&#160;it receives an EOF or meets its own requirements for consuming data. The iteratee<br />&#160;will return Continue whenever it is ready to receive the next chunk. An iteratee<br />&#160;is fed data by an Enumerator, which generates a Stream. </em></div>
<div class="tip" id="fs6">union case Iteratee.Continue: (Stream&lt;&#39;el&gt; -&gt; Iteratee&lt;&#39;el,&#39;acc&gt;) -&gt; Iteratee&lt;&#39;el,&#39;acc&gt;</div>
<div class="tip" id="fs7">union case Iteratee.Yield: &#39;acc * Stream&lt;&#39;el&gt; -&gt; Iteratee&lt;&#39;el,&#39;acc&gt;</div>
<div class="tip" id="fs8">union case Iteratee.Error: exn -&gt; Iteratee&lt;&#39;el,&#39;acc&gt;</div>
<div class="tip" id="fs9">type exn = System.Exception<br /><br />Full name: Microsoft.FSharp.Core.exn</div>
<div class="tip" id="fs10">type Enumerator&lt;&#39;el,&#39;acc&gt; = Iteratee&lt;&#39;el,&#39;acc&gt; -&gt; Iteratee&lt;&#39;el,&#39;acc&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.Enumerator&lt;_,_&gt;<br /><em><br /><br />&#160;An enumerator generates a stream of data and feeds an iteratee, returning a new iteratee.</em></div>
<div class="tip" id="fs11">type Enumeratee&lt;&#39;elo,&#39;eli,&#39;acc&gt; = Iteratee&lt;&#39;eli,&#39;acc&gt; -&gt; Iteratee&lt;&#39;elo,Iteratee&lt;&#39;eli,&#39;acc&gt;&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.Enumeratee&lt;_,_,_&gt;<br /><em><br /><br />&#160;An Enumeratee is an Enumerator that feeds data streams to an internal iteratee.</em></div>
<div class="tip" id="fs12">val bind : m:Iteratee&lt;&#39;a,&#39;b&gt; -&gt; f:(&#39;b -&gt; Iteratee&lt;&#39;a,&#39;c&gt;) -&gt; Iteratee&lt;&#39;a,&#39;c&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.bind</div>
<div class="tip" id="fs13">val m : Iteratee&lt;&#39;a,&#39;b&gt;</div>
<div class="tip" id="fs14">val f : (&#39;b -&gt; Iteratee&lt;&#39;a,&#39;c&gt;)</div>
<div class="tip" id="fs15">val k : (Stream&lt;&#39;a&gt; -&gt; Iteratee&lt;&#39;a,&#39;b&gt;)</div>
<div class="tip" id="fs16">val s : Stream&lt;&#39;a&gt;</div>
<div class="tip" id="fs17">val e : exn</div>
<div class="tip" id="fs18">val x : &#39;b</div>
<div class="tip" id="fs19">val extra : Stream&lt;&#39;a&gt;</div>
<div class="tip" id="fs20">val k : (Stream&lt;&#39;a&gt; -&gt; Iteratee&lt;&#39;a,&#39;c&gt;)</div>
<div class="tip" id="fs21">val acc&#39; : &#39;c</div>
<div class="tip" id="fs22">val combine : comp1:Iteratee&lt;&#39;a,unit&gt; -&gt; comp2:Iteratee&lt;&#39;a,&#39;b&gt; -&gt; Iteratee&lt;&#39;a,&#39;b&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.combine</div>
<div class="tip" id="fs23">val comp1 : Iteratee&lt;&#39;a,unit&gt;</div>
<div class="tip" id="fs24">val comp2 : Iteratee&lt;&#39;a,&#39;b&gt;</div>
<div class="tip" id="fs25">val binder : (unit -&gt; Iteratee&lt;&#39;a,&#39;b&gt;)</div>
<div class="tip" id="fs26">Multiple items<br />type IterateeBuilder =<br />&#160;&#160;new : unit -&gt; IterateeBuilder<br />&#160;&#160;member Bind : m:Iteratee&lt;&#39;f,&#39;g&gt; * k:(&#39;g -&gt; Iteratee&lt;&#39;f,&#39;h&gt;) -&gt; Iteratee&lt;&#39;f,&#39;h&gt;<br />&#160;&#160;member Combine : comp1:Iteratee&lt;&#39;c,unit&gt; * comp2:Iteratee&lt;&#39;c,&#39;d&gt; -&gt; Iteratee&lt;&#39;c,&#39;d&gt;<br />&#160;&#160;member Delay : f:(unit -&gt; Iteratee&lt;&#39;a,&#39;b&gt;) -&gt; Iteratee&lt;&#39;a,&#39;b&gt;<br />&#160;&#160;member Return : x:&#39;k -&gt; Iteratee&lt;&#39;l,&#39;k&gt;<br />&#160;&#160;member ReturnFrom : m:Iteratee&lt;&#39;i,&#39;j&gt; -&gt; Iteratee&lt;&#39;i,&#39;j&gt;<br />&#160;&#160;member Zero : unit -&gt; Iteratee&lt;&#39;e,unit&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.IterateeBuilder<br /><br />--------------------<br />new : unit -&gt; IterateeBuilder</div>
<div class="tip" id="fs27">val this : IterateeBuilder</div>
<div class="tip" id="fs28">member IterateeBuilder.Return : x:&#39;k -&gt; Iteratee&lt;&#39;l,&#39;k&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.IterateeBuilder.Return</div>
<div class="tip" id="fs29">val x : &#39;k</div>
<div class="tip" id="fs30">member IterateeBuilder.ReturnFrom : m:Iteratee&lt;&#39;i,&#39;j&gt; -&gt; Iteratee&lt;&#39;i,&#39;j&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.IterateeBuilder.ReturnFrom</div>
<div class="tip" id="fs31">val m : Iteratee&lt;&#39;i,&#39;j&gt;</div>
<div class="tip" id="fs32">member IterateeBuilder.Bind : m:Iteratee&lt;&#39;f,&#39;g&gt; * k:(&#39;g -&gt; Iteratee&lt;&#39;f,&#39;h&gt;) -&gt; Iteratee&lt;&#39;f,&#39;h&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.IterateeBuilder.Bind</div>
<div class="tip" id="fs33">val m : Iteratee&lt;&#39;f,&#39;g&gt;</div>
<div class="tip" id="fs34">val k : (&#39;g -&gt; Iteratee&lt;&#39;f,&#39;h&gt;)</div>
<div class="tip" id="fs35">member IterateeBuilder.Zero : unit -&gt; Iteratee&lt;&#39;e,unit&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.IterateeBuilder.Zero</div>
<div class="tip" id="fs36">member IterateeBuilder.Combine : comp1:Iteratee&lt;&#39;c,unit&gt; * comp2:Iteratee&lt;&#39;c,&#39;d&gt; -&gt; Iteratee&lt;&#39;c,&#39;d&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.IterateeBuilder.Combine</div>
<div class="tip" id="fs37">val comp1 : Iteratee&lt;&#39;c,unit&gt;</div>
<div class="tip" id="fs38">val comp2 : Iteratee&lt;&#39;c,&#39;d&gt;</div>
<div class="tip" id="fs39">member IterateeBuilder.Delay : f:(unit -&gt; Iteratee&lt;&#39;a,&#39;b&gt;) -&gt; Iteratee&lt;&#39;a,&#39;b&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.IterateeBuilder.Delay</div>
<div class="tip" id="fs40">val f : (unit -&gt; Iteratee&lt;&#39;a,&#39;b&gt;)</div>
<div class="tip" id="fs41">val iteratee : IterateeBuilder<br /><br />Full name: FSharp.Monad.Iteratee.Core.iteratee</div>
<div class="tip" id="fs42">val enumEOF : _arg1:Iteratee&lt;&#39;a,&#39;b&gt; -&gt; Iteratee&lt;&#39;c,&#39;b&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.enumEOF</div>
<div class="tip" id="fs43">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs44">val i : Iteratee&lt;&#39;a,&#39;b&gt;</div>
<div class="tip" id="fs45">val run : i:Iteratee&lt;&#39;a,&#39;b&gt; -&gt; Choice&lt;exn,&#39;b&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.run</div>
<div class="tip" id="fs46">union case Choice.Choice1Of2: &#39;T1 -&gt; Choice&lt;&#39;T1,&#39;T2&gt;</div>
<div class="tip" id="fs47">union case Choice.Choice2Of2: &#39;T2 -&gt; Choice&lt;&#39;T1,&#39;T2&gt;</div>
<div class="tip" id="fs48">val run_ : i:Iteratee&lt;&#39;a,&#39;b&gt; -&gt; Choice&lt;exn,&#39;b&gt;<br /><br />Full name: FSharp.Monad.Iteratee.Core.run_</div>
<div class="tip" id="fs49">val raise : exn:System.Exception -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.raise</div>
<div class="tip" id="fs50">val x : Choice&lt;exn,&#39;b&gt;</div>
<div class="tip" id="fs51">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs52">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs53">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs54">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs55">Multiple items<br />val char : value:&#39;T -&gt; char (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.char<br /><br />--------------------<br />type char = System.Char<br /><br />Full name: Microsoft.FSharp.Core.char</div>
<div class="tip" id="fs56">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs57">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs58">val ofSeq : source:seq&lt;&#39;T&gt; -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.ofSeq</div>
<div class="tip" id="fs59">module String<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs60">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs61">val ofList : list:&#39;T list -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.ofList</div>
<div class="tip" id="fs62">val rev : list:&#39;T list -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.rev</div>
<div class="tip" id="fs63">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>

