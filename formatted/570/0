<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">Serializer</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">Tests</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">Serializer</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">IO</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">Text</span>

<span class="k">let</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="f">test</span> <span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="i">datum</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">stream</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="t">MemoryStream</span>()
    <span class="i">serialize</span> <span onmouseout="hideTip(event, 'fs7', 13)" onmouseover="showTip(event, 'fs7', 13)" class="i">datum</span> <span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="i">stream</span>
    <span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="i">stream</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="i">Position</span> <span class="o">&lt;-</span> <span class="n">0L</span>
    <span class="i">deserialize</span> <span onmouseout="hideTip(event, 'fs8', 17)" onmouseover="showTip(event, 'fs8', 17)" class="i">stream</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s"> = </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs7', 19)" onmouseover="showTip(event, 'fs7', 19)" class="i">datum</span>

<span class="k">let</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs12', 20)" onmouseover="showTip(event, 'fs12', 20)" class="f">caption</span> <span onmouseout="hideTip(event, 'fs13', 21)" onmouseover="showTip(event, 'fs13', 21)" class="i">string</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 22)" onmouseover="showTip(event, 'fs11', 22)" class="f">printfn</span> <span class="s">&quot;-- </span><span class="pf">%s</span><span class="s"> --&quot;</span> <span onmouseout="hideTip(event, 'fs13', 23)" onmouseover="showTip(event, 'fs13', 23)" class="i">string</span>

<span onmouseout="hideTip(event, 'fs12', 24)" onmouseover="showTip(event, 'fs12', 24)" class="f">caption</span> <span class="s">&quot;simple discriminated union test&quot;</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs14', 25)" onmouseover="showTip(event, 'fs14', 25)" class="t">SimpleDU</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs15', 26)" onmouseover="showTip(event, 'fs15', 26)" class="p">One</span>
    | <span onmouseout="hideTip(event, 'fs16', 27)" onmouseover="showTip(event, 'fs16', 27)" class="p">Two</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="t">int</span>
    | <span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="p">Three</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs17', 30)" onmouseover="showTip(event, 'fs17', 30)" class="t">int</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="t">string</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs20', 32)" onmouseover="showTip(event, 'fs20', 32)" class="t">float</span>

<span onmouseout="hideTip(event, 'fs6', 33)" onmouseover="showTip(event, 'fs6', 33)" class="f">test</span> <span class="p">One</span>
<span onmouseout="hideTip(event, 'fs6', 34)" onmouseover="showTip(event, 'fs6', 34)" class="f">test</span> <span class="o">&lt;|</span> <span class="p">Two</span>(<span class="n">42</span>)
<span onmouseout="hideTip(event, 'fs6', 35)" onmouseover="showTip(event, 'fs6', 35)" class="f">test</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs18', 36)" onmouseover="showTip(event, 'fs18', 36)" class="p">Three</span>(<span class="n">69</span>, <span class="s">&quot;bleh&quot;</span>, <span class="n">37.0101</span>)

<span onmouseout="hideTip(event, 'fs12', 37)" onmouseover="showTip(event, 'fs12', 37)" class="f">caption</span> <span class="s">&quot;simple discriminated union test with generic arguments&quot;</span>

<span class="k">type</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs21', 38)" onmouseover="showTip(event, 'fs21', 38)" class="t">GenericContainer</span>(<span onmouseout="hideTip(event, 'fs22', 39)" onmouseover="showTip(event, 'fs22', 39)" class="i">foo</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>) <span class="o">=</span>
    <span class="k">member</span> <span class="k">val</span> <span onmouseout="hideTip(event, 'fs22', 40)" onmouseover="showTip(event, 'fs22', 40)" class="v">foo</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 41)" onmouseover="showTip(event, 'fs22', 41)" class="v">foo</span> <span class="k">with</span> <span class="i">get</span>, <span onmouseout="hideTip(event, 'fs23', 42)" onmouseover="showTip(event, 'fs23', 42)" class="i">set</span>
    <span class="k">private</span> <span class="k">new</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 43)" onmouseover="showTip(event, 'fs21', 43)" class="t">GenericContainer</span>(<span onmouseout="hideTip(event, 'fs24', 44)" onmouseover="showTip(event, 'fs24', 44)" class="t">Unchecked</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 45)" onmouseover="showTip(event, 'fs25', 45)" class="i">defaultof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>)
    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs26', 46)" onmouseover="showTip(event, 'fs26', 46)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 47)" onmouseover="showTip(event, 'fs27', 47)" class="f">ToString</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 48)" onmouseover="showTip(event, 'fs22', 48)" class="i">foo</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 49)" onmouseover="showTip(event, 'fs28', 49)" class="f">ToString</span>()

<span class="k">type</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs29', 50)" onmouseover="showTip(event, 'fs29', 50)" class="t">AnotherGenericContainer</span>(<span onmouseout="hideTip(event, 'fs30', 51)" onmouseover="showTip(event, 'fs30', 51)" class="i">bar</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>) <span class="o">=</span>
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs31', 52)" onmouseover="showTip(event, 'fs31', 52)" class="t">GenericContainer</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>(<span class="i">bar</span>)
    <span class="k">private</span> <span class="k">new</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 53)" onmouseover="showTip(event, 'fs29', 53)" class="t">AnotherGenericContainer</span>(<span onmouseout="hideTip(event, 'fs24', 54)" onmouseover="showTip(event, 'fs24', 54)" class="t">Unchecked</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 55)" onmouseover="showTip(event, 'fs25', 55)" class="i">defaultof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>)

<span class="k">type</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs32', 56)" onmouseover="showTip(event, 'fs32', 56)" class="t">SimpleGenericDU</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs33', 57)" onmouseover="showTip(event, 'fs33', 57)" class="p">One</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs31', 58)" onmouseover="showTip(event, 'fs31', 58)" class="t">GenericContainer</span>
    | <span onmouseout="hideTip(event, 'fs34', 59)" onmouseover="showTip(event, 'fs34', 59)" class="p">Two</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs17', 60)" onmouseover="showTip(event, 'fs17', 60)" class="t">int</span> <span onmouseout="hideTip(event, 'fs31', 61)" onmouseover="showTip(event, 'fs31', 61)" class="t">GenericContainer</span>
    | <span onmouseout="hideTip(event, 'fs35', 62)" onmouseover="showTip(event, 'fs35', 62)" class="p">Three</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs36', 63)" onmouseover="showTip(event, 'fs36', 63)" class="t">AnotherGenericContainer</span>
    | <span onmouseout="hideTip(event, 'fs37', 64)" onmouseover="showTip(event, 'fs37', 64)" class="p">Four</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs19', 65)" onmouseover="showTip(event, 'fs19', 65)" class="t">string</span> <span onmouseout="hideTip(event, 'fs36', 66)" onmouseover="showTip(event, 'fs36', 66)" class="t">AnotherGenericContainer</span>

<span onmouseout="hideTip(event, 'fs6', 67)" onmouseover="showTip(event, 'fs6', 67)" class="f">test</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs15', 68)" onmouseover="showTip(event, 'fs15', 68)" class="p">One</span>(<span class="k">new</span> <span onmouseout="hideTip(event, 'fs31', 69)" onmouseover="showTip(event, 'fs31', 69)" class="t">GenericContainer</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs20', 70)" onmouseover="showTip(event, 'fs20', 70)" class="t">float</span><span class="o">&gt;</span>(<span class="n">42.69</span>))
<span onmouseout="hideTip(event, 'fs6', 71)" onmouseover="showTip(event, 'fs6', 71)" class="f">test</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs16', 72)" onmouseover="showTip(event, 'fs16', 72)" class="p">Two</span>(<span class="k">new</span> <span onmouseout="hideTip(event, 'fs31', 73)" onmouseover="showTip(event, 'fs31', 73)" class="t">GenericContainer</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs17', 74)" onmouseover="showTip(event, 'fs17', 74)" class="t">int</span><span class="o">&gt;</span>(<span class="n">37</span>))
<span onmouseout="hideTip(event, 'fs6', 75)" onmouseover="showTip(event, 'fs6', 75)" class="f">test</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs18', 76)" onmouseover="showTip(event, 'fs18', 76)" class="p">Three</span>(<span class="k">new</span> <span onmouseout="hideTip(event, 'fs36', 77)" onmouseover="showTip(event, 'fs36', 77)" class="t">AnotherGenericContainer</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs19', 78)" onmouseover="showTip(event, 'fs19', 78)" class="t">string</span><span class="o">&gt;</span>(<span class="s">&quot;r00fles!&quot;</span>))
<span onmouseout="hideTip(event, 'fs6', 79)" onmouseover="showTip(event, 'fs6', 79)" class="f">test</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs37', 80)" onmouseover="showTip(event, 'fs37', 80)" class="p">Four</span>(<span class="k">new</span> <span onmouseout="hideTip(event, 'fs36', 81)" onmouseover="showTip(event, 'fs36', 81)" class="t">AnotherGenericContainer</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs19', 82)" onmouseover="showTip(event, 'fs19', 82)" class="t">string</span><span class="o">&gt;</span>(<span class="s">&quot;meow&quot;</span>))

<span onmouseout="hideTip(event, 'fs12', 83)" onmouseover="showTip(event, 'fs12', 83)" class="f">caption</span> <span class="s">&quot;discriminated union tree&quot;</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs38', 84)" onmouseover="showTip(event, 'fs38', 84)" class="t">Datum</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs39', 85)" onmouseover="showTip(event, 'fs39', 85)" class="p">Cons</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs38', 86)" onmouseover="showTip(event, 'fs38', 86)" class="t">Datum</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs38', 87)" onmouseover="showTip(event, 'fs38', 87)" class="t">Datum</span>
    | <span onmouseout="hideTip(event, 'fs40', 88)" onmouseover="showTip(event, 'fs40', 88)" class="p">Symbol</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs19', 89)" onmouseover="showTip(event, 'fs19', 89)" class="t">string</span>
    | <span onmouseout="hideTip(event, 'fs41', 90)" onmouseover="showTip(event, 'fs41', 90)" class="p">Nil</span>

<span onmouseout="hideTip(event, 'fs6', 91)" onmouseover="showTip(event, 'fs6', 91)" class="f">test</span> <span class="o">&lt;|</span> <span class="p">Cons</span>(<span class="p">Symbol</span>(<span class="s">&quot;Java&quot;</span>), <span class="p">Cons</span>(<span class="p">Symbol</span>(<span class="s">&quot;sucks&quot;</span>), <span class="p">Cons</span>(<span class="p">Symbol</span>(<span class="s">&quot;bigtime&quot;</span>), <span onmouseout="hideTip(event, 'fs41', 92)" onmouseover="showTip(event, 'fs41', 92)" class="p">Nil</span>)))

<span onmouseout="hideTip(event, 'fs42', 93)" onmouseover="showTip(event, 'fs42', 93)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 94)" onmouseover="showTip(event, 'fs43', 94)" class="f">ReadLine</span> () <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs44', 95)" onmouseover="showTip(event, 'fs44', 95)" class="f">ignore</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace Serializer</div>
<div class="tip" id="fs2">module Tests<br /><br />from Serializer</div>
<div class="tip" id="fs3">namespace System</div>
<div class="tip" id="fs4">namespace System.IO</div>
<div class="tip" id="fs5">namespace System.Text</div>
<div class="tip" id="fs6">val private test : datum:&#39;a -&gt; unit<br /><br />Full name: Serializer.Tests.test</div>
<div class="tip" id="fs7">val datum : &#39;a</div>
<div class="tip" id="fs8">val stream : MemoryStream</div>
<div class="tip" id="fs9">Multiple items<br />type MemoryStream =<br />&#160;&#160;inherit Stream<br />&#160;&#160;new : unit -&gt; MemoryStream + 6 overloads<br />&#160;&#160;member CanRead : bool<br />&#160;&#160;member CanSeek : bool<br />&#160;&#160;member CanWrite : bool<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member Flush : unit -&gt; unit<br />&#160;&#160;member GetBuffer : unit -&gt; byte[]<br />&#160;&#160;member Length : int64<br />&#160;&#160;member Position : int64 with get, set<br />&#160;&#160;member Read : buffer:byte[] * offset:int * count:int -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.IO.MemoryStream<br /><br />--------------------<br />MemoryStream() : unit<br />MemoryStream(capacity: int) : unit<br />MemoryStream(buffer: byte []) : unit<br />MemoryStream(buffer: byte [], writable: bool) : unit<br />MemoryStream(buffer: byte [], index: int, count: int) : unit<br />MemoryStream(buffer: byte [], index: int, count: int, writable: bool) : unit<br />MemoryStream(buffer: byte [], index: int, count: int, writable: bool, publiclyVisible: bool) : unit</div>
<div class="tip" id="fs10">property MemoryStream.Position: int64</div>
<div class="tip" id="fs11">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs12">val private caption : string:string -&gt; unit<br /><br />Full name: Serializer.Tests.caption</div>
<div class="tip" id="fs13">Multiple items<br />val string : string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs14">type SimpleDU =<br />&#160;&#160;| One<br />&#160;&#160;| Two of int<br />&#160;&#160;| Three of int * string * float<br /><br />Full name: Serializer.Tests.SimpleDU</div>
<div class="tip" id="fs15">union case SimpleDU.One: SimpleDU</div>
<div class="tip" id="fs16">union case SimpleDU.Two: int -&gt; SimpleDU</div>
<div class="tip" id="fs17">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs18">union case SimpleDU.Three: int * string * float -&gt; SimpleDU</div>
<div class="tip" id="fs19">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs20">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs21">Multiple items<br />type &#39;a GenericContainer =<br />&#160;&#160;private new : unit -&gt; &#39;a GenericContainer<br />&#160;&#160;new : foo:&#39;a -&gt; &#39;a GenericContainer<br />&#160;&#160;override ToString : unit -&gt; string<br />&#160;&#160;member foo : &#39;a<br />&#160;&#160;member foo : &#39;a with set<br /><br />Full name: Serializer.Tests.GenericContainer&lt;_&gt;<br /><br />--------------------<br />private new : unit -&gt; &#39;a GenericContainer<br />new : foo:&#39;a -&gt; &#39;a GenericContainer</div>
<div class="tip" id="fs22">val foo : &#39;a</div>
<div class="tip" id="fs23">val set : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.set</div>
<div class="tip" id="fs24">module Unchecked<br /><br />from Microsoft.FSharp.Core.Operators</div>
<div class="tip" id="fs25">val defaultof&lt;&#39;T&gt; : &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.Unchecked.defaultof</div>
<div class="tip" id="fs26">val x : &#39;a GenericContainer</div>
<div class="tip" id="fs27">override GenericContainer.ToString : unit -&gt; string<br /><br />Full name: Serializer.Tests.GenericContainer`1.ToString</div>
<div class="tip" id="fs28">Object.ToString() : string</div>
<div class="tip" id="fs29">Multiple items<br />type &#39;a AnotherGenericContainer =<br />&#160;&#160;inherit &#39;a GenericContainer<br />&#160;&#160;private new : unit -&gt; &#39;a AnotherGenericContainer<br />&#160;&#160;new : bar:&#39;a -&gt; &#39;a AnotherGenericContainer<br /><br />Full name: Serializer.Tests.AnotherGenericContainer&lt;_&gt;<br /><br />--------------------<br />private new : unit -&gt; &#39;a AnotherGenericContainer<br />new : bar:&#39;a -&gt; &#39;a AnotherGenericContainer</div>
<div class="tip" id="fs30">val bar : &#39;a</div>
<div class="tip" id="fs31">Multiple items<br />type &#39;a GenericContainer =<br />&#160;&#160;private new : unit -&gt; &#39;a GenericContainer<br />&#160;&#160;new : foo:&#39;a -&gt; &#39;a GenericContainer<br />&#160;&#160;override ToString : unit -&gt; string<br />&#160;&#160;member foo : &#39;a<br />&#160;&#160;member foo : &#39;a with set<br /><br />Full name: Serializer.Tests.GenericContainer&lt;_&gt;<br /><br />--------------------<br />new : foo:&#39;a -&gt; &#39;a GenericContainer</div>
<div class="tip" id="fs32">type &#39;a SimpleGenericDU =<br />&#160;&#160;| One of &#39;a GenericContainer<br />&#160;&#160;| Two of int GenericContainer<br />&#160;&#160;| Three of &#39;a AnotherGenericContainer<br />&#160;&#160;| Four of string AnotherGenericContainer<br /><br />Full name: Serializer.Tests.SimpleGenericDU&lt;_&gt;</div>
<div class="tip" id="fs33">union case SimpleGenericDU.One: &#39;a GenericContainer -&gt; &#39;a SimpleGenericDU</div>
<div class="tip" id="fs34">union case SimpleGenericDU.Two: int GenericContainer -&gt; &#39;a SimpleGenericDU</div>
<div class="tip" id="fs35">union case SimpleGenericDU.Three: &#39;a AnotherGenericContainer -&gt; &#39;a SimpleGenericDU</div>
<div class="tip" id="fs36">Multiple items<br />type &#39;a AnotherGenericContainer =<br />&#160;&#160;inherit &#39;a GenericContainer<br />&#160;&#160;private new : unit -&gt; &#39;a AnotherGenericContainer<br />&#160;&#160;new : bar:&#39;a -&gt; &#39;a AnotherGenericContainer<br /><br />Full name: Serializer.Tests.AnotherGenericContainer&lt;_&gt;<br /><br />--------------------<br />new : bar:&#39;a -&gt; &#39;a AnotherGenericContainer</div>
<div class="tip" id="fs37">union case SimpleGenericDU.Four: string AnotherGenericContainer -&gt; &#39;a SimpleGenericDU</div>
<div class="tip" id="fs38">type Datum =<br />&#160;&#160;| Cons of Datum * Datum<br />&#160;&#160;| Symbol of string<br />&#160;&#160;| Nil<br /><br />Full name: Serializer.Tests.Datum</div>
<div class="tip" id="fs39">union case Datum.Cons: Datum * Datum -&gt; Datum</div>
<div class="tip" id="fs40">union case Datum.Symbol: string -&gt; Datum</div>
<div class="tip" id="fs41">union case Datum.Nil: Datum</div>
<div class="tip" id="fs42">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs43">Console.ReadLine() : string</div>
<div class="tip" id="fs44">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>

