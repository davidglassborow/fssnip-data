<h2><a name="Simple-exception-analysis" class="anchor" href="#Simple-exception-analysis">Simple exception analysis</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
<span class="l">74: </span>
<span class="l">75: </span>
<span class="l">76: </span>
<span class="l">77: </span>
<span class="l">78: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">Mono</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Reflection</span>
    
<span class="c">/// check for the throw opcode preceded with newobj </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">getThrownException</span> (<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">instr</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">Instruction</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">prev</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="i">instr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">Previous</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs4', 9)" onmouseover="showTip(event, 'fs4', 9)" class="i">instr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">OpCode</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="t">OpCodes</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">Throw</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs6', 13)" onmouseover="showTip(event, 'fs6', 13)" class="i">prev</span> <span class="o">&lt;&gt;</span> <span class="k">null</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs6', 14)" onmouseover="showTip(event, 'fs6', 14)" class="i">prev</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="i">OpCode</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 16)" onmouseover="showTip(event, 'fs9', 16)" class="t">OpCodes</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">Newobj</span> <span class="k">then</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="i">newType</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs6', 19)" onmouseover="showTip(event, 'fs6', 19)" class="i">prev</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="i">Operand</span> <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="t">ConstructorInfo</span>)<span class="o">.</span><span class="i">ReflectedType</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="t">Exception</span><span class="o">&gt;</span><span class="o">.</span><span class="f">IsAssignableFrom</span> <span onmouseout="hideTip(event, 'fs12', 25)" onmouseover="showTip(event, 'fs12', 25)" class="i">newType</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs18', 26)" onmouseover="showTip(event, 'fs18', 26)" class="p">Some</span> (<span onmouseout="hideTip(event, 'fs4', 27)" onmouseover="showTip(event, 'fs4', 27)" class="i">instr</span>, <span onmouseout="hideTip(event, 'fs12', 28)" onmouseover="showTip(event, 'fs12', 28)" class="i">newType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="i">FullName</span>)
        <span class="k">else</span> <span onmouseout="hideTip(event, 'fs20', 30)" onmouseover="showTip(event, 'fs20', 30)" class="p">None</span>
    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs20', 31)" onmouseover="showTip(event, 'fs20', 31)" class="p">None</span>


<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs21', 32)" onmouseover="showTip(event, 'fs21', 32)" class="f">instructionInfo</span> (<span onmouseout="hideTip(event, 'fs22', 33)" onmouseover="showTip(event, 'fs22', 33)" class="i">m</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs23', 34)" onmouseover="showTip(event, 'fs23', 34)" class="t">MethodBase</span>) (<span onmouseout="hideTip(event, 'fs24', 35)" onmouseover="showTip(event, 'fs24', 35)" class="i">i</span>, <span onmouseout="hideTip(event, 'fs25', 36)" onmouseover="showTip(event, 'fs25', 36)" class="i">t</span>) <span onmouseout="hideTip(event, 'fs26', 37)" onmouseover="showTip(event, 'fs26', 37)" class="i">comment</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs27', 38)" onmouseover="showTip(event, 'fs27', 38)" class="f">sprintf</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">-&gt;</span><span class="pf">%s</span><span class="s">: </span><span class="pf">%A</span><span class="s"></span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs22', 39)" onmouseover="showTip(event, 'fs22', 39)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 40)" onmouseover="showTip(event, 'fs28', 40)" class="i">ReflectedType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="i">FullName</span> <span onmouseout="hideTip(event, 'fs22', 42)" onmouseover="showTip(event, 'fs22', 42)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 43)" onmouseover="showTip(event, 'fs29', 43)" class="i">Name</span> <span onmouseout="hideTip(event, 'fs25', 44)" onmouseover="showTip(event, 'fs25', 44)" class="i">t</span> <span onmouseout="hideTip(event, 'fs26', 45)" onmouseover="showTip(event, 'fs26', 45)" class="i">comment</span>

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs30', 46)" onmouseover="showTip(event, 'fs30', 46)" class="f">hasCallOpcode</span> (<span onmouseout="hideTip(event, 'fs31', 47)" onmouseover="showTip(event, 'fs31', 47)" class="i">i</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 48)" onmouseover="showTip(event, 'fs5', 48)" class="t">Instruction</span>) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs31', 49)" onmouseover="showTip(event, 'fs31', 49)" class="i">i</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 50)" onmouseover="showTip(event, 'fs8', 50)" class="i">OpCode</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 51)" onmouseover="showTip(event, 'fs9', 51)" class="t">OpCodes</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 52)" onmouseover="showTip(event, 'fs32', 52)" class="i">Call</span> <span class="o">||</span> <span onmouseout="hideTip(event, 'fs31', 53)" onmouseover="showTip(event, 'fs31', 53)" class="i">i</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 54)" onmouseover="showTip(event, 'fs8', 54)" class="i">OpCode</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 55)" onmouseover="showTip(event, 'fs9', 55)" class="t">OpCodes</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 56)" onmouseover="showTip(event, 'fs33', 56)" class="i">Callvirt</span> <span class="o">||</span> <span onmouseout="hideTip(event, 'fs31', 57)" onmouseover="showTip(event, 'fs31', 57)" class="i">i</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 58)" onmouseover="showTip(event, 'fs8', 58)" class="i">OpCode</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 59)" onmouseover="showTip(event, 'fs9', 59)" class="t">OpCodes</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 60)" onmouseover="showTip(event, 'fs34', 60)" class="i">Calli</span>

<span class="c">/// add some additional information about the exceptions</span>
<span class="c">/// e.g. the value of message parameter for the standard ArgumentException </span>
<span id="fst35" onmouseout="hideTip(event, 'fs35', 61)" onmouseover="showTip(event, 'fs35', 61, document.getElementById('fst35'))" class="omitted">(get exception resource)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 62)" onmouseover="showTip(event, 'fs36', 62)" class="f">addComment</span> (<span onmouseout="hideTip(event, 'fs31', 63)" onmouseover="showTip(event, 'fs31', 63)" class="i">i</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 64)" onmouseover="showTip(event, 'fs5', 64)" class="t">Instruction</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 65)" onmouseover="showTip(event, 'fs26', 65)" class="i">comment</span> <span class="o">=</span> 
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs31', 66)" onmouseover="showTip(event, 'fs31', 66)" class="i">i</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 67)" onmouseover="showTip(event, 'fs13', 67)" class="i">Operand</span> <span class="k">with</span>
        | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs23', 68)" onmouseover="showTip(event, 'fs23', 68)" class="t">MethodBase</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs37', 69)" onmouseover="showTip(event, 'fs37', 69)" class="i">mi</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs31', 70)" onmouseover="showTip(event, 'fs31', 70)" class="i">i</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 71)" onmouseover="showTip(event, 'fs8', 71)" class="i">OpCode</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs9', 72)" onmouseover="showTip(event, 'fs9', 72)" class="t">OpCodes</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 73)" onmouseover="showTip(event, 'fs32', 73)" class="i">Call</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs37', 74)" onmouseover="showTip(event, 'fs37', 74)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 75)" onmouseover="showTip(event, 'fs29', 75)" class="i">Name</span><span class="o">=</span><span class="s">&quot;ThrowArgumentException&quot;</span> 
                                                         <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs37', 76)" onmouseover="showTip(event, 'fs37', 76)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 77)" onmouseover="showTip(event, 'fs38', 77)" class="f">GetParameters</span>()<span class="o">.</span><span class="i">Length</span><span class="o">&gt;</span><span class="n">0</span> <span class="k">-&gt;</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 78)" onmouseover="showTip(event, 'fs39', 78)" class="i">msg</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 79)" onmouseover="showTip(event, 'fs40', 79)" class="f">tryGetExceptionResource</span> <span onmouseout="hideTip(event, 'fs31', 80)" onmouseover="showTip(event, 'fs31', 80)" class="i">i</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 81)" onmouseover="showTip(event, 'fs7', 81)" class="i">Previous</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 82)" onmouseover="showTip(event, 'fs13', 82)" class="i">Operand</span> 
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs41', 83)" onmouseover="showTip(event, 'fs41', 83)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 84)" onmouseover="showTip(event, 'fs42', 84)" class="f">isSome</span> <span onmouseout="hideTip(event, 'fs39', 85)" onmouseover="showTip(event, 'fs39', 85)" class="i">msg</span> <span class="k">then</span>
                <span onmouseout="hideTip(event, 'fs27', 86)" onmouseover="showTip(event, 'fs27', 86)" class="f">sprintf</span> <span class="s">&quot; (param: </span><span class="pf">%A</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs39', 87)" onmouseover="showTip(event, 'fs39', 87)" class="i">msg</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 88)" onmouseover="showTip(event, 'fs43', 88)" class="i">Value</span> 
            <span class="k">else</span> <span class="s">&quot;&quot;</span>
        | _ <span class="k">-&gt;</span> <span class="s">&quot;&quot;</span>
    <span onmouseout="hideTip(event, 'fs31', 89)" onmouseover="showTip(event, 'fs31', 89)" class="i">i</span>, <span onmouseout="hideTip(event, 'fs26', 90)" onmouseover="showTip(event, 'fs26', 90)" class="i">comment</span>
    
<span class="c">/// add exceptions to dictionary</span>
<span class="k">let</span> <span class="k">inline</span> (<span class="o">&lt;~</span>) (<span onmouseout="hideTip(event, 'fs44', 91)" onmouseover="showTip(event, 'fs44', 91)" class="i">dict</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs45', 92)" onmouseover="showTip(event, 'fs45', 92)" class="t">Dictionary</span><span class="o">&lt;</span>_, <span onmouseout="hideTip(event, 'fs46', 93)" onmouseover="showTip(event, 'fs46', 93)" class="t">HashSet</span><span class="o">&lt;</span>_<span class="o">&gt;</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs47', 94)" onmouseover="showTip(event, 'fs47', 94)" class="i">m</span>, <span onmouseout="hideTip(event, 'fs48', 95)" onmouseover="showTip(event, 'fs48', 95)" class="i">items</span>) <span class="o">=</span> <span id="fst49" onmouseout="hideTip(event, 'fs49', 96)" onmouseover="showTip(event, 'fs49', 96, document.getElementById('fst49'))" class="omitted">(...)</span>

<span class="c">/// perform analysis for a method with given detalization parameters </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 97)" onmouseover="showTip(event, 'fs50', 97)" class="f">analyzeExceptions</span> (<span onmouseout="hideTip(event, 'fs22', 98)" onmouseover="showTip(event, 'fs22', 98)" class="i">m</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs23', 99)" onmouseover="showTip(event, 'fs23', 99)" class="t">MethodBase</span>) (<span onmouseout="hideTip(event, 'fs51', 100)" onmouseover="showTip(event, 'fs51', 100)" class="i">detalization</span>, <span onmouseout="hideTip(event, 'fs52', 101)" onmouseover="showTip(event, 'fs52', 101)" class="i">maxDepth</span>) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs53', 102)" onmouseover="showTip(event, 'fs53', 102)" class="f">printfn</span> <span class="s">&quot;&gt;&gt; Analyze </span><span class="pf">%s</span><span class="s"> (</span><span class="pf">%s</span><span class="s">):&quot;</span> <span onmouseout="hideTip(event, 'fs22', 103)" onmouseover="showTip(event, 'fs22', 103)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 104)" onmouseover="showTip(event, 'fs29', 104)" class="i">Name</span> <span onmouseout="hideTip(event, 'fs22', 105)" onmouseover="showTip(event, 'fs22', 105)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 106)" onmouseover="showTip(event, 'fs28', 106)" class="i">ReflectedType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 107)" onmouseover="showTip(event, 'fs19', 107)" class="i">FullName</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 108)" onmouseover="showTip(event, 'fs54', 108)" class="i">exnsFound</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs45', 109)" onmouseover="showTip(event, 'fs45', 109)" class="t">Dictionary</span><span class="o">&lt;</span>_,<span onmouseout="hideTip(event, 'fs46', 110)" onmouseover="showTip(event, 'fs46', 110)" class="t">HashSet</span><span class="o">&lt;</span>_<span class="o">&gt;</span><span class="o">&gt;</span>()

    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs55', 111)" onmouseover="showTip(event, 'fs55', 111)" class="f">check</span> <span onmouseout="hideTip(event, 'fs56', 112)" onmouseover="showTip(event, 'fs56', 112)" class="i">d</span> (<span onmouseout="hideTip(event, 'fs22', 113)" onmouseover="showTip(event, 'fs22', 113)" class="i">m</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs23', 114)" onmouseover="showTip(event, 'fs23', 114)" class="t">MethodBase</span>) <span onmouseout="hideTip(event, 'fs26', 115)" onmouseover="showTip(event, 'fs26', 115)" class="i">comment</span> <span class="o">=</span> 
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs22', 116)" onmouseover="showTip(event, 'fs22', 116)" class="i">m</span> <span class="o">=</span> <span class="k">null</span> <span class="o">||</span> <span onmouseout="hideTip(event, 'fs22', 117)" onmouseover="showTip(event, 'fs22', 117)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 118)" onmouseover="showTip(event, 'fs57', 118)" class="f">GetMethodBody</span>() <span class="o">=</span> <span class="k">null</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs46', 119)" onmouseover="showTip(event, 'fs46', 119)" class="t">HashSet</span><span class="o">&lt;</span>_<span class="o">&gt;</span>()
        <span class="k">else</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 120)" onmouseover="showTip(event, 'fs58', 120)" class="i">tab</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs59', 121)" onmouseover="showTip(event, 'fs59', 121)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 122)" onmouseover="showTip(event, 'fs60', 122)" class="f">replicate</span> <span onmouseout="hideTip(event, 'fs56', 123)" onmouseover="showTip(event, 'fs56', 123)" class="i">d</span> <span class="s">&quot; &quot;</span>
            <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs61', 124)" onmouseover="showTip(event, 'fs61', 124)" class="f">printDetails</span>() <span class="o">=</span> <span id="fst62" onmouseout="hideTip(event, 'fs62', 125)" onmouseover="showTip(event, 'fs62', 125, document.getElementById('fst62'))" class="omitted">(...)</span>

            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs54', 126)" onmouseover="showTip(event, 'fs54', 126)" class="i">exnsFound</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 127)" onmouseover="showTip(event, 'fs63', 127)" class="f">ContainsKey</span> <span onmouseout="hideTip(event, 'fs22', 128)" onmouseover="showTip(event, 'fs22', 128)" class="i">m</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs61', 129)" onmouseover="showTip(event, 'fs61', 129)" class="f">printDetails</span>()
            <span class="k">else</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs64', 130)" onmouseover="showTip(event, 'fs64', 130)" class="i">instructions</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 131)" onmouseover="showTip(event, 'fs22', 131)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 132)" onmouseover="showTip(event, 'fs65', 132)" class="f">GetInstructions</span>()
                <span class="c">// exceptions in the method body</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs66', 133)" onmouseover="showTip(event, 'fs66', 133)" class="i">exns</span> <span class="o">=</span> 
                    <span onmouseout="hideTip(event, 'fs64', 134)" onmouseover="showTip(event, 'fs64', 134)" class="i">instructions</span> 
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs67', 135)" onmouseover="showTip(event, 'fs67', 135)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 136)" onmouseover="showTip(event, 'fs68', 136)" class="f">map</span> <span onmouseout="hideTip(event, 'fs3', 137)" onmouseover="showTip(event, 'fs3', 137)" class="f">getThrownException</span> 
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs67', 138)" onmouseover="showTip(event, 'fs67', 138)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 139)" onmouseover="showTip(event, 'fs69', 139)" class="f">filter</span> <span onmouseout="hideTip(event, 'fs41', 140)" onmouseover="showTip(event, 'fs41', 140)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 141)" onmouseover="showTip(event, 'fs42', 141)" class="f">isSome</span> 
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs67', 142)" onmouseover="showTip(event, 'fs67', 142)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 143)" onmouseover="showTip(event, 'fs68', 143)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs70', 144)" onmouseover="showTip(event, 'fs70', 144)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 145)" onmouseover="showTip(event, 'fs21', 145)" class="f">instructionInfo</span> <span onmouseout="hideTip(event, 'fs22', 146)" onmouseover="showTip(event, 'fs22', 146)" class="i">m</span> <span onmouseout="hideTip(event, 'fs70', 147)" onmouseover="showTip(event, 'fs70', 147)" class="i">e</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 148)" onmouseover="showTip(event, 'fs71', 148)" class="i">Value</span> <span onmouseout="hideTip(event, 'fs26', 149)" onmouseover="showTip(event, 'fs26', 149)" class="i">comment</span>)
            
                <span onmouseout="hideTip(event, 'fs54', 150)" onmouseover="showTip(event, 'fs54', 150)" class="i">exnsFound</span> <span class="o">&lt;~</span> (<span onmouseout="hideTip(event, 'fs22', 151)" onmouseover="showTip(event, 'fs22', 151)" class="i">m</span>, <span onmouseout="hideTip(event, 'fs66', 152)" onmouseover="showTip(event, 'fs66', 152)" class="i">exns</span>)
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs56', 153)" onmouseover="showTip(event, 'fs56', 153)" class="i">d</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs51', 154)" onmouseover="showTip(event, 'fs51', 154)" class="i">detalization</span> <span class="o">-</span> <span class="n">1</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs61', 155)" onmouseover="showTip(event, 'fs61', 155)" class="f">printDetails</span>()     

                <span class="c">// exceptions in inner calls</span>
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs56', 156)" onmouseover="showTip(event, 'fs56', 156)" class="i">d</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs52', 157)" onmouseover="showTip(event, 'fs52', 157)" class="i">maxDepth</span> <span class="k">then</span>
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs72', 158)" onmouseover="showTip(event, 'fs72', 158)" class="i">innerExceptions</span> <span class="o">=</span> 
                        <span onmouseout="hideTip(event, 'fs64', 159)" onmouseover="showTip(event, 'fs64', 159)" class="i">instructions</span> 
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs67', 160)" onmouseover="showTip(event, 'fs67', 160)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 161)" onmouseover="showTip(event, 'fs69', 161)" class="f">filter</span> <span onmouseout="hideTip(event, 'fs30', 162)" onmouseover="showTip(event, 'fs30', 162)" class="f">hasCallOpcode</span>
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs67', 163)" onmouseover="showTip(event, 'fs67', 163)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 164)" onmouseover="showTip(event, 'fs68', 164)" class="f">map</span> <span onmouseout="hideTip(event, 'fs36', 165)" onmouseover="showTip(event, 'fs36', 165)" class="f">addComment</span>
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs67', 166)" onmouseover="showTip(event, 'fs67', 166)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 167)" onmouseover="showTip(event, 'fs73', 167)" class="f">collect</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs31', 168)" onmouseover="showTip(event, 'fs31', 168)" class="i">i</span>, <span onmouseout="hideTip(event, 'fs74', 169)" onmouseover="showTip(event, 'fs74', 169)" class="i">c</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs55', 170)" onmouseover="showTip(event, 'fs55', 170)" class="f">check</span> (<span onmouseout="hideTip(event, 'fs56', 171)" onmouseover="showTip(event, 'fs56', 171)" class="i">d</span><span class="o">+</span><span class="n">1</span>) (<span onmouseout="hideTip(event, 'fs31', 172)" onmouseover="showTip(event, 'fs31', 172)" class="i">i</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 173)" onmouseover="showTip(event, 'fs13', 173)" class="i">Operand</span> <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs23', 174)" onmouseover="showTip(event, 'fs23', 174)" class="t">MethodBase</span>) <span onmouseout="hideTip(event, 'fs74', 175)" onmouseover="showTip(event, 'fs74', 175)" class="i">c</span>)
                    <span onmouseout="hideTip(event, 'fs54', 176)" onmouseover="showTip(event, 'fs54', 176)" class="i">exnsFound</span> <span class="o">&lt;~</span> (<span onmouseout="hideTip(event, 'fs22', 177)" onmouseover="showTip(event, 'fs22', 177)" class="i">m</span>, <span onmouseout="hideTip(event, 'fs72', 178)" onmouseover="showTip(event, 'fs72', 178)" class="i">innerExceptions</span>)
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs56', 179)" onmouseover="showTip(event, 'fs56', 179)" class="i">d</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 180)" onmouseover="showTip(event, 'fs51', 180)" class="i">detalization</span> <span class="o">-</span> <span class="n">1</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs61', 181)" onmouseover="showTip(event, 'fs61', 181)" class="f">printDetails</span>()
            <span onmouseout="hideTip(event, 'fs54', 182)" onmouseover="showTip(event, 'fs54', 182)" class="i">exnsFound</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs22', 183)" onmouseover="showTip(event, 'fs22', 183)" class="i">m</span>]

    <span onmouseout="hideTip(event, 'fs55', 184)" onmouseover="showTip(event, 'fs55', 184)" class="f">check</span> <span class="n">0</span> <span onmouseout="hideTip(event, 'fs22', 185)" onmouseover="showTip(event, 'fs22', 185)" class="i">m</span> <span class="s">&quot;&quot;</span> <span class="o">|&gt;</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs75', 186)" onmouseover="showTip(event, 'fs75', 186)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs53', 187)" onmouseover="showTip(event, 'fs53', 187)" class="f">printfn</span> <span class="s">&quot;Summary:&quot;</span>; <span onmouseout="hideTip(event, 'fs75', 188)" onmouseover="showTip(event, 'fs75', 188)" class="i">i</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs67', 189)" onmouseover="showTip(event, 'fs67', 189)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs76', 190)" onmouseover="showTip(event, 'fs76', 190)" class="f">iter</span> (<span onmouseout="hideTip(event, 'fs53', 191)" onmouseover="showTip(event, 'fs53', 191)" class="f">printfn</span> <span class="s">&quot;  </span><span class="pf">%s</span><span class="s">&quot;</span>)

<span id="fst77" onmouseout="hideTip(event, 'fs77', 192)" onmouseover="showTip(event, 'fs77', 192, document.getElementById('fst77'))" class="omitted">(Example: get a couple of methods to analyze)</span>  
<span onmouseout="hideTip(event, 'fs50', 193)" onmouseover="showTip(event, 'fs50', 193)" class="f">analyzeExceptions</span> <span onmouseout="hideTip(event, 'fs78', 194)" onmouseover="showTip(event, 'fs78', 194)" class="i">methods</span><span class="o">.</span>[<span class="s">&quot;ToDictionary&quot;</span>] (<span class="n">2</span>, <span class="n">5</span>) <span id="fst79" onmouseout="hideTip(event, 'fs79', 195)" onmouseover="showTip(event, 'fs79', 195, document.getElementById('fst79'))" class="omitted">(output)</span>  
<span onmouseout="hideTip(event, 'fs50', 196)" onmouseover="showTip(event, 'fs50', 196)" class="i">analyzeExceptions</span> <span onmouseout="hideTip(event, 'fs78', 197)" onmouseover="showTip(event, 'fs78', 197)" class="i">methods</span><span class="o">.</span>[<span class="s">&quot;ThrowException&quot;</span>] (<span class="n">0</span>, <span class="n">5</span>) <span id="fst80" onmouseout="hideTip(event, 'fs80', 198)" onmouseover="showTip(event, 'fs80', 198, document.getElementById('fst80'))" class="omitted">(output)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace Mono</div>
<div class="tip" id="fs2">namespace Mono.Reflection</div>
<div class="tip" id="fs3">val getThrownException : instr:Instruction -&gt; (Instruction * string) option<br /><br />Full name: Script.getThrownException<br /><em><br /><br />&#160;check for the throw opcode preceded with newobj </em></div>
<div class="tip" id="fs4">val instr : Instruction</div>
<div class="tip" id="fs5">type Instruction =<br />&#160;&#160;member Next : Instruction with get, set<br />&#160;&#160;member Offset : int<br />&#160;&#160;member OpCode : OpCode<br />&#160;&#160;member Operand : obj with get, set<br />&#160;&#160;member Previous : Instruction with get, set<br />&#160;&#160;member Size : int<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: Mono.Reflection.Instruction</div>
<div class="tip" id="fs6">val prev : Instruction</div>
<div class="tip" id="fs7">property Instruction.Previous: Instruction</div>
<div class="tip" id="fs8">property Instruction.OpCode: OpCode</div>
<div class="tip" id="fs9">type OpCodes =<br />&#160;&#160;static val Nop : OpCode<br />&#160;&#160;static val Break : OpCode<br />&#160;&#160;static val Ldarg_0 : OpCode<br />&#160;&#160;static val Ldarg_1 : OpCode<br />&#160;&#160;static val Ldarg_2 : OpCode<br />&#160;&#160;static val Ldarg_3 : OpCode<br />&#160;&#160;static val Ldloc_0 : OpCode<br />&#160;&#160;static val Ldloc_1 : OpCode<br />&#160;&#160;static val Ldloc_2 : OpCode<br />&#160;&#160;static val Ldloc_3 : OpCode<br />&#160;&#160;...<br /><br />Full name: System.Reflection.Emit.OpCodes</div>
<div class="tip" id="fs10">field OpCodes.Throw</div>
<div class="tip" id="fs11">field OpCodes.Newobj</div>
<div class="tip" id="fs12">val newType : System.Type</div>
<div class="tip" id="fs13">property Instruction.Operand: obj</div>
<div class="tip" id="fs14">type ConstructorInfo =<br />&#160;&#160;inherit MethodBase<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Invoke : parameters:obj[] -&gt; obj + 1 overload<br />&#160;&#160;member MemberType : MemberTypes<br />&#160;&#160;static val ConstructorName : string<br />&#160;&#160;static val TypeConstructorName : string<br /><br />Full name: System.Reflection.ConstructorInfo</div>
<div class="tip" id="fs15">val typeof&lt;&#39;T&gt; : System.Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs16">namespace System</div>
<div class="tip" id="fs17">Multiple items<br />type Exception =<br />&#160;&#160;new : unit -&gt; Exception + 2 overloads<br />&#160;&#160;member Data : IDictionary<br />&#160;&#160;member GetBaseException : unit -&gt; Exception<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;member GetType : unit -&gt; Type<br />&#160;&#160;member HelpLink : string with get, set<br />&#160;&#160;member InnerException : Exception<br />&#160;&#160;member Message : string<br />&#160;&#160;member Source : string with get, set<br />&#160;&#160;member StackTrace : string<br />&#160;&#160;...<br /><br />Full name: System.Exception<br /><br />--------------------<br />System.Exception() : unit<br />System.Exception(message: string) : unit<br />System.Exception(message: string, innerException: exn) : unit</div>
<div class="tip" id="fs18">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs19">property System.Type.FullName: string</div>
<div class="tip" id="fs20">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs21">val instructionInfo : m:MethodBase -&gt; i:&#39;a * t:&#39;b -&gt; comment:string -&gt; string<br /><br />Full name: Script.instructionInfo</div>
<div class="tip" id="fs22">val m : MethodBase</div>
<div class="tip" id="fs23">type MethodBase =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Attributes : MethodAttributes<br />&#160;&#160;member CallingConvention : CallingConventions<br />&#160;&#160;member ContainsGenericParameters : bool<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetGenericArguments : unit -&gt; Type[]<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetMethodBody : unit -&gt; MethodBody<br />&#160;&#160;member GetMethodImplementationFlags : unit -&gt; MethodImplAttributes<br />&#160;&#160;member GetParameters : unit -&gt; ParameterInfo[]<br />&#160;&#160;member Invoke : obj:obj * parameters:obj[] -&gt; obj + 1 overload<br />&#160;&#160;...<br /><br />Full name: System.Reflection.MethodBase</div>
<div class="tip" id="fs24">val i : &#39;a</div>
<div class="tip" id="fs25">val t : &#39;b</div>
<div class="tip" id="fs26">val comment : string</div>
<div class="tip" id="fs27">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs28">property MemberInfo.ReflectedType: System.Type</div>
<div class="tip" id="fs29">property MemberInfo.Name: string</div>
<div class="tip" id="fs30">val hasCallOpcode : i:Instruction -&gt; bool<br /><br />Full name: Script.hasCallOpcode</div>
<div class="tip" id="fs31">val i : Instruction</div>
<div class="tip" id="fs32">field OpCodes.Call</div>
<div class="tip" id="fs33">field OpCodes.Callvirt</div>
<div class="tip" id="fs34">field OpCodes.Calli</div>
<div class="tip" id="fs35">let types = System.Reflection.Assembly.GetAssembly(typeof&lt;System.ArgumentException&gt;).GetTypes()<br />let tryGetExceptionResource (prm: obj) = <br />&#160;&#160;&#160;&#160;types  <br />&#160;&#160;&#160;&#160;|&gt; Seq.tryFind (fun t -&gt; t.FullName = &quot;System.ExceptionResource&quot;)<br />&#160;&#160;&#160;&#160;|&gt; Option.bind (fun e -&gt;Some (System.Enum.ToObject(e, prm)))</div>
<div class="tip" id="fs36">val addComment : i:Instruction -&gt; Instruction * string<br /><br />Full name: Script.addComment</div>
<div class="tip" id="fs37">val mi : MethodBase</div>
<div class="tip" id="fs38">MethodBase.GetParameters() : ParameterInfo []</div>
<div class="tip" id="fs39">val msg : obj option</div>
<div class="tip" id="fs40">val tryGetExceptionResource : prm:obj -&gt; obj option<br /><br />Full name: Script.tryGetExceptionResource</div>
<div class="tip" id="fs41">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs42">val isSome : option:&#39;T option -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Option.isSome</div>
<div class="tip" id="fs43">property Option.Value: obj</div>
<div class="tip" id="fs44">val dict : Dictionary&lt;&#39;a,HashSet&lt;&#39;b&gt;&gt;</div>
<div class="tip" id="fs45">Multiple items<br />type Dictionary&lt;&#39;TKey,&#39;TValue&gt; =<br />&#160;&#160;new : unit -&gt; Dictionary&lt;&#39;TKey, &#39;TValue&gt; + 5 overloads<br />&#160;&#160;member Add : key:&#39;TKey * value:&#39;TValue -&gt; unit<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Comparer : IEqualityComparer&lt;&#39;TKey&gt;<br />&#160;&#160;member ContainsKey : key:&#39;TKey -&gt; bool<br />&#160;&#160;member ContainsValue : value:&#39;TValue -&gt; bool<br />&#160;&#160;member Count : int<br />&#160;&#160;member GetEnumerator : unit -&gt; Enumerator&lt;&#39;TKey, &#39;TValue&gt;<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;member Item : &#39;TKey -&gt; &#39;TValue with get, set<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br />&#160;&#160;nested type KeyCollection<br />&#160;&#160;nested type ValueCollection<br /><br />Full name: System.Collections.Generic.Dictionary&lt;_,_&gt;<br /><br />--------------------<br />Dictionary() : unit<br />Dictionary(capacity: int) : unit<br />Dictionary(comparer: IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Dictionary(dictionary: IDictionary&lt;&#39;TKey,&#39;TValue&gt;) : unit<br />Dictionary(capacity: int, comparer: IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Dictionary(dictionary: IDictionary&lt;&#39;TKey,&#39;TValue&gt;, comparer: IEqualityComparer&lt;&#39;TKey&gt;) : unit</div>
<div class="tip" id="fs46">Multiple items<br />type HashSet&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; HashSet&lt;&#39;T&gt; + 3 overloads<br />&#160;&#160;member Add : item:&#39;T -&gt; bool<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Comparer : IEqualityComparer&lt;&#39;T&gt;<br />&#160;&#160;member Contains : item:&#39;T -&gt; bool<br />&#160;&#160;member CopyTo : array:&#39;T[] -&gt; unit + 2 overloads<br />&#160;&#160;member Count : int<br />&#160;&#160;member ExceptWith : other:IEnumerable&lt;&#39;T&gt; -&gt; unit<br />&#160;&#160;member GetEnumerator : unit -&gt; Enumerator&lt;&#39;T&gt;<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br /><br />Full name: System.Collections.Generic.HashSet&lt;_&gt;<br /><br />--------------------<br />HashSet() : unit<br />HashSet(comparer: IEqualityComparer&lt;&#39;T&gt;) : unit<br />HashSet(collection: IEnumerable&lt;&#39;T&gt;) : unit<br />HashSet(collection: IEnumerable&lt;&#39;T&gt;, comparer: IEqualityComparer&lt;&#39;T&gt;) : unit</div>
<div class="tip" id="fs47">val m : &#39;a</div>
<div class="tip" id="fs48">val items : seq&lt;&#39;b&gt;</div>
<div class="tip" id="fs49">let set = if dict.ContainsKey m then dict.[m] <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let s = HashSet&lt;_&gt;() in dict.Add(m, s); s<br />&#160;&#160;&#160;&#160;Seq.iter (set.Add &gt;&gt; ignore) items</div>
<div class="tip" id="fs50">val analyzeExceptions : m:MethodBase -&gt; detalization:int * maxDepth:int -&gt; unit<br /><br />Full name: Script.analyzeExceptions<br /><em><br /><br />&#160;perform analysis for a method with given detalization parameters </em></div>
<div class="tip" id="fs51">val detalization : int</div>
<div class="tip" id="fs52">val maxDepth : int</div>
<div class="tip" id="fs53">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs54">val exnsFound : Dictionary&lt;MethodBase,HashSet&lt;string&gt;&gt;</div>
<div class="tip" id="fs55">val check : (int -&gt; MethodBase -&gt; string -&gt; HashSet&lt;string&gt;)</div>
<div class="tip" id="fs56">val d : int</div>
<div class="tip" id="fs57">MethodBase.GetMethodBody() : MethodBody</div>
<div class="tip" id="fs58">val tab : string</div>
<div class="tip" id="fs59">module String<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs60">val replicate : count:int -&gt; str:string -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.String.replicate</div>
<div class="tip" id="fs61">val printDetails : (unit -&gt; unit)</div>
<div class="tip" id="fs62">printfn &quot;%s&gt;&gt; %s (%s)&quot; tab m.Name m.ReflectedType.FullName <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let detExns = exnsFound.[m]<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if detExns.Count &gt; 0 then detExns |&gt; Seq.iter (printfn &quot;\t%s%s&quot; tab)</div>
<div class="tip" id="fs63">Dictionary.ContainsKey(key: MethodBase) : bool</div>
<div class="tip" id="fs64">val instructions : IList&lt;Instruction&gt;</div>
<div class="tip" id="fs65">(extension) MethodBase.GetInstructions() : IList&lt;Instruction&gt;</div>
<div class="tip" id="fs66">val exns : seq&lt;string&gt;</div>
<div class="tip" id="fs67">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs68">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs69">val filter : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.filter</div>
<div class="tip" id="fs70">val e : (Instruction * string) option</div>
<div class="tip" id="fs71">property Option.Value: Instruction * string</div>
<div class="tip" id="fs72">val innerExceptions : seq&lt;string&gt;</div>
<div class="tip" id="fs73">val collect : mapping:(&#39;T -&gt; #seq&lt;&#39;U&gt;) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.collect</div>
<div class="tip" id="fs74">val c : string</div>
<div class="tip" id="fs75">val i : HashSet&lt;string&gt;</div>
<div class="tip" id="fs76">val iter : action:(&#39;T -&gt; unit) -&gt; source:seq&lt;&#39;T&gt; -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.Seq.iter</div>
<div class="tip" id="fs77">open System.Linq<br />type T() =<br />&#160;&#160;&#160;&#160;let dict = Dictionary&lt;_,_&gt;() <br />&#160;&#160;&#160;&#160;member x.ToDictionary (arr: _[]) = arr.ToDictionary(id, string)<br />&#160;&#160;&#160;&#160;member x.ThrowException() = failwith &quot;exception here&quot;<br /><br />let methods = typeof&lt;T&gt;.GetMethods() |&gt; Seq.filter (fun m -&gt; m.DeclaringType = typeof&lt;T&gt; &amp;&amp; m.GetMethodBody() &lt;&gt; null) <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;|&gt; Seq.map (fun m -&gt; m.Name, m) |&gt; Map.ofSeq</div>
<div class="tip" id="fs78">val methods : Map&lt;string,MethodInfo&gt;<br /><br />Full name: Script.methods</div>
<div class="tip" id="fs79">&gt;&gt; Analyze ToDictionary (FSI_0003+T):<br />&gt;&gt; ToDictionary (FSI_0003+T)<br />&#160;&#160;&#160;&gt;&gt; ArgumentNull (System.Linq.Error)<br />&#160;&#160;&#160;&gt;&gt; ArgumentNull (System.Linq.Error)<br />&#160;&gt;&gt; ToDictionary (System.Linq.Enumerable)<br />	 System.ThrowHelper-&gt;ThrowArgumentNullException: &quot;System.ArgumentNullException&quot;<br />	 System.ThrowHelper-&gt;ThrowArgumentException: &quot;System.ArgumentException&quot; (param: Argument_AddingDuplicate)<br />Summary:<br />&#160;&#160;System.ThrowHelper-&gt;ThrowArgumentNullException: &quot;System.ArgumentNullException&quot;<br />&#160;&#160;System.ThrowHelper-&gt;ThrowArgumentException: &quot;System.ArgumentException&quot; (param: Argument_AddingDuplicate)</div>
<div class="tip" id="fs80">&gt;&gt; Analyze ThrowException (FSI_0003+T):<br />Summary:<br />&#160;&#160;FSI_0003+T-&gt;ThrowException: &quot;System.Exception&quot;</div>

