<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Tap</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Reflection</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">NUnit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">Framework</span>

<span class="k">module</span> <span class="k">internal</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">List</span> <span class="o">=</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="f">combinations</span> <span class="o">=</span> <span class="k">function</span>
    | [] <span class="k">-&gt;</span> [[]]
    | <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">hs</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">tss</span> <span class="k">-&gt;</span>
        [ <span class="k">for</span> <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="i">h</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="i">hs</span> <span class="k">do</span>
            <span class="k">for</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="i">ts</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs7', 14)" onmouseover="showTip(event, 'fs7', 14)" class="f">combinations</span> <span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="i">tss</span> <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="i">h</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">ts</span> ]

<span class="k">module</span> <span class="k">internal</span> <span class="t">GenerateTests</span> <span class="o">=</span>

   <span class="k">type</span> <span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="t">ExpectedException</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="p">ExceptionType</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="t">Type</span>
   <span class="k">type</span> <span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="t">Test</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="p">Test</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="t">MethodInfo</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="t">obj</span>[] <span class="o">*</span> <span onmouseout="hideTip(event, 'fs17', 25)" onmouseover="showTip(event, 'fs17', 25)" class="t">obj</span> <span onmouseout="hideTip(event, 'fs18', 26)" onmouseover="showTip(event, 'fs18', 26)" class="t">option</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs14', 27)" onmouseover="showTip(event, 'fs14', 27)" class="t">Type</span> <span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="t">option</span>

   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="f">getCustomAttribute</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAttribute</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">TAttribute</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs20', 30)" onmouseover="showTip(event, 'fs20', 30)" class="t">Attribute</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="i">mi</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs16', 32)" onmouseover="showTip(event, 'fs16', 32)" class="t">MethodInfo</span>) <span class="o">=</span> 
      <span onmouseout="hideTip(event, 'fs21', 33)" onmouseover="showTip(event, 'fs21', 33)" class="i">mi</span><span class="o">.</span><span class="i">GetCustomAttribute</span>(<span onmouseout="hideTip(event, 'fs22', 34)" onmouseover="showTip(event, 'fs22', 34)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAttribute</span><span class="o">&gt;</span>, <span class="k">true</span>) <span class="o">:?&gt;</span> <span class="o">&#39;</span><span class="i">TAttribute</span>

   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 35)" onmouseover="showTip(event, 'fs23', 35)" class="f">toExpectedException</span> (<span onmouseout="hideTip(event, 'fs21', 36)" onmouseover="showTip(event, 'fs21', 36)" class="i">mi</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs16', 37)" onmouseover="showTip(event, 'fs16', 37)" class="t">MethodInfo</span>) <span class="o">=</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 38)" onmouseover="showTip(event, 'fs24', 38)" class="i">attr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 39)" onmouseover="showTip(event, 'fs19', 39)" class="f">getCustomAttribute</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs25', 40)" onmouseover="showTip(event, 'fs25', 40)" class="t">ExpectedExceptionAttribute</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs21', 41)" onmouseover="showTip(event, 'fs21', 41)" class="i">mi</span>)
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs24', 42)" onmouseover="showTip(event, 'fs24', 42)" class="i">attr</span> <span class="o">&lt;&gt;</span> <span class="k">null</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs26', 43)" onmouseover="showTip(event, 'fs26', 43)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs24', 44)" onmouseover="showTip(event, 'fs24', 44)" class="i">attr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 45)" onmouseover="showTip(event, 'fs27', 45)" class="i">ExpectedException</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs28', 46)" onmouseover="showTip(event, 'fs28', 46)" class="p">None</span>
   
   <span class="k">let</span> (|<span onmouseout="hideTip(event, 'fs29', 47)" onmouseover="showTip(event, 'fs29', 47)" class="p">Ignore</span>|_|) (<span onmouseout="hideTip(event, 'fs21', 48)" onmouseover="showTip(event, 'fs21', 48)" class="i">mi</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs16', 49)" onmouseover="showTip(event, 'fs16', 49)" class="t">MethodInfo</span>) <span class="o">=</span>
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs19', 50)" onmouseover="showTip(event, 'fs19', 50)" class="f">getCustomAttribute</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs29', 51)" onmouseover="showTip(event, 'fs29', 51)" class="t">IgnoreAttribute</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs21', 52)" onmouseover="showTip(event, 'fs21', 52)" class="i">mi</span>) <span class="o">&lt;&gt;</span> <span class="k">null</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs26', 53)" onmouseover="showTip(event, 'fs26', 53)" class="p">Some</span>() <span class="k">else</span> <span onmouseout="hideTip(event, 'fs28', 54)" onmouseover="showTip(event, 'fs28', 54)" class="p">None</span>

   <span class="k">let</span> (|<span class="p">TestCases</span>|_|) (<span onmouseout="hideTip(event, 'fs21', 55)" onmouseover="showTip(event, 'fs21', 55)" class="i">mi</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs16', 56)" onmouseover="showTip(event, 'fs16', 56)" class="t">MethodInfo</span>) <span class="o">=</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 57)" onmouseover="showTip(event, 'fs30', 57)" class="i">cases</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 58)" onmouseover="showTip(event, 'fs21', 58)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 59)" onmouseover="showTip(event, 'fs31', 59)" class="f">GetCustomAttributes</span>(<span onmouseout="hideTip(event, 'fs22', 60)" onmouseover="showTip(event, 'fs22', 60)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs32', 61)" onmouseover="showTip(event, 'fs32', 61)" class="t">TestCaseAttribute</span><span class="o">&gt;</span>, <span class="k">true</span>)
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs30', 62)" onmouseover="showTip(event, 'fs30', 62)" class="i">cases</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 63)" onmouseover="showTip(event, 'fs33', 63)" class="i">Length</span> <span class="o">&gt;</span> <span class="n">0</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs26', 64)" onmouseover="showTip(event, 'fs26', 64)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs30', 65)" onmouseover="showTip(event, 'fs30', 65)" class="i">cases</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs34', 66)" onmouseover="showTip(event, 'fs34', 66)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 67)" onmouseover="showTip(event, 'fs35', 67)" class="f">cast</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs32', 68)" onmouseover="showTip(event, 'fs32', 68)" class="t">TestCaseAttribute</span><span class="o">&gt;</span>)
      <span class="k">else</span> <span onmouseout="hideTip(event, 'fs28', 69)" onmouseover="showTip(event, 'fs28', 69)" class="p">None</span>

   <span class="k">let</span> (|<span onmouseout="hideTip(event, 'fs36', 70)" onmouseover="showTip(event, 'fs36', 70)" class="p">TestCaseSource</span>|_|) (<span onmouseout="hideTip(event, 'fs21', 71)" onmouseover="showTip(event, 'fs21', 71)" class="i">mi</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs16', 72)" onmouseover="showTip(event, 'fs16', 72)" class="t">MethodInfo</span>) <span class="o">=</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 73)" onmouseover="showTip(event, 'fs37', 73)" class="i">source</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 74)" onmouseover="showTip(event, 'fs19', 74)" class="f">getCustomAttribute</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs36', 75)" onmouseover="showTip(event, 'fs36', 75)" class="t">TestCaseSourceAttribute</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs21', 76)" onmouseover="showTip(event, 'fs21', 76)" class="i">mi</span>)
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs37', 77)" onmouseover="showTip(event, 'fs37', 77)" class="i">source</span> <span class="o">&lt;&gt;</span> <span class="k">null</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs26', 78)" onmouseover="showTip(event, 'fs26', 78)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs37', 79)" onmouseover="showTip(event, 'fs37', 79)" class="i">source</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 80)" onmouseover="showTip(event, 'fs38', 80)" class="i">SourceName</span>, <span onmouseout="hideTip(event, 'fs37', 81)" onmouseover="showTip(event, 'fs37', 81)" class="i">source</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 82)" onmouseover="showTip(event, 'fs39', 82)" class="i">SourceType</span>)
      <span class="k">else</span> <span onmouseout="hideTip(event, 'fs28', 83)" onmouseover="showTip(event, 'fs28', 83)" class="p">None</span>

   <span class="k">let</span> (|<span class="p">UnitTest</span>|_|) (<span onmouseout="hideTip(event, 'fs21', 84)" onmouseover="showTip(event, 'fs21', 84)" class="i">mi</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs16', 85)" onmouseover="showTip(event, 'fs16', 85)" class="t">MethodInfo</span>) <span class="o">=</span>
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs19', 86)" onmouseover="showTip(event, 'fs19', 86)" class="f">getCustomAttribute</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs40', 87)" onmouseover="showTip(event, 'fs40', 87)" class="t">TestAttribute</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs21', 88)" onmouseover="showTip(event, 'fs21', 88)" class="i">mi</span>) <span class="o">&lt;&gt;</span> <span class="k">null</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs26', 89)" onmouseover="showTip(event, 'fs26', 89)" class="p">Some</span>() <span class="k">else</span> <span onmouseout="hideTip(event, 'fs28', 90)" onmouseover="showTip(event, 'fs28', 90)" class="p">None</span>

   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 91)" onmouseover="showTip(event, 'fs41', 91)" class="f">fromCases</span> (<span onmouseout="hideTip(event, 'fs21', 92)" onmouseover="showTip(event, 'fs21', 92)" class="i">mi</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs16', 93)" onmouseover="showTip(event, 'fs16', 93)" class="t">MethodInfo</span>) (<span onmouseout="hideTip(event, 'fs42', 94)" onmouseover="showTip(event, 'fs42', 94)" class="i">cases</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs32', 95)" onmouseover="showTip(event, 'fs32', 95)" class="t">TestCaseAttribute</span> <span onmouseout="hideTip(event, 'fs43', 96)" onmouseover="showTip(event, 'fs43', 96)" class="t">seq</span>) <span class="o">=</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 97)" onmouseover="showTip(event, 'fs44', 97)" class="i">ex</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 98)" onmouseover="showTip(event, 'fs23', 98)" class="f">toExpectedException</span>(<span onmouseout="hideTip(event, 'fs21', 99)" onmouseover="showTip(event, 'fs21', 99)" class="i">mi</span>)
      [|<span class="k">for</span> <span onmouseout="hideTip(event, 'fs45', 100)" onmouseover="showTip(event, 'fs45', 100)" class="i">case</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs42', 101)" onmouseover="showTip(event, 'fs42', 101)" class="i">cases</span> <span class="k">-&gt;</span>
         <span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 102)" onmouseover="showTip(event, 'fs46', 102)" class="i">expected</span> <span class="o">=</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs45', 103)" onmouseover="showTip(event, 'fs45', 103)" class="i">case</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 104)" onmouseover="showTip(event, 'fs47', 104)" class="i">HasExpectedResult</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs26', 105)" onmouseover="showTip(event, 'fs26', 105)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs45', 106)" onmouseover="showTip(event, 'fs45', 106)" class="i">case</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 107)" onmouseover="showTip(event, 'fs48', 107)" class="i">ExpectedResult</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs28', 108)" onmouseover="showTip(event, 'fs28', 108)" class="p">None</span>
         <span onmouseout="hideTip(event, 'fs15', 109)" onmouseover="showTip(event, 'fs15', 109)" class="p">Test</span>(<span onmouseout="hideTip(event, 'fs21', 110)" onmouseover="showTip(event, 'fs21', 110)" class="i">mi</span>, <span onmouseout="hideTip(event, 'fs45', 111)" onmouseover="showTip(event, 'fs45', 111)" class="i">case</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 112)" onmouseover="showTip(event, 'fs49', 112)" class="i">Arguments</span>, <span onmouseout="hideTip(event, 'fs46', 113)" onmouseover="showTip(event, 'fs46', 113)" class="i">expected</span>, <span onmouseout="hideTip(event, 'fs44', 114)" onmouseover="showTip(event, 'fs44', 114)" class="i">ex</span>)
      |]

   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 115)" onmouseover="showTip(event, 'fs50', 115)" class="f">fromValues</span> (<span onmouseout="hideTip(event, 'fs21', 116)" onmouseover="showTip(event, 'fs21', 116)" class="i">mi</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs16', 117)" onmouseover="showTip(event, 'fs16', 117)" class="t">MethodInfo</span>) <span class="o">=</span>
      [| <span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 118)" onmouseover="showTip(event, 'fs51', 118)" class="i">ps</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 119)" onmouseover="showTip(event, 'fs21', 119)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 120)" onmouseover="showTip(event, 'fs52', 120)" class="f">GetParameters</span>()
         <span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 121)" onmouseover="showTip(event, 'fs53', 121)" class="i">argValues</span> <span class="o">=</span>
            [<span class="k">for</span> <span onmouseout="hideTip(event, 'fs54', 122)" onmouseover="showTip(event, 'fs54', 122)" class="i">p</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs51', 123)" onmouseover="showTip(event, 'fs51', 123)" class="i">ps</span> <span class="k">-&gt;</span>
               <span class="k">match</span> <span onmouseout="hideTip(event, 'fs54', 124)" onmouseover="showTip(event, 'fs54', 124)" class="i">p</span><span class="o">.</span><span class="i">GetCustomAttribute</span>(<span onmouseout="hideTip(event, 'fs22', 125)" onmouseover="showTip(event, 'fs22', 125)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs55', 126)" onmouseover="showTip(event, 'fs55', 126)" class="i">ValuesAttribute</span><span class="o">&gt;</span>, <span class="k">true</span>) <span class="k">with</span>
               | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs55', 127)" onmouseover="showTip(event, 'fs55', 127)" class="t">ValuesAttribute</span> <span class="k">as</span> <span class="i">attr</span> <span class="k">-&gt;</span> [<span class="k">for</span> <span class="i">x</span> <span class="k">in</span> <span class="i">attr</span><span class="o">.</span><span class="i">GetData</span>(<span onmouseout="hideTip(event, 'fs54', 128)" onmouseover="showTip(event, 'fs54', 128)" class="i">p</span>) <span class="k">-&gt;</span> <span class="i">x</span>]
               | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs56', 129)" onmouseover="showTip(event, 'fs56', 129)" class="i">invalidOp</span> <span class="s">&quot;Expecting values&quot;</span>]
         <span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 130)" onmouseover="showTip(event, 'fs44', 130)" class="i">ex</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 131)" onmouseover="showTip(event, 'fs23', 131)" class="f">toExpectedException</span> <span onmouseout="hideTip(event, 'fs21', 132)" onmouseover="showTip(event, 'fs21', 132)" class="i">mi</span>
         <span class="k">match</span> <span onmouseout="hideTip(event, 'fs6', 133)" onmouseover="showTip(event, 'fs6', 133)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 134)" onmouseover="showTip(event, 'fs7', 134)" class="f">combinations</span> <span onmouseout="hideTip(event, 'fs53', 135)" onmouseover="showTip(event, 'fs53', 135)" class="i">argValues</span> <span class="k">with</span>
         | [] <span class="k">-&gt;</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs15', 136)" onmouseover="showTip(event, 'fs15', 136)" class="p">Test</span>(<span onmouseout="hideTip(event, 'fs21', 137)" onmouseover="showTip(event, 'fs21', 137)" class="i">mi</span>, [||], <span onmouseout="hideTip(event, 'fs28', 138)" onmouseover="showTip(event, 'fs28', 138)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs44', 139)" onmouseover="showTip(event, 'fs44', 139)" class="i">ex</span>)
         | <span onmouseout="hideTip(event, 'fs57', 140)" onmouseover="showTip(event, 'fs57', 140)" class="i">xs</span> <span class="k">-&gt;</span> <span class="k">yield!</span> [<span class="k">for</span> <span onmouseout="hideTip(event, 'fs58', 141)" onmouseover="showTip(event, 'fs58', 141)" class="i">args</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs57', 142)" onmouseover="showTip(event, 'fs57', 142)" class="i">xs</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 143)" onmouseover="showTip(event, 'fs15', 143)" class="p">Test</span>(<span onmouseout="hideTip(event, 'fs21', 144)" onmouseover="showTip(event, 'fs21', 144)" class="i">mi</span>, <span onmouseout="hideTip(event, 'fs6', 145)" onmouseover="showTip(event, 'fs6', 145)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 146)" onmouseover="showTip(event, 'fs59', 146)" class="f">toArray</span> <span onmouseout="hideTip(event, 'fs58', 147)" onmouseover="showTip(event, 'fs58', 147)" class="i">args</span>, <span onmouseout="hideTip(event, 'fs28', 148)" onmouseover="showTip(event, 'fs28', 148)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs44', 149)" onmouseover="showTip(event, 'fs44', 149)" class="i">ex</span>)]
      |]

   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 150)" onmouseover="showTip(event, 'fs60', 150)" class="f">fromSource</span> <span onmouseout="hideTip(event, 'fs61', 151)" onmouseover="showTip(event, 'fs61', 151)" class="i">instance</span> (<span onmouseout="hideTip(event, 'fs21', 152)" onmouseover="showTip(event, 'fs21', 152)" class="i">mi</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs16', 153)" onmouseover="showTip(event, 'fs16', 153)" class="t">MethodInfo</span>) (<span onmouseout="hideTip(event, 'fs62', 154)" onmouseover="showTip(event, 'fs62', 154)" class="i">sourceName</span>,<span onmouseout="hideTip(event, 'fs63', 155)" onmouseover="showTip(event, 'fs63', 155)" class="i">sourceType</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs14', 156)" onmouseover="showTip(event, 'fs14', 156)" class="t">Type</span>) <span class="o">=</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs64', 157)" onmouseover="showTip(event, 'fs64', 157)" class="i">pi</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 158)" onmouseover="showTip(event, 'fs21', 158)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 159)" onmouseover="showTip(event, 'fs65', 159)" class="i">DeclaringType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 160)" onmouseover="showTip(event, 'fs66', 160)" class="f">GetProperty</span>(<span onmouseout="hideTip(event, 'fs62', 161)" onmouseover="showTip(event, 'fs62', 161)" class="i">sourceName</span>)
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs67', 162)" onmouseover="showTip(event, 'fs67', 162)" class="i">getter</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs64', 163)" onmouseover="showTip(event, 'fs64', 163)" class="i">pi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 164)" onmouseover="showTip(event, 'fs68', 164)" class="f">GetGetMethod</span>()
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs61', 165)" onmouseover="showTip(event, 'fs61', 165)" class="i">instance</span> <span class="o">=</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs63', 166)" onmouseover="showTip(event, 'fs63', 166)" class="i">sourceType</span> <span class="o">&lt;&gt;</span> <span class="k">null</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs69', 167)" onmouseover="showTip(event, 'fs69', 167)" class="t">Activator</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 168)" onmouseover="showTip(event, 'fs70', 168)" class="f">CreateInstance</span>(<span onmouseout="hideTip(event, 'fs63', 169)" onmouseover="showTip(event, 'fs63', 169)" class="i">sourceType</span>) <span class="k">else</span> <span onmouseout="hideTip(event, 'fs61', 170)" onmouseover="showTip(event, 'fs61', 170)" class="i">instance</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs71', 171)" onmouseover="showTip(event, 'fs71', 171)" class="i">data</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs67', 172)" onmouseover="showTip(event, 'fs67', 172)" class="i">getter</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 173)" onmouseover="showTip(event, 'fs72', 173)" class="f">Invoke</span>(<span onmouseout="hideTip(event, 'fs61', 174)" onmouseover="showTip(event, 'fs61', 174)" class="i">instance</span>, [||]) <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs2', 175)" onmouseover="showTip(event, 'fs2', 175)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 176)" onmouseover="showTip(event, 'fs73', 176)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 177)" onmouseover="showTip(event, 'fs74', 177)" class="t">IEnumerable</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 178)" onmouseover="showTip(event, 'fs44', 178)" class="i">ex</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 179)" onmouseover="showTip(event, 'fs23', 179)" class="f">toExpectedException</span> <span onmouseout="hideTip(event, 'fs21', 180)" onmouseover="showTip(event, 'fs21', 180)" class="i">mi</span>
      [|<span class="k">for</span> <span onmouseout="hideTip(event, 'fs75', 181)" onmouseover="showTip(event, 'fs75', 181)" class="i">item</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs71', 182)" onmouseover="showTip(event, 'fs71', 182)" class="i">data</span> <span class="k">-&gt;</span>
         <span class="k">match</span> <span onmouseout="hideTip(event, 'fs75', 183)" onmouseover="showTip(event, 'fs75', 183)" class="i">item</span> <span class="k">with</span>
         | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs76', 184)" onmouseover="showTip(event, 'fs76', 184)" class="t">TestCaseData</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs77', 185)" onmouseover="showTip(event, 'fs77', 185)" class="i">case</span> <span class="k">-&gt;</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 186)" onmouseover="showTip(event, 'fs46', 186)" class="i">expected</span> <span class="o">=</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs77', 187)" onmouseover="showTip(event, 'fs77', 187)" class="i">case</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs78', 188)" onmouseover="showTip(event, 'fs78', 188)" class="i">HasExpectedResult</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs26', 189)" onmouseover="showTip(event, 'fs26', 189)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs77', 190)" onmouseover="showTip(event, 'fs77', 190)" class="i">case</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 191)" onmouseover="showTip(event, 'fs79', 191)" class="i">Result</span>) <span class="k">else</span> <span onmouseout="hideTip(event, 'fs28', 192)" onmouseover="showTip(event, 'fs28', 192)" class="p">None</span>
            <span onmouseout="hideTip(event, 'fs15', 193)" onmouseover="showTip(event, 'fs15', 193)" class="p">Test</span>(<span onmouseout="hideTip(event, 'fs21', 194)" onmouseover="showTip(event, 'fs21', 194)" class="i">mi</span>, <span onmouseout="hideTip(event, 'fs77', 195)" onmouseover="showTip(event, 'fs77', 195)" class="i">case</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs80', 196)" onmouseover="showTip(event, 'fs80', 196)" class="i">Arguments</span>, <span onmouseout="hideTip(event, 'fs46', 197)" onmouseover="showTip(event, 'fs46', 197)" class="i">expected</span>, <span onmouseout="hideTip(event, 'fs44', 198)" onmouseover="showTip(event, 'fs44', 198)" class="i">ex</span>) 
         | <span class="o">:?</span> (<span onmouseout="hideTip(event, 'fs17', 199)" onmouseover="showTip(event, 'fs17', 199)" class="t">obj</span>[]) <span class="k">as</span> <span onmouseout="hideTip(event, 'fs81', 200)" onmouseover="showTip(event, 'fs81', 200)" class="i">args</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 201)" onmouseover="showTip(event, 'fs15', 201)" class="p">Test</span>(<span onmouseout="hideTip(event, 'fs21', 202)" onmouseover="showTip(event, 'fs21', 202)" class="i">mi</span>, <span onmouseout="hideTip(event, 'fs81', 203)" onmouseover="showTip(event, 'fs81', 203)" class="i">args</span>, <span onmouseout="hideTip(event, 'fs28', 204)" onmouseover="showTip(event, 'fs28', 204)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs44', 205)" onmouseover="showTip(event, 'fs44', 205)" class="i">ex</span>)
         | <span onmouseout="hideTip(event, 'fs82', 206)" onmouseover="showTip(event, 'fs82', 206)" class="i">arg</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 207)" onmouseover="showTip(event, 'fs15', 207)" class="p">Test</span>(<span onmouseout="hideTip(event, 'fs21', 208)" onmouseover="showTip(event, 'fs21', 208)" class="i">mi</span>, [|<span onmouseout="hideTip(event, 'fs82', 209)" onmouseover="showTip(event, 'fs82', 209)" class="i">arg</span>|], <span onmouseout="hideTip(event, 'fs28', 210)" onmouseover="showTip(event, 'fs28', 210)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs44', 211)" onmouseover="showTip(event, 'fs44', 211)" class="i">ex</span>)
      |]

   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs83', 212)" onmouseover="showTip(event, 'fs83', 212)" class="f">generateTests</span> <span onmouseout="hideTip(event, 'fs84', 213)" onmouseover="showTip(event, 'fs84', 213)" class="i">instance</span> (<span onmouseout="hideTip(event, 'fs21', 214)" onmouseover="showTip(event, 'fs21', 214)" class="i">mi</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs16', 215)" onmouseover="showTip(event, 'fs16', 215)" class="t">MethodInfo</span>) <span class="o">=</span>
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs21', 216)" onmouseover="showTip(event, 'fs21', 216)" class="i">mi</span> <span class="k">with</span>
      | <span onmouseout="hideTip(event, 'fs85', 217)" onmouseover="showTip(event, 'fs85', 217)" class="p">Ignore</span> <span class="k">-&gt;</span> [||]
      | <span onmouseout="hideTip(event, 'fs86', 218)" onmouseover="showTip(event, 'fs86', 218)" class="p">TestCases</span> <span onmouseout="hideTip(event, 'fs42', 219)" onmouseover="showTip(event, 'fs42', 219)" class="i">cases</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs41', 220)" onmouseover="showTip(event, 'fs41', 220)" class="f">fromCases</span> <span onmouseout="hideTip(event, 'fs21', 221)" onmouseover="showTip(event, 'fs21', 221)" class="i">mi</span> <span onmouseout="hideTip(event, 'fs42', 222)" onmouseover="showTip(event, 'fs42', 222)" class="i">cases</span>
      | <span onmouseout="hideTip(event, 'fs87', 223)" onmouseover="showTip(event, 'fs87', 223)" class="p">TestCaseSource</span>(<span onmouseout="hideTip(event, 'fs88', 224)" onmouseover="showTip(event, 'fs88', 224)" class="i">data</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs60', 225)" onmouseover="showTip(event, 'fs60', 225)" class="f">fromSource</span> <span onmouseout="hideTip(event, 'fs84', 226)" onmouseover="showTip(event, 'fs84', 226)" class="i">instance</span> <span onmouseout="hideTip(event, 'fs21', 227)" onmouseover="showTip(event, 'fs21', 227)" class="i">mi</span> <span onmouseout="hideTip(event, 'fs88', 228)" onmouseover="showTip(event, 'fs88', 228)" class="i">data</span>
      | <span onmouseout="hideTip(event, 'fs89', 229)" onmouseover="showTip(event, 'fs89', 229)" class="p">UnitTest</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs50', 230)" onmouseover="showTip(event, 'fs50', 230)" class="f">fromValues</span> <span onmouseout="hideTip(event, 'fs21', 231)" onmouseover="showTip(event, 'fs21', 231)" class="i">mi</span>
      | _ <span class="k">-&gt;</span> [||]

   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs90', 232)" onmouseover="showTip(event, 'fs90', 232)" class="f">runTest</span> <span onmouseout="hideTip(event, 'fs84', 233)" onmouseover="showTip(event, 'fs84', 233)" class="i">instance</span> (<span onmouseout="hideTip(event, 'fs15', 234)" onmouseover="showTip(event, 'fs15', 234)" class="p">Test</span>(<span onmouseout="hideTip(event, 'fs21', 235)" onmouseover="showTip(event, 'fs21', 235)" class="i">mi</span>,<span onmouseout="hideTip(event, 'fs81', 236)" onmouseover="showTip(event, 'fs81', 236)" class="i">args</span>,<span onmouseout="hideTip(event, 'fs46', 237)" onmouseover="showTip(event, 'fs46', 237)" class="i">expected</span>,<span onmouseout="hideTip(event, 'fs91', 238)" onmouseover="showTip(event, 'fs91', 238)" class="i">exType</span>)) <span class="o">=</span> 
      <span class="k">try</span>
         <span class="k">let</span> <span onmouseout="hideTip(event, 'fs92', 239)" onmouseover="showTip(event, 'fs92', 239)" class="i">actual</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 240)" onmouseover="showTip(event, 'fs21', 240)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 241)" onmouseover="showTip(event, 'fs72', 241)" class="f">Invoke</span>(<span onmouseout="hideTip(event, 'fs84', 242)" onmouseover="showTip(event, 'fs84', 242)" class="i">instance</span>,<span onmouseout="hideTip(event, 'fs81', 243)" onmouseover="showTip(event, 'fs81', 243)" class="i">args</span>)
         <span class="k">match</span> <span onmouseout="hideTip(event, 'fs46', 244)" onmouseover="showTip(event, 'fs46', 244)" class="i">expected</span> <span class="k">with</span>
         | <span onmouseout="hideTip(event, 'fs26', 245)" onmouseover="showTip(event, 'fs26', 245)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs93', 246)" onmouseover="showTip(event, 'fs93', 246)" class="i">expected</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs94', 247)" onmouseover="showTip(event, 'fs94', 247)" class="t">Assert</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs95', 248)" onmouseover="showTip(event, 'fs95', 248)" class="f">AreEqual</span>(<span onmouseout="hideTip(event, 'fs93', 249)" onmouseover="showTip(event, 'fs93', 249)" class="i">expected</span>, <span onmouseout="hideTip(event, 'fs92', 250)" onmouseover="showTip(event, 'fs92', 250)" class="i">actual</span>)
         | <span onmouseout="hideTip(event, 'fs28', 251)" onmouseover="showTip(event, 'fs28', 251)" class="p">None</span> <span class="k">-&gt;</span> ()
         <span onmouseout="hideTip(event, 'fs28', 252)" onmouseover="showTip(event, 'fs28', 252)" class="p">None</span>
      <span class="k">with</span> <span onmouseout="hideTip(event, 'fs96', 253)" onmouseover="showTip(event, 'fs96', 253)" class="i">ex</span> <span class="k">-&gt;</span> 
         <span class="k">match</span> <span onmouseout="hideTip(event, 'fs91', 254)" onmouseover="showTip(event, 'fs91', 254)" class="i">exType</span> <span class="k">with</span>
         | <span onmouseout="hideTip(event, 'fs26', 255)" onmouseover="showTip(event, 'fs26', 255)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs97', 256)" onmouseover="showTip(event, 'fs97', 256)" class="i">t</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs97', 257)" onmouseover="showTip(event, 'fs97', 257)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs96', 258)" onmouseover="showTip(event, 'fs96', 258)" class="i">ex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs98', 259)" onmouseover="showTip(event, 'fs98', 259)" class="f">GetType</span>() <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs28', 260)" onmouseover="showTip(event, 'fs28', 260)" class="p">None</span>
         | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs26', 261)" onmouseover="showTip(event, 'fs26', 261)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs96', 262)" onmouseover="showTip(event, 'fs96', 262)" class="i">ex</span>

   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs99', 263)" onmouseover="showTip(event, 'fs99', 263)" class="f">color</span> <span onmouseout="hideTip(event, 'fs100', 264)" onmouseover="showTip(event, 'fs100', 264)" class="i">c</span> <span class="o">=</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs101', 265)" onmouseover="showTip(event, 'fs101', 265)" class="i">previous</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs102', 266)" onmouseover="showTip(event, 'fs102', 266)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs103', 267)" onmouseover="showTip(event, 'fs103', 267)" class="i">ForegroundColor</span>
      <span onmouseout="hideTip(event, 'fs102', 268)" onmouseover="showTip(event, 'fs102', 268)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs103', 269)" onmouseover="showTip(event, 'fs103', 269)" class="i">ForegroundColor</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs100', 270)" onmouseover="showTip(event, 'fs100', 270)" class="i">c</span>
      { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs2', 271)" onmouseover="showTip(event, 'fs2', 271)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs104', 272)" onmouseover="showTip(event, 'fs104', 272)" class="t">IDisposable</span> <span class="k">with</span> 
         <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span class="f">Dispose</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs102', 273)" onmouseover="showTip(event, 'fs102', 273)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs103', 274)" onmouseover="showTip(event, 'fs103', 274)" class="i">ForegroundColor</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs101', 275)" onmouseover="showTip(event, 'fs101', 275)" class="i">previous</span>
      }

   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs105', 276)" onmouseover="showTip(event, 'fs105', 276)" class="f">showResult</span> <span onmouseout="hideTip(event, 'fs106', 277)" onmouseover="showTip(event, 'fs106', 277)" class="i">number</span> (<span onmouseout="hideTip(event, 'fs15', 278)" onmouseover="showTip(event, 'fs15', 278)" class="p">Test</span>(<span onmouseout="hideTip(event, 'fs21', 279)" onmouseover="showTip(event, 'fs21', 279)" class="i">mi</span>,<span onmouseout="hideTip(event, 'fs81', 280)" onmouseover="showTip(event, 'fs81', 280)" class="i">args</span>,_,_)) <span onmouseout="hideTip(event, 'fs107', 281)" onmouseover="showTip(event, 'fs107', 281)" class="i">error</span> <span class="o">=</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs108', 282)" onmouseover="showTip(event, 'fs108', 282)" class="i">name</span> <span class="o">=</span>
         <span onmouseout="hideTip(event, 'fs21', 283)" onmouseover="showTip(event, 'fs21', 283)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs109', 284)" onmouseover="showTip(event, 'fs109', 284)" class="i">Name</span> <span class="o">+</span> 
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs81', 285)" onmouseover="showTip(event, 'fs81', 285)" class="i">args</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 286)" onmouseover="showTip(event, 'fs33', 286)" class="i">Length</span> <span class="o">&gt;</span> <span class="n">0</span> <span class="k">then</span> <span class="s">&quot;(&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs110', 287)" onmouseover="showTip(event, 'fs110', 287)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs111', 288)" onmouseover="showTip(event, 'fs111', 288)" class="f">Join</span>(<span class="s">&quot;,&quot;</span>, <span onmouseout="hideTip(event, 'fs81', 289)" onmouseover="showTip(event, 'fs81', 289)" class="i">args</span>) <span class="o">+</span> <span class="s">&quot;)&quot;</span>
            <span class="k">else</span> <span class="s">&quot;&quot;</span>
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs107', 290)" onmouseover="showTip(event, 'fs107', 290)" class="i">error</span> <span class="k">with</span>
      | <span onmouseout="hideTip(event, 'fs28', 291)" onmouseover="showTip(event, 'fs28', 291)" class="p">None</span> <span class="k">-&gt;</span>
         <span onmouseout="hideTip(event, 'fs112', 292)" onmouseover="showTip(event, 'fs112', 292)" class="f">using</span> (<span onmouseout="hideTip(event, 'fs99', 293)" onmouseover="showTip(event, 'fs99', 293)" class="f">color</span> <span onmouseout="hideTip(event, 'fs113', 294)" onmouseover="showTip(event, 'fs113', 294)" class="t">ConsoleColor</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs114', 295)" onmouseover="showTip(event, 'fs114', 295)" class="i">Green</span>) <span class="o">&lt;|</span> <span class="k">fun</span> _ <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs115', 296)" onmouseover="showTip(event, 'fs115', 296)" class="f">printfn</span> <span class="s">&quot;ok </span><span class="pf">%d</span><span class="s"> - </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs106', 297)" onmouseover="showTip(event, 'fs106', 297)" class="i">number</span> <span onmouseout="hideTip(event, 'fs108', 298)" onmouseover="showTip(event, 'fs108', 298)" class="i">name</span>
      | <span onmouseout="hideTip(event, 'fs26', 299)" onmouseover="showTip(event, 'fs26', 299)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs116', 300)" onmouseover="showTip(event, 'fs116', 300)" class="i">e</span> <span class="k">-&gt;</span>
         <span onmouseout="hideTip(event, 'fs112', 301)" onmouseover="showTip(event, 'fs112', 301)" class="f">using</span> (<span onmouseout="hideTip(event, 'fs99', 302)" onmouseover="showTip(event, 'fs99', 302)" class="f">color</span> <span onmouseout="hideTip(event, 'fs113', 303)" onmouseover="showTip(event, 'fs113', 303)" class="t">ConsoleColor</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs117', 304)" onmouseover="showTip(event, 'fs117', 304)" class="i">Red</span>) <span class="o">&lt;|</span> <span class="k">fun</span> _ <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs115', 305)" onmouseover="showTip(event, 'fs115', 305)" class="f">printfn</span> <span class="s">&quot;not ok </span><span class="pf">%d</span><span class="s"> - </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs106', 306)" onmouseover="showTip(event, 'fs106', 306)" class="i">number</span> <span onmouseout="hideTip(event, 'fs108', 307)" onmouseover="showTip(event, 'fs108', 307)" class="i">name</span>
            <span onmouseout="hideTip(event, 'fs115', 308)" onmouseover="showTip(event, 'fs115', 308)" class="f">printfn</span> <span class="s">&quot;  </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs116', 309)" onmouseover="showTip(event, 'fs116', 309)" class="i">e</span>

   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs118', 310)" onmouseover="showTip(event, 'fs118', 310)" class="f">runTests</span> <span onmouseout="hideTip(event, 'fs84', 311)" onmouseover="showTip(event, 'fs84', 311)" class="i">instance</span> (<span onmouseout="hideTip(event, 'fs119', 312)" onmouseover="showTip(event, 'fs119', 312)" class="i">tests</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs15', 313)" onmouseover="showTip(event, 'fs15', 313)" class="t">Test</span>[]) <span class="o">=</span>
      <span onmouseout="hideTip(event, 'fs115', 314)" onmouseover="showTip(event, 'fs115', 314)" class="f">printfn</span> <span class="s">&quot;1..</span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs119', 315)" onmouseover="showTip(event, 'fs119', 315)" class="i">tests</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 316)" onmouseover="showTip(event, 'fs33', 316)" class="i">Length</span>
      <span onmouseout="hideTip(event, 'fs119', 317)" onmouseover="showTip(event, 'fs119', 317)" class="i">tests</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs120', 318)" onmouseover="showTip(event, 'fs120', 318)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs121', 319)" onmouseover="showTip(event, 'fs121', 319)" class="f">iteri</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs122', 320)" onmouseover="showTip(event, 'fs122', 320)" class="i">i</span> <span onmouseout="hideTip(event, 'fs123', 321)" onmouseover="showTip(event, 'fs123', 321)" class="i">test</span> <span class="k">-&gt;</span>
         <span onmouseout="hideTip(event, 'fs90', 322)" onmouseover="showTip(event, 'fs90', 322)" class="f">runTest</span> <span onmouseout="hideTip(event, 'fs84', 323)" onmouseover="showTip(event, 'fs84', 323)" class="i">instance</span> <span onmouseout="hideTip(event, 'fs123', 324)" onmouseover="showTip(event, 'fs123', 324)" class="i">test</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs105', 325)" onmouseover="showTip(event, 'fs105', 325)" class="f">showResult</span> (<span onmouseout="hideTip(event, 'fs122', 326)" onmouseover="showTip(event, 'fs122', 326)" class="i">i</span><span class="o">+</span><span class="n">1</span>) <span onmouseout="hideTip(event, 'fs123', 327)" onmouseover="showTip(event, 'fs123', 327)" class="i">test</span> 
      )

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs124', 328)" onmouseover="showTip(event, 'fs124', 328)" class="i">GenerateTests</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs125', 329)" onmouseover="showTip(event, 'fs125', 329)" class="f">Run</span> (<span onmouseout="hideTip(event, 'fs126', 330)" onmouseover="showTip(event, 'fs126', 330)" class="i">testType</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs2', 331)" onmouseover="showTip(event, 'fs2', 331)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 332)" onmouseover="showTip(event, 'fs14', 332)" class="t">Type</span>) <span class="o">=</span>
   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs127', 333)" onmouseover="showTip(event, 'fs127', 333)" class="i">instance</span> <span class="o">=</span> <span class="k">null</span>
   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs128', 334)" onmouseover="showTip(event, 'fs128', 334)" class="i">constr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs126', 335)" onmouseover="showTip(event, 'fs126', 335)" class="i">testType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs129', 336)" onmouseover="showTip(event, 'fs129', 336)" class="f">GetConstructor</span>([||])
   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs61', 337)" onmouseover="showTip(event, 'fs61', 337)" class="i">instance</span> <span class="o">=</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs128', 338)" onmouseover="showTip(event, 'fs128', 338)" class="i">constr</span> <span class="o">&lt;&gt;</span> <span class="k">null</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs128', 339)" onmouseover="showTip(event, 'fs128', 339)" class="i">constr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs130', 340)" onmouseover="showTip(event, 'fs130', 340)" class="f">Invoke</span>([||]) <span class="k">else</span> <span class="k">null</span>
   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs131', 341)" onmouseover="showTip(event, 'fs131', 341)" class="i">methods</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs126', 342)" onmouseover="showTip(event, 'fs126', 342)" class="i">testType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs132', 343)" onmouseover="showTip(event, 'fs132', 343)" class="f">GetMethods</span>()
   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs119', 344)" onmouseover="showTip(event, 'fs119', 344)" class="i">tests</span> <span class="o">=</span> [|<span class="k">for</span> <span onmouseout="hideTip(event, 'fs21', 345)" onmouseover="showTip(event, 'fs21', 345)" class="i">mi</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs131', 346)" onmouseover="showTip(event, 'fs131', 346)" class="i">methods</span> <span class="k">do</span> <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs83', 347)" onmouseover="showTip(event, 'fs83', 347)" class="f">generateTests</span> <span onmouseout="hideTip(event, 'fs61', 348)" onmouseover="showTip(event, 'fs61', 348)" class="i">instance</span> <span onmouseout="hideTip(event, 'fs21', 349)" onmouseover="showTip(event, 'fs21', 349)" class="i">mi</span>|]
  
   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs133', 350)" onmouseover="showTip(event, 'fs133', 350)" class="f">runMethodsWithAttribute</span> <span onmouseout="hideTip(event, 'fs134', 351)" onmouseover="showTip(event, 'fs134', 351)" class="i">attr</span> <span class="o">=</span> 
      <span onmouseout="hideTip(event, 'fs131', 352)" onmouseover="showTip(event, 'fs131', 352)" class="i">methods</span> 
      <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs120', 353)" onmouseover="showTip(event, 'fs120', 353)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs135', 354)" onmouseover="showTip(event, 'fs135', 354)" class="f">filter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs21', 355)" onmouseover="showTip(event, 'fs21', 355)" class="i">mi</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 356)" onmouseover="showTip(event, 'fs21', 356)" class="i">mi</span><span class="o">.</span><span class="i">GetCustomAttribute</span>(<span onmouseout="hideTip(event, 'fs134', 357)" onmouseover="showTip(event, 'fs134', 357)" class="i">attr</span>, <span class="k">true</span>) <span class="o">&lt;&gt;</span> <span class="k">null</span>)
      <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs120', 358)" onmouseover="showTip(event, 'fs120', 358)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs136', 359)" onmouseover="showTip(event, 'fs136', 359)" class="f">iter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs21', 360)" onmouseover="showTip(event, 'fs21', 360)" class="i">mi</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 361)" onmouseover="showTip(event, 'fs21', 361)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 362)" onmouseover="showTip(event, 'fs72', 362)" class="f">Invoke</span>(<span onmouseout="hideTip(event, 'fs61', 363)" onmouseover="showTip(event, 'fs61', 363)" class="i">instance</span>,[||]) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs137', 364)" onmouseover="showTip(event, 'fs137', 364)" class="f">ignore</span>)

   <span onmouseout="hideTip(event, 'fs133', 365)" onmouseover="showTip(event, 'fs133', 365)" class="f">runMethodsWithAttribute</span> <span onmouseout="hideTip(event, 'fs22', 366)" onmouseover="showTip(event, 'fs22', 366)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs138', 367)" onmouseover="showTip(event, 'fs138', 367)" class="t">SetUpAttribute</span><span class="o">&gt;</span>  
   <span onmouseout="hideTip(event, 'fs118', 368)" onmouseover="showTip(event, 'fs118', 368)" class="f">runTests</span> <span onmouseout="hideTip(event, 'fs61', 369)" onmouseover="showTip(event, 'fs61', 369)" class="i">instance</span> <span onmouseout="hideTip(event, 'fs119', 370)" onmouseover="showTip(event, 'fs119', 370)" class="i">tests</span>
   <span onmouseout="hideTip(event, 'fs133', 371)" onmouseover="showTip(event, 'fs133', 371)" class="f">runMethodsWithAttribute</span> <span onmouseout="hideTip(event, 'fs22', 372)" onmouseover="showTip(event, 'fs22', 372)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs139', 373)" onmouseover="showTip(event, 'fs139', 373)" class="t">TearDownAttribute</span><span class="o">&gt;</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module Tap</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace System.Reflection</div>
<div class="tip" id="fs4">namespace NUnit</div>
<div class="tip" id="fs5">namespace NUnit.Framework</div>
<div class="tip" id="fs6">Multiple items<br />type List =<br />&#160;&#160;new : unit -&gt; List<br />&#160;&#160;static member Map : actual:ICollection -&gt; ListMapper<br /><br />Full name: NUnit.Framework.List<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;<br /><br />--------------------<br />List() : unit</div>
<div class="tip" id="fs7">val internal combinations : _arg1:#seq&lt;&#39;b&gt; list -&gt; &#39;b list list<br /><br />Full name: Tap.List.combinations</div>
<div class="tip" id="fs8">val hs : #seq&lt;&#39;b&gt;</div>
<div class="tip" id="fs9">val tss : #seq&lt;&#39;b&gt; list</div>
<div class="tip" id="fs10">val h : &#39;b</div>
<div class="tip" id="fs11">val ts : &#39;b list</div>
<div class="tip" id="fs12">Multiple items<br />type internal ExpectedException = | ExceptionType of Type<br /><br />Full name: Tap.GenerateTests.ExpectedException<br /><br />--------------------<br />type ExpectedExceptionAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; ExpectedExceptionAttribute + 2 overloads<br />&#160;&#160;member ExpectedException : Type with get, set<br />&#160;&#160;member ExpectedExceptionName : string with get, set<br />&#160;&#160;member ExpectedMessage : string with get, set<br />&#160;&#160;member Handler : string with get, set<br />&#160;&#160;member MatchType : MessageMatch with get, set<br />&#160;&#160;member UserMessage : string with get, set<br /><br />Full name: NUnit.Framework.ExpectedExceptionAttribute<br /><br />--------------------<br />ExpectedExceptionAttribute() : unit<br />ExpectedExceptionAttribute(exceptionType: Type) : unit<br />ExpectedExceptionAttribute(exceptionName: string) : unit</div>
<div class="tip" id="fs13">union case ExpectedException.ExceptionType: Type -&gt; ExpectedException</div>
<div class="tip" id="fs14">type Type =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Assembly : Assembly<br />&#160;&#160;member AssemblyQualifiedName : string<br />&#160;&#160;member Attributes : TypeAttributes<br />&#160;&#160;member BaseType : Type<br />&#160;&#160;member ContainsGenericParameters : bool<br />&#160;&#160;member DeclaringMethod : MethodBase<br />&#160;&#160;member DeclaringType : Type<br />&#160;&#160;member Equals : o:obj -&gt; bool + 1 overload<br />&#160;&#160;member FindInterfaces : filter:TypeFilter * filterCriteria:obj -&gt; Type[]<br />&#160;&#160;member FindMembers : memberType:MemberTypes * bindingAttr:BindingFlags * filter:MemberFilter * filterCriteria:obj -&gt; MemberInfo[]<br />&#160;&#160;...<br /><br />Full name: System.Type</div>
<div class="tip" id="fs15">Multiple items<br />union case Test.Test: MethodInfo * obj [] * obj option * Type option -&gt; Test<br /><br />--------------------<br />type internal Test = | Test of MethodInfo * obj [] * obj option * Type option<br /><br />Full name: Tap.GenerateTests.Test<br /><br />--------------------<br />type TestAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; TestAttribute<br />&#160;&#160;member Description : string with get, set<br /><br />Full name: NUnit.Framework.TestAttribute<br /><br />--------------------<br />TestAttribute() : unit</div>
<div class="tip" id="fs16">type MethodInfo =<br />&#160;&#160;inherit MethodBase<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetBaseDefinition : unit -&gt; MethodInfo<br />&#160;&#160;member GetGenericArguments : unit -&gt; Type[]<br />&#160;&#160;member GetGenericMethodDefinition : unit -&gt; MethodInfo<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member MakeGenericMethod : [&lt;ParamArray&gt;] typeArguments:Type[] -&gt; MethodInfo<br />&#160;&#160;member MemberType : MemberTypes<br />&#160;&#160;member ReturnParameter : ParameterInfo<br />&#160;&#160;member ReturnType : Type<br />&#160;&#160;member ReturnTypeCustomAttributes : ICustomAttributeProvider<br /><br />Full name: System.Reflection.MethodInfo</div>
<div class="tip" id="fs17">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs18">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs19">val internal getCustomAttribute : mi:MethodInfo -&gt; #Attribute<br /><br />Full name: Tap.GenerateTests.getCustomAttribute</div>
<div class="tip" id="fs20">type Attribute =<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member IsDefaultAttribute : unit -&gt; bool<br />&#160;&#160;member Match : obj:obj -&gt; bool<br />&#160;&#160;member TypeId : obj<br />&#160;&#160;static member GetCustomAttribute : element:MemberInfo * attributeType:Type -&gt; Attribute + 7 overloads<br />&#160;&#160;static member GetCustomAttributes : element:MemberInfo -&gt; Attribute[] + 15 overloads<br />&#160;&#160;static member IsDefined : element:MemberInfo * attributeType:Type -&gt; bool + 7 overloads<br /><br />Full name: System.Attribute</div>
<div class="tip" id="fs21">val mi : MethodInfo</div>
<div class="tip" id="fs22">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs23">val internal toExpectedException : mi:MethodInfo -&gt; Type option<br /><br />Full name: Tap.GenerateTests.toExpectedException</div>
<div class="tip" id="fs24">val attr : ExpectedExceptionAttribute</div>
<div class="tip" id="fs25">Multiple items<br />type ExpectedExceptionAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; ExpectedExceptionAttribute + 2 overloads<br />&#160;&#160;member ExpectedException : Type with get, set<br />&#160;&#160;member ExpectedExceptionName : string with get, set<br />&#160;&#160;member ExpectedMessage : string with get, set<br />&#160;&#160;member Handler : string with get, set<br />&#160;&#160;member MatchType : MessageMatch with get, set<br />&#160;&#160;member UserMessage : string with get, set<br /><br />Full name: NUnit.Framework.ExpectedExceptionAttribute<br /><br />--------------------<br />ExpectedExceptionAttribute() : unit<br />ExpectedExceptionAttribute(exceptionType: Type) : unit<br />ExpectedExceptionAttribute(exceptionName: string) : unit</div>
<div class="tip" id="fs26">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs27">property ExpectedExceptionAttribute.ExpectedException: Type</div>
<div class="tip" id="fs28">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs29">Multiple items<br />type IgnoreAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; IgnoreAttribute + 1 overload<br />&#160;&#160;member Reason : string<br /><br />Full name: NUnit.Framework.IgnoreAttribute<br /><br />--------------------<br />IgnoreAttribute() : unit<br />IgnoreAttribute(reason: string) : unit</div>
<div class="tip" id="fs30">val cases : obj []</div>
<div class="tip" id="fs31">MemberInfo.GetCustomAttributes(inherit: bool) : obj []<br />MemberInfo.GetCustomAttributes(attributeType: Type, inherit: bool) : obj []</div>
<div class="tip" id="fs32">Multiple items<br />type TestCaseAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : [&lt;ParamArray&gt;] arguments:obj[] -&gt; TestCaseAttribute + 3 overloads<br />&#160;&#160;member Arguments : obj[]<br />&#160;&#160;member Categories : IList<br />&#160;&#160;member Category : string with get, set<br />&#160;&#160;member Description : string with get, set<br />&#160;&#160;member ExpectedException : Type with get, set<br />&#160;&#160;member ExpectedExceptionName : string with get, set<br />&#160;&#160;member ExpectedMessage : string with get, set<br />&#160;&#160;member ExpectedResult : obj with get, set<br />&#160;&#160;member Explicit : bool with get, set<br />&#160;&#160;...<br /><br />Full name: NUnit.Framework.TestCaseAttribute<br /><br />--------------------<br />TestCaseAttribute([&lt;ParamArray&gt;] arguments: obj []) : unit<br />TestCaseAttribute(arg: obj) : unit<br />TestCaseAttribute(arg1: obj, arg2: obj) : unit<br />TestCaseAttribute(arg1: obj, arg2: obj, arg3: obj) : unit</div>
<div class="tip" id="fs33">property Array.Length: int</div>
<div class="tip" id="fs34">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs35">val cast : source:Collections.IEnumerable -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.cast</div>
<div class="tip" id="fs36">Multiple items<br />type TestCaseSourceAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : sourceName:string -&gt; TestCaseSourceAttribute + 2 overloads<br />&#160;&#160;member Category : string with get, set<br />&#160;&#160;member SourceName : string<br />&#160;&#160;member SourceType : Type<br /><br />Full name: NUnit.Framework.TestCaseSourceAttribute<br /><br />--------------------<br />TestCaseSourceAttribute(sourceName: string) : unit<br />TestCaseSourceAttribute(sourceType: Type) : unit<br />TestCaseSourceAttribute(sourceType: Type, sourceName: string) : unit</div>
<div class="tip" id="fs37">val source : TestCaseSourceAttribute</div>
<div class="tip" id="fs38">property TestCaseSourceAttribute.SourceName: string</div>
<div class="tip" id="fs39">property TestCaseSourceAttribute.SourceType: Type</div>
<div class="tip" id="fs40">Multiple items<br />type TestAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; TestAttribute<br />&#160;&#160;member Description : string with get, set<br /><br />Full name: NUnit.Framework.TestAttribute<br /><br />--------------------<br />TestAttribute() : unit</div>
<div class="tip" id="fs41">val internal fromCases : mi:MethodInfo -&gt; cases:seq&lt;TestCaseAttribute&gt; -&gt; Test []<br /><br />Full name: Tap.GenerateTests.fromCases</div>
<div class="tip" id="fs42">val cases : seq&lt;TestCaseAttribute&gt;</div>
<div class="tip" id="fs43">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs44">val ex : Type option</div>
<div class="tip" id="fs45">val case : TestCaseAttribute</div>
<div class="tip" id="fs46">val expected : obj option</div>
<div class="tip" id="fs47">property TestCaseAttribute.HasExpectedResult: bool</div>
<div class="tip" id="fs48">property TestCaseAttribute.ExpectedResult: obj</div>
<div class="tip" id="fs49">property TestCaseAttribute.Arguments: obj []</div>
<div class="tip" id="fs50">val internal fromValues : mi:MethodInfo -&gt; Test []<br /><br />Full name: Tap.GenerateTests.fromValues</div>
<div class="tip" id="fs51">val ps : ParameterInfo []</div>
<div class="tip" id="fs52">MethodBase.GetParameters() : ParameterInfo []</div>
<div class="tip" id="fs53">val argValues : seq&lt;obj&gt; list</div>
<div class="tip" id="fs54">val p : ParameterInfo</div>
<div class="tip" id="fs55">Multiple items<br />type ValuesAttribute =<br />&#160;&#160;inherit ParameterDataAttribute<br />&#160;&#160;new : arg1:obj -&gt; ValuesAttribute + 3 overloads<br />&#160;&#160;member GetData : parameter:ParameterInfo -&gt; IEnumerable<br /><br />Full name: NUnit.Framework.ValuesAttribute<br /><br />--------------------<br />ValuesAttribute(arg1: obj) : unit<br />ValuesAttribute([&lt;ParamArray&gt;] args: obj []) : unit<br />ValuesAttribute(arg1: obj, arg2: obj) : unit<br />ValuesAttribute(arg1: obj, arg2: obj, arg3: obj) : unit</div>
<div class="tip" id="fs56">val invalidOp : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.invalidOp</div>
<div class="tip" id="fs57">val xs : obj list list</div>
<div class="tip" id="fs58">val args : obj list</div>
<div class="tip" id="fs59">val toArray : list:&#39;T list -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.List.toArray</div>
<div class="tip" id="fs60">val internal fromSource : instance:obj -&gt; mi:MethodInfo -&gt; sourceName:string * sourceType:Type -&gt; Test []<br /><br />Full name: Tap.GenerateTests.fromSource</div>
<div class="tip" id="fs61">val instance : obj</div>
<div class="tip" id="fs62">val sourceName : string</div>
<div class="tip" id="fs63">val sourceType : Type</div>
<div class="tip" id="fs64">val pi : PropertyInfo</div>
<div class="tip" id="fs65">property MemberInfo.DeclaringType: Type</div>
<div class="tip" id="fs66">Type.GetProperty(name: string) : PropertyInfo<br />Type.GetProperty(name: string, returnType: Type) : PropertyInfo<br />Type.GetProperty(name: string, types: Type []) : PropertyInfo<br />Type.GetProperty(name: string, bindingAttr: BindingFlags) : PropertyInfo<br />Type.GetProperty(name: string, returnType: Type, types: Type []) : PropertyInfo<br />Type.GetProperty(name: string, returnType: Type, types: Type [], modifiers: ParameterModifier []) : PropertyInfo<br />Type.GetProperty(name: string, bindingAttr: BindingFlags, binder: Binder, returnType: Type, types: Type [], modifiers: ParameterModifier []) : PropertyInfo</div>
<div class="tip" id="fs67">val getter : MethodInfo</div>
<div class="tip" id="fs68">PropertyInfo.GetGetMethod() : MethodInfo<br />PropertyInfo.GetGetMethod(nonPublic: bool) : MethodInfo</div>
<div class="tip" id="fs69">type Activator =<br />&#160;&#160;static member CreateComInstanceFrom : assemblyName:string * typeName:string -&gt; ObjectHandle + 1 overload<br />&#160;&#160;static member CreateInstance&lt;&#39;T&gt; : unit -&gt; &#39;T + 15 overloads<br />&#160;&#160;static member CreateInstanceFrom : assemblyFile:string * typeName:string -&gt; ObjectHandle + 6 overloads<br />&#160;&#160;static member GetObject : type:Type * url:string -&gt; obj + 1 overload<br /><br />Full name: System.Activator</div>
<div class="tip" id="fs70">Activator.CreateInstance&lt;&#39;T&gt;() : &#39;T<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(activationContext: ActivationContext) : Runtime.Remoting.ObjectHandle<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(type: Type) : obj<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(activationContext: ActivationContext, activationCustomData: string []) : Runtime.Remoting.ObjectHandle<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(type: Type, nonPublic: bool) : obj<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(assemblyName: string, typeName: string) : Runtime.Remoting.ObjectHandle<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(type: Type, [&lt;ParamArray&gt;] args: obj []) : obj<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(domain: AppDomain, assemblyName: string, typeName: string) : Runtime.Remoting.ObjectHandle<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(assemblyName: string, typeName: string, activationAttributes: obj []) : Runtime.Remoting.ObjectHandle<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(type: Type, args: obj [], activationAttributes: obj []) : obj<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs71">val data : Collections.IEnumerable</div>
<div class="tip" id="fs72">MethodBase.Invoke(obj: obj, parameters: obj []) : obj<br />MethodBase.Invoke(obj: obj, invokeAttr: BindingFlags, binder: Binder, parameters: obj [], culture: Globalization.CultureInfo) : obj</div>
<div class="tip" id="fs73">namespace System.Collections</div>
<div class="tip" id="fs74">type IEnumerable =<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br /><br />Full name: System.Collections.IEnumerable</div>
<div class="tip" id="fs75">val item : obj</div>
<div class="tip" id="fs76">Multiple items<br />type TestCaseData =<br />&#160;&#160;new : [&lt;ParamArray&gt;] args:obj[] -&gt; TestCaseData + 3 overloads<br />&#160;&#160;member Arguments : obj[]<br />&#160;&#160;member Categories : IList<br />&#160;&#160;member Description : string<br />&#160;&#160;member ExpectedException : Type<br />&#160;&#160;member ExpectedExceptionName : string<br />&#160;&#160;member Explicit : bool<br />&#160;&#160;member HasExpectedResult : bool<br />&#160;&#160;member Ignore : unit -&gt; TestCaseData + 1 overload<br />&#160;&#160;member IgnoreReason : string<br />&#160;&#160;...<br /><br />Full name: NUnit.Framework.TestCaseData<br /><br />--------------------<br />TestCaseData([&lt;ParamArray&gt;] args: obj []) : unit<br />TestCaseData(arg: obj) : unit<br />TestCaseData(arg1: obj, arg2: obj) : unit<br />TestCaseData(arg1: obj, arg2: obj, arg3: obj) : unit</div>
<div class="tip" id="fs77">val case : TestCaseData</div>
<div class="tip" id="fs78">property TestCaseData.HasExpectedResult: bool</div>
<div class="tip" id="fs79">property TestCaseData.Result: obj</div>
<div class="tip" id="fs80">property TestCaseData.Arguments: obj []</div>
<div class="tip" id="fs81">val args : obj []</div>
<div class="tip" id="fs82">val arg : obj</div>
<div class="tip" id="fs83">val internal generateTests : instance:&#39;a -&gt; mi:MethodInfo -&gt; Test []<br /><br />Full name: Tap.GenerateTests.generateTests</div>
<div class="tip" id="fs84">val instance : &#39;a</div>
<div class="tip" id="fs85">Multiple items<br />active recognizer Ignore: MethodInfo -&gt; unit option<br /><br />Full name: Tap.GenerateTests.( |Ignore|_| )<br /><br />--------------------<br />type IgnoreAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; IgnoreAttribute + 1 overload<br />&#160;&#160;member Reason : string<br /><br />Full name: NUnit.Framework.IgnoreAttribute<br /><br />--------------------<br />IgnoreAttribute() : unit<br />IgnoreAttribute(reason: string) : unit</div>
<div class="tip" id="fs86">active recognizer TestCases: MethodInfo -&gt; seq&lt;TestCaseAttribute&gt; option<br /><br />Full name: Tap.GenerateTests.( |TestCases|_| )</div>
<div class="tip" id="fs87">Multiple items<br />active recognizer TestCaseSource: MethodInfo -&gt; (string * Type) option<br /><br />Full name: Tap.GenerateTests.( |TestCaseSource|_| )<br /><br />--------------------<br />type TestCaseSourceAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : sourceName:string -&gt; TestCaseSourceAttribute + 2 overloads<br />&#160;&#160;member Category : string with get, set<br />&#160;&#160;member SourceName : string<br />&#160;&#160;member SourceType : Type<br /><br />Full name: NUnit.Framework.TestCaseSourceAttribute<br /><br />--------------------<br />TestCaseSourceAttribute(sourceName: string) : unit<br />TestCaseSourceAttribute(sourceType: Type) : unit<br />TestCaseSourceAttribute(sourceType: Type, sourceName: string) : unit</div>
<div class="tip" id="fs88">val data : string * Type</div>
<div class="tip" id="fs89">active recognizer UnitTest: MethodInfo -&gt; unit option<br /><br />Full name: Tap.GenerateTests.( |UnitTest|_| )</div>
<div class="tip" id="fs90">val internal runTest : instance:&#39;a -&gt; Test -&gt; exn option<br /><br />Full name: Tap.GenerateTests.runTest</div>
<div class="tip" id="fs91">val exType : Type option</div>
<div class="tip" id="fs92">val actual : obj</div>
<div class="tip" id="fs93">val expected : obj</div>
<div class="tip" id="fs94">type Assert =<br />&#160;&#160;static member AreEqual : expected:int * actual:int -&gt; unit + 23 overloads<br />&#160;&#160;static member AreNotEqual : expected:int * actual:int -&gt; unit + 23 overloads<br />&#160;&#160;static member AreNotSame : expected:obj * actual:obj -&gt; unit + 2 overloads<br />&#160;&#160;static member AreSame : expected:obj * actual:obj -&gt; unit + 2 overloads<br />&#160;&#160;static member ByVal : actual:obj * expression:IResolveConstraint -&gt; unit + 2 overloads<br />&#160;&#160;static member Catch : code:TestDelegate -&gt; Exception + 8 overloads<br />&#160;&#160;static member Contains : expected:obj * actual:ICollection -&gt; unit + 2 overloads<br />&#160;&#160;static member Counter : int<br />&#160;&#160;static member DoesNotThrow : code:TestDelegate -&gt; unit + 2 overloads<br />&#160;&#160;static member Equals : a:obj * b:obj -&gt; bool<br />&#160;&#160;...<br /><br />Full name: NUnit.Framework.Assert</div>
<div class="tip" id="fs95">Assert.AreEqual(expected: obj, actual: obj) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: decimal, actual: decimal) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: uint64, actual: uint64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: uint32, actual: uint32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: int64, actual: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: int, actual: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: obj, actual: obj, message: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: float, actual: Nullable&lt;float&gt;, delta: float) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: float, actual: float, delta: float) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: decimal, actual: decimal, message: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs96">val ex : exn</div>
<div class="tip" id="fs97">val t : Type</div>
<div class="tip" id="fs98">Exception.GetType() : Type</div>
<div class="tip" id="fs99">val internal color : c:ConsoleColor -&gt; IDisposable<br /><br />Full name: Tap.GenerateTests.color</div>
<div class="tip" id="fs100">val c : ConsoleColor</div>
<div class="tip" id="fs101">val previous : ConsoleColor</div>
<div class="tip" id="fs102">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs103">property Console.ForegroundColor: ConsoleColor</div>
<div class="tip" id="fs104">type IDisposable =<br />&#160;&#160;member Dispose : unit -&gt; unit<br /><br />Full name: System.IDisposable</div>
<div class="tip" id="fs105">val internal showResult : number:int -&gt; Test -&gt; error:&#39;a option -&gt; unit<br /><br />Full name: Tap.GenerateTests.showResult</div>
<div class="tip" id="fs106">val number : int</div>
<div class="tip" id="fs107">val error : &#39;a option</div>
<div class="tip" id="fs108">val name : string</div>
<div class="tip" id="fs109">property MemberInfo.Name: string</div>
<div class="tip" id="fs110">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs111">String.Join(separator: string, values: Collections.Generic.IEnumerable&lt;string&gt;) : string<br />String.Join&lt;&#39;T&gt;(separator: string, values: Collections.Generic.IEnumerable&lt;&#39;T&gt;) : string<br />String.Join(separator: string, [&lt;ParamArray&gt;] values: obj []) : string<br />String.Join(separator: string, [&lt;ParamArray&gt;] value: string []) : string<br />String.Join(separator: string, value: string [], startIndex: int, count: int) : string</div>
<div class="tip" id="fs112">val using : resource:&#39;T -&gt; action:(&#39;T -&gt; &#39;U) -&gt; &#39;U (requires &#39;T :&gt; IDisposable)<br /><br />Full name: Microsoft.FSharp.Core.Operators.using</div>
<div class="tip" id="fs113">type ConsoleColor =<br />&#160;&#160;| Black = 0<br />&#160;&#160;| DarkBlue = 1<br />&#160;&#160;| DarkGreen = 2<br />&#160;&#160;| DarkCyan = 3<br />&#160;&#160;| DarkRed = 4<br />&#160;&#160;| DarkMagenta = 5<br />&#160;&#160;| DarkYellow = 6<br />&#160;&#160;| Gray = 7<br />&#160;&#160;| DarkGray = 8<br />&#160;&#160;| Blue = 9<br />&#160;&#160;...<br /><br />Full name: System.ConsoleColor</div>
<div class="tip" id="fs114">field ConsoleColor.Green = 10</div>
<div class="tip" id="fs115">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs116">val e : &#39;a</div>
<div class="tip" id="fs117">field ConsoleColor.Red = 12</div>
<div class="tip" id="fs118">val internal runTests : instance:&#39;a -&gt; tests:Test [] -&gt; unit<br /><br />Full name: Tap.GenerateTests.runTests</div>
<div class="tip" id="fs119">val tests : Test []</div>
<div class="tip" id="fs120">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs121">val iteri : action:(int -&gt; &#39;T -&gt; unit) -&gt; array:&#39;T [] -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.Array.iteri</div>
<div class="tip" id="fs122">val i : int</div>
<div class="tip" id="fs123">val test : Test</div>
<div class="tip" id="fs124">module GenerateTests<br /><br />from Tap</div>
<div class="tip" id="fs125">val Run : testType:Type -&gt; unit<br /><br />Full name: Tap.Run</div>
<div class="tip" id="fs126">val testType : Type</div>
<div class="tip" id="fs127">val instance : &#39;a (requires &#39;a : null)</div>
<div class="tip" id="fs128">val constr : ConstructorInfo</div>
<div class="tip" id="fs129">Type.GetConstructor(types: Type []) : ConstructorInfo<br />Type.GetConstructor(bindingAttr: BindingFlags, binder: Binder, types: Type [], modifiers: ParameterModifier []) : ConstructorInfo<br />Type.GetConstructor(bindingAttr: BindingFlags, binder: Binder, callConvention: CallingConventions, types: Type [], modifiers: ParameterModifier []) : ConstructorInfo</div>
<div class="tip" id="fs130">ConstructorInfo.Invoke(parameters: obj []) : obj<br />MethodBase.Invoke(obj: obj, parameters: obj []) : obj<br />ConstructorInfo.Invoke(invokeAttr: BindingFlags, binder: Binder, parameters: obj [], culture: Globalization.CultureInfo) : obj<br />MethodBase.Invoke(obj: obj, invokeAttr: BindingFlags, binder: Binder, parameters: obj [], culture: Globalization.CultureInfo) : obj</div>
<div class="tip" id="fs131">val methods : MethodInfo []</div>
<div class="tip" id="fs132">Type.GetMethods() : MethodInfo []<br />Type.GetMethods(bindingAttr: BindingFlags) : MethodInfo []</div>
<div class="tip" id="fs133">val runMethodsWithAttribute : (&#39;a -&gt; unit)</div>
<div class="tip" id="fs134">val attr : &#39;a</div>
<div class="tip" id="fs135">val filter : predicate:(&#39;T -&gt; bool) -&gt; array:&#39;T [] -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.filter</div>
<div class="tip" id="fs136">val iter : action:(&#39;T -&gt; unit) -&gt; array:&#39;T [] -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.Array.iter</div>
<div class="tip" id="fs137">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>
<div class="tip" id="fs138">Multiple items<br />type SetUpAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; SetUpAttribute<br /><br />Full name: NUnit.Framework.SetUpAttribute<br /><br />--------------------<br />SetUpAttribute() : unit</div>
<div class="tip" id="fs139">Multiple items<br />type TearDownAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; TearDownAttribute<br /><br />Full name: NUnit.Framework.TearDownAttribute<br /><br />--------------------<br />TearDownAttribute() : unit</div>

