<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
<span class="l">74: </span>
<span class="l">75: </span>
<span class="l">76: </span>
<span class="l">77: </span>
<span class="l">78: </span>
<span class="l">79: </span>
<span class="l">80: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Observable</span> 
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">createObservableAgent</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">maxQueueDepth</span> (<span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">token</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs2', 6)" onmouseover="showTip(event, 'fs2', 6)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">Threading</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="t">CancellationToken</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="v">finished</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="f">ref</span> <span class="k">false</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="v">subscribers</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="f">ref</span> (<span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="i">empty</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="t">Map</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs13', 16)" onmouseover="showTip(event, 'fs13', 16)" class="t">int</span>, <span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="t">IObserver</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span><span class="o">&gt;</span>)

    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs15', 18)" onmouseover="showTip(event, 'fs15', 18)" class="f">publish</span> <span onmouseout="hideTip(event, 'fs16', 19)" onmouseover="showTip(event, 'fs16', 19)" class="i">msg</span> <span class="o">=</span> 
        <span class="o">!</span><span onmouseout="hideTip(event, 'fs10', 20)" onmouseover="showTip(event, 'fs10', 20)" class="v">subscribers</span> 
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs17', 21)" onmouseover="showTip(event, 'fs17', 21)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 22)" onmouseover="showTip(event, 'fs18', 22)" class="f">iter</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs19', 23)" onmouseover="showTip(event, 'fs19', 23)" class="p">KeyValue</span>(_, <span onmouseout="hideTip(event, 'fs20', 24)" onmouseover="showTip(event, 'fs20', 24)" class="i">sub</span>)) <span class="k">-&gt;</span>
            <span class="k">try</span>
                    <span onmouseout="hideTip(event, 'fs20', 25)" onmouseover="showTip(event, 'fs20', 25)" class="i">sub</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 26)" onmouseover="showTip(event, 'fs21', 26)" class="f">OnNext</span>(<span onmouseout="hideTip(event, 'fs16', 27)" onmouseover="showTip(event, 'fs16', 27)" class="i">msg</span>)
            <span class="k">with</span> <span onmouseout="hideTip(event, 'fs22', 28)" onmouseover="showTip(event, 'fs22', 28)" class="i">ex</span> <span class="k">-&gt;</span> 
                <span onmouseout="hideTip(event, 'fs2', 29)" onmouseover="showTip(event, 'fs2', 29)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 30)" onmouseover="showTip(event, 'fs23', 30)" class="i">Diagnostics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 31)" onmouseover="showTip(event, 'fs24', 31)" class="t">Debug</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 32)" onmouseover="showTip(event, 'fs25', 32)" class="f">Write</span>(<span onmouseout="hideTip(event, 'fs22', 33)" onmouseover="showTip(event, 'fs22', 33)" class="i">ex</span>))

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 34)" onmouseover="showTip(event, 'fs26', 34)" class="f">completed</span>() <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs27', 35)" onmouseover="showTip(event, 'fs27', 35)" class="f">lock</span> <span onmouseout="hideTip(event, 'fs10', 36)" onmouseover="showTip(event, 'fs10', 36)" class="v">subscribers</span> (<span class="k">fun</span> () <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs8', 37)" onmouseover="showTip(event, 'fs8', 37)" class="v">finished</span> <span class="o">:=</span> <span class="k">true</span>
        <span class="o">!</span><span onmouseout="hideTip(event, 'fs10', 38)" onmouseover="showTip(event, 'fs10', 38)" class="v">subscribers</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs17', 39)" onmouseover="showTip(event, 'fs17', 39)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 40)" onmouseover="showTip(event, 'fs18', 40)" class="f">iter</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="p">KeyValue</span>(_, <span onmouseout="hideTip(event, 'fs20', 42)" onmouseover="showTip(event, 'fs20', 42)" class="i">sub</span>)) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 43)" onmouseover="showTip(event, 'fs20', 43)" class="i">sub</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 44)" onmouseover="showTip(event, 'fs28', 44)" class="f">OnCompleted</span>())
        <span onmouseout="hideTip(event, 'fs10', 45)" onmouseover="showTip(event, 'fs10', 45)" class="v">subscribers</span> <span class="o">:=</span> <span onmouseout="hideTip(event, 'fs11', 46)" onmouseover="showTip(event, 'fs11', 46)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 47)" onmouseover="showTip(event, 'fs12', 47)" class="i">empty</span>)

    <span onmouseout="hideTip(event, 'fs5', 48)" onmouseover="showTip(event, 'fs5', 48)" class="i">token</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 49)" onmouseover="showTip(event, 'fs29', 49)" class="f">Register</span>(<span class="k">fun</span> () <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs26', 50)" onmouseover="showTip(event, 'fs26', 50)" class="f">completed</span>()) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 51)" onmouseover="showTip(event, 'fs30', 51)" class="f">ignore</span> <span class="c">//callback for when token is cancelled</span>
            
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 52)" onmouseover="showTip(event, 'fs31', 52)" class="v">count</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 53)" onmouseover="showTip(event, 'fs9', 53)" class="f">ref</span> <span class="n">0</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 54)" onmouseover="showTip(event, 'fs32', 54)" class="i">agent</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs33', 55)" onmouseover="showTip(event, 'fs33', 55)" class="t">MailboxProcessor</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 56)" onmouseover="showTip(event, 'fs34', 56)" class="f">Start</span>
            ((<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs35', 57)" onmouseover="showTip(event, 'fs35', 57)" class="i">inbox</span> <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs36', 58)" onmouseover="showTip(event, 'fs36', 58)" class="i">async</span> {
                    <span class="k">while</span> <span class="k">true</span> <span class="k">do</span>
                        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs16', 59)" onmouseover="showTip(event, 'fs16', 59)" class="i">msg</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs35', 60)" onmouseover="showTip(event, 'fs35', 60)" class="i">inbox</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 61)" onmouseover="showTip(event, 'fs37', 61)" class="f">Receive</span>()
                        <span onmouseout="hideTip(event, 'fs15', 62)" onmouseover="showTip(event, 'fs15', 62)" class="f">publish</span> <span onmouseout="hideTip(event, 'fs16', 63)" onmouseover="showTip(event, 'fs16', 63)" class="i">msg</span>} ),
                <span onmouseout="hideTip(event, 'fs5', 64)" onmouseover="showTip(event, 'fs5', 64)" class="i">token</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 65)" onmouseover="showTip(event, 'fs38', 65)" class="i">obs</span> <span class="o">=</span> 
        { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs39', 66)" onmouseover="showTip(event, 'fs39', 66)" class="t">IObservable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">with</span> 
            <span class="k">member</span> <span onmouseout="hideTip(event, 'fs40', 67)" onmouseover="showTip(event, 'fs40', 67)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 68)" onmouseover="showTip(event, 'fs41', 68)" class="f">Subscribe</span>(<span onmouseout="hideTip(event, 'fs42', 69)" onmouseover="showTip(event, 'fs42', 69)" class="i">obs</span>) <span class="o">=</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs43', 70)" onmouseover="showTip(event, 'fs43', 70)" class="i">key1</span> <span class="o">=</span>
                    <span onmouseout="hideTip(event, 'fs27', 71)" onmouseover="showTip(event, 'fs27', 71)" class="f">lock</span> <span onmouseout="hideTip(event, 'fs10', 72)" onmouseover="showTip(event, 'fs10', 72)" class="v">subscribers</span> (<span class="k">fun</span> () <span class="k">-&gt;</span>
                        <span class="k">if</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs8', 73)" onmouseover="showTip(event, 'fs8', 73)" class="v">finished</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs44', 74)" onmouseover="showTip(event, 'fs44', 74)" class="f">failwith</span> <span class="s">&quot;Observable has already completed&quot;</span>
                        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs43', 75)" onmouseover="showTip(event, 'fs43', 75)" class="i">key1</span> <span class="o">=</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs31', 76)" onmouseover="showTip(event, 'fs31', 76)" class="v">count</span>
                        <span onmouseout="hideTip(event, 'fs31', 77)" onmouseover="showTip(event, 'fs31', 77)" class="v">count</span> <span class="o">:=</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs31', 78)" onmouseover="showTip(event, 'fs31', 78)" class="v">count</span> <span class="o">+</span> <span class="n">1</span>
                        <span onmouseout="hideTip(event, 'fs10', 79)" onmouseover="showTip(event, 'fs10', 79)" class="v">subscribers</span> <span class="o">:=</span> <span onmouseout="hideTip(event, 'fs10', 80)" onmouseover="showTip(event, 'fs10', 80)" class="v">subscribers</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 81)" onmouseover="showTip(event, 'fs45', 81)" class="i">Value</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 82)" onmouseover="showTip(event, 'fs46', 82)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs43', 83)" onmouseover="showTip(event, 'fs43', 83)" class="i">key1</span>, <span onmouseout="hideTip(event, 'fs42', 84)" onmouseover="showTip(event, 'fs42', 84)" class="i">obs</span>)
                        <span onmouseout="hideTip(event, 'fs43', 85)" onmouseover="showTip(event, 'fs43', 85)" class="i">key1</span>)
                { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs47', 86)" onmouseover="showTip(event, 'fs47', 86)" class="t">IDisposable</span> <span class="k">with</span>  
                    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs48', 87)" onmouseover="showTip(event, 'fs48', 87)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 88)" onmouseover="showTip(event, 'fs49', 88)" class="f">Dispose</span>() <span class="o">=</span> 
                        <span onmouseout="hideTip(event, 'fs27', 89)" onmouseover="showTip(event, 'fs27', 89)" class="f">lock</span> <span onmouseout="hideTip(event, 'fs10', 90)" onmouseover="showTip(event, 'fs10', 90)" class="v">subscribers</span> (<span class="k">fun</span> () <span class="k">-&gt;</span> 
                            <span onmouseout="hideTip(event, 'fs10', 91)" onmouseover="showTip(event, 'fs10', 91)" class="v">subscribers</span> <span class="o">:=</span> <span onmouseout="hideTip(event, 'fs10', 92)" onmouseover="showTip(event, 'fs10', 92)" class="v">subscribers</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 93)" onmouseover="showTip(event, 'fs45', 93)" class="i">Value</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 94)" onmouseover="showTip(event, 'fs50', 94)" class="f">Remove</span>(<span onmouseout="hideTip(event, 'fs43', 95)" onmouseover="showTip(event, 'fs43', 95)" class="i">key1</span>)) } }
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 96)" onmouseover="showTip(event, 'fs51', 96)" class="f">post</span> <span onmouseout="hideTip(event, 'fs52', 97)" onmouseover="showTip(event, 'fs52', 97)" class="i">x</span> <span class="o">=</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs32', 98)" onmouseover="showTip(event, 'fs32', 98)" class="i">agent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 99)" onmouseover="showTip(event, 'fs53', 99)" class="i">CurrentQueueLength</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs4', 100)" onmouseover="showTip(event, 'fs4', 100)" class="i">maxQueueDepth</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs32', 101)" onmouseover="showTip(event, 'fs32', 101)" class="i">agent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs54', 102)" onmouseover="showTip(event, 'fs54', 102)" class="f">Post</span> <span onmouseout="hideTip(event, 'fs52', 103)" onmouseover="showTip(event, 'fs52', 103)" class="i">x</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs55', 104)" onmouseover="showTip(event, 'fs55', 104)" class="f">printfn</span> <span class="s">&quot;queue depth exceed </span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs4', 105)" onmouseover="showTip(event, 'fs4', 105)" class="i">maxQueueDepth</span>
    <span onmouseout="hideTip(event, 'fs38', 106)" onmouseover="showTip(event, 'fs38', 106)" class="i">obs</span>,<span onmouseout="hideTip(event, 'fs51', 107)" onmouseover="showTip(event, 'fs51', 107)" class="f">post</span>
<span class="c">(*</span>
<span class="c">#load &quot;ObservableExtensions.fs&quot;</span>
<span class="c">open System</span>
<span class="c">let cts = new System.Threading.CancellationTokenSource()</span>
<span class="c">type Data = {Value:string}</span>

<span class="c">let observable,fPost = Observable.createObservableAgent&lt;Data&gt; cts.Token</span>

<span class="c">let sub1 = </span>
<span class="c">    observable.Subscribe</span>
<span class="c">        ({new IObserver&lt;Data&gt; with</span>
<span class="c">            member x.OnNext msg = printfn &quot;sub1 received msg %A&quot; msg</span>
<span class="c">            member x.OnError(e) = ()</span>
<span class="c">            member x.OnCompleted() = printfn &quot;sub1 received OnCompleted&quot;</span>
<span class="c">        })</span>
<span class="c">let sub2 = </span>
<span class="c">    observable.Subscribe</span>
<span class="c">        ({new IObserver&lt;Data&gt; with</span>
<span class="c">            member x.OnNext msg = printfn &quot;sub2 received msg %A&quot; msg</span>
<span class="c">            member x.OnError(e) = ()</span>
<span class="c">            member x.OnCompleted() = printfn &quot;sub2 received OnCompleted&quot;</span>
<span class="c">        })</span>

<span class="c">for i in 1 .. 10 do fPost {Value=i.ToString()}</span>

<span class="c">sub1.Dispose()</span>

<span class="c">for i in 11 .. 14 do fPost {Value=i.ToString()}</span>

<span class="c">cts.Cancel() //sends OnCompleted</span>

<span class="c">*)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />module Observable<br /><br />--------------------<br />module Observable<br /><br />from Microsoft.FSharp.Control</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">val createObservableAgent : maxQueueDepth:int -&gt; token:Threading.CancellationToken -&gt; IObservable&lt;&#39;T&gt; * (&#39;T -&gt; unit)<br /><br />Full name: Observable.createObservableAgent</div>
<div class="tip" id="fs4">val maxQueueDepth : int</div>
<div class="tip" id="fs5">val token : Threading.CancellationToken</div>
<div class="tip" id="fs6">namespace System.Threading</div>
<div class="tip" id="fs7">Multiple items<br />type CancellationToken =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : canceled:bool -&gt; CancellationToken<br />&#160;&#160;&#160;&#160;member CanBeCanceled : bool<br />&#160;&#160;&#160;&#160;member Equals : other:CancellationToken -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member IsCancellationRequested : bool<br />&#160;&#160;&#160;&#160;member Register : callback:Action -&gt; CancellationTokenRegistration + 3 overloads<br />&#160;&#160;&#160;&#160;member ThrowIfCancellationRequested : unit -&gt; unit<br />&#160;&#160;&#160;&#160;member WaitHandle : WaitHandle<br />&#160;&#160;&#160;&#160;static member None : CancellationToken<br />&#160;&#160;end<br /><br />Full name: System.Threading.CancellationToken<br /><br />--------------------<br />Threading.CancellationToken()<br />Threading.CancellationToken(canceled: bool) : unit</div>
<div class="tip" id="fs8">val finished : bool ref</div>
<div class="tip" id="fs9">Multiple items<br />val ref : value:&#39;T -&gt; &#39;T ref<br /><br />Full name: Microsoft.FSharp.Core.Operators.ref<br /><br />--------------------<br />type &#39;T ref = Ref&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.ref&lt;_&gt;</div>
<div class="tip" id="fs10">val subscribers : Map&lt;int,IObserver&lt;&#39;T&gt;&gt; ref</div>
<div class="tip" id="fs11">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member Remove : key:&#39;Key -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Map&lt;_,_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs12">val empty&lt;&#39;Key,&#39;T (requires comparison)&gt; : Map&lt;&#39;Key,&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.empty</div>
<div class="tip" id="fs13">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs14">type IObserver&lt;&#39;T&gt; =<br />&#160;&#160;member OnCompleted : unit -&gt; unit<br />&#160;&#160;member OnError : error:Exception -&gt; unit<br />&#160;&#160;member OnNext : value:&#39;T -&gt; unit<br /><br />Full name: System.IObserver&lt;_&gt;</div>
<div class="tip" id="fs15">val publish : (&#39;T -&gt; unit)</div>
<div class="tip" id="fs16">val msg : &#39;T</div>
<div class="tip" id="fs17">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs18">val iter : action:(&#39;T -&gt; unit) -&gt; source:seq&lt;&#39;T&gt; -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.Seq.iter</div>
<div class="tip" id="fs19">active recognizer KeyValue: Collections.Generic.KeyValuePair&lt;&#39;Key,&#39;Value&gt; -&gt; &#39;Key * &#39;Value<br /><br />Full name: Microsoft.FSharp.Core.Operators.( |KeyValue| )</div>
<div class="tip" id="fs20">val sub : IObserver&lt;&#39;T&gt;</div>
<div class="tip" id="fs21">IObserver.OnNext(value: &#39;T) : unit</div>
<div class="tip" id="fs22">val ex : exn</div>
<div class="tip" id="fs23">namespace System.Diagnostics</div>
<div class="tip" id="fs24">type Debug =<br />&#160;&#160;static member Assert : condition:bool -&gt; unit + 3 overloads<br />&#160;&#160;static member AutoFlush : bool with get, set<br />&#160;&#160;static member Close : unit -&gt; unit<br />&#160;&#160;static member Fail : message:string -&gt; unit + 1 overload<br />&#160;&#160;static member Flush : unit -&gt; unit<br />&#160;&#160;static member Indent : unit -&gt; unit<br />&#160;&#160;static member IndentLevel : int with get, set<br />&#160;&#160;static member IndentSize : int with get, set<br />&#160;&#160;static member Listeners : TraceListenerCollection<br />&#160;&#160;static member Print : message:string -&gt; unit + 1 overload<br />&#160;&#160;...<br /><br />Full name: System.Diagnostics.Debug</div>
<div class="tip" id="fs25">Diagnostics.Debug.Write(value: obj) : unit<br />Diagnostics.Debug.Write(message: string) : unit<br />Diagnostics.Debug.Write(value: obj, category: string) : unit<br />Diagnostics.Debug.Write(message: string, category: string) : unit</div>
<div class="tip" id="fs26">val completed : (unit -&gt; unit)</div>
<div class="tip" id="fs27">val lock : lockObject:&#39;Lock -&gt; action:(unit -&gt; &#39;T) -&gt; &#39;T (requires reference type)<br /><br />Full name: Microsoft.FSharp.Core.Operators.lock</div>
<div class="tip" id="fs28">IObserver.OnCompleted() : unit</div>
<div class="tip" id="fs29">Threading.CancellationToken.Register(callback: Action) : Threading.CancellationTokenRegistration<br />Threading.CancellationToken.Register(callback: Action&lt;obj&gt;, state: obj) : Threading.CancellationTokenRegistration<br />Threading.CancellationToken.Register(callback: Action, useSynchronizationContext: bool) : Threading.CancellationTokenRegistration<br />Threading.CancellationToken.Register(callback: Action&lt;obj&gt;, state: obj, useSynchronizationContext: bool) : Threading.CancellationTokenRegistration</div>
<div class="tip" id="fs30">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>
<div class="tip" id="fs31">val count : int ref</div>
<div class="tip" id="fs32">val agent : MailboxProcessor&lt;&#39;T&gt;</div>
<div class="tip" id="fs33">Multiple items<br />type MailboxProcessor&lt;&#39;Msg&gt; =<br />&#160;&#160;interface IDisposable<br />&#160;&#160;new : body:(MailboxProcessor&lt;&#39;Msg&gt; -&gt; Async&lt;unit&gt;) * ?cancellationToken:CancellationToken -&gt; MailboxProcessor&lt;&#39;Msg&gt;<br />&#160;&#160;member Post : message:&#39;Msg -&gt; unit<br />&#160;&#160;member PostAndAsyncReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; Async&lt;&#39;Reply&gt;<br />&#160;&#160;member PostAndReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; &#39;Reply<br />&#160;&#160;member PostAndTryAsyncReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; Async&lt;&#39;Reply option&gt;<br />&#160;&#160;member Receive : ?timeout:int -&gt; Async&lt;&#39;Msg&gt;<br />&#160;&#160;member Scan : scanner:(&#39;Msg -&gt; Async&lt;&#39;T&gt; option) * ?timeout:int -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;member Start : unit -&gt; unit<br />&#160;&#160;member TryPostAndReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; &#39;Reply option<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Control.MailboxProcessor&lt;_&gt;<br /><br />--------------------<br />new : body:(MailboxProcessor&lt;&#39;Msg&gt; -&gt; Async&lt;unit&gt;) * ?cancellationToken:Threading.CancellationToken -&gt; MailboxProcessor&lt;&#39;Msg&gt;</div>
<div class="tip" id="fs34">static member MailboxProcessor.Start : body:(MailboxProcessor&lt;&#39;Msg&gt; -&gt; Async&lt;unit&gt;) * ?cancellationToken:Threading.CancellationToken -&gt; MailboxProcessor&lt;&#39;Msg&gt;</div>
<div class="tip" id="fs35">val inbox : MailboxProcessor&lt;&#39;T&gt;</div>
<div class="tip" id="fs36">val async : AsyncBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.async</div>
<div class="tip" id="fs37">member MailboxProcessor.Receive : ?timeout:int -&gt; Async&lt;&#39;Msg&gt;</div>
<div class="tip" id="fs38">val obs : IObservable&lt;&#39;T&gt;</div>
<div class="tip" id="fs39">type IObservable&lt;&#39;T&gt; =<br />&#160;&#160;member Subscribe : observer:IObserver&lt;&#39;T&gt; -&gt; IDisposable<br /><br />Full name: System.IObservable&lt;_&gt;</div>
<div class="tip" id="fs40">val this : IObservable&lt;&#39;T&gt;</div>
<div class="tip" id="fs41">member IObservable.Subscribe : callback:(&#39;T -&gt; unit) -&gt; IDisposable<br />IObservable.Subscribe(observer: IObserver&lt;&#39;T&gt;) : IDisposable</div>
<div class="tip" id="fs42">val obs : IObserver&lt;&#39;T&gt;</div>
<div class="tip" id="fs43">val key1 : int</div>
<div class="tip" id="fs44">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs45">property Ref.Value: Map&lt;int,IObserver&lt;&#39;T&gt;&gt;</div>
<div class="tip" id="fs46">member Map.Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs47">type IDisposable =<br />&#160;&#160;member Dispose : unit -&gt; unit<br /><br />Full name: System.IDisposable</div>
<div class="tip" id="fs48">val this : IDisposable</div>
<div class="tip" id="fs49">IDisposable.Dispose() : unit</div>
<div class="tip" id="fs50">member Map.Remove : key:&#39;Key -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs51">val post : (&#39;T -&gt; unit)</div>
<div class="tip" id="fs52">val x : &#39;T</div>
<div class="tip" id="fs53">property MailboxProcessor.CurrentQueueLength: int</div>
<div class="tip" id="fs54">member MailboxProcessor.Post : message:&#39;Msg -&gt; unit</div>
<div class="tip" id="fs55">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>

