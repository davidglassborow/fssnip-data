<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Generic</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 5)" onmouseover="showTip(event, 'fs1', 5)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">Reflection</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">Reflection</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="t">Lifetime</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="p">Singleton</span> | <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="p">Transient</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="t">AbstractType</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="t">Type</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="t">ConcreteType</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="t">Type</span>
<span class="k">type</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="t">Constructor</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="p">Constructor</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs15', 19)" onmouseover="showTip(event, 'fs15', 19)" class="t">ConstructorInfo</span>
    | <span onmouseout="hideTip(event, 'fs16', 20)" onmouseover="showTip(event, 'fs16', 20)" class="p">Reflected</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs13', 21)" onmouseover="showTip(event, 'fs13', 21)" class="t">ConcreteType</span>
    | <span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="p">Factory</span> <span class="k">of</span> (<span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="t">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 24)" onmouseover="showTip(event, 'fs19', 24)" class="t">obj</span>)
<span class="k">let</span> <span class="k">private</span> (|<span class="p">FunType</span>|_|) <span onmouseout="hideTip(event, 'fs20', 25)" onmouseover="showTip(event, 'fs20', 25)" class="i">t</span> <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs21', 26)" onmouseover="showTip(event, 'fs21', 26)" class="t">FSharpType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 27)" onmouseover="showTip(event, 'fs22', 27)" class="f">IsFunction</span> <span onmouseout="hideTip(event, 'fs20', 28)" onmouseover="showTip(event, 'fs20', 28)" class="i">t</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs21', 29)" onmouseover="showTip(event, 'fs21', 29)" class="t">FSharpType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 30)" onmouseover="showTip(event, 'fs23', 30)" class="f">GetFunctionElements</span> <span onmouseout="hideTip(event, 'fs20', 31)" onmouseover="showTip(event, 'fs20', 31)" class="i">t</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs24', 32)" onmouseover="showTip(event, 'fs24', 32)" class="p">Some</span>
    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs25', 33)" onmouseover="showTip(event, 'fs25', 33)" class="p">None</span>
<span class="k">let</span> <span class="k">private</span> (|<span class="p">FuncType</span>|_|) (<span onmouseout="hideTip(event, 'fs20', 34)" onmouseover="showTip(event, 'fs20', 34)" class="i">t</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs12', 35)" onmouseover="showTip(event, 'fs12', 35)" class="t">Type</span>) <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs20', 36)" onmouseover="showTip(event, 'fs20', 36)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 37)" onmouseover="showTip(event, 'fs26', 37)" class="i">IsGenericType</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs20', 38)" onmouseover="showTip(event, 'fs20', 38)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 39)" onmouseover="showTip(event, 'fs27', 39)" class="f">GetGenericTypeDefinition</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 40)" onmouseover="showTip(event, 'fs28', 40)" class="i">typedefof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs29', 41)" onmouseover="showTip(event, 'fs29', 41)" class="t">Func</span><span class="o">&lt;</span>_<span class="o">&gt;</span><span class="o">&gt;</span> 
    <span class="k">then</span> <span onmouseout="hideTip(event, 'fs20', 42)" onmouseover="showTip(event, 'fs20', 42)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 43)" onmouseover="showTip(event, 'fs30', 43)" class="f">GetGenericArguments</span>()<span class="o">.</span>[<span class="n">0</span>] <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs24', 44)" onmouseover="showTip(event, 'fs24', 44)" class="p">Some</span>
    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs25', 45)" onmouseover="showTip(event, 'fs25', 45)" class="p">None</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs31', 46)" onmouseover="showTip(event, 'fs31', 46)" class="f">Container</span> () <span class="k">as</span> <span onmouseout="hideTip(event, 'fs32', 47)" onmouseover="showTip(event, 'fs32', 47)" class="v">container</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 48)" onmouseover="showTip(event, 'fs33', 48)" class="i">catalog</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 49)" onmouseover="showTip(event, 'fs34', 49)" class="t">Dictionary</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 50)" onmouseover="showTip(event, 'fs11', 50)" class="t">AbstractType</span>, <span onmouseout="hideTip(event, 'fs14', 51)" onmouseover="showTip(event, 'fs14', 51)" class="t">Constructor</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs8', 52)" onmouseover="showTip(event, 'fs8', 52)" class="t">Lifetime</span><span class="o">&gt;</span>()
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 53)" onmouseover="showTip(event, 'fs35', 53)" class="i">singletons</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 54)" onmouseover="showTip(event, 'fs34', 54)" class="t">Dictionary</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs13', 55)" onmouseover="showTip(event, 'fs13', 55)" class="t">ConcreteType</span>,<span onmouseout="hideTip(event, 'fs19', 56)" onmouseover="showTip(event, 'fs19', 56)" class="t">obj</span><span class="o">&gt;</span>()
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs36', 57)" onmouseover="showTip(event, 'fs36', 57)" class="f">tryResolve</span> <span onmouseout="hideTip(event, 'fs37', 58)" onmouseover="showTip(event, 'fs37', 58)" class="i">t</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs33', 59)" onmouseover="showTip(event, 'fs33', 59)" class="i">catalog</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 60)" onmouseover="showTip(event, 'fs38', 60)" class="f">TryGetValue</span> <span onmouseout="hideTip(event, 'fs37', 61)" onmouseover="showTip(event, 'fs37', 61)" class="i">t</span> <span class="k">with</span>
        | <span class="k">true</span>, (<span onmouseout="hideTip(event, 'fs14', 62)" onmouseover="showTip(event, 'fs14', 62)" class="p">Constructor</span> <span onmouseout="hideTip(event, 'fs39', 63)" onmouseover="showTip(event, 'fs39', 63)" class="i">cinfo</span>, <span onmouseout="hideTip(event, 'fs40', 64)" onmouseover="showTip(event, 'fs40', 64)" class="i">lifetime</span>) <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs41', 65)" onmouseover="showTip(event, 'fs41', 65)" class="f">tryObtain</span> <span onmouseout="hideTip(event, 'fs39', 66)" onmouseover="showTip(event, 'fs39', 66)" class="i">cinfo</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 67)" onmouseover="showTip(event, 'fs42', 67)" class="i">DeclaringType</span> (<span class="k">fun</span> () <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs39', 68)" onmouseover="showTip(event, 'fs39', 68)" class="i">cinfo</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs43', 69)" onmouseover="showTip(event, 'fs43', 69)" class="f">tryConstructor</span>) <span onmouseout="hideTip(event, 'fs40', 70)" onmouseover="showTip(event, 'fs40', 70)" class="i">lifetime</span>
        | <span class="k">true</span>, (<span onmouseout="hideTip(event, 'fs16', 71)" onmouseover="showTip(event, 'fs16', 71)" class="p">Reflected</span> <span onmouseout="hideTip(event, 'fs44', 72)" onmouseover="showTip(event, 'fs44', 72)" class="i">u</span> , <span onmouseout="hideTip(event, 'fs40', 73)" onmouseover="showTip(event, 'fs40', 73)" class="i">lifetime</span>) <span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs41', 74)" onmouseover="showTip(event, 'fs41', 74)" class="f">tryObtain</span> <span onmouseout="hideTip(event, 'fs44', 75)" onmouseover="showTip(event, 'fs44', 75)" class="i">u</span> (<span class="k">fun</span> () <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs45', 76)" onmouseover="showTip(event, 'fs45', 76)" class="f">tryConstructors</span> <span onmouseout="hideTip(event, 'fs44', 77)" onmouseover="showTip(event, 'fs44', 77)" class="i">u</span>) <span onmouseout="hideTip(event, 'fs40', 78)" onmouseover="showTip(event, 'fs40', 78)" class="i">lifetime</span>
        | <span class="k">true</span>, (<span onmouseout="hideTip(event, 'fs17', 79)" onmouseover="showTip(event, 'fs17', 79)" class="p">Factory</span> <span onmouseout="hideTip(event, 'fs46', 80)" onmouseover="showTip(event, 'fs46', 80)" class="f">f</span>, <span onmouseout="hideTip(event, 'fs40', 81)" onmouseover="showTip(event, 'fs40', 81)" class="i">lifetime</span>) <span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs41', 82)" onmouseover="showTip(event, 'fs41', 82)" class="f">tryObtain</span> <span onmouseout="hideTip(event, 'fs37', 83)" onmouseover="showTip(event, 'fs37', 83)" class="i">t</span> (<span class="k">fun</span> () <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs46', 84)" onmouseover="showTip(event, 'fs46', 84)" class="f">f</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs24', 85)" onmouseover="showTip(event, 'fs24', 85)" class="p">Some</span>) <span onmouseout="hideTip(event, 'fs40', 86)" onmouseover="showTip(event, 'fs40', 86)" class="i">lifetime</span>
        | <span class="k">false</span>, _ <span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs41', 87)" onmouseover="showTip(event, 'fs41', 87)" class="f">tryObtain</span> <span onmouseout="hideTip(event, 'fs37', 88)" onmouseover="showTip(event, 'fs37', 88)" class="i">t</span> (<span class="k">fun</span> () <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs45', 89)" onmouseover="showTip(event, 'fs45', 89)" class="f">tryConstructors</span> <span onmouseout="hideTip(event, 'fs37', 90)" onmouseover="showTip(event, 'fs37', 90)" class="i">t</span>) <span onmouseout="hideTip(event, 'fs9', 91)" onmouseover="showTip(event, 'fs9', 91)" class="p">Singleton</span> 
    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs41', 92)" onmouseover="showTip(event, 'fs41', 92)" class="f">tryObtain</span> <span onmouseout="hideTip(event, 'fs20', 93)" onmouseover="showTip(event, 'fs20', 93)" class="i">t</span> <span onmouseout="hideTip(event, 'fs47', 94)" onmouseover="showTip(event, 'fs47', 94)" class="f">f</span> <span onmouseout="hideTip(event, 'fs40', 95)" onmouseover="showTip(event, 'fs40', 95)" class="i">lifetime</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs35', 96)" onmouseover="showTip(event, 'fs35', 96)" class="i">singletons</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 97)" onmouseover="showTip(event, 'fs48', 97)" class="f">TryGetValue</span> <span onmouseout="hideTip(event, 'fs20', 98)" onmouseover="showTip(event, 'fs20', 98)" class="i">t</span> <span class="k">with</span>
        | <span class="k">true</span>, <span onmouseout="hideTip(event, 'fs49', 99)" onmouseover="showTip(event, 'fs49', 99)" class="i">value</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs24', 100)" onmouseover="showTip(event, 'fs24', 100)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs49', 101)" onmouseover="showTip(event, 'fs49', 101)" class="i">value</span>
        | <span class="k">false</span>, _ <span class="k">-&gt;</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 102)" onmouseover="showTip(event, 'fs50', 102)" class="i">result</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs47', 103)" onmouseover="showTip(event, 'fs47', 103)" class="f">f</span>()
            <span onmouseout="hideTip(event, 'fs50', 104)" onmouseover="showTip(event, 'fs50', 104)" class="i">result</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs51', 105)" onmouseover="showTip(event, 'fs51', 105)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 106)" onmouseover="showTip(event, 'fs52', 106)" class="f">iter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs49', 107)" onmouseover="showTip(event, 'fs49', 107)" class="i">value</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs53', 108)" onmouseover="showTip(event, 'fs53', 108)" class="f">store</span> <span onmouseout="hideTip(event, 'fs20', 109)" onmouseover="showTip(event, 'fs20', 109)" class="i">t</span> <span onmouseout="hideTip(event, 'fs49', 110)" onmouseover="showTip(event, 'fs49', 110)" class="i">value</span> <span onmouseout="hideTip(event, 'fs40', 111)" onmouseover="showTip(event, 'fs40', 111)" class="i">lifetime</span>)
            <span onmouseout="hideTip(event, 'fs50', 112)" onmouseover="showTip(event, 'fs50', 112)" class="i">result</span>
    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs53', 113)" onmouseover="showTip(event, 'fs53', 113)" class="f">store</span> <span onmouseout="hideTip(event, 'fs20', 114)" onmouseover="showTip(event, 'fs20', 114)" class="i">t</span> <span onmouseout="hideTip(event, 'fs49', 115)" onmouseover="showTip(event, 'fs49', 115)" class="i">value</span> <span class="o">=</span> <span class="k">function</span> <span onmouseout="hideTip(event, 'fs9', 116)" onmouseover="showTip(event, 'fs9', 116)" class="p">Singleton</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs35', 117)" onmouseover="showTip(event, 'fs35', 117)" class="i">singletons</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs54', 118)" onmouseover="showTip(event, 'fs54', 118)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs20', 119)" onmouseover="showTip(event, 'fs20', 119)" class="i">t</span>,<span onmouseout="hideTip(event, 'fs49', 120)" onmouseover="showTip(event, 'fs49', 120)" class="i">value</span>) | <span onmouseout="hideTip(event, 'fs10', 121)" onmouseover="showTip(event, 'fs10', 121)" class="p">Transient</span> <span class="k">-&gt;</span> ()
    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs45', 122)" onmouseover="showTip(event, 'fs45', 122)" class="f">tryConstructors</span> <span onmouseout="hideTip(event, 'fs55', 123)" onmouseover="showTip(event, 'fs55', 123)" class="i">t</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs55', 124)" onmouseover="showTip(event, 'fs55', 124)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 125)" onmouseover="showTip(event, 'fs56', 125)" class="f">GetConstructors</span>() 
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 126)" onmouseover="showTip(event, 'fs57', 126)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 127)" onmouseover="showTip(event, 'fs58', 127)" class="f">sortBy</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs59', 128)" onmouseover="showTip(event, 'fs59', 128)" class="i">c</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs59', 129)" onmouseover="showTip(event, 'fs59', 129)" class="i">c</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 130)" onmouseover="showTip(event, 'fs60', 130)" class="f">GetParameters</span>()<span class="o">.</span><span class="i">Length</span>)
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 131)" onmouseover="showTip(event, 'fs57', 131)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 132)" onmouseover="showTip(event, 'fs61', 132)" class="f">tryPick</span> <span onmouseout="hideTip(event, 'fs43', 133)" onmouseover="showTip(event, 'fs43', 133)" class="f">tryConstructor</span>
    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs43', 134)" onmouseover="showTip(event, 'fs43', 134)" class="f">tryConstructor</span> <span onmouseout="hideTip(event, 'fs62', 135)" onmouseover="showTip(event, 'fs62', 135)" class="i">ctr</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 136)" onmouseover="showTip(event, 'fs63', 136)" class="i">ps</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs62', 137)" onmouseover="showTip(event, 'fs62', 137)" class="i">ctr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 138)" onmouseover="showTip(event, 'fs60', 138)" class="f">GetParameters</span>()
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs64', 139)" onmouseover="showTip(event, 'fs64', 139)" class="i">args</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs63', 140)" onmouseover="showTip(event, 'fs63', 140)" class="i">ps</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 141)" onmouseover="showTip(event, 'fs57', 141)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 142)" onmouseover="showTip(event, 'fs65', 142)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs66', 143)" onmouseover="showTip(event, 'fs66', 143)" class="i">p</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs67', 144)" onmouseover="showTip(event, 'fs67', 144)" class="f">tryResolveArgument</span> <span onmouseout="hideTip(event, 'fs66', 145)" onmouseover="showTip(event, 'fs66', 145)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 146)" onmouseover="showTip(event, 'fs68', 146)" class="i">ParameterType</span>)             
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs64', 147)" onmouseover="showTip(event, 'fs64', 147)" class="i">args</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 148)" onmouseover="showTip(event, 'fs57', 148)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 149)" onmouseover="showTip(event, 'fs69', 149)" class="f">forall</span> <span onmouseout="hideTip(event, 'fs51', 150)" onmouseover="showTip(event, 'fs51', 150)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 151)" onmouseover="showTip(event, 'fs70', 151)" class="f">isSome</span> <span class="k">with</span>
        | <span class="k">true</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs64', 152)" onmouseover="showTip(event, 'fs64', 152)" class="i">args</span> <span class="o">|&gt;</span> (<span onmouseout="hideTip(event, 'fs57', 153)" onmouseover="showTip(event, 'fs57', 153)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 154)" onmouseover="showTip(event, 'fs71', 154)" class="f">choose</span> <span onmouseout="hideTip(event, 'fs72', 155)" onmouseover="showTip(event, 'fs72', 155)" class="f">id</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs62', 156)" onmouseover="showTip(event, 'fs62', 156)" class="i">ctr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 157)" onmouseover="showTip(event, 'fs73', 157)" class="f">Invoke</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs24', 158)" onmouseover="showTip(event, 'fs24', 158)" class="p">Some</span>
        | <span class="k">false</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 159)" onmouseover="showTip(event, 'fs25', 159)" class="p">None</span>
    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs67', 160)" onmouseover="showTip(event, 'fs67', 160)" class="f">tryResolveArgument</span> <span onmouseout="hideTip(event, 'fs20', 161)" onmouseover="showTip(event, 'fs20', 161)" class="i">t</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs20', 162)" onmouseover="showTip(event, 'fs20', 162)" class="i">t</span> <span class="k">with</span>         
        | <span onmouseout="hideTip(event, 'fs74', 163)" onmouseover="showTip(event, 'fs74', 163)" class="p">FunType</span>(<span onmouseout="hideTip(event, 'fs75', 164)" onmouseover="showTip(event, 'fs75', 164)" class="i">arg</span>,<span onmouseout="hideTip(event, 'fs76', 165)" onmouseover="showTip(event, 'fs76', 165)" class="i">result</span>) <span class="k">when</span> <span onmouseout="hideTip(event, 'fs75', 166)" onmouseover="showTip(event, 'fs75', 166)" class="i">arg</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs77', 167)" onmouseover="showTip(event, 'fs77', 167)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs18', 168)" onmouseover="showTip(event, 'fs18', 168)" class="t">unit</span><span class="o">&gt;</span> <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs78', 169)" onmouseover="showTip(event, 'fs78', 169)" class="t">FSharpValue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 170)" onmouseover="showTip(event, 'fs79', 170)" class="f">MakeFunction</span>(<span onmouseout="hideTip(event, 'fs20', 171)" onmouseover="showTip(event, 'fs20', 171)" class="i">t</span>,<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs80', 172)" onmouseover="showTip(event, 'fs80', 172)" class="i">args</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs32', 173)" onmouseover="showTip(event, 'fs32', 173)" class="v">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 174)" onmouseover="showTip(event, 'fs81', 174)" class="f">Resolve</span>(<span onmouseout="hideTip(event, 'fs76', 175)" onmouseover="showTip(event, 'fs76', 175)" class="i">result</span>)) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs24', 176)" onmouseover="showTip(event, 'fs24', 176)" class="p">Some</span>
        | <span onmouseout="hideTip(event, 'fs82', 177)" onmouseover="showTip(event, 'fs82', 177)" class="p">FuncType</span> <span onmouseout="hideTip(event, 'fs76', 178)" onmouseover="showTip(event, 'fs76', 178)" class="i">result</span> <span class="k">-&gt;</span>                                
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs83', 179)" onmouseover="showTip(event, 'fs83', 179)" class="i">mi</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs77', 180)" onmouseover="showTip(event, 'fs77', 180)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs31', 181)" onmouseover="showTip(event, 'fs31', 181)" class="t">Container</span><span class="o">&gt;</span><span class="o">.</span><span class="f">GetMethod</span>(<span class="s">&quot;Resolve&quot;</span>,[||])<span class="o">.</span><span class="f">MakeGenericMethod</span>(<span onmouseout="hideTip(event, 'fs76', 182)" onmouseover="showTip(event, 'fs76', 182)" class="i">result</span>)
            <span onmouseout="hideTip(event, 'fs84', 183)" onmouseover="showTip(event, 'fs84', 183)" class="t">Delegate</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs85', 184)" onmouseover="showTip(event, 'fs85', 184)" class="f">CreateDelegate</span>(<span onmouseout="hideTip(event, 'fs20', 185)" onmouseover="showTip(event, 'fs20', 185)" class="i">t</span>, <span onmouseout="hideTip(event, 'fs32', 186)" onmouseover="showTip(event, 'fs32', 186)" class="v">container</span>, <span onmouseout="hideTip(event, 'fs83', 187)" onmouseover="showTip(event, 'fs83', 187)" class="i">mi</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs86', 188)" onmouseover="showTip(event, 'fs86', 188)" class="f">box</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs24', 189)" onmouseover="showTip(event, 'fs24', 189)" class="p">Some</span>
        | <span onmouseout="hideTip(event, 'fs20', 190)" onmouseover="showTip(event, 'fs20', 190)" class="i">t</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs36', 191)" onmouseover="showTip(event, 'fs36', 191)" class="f">tryResolve</span> <span onmouseout="hideTip(event, 'fs20', 192)" onmouseover="showTip(event, 'fs20', 192)" class="i">t</span>
    <span class="k">static</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs87', 193)" onmouseover="showTip(event, 'fs87', 193)" class="i">current</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 194)" onmouseover="showTip(event, 'fs31', 194)" class="t">Container</span>()
    <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs88', 195)" onmouseover="showTip(event, 'fs88', 195)" class="i">Current</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs87', 196)" onmouseover="showTip(event, 'fs87', 196)" class="i">current</span>        
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs32', 197)" onmouseover="showTip(event, 'fs32', 197)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 198)" onmouseover="showTip(event, 'fs89', 198)" class="f">Register</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">TAbstract</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs90', 199)" onmouseover="showTip(event, 'fs90', 199)" class="i">not</span> <span class="k">struct</span><span class="o">&gt;</span>
            (<span onmouseout="hideTip(event, 'fs39', 200)" onmouseover="showTip(event, 'fs39', 200)" class="i">cinfo</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs15', 201)" onmouseover="showTip(event, 'fs15', 201)" class="t">ConstructorInfo</span>, <span onmouseout="hideTip(event, 'fs40', 202)" onmouseover="showTip(event, 'fs40', 202)" class="i">lifetime</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs33', 203)" onmouseover="showTip(event, 'fs33', 203)" class="i">catalog</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs91', 204)" onmouseover="showTip(event, 'fs91', 204)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs77', 205)" onmouseover="showTip(event, 'fs77', 205)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span><span class="o">&gt;</span>, (<span onmouseout="hideTip(event, 'fs14', 206)" onmouseover="showTip(event, 'fs14', 206)" class="p">Constructor</span>(<span onmouseout="hideTip(event, 'fs39', 207)" onmouseover="showTip(event, 'fs39', 207)" class="i">cinfo</span>), <span onmouseout="hideTip(event, 'fs40', 208)" onmouseover="showTip(event, 'fs40', 208)" class="i">lifetime</span>))
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs32', 209)" onmouseover="showTip(event, 'fs32', 209)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs92', 210)" onmouseover="showTip(event, 'fs92', 210)" class="f">Register</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">TAbstract</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs90', 211)" onmouseover="showTip(event, 'fs90', 211)" class="i">not</span> <span class="k">struct</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs39', 212)" onmouseover="showTip(event, 'fs39', 212)" class="i">cinfo</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs15', 213)" onmouseover="showTip(event, 'fs15', 213)" class="t">ConstructorInfo</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs32', 214)" onmouseover="showTip(event, 'fs32', 214)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs93', 215)" onmouseover="showTip(event, 'fs93', 215)" class="f">Register</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs39', 216)" onmouseover="showTip(event, 'fs39', 216)" class="i">cinfo</span>, <span onmouseout="hideTip(event, 'fs9', 217)" onmouseover="showTip(event, 'fs9', 217)" class="p">Singleton</span>)
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs32', 218)" onmouseover="showTip(event, 'fs32', 218)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs94', 219)" onmouseover="showTip(event, 'fs94', 219)" class="f">Register</span>(<span onmouseout="hideTip(event, 'fs95', 220)" onmouseover="showTip(event, 'fs95', 220)" class="i">abstractTypes</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs11', 221)" onmouseover="showTip(event, 'fs11', 221)" class="t">AbstractType</span> <span onmouseout="hideTip(event, 'fs96', 222)" onmouseover="showTip(event, 'fs96', 222)" class="t">seq</span>, <span onmouseout="hideTip(event, 'fs97', 223)" onmouseover="showTip(event, 'fs97', 223)" class="i">concreteType</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs13', 224)" onmouseover="showTip(event, 'fs13', 224)" class="t">ConcreteType</span>) <span class="o">=</span>    
        <span class="k">for</span> <span onmouseout="hideTip(event, 'fs37', 225)" onmouseover="showTip(event, 'fs37', 225)" class="i">t</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs95', 226)" onmouseover="showTip(event, 'fs95', 226)" class="i">abstractTypes</span> <span class="k">do</span> <span onmouseout="hideTip(event, 'fs33', 227)" onmouseover="showTip(event, 'fs33', 227)" class="i">catalog</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs91', 228)" onmouseover="showTip(event, 'fs91', 228)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs37', 229)" onmouseover="showTip(event, 'fs37', 229)" class="i">t</span>, (<span onmouseout="hideTip(event, 'fs16', 230)" onmouseover="showTip(event, 'fs16', 230)" class="p">Reflected</span> <span onmouseout="hideTip(event, 'fs97', 231)" onmouseover="showTip(event, 'fs97', 231)" class="i">concreteType</span>, <span onmouseout="hideTip(event, 'fs9', 232)" onmouseover="showTip(event, 'fs9', 232)" class="p">Singleton</span>))
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs32', 233)" onmouseover="showTip(event, 'fs32', 233)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs98', 234)" onmouseover="showTip(event, 'fs98', 234)" class="f">Register</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">TAbstract</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs90', 235)" onmouseover="showTip(event, 'fs90', 235)" class="i">not</span> <span class="k">struct</span><span class="o">&gt;</span>
            (<span onmouseout="hideTip(event, 'fs97', 236)" onmouseover="showTip(event, 'fs97', 236)" class="i">concreteType</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs13', 237)" onmouseover="showTip(event, 'fs13', 237)" class="t">ConcreteType</span>, <span onmouseout="hideTip(event, 'fs40', 238)" onmouseover="showTip(event, 'fs40', 238)" class="i">lifetime</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs8', 239)" onmouseover="showTip(event, 'fs8', 239)" class="t">Lifetime</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs33', 240)" onmouseover="showTip(event, 'fs33', 240)" class="i">catalog</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs91', 241)" onmouseover="showTip(event, 'fs91', 241)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs77', 242)" onmouseover="showTip(event, 'fs77', 242)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span><span class="o">&gt;</span>, (<span onmouseout="hideTip(event, 'fs16', 243)" onmouseover="showTip(event, 'fs16', 243)" class="p">Reflected</span> <span onmouseout="hideTip(event, 'fs97', 244)" onmouseover="showTip(event, 'fs97', 244)" class="i">concreteType</span>, <span onmouseout="hideTip(event, 'fs40', 245)" onmouseover="showTip(event, 'fs40', 245)" class="i">lifetime</span>))
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs32', 246)" onmouseover="showTip(event, 'fs32', 246)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs99', 247)" onmouseover="showTip(event, 'fs99', 247)" class="f">Register</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">TAbstract</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs90', 248)" onmouseover="showTip(event, 'fs90', 248)" class="i">not</span> <span class="k">struct</span><span class="o">&gt;</span>
            (<span onmouseout="hideTip(event, 'fs97', 249)" onmouseover="showTip(event, 'fs97', 249)" class="i">concreteType</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs13', 250)" onmouseover="showTip(event, 'fs13', 250)" class="t">ConcreteType</span>) <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs32', 251)" onmouseover="showTip(event, 'fs32', 251)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs93', 252)" onmouseover="showTip(event, 'fs93', 252)" class="f">Register</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs97', 253)" onmouseover="showTip(event, 'fs97', 253)" class="i">concreteType</span>, <span onmouseout="hideTip(event, 'fs9', 254)" onmouseover="showTip(event, 'fs9', 254)" class="p">Singleton</span>)
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs32', 255)" onmouseover="showTip(event, 'fs32', 255)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs100', 256)" onmouseover="showTip(event, 'fs100', 256)" class="f">Register</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs101', 257)" onmouseover="showTip(event, 'fs101', 257)" class="i">instance</span><span class="o">:</span><span class="o">&#39;</span><span class="i">TAbstract</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs33', 258)" onmouseover="showTip(event, 'fs33', 258)" class="i">catalog</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs91', 259)" onmouseover="showTip(event, 'fs91', 259)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs77', 260)" onmouseover="showTip(event, 'fs77', 260)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span><span class="o">&gt;</span>, (<span onmouseout="hideTip(event, 'fs17', 261)" onmouseover="showTip(event, 'fs17', 261)" class="p">Factory</span>(<span class="k">fun</span> () <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs86', 262)" onmouseover="showTip(event, 'fs86', 262)" class="f">box</span> <span onmouseout="hideTip(event, 'fs101', 263)" onmouseover="showTip(event, 'fs101', 263)" class="i">instance</span>), <span onmouseout="hideTip(event, 'fs9', 264)" onmouseover="showTip(event, 'fs9', 264)" class="p">Singleton</span>))
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs32', 265)" onmouseover="showTip(event, 'fs32', 265)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs102', 266)" onmouseover="showTip(event, 'fs102', 266)" class="f">Resolve</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">TAbstract</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs90', 267)" onmouseover="showTip(event, 'fs90', 267)" class="i">not</span> <span class="k">struct</span><span class="o">&gt;</span>() <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs32', 268)" onmouseover="showTip(event, 'fs32', 268)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 269)" onmouseover="showTip(event, 'fs81', 269)" class="f">Resolve</span>(<span onmouseout="hideTip(event, 'fs77', 270)" onmouseover="showTip(event, 'fs77', 270)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span><span class="o">&gt;</span>) <span class="o">:?&gt;</span> <span class="o">&#39;</span><span class="i">TAbstract</span>     
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs32', 271)" onmouseover="showTip(event, 'fs32', 271)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs103', 272)" onmouseover="showTip(event, 'fs103', 272)" class="f">Resolve</span>(<span onmouseout="hideTip(event, 'fs104', 273)" onmouseover="showTip(event, 'fs104', 273)" class="i">abstractType</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs11', 274)" onmouseover="showTip(event, 'fs11', 274)" class="t">AbstractType</span>) <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs36', 275)" onmouseover="showTip(event, 'fs36', 275)" class="f">tryResolve</span> <span onmouseout="hideTip(event, 'fs104', 276)" onmouseover="showTip(event, 'fs104', 276)" class="i">abstractType</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs24', 277)" onmouseover="showTip(event, 'fs24', 277)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs49', 278)" onmouseover="showTip(event, 'fs49', 278)" class="i">value</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs49', 279)" onmouseover="showTip(event, 'fs49', 279)" class="i">value</span>
        | <span onmouseout="hideTip(event, 'fs25', 280)" onmouseover="showTip(event, 'fs25', 280)" class="p">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs105', 281)" onmouseover="showTip(event, 'fs105', 281)" class="f">sprintf</span> <span class="s">&quot;Failed to resolve </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs104', 282)" onmouseover="showTip(event, 'fs104', 282)" class="i">abstractType</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs106', 283)" onmouseover="showTip(event, 'fs106', 283)" class="f">invalidOp</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs32', 284)" onmouseover="showTip(event, 'fs32', 284)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs107', 285)" onmouseover="showTip(event, 'fs107', 285)" class="f">Release</span>(<span onmouseout="hideTip(event, 'fs108', 286)" onmouseover="showTip(event, 'fs108', 286)" class="i">instance</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs19', 287)" onmouseover="showTip(event, 'fs19', 287)" class="t">obj</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs35', 288)" onmouseover="showTip(event, 'fs35', 288)" class="i">singletons</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs109', 289)" onmouseover="showTip(event, 'fs109', 289)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 290)" onmouseover="showTip(event, 'fs110', 290)" class="f">filter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs111', 291)" onmouseover="showTip(event, 'fs111', 291)" class="i">pair</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs111', 292)" onmouseover="showTip(event, 'fs111', 292)" class="i">pair</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs112', 293)" onmouseover="showTip(event, 'fs112', 293)" class="i">Value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs108', 294)" onmouseover="showTip(event, 'fs108', 294)" class="i">instance</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs109', 295)" onmouseover="showTip(event, 'fs109', 295)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs113', 296)" onmouseover="showTip(event, 'fs113', 296)" class="f">toList</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs114', 297)" onmouseover="showTip(event, 'fs114', 297)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs115', 298)" onmouseover="showTip(event, 'fs115', 298)" class="f">iter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs111', 299)" onmouseover="showTip(event, 'fs111', 299)" class="i">pair</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs35', 300)" onmouseover="showTip(event, 'fs35', 300)" class="i">singletons</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs116', 301)" onmouseover="showTip(event, 'fs116', 301)" class="f">Remove</span>(<span onmouseout="hideTip(event, 'fs111', 302)" onmouseover="showTip(event, 'fs111', 302)" class="i">pair</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs117', 303)" onmouseover="showTip(event, 'fs117', 303)" class="i">Key</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs118', 304)" onmouseover="showTip(event, 'fs118', 304)" class="f">ignore</span>)
<span class="prep">#if</span> <span class="i">CSHARP</span>
<span class="inactive">    </span><span class="inactive">member</span><span class="inactive"> </span><span class="inactive">container.Register&lt;&#39;TAbstract</span><span class="inactive"> </span><span class="inactive">when</span><span class="inactive"> </span><span class="inactive">&#39;TAbstract</span><span class="inactive"> </span><span class="inactive">:</span><span class="inactive"> </span><span class="inactive">not</span><span class="inactive"> </span><span class="inactive">struct&gt;</span>
<span class="inactive">            </span><span class="inactive">(f:Func&lt;&#39;TAbstract&gt;)</span><span class="inactive"> </span><span class="inactive">=</span><span class="inactive"> </span>
<span class="inactive">        </span><span class="inactive">catalog.Add(typeof&lt;&#39;TAbstract&gt;,</span><span class="inactive"> </span><span class="inactive">(Factory(fun</span><span class="inactive"> </span><span class="inactive">()</span><span class="inactive"> </span><span class="inactive">-&gt;</span><span class="inactive"> </span><span class="inactive">f.Invoke()</span><span class="inactive"> </span><span class="inactive">|&gt;</span><span class="inactive"> </span><span class="inactive">box),</span><span class="inactive"> </span><span class="inactive">Singleton))</span><span class="inactive">   </span>
<span class="inactive">    </span><span class="inactive">member</span><span class="inactive"> </span><span class="inactive">container.Register&lt;&#39;TAbstract</span><span class="inactive"> </span><span class="inactive">when</span><span class="inactive"> </span><span class="inactive">&#39;TAbstract</span><span class="inactive"> </span><span class="inactive">:</span><span class="inactive"> </span><span class="inactive">not</span><span class="inactive"> </span><span class="inactive">struct&gt;</span>
<span class="inactive">            </span><span class="inactive">(f:Func&lt;&#39;TAbstract&gt;,</span><span class="inactive"> </span><span class="inactive">lifetime:Lifetime)</span><span class="inactive"> </span><span class="inactive">=</span><span class="inactive"> </span>
<span class="inactive">        </span><span class="inactive">catalog.Add(typeof&lt;&#39;TAbstract&gt;,</span><span class="inactive"> </span><span class="inactive">(Factory(fun</span><span class="inactive"> </span><span class="inactive">()</span><span class="inactive"> </span><span class="inactive">-&gt;</span><span class="inactive"> </span><span class="inactive">f.Invoke()</span><span class="inactive"> </span><span class="inactive">|&gt;</span><span class="inactive"> </span><span class="inactive">box),</span><span class="inactive"> </span><span class="inactive">lifetime))</span><span class="inactive">   </span>
<span class="prep">#else</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs32', 305)" onmouseover="showTip(event, 'fs32', 305)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs119', 306)" onmouseover="showTip(event, 'fs119', 306)" class="f">Register</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">TAbstract</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs90', 307)" onmouseover="showTip(event, 'fs90', 307)" class="i">not</span> <span class="k">struct</span><span class="o">&gt;</span>
            (<span onmouseout="hideTip(event, 'fs120', 308)" onmouseover="showTip(event, 'fs120', 308)" class="f">f</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 309)" onmouseover="showTip(event, 'fs18', 309)" class="t">unit</span><span class="k">-&gt;</span><span class="o">&#39;</span><span class="i">TAbstract</span>) <span class="o">=</span>   
        <span onmouseout="hideTip(event, 'fs33', 310)" onmouseover="showTip(event, 'fs33', 310)" class="i">catalog</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs91', 311)" onmouseover="showTip(event, 'fs91', 311)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs77', 312)" onmouseover="showTip(event, 'fs77', 312)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span><span class="o">&gt;</span>, (<span onmouseout="hideTip(event, 'fs17', 313)" onmouseover="showTip(event, 'fs17', 313)" class="p">Factory</span>(<span onmouseout="hideTip(event, 'fs120', 314)" onmouseover="showTip(event, 'fs120', 314)" class="f">f</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs86', 315)" onmouseover="showTip(event, 'fs86', 315)" class="f">box</span>), <span onmouseout="hideTip(event, 'fs9', 316)" onmouseover="showTip(event, 'fs9', 316)" class="p">Singleton</span>))
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs32', 317)" onmouseover="showTip(event, 'fs32', 317)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs121', 318)" onmouseover="showTip(event, 'fs121', 318)" class="f">Register</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">TAbstract</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs90', 319)" onmouseover="showTip(event, 'fs90', 319)" class="i">not</span> <span class="k">struct</span><span class="o">&gt;</span>
            (<span onmouseout="hideTip(event, 'fs120', 320)" onmouseover="showTip(event, 'fs120', 320)" class="f">f</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 321)" onmouseover="showTip(event, 'fs18', 321)" class="t">unit</span><span class="k">-&gt;</span><span class="o">&#39;</span><span class="i">TAbstract</span>, <span onmouseout="hideTip(event, 'fs40', 322)" onmouseover="showTip(event, 'fs40', 322)" class="i">lifetime</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs8', 323)" onmouseover="showTip(event, 'fs8', 323)" class="t">Lifetime</span>) <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs33', 324)" onmouseover="showTip(event, 'fs33', 324)" class="i">catalog</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs91', 325)" onmouseover="showTip(event, 'fs91', 325)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs77', 326)" onmouseover="showTip(event, 'fs77', 326)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">TAbstract</span><span class="o">&gt;</span>, (<span onmouseout="hideTip(event, 'fs17', 327)" onmouseover="showTip(event, 'fs17', 327)" class="p">Factory</span>(<span onmouseout="hideTip(event, 'fs120', 328)" onmouseover="showTip(event, 'fs120', 328)" class="f">f</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs86', 329)" onmouseover="showTip(event, 'fs86', 329)" class="f">box</span>), <span onmouseout="hideTip(event, 'fs40', 330)" onmouseover="showTip(event, 'fs40', 330)" class="i">lifetime</span>))
<span class="prep">#endif</span> 


<span class="k">module</span> <span onmouseout="hideTip(event, 'fs122', 331)" onmouseover="showTip(event, 'fs122', 331)" class="t">Usage</span> <span class="o">=</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs123', 332)" onmouseover="showTip(event, 'fs123', 332)" class="i">container</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 333)" onmouseover="showTip(event, 'fs31', 333)" class="t">Container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs124', 334)" onmouseover="showTip(event, 'fs124', 334)" class="i">Current</span>

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs125', 335)" onmouseover="showTip(event, 'fs125', 335)" class="t">A</span> () <span class="o">=</span>
        <span class="k">do</span>  <span onmouseout="hideTip(event, 'fs126', 336)" onmouseover="showTip(event, 'fs126', 336)" class="f">printfn</span> <span class="s">&quot;A&quot;</span>

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs127', 337)" onmouseover="showTip(event, 'fs127', 337)" class="t">B</span> () <span class="o">=</span>
        <span class="k">do</span>  <span onmouseout="hideTip(event, 'fs126', 338)" onmouseover="showTip(event, 'fs126', 338)" class="f">printfn</span> <span class="s">&quot;B&quot;</span>

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs128', 339)" onmouseover="showTip(event, 'fs128', 339)" class="t">C</span> (<span onmouseout="hideTip(event, 'fs129', 340)" onmouseover="showTip(event, 'fs129', 340)" class="i">a</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs125', 341)" onmouseover="showTip(event, 'fs125', 341)" class="t">A</span>, <span onmouseout="hideTip(event, 'fs130', 342)" onmouseover="showTip(event, 'fs130', 342)" class="i">B</span>) <span class="o">=</span>
        <span class="k">do</span>  <span onmouseout="hideTip(event, 'fs126', 343)" onmouseover="showTip(event, 'fs126', 343)" class="f">printfn</span> <span class="s">&quot;C&quot;</span>

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs131', 344)" onmouseover="showTip(event, 'fs131', 344)" class="t">D</span> (<span onmouseout="hideTip(event, 'fs129', 345)" onmouseover="showTip(event, 'fs129', 345)" class="i">a</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs125', 346)" onmouseover="showTip(event, 'fs125', 346)" class="t">A</span>, <span onmouseout="hideTip(event, 'fs132', 347)" onmouseover="showTip(event, 'fs132', 347)" class="i">b</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs127', 348)" onmouseover="showTip(event, 'fs127', 348)" class="t">B</span>, <span onmouseout="hideTip(event, 'fs133', 349)" onmouseover="showTip(event, 'fs133', 349)" class="f">fc</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 350)" onmouseover="showTip(event, 'fs18', 350)" class="t">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs128', 351)" onmouseover="showTip(event, 'fs128', 351)" class="t">C</span>) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs134', 352)" onmouseover="showTip(event, 'fs134', 352)" class="i">c</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs133', 353)" onmouseover="showTip(event, 'fs133', 353)" class="f">fc</span>()
        <span class="k">do</span> <span onmouseout="hideTip(event, 'fs126', 354)" onmouseover="showTip(event, 'fs126', 354)" class="f">printfn</span> <span class="s">&quot;D&quot;</span>

    <span onmouseout="hideTip(event, 'fs123', 355)" onmouseover="showTip(event, 'fs123', 355)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs93', 356)" onmouseover="showTip(event, 'fs93', 356)" class="f">Register</span>((<span class="k">fun</span> () <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs126', 357)" onmouseover="showTip(event, 'fs126', 357)" class="f">printfn</span> <span class="s">&quot;B lambda&quot;</span>; <span onmouseout="hideTip(event, 'fs135', 358)" onmouseover="showTip(event, 'fs135', 358)" class="t">B</span>()), <span onmouseout="hideTip(event, 'fs10', 359)" onmouseover="showTip(event, 'fs10', 359)" class="p">Transient</span>)
    <span onmouseout="hideTip(event, 'fs123', 360)" onmouseover="showTip(event, 'fs123', 360)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs93', 361)" onmouseover="showTip(event, 'fs93', 361)" class="f">Register</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs128', 362)" onmouseover="showTip(event, 'fs128', 362)" class="t">C</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs77', 363)" onmouseover="showTip(event, 'fs77', 363)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs128', 364)" onmouseover="showTip(event, 'fs128', 364)" class="t">C</span><span class="o">&gt;</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs136', 365)" onmouseover="showTip(event, 'fs136', 365)" class="i">c</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs123', 366)" onmouseover="showTip(event, 'fs123', 366)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 367)" onmouseover="showTip(event, 'fs81', 367)" class="f">Resolve</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs128', 368)" onmouseover="showTip(event, 'fs128', 368)" class="t">C</span><span class="o">&gt;</span>()
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs137', 369)" onmouseover="showTip(event, 'fs137', 369)" class="i">c&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs123', 370)" onmouseover="showTip(event, 'fs123', 370)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 371)" onmouseover="showTip(event, 'fs81', 371)" class="f">Resolve</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs128', 372)" onmouseover="showTip(event, 'fs128', 372)" class="t">C</span><span class="o">&gt;</span>()
    <span onmouseout="hideTip(event, 'fs123', 373)" onmouseover="showTip(event, 'fs123', 373)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs138', 374)" onmouseover="showTip(event, 'fs138', 374)" class="f">Release</span>(<span onmouseout="hideTip(event, 'fs136', 375)" onmouseover="showTip(event, 'fs136', 375)" class="i">c</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs139', 376)" onmouseover="showTip(event, 'fs139', 376)" class="i">c&#39;&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs123', 377)" onmouseover="showTip(event, 'fs123', 377)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 378)" onmouseover="showTip(event, 'fs81', 378)" class="f">Resolve</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs128', 379)" onmouseover="showTip(event, 'fs128', 379)" class="t">C</span><span class="o">&gt;</span>()
    <span onmouseout="hideTip(event, 'fs123', 380)" onmouseover="showTip(event, 'fs123', 380)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs138', 381)" onmouseover="showTip(event, 'fs138', 381)" class="f">Release</span>(<span onmouseout="hideTip(event, 'fs139', 382)" onmouseover="showTip(event, 'fs139', 382)" class="i">c&#39;&#39;</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs140', 383)" onmouseover="showTip(event, 'fs140', 383)" class="i">d</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs123', 384)" onmouseover="showTip(event, 'fs123', 384)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 385)" onmouseover="showTip(event, 'fs81', 385)" class="f">Resolve</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs131', 386)" onmouseover="showTip(event, 'fs131', 386)" class="t">D</span><span class="o">&gt;</span>()

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs141', 387)" onmouseover="showTip(event, 'fs141', 387)" class="t">F</span>() <span class="o">=</span>
        <span class="k">override</span> <span onmouseout="hideTip(event, 'fs142', 388)" onmouseover="showTip(event, 'fs142', 388)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs143', 389)" onmouseover="showTip(event, 'fs143', 389)" class="f">ToString</span>() <span class="o">=</span> <span class="s">&quot;Hey&quot;</span>

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs144', 390)" onmouseover="showTip(event, 'fs144', 390)" class="t">O</span> (<span onmouseout="hideTip(event, 'fs145', 391)" onmouseover="showTip(event, 'fs145', 391)" class="i">f</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs29', 392)" onmouseover="showTip(event, 'fs29', 392)" class="t">Func</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs141', 393)" onmouseover="showTip(event, 'fs141', 393)" class="t">F</span><span class="o">&gt;</span>) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs146', 394)" onmouseover="showTip(event, 'fs146', 394)" class="i">s</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs145', 395)" onmouseover="showTip(event, 'fs145', 395)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs147', 396)" onmouseover="showTip(event, 'fs147', 396)" class="f">Invoke</span>()
        <span class="k">do</span> <span onmouseout="hideTip(event, 'fs126', 397)" onmouseover="showTip(event, 'fs126', 397)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs146', 398)" onmouseover="showTip(event, 'fs146', 398)" class="i">s</span> 

    <span onmouseout="hideTip(event, 'fs123', 399)" onmouseover="showTip(event, 'fs123', 399)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs93', 400)" onmouseover="showTip(event, 'fs93', 400)" class="f">Register</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs144', 401)" onmouseover="showTip(event, 'fs144', 401)" class="t">O</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs77', 402)" onmouseover="showTip(event, 'fs77', 402)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs144', 403)" onmouseover="showTip(event, 'fs144', 403)" class="t">O</span><span class="o">&gt;</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs148', 404)" onmouseover="showTip(event, 'fs148', 404)" class="i">o</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs123', 405)" onmouseover="showTip(event, 'fs123', 405)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 406)" onmouseover="showTip(event, 'fs81', 406)" class="f">Resolve</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs144', 407)" onmouseover="showTip(event, 'fs144', 407)" class="t">O</span><span class="o">&gt;</span>()

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs149', 408)" onmouseover="showTip(event, 'fs149', 408)" class="t">ICalculate</span> <span class="o">=</span>
        <span class="k">abstract</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs150', 409)" onmouseover="showTip(event, 'fs150', 409)" class="f">Incr</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs151', 410)" onmouseover="showTip(event, 'fs151', 410)" class="t">int</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs151', 411)" onmouseover="showTip(event, 'fs151', 411)" class="t">int</span>

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs152', 412)" onmouseover="showTip(event, 'fs152', 412)" class="t">Calculator</span> () <span class="o">=</span>
        <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs149', 413)" onmouseover="showTip(event, 'fs149', 413)" class="t">ICalculate</span> <span class="k">with</span>
            <span class="k">member</span> <span onmouseout="hideTip(event, 'fs153', 414)" onmouseover="showTip(event, 'fs153', 414)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs154', 415)" onmouseover="showTip(event, 'fs154', 415)" class="f">Incr</span>(<span onmouseout="hideTip(event, 'fs155', 416)" onmouseover="showTip(event, 'fs155', 416)" class="i">x</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs151', 417)" onmouseover="showTip(event, 'fs151', 417)" class="t">int</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs155', 418)" onmouseover="showTip(event, 'fs155', 418)" class="i">x</span> <span class="o">+</span> <span class="n">1</span>
    
    <span onmouseout="hideTip(event, 'fs123', 419)" onmouseover="showTip(event, 'fs123', 419)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs93', 420)" onmouseover="showTip(event, 'fs93', 420)" class="f">Register</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs149', 421)" onmouseover="showTip(event, 'fs149', 421)" class="t">ICalculate</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs77', 422)" onmouseover="showTip(event, 'fs77', 422)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs152', 423)" onmouseover="showTip(event, 'fs152', 423)" class="t">Calculator</span><span class="o">&gt;</span>)

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs156', 424)" onmouseover="showTip(event, 'fs156', 424)" class="i">calc</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs123', 425)" onmouseover="showTip(event, 'fs123', 425)" class="i">container</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 426)" onmouseover="showTip(event, 'fs81', 426)" class="f">Resolve</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs149', 427)" onmouseover="showTip(event, 'fs149', 427)" class="t">ICalculate</span><span class="o">&gt;</span>()
    <span onmouseout="hideTip(event, 'fs126', 428)" onmouseover="showTip(event, 'fs126', 428)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%d</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs156', 429)" onmouseover="showTip(event, 'fs156', 429)" class="i">calc</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs157', 430)" onmouseover="showTip(event, 'fs157', 430)" class="f">Incr</span> <span class="n">1</span>)
    <span onmouseout="hideTip(event, 'fs158', 431)" onmouseover="showTip(event, 'fs158', 431)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs159', 432)" onmouseover="showTip(event, 'fs159', 432)" class="f">ReadLine</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs118', 433)" onmouseover="showTip(event, 'fs118', 433)" class="f">ignore</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Collections</div>
<div class="tip" id="fs3">namespace System.Collections.Generic</div>
<div class="tip" id="fs4">namespace System.Reflection</div>
<div class="tip" id="fs5">namespace Microsoft</div>
<div class="tip" id="fs6">namespace Microsoft.FSharp</div>
<div class="tip" id="fs7">namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs8">type Lifetime =<br />&#160;&#160;| Singleton<br />&#160;&#160;| Transient<br /><br />Full name: Script.Lifetime</div>
<div class="tip" id="fs9">union case Lifetime.Singleton: Lifetime</div>
<div class="tip" id="fs10">union case Lifetime.Transient: Lifetime</div>
<div class="tip" id="fs11">type AbstractType = Type<br /><br />Full name: Script.AbstractType</div>
<div class="tip" id="fs12">type Type =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Assembly : Assembly<br />&#160;&#160;member AssemblyQualifiedName : string<br />&#160;&#160;member Attributes : TypeAttributes<br />&#160;&#160;member BaseType : Type<br />&#160;&#160;member ContainsGenericParameters : bool<br />&#160;&#160;member DeclaringMethod : MethodBase<br />&#160;&#160;member DeclaringType : Type<br />&#160;&#160;member Equals : o:obj -&gt; bool + 1 overload<br />&#160;&#160;member FindInterfaces : filter:TypeFilter * filterCriteria:obj -&gt; Type[]<br />&#160;&#160;member FindMembers : memberType:MemberTypes * bindingAttr:BindingFlags * filter:MemberFilter * filterCriteria:obj -&gt; MemberInfo[]<br />&#160;&#160;...<br /><br />Full name: System.Type</div>
<div class="tip" id="fs13">type ConcreteType = Type<br /><br />Full name: Script.ConcreteType</div>
<div class="tip" id="fs14">Multiple items<br />union case Constructor.Constructor: ConstructorInfo -&gt; Constructor<br /><br />--------------------<br />type private Constructor =<br />&#160;&#160;| Constructor of ConstructorInfo<br />&#160;&#160;| Reflected of ConcreteType<br />&#160;&#160;| Factory of (unit -&gt; obj)<br /><br />Full name: Script.Constructor</div>
<div class="tip" id="fs15">type ConstructorInfo =<br />&#160;&#160;inherit MethodBase<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Invoke : parameters:obj[] -&gt; obj + 1 overload<br />&#160;&#160;member MemberType : MemberTypes<br />&#160;&#160;static val ConstructorName : string<br />&#160;&#160;static val TypeConstructorName : string<br /><br />Full name: System.Reflection.ConstructorInfo</div>
<div class="tip" id="fs16">union case Constructor.Reflected: ConcreteType -&gt; Constructor</div>
<div class="tip" id="fs17">union case Constructor.Factory: (unit -&gt; obj) -&gt; Constructor</div>
<div class="tip" id="fs18">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs19">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs20">val t : Type</div>
<div class="tip" id="fs21">type FSharpType =<br />&#160;&#160;static member GetExceptionFields : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetFunctionElements : functionType:Type -&gt; Type * Type<br />&#160;&#160;static member GetRecordFields : recordType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetTupleElements : tupleType:Type -&gt; Type []<br />&#160;&#160;static member GetUnionCases : unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo []<br />&#160;&#160;static member IsExceptionRepresentation : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsFunction : typ:Type -&gt; bool<br />&#160;&#160;static member IsModule : typ:Type -&gt; bool<br />&#160;&#160;static member IsRecord : typ:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsTuple : typ:Type -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpType</div>
<div class="tip" id="fs22">static member FSharpType.IsFunction : typ:Type -&gt; bool</div>
<div class="tip" id="fs23">static member FSharpType.GetFunctionElements : functionType:Type -&gt; Type * Type</div>
<div class="tip" id="fs24">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs25">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs26">property Type.IsGenericType: bool</div>
<div class="tip" id="fs27">Type.GetGenericTypeDefinition() : Type</div>
<div class="tip" id="fs28">val typedefof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typedefof</div>
<div class="tip" id="fs29">Multiple items<br />type Func&lt;&#39;TResult&gt; =<br />&#160;&#160;delegate of unit -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;T16,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 * &#39;T16 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;</div>
<div class="tip" id="fs30">Type.GetGenericArguments() : Type []</div>
<div class="tip" id="fs31">Multiple items<br />type Container =<br />&#160;&#160;new : unit -&gt; Container<br />&#160;&#160;member Register : cinfo:ConstructorInfo -&gt; unit<br />&#160;&#160;member Register : concreteType:ConcreteType -&gt; unit<br />&#160;&#160;member Register : instance:&#39;TAbstract -&gt; unit<br />&#160;&#160;member Register : f:(unit -&gt; &#39;TAbstract) -&gt; unit (requires reference type)<br />&#160;&#160;member Register : cinfo:ConstructorInfo * lifetime:Lifetime -&gt; unit<br />&#160;&#160;member Register : abstractTypes:seq&lt;AbstractType&gt; * concreteType:ConcreteType -&gt; unit<br />&#160;&#160;member Register : concreteType:ConcreteType * lifetime:Lifetime -&gt; unit<br />&#160;&#160;member Register : f:(unit -&gt; &#39;TAbstract) * lifetime:Lifetime -&gt; unit (requires reference type)<br />&#160;&#160;member Release : instance:obj -&gt; unit<br />&#160;&#160;...<br /><br />Full name: Script.Container<br /><br />--------------------<br />new : unit -&gt; Container</div>
<div class="tip" id="fs32">val container : Container</div>
<div class="tip" id="fs33">val catalog : Dictionary&lt;AbstractType,(Constructor * Lifetime)&gt;</div>
<div class="tip" id="fs34">Multiple items<br />type Dictionary&lt;&#39;TKey,&#39;TValue&gt; =<br />&#160;&#160;new : unit -&gt; Dictionary&lt;&#39;TKey, &#39;TValue&gt; + 5 overloads<br />&#160;&#160;member Add : key:&#39;TKey * value:&#39;TValue -&gt; unit<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Comparer : IEqualityComparer&lt;&#39;TKey&gt;<br />&#160;&#160;member ContainsKey : key:&#39;TKey -&gt; bool<br />&#160;&#160;member ContainsValue : value:&#39;TValue -&gt; bool<br />&#160;&#160;member Count : int<br />&#160;&#160;member GetEnumerator : unit -&gt; Enumerator&lt;&#39;TKey, &#39;TValue&gt;<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;member Item : &#39;TKey -&gt; &#39;TValue with get, set<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br />&#160;&#160;nested type KeyCollection<br />&#160;&#160;nested type ValueCollection<br /><br />Full name: System.Collections.Generic.Dictionary&lt;_,_&gt;<br /><br />--------------------<br />Dictionary() : unit<br />Dictionary(capacity: int) : unit<br />Dictionary(comparer: IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Dictionary(dictionary: IDictionary&lt;&#39;TKey,&#39;TValue&gt;) : unit<br />Dictionary(capacity: int, comparer: IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Dictionary(dictionary: IDictionary&lt;&#39;TKey,&#39;TValue&gt;, comparer: IEqualityComparer&lt;&#39;TKey&gt;) : unit</div>
<div class="tip" id="fs35">val singletons : Dictionary&lt;ConcreteType,obj&gt;</div>
<div class="tip" id="fs36">val tryResolve : (AbstractType -&gt; obj option)</div>
<div class="tip" id="fs37">val t : AbstractType</div>
<div class="tip" id="fs38">Dictionary.TryGetValue(key: AbstractType, value: byref&lt;Constructor * Lifetime&gt;) : bool</div>
<div class="tip" id="fs39">val cinfo : ConstructorInfo</div>
<div class="tip" id="fs40">val lifetime : Lifetime</div>
<div class="tip" id="fs41">val tryObtain : (Type -&gt; (unit -&gt; obj option) -&gt; Lifetime -&gt; obj option)</div>
<div class="tip" id="fs42">property MemberInfo.DeclaringType: Type</div>
<div class="tip" id="fs43">val tryConstructor : (ConstructorInfo -&gt; obj option)</div>
<div class="tip" id="fs44">val u : ConcreteType</div>
<div class="tip" id="fs45">val tryConstructors : (ConcreteType -&gt; obj option)</div>
<div class="tip" id="fs46">val f : (unit -&gt; obj)</div>
<div class="tip" id="fs47">val f : (unit -&gt; obj option)</div>
<div class="tip" id="fs48">Dictionary.TryGetValue(key: ConcreteType, value: byref&lt;obj&gt;) : bool</div>
<div class="tip" id="fs49">val value : obj</div>
<div class="tip" id="fs50">val result : obj option</div>
<div class="tip" id="fs51">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs52">val iter : action:(&#39;T -&gt; unit) -&gt; option:&#39;T option -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Option.iter</div>
<div class="tip" id="fs53">val store : (Type -&gt; obj -&gt; Lifetime -&gt; unit)</div>
<div class="tip" id="fs54">Dictionary.Add(key: ConcreteType, value: obj) : unit</div>
<div class="tip" id="fs55">val t : ConcreteType</div>
<div class="tip" id="fs56">Type.GetConstructors() : ConstructorInfo []<br />Type.GetConstructors(bindingAttr: BindingFlags) : ConstructorInfo []</div>
<div class="tip" id="fs57">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs58">val sortBy : projection:(&#39;T -&gt; &#39;Key) -&gt; array:&#39;T [] -&gt; &#39;T [] (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Array.sortBy</div>
<div class="tip" id="fs59">val c : ConstructorInfo</div>
<div class="tip" id="fs60">MethodBase.GetParameters() : ParameterInfo []</div>
<div class="tip" id="fs61">val tryPick : chooser:(&#39;T -&gt; &#39;U option) -&gt; array:&#39;T [] -&gt; &#39;U option<br /><br />Full name: Microsoft.FSharp.Collections.Array.tryPick</div>
<div class="tip" id="fs62">val ctr : ConstructorInfo</div>
<div class="tip" id="fs63">val ps : ParameterInfo []</div>
<div class="tip" id="fs64">val args : obj option []</div>
<div class="tip" id="fs65">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.map</div>
<div class="tip" id="fs66">val p : ParameterInfo</div>
<div class="tip" id="fs67">val tryResolveArgument : (Type -&gt; obj option)</div>
<div class="tip" id="fs68">property ParameterInfo.ParameterType: Type</div>
<div class="tip" id="fs69">val forall : predicate:(&#39;T -&gt; bool) -&gt; array:&#39;T [] -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.Array.forall</div>
<div class="tip" id="fs70">val isSome : option:&#39;T option -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Option.isSome</div>
<div class="tip" id="fs71">val choose : chooser:(&#39;T -&gt; &#39;U option) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.choose</div>
<div class="tip" id="fs72">val id : x:&#39;T -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.id</div>
<div class="tip" id="fs73">ConstructorInfo.Invoke(parameters: obj []) : obj<br />MethodBase.Invoke(obj: obj, parameters: obj []) : obj<br />ConstructorInfo.Invoke(invokeAttr: BindingFlags, binder: Binder, parameters: obj [], culture: Globalization.CultureInfo) : obj<br />MethodBase.Invoke(obj: obj, invokeAttr: BindingFlags, binder: Binder, parameters: obj [], culture: Globalization.CultureInfo) : obj</div>
<div class="tip" id="fs74">active recognizer FunType: Type -&gt; (Type * Type) option<br /><br />Full name: Script.( |FunType|_| )</div>
<div class="tip" id="fs75">val arg : Type</div>
<div class="tip" id="fs76">val result : Type</div>
<div class="tip" id="fs77">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs78">type FSharpValue =<br />&#160;&#160;static member GetExceptionFields : exn:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetRecordField : record:obj * info:PropertyInfo -&gt; obj<br />&#160;&#160;static member GetRecordFields : record:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetTupleField : tuple:obj * index:int -&gt; obj<br />&#160;&#160;static member GetTupleFields : tuple:obj -&gt; obj []<br />&#160;&#160;static member GetUnionFields : value:obj * unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo * obj []<br />&#160;&#160;static member MakeFunction : functionType:Type * implementation:(obj -&gt; obj) -&gt; obj<br />&#160;&#160;static member MakeRecord : recordType:Type * values:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;static member MakeTuple : tupleElements:obj [] * tupleType:Type -&gt; obj<br />&#160;&#160;static member MakeUnion : unionCase:UnionCaseInfo * args:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpValue</div>
<div class="tip" id="fs79">static member FSharpValue.MakeFunction : functionType:Type * implementation:(obj -&gt; obj) -&gt; obj</div>
<div class="tip" id="fs80">val args : obj</div>
<div class="tip" id="fs81">member Container.Resolve : unit -&gt; &#39;TAbstract (requires reference type)<br />member Container.Resolve : abstractType:AbstractType -&gt; obj</div>
<div class="tip" id="fs82">active recognizer FuncType: Type -&gt; Type option<br /><br />Full name: Script.( |FuncType|_| )</div>
<div class="tip" id="fs83">val mi : MethodInfo</div>
<div class="tip" id="fs84">type Delegate =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member DynamicInvoke : [&lt;ParamArray&gt;] args:obj[] -&gt; obj<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetInvocationList : unit -&gt; Delegate[]<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;member Method : MethodInfo<br />&#160;&#160;member Target : obj<br />&#160;&#160;static member Combine : [&lt;ParamArray&gt;] delegates:Delegate[] -&gt; Delegate + 1 overload<br />&#160;&#160;static member CreateDelegate : type:Type * method:MethodInfo -&gt; Delegate + 9 overloads<br />&#160;&#160;...<br /><br />Full name: System.Delegate</div>
<div class="tip" id="fs85">Delegate.CreateDelegate(type: Type, method: MethodInfo) : Delegate<br />Delegate.CreateDelegate(type: Type, firstArgument: obj, method: MethodInfo) : Delegate<br />Delegate.CreateDelegate(type: Type, method: MethodInfo, throwOnBindFailure: bool) : Delegate<br />Delegate.CreateDelegate(type: Type, target: Type, method: string) : Delegate<br />Delegate.CreateDelegate(type: Type, target: obj, method: string) : Delegate<br />Delegate.CreateDelegate(type: Type, firstArgument: obj, method: MethodInfo, throwOnBindFailure: bool) : Delegate<br />Delegate.CreateDelegate(type: Type, target: Type, method: string, ignoreCase: bool) : Delegate<br />Delegate.CreateDelegate(type: Type, target: obj, method: string, ignoreCase: bool) : Delegate<br />Delegate.CreateDelegate(type: Type, target: Type, method: string, ignoreCase: bool, throwOnBindFailure: bool) : Delegate<br />Delegate.CreateDelegate(type: Type, target: obj, method: string, ignoreCase: bool, throwOnBindFailure: bool) : Delegate</div>
<div class="tip" id="fs86">val box : value:&#39;T -&gt; obj<br /><br />Full name: Microsoft.FSharp.Core.Operators.box</div>
<div class="tip" id="fs87">val current : Container</div>
<div class="tip" id="fs88">static member Container.Current : Container<br /><br />Full name: Script.Container.Current</div>
<div class="tip" id="fs89">member Container.Register : cinfo:ConstructorInfo * lifetime:Lifetime -&gt; unit<br /><br />Full name: Script.Container.Register</div>
<div class="tip" id="fs90">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs91">Dictionary.Add(key: AbstractType, value: Constructor * Lifetime) : unit</div>
<div class="tip" id="fs92">member Container.Register : cinfo:ConstructorInfo -&gt; unit<br /><br />Full name: Script.Container.Register</div>
<div class="tip" id="fs93">member Container.Register : cinfo:ConstructorInfo -&gt; unit<br />member Container.Register : concreteType:ConcreteType -&gt; unit<br />member Container.Register : instance:&#39;TAbstract -&gt; unit<br />member Container.Register : f:(unit -&gt; &#39;TAbstract) -&gt; unit (requires reference type)<br />member Container.Register : cinfo:ConstructorInfo * lifetime:Lifetime -&gt; unit<br />member Container.Register : abstractTypes:seq&lt;AbstractType&gt; * concreteType:ConcreteType -&gt; unit<br />member Container.Register : concreteType:ConcreteType * lifetime:Lifetime -&gt; unit<br />member Container.Register : f:(unit -&gt; &#39;TAbstract) * lifetime:Lifetime -&gt; unit (requires reference type)</div>
<div class="tip" id="fs94">member Container.Register : abstractTypes:seq&lt;AbstractType&gt; * concreteType:ConcreteType -&gt; unit<br /><br />Full name: Script.Container.Register</div>
<div class="tip" id="fs95">val abstractTypes : seq&lt;AbstractType&gt;</div>
<div class="tip" id="fs96">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs97">val concreteType : ConcreteType</div>
<div class="tip" id="fs98">member Container.Register : concreteType:ConcreteType * lifetime:Lifetime -&gt; unit<br /><br />Full name: Script.Container.Register</div>
<div class="tip" id="fs99">member Container.Register : concreteType:ConcreteType -&gt; unit<br /><br />Full name: Script.Container.Register</div>
<div class="tip" id="fs100">member Container.Register : instance:&#39;TAbstract -&gt; unit<br /><br />Full name: Script.Container.Register</div>
<div class="tip" id="fs101">val instance : &#39;TAbstract</div>
<div class="tip" id="fs102">member Container.Resolve : unit -&gt; &#39;TAbstract (requires reference type)<br /><br />Full name: Script.Container.Resolve</div>
<div class="tip" id="fs103">member Container.Resolve : abstractType:AbstractType -&gt; obj<br /><br />Full name: Script.Container.Resolve</div>
<div class="tip" id="fs104">val abstractType : AbstractType</div>
<div class="tip" id="fs105">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs106">val invalidOp : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.invalidOp</div>
<div class="tip" id="fs107">member Container.Release : instance:obj -&gt; unit<br /><br />Full name: Script.Container.Release</div>
<div class="tip" id="fs108">val instance : obj</div>
<div class="tip" id="fs109">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs110">val filter : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.filter</div>
<div class="tip" id="fs111">val pair : KeyValuePair&lt;ConcreteType,obj&gt;</div>
<div class="tip" id="fs112">property KeyValuePair.Value: obj</div>
<div class="tip" id="fs113">val toList : source:seq&lt;&#39;T&gt; -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.Seq.toList</div>
<div class="tip" id="fs114">Multiple items<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; List&lt;&#39;T&gt; + 2 overloads<br />&#160;&#160;member Add : item:&#39;T -&gt; unit<br />&#160;&#160;member AddRange : collection:IEnumerable&lt;&#39;T&gt; -&gt; unit<br />&#160;&#160;member AsReadOnly : unit -&gt; ReadOnlyCollection&lt;&#39;T&gt;<br />&#160;&#160;member BinarySearch : item:&#39;T -&gt; int + 2 overloads<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Contains : item:&#39;T -&gt; bool<br />&#160;&#160;member ConvertAll&lt;&#39;TOutput&gt; : converter:Converter&lt;&#39;T, &#39;TOutput&gt; -&gt; List&lt;&#39;TOutput&gt;<br />&#160;&#160;member CopyTo : array:&#39;T[] -&gt; unit + 2 overloads<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br /><br />Full name: System.Collections.Generic.List&lt;_&gt;<br /><br />--------------------<br />List() : unit<br />List(capacity: int) : unit<br />List(collection: IEnumerable&lt;&#39;T&gt;) : unit</div>
<div class="tip" id="fs115">val iter : action:(&#39;T -&gt; unit) -&gt; list:&#39;T list -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.List.iter</div>
<div class="tip" id="fs116">Dictionary.Remove(key: ConcreteType) : bool</div>
<div class="tip" id="fs117">property KeyValuePair.Key: ConcreteType</div>
<div class="tip" id="fs118">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>
<div class="tip" id="fs119">member Container.Register : f:(unit -&gt; &#39;TAbstract) -&gt; unit (requires reference type)<br /><br />Full name: Script.Container.Register</div>
<div class="tip" id="fs120">val f : (unit -&gt; &#39;TAbstract) (requires reference type)</div>
<div class="tip" id="fs121">member Container.Register : f:(unit -&gt; &#39;TAbstract) * lifetime:Lifetime -&gt; unit (requires reference type)<br /><br />Full name: Script.Container.Register</div>
<div class="tip" id="fs122">module Usage<br /><br />from Script</div>
<div class="tip" id="fs123">val container : Container<br /><br />Full name: Script.Usage.container</div>
<div class="tip" id="fs124">property Container.Current: Container</div>
<div class="tip" id="fs125">type A =<br />&#160;&#160;new : unit -&gt; A<br /><br />Full name: Script.Usage.A</div>
<div class="tip" id="fs126">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs127">type B =<br />&#160;&#160;new : unit -&gt; B<br /><br />Full name: Script.Usage.B</div>
<div class="tip" id="fs128">type C =<br />&#160;&#160;new : a:A * B:obj -&gt; C<br /><br />Full name: Script.Usage.C</div>
<div class="tip" id="fs129">val a : A</div>
<div class="tip" id="fs130">val B : obj</div>
<div class="tip" id="fs131">type D =<br />&#160;&#160;new : a:A * b:B * fc:(unit -&gt; C) -&gt; D<br /><br />Full name: Script.Usage.D</div>
<div class="tip" id="fs132">val b : B</div>
<div class="tip" id="fs133">val fc : (unit -&gt; C)</div>
<div class="tip" id="fs134">val c : C</div>
<div class="tip" id="fs135">new : unit -&gt; B</div>
<div class="tip" id="fs136">val c : C<br /><br />Full name: Script.Usage.c</div>
<div class="tip" id="fs137">val c&#39; : C<br /><br />Full name: Script.Usage.c&#39;</div>
<div class="tip" id="fs138">member Container.Release : instance:obj -&gt; unit</div>
<div class="tip" id="fs139">val c&#39;&#39; : C<br /><br />Full name: Script.Usage.c&#39;&#39;</div>
<div class="tip" id="fs140">val d : D<br /><br />Full name: Script.Usage.d</div>
<div class="tip" id="fs141">type F =<br />&#160;&#160;new : unit -&gt; F<br />&#160;&#160;override ToString : unit -&gt; string<br /><br />Full name: Script.Usage.F</div>
<div class="tip" id="fs142">val this : F</div>
<div class="tip" id="fs143">override F.ToString : unit -&gt; string<br /><br />Full name: Script.Usage.F.ToString</div>
<div class="tip" id="fs144">type O =<br />&#160;&#160;new : f:Func&lt;F&gt; -&gt; O<br /><br />Full name: Script.Usage.O</div>
<div class="tip" id="fs145">val f : Func&lt;F&gt;</div>
<div class="tip" id="fs146">val s : F</div>
<div class="tip" id="fs147">Func.Invoke() : F</div>
<div class="tip" id="fs148">val o : O<br /><br />Full name: Script.Usage.o</div>
<div class="tip" id="fs149">type ICalculate =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member Incr : int -&gt; int<br />&#160;&#160;end<br /><br />Full name: Script.Usage.ICalculate</div>
<div class="tip" id="fs150">abstract member ICalculate.Incr : int -&gt; int<br /><br />Full name: Script.Usage.ICalculate.Incr</div>
<div class="tip" id="fs151">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs152">Multiple items<br />type Calculator =<br />&#160;&#160;interface ICalculate<br />&#160;&#160;new : unit -&gt; Calculator<br /><br />Full name: Script.Usage.Calculator<br /><br />--------------------<br />new : unit -&gt; Calculator</div>
<div class="tip" id="fs153">val this : Calculator</div>
<div class="tip" id="fs154">override Calculator.Incr : x:int -&gt; int<br /><br />Full name: Script.Usage.Calculator.Incr</div>
<div class="tip" id="fs155">val x : int</div>
<div class="tip" id="fs156">val calc : ICalculate<br /><br />Full name: Script.Usage.calc</div>
<div class="tip" id="fs157">abstract member ICalculate.Incr : int -&gt; int</div>
<div class="tip" id="fs158">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs159">Console.ReadLine() : string</div>

