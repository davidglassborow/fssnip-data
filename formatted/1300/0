<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
<span class="l">74: </span>
<span class="l">75: </span>
<span class="l">76: </span>
<span class="l">77: </span>
<span class="l">78: </span>
<span class="l">79: </span>
<span class="l">80: </span>
<span class="l">81: </span>
<span class="l">82: </span>
<span class="l">83: </span>
<span class="l">84: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">namespace</span> <span class="i">DouglasPeuker</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">Point</span> <span class="o">=</span> { <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">X</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">double</span>; <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">Y</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="t">double</span>}

<span class="k">module</span> <span class="t">Reduce</span> <span class="o">=</span> 

    <span class="k">let</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="f">findPerpendicularDistance</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">p</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">p1</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">p2</span> <span class="o">=</span>
        <span class="k">if</span> (<span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">p1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 12)" onmouseover="showTip(event, 'fs3', 12)" class="i">X</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="i">p2</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 14)" onmouseover="showTip(event, 'fs3', 14)" class="i">X</span>) <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="t">Math</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="f">Abs</span>(<span onmouseout="hideTip(event, 'fs7', 17)" onmouseover="showTip(event, 'fs7', 17)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 18)" onmouseover="showTip(event, 'fs3', 18)" class="i">X</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs8', 19)" onmouseover="showTip(event, 'fs8', 19)" class="i">p1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 20)" onmouseover="showTip(event, 'fs3', 20)" class="i">X</span>)
        <span class="k">else</span> 
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="i">slope</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs9', 22)" onmouseover="showTip(event, 'fs9', 22)" class="i">p2</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 23)" onmouseover="showTip(event, 'fs5', 23)" class="i">Y</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs8', 24)" onmouseover="showTip(event, 'fs8', 24)" class="i">p1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 25)" onmouseover="showTip(event, 'fs5', 25)" class="i">Y</span>) <span class="o">/</span> (<span onmouseout="hideTip(event, 'fs9', 26)" onmouseover="showTip(event, 'fs9', 26)" class="i">p2</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 27)" onmouseover="showTip(event, 'fs3', 27)" class="i">X</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs8', 28)" onmouseover="showTip(event, 'fs8', 28)" class="i">p1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 29)" onmouseover="showTip(event, 'fs3', 29)" class="i">X</span>)
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 30)" onmouseover="showTip(event, 'fs13', 30)" class="i">intercept</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 31)" onmouseover="showTip(event, 'fs8', 31)" class="i">p1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 32)" onmouseover="showTip(event, 'fs5', 32)" class="i">Y</span> <span class="o">-</span> (<span onmouseout="hideTip(event, 'fs12', 33)" onmouseover="showTip(event, 'fs12', 33)" class="i">slope</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs8', 34)" onmouseover="showTip(event, 'fs8', 34)" class="i">p1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 35)" onmouseover="showTip(event, 'fs3', 35)" class="i">X</span>)
            <span onmouseout="hideTip(event, 'fs10', 36)" onmouseover="showTip(event, 'fs10', 36)" class="t">Math</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 37)" onmouseover="showTip(event, 'fs11', 37)" class="f">Abs</span>(<span onmouseout="hideTip(event, 'fs12', 38)" onmouseover="showTip(event, 'fs12', 38)" class="i">slope</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs7', 39)" onmouseover="showTip(event, 'fs7', 39)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 40)" onmouseover="showTip(event, 'fs3', 40)" class="i">X</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs7', 41)" onmouseover="showTip(event, 'fs7', 41)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 42)" onmouseover="showTip(event, 'fs5', 42)" class="i">Y</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs13', 43)" onmouseover="showTip(event, 'fs13', 43)" class="i">intercept</span>) <span class="o">/</span> <span onmouseout="hideTip(event, 'fs10', 44)" onmouseover="showTip(event, 'fs10', 44)" class="t">Math</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 45)" onmouseover="showTip(event, 'fs14', 45)" class="f">Sqrt</span>(<span onmouseout="hideTip(event, 'fs10', 46)" onmouseover="showTip(event, 'fs10', 46)" class="t">Math</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 47)" onmouseover="showTip(event, 'fs15', 47)" class="f">Pow</span>(<span onmouseout="hideTip(event, 'fs12', 48)" onmouseover="showTip(event, 'fs12', 48)" class="i">slope</span>, <span class="n">2.</span>) <span class="o">+</span> <span class="n">1.</span>)

    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs16', 49)" onmouseover="showTip(event, 'fs16', 49)" class="f">Reduce</span> <span onmouseout="hideTip(event, 'fs17', 50)" onmouseover="showTip(event, 'fs17', 50)" class="i">epsilon</span> (<span onmouseout="hideTip(event, 'fs18', 51)" onmouseover="showTip(event, 'fs18', 51)" class="i">points</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs2', 52)" onmouseover="showTip(event, 'fs2', 52)" class="t">Point</span>[]) <span class="o">=</span>
        <span class="k">if</span> (<span onmouseout="hideTip(event, 'fs18', 53)" onmouseover="showTip(event, 'fs18', 53)" class="i">points</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 54)" onmouseover="showTip(event, 'fs19', 54)" class="i">Length</span> <span class="o">&lt;</span> <span class="n">3</span>) <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs18', 55)" onmouseover="showTip(event, 'fs18', 55)" class="i">points</span>
        <span class="k">else</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 56)" onmouseover="showTip(event, 'fs20', 56)" class="i">firstPoint</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 57)" onmouseover="showTip(event, 'fs18', 57)" class="i">points</span><span class="o">.</span>[<span class="n">0</span>]
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 58)" onmouseover="showTip(event, 'fs21', 58)" class="i">lastPoint</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 59)" onmouseover="showTip(event, 'fs18', 59)" class="i">points</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs18', 60)" onmouseover="showTip(event, 'fs18', 60)" class="i">points</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 61)" onmouseover="showTip(event, 'fs19', 61)" class="i">Length</span> <span class="o">-</span> <span class="n">1</span>]

            <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs22', 62)" onmouseover="showTip(event, 'fs22', 62)" class="v">index</span> <span class="o">=</span> <span class="o">-</span><span class="n">1</span>
            <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs23', 63)" onmouseover="showTip(event, 'fs23', 63)" class="v">dist</span> <span class="o">=</span> <span class="n">0.0</span>

            <span class="k">for</span> <span onmouseout="hideTip(event, 'fs24', 64)" onmouseover="showTip(event, 'fs24', 64)" class="i">i</span> <span class="k">in</span> <span class="n">1..</span><span onmouseout="hideTip(event, 'fs18', 65)" onmouseover="showTip(event, 'fs18', 65)" class="i">points</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 66)" onmouseover="showTip(event, 'fs19', 66)" class="i">Length</span><span class="o">-</span><span class="n">1</span> <span class="k">do</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 67)" onmouseover="showTip(event, 'fs25', 67)" class="i">cDist</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 68)" onmouseover="showTip(event, 'fs6', 68)" class="f">findPerpendicularDistance</span> <span onmouseout="hideTip(event, 'fs18', 69)" onmouseover="showTip(event, 'fs18', 69)" class="i">points</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs24', 70)" onmouseover="showTip(event, 'fs24', 70)" class="i">i</span>] <span onmouseout="hideTip(event, 'fs20', 71)" onmouseover="showTip(event, 'fs20', 71)" class="i">firstPoint</span> <span onmouseout="hideTip(event, 'fs21', 72)" onmouseover="showTip(event, 'fs21', 72)" class="i">lastPoint</span>
                <span class="k">if</span> (<span onmouseout="hideTip(event, 'fs25', 73)" onmouseover="showTip(event, 'fs25', 73)" class="i">cDist</span> <span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs23', 74)" onmouseover="showTip(event, 'fs23', 74)" class="v">dist</span>) <span class="k">then</span>
                    <span onmouseout="hideTip(event, 'fs23', 75)" onmouseover="showTip(event, 'fs23', 75)" class="v">dist</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs25', 76)" onmouseover="showTip(event, 'fs25', 76)" class="i">cDist</span>
                    <span onmouseout="hideTip(event, 'fs22', 77)" onmouseover="showTip(event, 'fs22', 77)" class="v">index</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs24', 78)" onmouseover="showTip(event, 'fs24', 78)" class="i">i</span>
        
            <span class="k">if</span> (<span onmouseout="hideTip(event, 'fs23', 79)" onmouseover="showTip(event, 'fs23', 79)" class="v">dist</span> <span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs17', 80)" onmouseover="showTip(event, 'fs17', 80)" class="i">epsilon</span>) <span class="k">then</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 81)" onmouseover="showTip(event, 'fs26', 81)" class="i">l1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 82)" onmouseover="showTip(event, 'fs18', 82)" class="i">points</span><span class="o">.</span>[<span class="n">0..</span><span onmouseout="hideTip(event, 'fs22', 83)" onmouseover="showTip(event, 'fs22', 83)" class="v">index</span>]
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 84)" onmouseover="showTip(event, 'fs27', 84)" class="i">l2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 85)" onmouseover="showTip(event, 'fs18', 85)" class="i">points</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs22', 86)" onmouseover="showTip(event, 'fs22', 86)" class="v">index</span><span class="o">..</span>]
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 87)" onmouseover="showTip(event, 'fs28', 87)" class="i">r1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 88)" onmouseover="showTip(event, 'fs16', 88)" class="f">Reduce</span> <span onmouseout="hideTip(event, 'fs17', 89)" onmouseover="showTip(event, 'fs17', 89)" class="i">epsilon</span> <span onmouseout="hideTip(event, 'fs26', 90)" onmouseover="showTip(event, 'fs26', 90)" class="i">l1</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 91)" onmouseover="showTip(event, 'fs29', 91)" class="i">r2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 92)" onmouseover="showTip(event, 'fs16', 92)" class="f">Reduce</span> <span onmouseout="hideTip(event, 'fs17', 93)" onmouseover="showTip(event, 'fs17', 93)" class="i">epsilon</span> <span onmouseout="hideTip(event, 'fs27', 94)" onmouseover="showTip(event, 'fs27', 94)" class="i">l2</span>
                <span onmouseout="hideTip(event, 'fs30', 95)" onmouseover="showTip(event, 'fs30', 95)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 96)" onmouseover="showTip(event, 'fs31', 96)" class="f">append</span> (<span onmouseout="hideTip(event, 'fs28', 97)" onmouseover="showTip(event, 'fs28', 97)" class="i">r1</span><span class="o">.</span>[<span class="n">0..</span><span onmouseout="hideTip(event, 'fs28', 98)" onmouseover="showTip(event, 'fs28', 98)" class="i">r1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 99)" onmouseover="showTip(event, 'fs19', 99)" class="i">Length</span><span class="o">-</span><span class="n">2</span>]) <span onmouseout="hideTip(event, 'fs29', 100)" onmouseover="showTip(event, 'fs29', 100)" class="i">r2</span> 
            <span class="k">else</span>
                [|<span onmouseout="hideTip(event, 'fs20', 101)" onmouseover="showTip(event, 'fs20', 101)" class="i">firstPoint</span>; <span onmouseout="hideTip(event, 'fs21', 102)" onmouseover="showTip(event, 'fs21', 102)" class="i">lastPoint</span>|]

<span class="k">module</span> <span onmouseout="hideTip(event, 'fs32', 103)" onmouseover="showTip(event, 'fs32', 103)" class="t">Tests</span> <span class="o">=</span>

    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs33', 104)" onmouseover="showTip(event, 'fs33', 104)" class="i">FsUnit</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs34', 105)" onmouseover="showTip(event, 'fs34', 105)" class="i">NUnit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 106)" onmouseover="showTip(event, 'fs35', 106)" class="i">Framework</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs36', 107)" onmouseover="showTip(event, 'fs36', 107)" class="i">Reduce</span>

    [&lt;<span onmouseout="hideTip(event, 'fs37', 108)" onmouseover="showTip(event, 'fs37', 108)" class="t">TestFixture</span>&gt;]
    <span class="k">type</span> <span class="t">``Given the DouglasPeuker Simplify function``</span>() <span class="o">=</span> 

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 109)" onmouseover="showTip(event, 'fs38', 109)" class="f">StrToPoints</span> (<span onmouseout="hideTip(event, 'fs39', 110)" onmouseover="showTip(event, 'fs39', 110)" class="i">s</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs40', 111)" onmouseover="showTip(event, 'fs40', 111)" class="t">string</span>) <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs39', 112)" onmouseover="showTip(event, 'fs39', 112)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 113)" onmouseover="showTip(event, 'fs41', 113)" class="f">Split</span>([|<span class="s">&#39;;&#39;</span>|])
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 114)" onmouseover="showTip(event, 'fs30', 114)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 115)" onmouseover="showTip(event, 'fs42', 115)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs43', 116)" onmouseover="showTip(event, 'fs43', 116)" class="i">p</span> <span class="k">-&gt;</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 117)" onmouseover="showTip(event, 'fs44', 117)" class="i">xy</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs43', 118)" onmouseover="showTip(event, 'fs43', 118)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 119)" onmouseover="showTip(event, 'fs41', 119)" class="f">Split</span>([|<span class="s">&#39;,&#39;</span>|])
                                   {<span onmouseout="hideTip(event, 'fs3', 120)" onmouseover="showTip(event, 'fs3', 120)" class="i">X</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs45', 121)" onmouseover="showTip(event, 'fs45', 121)" class="t">Double</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 122)" onmouseover="showTip(event, 'fs46', 122)" class="f">Parse</span>(<span onmouseout="hideTip(event, 'fs44', 123)" onmouseover="showTip(event, 'fs44', 123)" class="i">xy</span><span class="o">.</span>[<span class="n">0</span>]); <span onmouseout="hideTip(event, 'fs5', 124)" onmouseover="showTip(event, 'fs5', 124)" class="i">Y</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs45', 125)" onmouseover="showTip(event, 'fs45', 125)" class="t">Double</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 126)" onmouseover="showTip(event, 'fs46', 126)" class="f">Parse</span>(<span onmouseout="hideTip(event, 'fs44', 127)" onmouseover="showTip(event, 'fs44', 127)" class="i">xy</span><span class="o">.</span>[<span class="n">1</span>])})

        <span class="c">// Minimal cases:</span>
        [&lt;<span onmouseout="hideTip(event, 'fs47', 128)" onmouseover="showTip(event, 'fs47', 128)" class="t">TestCase</span>(<span class="s">&quot;1.0, 1.0&quot;</span>, <span class="s">&quot;1.0, 1.0&quot;</span>, <span class="n">0.5</span>)&gt;]
        [&lt;<span onmouseout="hideTip(event, 'fs47', 129)" onmouseover="showTip(event, 'fs47', 129)" class="t">TestCase</span>(<span class="s">&quot;1.0, 1.0; 2.0, 2.0&quot;</span>, <span class="s">&quot;1.0, 1.0; 2.0, 2.0&quot;</span>, <span class="n">0.5</span>)&gt;]
        [&lt;<span onmouseout="hideTip(event, 'fs47', 130)" onmouseover="showTip(event, 'fs47', 130)" class="t">TestCase</span>(<span class="s">&quot;1.0, 1.0; 2.0, 2.0; 3.0, 3.0&quot;</span>, <span class="s">&quot;1.0, 1.0; 3.0, 3.0&quot;</span>, <span class="n">0.5</span>)&gt;]

        <span class="c">// Effect of varying epsilon:</span>
        [&lt;<span onmouseout="hideTip(event, 'fs47', 131)" onmouseover="showTip(event, 'fs47', 131)" class="t">TestCase</span>(<span class="s">&quot;0.0, 2.0; 1.0, 1.0; 3.0, 0.0; 5.0, 1.0&quot;</span>, <span class="s">&quot;0.0, 2.0; 1.0, 1.0; 3.0, 0.0; 5.0, 1.0&quot;</span>, <span class="n">0.1</span>)&gt;]
        [&lt;<span onmouseout="hideTip(event, 'fs47', 132)" onmouseover="showTip(event, 'fs47', 132)" class="t">TestCase</span>(<span class="s">&quot;0.0, 2.0; 1.0, 1.0; 3.0, 0.0; 5.0, 1.0&quot;</span>, <span class="s">&quot;0.0, 2.0; 3.0, 0.0; 5.0, 1.0&quot;</span>, <span class="n">0.5</span>)&gt;]

        <span class="c">// Tests with vertical segments:</span>
        [&lt;<span onmouseout="hideTip(event, 'fs47', 133)" onmouseover="showTip(event, 'fs47', 133)" class="t">TestCase</span>(<span class="s">&quot;10.0, 35.0; 15.0, 34.0; 15.0, 30.0; 20.0, 29.0&quot;</span>, <span class="s">&quot;10.0, 35.0; 20.0, 29.0&quot;</span>, <span class="n">10.0</span>)&gt;]
        [&lt;<span onmouseout="hideTip(event, 'fs47', 134)" onmouseover="showTip(event, 'fs47', 134)" class="t">TestCase</span>(<span class="s">&quot;10.0, 35.0; 15.0, 34.0; 15.0, 30.0; 20.0, 29.0&quot;</span>, <span class="s">&quot;10.0, 35.0; 15.0, 34.0; 15.0, 30.0; 20.0, 29.0&quot;</span>, <span class="n">1.0</span>)&gt;]

        <span class="c">// Tests with horizontal segments:</span>
        [&lt;<span onmouseout="hideTip(event, 'fs47', 135)" onmouseover="showTip(event, 'fs47', 135)" class="t">TestCase</span>(<span class="s">&quot;10.0, 35.0; 15.0, 35.0; 16.0, 30.0; 21.0, 30.0&quot;</span>, <span class="s">&quot;10.0, 35.0; 21.0, 30.0&quot;</span>, <span class="n">10.0</span>)&gt;]
        [&lt;<span onmouseout="hideTip(event, 'fs47', 136)" onmouseover="showTip(event, 'fs47', 136)" class="t">TestCase</span>(<span class="s">&quot;10.0, 35.0; 15.0, 35.0; 16.0, 30.0; 21.0, 30.0&quot;</span>, <span class="s">&quot;10.0, 35.0; 15.0, 35.0; 16.0, 30.0; 21.0, 30.0&quot;</span>, <span class="n">1.0</span>)&gt;]

        <span class="c">// Tests with vertical and horizontal segments:</span>
        [&lt;<span onmouseout="hideTip(event, 'fs47', 137)" onmouseover="showTip(event, 'fs47', 137)" class="t">TestCase</span>(<span class="s">&quot;10.0, 30.0; 30.0, 30.0; 30.0, 10.0; 50.0, 10.0&quot;</span>, <span class="s">&quot;10.0, 30.0; 50.0, 10.0&quot;</span>, <span class="n">15.0</span>)&gt;]
        <span class="c">// Different epsilon:</span>
        [&lt;<span onmouseout="hideTip(event, 'fs47', 138)" onmouseover="showTip(event, 'fs47', 138)" class="t">TestCase</span>(<span class="s">&quot;10.0, 30.0; 30.0, 30.0; 30.0, 10.0; 50.0, 10.0&quot;</span>, <span class="s">&quot;10.0, 30.0; 50.0, 10.0&quot;</span>, <span class="n">10.0</span>)&gt;]

        <span class="c">// A more complex curve:</span>
        [&lt;<span onmouseout="hideTip(event, 'fs47', 139)" onmouseover="showTip(event, 'fs47', 139)" class="t">TestCase</span>(<span class="s">&quot;3.5, 21.25; 7.3, 12.0; 23.2, 3.1; 37.2, 12.07; 54.6, 18.15; 62.2, 16.45; 71.5, 9.7; 101.3, 21.1&quot;</span>, <span class="s">&quot;3.5, 21.25; 23.2, 3.1; 54.6, 18.15; 71.5, 9.7; 101.3, 21.1&quot;</span>, <span class="n">5.0</span>)&gt;]

        <span class="k">member</span> <span class="k">public</span> <span onmouseout="hideTip(event, 'fs48', 140)" onmouseover="showTip(event, 'fs48', 140)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 141)" onmouseover="showTip(event, 'fs49', 141)" class="f">``inputs are correctly simplified``</span>(<span onmouseout="hideTip(event, 'fs50', 142)" onmouseover="showTip(event, 'fs50', 142)" class="i">items</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs40', 143)" onmouseover="showTip(event, 'fs40', 143)" class="t">string</span>, <span onmouseout="hideTip(event, 'fs51', 144)" onmouseover="showTip(event, 'fs51', 144)" class="i">expected</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs40', 145)" onmouseover="showTip(event, 'fs40', 145)" class="t">string</span>, <span onmouseout="hideTip(event, 'fs17', 146)" onmouseover="showTip(event, 'fs17', 146)" class="i">epsilon</span>) <span class="o">=</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs52', 147)" onmouseover="showTip(event, 'fs52', 147)" class="i">actual</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 148)" onmouseover="showTip(event, 'fs53', 148)" class="f">Reduce</span> <span onmouseout="hideTip(event, 'fs17', 149)" onmouseover="showTip(event, 'fs17', 149)" class="i">epsilon</span> (<span onmouseout="hideTip(event, 'fs50', 150)" onmouseover="showTip(event, 'fs50', 150)" class="i">items</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs38', 151)" onmouseover="showTip(event, 'fs38', 151)" class="f">StrToPoints</span>)
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 152)" onmouseover="showTip(event, 'fs54', 152)" class="i">expected</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs54', 153)" onmouseover="showTip(event, 'fs54', 153)" class="i">expected</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs38', 154)" onmouseover="showTip(event, 'fs38', 154)" class="f">StrToPoints</span>
            <span onmouseout="hideTip(event, 'fs52', 155)" onmouseover="showTip(event, 'fs52', 155)" class="i">actual</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs55', 156)" onmouseover="showTip(event, 'fs55', 156)" class="f">should</span> <span onmouseout="hideTip(event, 'fs56', 157)" onmouseover="showTip(event, 'fs56', 157)" class="f">equal</span> <span onmouseout="hideTip(event, 'fs54', 158)" onmouseover="showTip(event, 'fs54', 158)" class="i">expected</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">type Point =<br />&#160;&#160;{X: double;<br />&#160;&#160;&#160;Y: double;}<br /><br />Full name: DouglasPeuker.Point</div>
<div class="tip" id="fs3">Point.X: double</div>
<div class="tip" id="fs4">Multiple items<br />val double : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.double<br /><br />--------------------<br />type double = Double<br /><br />Full name: Microsoft.FSharp.Core.double</div>
<div class="tip" id="fs5">Point.Y: double</div>
<div class="tip" id="fs6">val private findPerpendicularDistance : p:Point -&gt; p1:Point -&gt; p2:Point -&gt; float<br /><br />Full name: DouglasPeuker.Reduce.findPerpendicularDistance</div>
<div class="tip" id="fs7">val p : Point</div>
<div class="tip" id="fs8">val p1 : Point</div>
<div class="tip" id="fs9">val p2 : Point</div>
<div class="tip" id="fs10">type Math =<br />&#160;&#160;static val PI : float<br />&#160;&#160;static val E : float<br />&#160;&#160;static member Abs : value:sbyte -&gt; sbyte + 6 overloads<br />&#160;&#160;static member Acos : d:float -&gt; float<br />&#160;&#160;static member Asin : d:float -&gt; float<br />&#160;&#160;static member Atan : d:float -&gt; float<br />&#160;&#160;static member Atan2 : y:float * x:float -&gt; float<br />&#160;&#160;static member BigMul : a:int * b:int -&gt; int64<br />&#160;&#160;static member Ceiling : d:decimal -&gt; decimal + 1 overload<br />&#160;&#160;static member Cos : d:float -&gt; float<br />&#160;&#160;...<br /><br />Full name: System.Math</div>
<div class="tip" id="fs11">Math.Abs(value: decimal) : decimal<br />Math.Abs(value: float) : float<br />Math.Abs(value: float32) : float32<br />Math.Abs(value: int64) : int64<br />Math.Abs(value: int) : int<br />Math.Abs(value: int16) : int16<br />Math.Abs(value: sbyte) : sbyte</div>
<div class="tip" id="fs12">val slope : double</div>
<div class="tip" id="fs13">val intercept : double</div>
<div class="tip" id="fs14">Math.Sqrt(d: float) : float</div>
<div class="tip" id="fs15">Math.Pow(x: float, y: float) : float</div>
<div class="tip" id="fs16">val Reduce : epsilon:float -&gt; points:Point [] -&gt; Point []<br /><br />Full name: DouglasPeuker.Reduce.Reduce</div>
<div class="tip" id="fs17">val epsilon : float</div>
<div class="tip" id="fs18">val points : Point []</div>
<div class="tip" id="fs19">property Array.Length: int</div>
<div class="tip" id="fs20">val firstPoint : Point</div>
<div class="tip" id="fs21">val lastPoint : Point</div>
<div class="tip" id="fs22">val mutable index : int</div>
<div class="tip" id="fs23">val mutable dist : float</div>
<div class="tip" id="fs24">val i : int32</div>
<div class="tip" id="fs25">val cDist : float</div>
<div class="tip" id="fs26">val l1 : Point []</div>
<div class="tip" id="fs27">val l2 : Point []</div>
<div class="tip" id="fs28">val r1 : Point []</div>
<div class="tip" id="fs29">val r2 : Point []</div>
<div class="tip" id="fs30">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs31">val append : array1:&#39;T [] -&gt; array2:&#39;T [] -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.append</div>
<div class="tip" id="fs32">module Tests<br /><br />from DouglasPeuker</div>
<div class="tip" id="fs33">namespace FsUnit</div>
<div class="tip" id="fs34">namespace NUnit</div>
<div class="tip" id="fs35">namespace NUnit.Framework</div>
<div class="tip" id="fs36">module Reduce<br /><br />from DouglasPeuker</div>
<div class="tip" id="fs37">Multiple items<br />type TestFixtureAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; TestFixtureAttribute + 1 overload<br />&#160;&#160;member Arguments : obj[]<br />&#160;&#160;member Categories : IList<br />&#160;&#160;member Category : string with get, set<br />&#160;&#160;member Description : string with get, set<br />&#160;&#160;member Ignore : bool with get, set<br />&#160;&#160;member IgnoreReason : string with get, set<br />&#160;&#160;member TypeArgs : Type[] with get, set<br /><br />Full name: NUnit.Framework.TestFixtureAttribute<br /><br />--------------------<br />TestFixtureAttribute() : unit<br />TestFixtureAttribute([&lt;ParamArray&gt;] arguments: obj []) : unit</div>
<div class="tip" id="fs38">val StrToPoints : (string -&gt; Point [])</div>
<div class="tip" id="fs39">val s : string</div>
<div class="tip" id="fs40">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs41">String.Split([&lt;ParamArray&gt;] separator: char []) : string []<br />String.Split(separator: string [], options: StringSplitOptions) : string []<br />String.Split(separator: char [], options: StringSplitOptions) : string []<br />String.Split(separator: char [], count: int) : string []<br />String.Split(separator: string [], count: int, options: StringSplitOptions) : string []<br />String.Split(separator: char [], count: int, options: StringSplitOptions) : string []</div>
<div class="tip" id="fs42">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.map</div>
<div class="tip" id="fs43">val p : string</div>
<div class="tip" id="fs44">val xy : string []</div>
<div class="tip" id="fs45">type Double =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 3 overloads<br />&#160;&#160;&#160;&#160;static val MinValue : float<br />&#160;&#160;&#160;&#160;static val MaxValue : float<br />&#160;&#160;&#160;&#160;static val Epsilon : float<br />&#160;&#160;&#160;&#160;static val NegativeInfinity : float<br />&#160;&#160;&#160;&#160;static val PositiveInfinity : float<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Double</div>
<div class="tip" id="fs46">Double.Parse(s: string) : float<br />Double.Parse(s: string, provider: IFormatProvider) : float<br />Double.Parse(s: string, style: Globalization.NumberStyles) : float<br />Double.Parse(s: string, style: Globalization.NumberStyles, provider: IFormatProvider) : float</div>
<div class="tip" id="fs47">Multiple items<br />type TestCaseAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : [&lt;ParamArray&gt;] arguments:obj[] -&gt; TestCaseAttribute + 3 overloads<br />&#160;&#160;member Arguments : obj[]<br />&#160;&#160;member Categories : IList<br />&#160;&#160;member Category : string with get, set<br />&#160;&#160;member Description : string with get, set<br />&#160;&#160;member ExpectedException : Type with get, set<br />&#160;&#160;member ExpectedExceptionName : string with get, set<br />&#160;&#160;member ExpectedMessage : string with get, set<br />&#160;&#160;member ExpectedResult : obj with get, set<br />&#160;&#160;member Explicit : bool with get, set<br />&#160;&#160;...<br /><br />Full name: NUnit.Framework.TestCaseAttribute<br /><br />--------------------<br />TestCaseAttribute([&lt;ParamArray&gt;] arguments: obj []) : unit<br />TestCaseAttribute(arg: obj) : unit<br />TestCaseAttribute(arg1: obj, arg2: obj) : unit<br />TestCaseAttribute(arg1: obj, arg2: obj, arg3: obj) : unit</div>
<div class="tip" id="fs48">val this : Given the DouglasPeuker Simplify function</div>
<div class="tip" id="fs49">member Given the DouglasPeuker Simplify function.( inputs are correctly simplified ) : items:string * expected:string * epsilon:float -&gt; unit<br /><br />Full name: DouglasPeuker.Tests.Given the DouglasPeuker Simplify function.( inputs are correctly simplified )</div>
<div class="tip" id="fs50">val items : string</div>
<div class="tip" id="fs51">val expected : string</div>
<div class="tip" id="fs52">val actual : Point []</div>
<div class="tip" id="fs53">Multiple items<br />val Reduce : epsilon:float -&gt; points:Point [] -&gt; Point []<br /><br />Full name: DouglasPeuker.Reduce.Reduce<br /><br />--------------------<br />module Reduce<br /><br />from DouglasPeuker</div>
<div class="tip" id="fs54">val expected : Point []</div>
<div class="tip" id="fs55">val should : f:(&#39;a -&gt; #Constraints.Constraint) -&gt; x:&#39;a -&gt; y:obj -&gt; unit<br /><br />Full name: FsUnit.TopLevelOperators.should</div>
<div class="tip" id="fs56">val equal : x:&#39;a -&gt; EqualsConstraint<br /><br />Full name: FsUnit.TopLevelOperators.equal</div>

