<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span class="t">PairingHeap</span> <span class="o">=</span> 
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Heap</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span> 
        | <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="p">Empty</span>
        | <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="p">Heap</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">T</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="t">List</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs1', 5)" onmouseover="showTip(event, 'fs1', 5)" class="t">Heap</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span><span class="o">&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="f">findMin</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">heap</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">heap</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs2', 9)" onmouseover="showTip(event, 'fs2', 9)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="f">failwith</span> <span class="s">&quot;findMin called on empty heap&quot;</span>
        | <span onmouseout="hideTip(event, 'fs1', 11)" onmouseover="showTip(event, 'fs1', 11)" class="p">Heap</span> (<span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="i">element</span>, <span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="i">subheaps</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 14)" onmouseover="showTip(event, 'fs7', 14)" class="i">element</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="f">merge</span> <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="i">heap1</span> <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">heap2</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs10', 18)" onmouseover="showTip(event, 'fs10', 18)" class="i">heap1</span>, <span onmouseout="hideTip(event, 'fs11', 19)" onmouseover="showTip(event, 'fs11', 19)" class="i">heap2</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs2', 20)" onmouseover="showTip(event, 'fs2', 20)" class="p">Empty</span>, <span onmouseout="hideTip(event, 'fs2', 21)" onmouseover="showTip(event, 'fs2', 21)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 22)" onmouseover="showTip(event, 'fs2', 22)" class="p">Empty</span>
        | _, <span onmouseout="hideTip(event, 'fs2', 23)" onmouseover="showTip(event, 'fs2', 23)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs10', 24)" onmouseover="showTip(event, 'fs10', 24)" class="i">heap1</span>
        | <span onmouseout="hideTip(event, 'fs2', 25)" onmouseover="showTip(event, 'fs2', 25)" class="p">Empty</span>, _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 26)" onmouseover="showTip(event, 'fs11', 26)" class="i">heap2</span>
        | <span onmouseout="hideTip(event, 'fs1', 27)" onmouseover="showTip(event, 'fs1', 27)" class="p">Heap</span>(<span onmouseout="hideTip(event, 'fs12', 28)" onmouseover="showTip(event, 'fs12', 28)" class="i">elem1</span>, <span onmouseout="hideTip(event, 'fs13', 29)" onmouseover="showTip(event, 'fs13', 29)" class="i">sub1</span>), <span onmouseout="hideTip(event, 'fs1', 30)" onmouseover="showTip(event, 'fs1', 30)" class="p">Heap</span>(<span onmouseout="hideTip(event, 'fs14', 31)" onmouseover="showTip(event, 'fs14', 31)" class="i">elem2</span>, <span onmouseout="hideTip(event, 'fs15', 32)" onmouseover="showTip(event, 'fs15', 32)" class="i">sub2</span>) <span class="k">-&gt;</span>
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs12', 33)" onmouseover="showTip(event, 'fs12', 33)" class="i">elem1</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs14', 34)" onmouseover="showTip(event, 'fs14', 34)" class="i">elem2</span> <span class="k">with</span>
            | <span class="k">true</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs1', 35)" onmouseover="showTip(event, 'fs1', 35)" class="p">Heap</span>(<span onmouseout="hideTip(event, 'fs12', 36)" onmouseover="showTip(event, 'fs12', 36)" class="i">elem1</span>, <span onmouseout="hideTip(event, 'fs11', 37)" onmouseover="showTip(event, 'fs11', 37)" class="i">heap2</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs13', 38)" onmouseover="showTip(event, 'fs13', 38)" class="i">sub1</span>)
            | <span class="k">false</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs1', 39)" onmouseover="showTip(event, 'fs1', 39)" class="p">Heap</span>(<span onmouseout="hideTip(event, 'fs14', 40)" onmouseover="showTip(event, 'fs14', 40)" class="i">elem2</span>, <span onmouseout="hideTip(event, 'fs10', 41)" onmouseover="showTip(event, 'fs10', 41)" class="i">heap1</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs15', 42)" onmouseover="showTip(event, 'fs15', 42)" class="i">sub2</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 43)" onmouseover="showTip(event, 'fs16', 43)" class="f">insert</span> <span onmouseout="hideTip(event, 'fs17', 44)" onmouseover="showTip(event, 'fs17', 44)" class="i">element</span> <span onmouseout="hideTip(event, 'fs18', 45)" onmouseover="showTip(event, 'fs18', 45)" class="i">heap</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs9', 46)" onmouseover="showTip(event, 'fs9', 46)" class="f">merge</span> (<span onmouseout="hideTip(event, 'fs1', 47)" onmouseover="showTip(event, 'fs1', 47)" class="p">Heap</span>(<span onmouseout="hideTip(event, 'fs17', 48)" onmouseover="showTip(event, 'fs17', 48)" class="i">element</span>, [])) <span onmouseout="hideTip(event, 'fs18', 49)" onmouseover="showTip(event, 'fs18', 49)" class="i">heap</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs19', 50)" onmouseover="showTip(event, 'fs19', 50)" class="f">mergePairs</span> <span onmouseout="hideTip(event, 'fs20', 51)" onmouseover="showTip(event, 'fs20', 51)" class="i">heap</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs20', 52)" onmouseover="showTip(event, 'fs20', 52)" class="i">heap</span> <span class="k">with</span>
        | [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 53)" onmouseover="showTip(event, 'fs2', 53)" class="p">Empty</span>
        | [<span onmouseout="hideTip(event, 'fs21', 54)" onmouseover="showTip(event, 'fs21', 54)" class="i">h</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 55)" onmouseover="showTip(event, 'fs21', 55)" class="i">h</span>
        | <span onmouseout="hideTip(event, 'fs22', 56)" onmouseover="showTip(event, 'fs22', 56)" class="i">h1</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs23', 57)" onmouseover="showTip(event, 'fs23', 57)" class="i">h2</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs24', 58)" onmouseover="showTip(event, 'fs24', 58)" class="i">hs</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 59)" onmouseover="showTip(event, 'fs9', 59)" class="f">merge</span> (<span onmouseout="hideTip(event, 'fs9', 60)" onmouseover="showTip(event, 'fs9', 60)" class="f">merge</span> <span class="i">h1</span> <span class="i">h2</span>) (<span onmouseout="hideTip(event, 'fs19', 61)" onmouseover="showTip(event, 'fs19', 61)" class="f">mergePairs</span> <span onmouseout="hideTip(event, 'fs24', 62)" onmouseover="showTip(event, 'fs24', 62)" class="i">hs</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 63)" onmouseover="showTip(event, 'fs25', 63)" class="f">deleteMin</span> (<span onmouseout="hideTip(event, 'fs26', 64)" onmouseover="showTip(event, 'fs26', 64)" class="i">heap</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs1', 65)" onmouseover="showTip(event, 'fs1', 65)" class="t">Heap</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>) <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs26', 66)" onmouseover="showTip(event, 'fs26', 66)" class="i">heap</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs2', 67)" onmouseover="showTip(event, 'fs2', 67)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 68)" onmouseover="showTip(event, 'fs6', 68)" class="f">failwith</span> <span class="s">&quot;deleteMin called on Heap.Empty&quot;</span>
        | <span onmouseout="hideTip(event, 'fs1', 69)" onmouseover="showTip(event, 'fs1', 69)" class="p">Heap</span> (<span onmouseout="hideTip(event, 'fs27', 70)" onmouseover="showTip(event, 'fs27', 70)" class="i">element</span>, []) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 71)" onmouseover="showTip(event, 'fs2', 71)" class="p">Empty</span>
        | <span onmouseout="hideTip(event, 'fs1', 72)" onmouseover="showTip(event, 'fs1', 72)" class="p">Heap</span> (<span onmouseout="hideTip(event, 'fs27', 73)" onmouseover="showTip(event, 'fs27', 73)" class="i">element</span>, [<span onmouseout="hideTip(event, 'fs28', 74)" onmouseover="showTip(event, 'fs28', 74)" class="i">subHeap</span>]) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs28', 75)" onmouseover="showTip(event, 'fs28', 75)" class="i">subHeap</span>
        | <span onmouseout="hideTip(event, 'fs1', 76)" onmouseover="showTip(event, 'fs1', 76)" class="p">Heap</span> (<span onmouseout="hideTip(event, 'fs27', 77)" onmouseover="showTip(event, 'fs27', 77)" class="i">element</span>, <span onmouseout="hideTip(event, 'fs29', 78)" onmouseover="showTip(event, 'fs29', 78)" class="i">subHeaps</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 79)" onmouseover="showTip(event, 'fs19', 79)" class="f">mergePairs</span> <span onmouseout="hideTip(event, 'fs29', 80)" onmouseover="showTip(event, 'fs29', 80)" class="i">subHeaps</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />union case Heap.Heap: &#39;T * List&lt;Heap&lt;&#39;T&gt;&gt; -&gt; Heap&lt;&#39;T&gt;<br /><br />--------------------<br />type Heap&lt;&#39;T&gt; =<br />&#160;&#160;| Empty<br />&#160;&#160;| Heap of &#39;T * List&lt;Heap&lt;&#39;T&gt;&gt;<br /><br />Full name: Script.PairingHeap.Heap&lt;_&gt;</div>
<div class="tip" id="fs2">union case Heap.Empty: Heap&lt;&#39;T&gt;</div>
<div class="tip" id="fs3">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs4">val findMin : heap:Heap&lt;&#39;a&gt; -&gt; &#39;a<br /><br />Full name: Script.PairingHeap.findMin</div>
<div class="tip" id="fs5">val heap : Heap&lt;&#39;a&gt;</div>
<div class="tip" id="fs6">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs7">val element : &#39;a</div>
<div class="tip" id="fs8">val subheaps : List&lt;Heap&lt;&#39;a&gt;&gt;</div>
<div class="tip" id="fs9">val merge : heap1:Heap&lt;&#39;a&gt; -&gt; heap2:Heap&lt;&#39;a&gt; -&gt; Heap&lt;&#39;a&gt; (requires comparison)<br /><br />Full name: Script.PairingHeap.merge</div>
<div class="tip" id="fs10">val heap1 : Heap&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs11">val heap2 : Heap&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs12">val elem1 : &#39;a (requires comparison)</div>
<div class="tip" id="fs13">val sub1 : List&lt;Heap&lt;&#39;a&gt;&gt; (requires comparison)</div>
<div class="tip" id="fs14">val elem2 : &#39;a (requires comparison)</div>
<div class="tip" id="fs15">val sub2 : List&lt;Heap&lt;&#39;a&gt;&gt; (requires comparison)</div>
<div class="tip" id="fs16">val insert : element:&#39;a -&gt; heap:Heap&lt;&#39;a&gt; -&gt; Heap&lt;&#39;a&gt; (requires comparison)<br /><br />Full name: Script.PairingHeap.insert</div>
<div class="tip" id="fs17">val element : &#39;a (requires comparison)</div>
<div class="tip" id="fs18">val heap : Heap&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs19">val mergePairs : heap:Heap&lt;&#39;a&gt; list -&gt; Heap&lt;&#39;a&gt; (requires comparison)<br /><br />Full name: Script.PairingHeap.mergePairs</div>
<div class="tip" id="fs20">val heap : Heap&lt;&#39;a&gt; list (requires comparison)</div>
<div class="tip" id="fs21">val h : Heap&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs22">val h1 : Heap&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs23">val h2 : Heap&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs24">val hs : Heap&lt;&#39;a&gt; list (requires comparison)</div>
<div class="tip" id="fs25">val deleteMin : heap:Heap&lt;&#39;T&gt; -&gt; Heap&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Script.PairingHeap.deleteMin</div>
<div class="tip" id="fs26">val heap : Heap&lt;&#39;T&gt; (requires comparison)</div>
<div class="tip" id="fs27">val element : &#39;T (requires comparison)</div>
<div class="tip" id="fs28">val subHeap : Heap&lt;&#39;T&gt; (requires comparison)</div>
<div class="tip" id="fs29">val subHeaps : List&lt;Heap&lt;&#39;T&gt;&gt; (requires comparison)</div>

