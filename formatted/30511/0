<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
<span class="l">154: </span>
<span class="l">155: </span>
<span class="l">156: </span>
<span class="l">157: </span>
<span class="l">158: </span>
<span class="l">159: </span>
<span class="l">160: </span>
<span class="l">161: </span>
<span class="l">162: </span>
<span class="l">163: </span>
<span class="l">164: </span>
<span class="l">165: </span>
<span class="l">166: </span>
<span class="l">167: </span>
<span class="l">168: </span>
<span class="l">169: </span>
<span class="l">170: </span>
<span class="l">171: </span>
<span class="l">172: </span>
<span class="l">173: </span>
<span class="l">174: </span>
<span class="l">175: </span>
<span class="l">176: </span>
<span class="l">177: </span>
<span class="l">178: </span>
<span class="l">179: </span>
<span class="l">180: </span>
<span class="l">181: </span>
<span class="l">182: </span>
<span class="l">183: </span>
<span class="l">184: </span>
<span class="l">185: </span>
<span class="l">186: </span>
<span class="l">187: </span>
<span class="l">188: </span>
<span class="l">189: </span>
<span class="l">190: </span>
<span class="l">191: </span>
<span class="l">192: </span>
<span class="l">193: </span>
<span class="l">194: </span>
<span class="l">195: </span>
<span class="l">196: </span>
<span class="l">197: </span>
<span class="l">198: </span>
<span class="l">199: </span>
<span class="l">200: </span>
<span class="l">201: </span>
<span class="l">202: </span>
<span class="l">203: </span>
<span class="l">204: </span>
<span class="l">205: </span>
<span class="l">206: </span>
<span class="l">207: </span>
<span class="l">208: </span>
<span class="l">209: </span>
<span class="l">210: </span>
<span class="l">211: </span>
<span class="l">212: </span>
<span class="l">213: </span>
<span class="l">214: </span>
<span class="l">215: </span>
<span class="l">216: </span>
<span class="l">217: </span>
<span class="l">218: </span>
<span class="l">219: </span>
<span class="l">220: </span>
<span class="l">221: </span>
<span class="l">222: </span>
<span class="l">223: </span>
<span class="l">224: </span>
<span class="l">225: </span>
<span class="l">226: </span>
<span class="l">227: </span>
<span class="l">228: </span>
<span class="l">229: </span>
<span class="l">230: </span>
<span class="l">231: </span>
<span class="l">232: </span>
<span class="l">233: </span>
<span class="l">234: </span>
<span class="l">235: </span>
<span class="l">236: </span>
<span class="l">237: </span>
<span class="l">238: </span>
<span class="l">239: </span>
<span class="l">240: </span>
<span class="l">241: </span>
<span class="l">242: </span>
<span class="l">243: </span>
<span class="l">244: </span>
<span class="l">245: </span>
<span class="l">246: </span>
<span class="l">247: </span>
<span class="l">248: </span>
<span class="l">249: </span>
<span class="l">250: </span>
<span class="l">251: </span>
<span class="l">252: </span>
<span class="l">253: </span>
<span class="l">254: </span>
<span class="l">255: </span>
<span class="l">256: </span>
<span class="l">257: </span>
<span class="l">258: </span>
<span class="l">259: </span>
<span class="l">260: </span>
<span class="l">261: </span>
<span class="l">262: </span>
<span class="l">263: </span>
<span class="l">264: </span>
<span class="l">265: </span>
<span class="l">266: </span>
<span class="l">267: </span>
<span class="l">268: </span>
<span class="l">269: </span>
<span class="l">270: </span>
<span class="l">271: </span>
<span class="l">272: </span>
<span class="l">273: </span>
<span class="l">274: </span>
<span class="l">275: </span>
<span class="l">276: </span>
<span class="l">277: </span>
<span class="l">278: </span>
<span class="l">279: </span>
<span class="l">280: </span>
<span class="l">281: </span>
<span class="l">282: </span>
<span class="l">283: </span>
<span class="l">284: </span>
<span class="l">285: </span>
<span class="l">286: </span>
<span class="l">287: </span>
<span class="l">288: </span>
<span class="l">289: </span>
<span class="l">290: </span>
<span class="l">291: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">/// Based on https://opendsa-server.cs.vt.edu/ODSA/Books/PL/html/index.html#lambda-calculus</span>
<span class="k">namespace</span> <span class="i">LambdaCalculus</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>

<span class="c">/// A variable in a lambda expression.</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">Variable</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">string</span> <span class="c">(*name*)</span>

<span class="c">/// Lambda expression.</span>
[&lt;<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">StructuredFormatDisplay</span>(<span class="s">&quot;{String}&quot;</span>)&gt;]
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">Expr</span> <span class="o">=</span>

    <span class="c">/// E.g. &quot;x&quot;</span>
    | <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="p">Variable</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">Variable</span>

    <span class="c">/// E.g. &quot;(x y)&quot;</span>
    | <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="p">Application</span> <span class="k">of</span> (<span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="t">Expr</span> <span class="c">(*function*)</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs5', 10)" onmouseover="showTip(event, 'fs5', 10)" class="t">Expr</span> <span class="c">(*argument*)</span>)

    <span class="c">/// E.g. &quot;λx.y&quot;</span>
    | <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="p">Lambda</span> <span class="k">of</span> (<span onmouseout="hideTip(event, 'fs2', 12)" onmouseover="showTip(event, 'fs2', 12)" class="t">Variable</span> <span class="c">(*parameter*)</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs5', 13)" onmouseover="showTip(event, 'fs5', 13)" class="t">Expr</span> <span class="c">(*body*)</span>)

    <span class="c">/// Converts expression to string.</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="i">String</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs9', 16)" onmouseover="showTip(event, 'fs9', 16)" class="i">this</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs6', 17)" onmouseover="showTip(event, 'fs6', 17)" class="p">Variable</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="i">name</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 19)" onmouseover="showTip(event, 'fs11', 19)" class="i">name</span>
            | <span onmouseout="hideTip(event, 'fs7', 20)" onmouseover="showTip(event, 'fs7', 20)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="i">arg</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="f">sprintf</span> <span class="s">&quot;(</span><span class="pf">%A</span><span class="s"> </span><span class="pf">%A</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs12', 24)" onmouseover="showTip(event, 'fs12', 24)" class="i">func</span> <span onmouseout="hideTip(event, 'fs13', 25)" onmouseover="showTip(event, 'fs13', 25)" class="i">arg</span>
            | <span onmouseout="hideTip(event, 'fs8', 26)" onmouseover="showTip(event, 'fs8', 26)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs15', 27)" onmouseover="showTip(event, 'fs15', 27)" class="i">param</span>, <span onmouseout="hideTip(event, 'fs16', 28)" onmouseover="showTip(event, 'fs16', 28)" class="i">body</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 29)" onmouseover="showTip(event, 'fs14', 29)" class="f">sprintf</span> <span class="s">&quot;λ</span><span class="pf">%s</span><span class="s">.</span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs15', 30)" onmouseover="showTip(event, 'fs15', 30)" class="i">param</span> <span onmouseout="hideTip(event, 'fs16', 31)" onmouseover="showTip(event, 'fs16', 31)" class="i">body</span>

    <span class="c">/// Converts expression to string.</span>
    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs9', 32)" onmouseover="showTip(event, 'fs9', 32)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 33)" onmouseover="showTip(event, 'fs17', 33)" class="f">ToString</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 34)" onmouseover="showTip(event, 'fs9', 34)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 35)" onmouseover="showTip(event, 'fs18', 35)" class="i">String</span>

<span class="c">/// Lambda expression functions.</span>
[&lt;<span onmouseout="hideTip(event, 'fs19', 36)" onmouseover="showTip(event, 'fs19', 36)" class="t">CompilationRepresentation</span>(<span onmouseout="hideTip(event, 'fs20', 37)" onmouseover="showTip(event, 'fs20', 37)" class="t">CompilationRepresentationFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 38)" onmouseover="showTip(event, 'fs21', 38)" class="i">ModuleSuffix</span>)&gt;]
<span class="k">module</span> <span onmouseout="hideTip(event, 'fs5', 39)" onmouseover="showTip(event, 'fs5', 39)" class="t">Expr</span> <span class="o">=</span>

    <span class="c">/// Interop with F# quotations.</span>
    <span class="k">module</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs22', 40)" onmouseover="showTip(event, 'fs22', 40)" class="t">FSharp</span> <span class="o">=</span>

        <span class="k">open</span> <span onmouseout="hideTip(event, 'fs23', 41)" onmouseover="showTip(event, 'fs23', 41)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 42)" onmouseover="showTip(event, 'fs22', 42)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 43)" onmouseover="showTip(event, 'fs24', 43)" class="i">Quotations</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 44)" onmouseover="showTip(event, 'fs25', 44)" class="i">Patterns</span>

        <span class="c">/// Constructs a lambda expression from an F# quotation.</span>
        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs26', 45)" onmouseover="showTip(event, 'fs26', 45)" class="f">ofQuot</span> <span class="o">=</span>
            <span class="k">function</span>
                | <span onmouseout="hideTip(event, 'fs27', 46)" onmouseover="showTip(event, 'fs27', 46)" class="p">Var</span> <span onmouseout="hideTip(event, 'fs28', 47)" onmouseover="showTip(event, 'fs28', 47)" class="i">var</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 48)" onmouseover="showTip(event, 'fs6', 48)" class="p">Variable</span> <span onmouseout="hideTip(event, 'fs28', 49)" onmouseover="showTip(event, 'fs28', 49)" class="i">var</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 50)" onmouseover="showTip(event, 'fs29', 50)" class="i">Name</span>    <span class="c">// bound</span>
                | <span onmouseout="hideTip(event, 'fs30', 51)" onmouseover="showTip(event, 'fs30', 51)" class="p">ValueWithName</span> (_, _, <span onmouseout="hideTip(event, 'fs31', 52)" onmouseover="showTip(event, 'fs31', 52)" class="i">name</span>) <span class="k">-&gt;</span>   <span class="c">// free</span>
                    <span onmouseout="hideTip(event, 'fs6', 53)" onmouseover="showTip(event, 'fs6', 53)" class="p">Variable</span> <span onmouseout="hideTip(event, 'fs31', 54)" onmouseover="showTip(event, 'fs31', 54)" class="i">name</span>
                | <span onmouseout="hideTip(event, 'fs32', 55)" onmouseover="showTip(event, 'fs32', 55)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs33', 56)" onmouseover="showTip(event, 'fs33', 56)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs34', 57)" onmouseover="showTip(event, 'fs34', 57)" class="i">arg</span>) <span class="k">-&gt;</span>
                    <span onmouseout="hideTip(event, 'fs32', 58)" onmouseover="showTip(event, 'fs32', 58)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs26', 59)" onmouseover="showTip(event, 'fs26', 59)" class="f">ofQuot</span> <span onmouseout="hideTip(event, 'fs33', 60)" onmouseover="showTip(event, 'fs33', 60)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs26', 61)" onmouseover="showTip(event, 'fs26', 61)" class="f">ofQuot</span> <span onmouseout="hideTip(event, 'fs34', 62)" onmouseover="showTip(event, 'fs34', 62)" class="i">arg</span>)
                | <span onmouseout="hideTip(event, 'fs35', 63)" onmouseover="showTip(event, 'fs35', 63)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs36', 64)" onmouseover="showTip(event, 'fs36', 64)" class="i">param</span>, <span onmouseout="hideTip(event, 'fs37', 65)" onmouseover="showTip(event, 'fs37', 65)" class="i">body</span>) <span class="k">-&gt;</span>
                    <span onmouseout="hideTip(event, 'fs35', 66)" onmouseover="showTip(event, 'fs35', 66)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs36', 67)" onmouseover="showTip(event, 'fs36', 67)" class="i">param</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 68)" onmouseover="showTip(event, 'fs29', 68)" class="i">Name</span>, <span onmouseout="hideTip(event, 'fs26', 69)" onmouseover="showTip(event, 'fs26', 69)" class="f">ofQuot</span> <span onmouseout="hideTip(event, 'fs37', 70)" onmouseover="showTip(event, 'fs37', 70)" class="i">body</span>)
                | <span onmouseout="hideTip(event, 'fs38', 71)" onmouseover="showTip(event, 'fs38', 71)" class="i">expr</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs39', 72)" onmouseover="showTip(event, 'fs39', 72)" class="f">failwithf</span> <span class="s">&quot;Not supported: </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs38', 73)" onmouseover="showTip(event, 'fs38', 73)" class="i">expr</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 74)" onmouseover="showTip(event, 'fs40', 74)" class="f">ofQuot</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs41', 75)" onmouseover="showTip(event, 'fs41', 75)" class="t">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 76)" onmouseover="showTip(event, 'fs26', 76)" class="f">ofQuot</span>

    <span class="k">module</span> <span class="k">private</span> <span class="t">Parse</span> <span class="o">=</span>

        <span class="k">open</span> <span onmouseout="hideTip(event, 'fs42', 77)" onmouseover="showTip(event, 'fs42', 77)" class="i">FParsec</span>

        <span class="k">let</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs43', 78)" onmouseover="showTip(event, 'fs43', 78)" class="f">parseExpr</span>, <span class="k">private</span> <span onmouseout="hideTip(event, 'fs44', 79)" onmouseover="showTip(event, 'fs44', 79)" class="v">parseExprRef</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs45', 80)" onmouseover="showTip(event, 'fs45', 80)" class="f">createParserForwardedToRef</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs5', 81)" onmouseover="showTip(event, 'fs5', 81)" class="t">Expr</span>, <span onmouseout="hideTip(event, 'fs46', 82)" onmouseover="showTip(event, 'fs46', 82)" class="t">unit</span><span class="o">&gt;</span>()

        <span class="k">let</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs47', 83)" onmouseover="showTip(event, 'fs47', 83)" class="f">parseName</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs48', 84)" onmouseover="showTip(event, 'fs48', 84)" class="f">many1Chars</span> (<span onmouseout="hideTip(event, 'fs49', 85)" onmouseover="showTip(event, 'fs49', 85)" class="f">satisfy</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs50', 86)" onmouseover="showTip(event, 'fs50', 86)" class="i">c</span> <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs51', 87)" onmouseover="showTip(event, 'fs51', 87)" class="t">Char</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 88)" onmouseover="showTip(event, 'fs52', 88)" class="f">IsLetterOrDigit</span>(<span onmouseout="hideTip(event, 'fs50', 89)" onmouseover="showTip(event, 'fs50', 89)" class="i">c</span>) <span class="o">&amp;&amp;</span> (<span onmouseout="hideTip(event, 'fs50', 90)" onmouseover="showTip(event, 'fs50', 90)" class="i">c</span> <span class="o">&lt;&gt;</span> <span class="s">&#39;λ&#39;</span>)))

        <span class="k">let</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs53', 91)" onmouseover="showTip(event, 'fs53', 91)" class="f">parseVariable</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs47', 92)" onmouseover="showTip(event, 'fs47', 92)" class="f">parseName</span>
                <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs6', 93)" onmouseover="showTip(event, 'fs6', 93)" class="p">Variable</span>

        <span class="k">let</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs54', 94)" onmouseover="showTip(event, 'fs54', 94)" class="f">parseApplication</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs55', 95)" onmouseover="showTip(event, 'fs55', 95)" class="f">pipe5</span>
                (<span onmouseout="hideTip(event, 'fs56', 96)" onmouseover="showTip(event, 'fs56', 96)" class="f">skipChar</span> <span class="s">&#39;(&#39;</span>)
                <span onmouseout="hideTip(event, 'fs43', 97)" onmouseover="showTip(event, 'fs43', 97)" class="f">parseExpr</span>
                (<span onmouseout="hideTip(event, 'fs57', 98)" onmouseover="showTip(event, 'fs57', 98)" class="f">many1</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs56', 99)" onmouseover="showTip(event, 'fs56', 99)" class="f">skipChar</span> <span class="s">&#39; &#39;</span>)
                <span onmouseout="hideTip(event, 'fs43', 100)" onmouseover="showTip(event, 'fs43', 100)" class="f">parseExpr</span>
                (<span onmouseout="hideTip(event, 'fs56', 101)" onmouseover="showTip(event, 'fs56', 101)" class="f">skipChar</span> <span class="s">&#39;)&#39;</span>)
                (<span class="k">fun</span> _ <span onmouseout="hideTip(event, 'fs12', 102)" onmouseover="showTip(event, 'fs12', 102)" class="i">func</span> _ <span onmouseout="hideTip(event, 'fs13', 103)" onmouseover="showTip(event, 'fs13', 103)" class="i">arg</span> _ <span class="k">-&gt;</span>
                    <span onmouseout="hideTip(event, 'fs7', 104)" onmouseover="showTip(event, 'fs7', 104)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs12', 105)" onmouseover="showTip(event, 'fs12', 105)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs13', 106)" onmouseover="showTip(event, 'fs13', 106)" class="i">arg</span>))

        <span class="k">let</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs58', 107)" onmouseover="showTip(event, 'fs58', 107)" class="f">parseLambda</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs59', 108)" onmouseover="showTip(event, 'fs59', 108)" class="f">pipe4</span>
                (<span onmouseout="hideTip(event, 'fs60', 109)" onmouseover="showTip(event, 'fs60', 109)" class="f">skipAnyOf</span> [<span class="s">&#39;λ&#39;</span>; <span class="s">&#39;^&#39;</span>; <span class="s">&#39;\\&#39;</span>])
                <span onmouseout="hideTip(event, 'fs47', 110)" onmouseover="showTip(event, 'fs47', 110)" class="f">parseName</span>
                (<span onmouseout="hideTip(event, 'fs56', 111)" onmouseover="showTip(event, 'fs56', 111)" class="f">skipChar</span> <span class="s">&#39;.&#39;</span>)
                <span onmouseout="hideTip(event, 'fs43', 112)" onmouseover="showTip(event, 'fs43', 112)" class="f">parseExpr</span>
                (<span class="k">fun</span> _ <span onmouseout="hideTip(event, 'fs61', 113)" onmouseover="showTip(event, 'fs61', 113)" class="i">param</span> _ <span onmouseout="hideTip(event, 'fs16', 114)" onmouseover="showTip(event, 'fs16', 114)" class="i">body</span> <span class="k">-&gt;</span>
                    <span onmouseout="hideTip(event, 'fs8', 115)" onmouseover="showTip(event, 'fs8', 115)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs61', 116)" onmouseover="showTip(event, 'fs61', 116)" class="i">param</span>, <span onmouseout="hideTip(event, 'fs16', 117)" onmouseover="showTip(event, 'fs16', 117)" class="i">body</span>))

        <span class="k">do</span> <span onmouseout="hideTip(event, 'fs44', 118)" onmouseover="showTip(event, 'fs44', 118)" class="v">parseExprRef</span> <span class="o">:=</span>
            <span onmouseout="hideTip(event, 'fs62', 119)" onmouseover="showTip(event, 'fs62', 119)" class="f">choice</span> [
                <span onmouseout="hideTip(event, 'fs53', 120)" onmouseover="showTip(event, 'fs53', 120)" class="f">parseVariable</span>
                <span onmouseout="hideTip(event, 'fs54', 121)" onmouseover="showTip(event, 'fs54', 121)" class="f">parseApplication</span>
                <span onmouseout="hideTip(event, 'fs58', 122)" onmouseover="showTip(event, 'fs58', 122)" class="f">parseLambda</span>
            ]

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 123)" onmouseover="showTip(event, 'fs63', 123)" class="f">parse</span> <span onmouseout="hideTip(event, 'fs64', 124)" onmouseover="showTip(event, 'fs64', 124)" class="i">str</span> <span class="o">=</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs65', 125)" onmouseover="showTip(event, 'fs65', 125)" class="f">parser</span> <span class="o">=</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs44', 126)" onmouseover="showTip(event, 'fs44', 126)" class="v">parseExprRef</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs66', 127)" onmouseover="showTip(event, 'fs66', 127)" class="f">eof</span>   <span class="c">// force consumption of entire string</span>
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs67', 128)" onmouseover="showTip(event, 'fs67', 128)" class="f">run</span> <span onmouseout="hideTip(event, 'fs65', 129)" onmouseover="showTip(event, 'fs65', 129)" class="f">parser</span> <span onmouseout="hideTip(event, 'fs64', 130)" onmouseover="showTip(event, 'fs64', 130)" class="i">str</span> <span class="k">with</span>
                | <span onmouseout="hideTip(event, 'fs68', 131)" onmouseover="showTip(event, 'fs68', 131)" class="p">Success</span> (<span onmouseout="hideTip(event, 'fs69', 132)" onmouseover="showTip(event, 'fs69', 132)" class="i">expr</span>, _, _) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs69', 133)" onmouseover="showTip(event, 'fs69', 133)" class="i">expr</span>
                | <span onmouseout="hideTip(event, 'fs70', 134)" onmouseover="showTip(event, 'fs70', 134)" class="p">Failure</span> (<span onmouseout="hideTip(event, 'fs71', 135)" onmouseover="showTip(event, 'fs71', 135)" class="i">msg</span>, _, _) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs72', 136)" onmouseover="showTip(event, 'fs72', 136)" class="f">failwith</span> <span onmouseout="hideTip(event, 'fs71', 137)" onmouseover="showTip(event, 'fs71', 137)" class="i">msg</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs73', 138)" onmouseover="showTip(event, 'fs73', 138)" class="f">parse</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs74', 139)" onmouseover="showTip(event, 'fs74', 139)" class="t">Parse</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 140)" onmouseover="showTip(event, 'fs63', 140)" class="f">parse</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs75', 141)" onmouseover="showTip(event, 'fs75', 141)" class="f">toString</span> (<span onmouseout="hideTip(event, 'fs69', 142)" onmouseover="showTip(event, 'fs69', 142)" class="i">expr</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 143)" onmouseover="showTip(event, 'fs5', 143)" class="t">Expr</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs69', 144)" onmouseover="showTip(event, 'fs69', 144)" class="i">expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs76', 145)" onmouseover="showTip(event, 'fs76', 145)" class="f">ToString</span>()

    <span class="c">/// Indicates whether the given variable occurs within a lambda expression (either</span>
    <span class="c">/// bound or free).</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs77', 146)" onmouseover="showTip(event, 'fs77', 146)" class="f">occurs</span> <span onmouseout="hideTip(event, 'fs11', 147)" onmouseover="showTip(event, 'fs11', 147)" class="i">name</span> <span class="o">=</span>
        <span class="k">function</span>
            | <span onmouseout="hideTip(event, 'fs6', 148)" onmouseover="showTip(event, 'fs6', 148)" class="p">Variable</span> <span onmouseout="hideTip(event, 'fs78', 149)" onmouseover="showTip(event, 'fs78', 149)" class="i">name&#39;</span> <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs78', 150)" onmouseover="showTip(event, 'fs78', 150)" class="i">name&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 151)" onmouseover="showTip(event, 'fs11', 151)" class="i">name</span>
            | <span onmouseout="hideTip(event, 'fs7', 152)" onmouseover="showTip(event, 'fs7', 152)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs12', 153)" onmouseover="showTip(event, 'fs12', 153)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs13', 154)" onmouseover="showTip(event, 'fs13', 154)" class="i">arg</span>) <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs77', 155)" onmouseover="showTip(event, 'fs77', 155)" class="f">occurs</span> <span onmouseout="hideTip(event, 'fs11', 156)" onmouseover="showTip(event, 'fs11', 156)" class="i">name</span> <span onmouseout="hideTip(event, 'fs12', 157)" onmouseover="showTip(event, 'fs12', 157)" class="i">func</span> <span class="o">||</span> <span onmouseout="hideTip(event, 'fs77', 158)" onmouseover="showTip(event, 'fs77', 158)" class="f">occurs</span> <span onmouseout="hideTip(event, 'fs11', 159)" onmouseover="showTip(event, 'fs11', 159)" class="i">name</span> <span onmouseout="hideTip(event, 'fs13', 160)" onmouseover="showTip(event, 'fs13', 160)" class="i">arg</span>
            | <span onmouseout="hideTip(event, 'fs8', 161)" onmouseover="showTip(event, 'fs8', 161)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs15', 162)" onmouseover="showTip(event, 'fs15', 162)" class="i">param</span>, <span onmouseout="hideTip(event, 'fs16', 163)" onmouseover="showTip(event, 'fs16', 163)" class="i">body</span>) <span class="k">-&gt;</span>
                (<span onmouseout="hideTip(event, 'fs15', 164)" onmouseover="showTip(event, 'fs15', 164)" class="i">param</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 165)" onmouseover="showTip(event, 'fs11', 165)" class="i">name</span>) <span class="o">||</span> <span onmouseout="hideTip(event, 'fs77', 166)" onmouseover="showTip(event, 'fs77', 166)" class="f">occurs</span> <span onmouseout="hideTip(event, 'fs11', 167)" onmouseover="showTip(event, 'fs11', 167)" class="i">name</span> <span onmouseout="hideTip(event, 'fs16', 168)" onmouseover="showTip(event, 'fs16', 168)" class="i">body</span>

    <span class="c">/// Indicates whether the given variable occurs free within a lambda expression.</span>
    <span class="c">/// (Note that it might occur both free and bound.)</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs79', 169)" onmouseover="showTip(event, 'fs79', 169)" class="f">occursFree</span> <span onmouseout="hideTip(event, 'fs11', 170)" onmouseover="showTip(event, 'fs11', 170)" class="i">name</span> <span class="o">=</span>
        <span class="k">function</span>
            | <span onmouseout="hideTip(event, 'fs6', 171)" onmouseover="showTip(event, 'fs6', 171)" class="p">Variable</span> <span onmouseout="hideTip(event, 'fs78', 172)" onmouseover="showTip(event, 'fs78', 172)" class="i">name&#39;</span> <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs78', 173)" onmouseover="showTip(event, 'fs78', 173)" class="i">name&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 174)" onmouseover="showTip(event, 'fs11', 174)" class="i">name</span>
            | <span onmouseout="hideTip(event, 'fs7', 175)" onmouseover="showTip(event, 'fs7', 175)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs12', 176)" onmouseover="showTip(event, 'fs12', 176)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs13', 177)" onmouseover="showTip(event, 'fs13', 177)" class="i">arg</span>) <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs79', 178)" onmouseover="showTip(event, 'fs79', 178)" class="f">occursFree</span> <span onmouseout="hideTip(event, 'fs11', 179)" onmouseover="showTip(event, 'fs11', 179)" class="i">name</span> <span onmouseout="hideTip(event, 'fs12', 180)" onmouseover="showTip(event, 'fs12', 180)" class="i">func</span> <span class="o">||</span> <span onmouseout="hideTip(event, 'fs79', 181)" onmouseover="showTip(event, 'fs79', 181)" class="f">occursFree</span> <span onmouseout="hideTip(event, 'fs11', 182)" onmouseover="showTip(event, 'fs11', 182)" class="i">name</span> <span onmouseout="hideTip(event, 'fs13', 183)" onmouseover="showTip(event, 'fs13', 183)" class="i">arg</span>
            | <span onmouseout="hideTip(event, 'fs8', 184)" onmouseover="showTip(event, 'fs8', 184)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs15', 185)" onmouseover="showTip(event, 'fs15', 185)" class="i">param</span>, <span onmouseout="hideTip(event, 'fs16', 186)" onmouseover="showTip(event, 'fs16', 186)" class="i">body</span>) <span class="k">-&gt;</span>
                (<span onmouseout="hideTip(event, 'fs15', 187)" onmouseover="showTip(event, 'fs15', 187)" class="i">param</span> <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs11', 188)" onmouseover="showTip(event, 'fs11', 188)" class="i">name</span>) <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs79', 189)" onmouseover="showTip(event, 'fs79', 189)" class="f">occursFree</span> <span onmouseout="hideTip(event, 'fs11', 190)" onmouseover="showTip(event, 'fs11', 190)" class="i">name</span> <span onmouseout="hideTip(event, 'fs16', 191)" onmouseover="showTip(event, 'fs16', 191)" class="i">body</span>

    <span class="c">/// α-conversion.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs80', 192)" onmouseover="showTip(event, 'fs80', 192)" class="f">alphaConvert</span> <span onmouseout="hideTip(event, 'fs81', 193)" onmouseover="showTip(event, 'fs81', 193)" class="i">newName</span> <span onmouseout="hideTip(event, 'fs82', 194)" onmouseover="showTip(event, 'fs82', 194)" class="i">lambda</span> <span class="o">=</span>

        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs83', 195)" onmouseover="showTip(event, 'fs83', 195)" class="f">convert</span> <span onmouseout="hideTip(event, 'fs84', 196)" onmouseover="showTip(event, 'fs84', 196)" class="i">oldName</span> <span onmouseout="hideTip(event, 'fs81', 197)" onmouseover="showTip(event, 'fs81', 197)" class="i">newName</span> <span onmouseout="hideTip(event, 'fs69', 198)" onmouseover="showTip(event, 'fs69', 198)" class="i">expr</span> <span class="o">=</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs85', 199)" onmouseover="showTip(event, 'fs85', 199)" class="f">convert</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs85', 200)" onmouseover="showTip(event, 'fs85', 200)" class="f">convert</span> <span onmouseout="hideTip(event, 'fs84', 201)" onmouseover="showTip(event, 'fs84', 201)" class="i">oldName</span> <span onmouseout="hideTip(event, 'fs81', 202)" onmouseover="showTip(event, 'fs81', 202)" class="i">newName</span>
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs69', 203)" onmouseover="showTip(event, 'fs69', 203)" class="i">expr</span> <span class="k">with</span>
                | <span onmouseout="hideTip(event, 'fs6', 204)" onmouseover="showTip(event, 'fs6', 204)" class="p">Variable</span> <span onmouseout="hideTip(event, 'fs11', 205)" onmouseover="showTip(event, 'fs11', 205)" class="i">name</span> <span class="k">-&gt;</span>
                    <span class="k">assert</span>(<span onmouseout="hideTip(event, 'fs11', 206)" onmouseover="showTip(event, 'fs11', 206)" class="i">name</span> <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs81', 207)" onmouseover="showTip(event, 'fs81', 207)" class="i">newName</span>)
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs11', 208)" onmouseover="showTip(event, 'fs11', 208)" class="i">name</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs84', 209)" onmouseover="showTip(event, 'fs84', 209)" class="i">oldName</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs6', 210)" onmouseover="showTip(event, 'fs6', 210)" class="p">Variable</span> <span onmouseout="hideTip(event, 'fs81', 211)" onmouseover="showTip(event, 'fs81', 211)" class="i">newName</span>   <span class="c">// rename variable</span>
                    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs69', 212)" onmouseover="showTip(event, 'fs69', 212)" class="i">expr</span>
                | <span onmouseout="hideTip(event, 'fs7', 213)" onmouseover="showTip(event, 'fs7', 213)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs12', 214)" onmouseover="showTip(event, 'fs12', 214)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs13', 215)" onmouseover="showTip(event, 'fs13', 215)" class="i">arg</span>) <span class="k">-&gt;</span>
                    <span onmouseout="hideTip(event, 'fs7', 216)" onmouseover="showTip(event, 'fs7', 216)" class="p">Application</span> ((<span onmouseout="hideTip(event, 'fs85', 217)" onmouseover="showTip(event, 'fs85', 217)" class="f">convert</span> <span onmouseout="hideTip(event, 'fs12', 218)" onmouseover="showTip(event, 'fs12', 218)" class="i">func</span>), (<span onmouseout="hideTip(event, 'fs85', 219)" onmouseover="showTip(event, 'fs85', 219)" class="f">convert</span> <span onmouseout="hideTip(event, 'fs13', 220)" onmouseover="showTip(event, 'fs13', 220)" class="i">arg</span>))
                | <span onmouseout="hideTip(event, 'fs8', 221)" onmouseover="showTip(event, 'fs8', 221)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs15', 222)" onmouseover="showTip(event, 'fs15', 222)" class="i">param</span>, <span onmouseout="hideTip(event, 'fs16', 223)" onmouseover="showTip(event, 'fs16', 223)" class="i">body</span>) <span class="k">-&gt;</span>                     <span class="c">// inner lambda</span>
                    <span class="k">assert</span>(<span onmouseout="hideTip(event, 'fs15', 224)" onmouseover="showTip(event, 'fs15', 224)" class="i">param</span> <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs81', 225)" onmouseover="showTip(event, 'fs81', 225)" class="i">newName</span>)
                    <span onmouseout="hideTip(event, 'fs8', 226)" onmouseover="showTip(event, 'fs8', 226)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs15', 227)" onmouseover="showTip(event, 'fs15', 227)" class="i">param</span>, <span onmouseout="hideTip(event, 'fs85', 228)" onmouseover="showTip(event, 'fs85', 228)" class="f">convert</span> <span onmouseout="hideTip(event, 'fs16', 229)" onmouseover="showTip(event, 'fs16', 229)" class="i">body</span>)

        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs77', 230)" onmouseover="showTip(event, 'fs77', 230)" class="f">occurs</span> <span onmouseout="hideTip(event, 'fs81', 231)" onmouseover="showTip(event, 'fs81', 231)" class="i">newName</span> <span onmouseout="hideTip(event, 'fs82', 232)" onmouseover="showTip(event, 'fs82', 232)" class="i">lambda</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs39', 233)" onmouseover="showTip(event, 'fs39', 233)" class="f">failwithf</span> <span class="s">&quot;New name &#39;</span><span class="pf">%s</span><span class="s">&#39; already appears in </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs81', 234)" onmouseover="showTip(event, 'fs81', 234)" class="i">newName</span> <span onmouseout="hideTip(event, 'fs82', 235)" onmouseover="showTip(event, 'fs82', 235)" class="i">lambda</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs82', 236)" onmouseover="showTip(event, 'fs82', 236)" class="i">lambda</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs8', 237)" onmouseover="showTip(event, 'fs8', 237)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs15', 238)" onmouseover="showTip(event, 'fs15', 238)" class="i">param</span>, <span onmouseout="hideTip(event, 'fs16', 239)" onmouseover="showTip(event, 'fs16', 239)" class="i">body</span>) <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs8', 240)" onmouseover="showTip(event, 'fs8', 240)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs81', 241)" onmouseover="showTip(event, 'fs81', 241)" class="i">newName</span>, <span onmouseout="hideTip(event, 'fs83', 242)" onmouseover="showTip(event, 'fs83', 242)" class="f">convert</span> <span onmouseout="hideTip(event, 'fs15', 243)" onmouseover="showTip(event, 'fs15', 243)" class="i">param</span> <span onmouseout="hideTip(event, 'fs81', 244)" onmouseover="showTip(event, 'fs81', 244)" class="i">newName</span> <span onmouseout="hideTip(event, 'fs16', 245)" onmouseover="showTip(event, 'fs16', 245)" class="i">body</span>)
            | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs39', 246)" onmouseover="showTip(event, 'fs39', 246)" class="f">failwithf</span> <span class="s">&quot;α-conversion not supported for </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs82', 247)" onmouseover="showTip(event, 'fs82', 247)" class="i">lambda</span>

    <span class="k">module</span> <span onmouseout="hideTip(event, 'fs86', 248)" onmouseover="showTip(event, 'fs86', 248)" class="t">Option</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs87', 249)" onmouseover="showTip(event, 'fs87', 249)" class="f">defaultWith</span> <span onmouseout="hideTip(event, 'fs88', 250)" onmouseover="showTip(event, 'fs88', 250)" class="f">defThunk</span> <span onmouseout="hideTip(event, 'fs89', 251)" onmouseover="showTip(event, 'fs89', 251)" class="i">option</span> <span class="o">=</span> <span class="k">match</span> <span onmouseout="hideTip(event, 'fs89', 252)" onmouseover="showTip(event, 'fs89', 252)" class="i">option</span> <span class="k">with</span> <span onmouseout="hideTip(event, 'fs90', 253)" onmouseover="showTip(event, 'fs90', 253)" class="p">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs88', 254)" onmouseover="showTip(event, 'fs88', 254)" class="f">defThunk</span> () | <span onmouseout="hideTip(event, 'fs91', 255)" onmouseover="showTip(event, 'fs91', 255)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs92', 256)" onmouseover="showTip(event, 'fs92', 256)" class="i">v</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs92', 257)" onmouseover="showTip(event, 'fs92', 257)" class="i">v</span>

    <span class="c">/// Replaces all occurrences of param with arg in body.</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs93', 258)" onmouseover="showTip(event, 'fs93', 258)" class="f">substitute</span> <span onmouseout="hideTip(event, 'fs13', 259)" onmouseover="showTip(event, 'fs13', 259)" class="i">arg</span> <span onmouseout="hideTip(event, 'fs15', 260)" onmouseover="showTip(event, 'fs15', 260)" class="i">param</span> <span onmouseout="hideTip(event, 'fs16', 261)" onmouseover="showTip(event, 'fs16', 261)" class="i">body</span> <span class="o">=</span>

        <span class="c">/// Answers the set of all variables in the given expression.</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs94', 262)" onmouseover="showTip(event, 'fs94', 262)" class="f">allVariables</span> <span onmouseout="hideTip(event, 'fs69', 263)" onmouseover="showTip(event, 'fs69', 263)" class="i">expr</span> <span class="o">=</span>
            <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs95', 264)" onmouseover="showTip(event, 'fs95', 264)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs69', 265)" onmouseover="showTip(event, 'fs69', 265)" class="i">expr</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs96', 266)" onmouseover="showTip(event, 'fs96', 266)" class="t">seq</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs3', 267)" onmouseover="showTip(event, 'fs3', 267)" class="t">string</span><span class="o">&gt;</span> <span class="o">=</span>
                <span onmouseout="hideTip(event, 'fs96', 268)" onmouseover="showTip(event, 'fs96', 268)" class="i">seq</span> {
                    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs69', 269)" onmouseover="showTip(event, 'fs69', 269)" class="i">expr</span> <span class="k">with</span>
                        | <span onmouseout="hideTip(event, 'fs6', 270)" onmouseover="showTip(event, 'fs6', 270)" class="p">Variable</span> <span onmouseout="hideTip(event, 'fs11', 271)" onmouseover="showTip(event, 'fs11', 271)" class="i">name</span> <span class="k">-&gt;</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs11', 272)" onmouseover="showTip(event, 'fs11', 272)" class="i">name</span>
                        | <span onmouseout="hideTip(event, 'fs7', 273)" onmouseover="showTip(event, 'fs7', 273)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs12', 274)" onmouseover="showTip(event, 'fs12', 274)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs13', 275)" onmouseover="showTip(event, 'fs13', 275)" class="i">arg</span>) <span class="k">-&gt;</span>
                            <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs95', 276)" onmouseover="showTip(event, 'fs95', 276)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs12', 277)" onmouseover="showTip(event, 'fs12', 277)" class="i">func</span>
                            <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs95', 278)" onmouseover="showTip(event, 'fs95', 278)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs13', 279)" onmouseover="showTip(event, 'fs13', 279)" class="i">arg</span>
                        | <span onmouseout="hideTip(event, 'fs8', 280)" onmouseover="showTip(event, 'fs8', 280)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs15', 281)" onmouseover="showTip(event, 'fs15', 281)" class="i">param</span>, <span onmouseout="hideTip(event, 'fs16', 282)" onmouseover="showTip(event, 'fs16', 282)" class="i">body</span>) <span class="k">-&gt;</span>
                            <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs15', 283)" onmouseover="showTip(event, 'fs15', 283)" class="i">param</span>
                            <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs95', 284)" onmouseover="showTip(event, 'fs95', 284)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs16', 285)" onmouseover="showTip(event, 'fs16', 285)" class="i">body</span>
                }
            <span onmouseout="hideTip(event, 'fs95', 286)" onmouseover="showTip(event, 'fs95', 286)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs69', 287)" onmouseover="showTip(event, 'fs69', 287)" class="i">expr</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs97', 288)" onmouseover="showTip(event, 'fs97', 288)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs98', 289)" onmouseover="showTip(event, 'fs98', 289)" class="f">ofSeq</span>

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs99', 290)" onmouseover="showTip(event, 'fs99', 290)" class="f">subst</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs93', 291)" onmouseover="showTip(event, 'fs93', 291)" class="f">substitute</span> <span onmouseout="hideTip(event, 'fs13', 292)" onmouseover="showTip(event, 'fs13', 292)" class="i">arg</span> <span onmouseout="hideTip(event, 'fs15', 293)" onmouseover="showTip(event, 'fs15', 293)" class="i">param</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs16', 294)" onmouseover="showTip(event, 'fs16', 294)" class="i">body</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs6', 295)" onmouseover="showTip(event, 'fs6', 295)" class="p">Variable</span> <span onmouseout="hideTip(event, 'fs11', 296)" onmouseover="showTip(event, 'fs11', 296)" class="i">name</span> <span class="k">-&gt;</span>
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs11', 297)" onmouseover="showTip(event, 'fs11', 297)" class="i">name</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 298)" onmouseover="showTip(event, 'fs15', 298)" class="i">param</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs13', 299)" onmouseover="showTip(event, 'fs13', 299)" class="i">arg</span>            <span class="c">// replace this variable with the new expression</span>
                <span class="k">else</span> <span onmouseout="hideTip(event, 'fs16', 300)" onmouseover="showTip(event, 'fs16', 300)" class="i">body</span>                           <span class="c">// no-op</span>
            | <span onmouseout="hideTip(event, 'fs7', 301)" onmouseover="showTip(event, 'fs7', 301)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs12', 302)" onmouseover="showTip(event, 'fs12', 302)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs13', 303)" onmouseover="showTip(event, 'fs13', 303)" class="i">arg</span>) <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs7', 304)" onmouseover="showTip(event, 'fs7', 304)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs99', 305)" onmouseover="showTip(event, 'fs99', 305)" class="f">subst</span> <span onmouseout="hideTip(event, 'fs12', 306)" onmouseover="showTip(event, 'fs12', 306)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs99', 307)" onmouseover="showTip(event, 'fs99', 307)" class="f">subst</span> <span onmouseout="hideTip(event, 'fs13', 308)" onmouseover="showTip(event, 'fs13', 308)" class="i">arg</span>)
            | <span onmouseout="hideTip(event, 'fs8', 309)" onmouseover="showTip(event, 'fs8', 309)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs100', 310)" onmouseover="showTip(event, 'fs100', 310)" class="i">param&#39;</span>, <span onmouseout="hideTip(event, 'fs101', 311)" onmouseover="showTip(event, 'fs101', 311)" class="i">body&#39;</span>) <span class="k">-&gt;</span>
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs100', 312)" onmouseover="showTip(event, 'fs100', 312)" class="i">param&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 313)" onmouseover="showTip(event, 'fs15', 313)" class="i">param</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs16', 314)" onmouseover="showTip(event, 'fs16', 314)" class="i">body</span>         <span class="c">// no-op (don&#39;t actually substitute anything)</span>
                <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs79', 315)" onmouseover="showTip(event, 'fs79', 315)" class="f">occursFree</span> <span onmouseout="hideTip(event, 'fs100', 316)" onmouseover="showTip(event, 'fs100', 316)" class="i">param&#39;</span> <span onmouseout="hideTip(event, 'fs13', 317)" onmouseover="showTip(event, 'fs13', 317)" class="i">arg</span> <span class="k">then</span>     <span class="c">// avoid variable capture</span>
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs102', 318)" onmouseover="showTip(event, 'fs102', 318)" class="i">allVars</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs94', 319)" onmouseover="showTip(event, 'fs94', 319)" class="f">allVariables</span> <span onmouseout="hideTip(event, 'fs16', 320)" onmouseover="showTip(event, 'fs16', 320)" class="i">body</span>
                    [<span class="s">&#39;a&#39;</span> <span class="o">..</span> <span class="s">&#39;z&#39;</span>]
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs103', 321)" onmouseover="showTip(event, 'fs103', 321)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs104', 322)" onmouseover="showTip(event, 'fs104', 322)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs50', 323)" onmouseover="showTip(event, 'fs50', 323)" class="i">c</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs50', 324)" onmouseover="showTip(event, 'fs50', 324)" class="i">c</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs105', 325)" onmouseover="showTip(event, 'fs105', 325)" class="f">ToString</span>())
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs103', 326)" onmouseover="showTip(event, 'fs103', 326)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs106', 327)" onmouseover="showTip(event, 'fs106', 327)" class="f">tryFind</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs107', 328)" onmouseover="showTip(event, 'fs107', 328)" class="i">newName</span> <span class="k">-&gt;</span>
                            <span onmouseout="hideTip(event, 'fs108', 329)" onmouseover="showTip(event, 'fs108', 329)" class="f">not</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs102', 330)" onmouseover="showTip(event, 'fs102', 330)" class="i">allVars</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs109', 331)" onmouseover="showTip(event, 'fs109', 331)" class="f">Contains</span>(<span onmouseout="hideTip(event, 'fs107', 332)" onmouseover="showTip(event, 'fs107', 332)" class="i">newName</span>))
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs110', 333)" onmouseover="showTip(event, 'fs110', 333)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs111', 334)" onmouseover="showTip(event, 'fs111', 334)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs107', 335)" onmouseover="showTip(event, 'fs107', 335)" class="i">newName</span> <span class="k">-&gt;</span>
                            <span onmouseout="hideTip(event, 'fs80', 336)" onmouseover="showTip(event, 'fs80', 336)" class="f">alphaConvert</span> <span onmouseout="hideTip(event, 'fs107', 337)" onmouseover="showTip(event, 'fs107', 337)" class="i">newName</span> <span onmouseout="hideTip(event, 'fs16', 338)" onmouseover="showTip(event, 'fs16', 338)" class="i">body</span>
                                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs99', 339)" onmouseover="showTip(event, 'fs99', 339)" class="f">subst</span>)
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs110', 340)" onmouseover="showTip(event, 'fs110', 340)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs87', 341)" onmouseover="showTip(event, 'fs87', 341)" class="f">defaultWith</span> (<span class="k">fun</span> () <span class="k">-&gt;</span>
                            <span onmouseout="hideTip(event, 'fs39', 342)" onmouseover="showTip(event, 'fs39', 342)" class="f">failwithf</span> <span class="s">&quot;Exhausted variable names for α-conversion&quot;</span>)
                <span class="k">else</span> <span onmouseout="hideTip(event, 'fs8', 343)" onmouseover="showTip(event, 'fs8', 343)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs100', 344)" onmouseover="showTip(event, 'fs100', 344)" class="i">param&#39;</span>, <span onmouseout="hideTip(event, 'fs99', 345)" onmouseover="showTip(event, 'fs99', 345)" class="f">subst</span> <span onmouseout="hideTip(event, 'fs101', 346)" onmouseover="showTip(event, 'fs101', 346)" class="i">body&#39;</span>)   <span class="c">// substitute new expression in lambda body</span>

    <span class="c">/// Reduces a β-reduction expression (&quot;β-redex&quot;). This is</span>
    <span class="c">/// function evaluation, which &quot;calls&quot; the given lambda</span>
    <span class="c">/// with the given argument.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs112', 347)" onmouseover="showTip(event, 'fs112', 347)" class="f">betaReduce</span> <span class="o">=</span>
        <span class="k">function</span>
            | <span onmouseout="hideTip(event, 'fs7', 348)" onmouseover="showTip(event, 'fs7', 348)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs8', 349)" onmouseover="showTip(event, 'fs8', 349)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs15', 350)" onmouseover="showTip(event, 'fs15', 350)" class="i">param</span>, <span onmouseout="hideTip(event, 'fs16', 351)" onmouseover="showTip(event, 'fs16', 351)" class="i">body</span>), <span onmouseout="hideTip(event, 'fs13', 352)" onmouseover="showTip(event, 'fs13', 352)" class="i">arg</span>) <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs93', 353)" onmouseover="showTip(event, 'fs93', 353)" class="f">substitute</span> <span onmouseout="hideTip(event, 'fs13', 354)" onmouseover="showTip(event, 'fs13', 354)" class="i">arg</span> <span onmouseout="hideTip(event, 'fs15', 355)" onmouseover="showTip(event, 'fs15', 355)" class="i">param</span> <span onmouseout="hideTip(event, 'fs16', 356)" onmouseover="showTip(event, 'fs16', 356)" class="i">body</span>
            | <span onmouseout="hideTip(event, 'fs69', 357)" onmouseover="showTip(event, 'fs69', 357)" class="i">expr</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs39', 358)" onmouseover="showTip(event, 'fs39', 358)" class="f">failwithf</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s"> is not a β-redex&quot;</span> <span onmouseout="hideTip(event, 'fs69', 359)" onmouseover="showTip(event, 'fs69', 359)" class="i">expr</span>

    <span class="c">/// Evaluates the given expression lazily (normal order).</span>
    <span class="c">/// See reduceLeftmostOutermostBetaRedex and reduceToNormalForm in</span>
    <span class="c">/// https://opendsa-server.cs.vt.edu/ODSA/AV/PL/interpreters/lambdacalc/version1.4.used.in.book/scripts/interpreter.js</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs113', 360)" onmouseover="showTip(event, 'fs113', 360)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs69', 361)" onmouseover="showTip(event, 'fs69', 361)" class="i">expr</span> <span class="o">=</span>

        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs114', 362)" onmouseover="showTip(event, 'fs114', 362)" class="f">containsBetaRedex</span> <span class="o">=</span>
            <span class="k">function</span>
                | <span onmouseout="hideTip(event, 'fs6', 363)" onmouseover="showTip(event, 'fs6', 363)" class="p">Variable</span> _ <span class="k">-&gt;</span> <span class="k">false</span>
                | <span onmouseout="hideTip(event, 'fs7', 364)" onmouseover="showTip(event, 'fs7', 364)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs8', 365)" onmouseover="showTip(event, 'fs8', 365)" class="p">Lambda</span> (_, _), _) <span class="k">-&gt;</span> <span class="k">true</span>
                | <span onmouseout="hideTip(event, 'fs7', 366)" onmouseover="showTip(event, 'fs7', 366)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs12', 367)" onmouseover="showTip(event, 'fs12', 367)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs13', 368)" onmouseover="showTip(event, 'fs13', 368)" class="i">arg</span>) <span class="k">-&gt;</span>
                    <span onmouseout="hideTip(event, 'fs114', 369)" onmouseover="showTip(event, 'fs114', 369)" class="f">containsBetaRedex</span> <span onmouseout="hideTip(event, 'fs12', 370)" onmouseover="showTip(event, 'fs12', 370)" class="i">func</span> <span class="o">||</span> <span onmouseout="hideTip(event, 'fs114', 371)" onmouseover="showTip(event, 'fs114', 371)" class="f">containsBetaRedex</span> <span onmouseout="hideTip(event, 'fs13', 372)" onmouseover="showTip(event, 'fs13', 372)" class="i">arg</span>
                | <span onmouseout="hideTip(event, 'fs8', 373)" onmouseover="showTip(event, 'fs8', 373)" class="p">Lambda</span> (_, <span onmouseout="hideTip(event, 'fs16', 374)" onmouseover="showTip(event, 'fs16', 374)" class="i">body</span>) <span class="k">-&gt;</span>
                    <span onmouseout="hideTip(event, 'fs114', 375)" onmouseover="showTip(event, 'fs114', 375)" class="f">containsBetaRedex</span> <span onmouseout="hideTip(event, 'fs16', 376)" onmouseover="showTip(event, 'fs16', 376)" class="i">body</span>

        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs115', 377)" onmouseover="showTip(event, 'fs115', 377)" class="f">reduceLazy</span> <span onmouseout="hideTip(event, 'fs69', 378)" onmouseover="showTip(event, 'fs69', 378)" class="i">expr</span> <span class="o">=</span>
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs69', 379)" onmouseover="showTip(event, 'fs69', 379)" class="i">expr</span> <span class="k">with</span>
                | <span onmouseout="hideTip(event, 'fs6', 380)" onmouseover="showTip(event, 'fs6', 380)" class="p">Variable</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs69', 381)" onmouseover="showTip(event, 'fs69', 381)" class="i">expr</span>
                | <span onmouseout="hideTip(event, 'fs7', 382)" onmouseover="showTip(event, 'fs7', 382)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs8', 383)" onmouseover="showTip(event, 'fs8', 383)" class="p">Lambda</span> (_, _), _) <span class="k">-&gt;</span>
                    <span onmouseout="hideTip(event, 'fs112', 384)" onmouseover="showTip(event, 'fs112', 384)" class="f">betaReduce</span> <span onmouseout="hideTip(event, 'fs69', 385)" onmouseover="showTip(event, 'fs69', 385)" class="i">expr</span>
                | <span onmouseout="hideTip(event, 'fs7', 386)" onmouseover="showTip(event, 'fs7', 386)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs12', 387)" onmouseover="showTip(event, 'fs12', 387)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs13', 388)" onmouseover="showTip(event, 'fs13', 388)" class="i">arg</span>) <span class="k">-&gt;</span>
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs114', 389)" onmouseover="showTip(event, 'fs114', 389)" class="f">containsBetaRedex</span> <span onmouseout="hideTip(event, 'fs12', 390)" onmouseover="showTip(event, 'fs12', 390)" class="i">func</span> <span class="k">then</span>
                        <span onmouseout="hideTip(event, 'fs7', 391)" onmouseover="showTip(event, 'fs7', 391)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs115', 392)" onmouseover="showTip(event, 'fs115', 392)" class="f">reduceLazy</span> <span onmouseout="hideTip(event, 'fs12', 393)" onmouseover="showTip(event, 'fs12', 393)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs13', 394)" onmouseover="showTip(event, 'fs13', 394)" class="i">arg</span>)
                    <span class="k">elif</span> <span onmouseout="hideTip(event, 'fs114', 395)" onmouseover="showTip(event, 'fs114', 395)" class="f">containsBetaRedex</span> <span onmouseout="hideTip(event, 'fs13', 396)" onmouseover="showTip(event, 'fs13', 396)" class="i">arg</span> <span class="k">then</span>
                        <span onmouseout="hideTip(event, 'fs7', 397)" onmouseover="showTip(event, 'fs7', 397)" class="p">Application</span> (<span onmouseout="hideTip(event, 'fs12', 398)" onmouseover="showTip(event, 'fs12', 398)" class="i">func</span>, <span onmouseout="hideTip(event, 'fs115', 399)" onmouseover="showTip(event, 'fs115', 399)" class="f">reduceLazy</span> <span onmouseout="hideTip(event, 'fs13', 400)" onmouseover="showTip(event, 'fs13', 400)" class="i">arg</span>)
                    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs69', 401)" onmouseover="showTip(event, 'fs69', 401)" class="i">expr</span>
                | <span onmouseout="hideTip(event, 'fs8', 402)" onmouseover="showTip(event, 'fs8', 402)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs15', 403)" onmouseover="showTip(event, 'fs15', 403)" class="i">param</span>, <span onmouseout="hideTip(event, 'fs16', 404)" onmouseover="showTip(event, 'fs16', 404)" class="i">body</span>) <span class="k">-&gt;</span>
                    <span onmouseout="hideTip(event, 'fs8', 405)" onmouseover="showTip(event, 'fs8', 405)" class="p">Lambda</span> (<span onmouseout="hideTip(event, 'fs15', 406)" onmouseover="showTip(event, 'fs15', 406)" class="i">param</span>, <span onmouseout="hideTip(event, 'fs115', 407)" onmouseover="showTip(event, 'fs115', 407)" class="f">reduceLazy</span> <span onmouseout="hideTip(event, 'fs16', 408)" onmouseover="showTip(event, 'fs16', 408)" class="i">body</span>)

        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs116', 409)" onmouseover="showTip(event, 'fs116', 409)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs69', 410)" onmouseover="showTip(event, 'fs69', 410)" class="i">expr</span> <span class="o">=</span>
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs114', 411)" onmouseover="showTip(event, 'fs114', 411)" class="f">containsBetaRedex</span> <span onmouseout="hideTip(event, 'fs69', 412)" onmouseover="showTip(event, 'fs69', 412)" class="i">expr</span> <span class="k">then</span>
                <span onmouseout="hideTip(event, 'fs115', 413)" onmouseover="showTip(event, 'fs115', 413)" class="f">reduceLazy</span> <span onmouseout="hideTip(event, 'fs69', 414)" onmouseover="showTip(event, 'fs69', 414)" class="i">expr</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs116', 415)" onmouseover="showTip(event, 'fs116', 415)" class="f">loop</span>
            <span class="k">else</span> <span onmouseout="hideTip(event, 'fs69', 416)" onmouseover="showTip(event, 'fs69', 416)" class="i">expr</span>

        <span onmouseout="hideTip(event, 'fs116', 417)" onmouseover="showTip(event, 'fs116', 417)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs69', 418)" onmouseover="showTip(event, 'fs69', 418)" class="i">expr</span>

[&lt;<span onmouseout="hideTip(event, 'fs117', 419)" onmouseover="showTip(event, 'fs117', 419)" class="t">AutoOpen</span>&gt;]
<span class="k">module</span> <span class="t">Lang</span> <span class="o">=</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs118', 420)" onmouseover="showTip(event, 'fs118', 420)" class="i">True</span> <span class="o">=</span> &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs119', 421)" onmouseover="showTip(event, 'fs119', 421)" class="i">x</span> <span onmouseout="hideTip(event, 'fs120', 422)" onmouseover="showTip(event, 'fs120', 422)" class="i">y</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs119', 423)" onmouseover="showTip(event, 'fs119', 423)" class="i">x</span> @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 424)" onmouseover="showTip(event, 'fs121', 424)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 425)" onmouseover="showTip(event, 'fs40', 425)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs122', 426)" onmouseover="showTip(event, 'fs122', 426)" class="i">False</span> <span class="o">=</span> &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs119', 427)" onmouseover="showTip(event, 'fs119', 427)" class="i">x</span> <span onmouseout="hideTip(event, 'fs120', 428)" onmouseover="showTip(event, 'fs120', 428)" class="i">y</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs120', 429)" onmouseover="showTip(event, 'fs120', 429)" class="i">y</span> @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 430)" onmouseover="showTip(event, 'fs121', 430)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 431)" onmouseover="showTip(event, 'fs40', 431)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs123', 432)" onmouseover="showTip(event, 'fs123', 432)" class="i">If</span> <span class="o">=</span> &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs124', 433)" onmouseover="showTip(event, 'fs124', 433)" class="f">b</span> <span onmouseout="hideTip(event, 'fs119', 434)" onmouseover="showTip(event, 'fs119', 434)" class="i">x</span> <span onmouseout="hideTip(event, 'fs120', 435)" onmouseover="showTip(event, 'fs120', 435)" class="i">y</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs124', 436)" onmouseover="showTip(event, 'fs124', 436)" class="f">b</span> <span onmouseout="hideTip(event, 'fs119', 437)" onmouseover="showTip(event, 'fs119', 437)" class="i">x</span> <span onmouseout="hideTip(event, 'fs120', 438)" onmouseover="showTip(event, 'fs120', 438)" class="i">y</span> @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 439)" onmouseover="showTip(event, 'fs121', 439)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 440)" onmouseover="showTip(event, 'fs40', 440)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs125', 441)" onmouseover="showTip(event, 'fs125', 441)" class="i">And</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 442)" onmouseover="showTip(event, 'fs14', 442)" class="f">sprintf</span> <span class="s">&quot;λp.λq.((p q) </span><span class="pf">%A</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs122', 443)" onmouseover="showTip(event, 'fs122', 443)" class="i">False</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 444)" onmouseover="showTip(event, 'fs121', 444)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 445)" onmouseover="showTip(event, 'fs73', 445)" class="f">parse</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs126', 446)" onmouseover="showTip(event, 'fs126', 446)" class="i">Or</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 447)" onmouseover="showTip(event, 'fs14', 447)" class="f">sprintf</span> <span class="s">&quot;λp.λq.((p </span><span class="pf">%A</span><span class="s">) q)&quot;</span> <span onmouseout="hideTip(event, 'fs118', 448)" onmouseover="showTip(event, 'fs118', 448)" class="i">True</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 449)" onmouseover="showTip(event, 'fs121', 449)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 450)" onmouseover="showTip(event, 'fs73', 450)" class="f">parse</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs127', 451)" onmouseover="showTip(event, 'fs127', 451)" class="i">Zero</span> <span class="o">=</span>  &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs128', 452)" onmouseover="showTip(event, 'fs128', 452)" class="i">f</span> <span onmouseout="hideTip(event, 'fs119', 453)" onmouseover="showTip(event, 'fs119', 453)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs119', 454)" onmouseover="showTip(event, 'fs119', 454)" class="i">x</span> @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 455)" onmouseover="showTip(event, 'fs121', 455)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 456)" onmouseover="showTip(event, 'fs40', 456)" class="f">ofQuot</span>   <span class="c">// same as False</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs129', 457)" onmouseover="showTip(event, 'fs129', 457)" class="i">One</span> <span class="o">=</span>   &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs130', 458)" onmouseover="showTip(event, 'fs130', 458)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 459)" onmouseover="showTip(event, 'fs119', 459)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs130', 460)" onmouseover="showTip(event, 'fs130', 460)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 461)" onmouseover="showTip(event, 'fs119', 461)" class="i">x</span> @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 462)" onmouseover="showTip(event, 'fs121', 462)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 463)" onmouseover="showTip(event, 'fs40', 463)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs131', 464)" onmouseover="showTip(event, 'fs131', 464)" class="i">Two</span> <span class="o">=</span>   &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs130', 465)" onmouseover="showTip(event, 'fs130', 465)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 466)" onmouseover="showTip(event, 'fs119', 466)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs130', 467)" onmouseover="showTip(event, 'fs130', 467)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 468)" onmouseover="showTip(event, 'fs130', 468)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 469)" onmouseover="showTip(event, 'fs119', 469)" class="i">x</span>) @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 470)" onmouseover="showTip(event, 'fs121', 470)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 471)" onmouseover="showTip(event, 'fs40', 471)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs132', 472)" onmouseover="showTip(event, 'fs132', 472)" class="i">Three</span> <span class="o">=</span> &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs130', 473)" onmouseover="showTip(event, 'fs130', 473)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 474)" onmouseover="showTip(event, 'fs119', 474)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs130', 475)" onmouseover="showTip(event, 'fs130', 475)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 476)" onmouseover="showTip(event, 'fs130', 476)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 477)" onmouseover="showTip(event, 'fs130', 477)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 478)" onmouseover="showTip(event, 'fs119', 478)" class="i">x</span>)) @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 479)" onmouseover="showTip(event, 'fs121', 479)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 480)" onmouseover="showTip(event, 'fs40', 480)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs133', 481)" onmouseover="showTip(event, 'fs133', 481)" class="i">Four</span> <span class="o">=</span>  &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs130', 482)" onmouseover="showTip(event, 'fs130', 482)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 483)" onmouseover="showTip(event, 'fs119', 483)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs130', 484)" onmouseover="showTip(event, 'fs130', 484)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 485)" onmouseover="showTip(event, 'fs130', 485)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 486)" onmouseover="showTip(event, 'fs130', 486)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 487)" onmouseover="showTip(event, 'fs130', 487)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 488)" onmouseover="showTip(event, 'fs119', 488)" class="i">x</span>))) @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 489)" onmouseover="showTip(event, 'fs121', 489)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 490)" onmouseover="showTip(event, 'fs40', 490)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs134', 491)" onmouseover="showTip(event, 'fs134', 491)" class="i">Five</span> <span class="o">=</span>  &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs130', 492)" onmouseover="showTip(event, 'fs130', 492)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 493)" onmouseover="showTip(event, 'fs119', 493)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs130', 494)" onmouseover="showTip(event, 'fs130', 494)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 495)" onmouseover="showTip(event, 'fs130', 495)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 496)" onmouseover="showTip(event, 'fs130', 496)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 497)" onmouseover="showTip(event, 'fs130', 497)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 498)" onmouseover="showTip(event, 'fs130', 498)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 499)" onmouseover="showTip(event, 'fs119', 499)" class="i">x</span>)))) @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 500)" onmouseover="showTip(event, 'fs121', 500)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 501)" onmouseover="showTip(event, 'fs40', 501)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs135', 502)" onmouseover="showTip(event, 'fs135', 502)" class="i">Six</span> <span class="o">=</span>   &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs130', 503)" onmouseover="showTip(event, 'fs130', 503)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 504)" onmouseover="showTip(event, 'fs119', 504)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs130', 505)" onmouseover="showTip(event, 'fs130', 505)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 506)" onmouseover="showTip(event, 'fs130', 506)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 507)" onmouseover="showTip(event, 'fs130', 507)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 508)" onmouseover="showTip(event, 'fs130', 508)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 509)" onmouseover="showTip(event, 'fs130', 509)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 510)" onmouseover="showTip(event, 'fs130', 510)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 511)" onmouseover="showTip(event, 'fs119', 511)" class="i">x</span>))))) @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 512)" onmouseover="showTip(event, 'fs121', 512)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 513)" onmouseover="showTip(event, 'fs40', 513)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs136', 514)" onmouseover="showTip(event, 'fs136', 514)" class="i">Seven</span> <span class="o">=</span> &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs130', 515)" onmouseover="showTip(event, 'fs130', 515)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 516)" onmouseover="showTip(event, 'fs119', 516)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs130', 517)" onmouseover="showTip(event, 'fs130', 517)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 518)" onmouseover="showTip(event, 'fs130', 518)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 519)" onmouseover="showTip(event, 'fs130', 519)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 520)" onmouseover="showTip(event, 'fs130', 520)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 521)" onmouseover="showTip(event, 'fs130', 521)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 522)" onmouseover="showTip(event, 'fs130', 522)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 523)" onmouseover="showTip(event, 'fs130', 523)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 524)" onmouseover="showTip(event, 'fs119', 524)" class="i">x</span>)))))) @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 525)" onmouseover="showTip(event, 'fs121', 525)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 526)" onmouseover="showTip(event, 'fs40', 526)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs137', 527)" onmouseover="showTip(event, 'fs137', 527)" class="i">Eight</span> <span class="o">=</span> &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs130', 528)" onmouseover="showTip(event, 'fs130', 528)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 529)" onmouseover="showTip(event, 'fs119', 529)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs130', 530)" onmouseover="showTip(event, 'fs130', 530)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 531)" onmouseover="showTip(event, 'fs130', 531)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 532)" onmouseover="showTip(event, 'fs130', 532)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 533)" onmouseover="showTip(event, 'fs130', 533)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 534)" onmouseover="showTip(event, 'fs130', 534)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 535)" onmouseover="showTip(event, 'fs130', 535)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 536)" onmouseover="showTip(event, 'fs130', 536)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 537)" onmouseover="showTip(event, 'fs130', 537)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 538)" onmouseover="showTip(event, 'fs119', 538)" class="i">x</span>))))))) @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 539)" onmouseover="showTip(event, 'fs121', 539)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 540)" onmouseover="showTip(event, 'fs40', 540)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs138', 541)" onmouseover="showTip(event, 'fs138', 541)" class="i">Nine</span> <span class="o">=</span>  &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs130', 542)" onmouseover="showTip(event, 'fs130', 542)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 543)" onmouseover="showTip(event, 'fs119', 543)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs130', 544)" onmouseover="showTip(event, 'fs130', 544)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 545)" onmouseover="showTip(event, 'fs130', 545)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 546)" onmouseover="showTip(event, 'fs130', 546)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 547)" onmouseover="showTip(event, 'fs130', 547)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 548)" onmouseover="showTip(event, 'fs130', 548)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 549)" onmouseover="showTip(event, 'fs130', 549)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 550)" onmouseover="showTip(event, 'fs130', 550)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 551)" onmouseover="showTip(event, 'fs130', 551)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 552)" onmouseover="showTip(event, 'fs130', 552)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 553)" onmouseover="showTip(event, 'fs119', 553)" class="i">x</span>)))))))) @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 554)" onmouseover="showTip(event, 'fs121', 554)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 555)" onmouseover="showTip(event, 'fs40', 555)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs139', 556)" onmouseover="showTip(event, 'fs139', 556)" class="i">Ten</span> <span class="o">=</span>   &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs130', 557)" onmouseover="showTip(event, 'fs130', 557)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 558)" onmouseover="showTip(event, 'fs119', 558)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs130', 559)" onmouseover="showTip(event, 'fs130', 559)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 560)" onmouseover="showTip(event, 'fs130', 560)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 561)" onmouseover="showTip(event, 'fs130', 561)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 562)" onmouseover="showTip(event, 'fs130', 562)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 563)" onmouseover="showTip(event, 'fs130', 563)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 564)" onmouseover="showTip(event, 'fs130', 564)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 565)" onmouseover="showTip(event, 'fs130', 565)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 566)" onmouseover="showTip(event, 'fs130', 566)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 567)" onmouseover="showTip(event, 'fs130', 567)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs130', 568)" onmouseover="showTip(event, 'fs130', 568)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 569)" onmouseover="showTip(event, 'fs119', 569)" class="i">x</span>))))))))) @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 570)" onmouseover="showTip(event, 'fs121', 570)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 571)" onmouseover="showTip(event, 'fs40', 571)" class="f">ofQuot</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs140', 572)" onmouseover="showTip(event, 'fs140', 572)" class="i">Succ</span> <span class="o">=</span> &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs141', 573)" onmouseover="showTip(event, 'fs141', 573)" class="f">n</span> <span onmouseout="hideTip(event, 'fs130', 574)" onmouseover="showTip(event, 'fs130', 574)" class="f">f</span> <span onmouseout="hideTip(event, 'fs119', 575)" onmouseover="showTip(event, 'fs119', 575)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs130', 576)" onmouseover="showTip(event, 'fs130', 576)" class="f">f</span> ((<span onmouseout="hideTip(event, 'fs141', 577)" onmouseover="showTip(event, 'fs141', 577)" class="f">n</span> <span onmouseout="hideTip(event, 'fs130', 578)" onmouseover="showTip(event, 'fs130', 578)" class="f">f</span>) <span onmouseout="hideTip(event, 'fs119', 579)" onmouseover="showTip(event, 'fs119', 579)" class="i">x</span>) @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 580)" onmouseover="showTip(event, 'fs121', 580)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 581)" onmouseover="showTip(event, 'fs40', 581)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs142', 582)" onmouseover="showTip(event, 'fs142', 582)" class="i">Plus</span> <span class="o">=</span> &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs143', 583)" onmouseover="showTip(event, 'fs143', 583)" class="f">m</span> <span onmouseout="hideTip(event, 'fs144', 584)" onmouseover="showTip(event, 'fs144', 584)" class="f">n</span> <span onmouseout="hideTip(event, 'fs128', 585)" onmouseover="showTip(event, 'fs128', 585)" class="i">f</span> <span onmouseout="hideTip(event, 'fs119', 586)" onmouseover="showTip(event, 'fs119', 586)" class="i">x</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs144', 587)" onmouseover="showTip(event, 'fs144', 587)" class="f">n</span> <span onmouseout="hideTip(event, 'fs128', 588)" onmouseover="showTip(event, 'fs128', 588)" class="i">f</span>) ((<span onmouseout="hideTip(event, 'fs143', 589)" onmouseover="showTip(event, 'fs143', 589)" class="f">m</span> <span onmouseout="hideTip(event, 'fs128', 590)" onmouseover="showTip(event, 'fs128', 590)" class="i">f</span>) <span onmouseout="hideTip(event, 'fs119', 591)" onmouseover="showTip(event, 'fs119', 591)" class="i">x</span>) @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 592)" onmouseover="showTip(event, 'fs121', 592)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 593)" onmouseover="showTip(event, 'fs40', 593)" class="f">ofQuot</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs145', 594)" onmouseover="showTip(event, 'fs145', 594)" class="i">Mult</span> <span class="o">=</span> &lt;@@ <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs146', 595)" onmouseover="showTip(event, 'fs146', 595)" class="f">m</span> <span onmouseout="hideTip(event, 'fs147', 596)" onmouseover="showTip(event, 'fs147', 596)" class="f">n</span> <span onmouseout="hideTip(event, 'fs128', 597)" onmouseover="showTip(event, 'fs128', 597)" class="i">f</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs146', 598)" onmouseover="showTip(event, 'fs146', 598)" class="f">m</span> (<span onmouseout="hideTip(event, 'fs147', 599)" onmouseover="showTip(event, 'fs147', 599)" class="f">n</span> <span onmouseout="hideTip(event, 'fs128', 600)" onmouseover="showTip(event, 'fs128', 600)" class="i">f</span>) @@&gt; <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 601)" onmouseover="showTip(event, 'fs121', 601)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 602)" onmouseover="showTip(event, 'fs40', 602)" class="f">ofQuot</span>

    <span class="c">/// Y-combinator for recursion</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs148', 603)" onmouseover="showTip(event, 'fs148', 603)" class="i">Y</span> <span class="o">=</span> <span class="s">&quot;λh.(λx.(h (x x)) λx.(h (x x)))&quot;</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 604)" onmouseover="showTip(event, 'fs121', 604)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 605)" onmouseover="showTip(event, 'fs73', 605)" class="f">parse</span>

<span class="k">module</span> <span onmouseout="hideTip(event, 'fs149', 606)" onmouseover="showTip(event, 'fs149', 606)" class="t">Program</span> <span class="o">=</span>

    [&lt;<span onmouseout="hideTip(event, 'fs150', 607)" onmouseover="showTip(event, 'fs150', 607)" class="t">EntryPoint</span>&gt;]
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs151', 608)" onmouseover="showTip(event, 'fs151', 608)" class="f">main</span> <span onmouseout="hideTip(event, 'fs152', 609)" onmouseover="showTip(event, 'fs152', 609)" class="i">argv</span> <span class="o">=</span>

        <span class="c">// display λ chars correctly</span>
        <span onmouseout="hideTip(event, 'fs153', 610)" onmouseover="showTip(event, 'fs153', 610)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs154', 611)" onmouseover="showTip(event, 'fs154', 611)" class="i">OutputEncoding</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs155', 612)" onmouseover="showTip(event, 'fs155', 612)" class="i">Text</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs156', 613)" onmouseover="showTip(event, 'fs156', 613)" class="t">Encoding</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs157', 614)" onmouseover="showTip(event, 'fs157', 614)" class="i">Unicode</span>

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs158', 615)" onmouseover="showTip(event, 'fs158', 615)" class="i">IsZero</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs14', 616)" onmouseover="showTip(event, 'fs14', 616)" class="f">sprintf</span> <span class="s">&quot;λn.((n λx.</span><span class="pf">%A</span><span class="s">) </span><span class="pf">%A</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs122', 617)" onmouseover="showTip(event, 'fs122', 617)" class="i">False</span> <span onmouseout="hideTip(event, 'fs118', 618)" onmouseover="showTip(event, 'fs118', 618)" class="i">True</span>
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 619)" onmouseover="showTip(event, 'fs121', 619)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 620)" onmouseover="showTip(event, 'fs73', 620)" class="f">parse</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs159', 621)" onmouseover="showTip(event, 'fs159', 621)" class="i">Pred</span> <span class="o">=</span>
            <span class="s">&quot;λn.λf.λx.(((n λg.λh.(h (g f))) λu.x) λu.u)&quot;</span>
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 622)" onmouseover="showTip(event, 'fs121', 622)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 623)" onmouseover="showTip(event, 'fs73', 623)" class="f">parse</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs160', 624)" onmouseover="showTip(event, 'fs160', 624)" class="i">TriangleNonRecursive</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs14', 625)" onmouseover="showTip(event, 'fs14', 625)" class="f">sprintf</span> <span class="s">&quot;λg.λn.(((</span><span class="pf">%A</span><span class="s"> (</span><span class="pf">%A</span><span class="s"> n)) </span><span class="pf">%A</span><span class="s">) ((</span><span class="pf">%A</span><span class="s"> n) (g (</span><span class="pf">%A</span><span class="s"> n))))&quot;</span> <span onmouseout="hideTip(event, 'fs123', 626)" onmouseover="showTip(event, 'fs123', 626)" class="i">If</span> <span onmouseout="hideTip(event, 'fs158', 627)" onmouseover="showTip(event, 'fs158', 627)" class="i">IsZero</span> <span onmouseout="hideTip(event, 'fs127', 628)" onmouseover="showTip(event, 'fs127', 628)" class="i">Zero</span> <span onmouseout="hideTip(event, 'fs142', 629)" onmouseover="showTip(event, 'fs142', 629)" class="i">Plus</span> <span onmouseout="hideTip(event, 'fs159', 630)" onmouseover="showTip(event, 'fs159', 630)" class="i">Pred</span>
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 631)" onmouseover="showTip(event, 'fs121', 631)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 632)" onmouseover="showTip(event, 'fs73', 632)" class="f">parse</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs161', 633)" onmouseover="showTip(event, 'fs161', 633)" class="i">TriangleRecursive</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs14', 634)" onmouseover="showTip(event, 'fs14', 634)" class="f">sprintf</span> <span class="s">&quot;(</span><span class="pf">%A</span><span class="s"> </span><span class="pf">%A</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs148', 635)" onmouseover="showTip(event, 'fs148', 635)" class="i">Y</span> <span onmouseout="hideTip(event, 'fs160', 636)" onmouseover="showTip(event, 'fs160', 636)" class="i">TriangleNonRecursive</span>
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 637)" onmouseover="showTip(event, 'fs121', 637)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 638)" onmouseover="showTip(event, 'fs73', 638)" class="f">parse</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs69', 639)" onmouseover="showTip(event, 'fs69', 639)" class="i">expr</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs14', 640)" onmouseover="showTip(event, 'fs14', 640)" class="f">sprintf</span> <span class="s">&quot;(</span><span class="pf">%A</span><span class="s"> </span><span class="pf">%A</span><span class="s">)&quot;</span> <span onmouseout="hideTip(event, 'fs161', 641)" onmouseover="showTip(event, 'fs161', 641)" class="i">TriangleRecursive</span> <span onmouseout="hideTip(event, 'fs133', 642)" onmouseover="showTip(event, 'fs133', 642)" class="i">Four</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 643)" onmouseover="showTip(event, 'fs121', 643)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 644)" onmouseover="showTip(event, 'fs73', 644)" class="f">parse</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs121', 645)" onmouseover="showTip(event, 'fs121', 645)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs113', 646)" onmouseover="showTip(event, 'fs113', 646)" class="f">eval</span>
        <span onmouseout="hideTip(event, 'fs162', 647)" onmouseover="showTip(event, 'fs162', 647)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs69', 648)" onmouseover="showTip(event, 'fs69', 648)" class="i">expr</span>

        <span class="n">0</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">type Variable = string<br /><br />Full name: LambdaCalculus.Variable<br /><em><br /><br />&#160;A variable in a lambda expression.</em></div>
<div class="tip" id="fs3">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs4">Multiple items<br />type StructuredFormatDisplayAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : value:string -&gt; StructuredFormatDisplayAttribute<br />&#160;&#160;member Value : string<br /><br />Full name: Microsoft.FSharp.Core.StructuredFormatDisplayAttribute<br /><br />--------------------<br />new : value:string -&gt; StructuredFormatDisplayAttribute</div>
<div class="tip" id="fs5">type Expr =<br />&#160;&#160;| Variable of Variable<br />&#160;&#160;| Application of (Expr * Expr)<br />&#160;&#160;| Lambda of (Variable * Expr)<br />&#160;&#160;override ToString : unit -&gt; string<br />&#160;&#160;member String : Variable<br /><br />Full name: LambdaCalculus.Expr<br /><em><br /><br />&#160;Lambda expression.</em></div>
<div class="tip" id="fs6">Multiple items<br />union case Expr.Variable: Variable -&gt; Expr<br /><em><br /><br />&#160;E.g. &quot;x&quot;</em><br /><br />--------------------<br />type Variable = string<br /><br />Full name: LambdaCalculus.Variable<br /><em><br /><br />&#160;A variable in a lambda expression.</em></div>
<div class="tip" id="fs7">union case Expr.Application: (Expr * Expr) -&gt; Expr<br /><em><br /><br />&#160;E.g. &quot;(x y)&quot;</em></div>
<div class="tip" id="fs8">union case Expr.Lambda: (Variable * Expr) -&gt; Expr<br /><em><br /><br />&#160;E.g. &quot;λx.y&quot;</em></div>
<div class="tip" id="fs9">val this : Expr</div>
<div class="tip" id="fs10">Multiple items<br />member Expr.String : Variable<br /><br />Full name: LambdaCalculus.Expr.String<br /><em><br /><br />&#160;Converts expression to string.</em><br /><br />--------------------<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs11">val name : Variable</div>
<div class="tip" id="fs12">val func : Expr</div>
<div class="tip" id="fs13">val arg : Expr</div>
<div class="tip" id="fs14">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs15">val param : Variable</div>
<div class="tip" id="fs16">val body : Expr</div>
<div class="tip" id="fs17">override Expr.ToString : unit -&gt; string<br /><br />Full name: LambdaCalculus.Expr.ToString<br /><em><br /><br />&#160;Converts expression to string.</em></div>
<div class="tip" id="fs18">property Expr.String: Variable<br /><em><br /><br />&#160;Converts expression to string.</em></div>
<div class="tip" id="fs19">Multiple items<br />type CompilationRepresentationAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : flags:CompilationRepresentationFlags -&gt; CompilationRepresentationAttribute<br />&#160;&#160;member Flags : CompilationRepresentationFlags<br /><br />Full name: Microsoft.FSharp.Core.CompilationRepresentationAttribute<br /><br />--------------------<br />new : flags:CompilationRepresentationFlags -&gt; CompilationRepresentationAttribute</div>
<div class="tip" id="fs20">type CompilationRepresentationFlags =<br />&#160;&#160;|  None  =  0<br />&#160;&#160;|  Static  =  1<br />&#160;&#160;|  Instance  =  2<br />&#160;&#160;|  ModuleSuffix  =  4<br />&#160;&#160;|  UseNullAsTrueValue  =  8<br />&#160;&#160;|  Event  =  16<br /><br />Full name: Microsoft.FSharp.Core.CompilationRepresentationFlags</div>
<div class="tip" id="fs21">CompilationRepresentationFlags.ModuleSuffix: CompilationRepresentationFlags = 4</div>
<div class="tip" id="fs22">namespace Microsoft.FSharp</div>
<div class="tip" id="fs23">namespace Microsoft</div>
<div class="tip" id="fs24">namespace Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs25">module Patterns<br /><br />from Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs26">val private ofQuot : _arg1:Quotations.Expr -&gt; Expr<br /><br />Full name: LambdaCalculus.ExprModule.FSharp.ofQuot<br /><em><br /><br />&#160;Constructs a lambda expression from an F# quotation.</em></div>
<div class="tip" id="fs27">active recognizer Var: Quotations.Expr -&gt; Quotations.Var option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Var|_| )</div>
<div class="tip" id="fs28">val var : Quotations.Var</div>
<div class="tip" id="fs29">property Quotations.Var.Name: string</div>
<div class="tip" id="fs30">active recognizer ValueWithName: Quotations.Expr -&gt; (obj * Type * string) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |ValueWithName|_| )</div>
<div class="tip" id="fs31">val name : string</div>
<div class="tip" id="fs32">Multiple items<br />union case Expr.Application: (Expr * Expr) -&gt; Expr<br /><em><br /><br />&#160;E.g. &quot;(x y)&quot;</em><br /><br />--------------------<br />active recognizer Application: Quotations.Expr -&gt; (Quotations.Expr * Quotations.Expr) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Application|_| )</div>
<div class="tip" id="fs33">val func : Quotations.Expr</div>
<div class="tip" id="fs34">val arg : Quotations.Expr</div>
<div class="tip" id="fs35">Multiple items<br />union case Expr.Lambda: (Variable * Expr) -&gt; Expr<br /><em><br /><br />&#160;E.g. &quot;λx.y&quot;</em><br /><br />--------------------<br />active recognizer Lambda: Quotations.Expr -&gt; (Quotations.Var * Quotations.Expr) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Lambda|_| )</div>
<div class="tip" id="fs36">val param : Quotations.Var</div>
<div class="tip" id="fs37">val body : Quotations.Expr</div>
<div class="tip" id="fs38">val expr : Quotations.Expr</div>
<div class="tip" id="fs39">val failwithf : format:Printf.StringFormat&lt;&#39;T,&#39;Result&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.failwithf</div>
<div class="tip" id="fs40">val ofQuot : (Quotations.Expr -&gt; Expr)<br /><br />Full name: LambdaCalculus.ExprModule.ofQuot</div>
<div class="tip" id="fs41">Multiple items<br />module FSharp<br /><br />from LambdaCalculus.ExprModule<br /><em><br /><br />&#160;Interop with F# quotations.</em><br /><br />--------------------<br />namespace Microsoft.FSharp</div>
<div class="tip" id="fs42">namespace FParsec</div>
<div class="tip" id="fs43">val private parseExpr : Parser&lt;Expr,unit&gt;<br /><br />Full name: LambdaCalculus.ExprModule.Parse.parseExpr</div>
<div class="tip" id="fs44">val private parseExprRef : Parser&lt;Expr,unit&gt; ref<br /><br />Full name: LambdaCalculus.ExprModule.Parse.parseExprRef</div>
<div class="tip" id="fs45">val createParserForwardedToRef : unit -&gt; Parser&lt;&#39;a,&#39;u&gt; * Parser&lt;&#39;a,&#39;u&gt; ref<br /><br />Full name: FParsec.Primitives.createParserForwardedToRef</div>
<div class="tip" id="fs46">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs47">val private parseName : Parser&lt;string,unit&gt;<br /><br />Full name: LambdaCalculus.ExprModule.Parse.parseName</div>
<div class="tip" id="fs48">val many1Chars : Parser&lt;char,&#39;u&gt; -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.many1Chars</div>
<div class="tip" id="fs49">val satisfy : (char -&gt; bool) -&gt; Parser&lt;char,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.satisfy</div>
<div class="tip" id="fs50">val c : char</div>
<div class="tip" id="fs51">type Char =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 1 overload<br />&#160;&#160;&#160;&#160;static val MaxValue : char<br />&#160;&#160;&#160;&#160;static val MinValue : char<br />&#160;&#160;&#160;&#160;static member ConvertFromUtf32 : utf32:int -&gt; string<br />&#160;&#160;&#160;&#160;static member ConvertToUtf32 : highSurrogate:char * lowSurrogate:char -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;static member GetNumericValue : c:char -&gt; float + 1 overload<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Char</div>
<div class="tip" id="fs52">Char.IsLetterOrDigit(c: char) : bool<br />Char.IsLetterOrDigit(s: string, index: int) : bool</div>
<div class="tip" id="fs53">val private parseVariable : Parser&lt;Expr,unit&gt;<br /><br />Full name: LambdaCalculus.ExprModule.Parse.parseVariable</div>
<div class="tip" id="fs54">val private parseApplication : Parser&lt;Expr,unit&gt;<br /><br />Full name: LambdaCalculus.ExprModule.Parse.parseApplication</div>
<div class="tip" id="fs55">val pipe5 : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;b,&#39;u&gt; -&gt; Parser&lt;&#39;c,&#39;u&gt; -&gt; Parser&lt;&#39;d,&#39;u&gt; -&gt; Parser&lt;&#39;e,&#39;u&gt; -&gt; (&#39;a -&gt; &#39;b -&gt; &#39;c -&gt; &#39;d -&gt; &#39;e -&gt; &#39;f) -&gt; Parser&lt;&#39;f,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.pipe5</div>
<div class="tip" id="fs56">val skipChar : char -&gt; Parser&lt;unit,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.skipChar</div>
<div class="tip" id="fs57">val many1 : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;a list,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.many1</div>
<div class="tip" id="fs58">val private parseLambda : Parser&lt;Expr,unit&gt;<br /><br />Full name: LambdaCalculus.ExprModule.Parse.parseLambda</div>
<div class="tip" id="fs59">val pipe4 : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;b,&#39;u&gt; -&gt; Parser&lt;&#39;c,&#39;u&gt; -&gt; Parser&lt;&#39;d,&#39;u&gt; -&gt; (&#39;a -&gt; &#39;b -&gt; &#39;c -&gt; &#39;d -&gt; &#39;e) -&gt; Parser&lt;&#39;e,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.pipe4</div>
<div class="tip" id="fs60">val skipAnyOf : seq&lt;char&gt; -&gt; Parser&lt;unit,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.skipAnyOf</div>
<div class="tip" id="fs61">val param : string</div>
<div class="tip" id="fs62">val choice : seq&lt;Parser&lt;&#39;a,&#39;u&gt;&gt; -&gt; Parser&lt;&#39;a,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.choice</div>
<div class="tip" id="fs63">val private parse : str:string -&gt; Expr<br /><br />Full name: LambdaCalculus.ExprModule.Parse.parse</div>
<div class="tip" id="fs64">val str : string</div>
<div class="tip" id="fs65">val parser : Parser&lt;Expr,unit&gt;</div>
<div class="tip" id="fs66">val eof : Parser&lt;unit,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.eof</div>
<div class="tip" id="fs67">val run : Parser&lt;&#39;Result,unit&gt; -&gt; string -&gt; ParserResult&lt;&#39;Result,unit&gt;<br /><br />Full name: FParsec.CharParsers.run</div>
<div class="tip" id="fs68">union case ParserResult.Success: &#39;Result * &#39;UserState * Position -&gt; ParserResult&lt;&#39;Result,&#39;UserState&gt;</div>
<div class="tip" id="fs69">val expr : Expr</div>
<div class="tip" id="fs70">union case ParserResult.Failure: string * ParserError * &#39;UserState -&gt; ParserResult&lt;&#39;Result,&#39;UserState&gt;</div>
<div class="tip" id="fs71">val msg : string</div>
<div class="tip" id="fs72">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs73">val parse : (string -&gt; Expr)<br /><br />Full name: LambdaCalculus.ExprModule.parse</div>
<div class="tip" id="fs74">module Parse<br /><br />from LambdaCalculus.ExprModule</div>
<div class="tip" id="fs75">val toString : expr:Expr -&gt; string<br /><br />Full name: LambdaCalculus.ExprModule.toString</div>
<div class="tip" id="fs76">override Expr.ToString : unit -&gt; string<br /><em><br /><br />&#160;Converts expression to string.</em></div>
<div class="tip" id="fs77">val occurs : name:Variable -&gt; _arg1:Expr -&gt; bool<br /><br />Full name: LambdaCalculus.ExprModule.occurs<br /><em><br /><br />&#160;Indicates whether the given variable occurs within a lambda expression (either<br />&#160;bound or free).</em></div>
<div class="tip" id="fs78">val name&#39; : Variable</div>
<div class="tip" id="fs79">val occursFree : name:Variable -&gt; _arg1:Expr -&gt; bool<br /><br />Full name: LambdaCalculus.ExprModule.occursFree<br /><em><br /><br />&#160;Indicates whether the given variable occurs free within a lambda expression.<br />&#160;(Note that it might occur both free and bound.)</em></div>
<div class="tip" id="fs80">val alphaConvert : newName:Variable -&gt; lambda:Expr -&gt; Expr<br /><br />Full name: LambdaCalculus.ExprModule.alphaConvert<br /><em><br /><br />&#160;α-conversion.</em></div>
<div class="tip" id="fs81">val newName : Variable</div>
<div class="tip" id="fs82">val lambda : Expr</div>
<div class="tip" id="fs83">val convert : (Variable -&gt; Variable -&gt; Expr -&gt; Expr)</div>
<div class="tip" id="fs84">val oldName : Variable</div>
<div class="tip" id="fs85">val convert : (Expr -&gt; Expr)</div>
<div class="tip" id="fs86">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs87">val defaultWith : defThunk:(unit -&gt; &#39;a) -&gt; option:&#39;a option -&gt; &#39;a<br /><br />Full name: LambdaCalculus.ExprModule.Option.defaultWith</div>
<div class="tip" id="fs88">val defThunk : (unit -&gt; &#39;a)</div>
<div class="tip" id="fs89">Multiple items<br />val option : &#39;a option<br /><br />--------------------<br />type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs90">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs91">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs92">val v : &#39;a</div>
<div class="tip" id="fs93">val substitute : arg:Expr -&gt; param:Variable -&gt; body:Expr -&gt; Expr<br /><br />Full name: LambdaCalculus.ExprModule.substitute<br /><em><br /><br />&#160;Replaces all occurrences of param with arg in body.</em></div>
<div class="tip" id="fs94">val allVariables : (Expr -&gt; Set&lt;string&gt;)<br /><em><br /><br />&#160;Answers the set of all variables in the given expression.</em></div>
<div class="tip" id="fs95">val loop : (Expr -&gt; seq&lt;string&gt;)</div>
<div class="tip" id="fs96">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs97">Multiple items<br />module Set<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Set&lt;&#39;T (requires comparison)&gt; =<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;interface ICollection&lt;&#39;T&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Add : value:&#39;T -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Contains : value:&#39;T -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member IsProperSubsetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;member IsProperSupersetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Set&lt;_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;</div>
<div class="tip" id="fs98">val ofSeq : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Set.ofSeq</div>
<div class="tip" id="fs99">val subst : (Expr -&gt; Expr)</div>
<div class="tip" id="fs100">val param&#39; : Variable</div>
<div class="tip" id="fs101">val body&#39; : Expr</div>
<div class="tip" id="fs102">val allVars : Set&lt;string&gt;</div>
<div class="tip" id="fs103">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs104">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs105">Char.ToString() : string<br />Char.ToString(provider: IFormatProvider) : string</div>
<div class="tip" id="fs106">val tryFind : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;T option<br /><br />Full name: Microsoft.FSharp.Collections.Seq.tryFind</div>
<div class="tip" id="fs107">val newName : string</div>
<div class="tip" id="fs108">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs109">member Set.Contains : value:&#39;T -&gt; bool</div>
<div class="tip" id="fs110">Multiple items<br />module Option<br /><br />from LambdaCalculus.ExprModule<br /><br />--------------------<br />module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs111">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; option:&#39;T option -&gt; &#39;U option<br /><br />Full name: Microsoft.FSharp.Core.Option.map</div>
<div class="tip" id="fs112">val betaReduce : _arg1:Expr -&gt; Expr<br /><br />Full name: LambdaCalculus.ExprModule.betaReduce<br /><em><br /><br />&#160;Reduces a β-reduction expression (&quot;β-redex&quot;). This is<br />&#160;function evaluation, which &quot;calls&quot; the given lambda<br />&#160;with the given argument.</em></div>
<div class="tip" id="fs113">val eval : expr:Expr -&gt; Expr<br /><br />Full name: LambdaCalculus.ExprModule.eval<br /><em><br /><br />&#160;Evaluates the given expression lazily (normal order).<br />&#160;See reduceLeftmostOutermostBetaRedex and reduceToNormalForm in<br />&#160;https://opendsa-server.cs.vt.edu/ODSA/AV/PL/interpreters/lambdacalc/version1.4.used.in.book/scripts/interpreter.js</em></div>
<div class="tip" id="fs114">val containsBetaRedex : (Expr -&gt; bool)</div>
<div class="tip" id="fs115">val reduceLazy : (Expr -&gt; Expr)</div>
<div class="tip" id="fs116">val loop : (Expr -&gt; Expr)</div>
<div class="tip" id="fs117">Multiple items<br />type AutoOpenAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AutoOpenAttribute<br />&#160;&#160;new : path:string -&gt; AutoOpenAttribute<br />&#160;&#160;member Path : string<br /><br />Full name: Microsoft.FSharp.Core.AutoOpenAttribute<br /><br />--------------------<br />new : unit -&gt; AutoOpenAttribute<br />new : path:string -&gt; AutoOpenAttribute</div>
<div class="tip" id="fs118">val True : Expr<br /><br />Full name: LambdaCalculus.Lang.True</div>
<div class="tip" id="fs119">val x : obj</div>
<div class="tip" id="fs120">val y : obj</div>
<div class="tip" id="fs121">Multiple items<br />module Expr<br /><br />from LambdaCalculus<br /><em><br /><br />&#160;Lambda expression functions.</em><br /><br />--------------------<br />type Expr =<br />&#160;&#160;| Variable of Variable<br />&#160;&#160;| Application of (Expr * Expr)<br />&#160;&#160;| Lambda of (Variable * Expr)<br />&#160;&#160;override ToString : unit -&gt; string<br />&#160;&#160;member String : Variable<br /><br />Full name: LambdaCalculus.Expr<br /><em><br /><br />&#160;Lambda expression.</em></div>
<div class="tip" id="fs122">val False : Expr<br /><br />Full name: LambdaCalculus.Lang.False</div>
<div class="tip" id="fs123">val If : Expr<br /><br />Full name: LambdaCalculus.Lang.If</div>
<div class="tip" id="fs124">val b : (obj -&gt; obj -&gt; obj)</div>
<div class="tip" id="fs125">val And : Expr<br /><br />Full name: LambdaCalculus.Lang.And</div>
<div class="tip" id="fs126">val Or : Expr<br /><br />Full name: LambdaCalculus.Lang.Or</div>
<div class="tip" id="fs127">val Zero : Expr<br /><br />Full name: LambdaCalculus.Lang.Zero</div>
<div class="tip" id="fs128">val f : obj</div>
<div class="tip" id="fs129">val One : Expr<br /><br />Full name: LambdaCalculus.Lang.One</div>
<div class="tip" id="fs130">val f : (obj -&gt; obj)</div>
<div class="tip" id="fs131">val Two : Expr<br /><br />Full name: LambdaCalculus.Lang.Two</div>
<div class="tip" id="fs132">val Three : Expr<br /><br />Full name: LambdaCalculus.Lang.Three</div>
<div class="tip" id="fs133">val Four : Expr<br /><br />Full name: LambdaCalculus.Lang.Four</div>
<div class="tip" id="fs134">val Five : Expr<br /><br />Full name: LambdaCalculus.Lang.Five</div>
<div class="tip" id="fs135">val Six : Expr<br /><br />Full name: LambdaCalculus.Lang.Six</div>
<div class="tip" id="fs136">val Seven : Expr<br /><br />Full name: LambdaCalculus.Lang.Seven</div>
<div class="tip" id="fs137">val Eight : Expr<br /><br />Full name: LambdaCalculus.Lang.Eight</div>
<div class="tip" id="fs138">val Nine : Expr<br /><br />Full name: LambdaCalculus.Lang.Nine</div>
<div class="tip" id="fs139">val Ten : Expr<br /><br />Full name: LambdaCalculus.Lang.Ten</div>
<div class="tip" id="fs140">val Succ : Expr<br /><br />Full name: LambdaCalculus.Lang.Succ</div>
<div class="tip" id="fs141">val n : ((obj -&gt; obj) -&gt; obj -&gt; obj)</div>
<div class="tip" id="fs142">val Plus : Expr<br /><br />Full name: LambdaCalculus.Lang.Plus</div>
<div class="tip" id="fs143">val m : (obj -&gt; obj -&gt; obj)</div>
<div class="tip" id="fs144">val n : (obj -&gt; obj -&gt; obj)</div>
<div class="tip" id="fs145">val Mult : Expr<br /><br />Full name: LambdaCalculus.Lang.Mult</div>
<div class="tip" id="fs146">val m : (obj -&gt; obj)</div>
<div class="tip" id="fs147">val n : (obj -&gt; obj)</div>
<div class="tip" id="fs148">val Y : Expr<br /><br />Full name: LambdaCalculus.Lang.Y<br /><em><br /><br />&#160;Y-combinator for recursion</em></div>
<div class="tip" id="fs149">module Program<br /><br />from LambdaCalculus</div>
<div class="tip" id="fs150">Multiple items<br />type EntryPointAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; EntryPointAttribute<br /><br />Full name: Microsoft.FSharp.Core.EntryPointAttribute<br /><br />--------------------<br />new : unit -&gt; EntryPointAttribute</div>
<div class="tip" id="fs151">val main : argv:string [] -&gt; int<br /><br />Full name: LambdaCalculus.Program.main</div>
<div class="tip" id="fs152">val argv : string []</div>
<div class="tip" id="fs153">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs154">property Console.OutputEncoding: Text.Encoding</div>
<div class="tip" id="fs155">namespace System.Text</div>
<div class="tip" id="fs156">type Encoding =<br />&#160;&#160;member BodyName : string<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CodePage : int<br />&#160;&#160;member DecoderFallback : DecoderFallback with get, set<br />&#160;&#160;member EncoderFallback : EncoderFallback with get, set<br />&#160;&#160;member EncodingName : string<br />&#160;&#160;member Equals : value:obj -&gt; bool<br />&#160;&#160;member GetByteCount : chars:char[] -&gt; int + 3 overloads<br />&#160;&#160;member GetBytes : chars:char[] -&gt; byte[] + 5 overloads<br />&#160;&#160;member GetCharCount : bytes:byte[] -&gt; int + 2 overloads<br />&#160;&#160;...<br /><br />Full name: System.Text.Encoding</div>
<div class="tip" id="fs157">property Text.Encoding.Unicode: Text.Encoding</div>
<div class="tip" id="fs158">val IsZero : Expr</div>
<div class="tip" id="fs159">val Pred : Expr</div>
<div class="tip" id="fs160">val TriangleNonRecursive : Expr</div>
<div class="tip" id="fs161">val TriangleRecursive : Expr</div>
<div class="tip" id="fs162">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>

