<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
<span class="l">74: </span>
<span class="l">75: </span>
<span class="l">76: </span>
<span class="l">77: </span>
<span class="l">78: </span>
<span class="l">79: </span>
<span class="l">80: </span>
<span class="l">81: </span>
<span class="l">82: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Net</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">Net</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">Mail</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 7)" onmouseover="showTip(event, 'fs1', 7)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="i">Threading</span>

<span class="c">/// from http://msdn.microsoft.com/en-us/magazine/cc163467.aspx</span>
<span class="k">type</span> <span class="k">internal</span> <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="t">AsyncResultNoResult</span>(<span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="i">callback</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="t">AsyncCallback</span>, <span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="i">state</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="t">obj</span>) <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="i">statePending</span> <span class="o">=</span> <span class="n">0</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="i">stateCompletedSync</span> <span class="o">=</span> <span class="n">1</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="i">stateCompletedAsync</span> <span class="o">=</span> <span class="n">2</span>
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="v">completedState</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 18)" onmouseover="showTip(event, 'fs10', 18)" class="i">statePending</span>
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="v">waitHandle</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="t">ManualResetEvent</span> <span class="o">=</span> <span class="k">null</span>
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs16', 21)" onmouseover="showTip(event, 'fs16', 21)" class="v">resultException</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="t">exn</span> <span class="o">=</span> <span class="k">null</span>
    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="t">IAsyncResult</span> <span class="k">with</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs19', 24)" onmouseover="showTip(event, 'fs19', 24)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 25)" onmouseover="showTip(event, 'fs20', 25)" class="i">AsyncState</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 26)" onmouseover="showTip(event, 'fs8', 26)" class="i">state</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs19', 27)" onmouseover="showTip(event, 'fs19', 27)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 28)" onmouseover="showTip(event, 'fs21', 28)" class="i">AsyncWaitHandle</span> <span class="o">=</span> 
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs14', 29)" onmouseover="showTip(event, 'fs14', 29)" class="v">waitHandle</span> <span class="o">=</span> <span class="k">null</span> <span class="k">then</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 30)" onmouseover="showTip(event, 'fs22', 30)" class="i">isDone</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="i">x</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs18', 32)" onmouseover="showTip(event, 'fs18', 32)" class="t">IAsyncResult</span>)<span class="o">.</span><span class="i">IsCompleted</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 33)" onmouseover="showTip(event, 'fs23', 33)" class="i">mre</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs15', 34)" onmouseover="showTip(event, 'fs15', 34)" class="t">ManualResetEvent</span>(<span onmouseout="hideTip(event, 'fs22', 35)" onmouseover="showTip(event, 'fs22', 35)" class="i">isDone</span>)
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs24', 36)" onmouseover="showTip(event, 'fs24', 36)" class="t">Interlocked</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 37)" onmouseover="showTip(event, 'fs25', 37)" class="f">CompareExchange</span>(<span class="o">&amp;</span><span onmouseout="hideTip(event, 'fs14', 38)" onmouseover="showTip(event, 'fs14', 38)" class="v">waitHandle</span>, <span onmouseout="hideTip(event, 'fs23', 39)" onmouseover="showTip(event, 'fs23', 39)" class="i">mre</span>, <span class="k">null</span>) <span class="o">&lt;&gt;</span> <span class="k">null</span>
                    <span class="k">then</span> <span onmouseout="hideTip(event, 'fs23', 40)" onmouseover="showTip(event, 'fs23', 40)" class="i">mre</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 41)" onmouseover="showTip(event, 'fs26', 41)" class="f">Close</span>()
                    <span class="k">else</span>
                        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs27', 42)" onmouseover="showTip(event, 'fs27', 42)" class="f">not</span> <span onmouseout="hideTip(event, 'fs22', 43)" onmouseover="showTip(event, 'fs22', 43)" class="i">isDone</span> <span class="o">&amp;&amp;</span> (<span onmouseout="hideTip(event, 'fs19', 44)" onmouseover="showTip(event, 'fs19', 44)" class="i">x</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs18', 45)" onmouseover="showTip(event, 'fs18', 45)" class="t">IAsyncResult</span>)<span class="o">.</span><span class="i">IsCompleted</span>
                            <span class="k">then</span> <span onmouseout="hideTip(event, 'fs14', 46)" onmouseover="showTip(event, 'fs14', 46)" class="v">waitHandle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 47)" onmouseover="showTip(event, 'fs28', 47)" class="f">Set</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 48)" onmouseover="showTip(event, 'fs29', 48)" class="f">ignore</span>
            <span class="k">upcast</span> <span onmouseout="hideTip(event, 'fs14', 49)" onmouseover="showTip(event, 'fs14', 49)" class="v">waitHandle</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs19', 50)" onmouseover="showTip(event, 'fs19', 50)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 51)" onmouseover="showTip(event, 'fs30', 51)" class="i">CompletedSynchronously</span> <span class="o">=</span> 
            <span onmouseout="hideTip(event, 'fs31', 52)" onmouseover="showTip(event, 'fs31', 52)" class="t">Thread</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 53)" onmouseover="showTip(event, 'fs32', 53)" class="f">VolatileRead</span>(<span class="o">&amp;</span><span onmouseout="hideTip(event, 'fs13', 54)" onmouseover="showTip(event, 'fs13', 54)" class="v">completedState</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 55)" onmouseover="showTip(event, 'fs11', 55)" class="i">stateCompletedSync</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs19', 56)" onmouseover="showTip(event, 'fs19', 56)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 57)" onmouseover="showTip(event, 'fs33', 57)" class="i">IsCompleted</span> <span class="o">=</span> 
            <span onmouseout="hideTip(event, 'fs31', 58)" onmouseover="showTip(event, 'fs31', 58)" class="t">Thread</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 59)" onmouseover="showTip(event, 'fs32', 59)" class="f">VolatileRead</span>(<span class="o">&amp;</span><span onmouseout="hideTip(event, 'fs13', 60)" onmouseover="showTip(event, 'fs13', 60)" class="v">completedState</span>) <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs10', 61)" onmouseover="showTip(event, 'fs10', 61)" class="i">statePending</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs19', 62)" onmouseover="showTip(event, 'fs19', 62)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 63)" onmouseover="showTip(event, 'fs34', 63)" class="f">SetAsCompleted</span>(<span onmouseout="hideTip(event, 'fs35', 64)" onmouseover="showTip(event, 'fs35', 64)" class="i">e</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs17', 65)" onmouseover="showTip(event, 'fs17', 65)" class="t">exn</span>, <span onmouseout="hideTip(event, 'fs36', 66)" onmouseover="showTip(event, 'fs36', 66)" class="i">completedSynchronously</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs37', 67)" onmouseover="showTip(event, 'fs37', 67)" class="t">bool</span>) <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs16', 68)" onmouseover="showTip(event, 'fs16', 68)" class="v">resultException</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs35', 69)" onmouseover="showTip(event, 'fs35', 69)" class="i">e</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 70)" onmouseover="showTip(event, 'fs38', 70)" class="i">prevState</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 71)" onmouseover="showTip(event, 'fs24', 71)" class="t">Interlocked</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 72)" onmouseover="showTip(event, 'fs39', 72)" class="f">Exchange</span>(<span class="o">&amp;</span><span onmouseout="hideTip(event, 'fs13', 73)" onmouseover="showTip(event, 'fs13', 73)" class="v">completedState</span>, <span class="k">if</span> <span onmouseout="hideTip(event, 'fs36', 74)" onmouseover="showTip(event, 'fs36', 74)" class="i">completedSynchronously</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs11', 75)" onmouseover="showTip(event, 'fs11', 75)" class="i">stateCompletedSync</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs12', 76)" onmouseover="showTip(event, 'fs12', 76)" class="i">stateCompletedAsync</span>)
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs38', 77)" onmouseover="showTip(event, 'fs38', 77)" class="i">prevState</span> <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs10', 78)" onmouseover="showTip(event, 'fs10', 78)" class="i">statePending</span>
            <span class="k">then</span> <span onmouseout="hideTip(event, 'fs40', 79)" onmouseover="showTip(event, 'fs40', 79)" class="f">raise</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs41', 80)" onmouseover="showTip(event, 'fs41', 80)" class="t">InvalidOperationException</span>(<span class="s">&quot;You can set a result only once&quot;</span>)
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs14', 81)" onmouseover="showTip(event, 'fs14', 81)" class="v">waitHandle</span> <span class="o">&lt;&gt;</span> <span class="k">null</span>
            <span class="k">then</span> <span onmouseout="hideTip(event, 'fs14', 82)" onmouseover="showTip(event, 'fs14', 82)" class="v">waitHandle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 83)" onmouseover="showTip(event, 'fs28', 83)" class="f">Set</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 84)" onmouseover="showTip(event, 'fs29', 84)" class="f">ignore</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs6', 85)" onmouseover="showTip(event, 'fs6', 85)" class="i">callback</span> <span class="o">&lt;&gt;</span> <span class="k">null</span>
            <span class="k">then</span> <span onmouseout="hideTip(event, 'fs6', 86)" onmouseover="showTip(event, 'fs6', 86)" class="i">callback</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 87)" onmouseover="showTip(event, 'fs42', 87)" class="f">Invoke</span>(<span onmouseout="hideTip(event, 'fs19', 88)" onmouseover="showTip(event, 'fs19', 88)" class="i">x</span>)
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs19', 89)" onmouseover="showTip(event, 'fs19', 89)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 90)" onmouseover="showTip(event, 'fs43', 90)" class="f">EndInvoke</span>() <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 91)" onmouseover="showTip(event, 'fs44', 91)" class="i">this</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 92)" onmouseover="showTip(event, 'fs19', 92)" class="i">x</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs18', 93)" onmouseover="showTip(event, 'fs18', 93)" class="t">IAsyncResult</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs27', 94)" onmouseover="showTip(event, 'fs27', 94)" class="f">not</span> <span onmouseout="hideTip(event, 'fs44', 95)" onmouseover="showTip(event, 'fs44', 95)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 96)" onmouseover="showTip(event, 'fs45', 96)" class="i">IsCompleted</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs44', 97)" onmouseover="showTip(event, 'fs44', 97)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 98)" onmouseover="showTip(event, 'fs46', 98)" class="i">AsyncWaitHandle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 99)" onmouseover="showTip(event, 'fs47', 99)" class="f">WaitOne</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 100)" onmouseover="showTip(event, 'fs29', 100)" class="f">ignore</span>
            <span onmouseout="hideTip(event, 'fs44', 101)" onmouseover="showTip(event, 'fs44', 101)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 102)" onmouseover="showTip(event, 'fs46', 102)" class="i">AsyncWaitHandle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 103)" onmouseover="showTip(event, 'fs26', 103)" class="f">Close</span>()
            <span onmouseout="hideTip(event, 'fs14', 104)" onmouseover="showTip(event, 'fs14', 104)" class="v">waitHandle</span> <span class="o">&lt;-</span> <span class="k">null</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs16', 105)" onmouseover="showTip(event, 'fs16', 105)" class="v">resultException</span> <span class="o">&lt;&gt;</span> <span class="k">null</span>
            <span class="k">then</span> <span onmouseout="hideTip(event, 'fs40', 106)" onmouseover="showTip(event, 'fs40', 106)" class="f">raise</span> <span onmouseout="hideTip(event, 'fs16', 107)" onmouseover="showTip(event, 'fs16', 107)" class="v">resultException</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs48', 108)" onmouseover="showTip(event, 'fs48', 108)" class="t">SmtpClient</span> <span class="k">with</span>
    <span class="k">member</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs49', 109)" onmouseover="showTip(event, 'fs49', 109)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 110)" onmouseover="showTip(event, 'fs50', 110)" class="f">GetAsyncResult</span>(<span onmouseout="hideTip(event, 'fs6', 111)" onmouseover="showTip(event, 'fs6', 111)" class="i">callback</span>, <span onmouseout="hideTip(event, 'fs51', 112)" onmouseover="showTip(event, 'fs51', 112)" class="i">state</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs18', 113)" onmouseover="showTip(event, 'fs18', 113)" class="t">IAsyncResult</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs52', 114)" onmouseover="showTip(event, 'fs52', 114)" class="i">r</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 115)" onmouseover="showTip(event, 'fs5', 115)" class="t">AsyncResultNoResult</span>(<span onmouseout="hideTip(event, 'fs6', 116)" onmouseover="showTip(event, 'fs6', 116)" class="i">callback</span>, <span onmouseout="hideTip(event, 'fs51', 117)" onmouseover="showTip(event, 'fs51', 117)" class="i">state</span>)
        <span onmouseout="hideTip(event, 'fs49', 118)" onmouseover="showTip(event, 'fs49', 118)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 119)" onmouseover="showTip(event, 'fs53', 119)" class="i">SendCompleted</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs54', 120)" onmouseover="showTip(event, 'fs54', 120)" class="t">Event</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 121)" onmouseover="showTip(event, 'fs55', 121)" class="f">add</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs56', 122)" onmouseover="showTip(event, 'fs56', 122)" class="i">args</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs52', 123)" onmouseover="showTip(event, 'fs52', 123)" class="i">r</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 124)" onmouseover="showTip(event, 'fs57', 124)" class="f">SetAsCompleted</span>(<span onmouseout="hideTip(event, 'fs56', 125)" onmouseover="showTip(event, 'fs56', 125)" class="i">args</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 126)" onmouseover="showTip(event, 'fs58', 126)" class="i">Error</span>, <span class="k">false</span>))
        <span class="k">upcast</span> <span onmouseout="hideTip(event, 'fs52', 127)" onmouseover="showTip(event, 'fs52', 127)" class="i">r</span>
        
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs49', 128)" onmouseover="showTip(event, 'fs49', 128)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 129)" onmouseover="showTip(event, 'fs59', 129)" class="f">BeginSend</span>(<span onmouseout="hideTip(event, 'fs60', 130)" onmouseover="showTip(event, 'fs60', 130)" class="i">message</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs61', 131)" onmouseover="showTip(event, 'fs61', 131)" class="t">MailMessage</span>, <span onmouseout="hideTip(event, 'fs6', 132)" onmouseover="showTip(event, 'fs6', 132)" class="i">callback</span>, <span onmouseout="hideTip(event, 'fs51', 133)" onmouseover="showTip(event, 'fs51', 133)" class="i">state</span>) <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs62', 134)" onmouseover="showTip(event, 'fs62', 134)" class="i">r</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 135)" onmouseover="showTip(event, 'fs49', 135)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 136)" onmouseover="showTip(event, 'fs63', 136)" class="f">GetAsyncResult</span>(<span onmouseout="hideTip(event, 'fs6', 137)" onmouseover="showTip(event, 'fs6', 137)" class="i">callback</span>, <span onmouseout="hideTip(event, 'fs51', 138)" onmouseover="showTip(event, 'fs51', 138)" class="i">state</span>)
        <span onmouseout="hideTip(event, 'fs49', 139)" onmouseover="showTip(event, 'fs49', 139)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 140)" onmouseover="showTip(event, 'fs64', 140)" class="f">SendAsync</span>(<span onmouseout="hideTip(event, 'fs60', 141)" onmouseover="showTip(event, 'fs60', 141)" class="i">message</span>, <span class="k">null</span>)
        <span onmouseout="hideTip(event, 'fs62', 142)" onmouseover="showTip(event, 'fs62', 142)" class="i">r</span>

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs49', 143)" onmouseover="showTip(event, 'fs49', 143)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 144)" onmouseover="showTip(event, 'fs65', 144)" class="f">BeginSend</span>(<span onmouseout="hideTip(event, 'fs66', 145)" onmouseover="showTip(event, 'fs66', 145)" class="i">from</span>, <span onmouseout="hideTip(event, 'fs67', 146)" onmouseover="showTip(event, 'fs67', 146)" class="i">recipients</span>, <span onmouseout="hideTip(event, 'fs68', 147)" onmouseover="showTip(event, 'fs68', 147)" class="i">subject</span>, <span onmouseout="hideTip(event, 'fs69', 148)" onmouseover="showTip(event, 'fs69', 148)" class="i">body</span>, <span onmouseout="hideTip(event, 'fs6', 149)" onmouseover="showTip(event, 'fs6', 149)" class="i">callback</span>, <span onmouseout="hideTip(event, 'fs51', 150)" onmouseover="showTip(event, 'fs51', 150)" class="i">state</span>) <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs62', 151)" onmouseover="showTip(event, 'fs62', 151)" class="i">r</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 152)" onmouseover="showTip(event, 'fs49', 152)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 153)" onmouseover="showTip(event, 'fs63', 153)" class="f">GetAsyncResult</span>(<span onmouseout="hideTip(event, 'fs6', 154)" onmouseover="showTip(event, 'fs6', 154)" class="i">callback</span>, <span onmouseout="hideTip(event, 'fs51', 155)" onmouseover="showTip(event, 'fs51', 155)" class="i">state</span>)
        <span onmouseout="hideTip(event, 'fs49', 156)" onmouseover="showTip(event, 'fs49', 156)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 157)" onmouseover="showTip(event, 'fs64', 157)" class="f">SendAsync</span>(<span onmouseout="hideTip(event, 'fs66', 158)" onmouseover="showTip(event, 'fs66', 158)" class="i">from</span>, <span onmouseout="hideTip(event, 'fs67', 159)" onmouseover="showTip(event, 'fs67', 159)" class="i">recipients</span>, <span onmouseout="hideTip(event, 'fs68', 160)" onmouseover="showTip(event, 'fs68', 160)" class="i">subject</span>, <span onmouseout="hideTip(event, 'fs69', 161)" onmouseover="showTip(event, 'fs69', 161)" class="i">body</span>, <span class="k">null</span>)
        <span onmouseout="hideTip(event, 'fs62', 162)" onmouseover="showTip(event, 'fs62', 162)" class="i">r</span>

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs49', 163)" onmouseover="showTip(event, 'fs49', 163)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 164)" onmouseover="showTip(event, 'fs70', 164)" class="f">EndSend</span>(<span onmouseout="hideTip(event, 'fs71', 165)" onmouseover="showTip(event, 'fs71', 165)" class="i">result</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs18', 166)" onmouseover="showTip(event, 'fs18', 166)" class="t">IAsyncResult</span>) <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs72', 167)" onmouseover="showTip(event, 'fs72', 167)" class="i">result</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs72', 168)" onmouseover="showTip(event, 'fs72', 168)" class="i">result</span> <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs5', 169)" onmouseover="showTip(event, 'fs5', 169)" class="t">AsyncResultNoResult</span>
        <span onmouseout="hideTip(event, 'fs72', 170)" onmouseover="showTip(event, 'fs72', 170)" class="i">result</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 171)" onmouseover="showTip(event, 'fs73', 171)" class="f">EndInvoke</span>()

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs49', 172)" onmouseover="showTip(event, 'fs49', 172)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 173)" onmouseover="showTip(event, 'fs74', 173)" class="f">AsyncSend</span>(<span onmouseout="hideTip(event, 'fs60', 174)" onmouseover="showTip(event, 'fs60', 174)" class="i">message</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs61', 175)" onmouseover="showTip(event, 'fs61', 175)" class="t">MailMessage</span>) <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs75', 176)" onmouseover="showTip(event, 'fs75', 176)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs76', 177)" onmouseover="showTip(event, 'fs76', 177)" class="f">FromBeginEnd</span>((<span class="k">fun</span>(<span onmouseout="hideTip(event, 'fs77', 178)" onmouseover="showTip(event, 'fs77', 178)" class="i">iar</span>,<span onmouseout="hideTip(event, 'fs8', 179)" onmouseover="showTip(event, 'fs8', 179)" class="i">state</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs49', 180)" onmouseover="showTip(event, 'fs49', 180)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs78', 181)" onmouseover="showTip(event, 'fs78', 181)" class="f">BeginSend</span>(<span onmouseout="hideTip(event, 'fs60', 182)" onmouseover="showTip(event, 'fs60', 182)" class="i">message</span>, <span onmouseout="hideTip(event, 'fs77', 183)" onmouseover="showTip(event, 'fs77', 183)" class="i">iar</span>, <span onmouseout="hideTip(event, 'fs8', 184)" onmouseover="showTip(event, 'fs8', 184)" class="i">state</span>)), <span onmouseout="hideTip(event, 'fs49', 185)" onmouseover="showTip(event, 'fs49', 185)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 186)" onmouseover="showTip(event, 'fs79', 186)" class="f">EndSend</span>, <span onmouseout="hideTip(event, 'fs49', 187)" onmouseover="showTip(event, 'fs49', 187)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs80', 188)" onmouseover="showTip(event, 'fs80', 188)" class="f">SendAsyncCancel</span>)

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs49', 189)" onmouseover="showTip(event, 'fs49', 189)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 190)" onmouseover="showTip(event, 'fs81', 190)" class="f">AsyncSend</span>(<span onmouseout="hideTip(event, 'fs66', 191)" onmouseover="showTip(event, 'fs66', 191)" class="i">from</span>, <span onmouseout="hideTip(event, 'fs67', 192)" onmouseover="showTip(event, 'fs67', 192)" class="i">recipients</span>, <span onmouseout="hideTip(event, 'fs68', 193)" onmouseover="showTip(event, 'fs68', 193)" class="i">subject</span>, <span onmouseout="hideTip(event, 'fs69', 194)" onmouseover="showTip(event, 'fs69', 194)" class="i">body</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs75', 195)" onmouseover="showTip(event, 'fs75', 195)" class="t">Async</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs82', 196)" onmouseover="showTip(event, 'fs82', 196)" class="t">unit</span><span class="o">&gt;</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs75', 197)" onmouseover="showTip(event, 'fs75', 197)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs76', 198)" onmouseover="showTip(event, 'fs76', 198)" class="f">FromBeginEnd</span>((<span class="k">fun</span>(<span onmouseout="hideTip(event, 'fs77', 199)" onmouseover="showTip(event, 'fs77', 199)" class="i">iar</span>,<span onmouseout="hideTip(event, 'fs8', 200)" onmouseover="showTip(event, 'fs8', 200)" class="i">state</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs49', 201)" onmouseover="showTip(event, 'fs49', 201)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs78', 202)" onmouseover="showTip(event, 'fs78', 202)" class="f">BeginSend</span>(<span onmouseout="hideTip(event, 'fs66', 203)" onmouseover="showTip(event, 'fs66', 203)" class="i">from</span>, <span onmouseout="hideTip(event, 'fs67', 204)" onmouseover="showTip(event, 'fs67', 204)" class="i">recipients</span>, <span onmouseout="hideTip(event, 'fs68', 205)" onmouseover="showTip(event, 'fs68', 205)" class="i">subject</span>, <span onmouseout="hideTip(event, 'fs69', 206)" onmouseover="showTip(event, 'fs69', 206)" class="i">body</span>, <span onmouseout="hideTip(event, 'fs77', 207)" onmouseover="showTip(event, 'fs77', 207)" class="i">iar</span>, <span onmouseout="hideTip(event, 'fs8', 208)" onmouseover="showTip(event, 'fs8', 208)" class="i">state</span>)), <span onmouseout="hideTip(event, 'fs49', 209)" onmouseover="showTip(event, 'fs49', 209)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 210)" onmouseover="showTip(event, 'fs79', 210)" class="f">EndSend</span>, <span onmouseout="hideTip(event, 'fs49', 211)" onmouseover="showTip(event, 'fs49', 211)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs80', 212)" onmouseover="showTip(event, 'fs80', 212)" class="f">SendAsyncCancel</span>)

<span class="c">(*</span>
<span class="c">// silly example</span>
<span class="c">async { </span>
<span class="c">    let credentials = NetworkCredential(&quot;you@gmail.com&quot;, &quot;yourpassword&quot;)</span>
<span class="c">    use smtp = new SmtpClient(&quot;smtp.gmail.com&quot;, 587, EnableSsl = true, Credentials = credentials)</span>
<span class="c">    do! smtp.AsyncSend(&quot;you@gmail.com&quot;, &quot;your.email@gmail.com&quot;, &quot;this subject&quot;, &quot;cucamonga&quot;)</span>
<span class="c">} |&gt; Async.RunSynchronously</span>
<span class="c">*)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Net</div>
<div class="tip" id="fs3">namespace System.Net.Mail</div>
<div class="tip" id="fs4">namespace System.Threading</div>
<div class="tip" id="fs5">Multiple items<br />type internal AsyncResultNoResult =<br />&#160;&#160;interface IAsyncResult<br />&#160;&#160;new : callback:AsyncCallback * state:obj -&gt; AsyncResultNoResult<br />&#160;&#160;member EndInvoke : unit -&gt; unit<br />&#160;&#160;member SetAsCompleted : e:exn * completedSynchronously:bool -&gt; unit<br /><br />Full name: Script.AsyncResultNoResult<br /><em><br /><br />&#160;from http://msdn.microsoft.com/en-us/magazine/cc163467.aspx</em><br /><br />--------------------<br />internal new : callback:AsyncCallback * state:obj -&gt; AsyncResultNoResult</div>
<div class="tip" id="fs6">val callback : AsyncCallback</div>
<div class="tip" id="fs7">type AsyncCallback =<br />&#160;&#160;delegate of IAsyncResult -&gt; unit<br /><br />Full name: System.AsyncCallback</div>
<div class="tip" id="fs8">val state : obj</div>
<div class="tip" id="fs9">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs10">val statePending : int</div>
<div class="tip" id="fs11">val stateCompletedSync : int</div>
<div class="tip" id="fs12">val stateCompletedAsync : int</div>
<div class="tip" id="fs13">val mutable completedState : int</div>
<div class="tip" id="fs14">val mutable waitHandle : ManualResetEvent</div>
<div class="tip" id="fs15">Multiple items<br />type ManualResetEvent =<br />&#160;&#160;inherit EventWaitHandle<br />&#160;&#160;new : initialState:bool -&gt; ManualResetEvent<br /><br />Full name: System.Threading.ManualResetEvent<br /><br />--------------------<br />ManualResetEvent(initialState: bool) : unit</div>
<div class="tip" id="fs16">val mutable resultException : exn</div>
<div class="tip" id="fs17">type exn = Exception<br /><br />Full name: Microsoft.FSharp.Core.exn</div>
<div class="tip" id="fs18">type IAsyncResult =<br />&#160;&#160;member AsyncState : obj<br />&#160;&#160;member AsyncWaitHandle : WaitHandle<br />&#160;&#160;member CompletedSynchronously : bool<br />&#160;&#160;member IsCompleted : bool<br /><br />Full name: System.IAsyncResult</div>
<div class="tip" id="fs19">val x : AsyncResultNoResult</div>
<div class="tip" id="fs20">override internal AsyncResultNoResult.AsyncState : obj<br /><br />Full name: Script.AsyncResultNoResult.AsyncState</div>
<div class="tip" id="fs21">override internal AsyncResultNoResult.AsyncWaitHandle : WaitHandle<br /><br />Full name: Script.AsyncResultNoResult.AsyncWaitHandle</div>
<div class="tip" id="fs22">val isDone : bool</div>
<div class="tip" id="fs23">val mre : ManualResetEvent</div>
<div class="tip" id="fs24">type Interlocked =<br />&#160;&#160;static member Add : location1:int * value:int -&gt; int + 1 overload<br />&#160;&#160;static member CompareExchange : location1:int * value:int * comparand:int -&gt; int + 6 overloads<br />&#160;&#160;static member Decrement : location:int -&gt; int + 1 overload<br />&#160;&#160;static member Exchange : location1:int * value:int -&gt; int + 6 overloads<br />&#160;&#160;static member Increment : location:int -&gt; int + 1 overload<br />&#160;&#160;static member Read : location:int64 -&gt; int64<br /><br />Full name: System.Threading.Interlocked</div>
<div class="tip" id="fs25">Interlocked.CompareExchange&lt;&#39;T (requires reference type)&gt;(location1: byref&lt;&#39;T&gt;, value: &#39;T, comparand: &#39;T) : &#39;T<br />Interlocked.CompareExchange(location1: byref&lt;nativeint&gt;, value: nativeint, comparand: nativeint) : nativeint<br />Interlocked.CompareExchange(location1: byref&lt;obj&gt;, value: obj, comparand: obj) : obj<br />Interlocked.CompareExchange(location1: byref&lt;float&gt;, value: float, comparand: float) : float<br />Interlocked.CompareExchange(location1: byref&lt;float32&gt;, value: float32, comparand: float32) : float32<br />Interlocked.CompareExchange(location1: byref&lt;int64&gt;, value: int64, comparand: int64) : int64<br />Interlocked.CompareExchange(location1: byref&lt;int&gt;, value: int, comparand: int) : int</div>
<div class="tip" id="fs26">WaitHandle.Close() : unit</div>
<div class="tip" id="fs27">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs28">EventWaitHandle.Set() : bool</div>
<div class="tip" id="fs29">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>
<div class="tip" id="fs30">override internal AsyncResultNoResult.CompletedSynchronously : bool<br /><br />Full name: Script.AsyncResultNoResult.CompletedSynchronously</div>
<div class="tip" id="fs31">Multiple items<br />type Thread =<br />&#160;&#160;inherit CriticalFinalizerObject<br />&#160;&#160;new : start:ThreadStart -&gt; Thread + 3 overloads<br />&#160;&#160;member Abort : unit -&gt; unit + 1 overload<br />&#160;&#160;member ApartmentState : ApartmentState with get, set<br />&#160;&#160;member CurrentCulture : CultureInfo with get, set<br />&#160;&#160;member CurrentUICulture : CultureInfo with get, set<br />&#160;&#160;member DisableComObjectEagerCleanup : unit -&gt; unit<br />&#160;&#160;member ExecutionContext : ExecutionContext<br />&#160;&#160;member GetApartmentState : unit -&gt; ApartmentState<br />&#160;&#160;member GetCompressedStack : unit -&gt; CompressedStack<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.Threading.Thread<br /><br />--------------------<br />Thread(start: ThreadStart) : unit<br />Thread(start: ParameterizedThreadStart) : unit<br />Thread(start: ThreadStart, maxStackSize: int) : unit<br />Thread(start: ParameterizedThreadStart, maxStackSize: int) : unit</div>
<div class="tip" id="fs32">Thread.VolatileRead(address: byref&lt;obj&gt;) : obj<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Thread.VolatileRead(address: byref&lt;float&gt;) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Thread.VolatileRead(address: byref&lt;float32&gt;) : float32<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Thread.VolatileRead(address: byref&lt;uint64&gt;) : uint64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Thread.VolatileRead(address: byref&lt;unativeint&gt;) : unativeint<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Thread.VolatileRead(address: byref&lt;nativeint&gt;) : nativeint<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Thread.VolatileRead(address: byref&lt;uint32&gt;) : uint32<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Thread.VolatileRead(address: byref&lt;uint16&gt;) : uint16<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Thread.VolatileRead(address: byref&lt;sbyte&gt;) : sbyte<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Thread.VolatileRead(address: byref&lt;int64&gt;) : int64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs33">override internal AsyncResultNoResult.IsCompleted : bool<br /><br />Full name: Script.AsyncResultNoResult.IsCompleted</div>
<div class="tip" id="fs34">member internal AsyncResultNoResult.SetAsCompleted : e:exn * completedSynchronously:bool -&gt; unit<br /><br />Full name: Script.AsyncResultNoResult.SetAsCompleted</div>
<div class="tip" id="fs35">val e : exn</div>
<div class="tip" id="fs36">val completedSynchronously : bool</div>
<div class="tip" id="fs37">type bool = Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs38">val prevState : int</div>
<div class="tip" id="fs39">Interlocked.Exchange&lt;&#39;T (requires reference type)&gt;(location1: byref&lt;&#39;T&gt;, value: &#39;T) : &#39;T<br />Interlocked.Exchange(location1: byref&lt;nativeint&gt;, value: nativeint) : nativeint<br />Interlocked.Exchange(location1: byref&lt;obj&gt;, value: obj) : obj<br />Interlocked.Exchange(location1: byref&lt;float&gt;, value: float) : float<br />Interlocked.Exchange(location1: byref&lt;float32&gt;, value: float32) : float32<br />Interlocked.Exchange(location1: byref&lt;int64&gt;, value: int64) : int64<br />Interlocked.Exchange(location1: byref&lt;int&gt;, value: int) : int</div>
<div class="tip" id="fs40">val raise : exn:Exception -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.raise</div>
<div class="tip" id="fs41">Multiple items<br />type InvalidOperationException =<br />&#160;&#160;inherit SystemException<br />&#160;&#160;new : unit -&gt; InvalidOperationException + 2 overloads<br /><br />Full name: System.InvalidOperationException<br /><br />--------------------<br />InvalidOperationException() : unit<br />InvalidOperationException(message: string) : unit<br />InvalidOperationException(message: string, innerException: exn) : unit</div>
<div class="tip" id="fs42">AsyncCallback.Invoke(ar: IAsyncResult) : unit</div>
<div class="tip" id="fs43">member internal AsyncResultNoResult.EndInvoke : unit -&gt; unit<br /><br />Full name: Script.AsyncResultNoResult.EndInvoke</div>
<div class="tip" id="fs44">val this : IAsyncResult</div>
<div class="tip" id="fs45">property IAsyncResult.IsCompleted: bool</div>
<div class="tip" id="fs46">property IAsyncResult.AsyncWaitHandle: WaitHandle</div>
<div class="tip" id="fs47">WaitHandle.WaitOne() : bool<br />WaitHandle.WaitOne(timeout: TimeSpan) : bool<br />WaitHandle.WaitOne(millisecondsTimeout: int) : bool<br />WaitHandle.WaitOne(timeout: TimeSpan, exitContext: bool) : bool<br />WaitHandle.WaitOne(millisecondsTimeout: int, exitContext: bool) : bool</div>
<div class="tip" id="fs48">Multiple items<br />type SmtpClient =<br />&#160;&#160;new : unit -&gt; SmtpClient + 2 overloads<br />&#160;&#160;member ClientCertificates : X509CertificateCollection<br />&#160;&#160;member Credentials : ICredentialsByHost with get, set<br />&#160;&#160;member DeliveryMethod : SmtpDeliveryMethod with get, set<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member EnableSsl : bool with get, set<br />&#160;&#160;member Host : string with get, set<br />&#160;&#160;member PickupDirectoryLocation : string with get, set<br />&#160;&#160;member Port : int with get, set<br />&#160;&#160;member Send : message:MailMessage -&gt; unit + 1 overload<br />&#160;&#160;...<br /><br />Full name: System.Net.Mail.SmtpClient<br /><br />--------------------<br />SmtpClient() : unit<br />SmtpClient(host: string) : unit<br />SmtpClient(host: string, port: int) : unit</div>
<div class="tip" id="fs49">val x : SmtpClient</div>
<div class="tip" id="fs50">member private SmtpClient.GetAsyncResult : callback:AsyncCallback * state:&#39;a -&gt; IAsyncResult<br /><br />Full name: Script.GetAsyncResult</div>
<div class="tip" id="fs51">val state : &#39;a</div>
<div class="tip" id="fs52">val r : AsyncResultNoResult</div>
<div class="tip" id="fs53">event SmtpClient.SendCompleted: IEvent&lt;SendCompletedEventHandler,ComponentModel.AsyncCompletedEventArgs&gt;</div>
<div class="tip" id="fs54">Multiple items<br />module Event<br /><br />from Microsoft.FSharp.Control<br /><br />--------------------<br />type Event&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; Event&lt;&#39;T&gt;<br />&#160;&#160;member Trigger : arg:&#39;T -&gt; unit<br />&#160;&#160;member Publish : IEvent&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Event&lt;_&gt;<br /><br />--------------------<br />type Event&lt;&#39;Delegate,&#39;Args (requires delegate and &#39;Delegate :&gt; Delegate)&gt; =<br />&#160;&#160;new : unit -&gt; Event&lt;&#39;Delegate,&#39;Args&gt;<br />&#160;&#160;member Trigger : sender:obj * args:&#39;Args -&gt; unit<br />&#160;&#160;member Publish : IEvent&lt;&#39;Delegate,&#39;Args&gt;<br /><br />Full name: Microsoft.FSharp.Control.Event&lt;_,_&gt;<br /><br />--------------------<br />new : unit -&gt; Event&lt;&#39;T&gt;<br /><br />--------------------<br />new : unit -&gt; Event&lt;&#39;Delegate,&#39;Args&gt;</div>
<div class="tip" id="fs55">val add : callback:(&#39;T -&gt; unit) -&gt; sourceEvent:IEvent&lt;&#39;Del,&#39;T&gt; -&gt; unit (requires delegate and &#39;Del :&gt; Delegate)<br /><br />Full name: Microsoft.FSharp.Control.Event.add</div>
<div class="tip" id="fs56">val args : ComponentModel.AsyncCompletedEventArgs</div>
<div class="tip" id="fs57">member internal AsyncResultNoResult.SetAsCompleted : e:exn * completedSynchronously:bool -&gt; unit</div>
<div class="tip" id="fs58">property ComponentModel.AsyncCompletedEventArgs.Error: exn</div>
<div class="tip" id="fs59">member SmtpClient.BeginSend : message:MailMessage * callback:AsyncCallback * state:&#39;a -&gt; IAsyncResult<br /><br />Full name: Script.BeginSend</div>
<div class="tip" id="fs60">val message : MailMessage</div>
<div class="tip" id="fs61">Multiple items<br />type MailMessage =<br />&#160;&#160;new : unit -&gt; MailMessage + 3 overloads<br />&#160;&#160;member AlternateViews : AlternateViewCollection<br />&#160;&#160;member Attachments : AttachmentCollection<br />&#160;&#160;member Bcc : MailAddressCollection<br />&#160;&#160;member Body : string with get, set<br />&#160;&#160;member BodyEncoding : Encoding with get, set<br />&#160;&#160;member CC : MailAddressCollection<br />&#160;&#160;member DeliveryNotificationOptions : DeliveryNotificationOptions with get, set<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member From : MailAddress with get, set<br />&#160;&#160;...<br /><br />Full name: System.Net.Mail.MailMessage<br /><br />--------------------<br />MailMessage() : unit<br />MailMessage(from: string, to: string) : unit<br />MailMessage(from: MailAddress, to: MailAddress) : unit<br />MailMessage(from: string, to: string, subject: string, body: string) : unit</div>
<div class="tip" id="fs62">val r : IAsyncResult</div>
<div class="tip" id="fs63">member private SmtpClient.GetAsyncResult : callback:AsyncCallback * state:&#39;a -&gt; IAsyncResult</div>
<div class="tip" id="fs64">SmtpClient.SendAsync(message: MailMessage, userToken: obj) : unit<br />SmtpClient.SendAsync(from: string, recipients: string, subject: string, body: string, userToken: obj) : unit</div>
<div class="tip" id="fs65">member SmtpClient.BeginSend : from:string * recipients:string * subject:string * body:string * callback:AsyncCallback * state:&#39;a -&gt; IAsyncResult<br /><br />Full name: Script.BeginSend</div>
<div class="tip" id="fs66">val from : string</div>
<div class="tip" id="fs67">val recipients : string</div>
<div class="tip" id="fs68">val subject : string</div>
<div class="tip" id="fs69">val body : string</div>
<div class="tip" id="fs70">member SmtpClient.EndSend : result:IAsyncResult -&gt; unit<br /><br />Full name: Script.EndSend</div>
<div class="tip" id="fs71">val result : IAsyncResult</div>
<div class="tip" id="fs72">val result : AsyncResultNoResult</div>
<div class="tip" id="fs73">member internal AsyncResultNoResult.EndInvoke : unit -&gt; unit</div>
<div class="tip" id="fs74">member SmtpClient.AsyncSend : message:MailMessage -&gt; Async&lt;unit&gt;<br /><br />Full name: Script.AsyncSend</div>
<div class="tip" id="fs75">Multiple items<br />type Async<br />static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member CancelDefaultToken : unit -&gt; unit<br />static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromContinuations : callback:((&#39;T -&gt; unit) * (exn -&gt; unit) * (OperationCanceledException -&gt; unit) -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;<br />static member OnCancel : interruption:(unit -&gt; unit) -&gt; Async&lt;IDisposable&gt;<br />static member Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;<br />static member RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T<br />static member Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;<br />static member Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;<br />static member StartChild : computation:Async&lt;&#39;T&gt; * ?millisecondsTimeout:int -&gt; Async&lt;Async&lt;&#39;T&gt;&gt;<br />static member StartChildAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions -&gt; Async&lt;Task&lt;&#39;T&gt;&gt;<br />static member StartImmediate : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartWithContinuations : computation:Async&lt;&#39;T&gt; * continuation:(&#39;T -&gt; unit) * exceptionContinuation:(exn -&gt; unit) * cancellationContinuation:(OperationCanceledException -&gt; unit) * ?cancellationToken:CancellationToken -&gt; unit<br />static member SwitchToContext : syncContext:SynchronizationContext -&gt; Async&lt;unit&gt;<br />static member SwitchToNewThread : unit -&gt; Async&lt;unit&gt;<br />static member SwitchToThreadPool : unit -&gt; Async&lt;unit&gt;<br />static member TryCancelled : computation:Async&lt;&#39;T&gt; * compensation:(OperationCanceledException -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member CancellationToken : Async&lt;CancellationToken&gt;<br />static member DefaultCancellationToken : CancellationToken<br /><br />Full name: Microsoft.FSharp.Control.Async<br /><br />--------------------<br />type Async&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Async&lt;_&gt;</div>
<div class="tip" id="fs76">static member Async.FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Async.FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Async.FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Async.FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs77">val iar : AsyncCallback</div>
<div class="tip" id="fs78">member SmtpClient.BeginSend : message:MailMessage * callback:AsyncCallback * state:&#39;a -&gt; IAsyncResult<br />member SmtpClient.BeginSend : from:string * recipients:string * subject:string * body:string * callback:AsyncCallback * state:&#39;a -&gt; IAsyncResult</div>
<div class="tip" id="fs79">member SmtpClient.EndSend : result:IAsyncResult -&gt; unit</div>
<div class="tip" id="fs80">SmtpClient.SendAsyncCancel() : unit</div>
<div class="tip" id="fs81">member SmtpClient.AsyncSend : from:string * recipients:string * subject:string * body:string -&gt; Async&lt;unit&gt;<br /><br />Full name: Script.AsyncSend</div>
<div class="tip" id="fs82">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>

