<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">Geo</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">Geo</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Measure</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">Geo</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">Geometries</span>

<span class="c">/// Liste mit id, latitude, longitude</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">liste</span> <span class="o">=</span> [
    <span class="n">1</span>, <span class="n">46.672830</span>, <span class="n">11.061115</span>
    <span class="n">2</span>, <span class="n">46.673184</span>, <span class="n">11.048070</span>
    <span class="n">3</span>, <span class="n">46.640194</span>, <span class="n">11.189862</span>
    <span class="n">4</span>, <span class="n">46.684255</span>, <span class="n">11.050816</span>
    <span class="n">5</span>, <span class="n">46.674576</span>, <span class="n">11.057681</span>
    <span class="n">6</span>, <span class="n">46.672765</span>, <span class="n">11.060170</span>
    <span class="n">7</span>, <span class="n">46.661640</span>, <span class="n">11.159306</span>
    <span class="n">8</span>, <span class="n">46.689201</span>, <span class="n">11.107121</span>
    <span class="n">9</span>, <span class="n">46.657398</span>, <span class="n">11.071416</span>
    <span class="n">10</span>, <span class="n">46.672851</span>, <span class="n">11.060893</span>
    <span class="n">11</span>, <span class="n">46.701102</span>, <span class="n">11.178753</span>
    <span class="n">12</span>, <span class="n">46.684147</span>, <span class="n">11.154034</span>
    <span class="n">13</span>, <span class="n">46.640793</span>, <span class="n">11.071636</span>
]

<span class="c">/// Die Ausgangskoordinate</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">ausgangscoord</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="t">Coordinate</span>(<span class="n">46.6728308564052</span>, <span class="n">11.061115907505155</span>)
<span class="c">/// Der Radius in Meter</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">radius</span> <span class="o">=</span> <span class="n">15000.</span>
<span class="c">/// Ein Kreis von x Kilometer um die Ausgangskoordinate</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">circle</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="t">Circle</span>(<span onmouseout="hideTip(event, 'fs5', 12)" onmouseover="showTip(event, 'fs5', 12)" class="i">ausgangscoord</span>, <span onmouseout="hideTip(event, 'fs7', 13)" onmouseover="showTip(event, 'fs7', 13)" class="i">radius</span>)
<span class="c">/// Die &#228;u&#223;ere Umrandung</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="i">circleBounds</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="i">circle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="f">GetBounds</span>()

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="f">getDistance</span> (<span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="i">coord1</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs6', 19)" onmouseover="showTip(event, 'fs6', 19)" class="t">Coordinate</span>) (<span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="i">coord2</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs6', 21)" onmouseover="showTip(event, 'fs6', 21)" class="t">Coordinate</span>) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="f">abs</span>(<span onmouseout="hideTip(event, 'fs13', 23)" onmouseover="showTip(event, 'fs13', 23)" class="i">coord1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 24)" onmouseover="showTip(event, 'fs16', 24)" class="f">GetBounds</span>()<span class="o">.</span><span class="f">GetLength</span>()<span class="o">.</span><span class="i">Value</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs14', 25)" onmouseover="showTip(event, 'fs14', 25)" class="i">coord2</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="f">GetBounds</span>()<span class="o">.</span><span class="f">GetLength</span>()<span class="o">.</span><span class="i">Value</span>)
<span class="c">//    abs &lt;&lt; int &lt;| (coord1.GetBounds().GetLength().Value - coord2.GetBounds().GetLength().Value) / 1000.    // m?</span>

<span class="c">/// Die gefilterten Koordinaten</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 27)" onmouseover="showTip(event, 'fs17', 27)" class="i">filtededCoords</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs4', 28)" onmouseover="showTip(event, 'fs4', 28)" class="i">liste</span>
    <span class="c">// Umwandlung von (id, latitude, longitude) in (id, Coordinate(latitude, longitude))</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 30)" onmouseover="showTip(event, 'fs19', 30)" class="f">map</span>    (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs20', 31)" onmouseover="showTip(event, 'fs20', 31)" class="i">id</span>, <span onmouseout="hideTip(event, 'fs21', 32)" onmouseover="showTip(event, 'fs21', 32)" class="i">lat</span>, <span onmouseout="hideTip(event, 'fs22', 33)" onmouseover="showTip(event, 'fs22', 33)" class="i">lon</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 34)" onmouseover="showTip(event, 'fs20', 34)" class="i">id</span>, <span onmouseout="hideTip(event, 'fs6', 35)" onmouseover="showTip(event, 'fs6', 35)" class="t">Coordinate</span>(<span onmouseout="hideTip(event, 'fs21', 36)" onmouseover="showTip(event, 'fs21', 36)" class="i">lat</span>, <span onmouseout="hideTip(event, 'fs22', 37)" onmouseover="showTip(event, 'fs22', 37)" class="i">lon</span>))
    <span class="c">// Ist im Umkreis von x Kilometer die jeweilige Koordinate enthalten?</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 38)" onmouseover="showTip(event, 'fs18', 38)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 39)" onmouseover="showTip(event, 'fs23', 39)" class="f">filter</span> (<span onmouseout="hideTip(event, 'fs24', 40)" onmouseover="showTip(event, 'fs24', 40)" class="f">snd</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs10', 41)" onmouseover="showTip(event, 'fs10', 41)" class="i">circleBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 42)" onmouseover="showTip(event, 'fs25', 42)" class="f">Contains</span>)
    <span class="c">// Berechne die Distanz zum Ausgangspunkt</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 43)" onmouseover="showTip(event, 'fs18', 43)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 44)" onmouseover="showTip(event, 'fs19', 44)" class="f">map</span>    (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs20', 45)" onmouseover="showTip(event, 'fs20', 45)" class="i">id</span>, <span onmouseout="hideTip(event, 'fs26', 46)" onmouseover="showTip(event, 'fs26', 46)" class="i">coord</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 47)" onmouseover="showTip(event, 'fs20', 47)" class="i">id</span>, <span onmouseout="hideTip(event, 'fs12', 48)" onmouseover="showTip(event, 'fs12', 48)" class="f">getDistance</span> <span onmouseout="hideTip(event, 'fs5', 49)" onmouseover="showTip(event, 'fs5', 49)" class="i">ausgangscoord</span> <span onmouseout="hideTip(event, 'fs26', 50)" onmouseover="showTip(event, 'fs26', 50)" class="i">coord</span>)
    <span class="c">// Sortiere nach den am n&#228;chsten liegenden</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 51)" onmouseover="showTip(event, 'fs18', 51)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 52)" onmouseover="showTip(event, 'fs27', 52)" class="f">sortBy</span> <span onmouseout="hideTip(event, 'fs24', 53)" onmouseover="showTip(event, 'fs24', 53)" class="f">snd</span>

<span onmouseout="hideTip(event, 'fs17', 54)" onmouseover="showTip(event, 'fs17', 54)" class="i">filtededCoords</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 55)" onmouseover="showTip(event, 'fs18', 55)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 56)" onmouseover="showTip(event, 'fs28', 56)" class="f">iter</span> (<span onmouseout="hideTip(event, 'fs29', 57)" onmouseover="showTip(event, 'fs29', 57)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">&quot;</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace Geo</div>
<div class="tip" id="fs2">namespace Geo.Measure</div>
<div class="tip" id="fs3">namespace Geo.Geometries</div>
<div class="tip" id="fs4">val liste : (int * float * float) list<br /><br />Full name: Script.liste<br /><em><br /><br />&#160;Liste mit id, latitude, longitude</em></div>
<div class="tip" id="fs5">val ausgangscoord : Coordinate<br /><br />Full name: Script.ausgangscoord<br /><em><br /><br />&#160;Die Ausgangskoordinate</em></div>
<div class="tip" id="fs6">Multiple items<br />type Coordinate =<br />&#160;&#160;inherit SpatialObject<br />&#160;&#160;new : unit -&gt; Coordinate + 1 overload<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;member GetBounds : unit -&gt; Envelope<br />&#160;&#160;member GetHashCode : unit -&gt; int + 1 overload<br />&#160;&#160;member Is3D : bool<br />&#160;&#160;member IsMeasured : bool<br />&#160;&#160;member Latitude : float with get, set<br />&#160;&#160;member Longitude : float with get, set<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;static member Parse : coordinate:string -&gt; Coordinate<br />&#160;&#160;...<br /><br />Full name: Geo.Coordinate<br /><br />--------------------<br />Coordinate() : unit<br />Coordinate(latitude: float, longitude: float) : unit</div>
<div class="tip" id="fs7">val radius : float<br /><br />Full name: Script.radius<br /><em><br /><br />&#160;Der Radius in Meter</em></div>
<div class="tip" id="fs8">val circle : Circle<br /><br />Full name: Script.circle<br /><em><br /><br />&#160;Ein Kreis von x Kilometer um die Ausgangskoordinate</em></div>
<div class="tip" id="fs9">Multiple items<br />type Circle =<br />&#160;&#160;inherit Geometry<br />&#160;&#160;new : unit -&gt; Circle + 4 overloads<br />&#160;&#160;member Center : Coordinate with get, set<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;member GetArea : unit -&gt; Area<br />&#160;&#160;member GetBounds : unit -&gt; Envelope<br />&#160;&#160;member GetHashCode : unit -&gt; int + 1 overload<br />&#160;&#160;member GetLength : unit -&gt; Distance<br />&#160;&#160;member Is3D : bool<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member IsMeasured : bool<br />&#160;&#160;...<br /><br />Full name: Geo.Geometries.Circle<br /><br />--------------------<br />Circle() : unit<br />Circle(center: Coordinate, radius: float) : unit<br />Circle(latitiude: float, longitude: float, radius: float) : unit<br />Circle(latitiude: float, longitude: float, elevation: float, radius: float) : unit<br />Circle(latitiude: float, longitude: float, elevation: float, measure: float, radius: float) : unit</div>
<div class="tip" id="fs10">val circleBounds : Envelope<br /><br />Full name: Script.circleBounds<br /><em><br /><br />&#160;Die &#228;u&#223;ere Umrandung</em></div>
<div class="tip" id="fs11">Circle.GetBounds() : Envelope</div>
<div class="tip" id="fs12">val getDistance : coord1:Coordinate -&gt; coord2:Coordinate -&gt; float<br /><br />Full name: Script.getDistance</div>
<div class="tip" id="fs13">val coord1 : Coordinate</div>
<div class="tip" id="fs14">val coord2 : Coordinate</div>
<div class="tip" id="fs15">val abs : value:&#39;T -&gt; &#39;T (requires member Abs)<br /><br />Full name: Microsoft.FSharp.Core.Operators.abs</div>
<div class="tip" id="fs16">Coordinate.GetBounds() : Envelope</div>
<div class="tip" id="fs17">val filtededCoords : (int * float) list<br /><br />Full name: Script.filtededCoords<br /><em><br /><br />&#160;Die gefilterten Koordinaten</em></div>
<div class="tip" id="fs18">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs19">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs20">val id : int</div>
<div class="tip" id="fs21">val lat : float</div>
<div class="tip" id="fs22">val lon : float</div>
<div class="tip" id="fs23">val filter : predicate:(&#39;T -&gt; bool) -&gt; list:&#39;T list -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.filter</div>
<div class="tip" id="fs24">val snd : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T2<br /><br />Full name: Microsoft.FSharp.Core.Operators.snd</div>
<div class="tip" id="fs25">Envelope.Contains(geometry: Abstractions.Interfaces.IGeometry) : bool<br />Envelope.Contains(coordinate: Coordinate) : bool<br />Envelope.Contains(envelope: Envelope) : bool</div>
<div class="tip" id="fs26">val coord : Coordinate</div>
<div class="tip" id="fs27">val sortBy : projection:(&#39;T -&gt; &#39;Key) -&gt; list:&#39;T list -&gt; &#39;T list (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.List.sortBy</div>
<div class="tip" id="fs28">val iter : action:(&#39;T -&gt; unit) -&gt; list:&#39;T list -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.List.iter</div>
<div class="tip" id="fs29">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>

