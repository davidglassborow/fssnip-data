<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">Geo</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">Geo</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Measure</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">Geo</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">Geometries</span>

<span class="c">/// Liste mit id, latitude, longitude</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">liste</span> <span class="o">=</span> [
    <span class="n">1</span>, <span class="n">46.6728308564052</span>, <span class="n">11.061115907505155</span>
    <span class="n">2</span>, <span class="n">46.6728308564052</span>, <span class="n">11.061115907505195</span>
    <span class="n">3</span>, <span class="n">46.6728308564052</span>, <span class="n">11.861115907505155</span>
    <span class="n">4</span>, <span class="n">46.6728308564852</span>, <span class="n">11.061115907505155</span>
    <span class="n">5</span>, <span class="n">56.6728308564052</span>, <span class="n">31.061115907505155</span>
]

<span class="c">/// Die Ausgangskoordinate</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">ausgangscoord</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="t">Coordinate</span>(<span class="n">46.6728308564052</span>, <span class="n">11.061115907505155</span>)
<span class="c">/// Der Radius in Meter</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">radius</span> <span class="o">=</span> <span class="n">1000.</span>
<span class="c">/// Ein Kreis von einem Kilometer um die Ausgangskoordinate</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">circle</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="t">Circle</span>(<span onmouseout="hideTip(event, 'fs5', 12)" onmouseover="showTip(event, 'fs5', 12)" class="i">ausgangscoord</span>, <span onmouseout="hideTip(event, 'fs7', 13)" onmouseover="showTip(event, 'fs7', 13)" class="i">radius</span>)
<span class="c">/// Die &#228;u&#223;ere Umrandung</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="i">circleBounds</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="i">circle</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="f">GetBounds</span>()

<span class="c">/// Die gefilterten Koordinaten</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="i">filtededCoords</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs4', 18)" onmouseover="showTip(event, 'fs4', 18)" class="i">liste</span>
    <span class="c">// Umwandlung von (id, latitude, longitude) in (id, Coordinate(latitude, longitude))</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="f">map</span>    (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="i">id</span>, <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="i">lat</span>, <span onmouseout="hideTip(event, 'fs17', 23)" onmouseover="showTip(event, 'fs17', 23)" class="i">lon</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 24)" onmouseover="showTip(event, 'fs15', 24)" class="i">id</span>, <span onmouseout="hideTip(event, 'fs6', 25)" onmouseover="showTip(event, 'fs6', 25)" class="t">Coordinate</span>(<span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="i">lat</span>, <span onmouseout="hideTip(event, 'fs17', 27)" onmouseover="showTip(event, 'fs17', 27)" class="i">lon</span>))
    <span class="c">// Ist im Umkreis von einem Kilometer die jeweilige Koordinate enthalten?</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs13', 28)" onmouseover="showTip(event, 'fs13', 28)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="f">filter</span> (<span onmouseout="hideTip(event, 'fs19', 30)" onmouseover="showTip(event, 'fs19', 30)" class="f">snd</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs10', 31)" onmouseover="showTip(event, 'fs10', 31)" class="i">circleBounds</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 32)" onmouseover="showTip(event, 'fs20', 32)" class="f">Contains</span>)

<span onmouseout="hideTip(event, 'fs12', 33)" onmouseover="showTip(event, 'fs12', 33)" class="i">filtededCoords</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs13', 34)" onmouseover="showTip(event, 'fs13', 34)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 35)" onmouseover="showTip(event, 'fs21', 35)" class="f">iter</span> (<span onmouseout="hideTip(event, 'fs22', 36)" onmouseover="showTip(event, 'fs22', 36)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">&quot;</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace Geo</div>
<div class="tip" id="fs2">namespace Geo.Measure</div>
<div class="tip" id="fs3">namespace Geo.Geometries</div>
<div class="tip" id="fs4">val liste : (int * float * float) list<br /><br />Full name: Script.liste<br /><em><br /><br />&#160;Liste mit id, latitude, longitude</em></div>
<div class="tip" id="fs5">val ausgangscoord : Coordinate<br /><br />Full name: Script.ausgangscoord<br /><em><br /><br />&#160;Die Ausgangskoordinate</em></div>
<div class="tip" id="fs6">Multiple items<br />type Coordinate =<br />&#160;&#160;inherit SpatialObject<br />&#160;&#160;new : unit -&gt; Coordinate + 1 overload<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;member GetBounds : unit -&gt; Envelope<br />&#160;&#160;member GetHashCode : unit -&gt; int + 1 overload<br />&#160;&#160;member Is3D : bool<br />&#160;&#160;member IsMeasured : bool<br />&#160;&#160;member Latitude : float with get, set<br />&#160;&#160;member Longitude : float with get, set<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;static member Parse : coordinate:string -&gt; Coordinate<br />&#160;&#160;...<br /><br />Full name: Geo.Coordinate<br /><br />--------------------<br />Coordinate() : unit<br />Coordinate(latitude: float, longitude: float) : unit</div>
<div class="tip" id="fs7">val radius : float<br /><br />Full name: Script.radius<br /><em><br /><br />&#160;Der Radius in Meter</em></div>
<div class="tip" id="fs8">val circle : Circle<br /><br />Full name: Script.circle<br /><em><br /><br />&#160;Ein Kreis von einem Kilometer um die Ausgangskoordinate</em></div>
<div class="tip" id="fs9">Multiple items<br />type Circle =<br />&#160;&#160;inherit Geometry<br />&#160;&#160;new : unit -&gt; Circle + 4 overloads<br />&#160;&#160;member Center : Coordinate with get, set<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;member GetArea : unit -&gt; Area<br />&#160;&#160;member GetBounds : unit -&gt; Envelope<br />&#160;&#160;member GetHashCode : unit -&gt; int + 1 overload<br />&#160;&#160;member GetLength : unit -&gt; Distance<br />&#160;&#160;member Is3D : bool<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member IsMeasured : bool<br />&#160;&#160;...<br /><br />Full name: Geo.Geometries.Circle<br /><br />--------------------<br />Circle() : unit<br />Circle(center: Coordinate, radius: float) : unit<br />Circle(latitiude: float, longitude: float, radius: float) : unit<br />Circle(latitiude: float, longitude: float, elevation: float, radius: float) : unit<br />Circle(latitiude: float, longitude: float, elevation: float, measure: float, radius: float) : unit</div>
<div class="tip" id="fs10">val circleBounds : Envelope<br /><br />Full name: Script.circleBounds<br /><em><br /><br />&#160;Die &#228;u&#223;ere Umrandung</em></div>
<div class="tip" id="fs11">Circle.GetBounds() : Envelope</div>
<div class="tip" id="fs12">val filtededCoords : (int * Coordinate) list<br /><br />Full name: Script.filtededCoords<br /><em><br /><br />&#160;Die gefilterten Koordinaten</em></div>
<div class="tip" id="fs13">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs14">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs15">val id : int</div>
<div class="tip" id="fs16">val lat : float</div>
<div class="tip" id="fs17">val lon : float</div>
<div class="tip" id="fs18">val filter : predicate:(&#39;T -&gt; bool) -&gt; list:&#39;T list -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.filter</div>
<div class="tip" id="fs19">val snd : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T2<br /><br />Full name: Microsoft.FSharp.Core.Operators.snd</div>
<div class="tip" id="fs20">Envelope.Contains(geometry: Abstractions.Interfaces.IGeometry) : bool<br />Envelope.Contains(coordinate: Coordinate) : bool<br />Envelope.Contains(envelope: Envelope) : bool</div>
<div class="tip" id="fs21">val iter : action:(&#39;T -&gt; unit) -&gt; list:&#39;T list -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.List.iter</div>
<div class="tip" id="fs22">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>

