<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Text</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">Compiler</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">Ast</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="i">Compiler</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="i">Range</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 11)" onmouseover="showTip(event, 'fs3', 11)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 12)" onmouseover="showTip(event, 'fs4', 12)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 13)" onmouseover="showTip(event, 'fs5', 13)" class="i">Compiler</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="i">SourceCodeServices</span>

<span class="c">//PARSING</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="f">parse</span> <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="i">text</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">fileName</span> <span class="o">=</span> <span class="s">&quot;whatever.fs&quot;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="i">checker</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="t">FSharpChecker</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="f">Create</span>()
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="i">opts</span> <span class="o">=</span> 
        { <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="t">FSharpParsingOptions</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 23)" onmouseover="showTip(event, 'fs17', 23)" class="i">Default</span> <span class="k">with</span>
            <span class="i">SourceFiles</span> <span class="o">=</span> [|<span onmouseout="hideTip(event, 'fs11', 24)" onmouseover="showTip(event, 'fs11', 24)" class="i">fileName</span>|] }
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="i">res</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 26)" onmouseover="showTip(event, 'fs12', 26)" class="i">checker</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 27)" onmouseover="showTip(event, 'fs19', 27)" class="f">ParseFile</span>(<span onmouseout="hideTip(event, 'fs11', 28)" onmouseover="showTip(event, 'fs11', 28)" class="i">fileName</span>, <span onmouseout="hideTip(event, 'fs10', 29)" onmouseover="showTip(event, 'fs10', 29)" class="i">text</span>, <span onmouseout="hideTip(event, 'fs15', 30)" onmouseover="showTip(event, 'fs15', 30)" class="i">opts</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs20', 31)" onmouseover="showTip(event, 'fs20', 31)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 32)" onmouseover="showTip(event, 'fs21', 32)" class="f">RunSynchronously</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 33)" onmouseover="showTip(event, 'fs22', 33)" class="i">fileAst</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs18', 34)" onmouseover="showTip(event, 'fs18', 34)" class="i">res</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 35)" onmouseover="showTip(event, 'fs23', 35)" class="i">ParseTree</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 36)" onmouseover="showTip(event, 'fs24', 36)" class="i">Value</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs25', 37)" onmouseover="showTip(event, 'fs25', 37)" class="t">ParsedInput</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 38)" onmouseover="showTip(event, 'fs26', 38)" class="p">ImplFile</span> <span onmouseout="hideTip(event, 'fs27', 39)" onmouseover="showTip(event, 'fs27', 39)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs27', 40)" onmouseover="showTip(event, 'fs27', 40)" class="i">x</span>
        | <span onmouseout="hideTip(event, 'fs25', 41)" onmouseover="showTip(event, 'fs25', 41)" class="t">ParsedInput</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 42)" onmouseover="showTip(event, 'fs28', 42)" class="p">SigFile</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs29', 43)" onmouseover="showTip(event, 'fs29', 43)" class="f">failwith</span> <span class="s">&quot;give me fs, not fsi&quot;</span>
    <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs30', 44)" onmouseover="showTip(event, 'fs30', 44)" class="t">ParsedImplFileInput</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 45)" onmouseover="showTip(event, 'fs31', 45)" class="p">ParsedImplFileInput</span>(_, _, _, _, _, <span onmouseout="hideTip(event, 'fs32', 46)" onmouseover="showTip(event, 'fs32', 46)" class="i">modules</span>, _)) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 47)" onmouseover="showTip(event, 'fs22', 47)" class="i">fileAst</span>
    <span class="k">let</span> (<span onmouseout="hideTip(event, 'fs33', 48)" onmouseover="showTip(event, 'fs33', 48)" class="t">SynModuleOrNamespace</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 49)" onmouseover="showTip(event, 'fs34', 49)" class="p">SynModuleOrNamespace</span>(_, _, _, <span onmouseout="hideTip(event, 'fs35', 50)" onmouseover="showTip(event, 'fs35', 50)" class="i">moduleDeclarations</span>, _, _, _, _)) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 51)" onmouseover="showTip(event, 'fs32', 51)" class="i">modules</span><span class="o">.</span>[<span class="n">0</span>]
    <span onmouseout="hideTip(event, 'fs35', 52)" onmouseover="showTip(event, 'fs35', 52)" class="i">moduleDeclarations</span>

<span class="c">//ANALYZING PATTERNS</span>

<span class="k">let</span> (|<span class="p">NotAttributesLetBinding</span>|_|) (<span onmouseout="hideTip(event, 'fs36', 53)" onmouseover="showTip(event, 'fs36', 53)" class="p">Binding</span>(_, _, _, _, <span onmouseout="hideTip(event, 'fs37', 54)" onmouseover="showTip(event, 'fs37', 54)" class="i">attrs</span>, _, _, _, _, _, _, _) <span class="k">as</span> <span onmouseout="hideTip(event, 'fs38', 55)" onmouseover="showTip(event, 'fs38', 55)" class="i">binding</span>) <span class="o">=</span>
    <span class="k">if</span> <span class="i">attrs</span><span class="o">.</span><span class="i">IsEmpty</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs39', 56)" onmouseover="showTip(event, 'fs39', 56)" class="p">Some</span> <span class="i">binding</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs40', 57)" onmouseover="showTip(event, 'fs40', 57)" class="p">None</span>

<span class="c">//TRANSFORMING AST FUNCTIONS</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 58)" onmouseover="showTip(event, 'fs41', 58)" class="f">addObsoleteToBinding</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 59)" onmouseover="showTip(event, 'fs42', 59)" class="i">obsoleteAst</span> <span class="o">=</span>
        { <span onmouseout="hideTip(event, 'fs43', 60)" onmouseover="showTip(event, 'fs43', 60)" class="t">SynAttribute</span><span class="o">.</span><span class="i">AppliesToGetterAndSetter</span> <span class="o">=</span> <span class="k">false</span>
          <span onmouseout="hideTip(event, 'fs43', 61)" onmouseover="showTip(event, 'fs43', 61)" class="t">SynAttribute</span><span class="o">.</span><span class="i">ArgExpr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs44', 62)" onmouseover="showTip(event, 'fs44', 62)" class="t">SynExpr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 63)" onmouseover="showTip(event, 'fs45', 63)" class="p">Const</span>(<span onmouseout="hideTip(event, 'fs46', 64)" onmouseover="showTip(event, 'fs46', 64)" class="t">SynConst</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 65)" onmouseover="showTip(event, 'fs47', 65)" class="p">Unit</span>, <span onmouseout="hideTip(event, 'fs48', 66)" onmouseover="showTip(event, 'fs48', 66)" class="t">range</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 67)" onmouseover="showTip(event, 'fs49', 67)" class="i">Zero</span>)
          <span onmouseout="hideTip(event, 'fs43', 68)" onmouseover="showTip(event, 'fs43', 68)" class="t">SynAttribute</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 69)" onmouseover="showTip(event, 'fs50', 69)" class="i">Range</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs48', 70)" onmouseover="showTip(event, 'fs48', 70)" class="t">range</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 71)" onmouseover="showTip(event, 'fs49', 71)" class="i">Zero</span>
          <span onmouseout="hideTip(event, 'fs43', 72)" onmouseover="showTip(event, 'fs43', 72)" class="t">SynAttribute</span><span class="o">.</span><span class="i">Target</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 73)" onmouseover="showTip(event, 'fs40', 73)" class="p">None</span>
          <span onmouseout="hideTip(event, 'fs43', 74)" onmouseover="showTip(event, 'fs43', 74)" class="t">SynAttribute</span><span class="o">.</span><span class="i">TypeName</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 75)" onmouseover="showTip(event, 'fs51', 75)" class="p">LongIdentWithDots</span>([<span onmouseout="hideTip(event, 'fs52', 76)" onmouseover="showTip(event, 'fs52', 76)" class="t">Ident</span>(<span class="s">&quot;System&quot;</span>,<span onmouseout="hideTip(event, 'fs48', 77)" onmouseover="showTip(event, 'fs48', 77)" class="t">range</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 78)" onmouseover="showTip(event, 'fs49', 78)" class="i">Zero</span>);<span onmouseout="hideTip(event, 'fs52', 79)" onmouseover="showTip(event, 'fs52', 79)" class="t">Ident</span>(<span class="s">&quot;Obsolete&quot;</span>,<span onmouseout="hideTip(event, 'fs48', 80)" onmouseover="showTip(event, 'fs48', 80)" class="t">range</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 81)" onmouseover="showTip(event, 'fs49', 81)" class="i">Zero</span>)],[]) }
    <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs36', 82)" onmouseover="showTip(event, 'fs36', 82)" class="p">Binding</span>(<span onmouseout="hideTip(event, 'fs53', 83)" onmouseover="showTip(event, 'fs53', 83)" class="i">ao</span>, <span onmouseout="hideTip(event, 'fs54', 84)" onmouseover="showTip(event, 'fs54', 84)" class="i">bindKind</span>, <span onmouseout="hideTip(event, 'fs55', 85)" onmouseover="showTip(event, 'fs55', 85)" class="i">isInline</span>, <span onmouseout="hideTip(event, 'fs56', 86)" onmouseover="showTip(event, 'fs56', 86)" class="i">isMutable</span>, <span onmouseout="hideTip(event, 'fs37', 87)" onmouseover="showTip(event, 'fs37', 87)" class="i">attrs</span>, <span onmouseout="hideTip(event, 'fs57', 88)" onmouseover="showTip(event, 'fs57', 88)" class="i">px</span>, <span onmouseout="hideTip(event, 'fs58', 89)" onmouseover="showTip(event, 'fs58', 89)" class="i">valData</span>, <span onmouseout="hideTip(event, 'fs59', 90)" onmouseover="showTip(event, 'fs59', 90)" class="i">pat</span>, <span onmouseout="hideTip(event, 'fs60', 91)" onmouseover="showTip(event, 'fs60', 91)" class="i">retInfo</span>, <span onmouseout="hideTip(event, 'fs61', 92)" onmouseover="showTip(event, 'fs61', 92)" class="i">expr</span>, <span onmouseout="hideTip(event, 'fs62', 93)" onmouseover="showTip(event, 'fs62', 93)" class="i">range</span>, <span onmouseout="hideTip(event, 'fs63', 94)" onmouseover="showTip(event, 'fs63', 94)" class="i">seqInfo</span>)) <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs36', 95)" onmouseover="showTip(event, 'fs36', 95)" class="p">Binding</span> (<span onmouseout="hideTip(event, 'fs53', 96)" onmouseover="showTip(event, 'fs53', 96)" class="i">ao</span>, <span onmouseout="hideTip(event, 'fs54', 97)" onmouseover="showTip(event, 'fs54', 97)" class="i">bindKind</span>, <span onmouseout="hideTip(event, 'fs55', 98)" onmouseover="showTip(event, 'fs55', 98)" class="i">isInline</span>, <span onmouseout="hideTip(event, 'fs56', 99)" onmouseover="showTip(event, 'fs56', 99)" class="i">isMutable</span>, <span onmouseout="hideTip(event, 'fs42', 100)" onmouseover="showTip(event, 'fs42', 100)" class="i">obsoleteAst</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs37', 101)" onmouseover="showTip(event, 'fs37', 101)" class="i">attrs</span>, <span onmouseout="hideTip(event, 'fs57', 102)" onmouseover="showTip(event, 'fs57', 102)" class="i">px</span>, <span onmouseout="hideTip(event, 'fs58', 103)" onmouseover="showTip(event, 'fs58', 103)" class="i">valData</span>, <span onmouseout="hideTip(event, 'fs59', 104)" onmouseover="showTip(event, 'fs59', 104)" class="i">pat</span>, <span onmouseout="hideTip(event, 'fs60', 105)" onmouseover="showTip(event, 'fs60', 105)" class="i">retInfo</span>, <span onmouseout="hideTip(event, 'fs61', 106)" onmouseover="showTip(event, 'fs61', 106)" class="i">expr</span>, <span onmouseout="hideTip(event, 'fs62', 107)" onmouseover="showTip(event, 'fs62', 107)" class="i">range</span>, <span onmouseout="hideTip(event, 'fs63', 108)" onmouseover="showTip(event, 'fs63', 108)" class="i">seqInfo</span>)

<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs64', 109)" onmouseover="showTip(event, 'fs64', 109)" class="f">addObsolete</span> <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs65', 110)" onmouseover="showTip(event, 'fs65', 110)" class="t">SynModuleDecl</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 111)" onmouseover="showTip(event, 'fs66', 111)" class="p">Let</span>(<span onmouseout="hideTip(event, 'fs67', 112)" onmouseover="showTip(event, 'fs67', 112)" class="i">_isRecursive</span>, [<span onmouseout="hideTip(event, 'fs68', 113)" onmouseover="showTip(event, 'fs68', 113)" class="p">NotAttributesLetBinding</span> <span onmouseout="hideTip(event, 'fs38', 114)" onmouseover="showTip(event, 'fs38', 114)" class="i">binding</span>], <span class="i">_range</span>) <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs65', 115)" onmouseover="showTip(event, 'fs65', 115)" class="t">SynModuleDecl</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 116)" onmouseover="showTip(event, 'fs66', 116)" class="p">Let</span>(<span onmouseout="hideTip(event, 'fs67', 117)" onmouseover="showTip(event, 'fs67', 117)" class="i">_isRecursive</span>, [<span onmouseout="hideTip(event, 'fs41', 118)" onmouseover="showTip(event, 'fs41', 118)" class="f">addObsoleteToBinding</span> <span onmouseout="hideTip(event, 'fs38', 119)" onmouseover="showTip(event, 'fs38', 119)" class="i">binding</span>], <span onmouseout="hideTip(event, 'fs69', 120)" onmouseover="showTip(event, 'fs69', 120)" class="i">_range</span>)
    | <span onmouseout="hideTip(event, 'fs70', 121)" onmouseover="showTip(event, 'fs70', 121)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs70', 122)" onmouseover="showTip(event, 'fs70', 122)" class="i">x</span>

<span class="c">//PRINTING TO TEXT HELPERs FUNCTIONS</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs71', 123)" onmouseover="showTip(event, 'fs71', 123)" class="t">StringBuilder</span> <span class="k">with</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs72', 124)" onmouseover="showTip(event, 'fs72', 124)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 125)" onmouseover="showTip(event, 'fs73', 125)" class="f">Add</span> (<span onmouseout="hideTip(event, 'fs10', 126)" onmouseover="showTip(event, 'fs10', 126)" class="i">text</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs74', 127)" onmouseover="showTip(event, 'fs74', 127)" class="t">string</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs72', 128)" onmouseover="showTip(event, 'fs72', 128)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs75', 129)" onmouseover="showTip(event, 'fs75', 129)" class="f">Append</span> <span onmouseout="hideTip(event, 'fs10', 130)" onmouseover="showTip(event, 'fs10', 130)" class="i">text</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs76', 131)" onmouseover="showTip(event, 'fs76', 131)" class="f">ignore</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs77', 132)" onmouseover="showTip(event, 'fs77', 132)" class="f">identToString</span> (<span onmouseout="hideTip(event, 'fs51', 133)" onmouseover="showTip(event, 'fs51', 133)" class="p">LongIdentWithDots</span>(<span onmouseout="hideTip(event, 'fs78', 134)" onmouseover="showTip(event, 'fs78', 134)" class="i">ids</span>, _)) <span class="o">=</span>
    <span class="i">ids</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs79', 135)" onmouseover="showTip(event, 'fs79', 135)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs80', 136)" onmouseover="showTip(event, 'fs80', 136)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs81', 137)" onmouseover="showTip(event, 'fs81', 137)" class="i">id</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs81', 138)" onmouseover="showTip(event, 'fs81', 138)" class="i">id</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs82', 139)" onmouseover="showTip(event, 'fs82', 139)" class="i">idText</span>)
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs83', 140)" onmouseover="showTip(event, 'fs83', 140)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs84', 141)" onmouseover="showTip(event, 'fs84', 141)" class="f">concat</span> <span class="s">&quot;.&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs85', 142)" onmouseover="showTip(event, 'fs85', 142)" class="f">printIdent</span> (<span onmouseout="hideTip(event, 'fs86', 143)" onmouseover="showTip(event, 'fs86', 143)" class="i">sb</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs71', 144)" onmouseover="showTip(event, 'fs71', 144)" class="t">StringBuilder</span>) <span onmouseout="hideTip(event, 'fs87', 145)" onmouseover="showTip(event, 'fs87', 145)" class="i">ident</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs88', 146)" onmouseover="showTip(event, 'fs88', 146)" class="i">name</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs77', 147)" onmouseover="showTip(event, 'fs77', 147)" class="f">identToString</span> <span onmouseout="hideTip(event, 'fs87', 148)" onmouseover="showTip(event, 'fs87', 148)" class="i">ident</span>
    <span onmouseout="hideTip(event, 'fs86', 149)" onmouseover="showTip(event, 'fs86', 149)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 150)" onmouseover="showTip(event, 'fs89', 150)" class="f">Add</span> (<span onmouseout="hideTip(event, 'fs88', 151)" onmouseover="showTip(event, 'fs88', 151)" class="i">name</span> <span class="o">+</span> <span class="s">&quot; &quot;</span>)

<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs90', 152)" onmouseover="showTip(event, 'fs90', 152)" class="f">exprToString</span> (<span onmouseout="hideTip(event, 'fs91', 153)" onmouseover="showTip(event, 'fs91', 153)" class="i">valData</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs44', 154)" onmouseover="showTip(event, 'fs44', 154)" class="t">SynExpr</span>) <span class="o">=</span> 
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs91', 155)" onmouseover="showTip(event, 'fs91', 155)" class="i">valData</span> <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs44', 156)" onmouseover="showTip(event, 'fs44', 156)" class="t">SynExpr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 157)" onmouseover="showTip(event, 'fs45', 157)" class="p">Const</span> (<span onmouseout="hideTip(event, 'fs46', 158)" onmouseover="showTip(event, 'fs46', 158)" class="t">SynConst</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 159)" onmouseover="showTip(event, 'fs47', 159)" class="p">Unit</span>,_) <span class="k">-&gt;</span> <span class="s">&quot;()&quot;</span>
    | <span onmouseout="hideTip(event, 'fs44', 160)" onmouseover="showTip(event, 'fs44', 160)" class="t">SynExpr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs92', 161)" onmouseover="showTip(event, 'fs92', 161)" class="p">App</span> (_,<span onmouseout="hideTip(event, 'fs93', 162)" onmouseover="showTip(event, 'fs93', 162)" class="i">isInfix</span>,<span onmouseout="hideTip(event, 'fs94', 163)" onmouseover="showTip(event, 'fs94', 163)" class="i">funcExpr</span>,<span onmouseout="hideTip(event, 'fs95', 164)" onmouseover="showTip(event, 'fs95', 164)" class="i">argExpr</span>,_) <span class="k">-&gt;</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs93', 165)" onmouseover="showTip(event, 'fs93', 165)" class="i">isInfix</span> <span class="k">then</span>
            <span onmouseout="hideTip(event, 'fs90', 166)" onmouseover="showTip(event, 'fs90', 166)" class="f">exprToString</span> <span onmouseout="hideTip(event, 'fs95', 167)" onmouseover="showTip(event, 'fs95', 167)" class="i">argExpr</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs90', 168)" onmouseover="showTip(event, 'fs90', 168)" class="f">exprToString</span> <span onmouseout="hideTip(event, 'fs94', 169)" onmouseover="showTip(event, 'fs94', 169)" class="i">funcExpr</span>
        <span class="k">else</span>
            <span onmouseout="hideTip(event, 'fs90', 170)" onmouseover="showTip(event, 'fs90', 170)" class="f">exprToString</span> <span onmouseout="hideTip(event, 'fs94', 171)" onmouseover="showTip(event, 'fs94', 171)" class="i">funcExpr</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs90', 172)" onmouseover="showTip(event, 'fs90', 172)" class="f">exprToString</span> <span onmouseout="hideTip(event, 'fs95', 173)" onmouseover="showTip(event, 'fs95', 173)" class="i">argExpr</span>
    | <span onmouseout="hideTip(event, 'fs44', 174)" onmouseover="showTip(event, 'fs44', 174)" class="t">SynExpr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs96', 175)" onmouseover="showTip(event, 'fs96', 175)" class="p">Ident</span> <span onmouseout="hideTip(event, 'fs97', 176)" onmouseover="showTip(event, 'fs97', 176)" class="i">x</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs97', 177)" onmouseover="showTip(event, 'fs97', 177)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs82', 178)" onmouseover="showTip(event, 'fs82', 178)" class="i">idText</span> <span class="o">=</span> <span class="s">&quot;op_Addition&quot;</span> <span class="k">-&gt;</span> <span class="s">&quot;+&quot;</span>
    | <span onmouseout="hideTip(event, 'fs44', 179)" onmouseover="showTip(event, 'fs44', 179)" class="t">SynExpr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs96', 180)" onmouseover="showTip(event, 'fs96', 180)" class="p">Ident</span> <span onmouseout="hideTip(event, 'fs81', 181)" onmouseover="showTip(event, 'fs81', 181)" class="i">id</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs81', 182)" onmouseover="showTip(event, 'fs81', 182)" class="i">id</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs82', 183)" onmouseover="showTip(event, 'fs82', 183)" class="i">idText</span>
    | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs29', 184)" onmouseover="showTip(event, 'fs29', 184)" class="f">failwith</span> <span class="s">&quot;not implemented&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs98', 185)" onmouseover="showTip(event, 'fs98', 185)" class="f">printAttributes</span> (<span onmouseout="hideTip(event, 'fs86', 186)" onmouseover="showTip(event, 'fs86', 186)" class="i">sb</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs71', 187)" onmouseover="showTip(event, 'fs71', 187)" class="t">StringBuilder</span>) (<span onmouseout="hideTip(event, 'fs37', 188)" onmouseover="showTip(event, 'fs37', 188)" class="i">attrs</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs99', 189)" onmouseover="showTip(event, 'fs99', 189)" class="t">SynAttributes</span>) <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs100', 190)" onmouseover="showTip(event, 'fs100', 190)" class="f">not</span> <span onmouseout="hideTip(event, 'fs37', 191)" onmouseover="showTip(event, 'fs37', 191)" class="i">attrs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs101', 192)" onmouseover="showTip(event, 'fs101', 192)" class="i">IsEmpty</span> <span class="k">then</span>
        <span onmouseout="hideTip(event, 'fs86', 193)" onmouseover="showTip(event, 'fs86', 193)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 194)" onmouseover="showTip(event, 'fs89', 194)" class="f">Add</span> <span class="s">&quot;[&lt;&quot;</span>
        <span onmouseout="hideTip(event, 'fs37', 195)" onmouseover="showTip(event, 'fs37', 195)" class="i">attrs</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs79', 196)" onmouseover="showTip(event, 'fs79', 196)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs80', 197)" onmouseover="showTip(event, 'fs80', 197)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs102', 198)" onmouseover="showTip(event, 'fs102', 198)" class="i">attr</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs77', 199)" onmouseover="showTip(event, 'fs77', 199)" class="f">identToString</span> <span onmouseout="hideTip(event, 'fs102', 200)" onmouseover="showTip(event, 'fs102', 200)" class="i">attr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs103', 201)" onmouseover="showTip(event, 'fs103', 201)" class="i">TypeName</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs90', 202)" onmouseover="showTip(event, 'fs90', 202)" class="f">exprToString</span> <span onmouseout="hideTip(event, 'fs102', 203)" onmouseover="showTip(event, 'fs102', 203)" class="i">attr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs104', 204)" onmouseover="showTip(event, 'fs104', 204)" class="i">ArgExpr</span>)
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs83', 205)" onmouseover="showTip(event, 'fs83', 205)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs84', 206)" onmouseover="showTip(event, 'fs84', 206)" class="f">concat</span> <span class="s">&quot;;&quot;</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs86', 207)" onmouseover="showTip(event, 'fs86', 207)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 208)" onmouseover="showTip(event, 'fs89', 208)" class="f">Add</span>
        <span onmouseout="hideTip(event, 'fs86', 209)" onmouseover="showTip(event, 'fs86', 209)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 210)" onmouseover="showTip(event, 'fs89', 210)" class="f">Add</span> <span class="s">&quot;&gt;] &quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs105', 211)" onmouseover="showTip(event, 'fs105', 211)" class="f">printInline</span> (<span onmouseout="hideTip(event, 'fs86', 212)" onmouseover="showTip(event, 'fs86', 212)" class="i">sb</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs71', 213)" onmouseover="showTip(event, 'fs71', 213)" class="t">StringBuilder</span>) <span onmouseout="hideTip(event, 'fs55', 214)" onmouseover="showTip(event, 'fs55', 214)" class="i">isInline</span> <span class="o">=</span> 
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs55', 215)" onmouseover="showTip(event, 'fs55', 215)" class="i">isInline</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs86', 216)" onmouseover="showTip(event, 'fs86', 216)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 217)" onmouseover="showTip(event, 'fs89', 217)" class="f">Add</span> <span class="s">&quot;inline &quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs106', 218)" onmouseover="showTip(event, 'fs106', 218)" class="f">printText</span> (<span onmouseout="hideTip(event, 'fs86', 219)" onmouseover="showTip(event, 'fs86', 219)" class="i">sb</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs71', 220)" onmouseover="showTip(event, 'fs71', 220)" class="t">StringBuilder</span>) <span onmouseout="hideTip(event, 'fs10', 221)" onmouseover="showTip(event, 'fs10', 221)" class="i">text</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs86', 222)" onmouseover="showTip(event, 'fs86', 222)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 223)" onmouseover="showTip(event, 'fs89', 223)" class="f">Add</span> (<span onmouseout="hideTip(event, 'fs10', 224)" onmouseover="showTip(event, 'fs10', 224)" class="i">text</span> <span class="o">+</span> <span class="s">&quot; &quot;</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs107', 225)" onmouseover="showTip(event, 'fs107', 225)" class="f">printAccess</span> (<span onmouseout="hideTip(event, 'fs86', 226)" onmouseover="showTip(event, 'fs86', 226)" class="i">sb</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs71', 227)" onmouseover="showTip(event, 'fs71', 227)" class="t">StringBuilder</span>) <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs39', 228)" onmouseover="showTip(event, 'fs39', 228)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs108', 229)" onmouseover="showTip(event, 'fs108', 229)" class="t">SynAccess</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs109', 230)" onmouseover="showTip(event, 'fs109', 230)" class="p">Internal</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs86', 231)" onmouseover="showTip(event, 'fs86', 231)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 232)" onmouseover="showTip(event, 'fs89', 232)" class="f">Add</span> <span class="s">&quot;internal &quot;</span>
    | <span onmouseout="hideTip(event, 'fs39', 233)" onmouseover="showTip(event, 'fs39', 233)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs108', 234)" onmouseover="showTip(event, 'fs108', 234)" class="t">SynAccess</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 235)" onmouseover="showTip(event, 'fs110', 235)" class="p">Private</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs86', 236)" onmouseover="showTip(event, 'fs86', 236)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 237)" onmouseover="showTip(event, 'fs89', 237)" class="f">Add</span> <span class="s">&quot;private &quot;</span>
    | <span onmouseout="hideTip(event, 'fs39', 238)" onmouseover="showTip(event, 'fs39', 238)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs108', 239)" onmouseover="showTip(event, 'fs108', 239)" class="t">SynAccess</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs111', 240)" onmouseover="showTip(event, 'fs111', 240)" class="p">Public</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs86', 241)" onmouseover="showTip(event, 'fs86', 241)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 242)" onmouseover="showTip(event, 'fs89', 242)" class="f">Add</span> <span class="s">&quot;public &quot;</span>
    | _ <span class="k">-&gt;</span> ()

<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs112', 243)" onmouseover="showTip(event, 'fs112', 243)" class="f">printConsctructorArgs</span> (<span onmouseout="hideTip(event, 'fs86', 244)" onmouseover="showTip(event, 'fs86', 244)" class="i">sb</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs71', 245)" onmouseover="showTip(event, 'fs71', 245)" class="t">StringBuilder</span>) <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs113', 246)" onmouseover="showTip(event, 'fs113', 246)" class="t">SynConstructorArgs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs114', 247)" onmouseover="showTip(event, 'fs114', 247)" class="p">Pats</span> <span onmouseout="hideTip(event, 'fs115', 248)" onmouseover="showTip(event, 'fs115', 248)" class="i">pats</span> <span class="k">-&gt;</span>
        <span class="k">for</span> <span onmouseout="hideTip(event, 'fs59', 249)" onmouseover="showTip(event, 'fs59', 249)" class="i">pat</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs115', 250)" onmouseover="showTip(event, 'fs115', 250)" class="i">pats</span> <span class="k">do</span>
            <span onmouseout="hideTip(event, 'fs116', 251)" onmouseover="showTip(event, 'fs116', 251)" class="f">printPattern</span> <span onmouseout="hideTip(event, 'fs86', 252)" onmouseover="showTip(event, 'fs86', 252)" class="i">sb</span> <span onmouseout="hideTip(event, 'fs59', 253)" onmouseover="showTip(event, 'fs59', 253)" class="i">pat</span>
    | <span onmouseout="hideTip(event, 'fs113', 254)" onmouseover="showTip(event, 'fs113', 254)" class="t">SynConstructorArgs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs117', 255)" onmouseover="showTip(event, 'fs117', 255)" class="p">NamePatPairs</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs29', 256)" onmouseover="showTip(event, 'fs29', 256)" class="f">failwith</span> <span class="s">&quot;unsupported&quot;</span>

<span class="k">and</span> <span onmouseout="hideTip(event, 'fs116', 257)" onmouseover="showTip(event, 'fs116', 257)" class="f">printPattern</span> (<span onmouseout="hideTip(event, 'fs86', 258)" onmouseover="showTip(event, 'fs86', 258)" class="i">sb</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs71', 259)" onmouseover="showTip(event, 'fs71', 259)" class="t">StringBuilder</span>) <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs118', 260)" onmouseover="showTip(event, 'fs118', 260)" class="t">SynPat</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs119', 261)" onmouseover="showTip(event, 'fs119', 261)" class="p">LongIdent</span> (<span onmouseout="hideTip(event, 'fs120', 262)" onmouseover="showTip(event, 'fs120', 262)" class="i">identWithDots</span>, _, _, <span onmouseout="hideTip(event, 'fs121', 263)" onmouseover="showTip(event, 'fs121', 263)" class="i">pats</span>,<span onmouseout="hideTip(event, 'fs122', 264)" onmouseover="showTip(event, 'fs122', 264)" class="i">access</span>,_) <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs107', 265)" onmouseover="showTip(event, 'fs107', 265)" class="f">printAccess</span> <span onmouseout="hideTip(event, 'fs86', 266)" onmouseover="showTip(event, 'fs86', 266)" class="i">sb</span> <span onmouseout="hideTip(event, 'fs122', 267)" onmouseover="showTip(event, 'fs122', 267)" class="i">access</span>
        <span onmouseout="hideTip(event, 'fs85', 268)" onmouseover="showTip(event, 'fs85', 268)" class="f">printIdent</span> <span onmouseout="hideTip(event, 'fs86', 269)" onmouseover="showTip(event, 'fs86', 269)" class="i">sb</span> <span onmouseout="hideTip(event, 'fs120', 270)" onmouseover="showTip(event, 'fs120', 270)" class="i">identWithDots</span>
        <span onmouseout="hideTip(event, 'fs112', 271)" onmouseover="showTip(event, 'fs112', 271)" class="f">printConsctructorArgs</span> <span onmouseout="hideTip(event, 'fs86', 272)" onmouseover="showTip(event, 'fs86', 272)" class="i">sb</span> <span onmouseout="hideTip(event, 'fs121', 273)" onmouseover="showTip(event, 'fs121', 273)" class="i">pats</span>
    | <span onmouseout="hideTip(event, 'fs118', 274)" onmouseover="showTip(event, 'fs118', 274)" class="t">SynPat</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs123', 275)" onmouseover="showTip(event, 'fs123', 275)" class="p">Paren</span> (<span onmouseout="hideTip(event, 'fs59', 276)" onmouseover="showTip(event, 'fs59', 276)" class="i">pat</span>,_) <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs86', 277)" onmouseover="showTip(event, 'fs86', 277)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 278)" onmouseover="showTip(event, 'fs89', 278)" class="f">Add</span> <span class="s">&quot;(&quot;</span>
        <span onmouseout="hideTip(event, 'fs116', 279)" onmouseover="showTip(event, 'fs116', 279)" class="f">printPattern</span> <span onmouseout="hideTip(event, 'fs86', 280)" onmouseover="showTip(event, 'fs86', 280)" class="i">sb</span> <span onmouseout="hideTip(event, 'fs59', 281)" onmouseover="showTip(event, 'fs59', 281)" class="i">pat</span>
        <span onmouseout="hideTip(event, 'fs86', 282)" onmouseover="showTip(event, 'fs86', 282)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 283)" onmouseover="showTip(event, 'fs89', 283)" class="f">Add</span> <span class="s">&quot;) &quot;</span>
    | <span onmouseout="hideTip(event, 'fs118', 284)" onmouseover="showTip(event, 'fs118', 284)" class="t">SynPat</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs124', 285)" onmouseover="showTip(event, 'fs124', 285)" class="i">Tuple</span> (<span class="i">pats</span>,_) <span class="k">-&gt;</span>
        <span class="k">let</span> <span class="i">pats</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs125', 286)" onmouseover="showTip(event, 'fs125', 286)" class="i">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs126', 287)" onmouseover="showTip(event, 'fs126', 287)" class="i">ofList</span> <span class="i">pats</span>
        <span class="k">for</span> <span class="i">i</span> <span class="o">=</span> <span class="n">0</span> <span class="k">to</span> <span class="i">pats</span><span class="o">.</span><span class="i">Length</span><span class="o">-</span><span class="n">1</span> <span class="k">do</span>
            <span onmouseout="hideTip(event, 'fs116', 288)" onmouseover="showTip(event, 'fs116', 288)" class="i">printPattern</span> <span onmouseout="hideTip(event, 'fs86', 289)" onmouseover="showTip(event, 'fs86', 289)" class="i">sb</span> (<span class="i">pats</span><span class="o">.</span>[<span class="i">i</span>])
            <span class="k">if</span> <span class="i">i</span> <span class="o">&lt;</span> (<span class="i">pats</span><span class="o">.</span><span class="i">Length</span><span class="o">-</span><span class="n">1</span>) <span class="k">then</span>
                <span onmouseout="hideTip(event, 'fs86', 290)" onmouseover="showTip(event, 'fs86', 290)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 291)" onmouseover="showTip(event, 'fs89', 291)" class="i">Add</span> <span class="s">&quot;,&quot;</span>
            <span onmouseout="hideTip(event, 'fs86', 292)" onmouseover="showTip(event, 'fs86', 292)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 293)" onmouseover="showTip(event, 'fs89', 293)" class="i">Add</span> <span class="s">&quot; &quot;</span>
    | <span onmouseout="hideTip(event, 'fs118', 294)" onmouseover="showTip(event, 'fs118', 294)" class="i">SynPat</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs127', 295)" onmouseover="showTip(event, 'fs127', 295)" class="i">Named</span> (<span onmouseout="hideTip(event, 'fs118', 296)" onmouseover="showTip(event, 'fs118', 296)" class="i">SynPat</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs128', 297)" onmouseover="showTip(event, 'fs128', 297)" class="i">Wild</span> _, <span onmouseout="hideTip(event, 'fs129', 298)" onmouseover="showTip(event, 'fs129', 298)" class="i">ident</span>, _, _, _) <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs106', 299)" onmouseover="showTip(event, 'fs106', 299)" class="i">printText</span> <span onmouseout="hideTip(event, 'fs86', 300)" onmouseover="showTip(event, 'fs86', 300)" class="i">sb</span> <span onmouseout="hideTip(event, 'fs129', 301)" onmouseover="showTip(event, 'fs129', 301)" class="i">ident</span><span class="o">.</span><span class="i">idText</span>
    | <span onmouseout="hideTip(event, 'fs118', 302)" onmouseover="showTip(event, 'fs118', 302)" class="i">SynPat</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs127', 303)" onmouseover="showTip(event, 'fs127', 303)" class="i">Named</span> (<span onmouseout="hideTip(event, 'fs59', 304)" onmouseover="showTip(event, 'fs59', 304)" class="i">pat</span>, <span onmouseout="hideTip(event, 'fs129', 305)" onmouseover="showTip(event, 'fs129', 305)" class="i">ident</span>, _, _, _) <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs116', 306)" onmouseover="showTip(event, 'fs116', 306)" class="i">printPattern</span> <span onmouseout="hideTip(event, 'fs86', 307)" onmouseover="showTip(event, 'fs86', 307)" class="i">sb</span> <span onmouseout="hideTip(event, 'fs59', 308)" onmouseover="showTip(event, 'fs59', 308)" class="i">pat</span>
        <span onmouseout="hideTip(event, 'fs106', 309)" onmouseover="showTip(event, 'fs106', 309)" class="i">printText</span> <span onmouseout="hideTip(event, 'fs86', 310)" onmouseover="showTip(event, 'fs86', 310)" class="i">sb</span> (<span class="s">&quot;as &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs129', 311)" onmouseover="showTip(event, 'fs129', 311)" class="i">ident</span><span class="o">.</span><span class="i">idText</span>)
    | <span onmouseout="hideTip(event, 'fs118', 312)" onmouseover="showTip(event, 'fs118', 312)" class="i">SynPat</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs130', 313)" onmouseover="showTip(event, 'fs130', 313)" class="i">Typed</span> (<span onmouseout="hideTip(event, 'fs59', 314)" onmouseover="showTip(event, 'fs59', 314)" class="i">pat</span>, <span onmouseout="hideTip(event, 'fs131', 315)" onmouseover="showTip(event, 'fs131', 315)" class="i">SynType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs132', 316)" onmouseover="showTip(event, 'fs132', 316)" class="i">LongIdent</span> <span onmouseout="hideTip(event, 'fs129', 317)" onmouseover="showTip(event, 'fs129', 317)" class="i">ident</span>, _) <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs116', 318)" onmouseover="showTip(event, 'fs116', 318)" class="i">printPattern</span> <span onmouseout="hideTip(event, 'fs86', 319)" onmouseover="showTip(event, 'fs86', 319)" class="i">sb</span> <span onmouseout="hideTip(event, 'fs59', 320)" onmouseover="showTip(event, 'fs59', 320)" class="i">pat</span>
        <span onmouseout="hideTip(event, 'fs106', 321)" onmouseover="showTip(event, 'fs106', 321)" class="i">printText</span> <span onmouseout="hideTip(event, 'fs86', 322)" onmouseover="showTip(event, 'fs86', 322)" class="i">sb</span> (<span class="s">&quot;: &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs77', 323)" onmouseover="showTip(event, 'fs77', 323)" class="i">identToString</span> <span onmouseout="hideTip(event, 'fs129', 324)" onmouseover="showTip(event, 'fs129', 324)" class="i">ident</span>)
    | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs29', 325)" onmouseover="showTip(event, 'fs29', 325)" class="i">failwith</span> <span class="s">&quot;unsupported&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs133', 326)" onmouseover="showTip(event, 'fs133', 326)" class="f">printBind</span> (<span onmouseout="hideTip(event, 'fs86', 327)" onmouseover="showTip(event, 'fs86', 327)" class="i">sb</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs71', 328)" onmouseover="showTip(event, 'fs71', 328)" class="t">StringBuilder</span>) (<span onmouseout="hideTip(event, 'fs36', 329)" onmouseover="showTip(event, 'fs36', 329)" class="p">Binding</span>(_, _, <span onmouseout="hideTip(event, 'fs55', 330)" onmouseover="showTip(event, 'fs55', 330)" class="i">isInline</span>, _, <span onmouseout="hideTip(event, 'fs37', 331)" onmouseover="showTip(event, 'fs37', 331)" class="i">attrs</span>, _, _, <span onmouseout="hideTip(event, 'fs59', 332)" onmouseover="showTip(event, 'fs59', 332)" class="i">pat</span>, _, <span onmouseout="hideTip(event, 'fs61', 333)" onmouseover="showTip(event, 'fs61', 333)" class="i">expr</span>, _, _)) <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs98', 334)" onmouseover="showTip(event, 'fs98', 334)" class="f">printAttributes</span> <span onmouseout="hideTip(event, 'fs86', 335)" onmouseover="showTip(event, 'fs86', 335)" class="i">sb</span> <span class="i">attrs</span>
    <span onmouseout="hideTip(event, 'fs105', 336)" onmouseover="showTip(event, 'fs105', 336)" class="f">printInline</span> <span onmouseout="hideTip(event, 'fs86', 337)" onmouseover="showTip(event, 'fs86', 337)" class="i">sb</span> <span class="i">isInline</span>
    <span onmouseout="hideTip(event, 'fs116', 338)" onmouseover="showTip(event, 'fs116', 338)" class="f">printPattern</span> <span onmouseout="hideTip(event, 'fs86', 339)" onmouseover="showTip(event, 'fs86', 339)" class="i">sb</span> <span class="i">pat</span>
    <span onmouseout="hideTip(event, 'fs86', 340)" onmouseover="showTip(event, 'fs86', 340)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 341)" onmouseover="showTip(event, 'fs89', 341)" class="f">Add</span> <span class="s">&quot;= &quot;</span>
    <span onmouseout="hideTip(event, 'fs106', 342)" onmouseover="showTip(event, 'fs106', 342)" class="f">printText</span> <span onmouseout="hideTip(event, 'fs86', 343)" onmouseover="showTip(event, 'fs86', 343)" class="i">sb</span> (<span onmouseout="hideTip(event, 'fs90', 344)" onmouseover="showTip(event, 'fs90', 344)" class="f">exprToString</span> <span class="i">expr</span>)

<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs134', 345)" onmouseover="showTip(event, 'fs134', 345)" class="f">astToText</span> <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs65', 346)" onmouseover="showTip(event, 'fs65', 346)" class="t">SynModuleDecl</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 347)" onmouseover="showTip(event, 'fs66', 347)" class="p">Let</span>(<span onmouseout="hideTip(event, 'fs67', 348)" onmouseover="showTip(event, 'fs67', 348)" class="i">_isRecursive</span>, [<span onmouseout="hideTip(event, 'fs38', 349)" onmouseover="showTip(event, 'fs38', 349)" class="i">binding</span>], <span class="i">_range</span>) <span class="k">-&gt;</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs86', 350)" onmouseover="showTip(event, 'fs86', 350)" class="i">sb</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs71', 351)" onmouseover="showTip(event, 'fs71', 351)" class="t">StringBuilder</span>()
        <span onmouseout="hideTip(event, 'fs86', 352)" onmouseover="showTip(event, 'fs86', 352)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 353)" onmouseover="showTip(event, 'fs89', 353)" class="f">Add</span> <span class="s">&quot;let &quot;</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs67', 354)" onmouseover="showTip(event, 'fs67', 354)" class="i">_isRecursive</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs86', 355)" onmouseover="showTip(event, 'fs86', 355)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 356)" onmouseover="showTip(event, 'fs89', 356)" class="f">Add</span> <span class="s">&quot;rec &quot;</span>
        <span onmouseout="hideTip(event, 'fs133', 357)" onmouseover="showTip(event, 'fs133', 357)" class="f">printBind</span> <span onmouseout="hideTip(event, 'fs86', 358)" onmouseover="showTip(event, 'fs86', 358)" class="i">sb</span> <span onmouseout="hideTip(event, 'fs38', 359)" onmouseover="showTip(event, 'fs38', 359)" class="i">binding</span>
        <span onmouseout="hideTip(event, 'fs86', 360)" onmouseover="showTip(event, 'fs86', 360)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs135', 361)" onmouseover="showTip(event, 'fs135', 361)" class="f">ToString</span>()
    | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs29', 362)" onmouseover="showTip(event, 'fs29', 362)" class="f">failwith</span> <span class="s">&quot;not implemented&quot;</span>

<span class="c">//COMBINING ALL TOGETHER</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs136', 363)" onmouseover="showTip(event, 'fs136', 363)" class="f">workFlow</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs9', 364)" onmouseover="showTip(event, 'fs9', 364)" class="f">parse</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs137', 365)" onmouseover="showTip(event, 'fs137', 365)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs138', 366)" onmouseover="showTip(event, 'fs138', 366)" class="f">map</span> <span onmouseout="hideTip(event, 'fs64', 367)" onmouseover="showTip(event, 'fs64', 367)" class="f">addObsolete</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs137', 368)" onmouseover="showTip(event, 'fs137', 368)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs138', 369)" onmouseover="showTip(event, 'fs138', 369)" class="f">map</span> <span onmouseout="hideTip(event, 'fs134', 370)" onmouseover="showTip(event, 'fs134', 370)" class="f">astToText</span>
    <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs83', 371)" onmouseover="showTip(event, 'fs83', 371)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs84', 372)" onmouseover="showTip(event, 'fs84', 372)" class="f">concat</span> <span class="s">&quot;</span><span class="e">\n</span><span class="s">&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs139', 373)" onmouseover="showTip(event, 'fs139', 373)" class="i">functionText</span> <span class="o">=</span> <span class="s">&quot;let internal sum (a as d,c:string) b = a + b + c&quot;</span>
<span onmouseout="hideTip(event, 'fs136', 374)" onmouseover="showTip(event, 'fs136', 374)" class="f">workFlow</span> <span onmouseout="hideTip(event, 'fs139', 375)" onmouseover="showTip(event, 'fs139', 375)" class="i">functionText</span> <span class="c">//let [&lt;System.Obsolete()&gt;] internal sum (a as d , c : string  ) b = a + b + c</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Text</div>
<div class="tip" id="fs3">namespace Microsoft</div>
<div class="tip" id="fs4">namespace Microsoft.FSharp</div>
<div class="tip" id="fs5">namespace Microsoft.FSharp.Compiler</div>
<div class="tip" id="fs6">module Ast<br /><br />from Microsoft.FSharp.Compiler</div>
<div class="tip" id="fs7">module Range<br /><br />from Microsoft.FSharp.Compiler</div>
<div class="tip" id="fs8">namespace Microsoft.FSharp.Compiler.SourceCodeServices</div>
<div class="tip" id="fs9">val parse : text:string -&gt; SynModuleDecls<br /><br />Full name: Script.parse</div>
<div class="tip" id="fs10">val text : string</div>
<div class="tip" id="fs11">val fileName : string</div>
<div class="tip" id="fs12">val checker : FSharpChecker</div>
<div class="tip" id="fs13">type FSharpChecker<br />member CheckFileInProject : parsed:FSharpParseFileResults * filename:string * fileversion:int * source:string * options:FSharpProjectOptions * ?textSnapshotInfo:obj * ?userOpName:string -&gt; Async&lt;FSharpCheckFileAnswer&gt;<br />member CheckProjectInBackground : options:FSharpProjectOptions * ?userOpName:string -&gt; unit<br />member ClearLanguageServiceRootCachesAndCollectAndFinalizeAllTransients : unit -&gt; unit<br />member Compile : argv:string [] * ?userOpName:string -&gt; Async&lt;FSharpErrorInfo [] * int&gt;<br />member Compile : ast:ParsedInput list * assemblyName:string * outFile:string * dependencies:string list * ?pdbFile:string * ?executable:bool * ?noframework:bool * ?userOpName:string -&gt; Async&lt;FSharpErrorInfo [] * int&gt;<br />member CompileToDynamicAssembly : otherFlags:string [] * execute:(TextWriter * TextWriter) option * ?userOpName:string -&gt; Async&lt;FSharpErrorInfo [] * int * Assembly option&gt;<br />member CompileToDynamicAssembly : ast:ParsedInput list * assemblyName:string * dependencies:string list * execute:(TextWriter * TextWriter) option * ?debug:bool * ?noframework:bool * ?userOpName:string -&gt; Async&lt;FSharpErrorInfo [] * int * Assembly option&gt;<br />member GetBackgroundCheckResultsForFileInProject : filename:string * options:FSharpProjectOptions * ?userOpName:string -&gt; Async&lt;FSharpParseFileResults * FSharpCheckFileResults&gt;<br />member GetBackgroundParseResultsForFileInProject : filename:string * options:FSharpProjectOptions * ?userOpName:string -&gt; Async&lt;FSharpParseFileResults&gt;<br />member GetParsingOptionsFromCommandLineArgs : argv:string list * ?isInteractive:bool -&gt; FSharpParsingOptions * FSharpErrorInfo list<br />member GetParsingOptionsFromCommandLineArgs : sourceFiles:string list * argv:string list * ?isInteractive:bool -&gt; FSharpParsingOptions * FSharpErrorInfo list<br />member GetParsingOptionsFromProjectOptions : FSharpProjectOptions -&gt; FSharpParsingOptions * FSharpErrorInfo list<br />member GetProjectOptionsFromCommandLineArgs : projectFileName:string * argv:string [] * ?loadedTimeStamp:DateTime * ?extraProjectInfo:obj -&gt; FSharpProjectOptions<br />member GetProjectOptionsFromScript : filename:string * source:string * ?loadedTimeStamp:DateTime * ?otherFlags:string [] * ?useFsiAuxLib:bool * ?assumeDotNetFramework:bool * ?extraProjectInfo:obj * ?optionsStamp:int64 * ?userOpName:string -&gt; Async&lt;FSharpProjectOptions * FSharpErrorInfo list&gt;<br />member InvalidateAll : unit -&gt; unit<br />member InvalidateConfiguration : options:FSharpProjectOptions * ?startBackgroundCompileIfAlreadySeen:bool * ?userOpName:string -&gt; unit<br />member KeepProjectAlive : options:FSharpProjectOptions * ?userOpName:string -&gt; Async&lt;IDisposable&gt;<br />member MatchBraces : filename:string * source:string * options:FSharpParsingOptions * ?userOpName:string -&gt; Async&lt;(range * range) []&gt;<br />member NotifyProjectCleaned : options:FSharpProjectOptions * ?userOpName:string -&gt; Async&lt;unit&gt;<br />member ParseAndCheckFileInProject : filename:string * fileversion:int * source:string * options:FSharpProjectOptions * ?textSnapshotInfo:obj * ?userOpName:string -&gt; Async&lt;FSharpParseFileResults * FSharpCheckFileAnswer&gt;<br />member ParseAndCheckProject : options:FSharpProjectOptions * ?userOpName:string -&gt; Async&lt;FSharpCheckProjectResults&gt;<br />member ParseFile : filename:string * source:string * options:FSharpParsingOptions * ?userOpName:string -&gt; Async&lt;FSharpParseFileResults&gt;<br />member StopBackgroundCompile : unit -&gt; unit<br />member TokenizeFile : source:string -&gt; FSharpTokenInfo [] []<br />member TokenizeLine : line:string * state:FSharpTokenizerLexState -&gt; FSharpTokenInfo [] * FSharpTokenizerLexState<br />member TryGetRecentCheckResultsForFile : filename:string * options:FSharpProjectOptions * ?source:string * ?userOpName:string -&gt; (FSharpParseFileResults * FSharpCheckFileResults * int) option<br />member WaitForBackgroundCompile : unit -&gt; unit<br />member BeforeBackgroundFileCheck : IEvent&lt;string * obj option&gt;<br />member CurrentQueueLength : int<br />member FileChecked : IEvent&lt;string * obj option&gt;<br />member FileParsed : IEvent&lt;string * obj option&gt;<br />member private FrameworkImportsCache : FrameworkImportsCache<br />member ImplicitlyStartBackgroundWork : bool<br />member MaxMemory : int<br />member MaxMemoryReached : IEvent&lt;unit&gt;<br />member PauseBeforeBackgroundWork : int<br />member ProjectChecked : IEvent&lt;string * obj option&gt;<br />member private ReactorOps : IReactorOperations<br />member private ReferenceResolver : Resolver<br />member ImplicitlyStartBackgroundWork : bool with set<br />member MaxMemory : int with set<br />member PauseBeforeBackgroundWork : int with set<br />static member Create : ?projectCacheSize:int * ?keepAssemblyContents:bool * ?keepAllBackgroundResolutions:bool * ?legacyReferenceResolver:Resolver * ?tryGetMetadataSnapshot:ILReaderTryGetMetadataSnapshot -&gt; FSharpChecker<br />static member GlobalForegroundParseCountStatistic : int<br />static member GlobalForegroundTypeCheckCountStatistic : int<br /><br />Full name: Microsoft.FSharp.Compiler.SourceCodeServices.FSharpChecker</div>
<div class="tip" id="fs14">static member FSharpChecker.Create : ?projectCacheSize:int * ?keepAssemblyContents:bool * ?keepAllBackgroundResolutions:bool * ?legacyReferenceResolver:Compiler.ReferenceResolver.Resolver * ?tryGetMetadataSnapshot:Compiler.AbstractIL.ILBinaryReader.ILReaderTryGetMetadataSnapshot -&gt; FSharpChecker</div>
<div class="tip" id="fs15">val opts : FSharpParsingOptions</div>
<div class="tip" id="fs16">type FSharpParsingOptions =<br />&#160;&#160;{SourceFiles: string [];<br />&#160;&#160;&#160;ConditionalCompilationDefines: string list;<br />&#160;&#160;&#160;ErrorSeverityOptions: FSharpErrorSeverityOptions;<br />&#160;&#160;&#160;IsInteractive: bool;<br />&#160;&#160;&#160;LightSyntax: bool option;<br />&#160;&#160;&#160;CompilingFsLib: bool;<br />&#160;&#160;&#160;IsExe: bool;}<br />&#160;&#160;static member Default : FSharpParsingOptions<br /><br />Full name: Microsoft.FSharp.Compiler.SourceCodeServices.FSharpParsingOptions</div>
<div class="tip" id="fs17">property FSharpParsingOptions.Default: FSharpParsingOptions</div>
<div class="tip" id="fs18">val res : FSharpParseFileResults</div>
<div class="tip" id="fs19">member FSharpChecker.ParseFile : filename:string * source:string * options:FSharpParsingOptions * ?userOpName:string -&gt; Async&lt;FSharpParseFileResults&gt;</div>
<div class="tip" id="fs20">Multiple items<br />type Async<br />static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member AwaitTask : task:Task -&gt; Async&lt;unit&gt;<br />static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member CancelDefaultToken : unit -&gt; unit<br />static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromContinuations : callback:((&#39;T -&gt; unit) * (exn -&gt; unit) * (OperationCanceledException -&gt; unit) -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;<br />static member OnCancel : interruption:(unit -&gt; unit) -&gt; Async&lt;IDisposable&gt;<br />static member Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;<br />static member RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T<br />static member Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;<br />static member Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;<br />static member StartChild : computation:Async&lt;&#39;T&gt; * ?millisecondsTimeout:int -&gt; Async&lt;Async&lt;&#39;T&gt;&gt;<br />static member StartChildAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions -&gt; Async&lt;Task&lt;&#39;T&gt;&gt;<br />static member StartImmediate : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartWithContinuations : computation:Async&lt;&#39;T&gt; * continuation:(&#39;T -&gt; unit) * exceptionContinuation:(exn -&gt; unit) * cancellationContinuation:(OperationCanceledException -&gt; unit) * ?cancellationToken:CancellationToken -&gt; unit<br />static member SwitchToContext : syncContext:SynchronizationContext -&gt; Async&lt;unit&gt;<br />static member SwitchToNewThread : unit -&gt; Async&lt;unit&gt;<br />static member SwitchToThreadPool : unit -&gt; Async&lt;unit&gt;<br />static member TryCancelled : computation:Async&lt;&#39;T&gt; * compensation:(OperationCanceledException -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member CancellationToken : Async&lt;CancellationToken&gt;<br />static member DefaultCancellationToken : CancellationToken<br /><br />Full name: Microsoft.FSharp.Control.Async<br /><br />--------------------<br />type Async&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Async&lt;_&gt;</div>
<div class="tip" id="fs21">static member Async.RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:System.Threading.CancellationToken -&gt; &#39;T</div>
<div class="tip" id="fs22">val fileAst : ParsedImplFileInput</div>
<div class="tip" id="fs23">property FSharpParseFileResults.ParseTree: ParsedInput option</div>
<div class="tip" id="fs24">property Option.Value: ParsedInput</div>
<div class="tip" id="fs25">Multiple items<br />module ParsedInput<br /><br />from Microsoft.FSharp.Compiler.SourceCodeServices<br /><br />--------------------<br />type ParsedInput =<br />&#160;&#160;| ImplFile of ParsedImplFileInput<br />&#160;&#160;| SigFile of ParsedSigFileInput<br />&#160;&#160;member Range : range<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.ParsedInput</div>
<div class="tip" id="fs26">union case ParsedInput.ImplFile: ParsedImplFileInput -&gt; ParsedInput</div>
<div class="tip" id="fs27">val x : ParsedImplFileInput</div>
<div class="tip" id="fs28">union case ParsedInput.SigFile: ParsedSigFileInput -&gt; ParsedInput</div>
<div class="tip" id="fs29">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs30">Multiple items<br />union case ParsedImplFileInput.ParsedImplFileInput: fileName: string * isScript: bool * qualifiedNameOfFile: QualifiedNameOfFile * scopedPragmas: ScopedPragma list * hashDirectives: ParsedHashDirective list * modules: SynModuleOrNamespace list * (bool * bool) -&gt; ParsedImplFileInput<br /><br />--------------------<br />type ParsedImplFileInput = | ParsedImplFileInput of fileName: string * isScript: bool * qualifiedNameOfFile: QualifiedNameOfFile * scopedPragmas: ScopedPragma list * hashDirectives: ParsedHashDirective list * modules: SynModuleOrNamespace list * (bool * bool)<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.ParsedImplFileInput</div>
<div class="tip" id="fs31">union case ParsedImplFileInput.ParsedImplFileInput: fileName: string * isScript: bool * qualifiedNameOfFile: QualifiedNameOfFile * scopedPragmas: ScopedPragma list * hashDirectives: ParsedHashDirective list * modules: SynModuleOrNamespace list * (bool * bool) -&gt; ParsedImplFileInput</div>
<div class="tip" id="fs32">val modules : SynModuleOrNamespace list</div>
<div class="tip" id="fs33">Multiple items<br />union case SynModuleOrNamespace.SynModuleOrNamespace: longId: LongIdent * isRecursive: bool * kind: SynModuleOrNamespaceKind * decls: SynModuleDecls * xmlDoc: PreXmlDoc * attribs: SynAttributes * accessibility: SynAccess option * range: range -&gt; SynModuleOrNamespace<br /><br />--------------------<br />type SynModuleOrNamespace =<br />&#160;&#160;| SynModuleOrNamespace of longId: LongIdent * isRecursive: bool * kind: SynModuleOrNamespaceKind * decls: SynModuleDecls * xmlDoc: PreXmlDoc * attribs: SynAttributes * accessibility: SynAccess option * range: range<br />&#160;&#160;member Range : range<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.SynModuleOrNamespace</div>
<div class="tip" id="fs34">union case SynModuleOrNamespace.SynModuleOrNamespace: longId: LongIdent * isRecursive: bool * kind: SynModuleOrNamespaceKind * decls: SynModuleDecls * xmlDoc: PreXmlDoc * attribs: SynAttributes * accessibility: SynAccess option * range: range -&gt; SynModuleOrNamespace</div>
<div class="tip" id="fs35">val moduleDeclarations : SynModuleDecls</div>
<div class="tip" id="fs36">union case SynBinding.Binding: accessibility: SynAccess option * kind: SynBindingKind * mustInline: bool * isMutable: bool * attrs: SynAttributes * xmlDoc: PreXmlDoc * valData: SynValData * headPat: SynPat * returnInfo: SynBindingReturnInfo option * expr: SynExpr * range: range * seqPoint: SequencePointInfoForBinding -&gt; SynBinding</div>
<div class="tip" id="fs37">val attrs : SynAttributes</div>
<div class="tip" id="fs38">val binding : SynBinding</div>
<div class="tip" id="fs39">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs40">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs41">val addObsoleteToBinding : (SynBinding -&gt; SynBinding)<br /><br />Full name: Script.addObsoleteToBinding</div>
<div class="tip" id="fs42">val obsoleteAst : SynAttribute</div>
<div class="tip" id="fs43">type SynAttribute =<br />&#160;&#160;{TypeName: LongIdentWithDots;<br />&#160;&#160;&#160;ArgExpr: SynExpr;<br />&#160;&#160;&#160;Target: Ident option;<br />&#160;&#160;&#160;AppliesToGetterAndSetter: bool;<br />&#160;&#160;&#160;Range: range;}<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.SynAttribute</div>
<div class="tip" id="fs44">type SynExpr =<br />&#160;&#160;| Paren of expr: SynExpr * leftParenRange: range * rightParenRange: range option * range: range<br />&#160;&#160;| Quote of operator: SynExpr * isRaw: bool * quotedSynExpr: SynExpr * isFromQueryExpression: bool * range: range<br />&#160;&#160;| Const of constant: SynConst * range: range<br />&#160;&#160;| Typed of expr: SynExpr * typeName: SynType * range: range<br />&#160;&#160;| Tuple of isStruct: bool * exprs: SynExpr list * commaRanges: range list * range: range<br />&#160;&#160;| AnonRecd of isStruct: bool * copyInfo: (SynExpr * BlockSeparator) option * recordFields: (Ident * SynExpr) list * range: range<br />&#160;&#160;| ArrayOrList of isList: bool * exprs: SynExpr list * range: range<br />&#160;&#160;| Record of baseInfo: (SynType * SynExpr * range * BlockSeparator option * range) option * copyInfo: (SynExpr * BlockSeparator) option * recordFields: (RecordFieldName * SynExpr option * BlockSeparator option) list * range: range<br />&#160;&#160;| New of isProtected: bool * typeName: SynType * expr: SynExpr * range: range<br />&#160;&#160;| ObjExpr of objType: SynType * argOptions: (SynExpr * Ident option) option * bindings: SynBinding list * extraImpls: SynInterfaceImpl list * newExprRange: range * range: range<br />&#160;&#160;...<br />&#160;&#160;member IsArbExprAndThusAlreadyReportedError : bool<br />&#160;&#160;member Range : range<br />&#160;&#160;member RangeOfFirstPortion : range<br />&#160;&#160;member RangeSansAnyExtraDot : range<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.SynExpr</div>
<div class="tip" id="fs45">union case SynExpr.Const: constant: SynConst * range: range -&gt; SynExpr</div>
<div class="tip" id="fs46">type SynConst =<br />&#160;&#160;| Unit<br />&#160;&#160;| Bool of bool<br />&#160;&#160;| SByte of sbyte<br />&#160;&#160;| Byte of byte<br />&#160;&#160;| Int16 of int16<br />&#160;&#160;| UInt16 of uint16<br />&#160;&#160;| Int32 of int32<br />&#160;&#160;| UInt32 of uint32<br />&#160;&#160;| Int64 of int64<br />&#160;&#160;| UInt64 of uint64<br />&#160;&#160;...<br />&#160;&#160;member Range : dflt:range -&gt; range<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.SynConst</div>
<div class="tip" id="fs47">union case SynConst.Unit: SynConst</div>
<div class="tip" id="fs48">type range =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member MakeSynthetic : unit -&gt; range<br />&#160;&#160;&#160;&#160;member ToShortString : unit -&gt; string<br />&#160;&#160;&#160;&#160;member End : pos<br />&#160;&#160;&#160;&#160;member EndColumn : int<br />&#160;&#160;&#160;&#160;member EndLine : int<br />&#160;&#160;&#160;&#160;member EndRange : range<br />&#160;&#160;&#160;&#160;member FileIndex : int<br />&#160;&#160;&#160;&#160;member FileName : string<br />&#160;&#160;&#160;&#160;member IsSynthetic : bool<br />&#160;&#160;&#160;&#160;member Start : pos<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: Microsoft.FSharp.Compiler.Range.range</div>
<div class="tip" id="fs49">property range.Zero: range</div>
<div class="tip" id="fs50">Multiple items<br />module Range<br /><br />from Microsoft.FSharp.Compiler.Range<br /><br />--------------------<br />type Range = Position * Position<br /><br />Full name: Microsoft.FSharp.Compiler.SourceCodeServices.Range</div>
<div class="tip" id="fs51">Multiple items<br />union case LongIdentWithDots.LongIdentWithDots: id: LongIdent * dotms: range list -&gt; LongIdentWithDots<br /><br />--------------------<br />type LongIdentWithDots =<br />&#160;&#160;| LongIdentWithDots of id: LongIdent * dotms: range list<br />&#160;&#160;member Lid : LongIdent<br />&#160;&#160;member Range : range<br />&#160;&#160;member RangeSansAnyExtraDot : range<br />&#160;&#160;member ThereIsAnExtraDotAtTheEnd : bool<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.LongIdentWithDots</div>
<div class="tip" id="fs52">Multiple items<br />type Ident =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : text:string * range:range -&gt; Ident<br />&#160;&#160;&#160;&#160;override ToString : unit -&gt; string<br />&#160;&#160;&#160;&#160;member idRange : range<br />&#160;&#160;&#160;&#160;member idText : string<br />&#160;&#160;end<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.Ident<br /><br />--------------------<br />Ident()<br />new : text:string * range:range -&gt; Ident</div>
<div class="tip" id="fs53">val ao : SynAccess option</div>
<div class="tip" id="fs54">val bindKind : SynBindingKind</div>
<div class="tip" id="fs55">val isInline : bool</div>
<div class="tip" id="fs56">val isMutable : bool</div>
<div class="tip" id="fs57">val px : PreXmlDoc</div>
<div class="tip" id="fs58">val valData : SynValData</div>
<div class="tip" id="fs59">val pat : SynPat</div>
<div class="tip" id="fs60">val retInfo : SynBindingReturnInfo option</div>
<div class="tip" id="fs61">val expr : SynExpr</div>
<div class="tip" id="fs62">Multiple items<br />val range : range<br /><br />--------------------<br />type range =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member MakeSynthetic : unit -&gt; range<br />&#160;&#160;&#160;&#160;member ToShortString : unit -&gt; string<br />&#160;&#160;&#160;&#160;member End : pos<br />&#160;&#160;&#160;&#160;member EndColumn : int<br />&#160;&#160;&#160;&#160;member EndLine : int<br />&#160;&#160;&#160;&#160;member EndRange : range<br />&#160;&#160;&#160;&#160;member FileIndex : int<br />&#160;&#160;&#160;&#160;member FileName : string<br />&#160;&#160;&#160;&#160;member IsSynthetic : bool<br />&#160;&#160;&#160;&#160;member Start : pos<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: Microsoft.FSharp.Compiler.Range.range</div>
<div class="tip" id="fs63">val seqInfo : SequencePointInfoForBinding</div>
<div class="tip" id="fs64">val addObsolete : _arg1:SynModuleDecl -&gt; SynModuleDecl<br /><br />Full name: Script.addObsolete</div>
<div class="tip" id="fs65">type SynModuleDecl =<br />&#160;&#160;| ModuleAbbrev of ident: Ident * longId: LongIdent * range: range<br />&#160;&#160;| NestedModule of SynComponentInfo * isRecursive: bool * SynModuleDecls * bool * range: range<br />&#160;&#160;| Let of isRecursive: bool * SynBinding list * range: range<br />&#160;&#160;| DoExpr of SequencePointInfoForBinding * SynExpr * range: range<br />&#160;&#160;| Types of SynTypeDefn list * range: range<br />&#160;&#160;| Exception of SynExceptionDefn * range: range<br />&#160;&#160;| Open of longDotId: LongIdentWithDots * range: range<br />&#160;&#160;| Attributes of SynAttributes * range: range<br />&#160;&#160;| HashDirective of ParsedHashDirective * range: range<br />&#160;&#160;| NamespaceFragment of SynModuleOrNamespace<br />&#160;&#160;member Range : range<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.SynModuleDecl</div>
<div class="tip" id="fs66">union case SynModuleDecl.Let: isRecursive: bool * SynBinding list * range: range -&gt; SynModuleDecl</div>
<div class="tip" id="fs67">val _isRecursive : bool</div>
<div class="tip" id="fs68">active recognizer NotAttributesLetBinding: SynBinding -&gt; SynBinding option<br /><br />Full name: Script.( |NotAttributesLetBinding|_| )</div>
<div class="tip" id="fs69">val _range : range</div>
<div class="tip" id="fs70">val x : SynModuleDecl</div>
<div class="tip" id="fs71">Multiple items<br />type StringBuilder =<br />&#160;&#160;new : unit -&gt; StringBuilder + 5 overloads<br />&#160;&#160;member Append : value:string -&gt; StringBuilder + 18 overloads<br />&#160;&#160;member AppendFormat : format:string * arg0:obj -&gt; StringBuilder + 4 overloads<br />&#160;&#160;member AppendLine : unit -&gt; StringBuilder + 1 overload<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member Chars : int -&gt; char with get, set<br />&#160;&#160;member Clear : unit -&gt; StringBuilder<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EnsureCapacity : capacity:int -&gt; int<br />&#160;&#160;member Equals : sb:StringBuilder -&gt; bool<br />&#160;&#160;...<br /><br />Full name: System.Text.StringBuilder<br /><br />--------------------<br />StringBuilder() : unit<br />StringBuilder(capacity: int) : unit<br />StringBuilder(value: string) : unit<br />StringBuilder(value: string, capacity: int) : unit<br />StringBuilder(capacity: int, maxCapacity: int) : unit<br />StringBuilder(value: string, startIndex: int, length: int, capacity: int) : unit</div>
<div class="tip" id="fs72">val x : StringBuilder</div>
<div class="tip" id="fs73">member StringBuilder.Add : text:string -&gt; unit<br /><br />Full name: Script.Add</div>
<div class="tip" id="fs74">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs75">StringBuilder.Append(value: char []) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: obj) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: uint64) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: uint32) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: uint16) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: decimal) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: float) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: float32) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: int64) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StringBuilder.Append(value: int) : StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs76">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>
<div class="tip" id="fs77">val identToString : LongIdentWithDots -&gt; string<br /><br />Full name: Script.identToString</div>
<div class="tip" id="fs78">val ids : LongIdent</div>
<div class="tip" id="fs79">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs80">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs81">val id : Ident</div>
<div class="tip" id="fs82">property Ident.idText: string</div>
<div class="tip" id="fs83">module String<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs84">val concat : sep:string -&gt; strings:seq&lt;string&gt; -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.String.concat</div>
<div class="tip" id="fs85">val printIdent : sb:StringBuilder -&gt; ident:LongIdentWithDots -&gt; unit<br /><br />Full name: Script.printIdent</div>
<div class="tip" id="fs86">val sb : StringBuilder</div>
<div class="tip" id="fs87">val ident : LongIdentWithDots</div>
<div class="tip" id="fs88">val name : string</div>
<div class="tip" id="fs89">member StringBuilder.Add : text:string -&gt; unit</div>
<div class="tip" id="fs90">val exprToString : valData:SynExpr -&gt; string<br /><br />Full name: Script.exprToString</div>
<div class="tip" id="fs91">val valData : SynExpr</div>
<div class="tip" id="fs92">union case SynExpr.App: ExprAtomicFlag * isInfix: bool * funcExpr: SynExpr * argExpr: SynExpr * range: range -&gt; SynExpr</div>
<div class="tip" id="fs93">val isInfix : bool</div>
<div class="tip" id="fs94">val funcExpr : SynExpr</div>
<div class="tip" id="fs95">val argExpr : SynExpr</div>
<div class="tip" id="fs96">union case SynExpr.Ident: Ident -&gt; SynExpr</div>
<div class="tip" id="fs97">val x : Ident</div>
<div class="tip" id="fs98">val printAttributes : sb:StringBuilder -&gt; attrs:SynAttributes -&gt; unit<br /><br />Full name: Script.printAttributes</div>
<div class="tip" id="fs99">type SynAttributes = SynAttribute list<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.SynAttributes</div>
<div class="tip" id="fs100">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs101">property List.IsEmpty: bool</div>
<div class="tip" id="fs102">val attr : SynAttribute</div>
<div class="tip" id="fs103">SynAttribute.TypeName: LongIdentWithDots</div>
<div class="tip" id="fs104">SynAttribute.ArgExpr: SynExpr</div>
<div class="tip" id="fs105">val printInline : sb:StringBuilder -&gt; isInline:bool -&gt; unit<br /><br />Full name: Script.printInline</div>
<div class="tip" id="fs106">val printText : sb:StringBuilder -&gt; text:string -&gt; unit<br /><br />Full name: Script.printText</div>
<div class="tip" id="fs107">val printAccess : sb:StringBuilder -&gt; _arg1:SynAccess option -&gt; unit<br /><br />Full name: Script.printAccess</div>
<div class="tip" id="fs108">type SynAccess =<br />&#160;&#160;| Public<br />&#160;&#160;| Internal<br />&#160;&#160;| Private<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.SynAccess</div>
<div class="tip" id="fs109">union case SynAccess.Internal: SynAccess</div>
<div class="tip" id="fs110">union case SynAccess.Private: SynAccess</div>
<div class="tip" id="fs111">union case SynAccess.Public: SynAccess</div>
<div class="tip" id="fs112">val printConsctructorArgs : sb:StringBuilder -&gt; _arg1:SynConstructorArgs -&gt; unit<br /><br />Full name: Script.printConsctructorArgs</div>
<div class="tip" id="fs113">type SynConstructorArgs =<br />&#160;&#160;| Pats of SynPat list<br />&#160;&#160;| NamePatPairs of (Ident * SynPat) list * range: range<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.SynConstructorArgs</div>
<div class="tip" id="fs114">union case SynConstructorArgs.Pats: SynPat list -&gt; SynConstructorArgs</div>
<div class="tip" id="fs115">val pats : SynPat list</div>
<div class="tip" id="fs116">val printPattern : sb:StringBuilder -&gt; (SynPat -&gt; unit)<br /><br />Full name: Script.printPattern</div>
<div class="tip" id="fs117">union case SynConstructorArgs.NamePatPairs: (Ident * SynPat) list * range: range -&gt; SynConstructorArgs</div>
<div class="tip" id="fs118">type SynPat =<br />&#160;&#160;| Const of SynConst * range: range<br />&#160;&#160;| Wild of range: range<br />&#160;&#160;| Named of SynPat * Ident * isSelfIdentifier: bool * accessibility: SynAccess option * range: range<br />&#160;&#160;| Typed of SynPat * SynType * range: range<br />&#160;&#160;| Attrib of SynPat * SynAttributes * range: range<br />&#160;&#160;| Or of SynPat * SynPat * range: range<br />&#160;&#160;| Ands of SynPat list * range: range<br />&#160;&#160;| LongIdent of longDotId: LongIdentWithDots * Ident option * SynValTyparDecls option * SynConstructorArgs * accessibility: SynAccess option * range: range<br />&#160;&#160;| Tuple of isStruct: bool * SynPat list * range: range<br />&#160;&#160;| Paren of SynPat * range: range<br />&#160;&#160;...<br />&#160;&#160;member Range : range<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.SynPat</div>
<div class="tip" id="fs119">union case SynPat.LongIdent: longDotId: LongIdentWithDots * Ident option * SynValTyparDecls option * SynConstructorArgs * accessibility: SynAccess option * range: range -&gt; SynPat</div>
<div class="tip" id="fs120">val identWithDots : LongIdentWithDots</div>
<div class="tip" id="fs121">val pats : SynConstructorArgs</div>
<div class="tip" id="fs122">val access : SynAccess option</div>
<div class="tip" id="fs123">union case SynPat.Paren: SynPat * range: range -&gt; SynPat</div>
<div class="tip" id="fs124">union case SynPat.Tuple: isStruct: bool * SynPat list * range: range -&gt; SynPat</div>
<div class="tip" id="fs125">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs126">val ofList : list:&#39;T list -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.ofList</div>
<div class="tip" id="fs127">union case SynPat.Named: SynPat * Ident * isSelfIdentifier: bool * accessibility: SynAccess option * range: range -&gt; SynPat</div>
<div class="tip" id="fs128">union case SynPat.Wild: range: range -&gt; SynPat</div>
<div class="tip" id="fs129">val ident : s:string * r:range -&gt; Ident<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.ident</div>
<div class="tip" id="fs130">union case SynPat.Typed: SynPat * SynType * range: range -&gt; SynPat</div>
<div class="tip" id="fs131">type SynType =<br />&#160;&#160;| LongIdent of longDotId: LongIdentWithDots<br />&#160;&#160;| App of typeName: SynType * LESSrange: range option * typeArgs: SynType list * commaRanges: range list * GREATERrange: range option * isPostfix: bool * range: range<br />&#160;&#160;| LongIdentApp of typeName: SynType * longDotId: LongIdentWithDots * LESSRange: range option * typeArgs: SynType list * commaRanges: range list * GREATERrange: range option * range: range<br />&#160;&#160;| Tuple of isStruct: bool * typeNames: (bool * SynType) list * range: range<br />&#160;&#160;| AnonRecd of isStruct: bool * typeNames: (Ident * SynType) list * range: range<br />&#160;&#160;| Array of int * elementType: SynType * range: range<br />&#160;&#160;| Fun of argType: SynType * returnType: SynType * range: range<br />&#160;&#160;| Var of genericName: SynTypar * range: range<br />&#160;&#160;| Anon of range: range<br />&#160;&#160;| WithGlobalConstraints of typeName: SynType * constraints: SynTypeConstraint list * range: range<br />&#160;&#160;...<br />&#160;&#160;member Range : range<br /><br />Full name: Microsoft.FSharp.Compiler.Ast.SynType</div>
<div class="tip" id="fs132">union case SynType.LongIdent: longDotId: LongIdentWithDots -&gt; SynType</div>
<div class="tip" id="fs133">val printBind : sb:StringBuilder -&gt; SynBinding -&gt; unit<br /><br />Full name: Script.printBind</div>
<div class="tip" id="fs134">val astToText : _arg1:SynModuleDecl -&gt; string<br /><br />Full name: Script.astToText</div>
<div class="tip" id="fs135">StringBuilder.ToString() : string<br />StringBuilder.ToString(startIndex: int, length: int) : string</div>
<div class="tip" id="fs136">val workFlow : (string -&gt; string)<br /><br />Full name: Script.workFlow</div>
<div class="tip" id="fs137">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs138">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs139">val functionText : string<br /><br />Full name: Script.functionText</div>

