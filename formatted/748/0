<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">memoizeConcurrent</span> (<span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="f">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">b</span>) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">dict</span> <span class="o">=</span>
        <span class="k">new</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">Concurrent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="t">ConcurrentDictionary</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span>, <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="t">Lazy</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">b</span><span class="o">&gt;</span><span class="o">&gt;</span>()
    <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 10)" onmouseover="showTip(event, 'fs3', 10)" class="i">dict</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="f">GetOrAdd</span>(<span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="i">x</span>, <span class="k">lazy</span> (<span onmouseout="hideTip(event, 'fs2', 13)" onmouseover="showTip(event, 'fs2', 13)" class="f">f</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">x</span>))<span class="o">.</span><span class="f">Force</span>()
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val memoizeConcurrent : f:(&#39;a -&gt; &#39;b) -&gt; (&#39;a -&gt; &#39;b)<br /><br />Full name: Script.memoizeConcurrent</div>
<div class="tip" id="fs2">val f : (&#39;a -&gt; &#39;b)</div>
<div class="tip" id="fs3">val dict : System.Collections.Concurrent.ConcurrentDictionary&lt;&#39;a,Lazy&lt;&#39;b&gt;&gt;</div>
<div class="tip" id="fs4">namespace System</div>
<div class="tip" id="fs5">namespace System.Collections</div>
<div class="tip" id="fs6">namespace System.Collections.Concurrent</div>
<div class="tip" id="fs7">Multiple items<br />type ConcurrentDictionary&lt;&#39;TKey,&#39;TValue&gt; =<br />&#160;&#160;new : unit -&gt; ConcurrentDictionary&lt;&#39;TKey, &#39;TValue&gt; + 6 overloads<br />&#160;&#160;member AddOrUpdate : key:&#39;TKey * addValueFactory:Func&lt;&#39;TKey, &#39;TValue&gt; * updateValueFactory:Func&lt;&#39;TKey, &#39;TValue, &#39;TValue&gt; -&gt; &#39;TValue + 1 overload<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member ContainsKey : key:&#39;TKey -&gt; bool<br />&#160;&#160;member Count : int<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator&lt;KeyValuePair&lt;&#39;TKey, &#39;TValue&gt;&gt;<br />&#160;&#160;member GetOrAdd : key:&#39;TKey * valueFactory:Func&lt;&#39;TKey, &#39;TValue&gt; -&gt; &#39;TValue + 1 overload<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : &#39;TKey -&gt; &#39;TValue with get, set<br />&#160;&#160;member Keys : ICollection&lt;&#39;TKey&gt;<br />&#160;&#160;...<br /><br />Full name: System.Collections.Concurrent.ConcurrentDictionary&lt;_,_&gt;<br /><br />--------------------<br />System.Collections.Concurrent.ConcurrentDictionary() : unit<br />System.Collections.Concurrent.ConcurrentDictionary(collection: System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;&#39;TKey,&#39;TValue&gt;&gt;) : unit<br />System.Collections.Concurrent.ConcurrentDictionary(comparer: System.Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />System.Collections.Concurrent.ConcurrentDictionary(concurrencyLevel: int, capacity: int) : unit<br />System.Collections.Concurrent.ConcurrentDictionary(collection: System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;&#39;TKey,&#39;TValue&gt;&gt;, comparer: System.Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />System.Collections.Concurrent.ConcurrentDictionary(concurrencyLevel: int, collection: System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;&#39;TKey,&#39;TValue&gt;&gt;, comparer: System.Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />System.Collections.Concurrent.ConcurrentDictionary(concurrencyLevel: int, capacity: int, comparer: System.Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit</div>
<div class="tip" id="fs8">Multiple items<br />active recognizer Lazy: Lazy&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.( |Lazy| )<br /><br />--------------------<br />type Lazy&lt;&#39;T&gt; = System.Lazy&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Lazy&lt;_&gt;</div>
<div class="tip" id="fs9">val x : &#39;a</div>
<div class="tip" id="fs10">System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd(key: &#39;a, value: Lazy&lt;&#39;b&gt;) : Lazy&lt;&#39;b&gt;<br />System.Collections.Concurrent.ConcurrentDictionary.GetOrAdd(key: &#39;a, valueFactory: System.Func&lt;&#39;a,Lazy&lt;&#39;b&gt;&gt;) : Lazy&lt;&#39;b&gt;</div>

