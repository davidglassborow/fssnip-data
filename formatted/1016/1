<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Linq</span>

<span class="c">// Extend the standard QueryBuilder type with an additional </span>
<span class="c">// custom operation (that must be expressed in terms of other</span>
<span class="c">// query operations) and marked with ReflectedDefinition</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">QueryBuilder</span> <span class="k">with</span>
  [&lt;<span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">ReflectedDefinition</span>; <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">CustomOperation</span>(<span class="s">&quot;exactlyOneOrNone&quot;</span>)&gt;]
  <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="f">ExactlyOneOrNone</span> (<span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="i">source</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 9)" onmouseover="showTip(event, 'fs3', 9)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="t">QuerySource</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">U</span><span class="o">&gt;</span>) <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="t">option</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="i">query</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="f">ExactlyOneOrDefault</span>(<span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="i">query</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="f">Select</span>(<span onmouseout="hideTip(event, 'fs8', 16)" onmouseover="showTip(event, 'fs8', 16)" class="i">source</span>, <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 18)" onmouseover="showTip(event, 'fs15', 18)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="i">x</span>))

  [&lt;<span onmouseout="hideTip(event, 'fs5', 20)" onmouseover="showTip(event, 'fs5', 20)" class="t">ReflectedDefinition</span>; <span onmouseout="hideTip(event, 'fs6', 21)" onmouseover="showTip(event, 'fs6', 21)" class="t">CustomOperation</span>(<span class="s">&quot;headOrNone&quot;</span>)&gt;]
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 23)" onmouseover="showTip(event, 'fs17', 23)" class="f">HeadOrNone</span> (<span onmouseout="hideTip(event, 'fs8', 24)" onmouseover="showTip(event, 'fs8', 24)" class="i">source</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 25)" onmouseover="showTip(event, 'fs3', 25)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 26)" onmouseover="showTip(event, 'fs9', 26)" class="t">QuerySource</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">U</span><span class="o">&gt;</span>) <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span onmouseout="hideTip(event, 'fs10', 27)" onmouseover="showTip(event, 'fs10', 27)" class="t">option</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs11', 28)" onmouseover="showTip(event, 'fs11', 28)" class="i">query</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="f">HeadOrDefault</span>(<span onmouseout="hideTip(event, 'fs11', 30)" onmouseover="showTip(event, 'fs11', 30)" class="i">query</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 31)" onmouseover="showTip(event, 'fs13', 31)" class="f">Select</span>(<span onmouseout="hideTip(event, 'fs8', 32)" onmouseover="showTip(event, 'fs8', 32)" class="i">source</span>, <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs14', 33)" onmouseover="showTip(event, 'fs14', 33)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 34)" onmouseover="showTip(event, 'fs15', 34)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs14', 35)" onmouseover="showTip(event, 'fs14', 35)" class="i">x</span>))

  [&lt;<span onmouseout="hideTip(event, 'fs5', 36)" onmouseover="showTip(event, 'fs5', 36)" class="t">ReflectedDefinition</span>; <span onmouseout="hideTip(event, 'fs6', 37)" onmouseover="showTip(event, 'fs6', 37)" class="t">CustomOperation</span>(<span class="s">&quot;lastOrNone&quot;</span>)&gt;]
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs16', 38)" onmouseover="showTip(event, 'fs16', 38)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 39)" onmouseover="showTip(event, 'fs19', 39)" class="f">LastOrNone</span> (<span onmouseout="hideTip(event, 'fs8', 40)" onmouseover="showTip(event, 'fs8', 40)" class="i">source</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 41)" onmouseover="showTip(event, 'fs3', 41)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 42)" onmouseover="showTip(event, 'fs9', 42)" class="t">QuerySource</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">U</span><span class="o">&gt;</span>) <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span onmouseout="hideTip(event, 'fs10', 43)" onmouseover="showTip(event, 'fs10', 43)" class="t">option</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs11', 44)" onmouseover="showTip(event, 'fs11', 44)" class="i">query</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 45)" onmouseover="showTip(event, 'fs20', 45)" class="f">LastOrDefault</span>(<span onmouseout="hideTip(event, 'fs11', 46)" onmouseover="showTip(event, 'fs11', 46)" class="i">query</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 47)" onmouseover="showTip(event, 'fs13', 47)" class="f">Select</span>(<span onmouseout="hideTip(event, 'fs8', 48)" onmouseover="showTip(event, 'fs8', 48)" class="i">source</span>, <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs14', 49)" onmouseover="showTip(event, 'fs14', 49)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 50)" onmouseover="showTip(event, 'fs15', 50)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs14', 51)" onmouseover="showTip(event, 'fs14', 51)" class="i">x</span>))

[&lt;<span onmouseout="hideTip(event, 'fs21', 52)" onmouseover="showTip(event, 'fs21', 52)" class="t">AutoOpen</span>&gt;]
<span class="k">module</span> <span class="t">QueryExtensions</span> <span class="o">=</span> 
  <span class="k">open</span> <span onmouseout="hideTip(event, 'fs22', 53)" onmouseover="showTip(event, 'fs22', 53)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 54)" onmouseover="showTip(event, 'fs23', 54)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 55)" onmouseover="showTip(event, 'fs24', 55)" class="i">Quotations</span>

  <span class="c">/// Traverse a quotation and replace expressions according to &#39;f&#39;</span>
  <span class="c">/// (see also http://fssnip.net/1i)</span>
  <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs25', 56)" onmouseover="showTip(event, 'fs25', 56)" class="f">traverseQuotation</span> <span onmouseout="hideTip(event, 'fs26', 57)" onmouseover="showTip(event, 'fs26', 57)" class="f">f</span> <span onmouseout="hideTip(event, 'fs27', 58)" onmouseover="showTip(event, 'fs27', 58)" class="i">q</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 59)" onmouseover="showTip(event, 'fs27', 59)" class="i">q</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 60)" onmouseover="showTip(event, 'fs28', 60)" class="f">defaultArg</span> (<span onmouseout="hideTip(event, 'fs26', 61)" onmouseover="showTip(event, 'fs26', 61)" class="f">f</span> <span onmouseout="hideTip(event, 'fs27', 62)" onmouseover="showTip(event, 'fs27', 62)" class="i">q</span>) <span onmouseout="hideTip(event, 'fs27', 63)" onmouseover="showTip(event, 'fs27', 63)" class="i">q</span>
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs27', 64)" onmouseover="showTip(event, 'fs27', 64)" class="i">q</span> <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs29', 65)" onmouseover="showTip(event, 'fs29', 65)" class="t">ExprShape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 66)" onmouseover="showTip(event, 'fs30', 66)" class="p">ShapeCombination</span>(<span onmouseout="hideTip(event, 'fs31', 67)" onmouseover="showTip(event, 'fs31', 67)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs32', 68)" onmouseover="showTip(event, 'fs32', 68)" class="i">args</span>) <span class="k">-&gt;</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 69)" onmouseover="showTip(event, 'fs33', 69)" class="i">nargs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 70)" onmouseover="showTip(event, 'fs32', 70)" class="i">args</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs34', 71)" onmouseover="showTip(event, 'fs34', 71)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 72)" onmouseover="showTip(event, 'fs35', 72)" class="f">map</span> (<span onmouseout="hideTip(event, 'fs25', 73)" onmouseover="showTip(event, 'fs25', 73)" class="f">traverseQuotation</span> <span onmouseout="hideTip(event, 'fs26', 74)" onmouseover="showTip(event, 'fs26', 74)" class="f">f</span>)
        <span onmouseout="hideTip(event, 'fs29', 75)" onmouseover="showTip(event, 'fs29', 75)" class="t">ExprShape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 76)" onmouseover="showTip(event, 'fs36', 76)" class="f">RebuildShapeCombination</span>(<span onmouseout="hideTip(event, 'fs31', 77)" onmouseover="showTip(event, 'fs31', 77)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs33', 78)" onmouseover="showTip(event, 'fs33', 78)" class="i">nargs</span>)
    | <span onmouseout="hideTip(event, 'fs29', 79)" onmouseover="showTip(event, 'fs29', 79)" class="t">ExprShape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 80)" onmouseover="showTip(event, 'fs37', 80)" class="p">ShapeLambda</span>(<span onmouseout="hideTip(event, 'fs38', 81)" onmouseover="showTip(event, 'fs38', 81)" class="i">v</span>, <span onmouseout="hideTip(event, 'fs39', 82)" onmouseover="showTip(event, 'fs39', 82)" class="i">body</span>)  <span class="k">-&gt;</span> 
        <span onmouseout="hideTip(event, 'fs40', 83)" onmouseover="showTip(event, 'fs40', 83)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 84)" onmouseover="showTip(event, 'fs41', 84)" class="f">Lambda</span>(<span onmouseout="hideTip(event, 'fs38', 85)" onmouseover="showTip(event, 'fs38', 85)" class="i">v</span>, <span onmouseout="hideTip(event, 'fs25', 86)" onmouseover="showTip(event, 'fs25', 86)" class="f">traverseQuotation</span> <span onmouseout="hideTip(event, 'fs26', 87)" onmouseover="showTip(event, 'fs26', 87)" class="f">f</span> <span onmouseout="hideTip(event, 'fs39', 88)" onmouseover="showTip(event, 'fs39', 88)" class="i">body</span>)
    | <span onmouseout="hideTip(event, 'fs29', 89)" onmouseover="showTip(event, 'fs29', 89)" class="t">ExprShape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 90)" onmouseover="showTip(event, 'fs42', 90)" class="p">ShapeVar</span>(<span onmouseout="hideTip(event, 'fs38', 91)" onmouseover="showTip(event, 'fs38', 91)" class="i">v</span>) <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs40', 92)" onmouseover="showTip(event, 'fs40', 92)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 93)" onmouseover="showTip(event, 'fs43', 93)" class="f">Var</span>(<span onmouseout="hideTip(event, 'fs38', 94)" onmouseover="showTip(event, 'fs38', 94)" class="i">v</span>)

  <span class="c">/// Store the original query.Run operation</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 95)" onmouseover="showTip(event, 'fs44', 95)" class="f">oldRun</span> (<span onmouseout="hideTip(event, 'fs45', 96)" onmouseover="showTip(event, 'fs45', 96)" class="i">e</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs40', 97)" onmouseover="showTip(event, 'fs40', 97)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 98)" onmouseover="showTip(event, 'fs11', 98)" class="i">query</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 99)" onmouseover="showTip(event, 'fs46', 99)" class="f">Run</span>(<span onmouseout="hideTip(event, 'fs45', 100)" onmouseover="showTip(event, 'fs45', 100)" class="i">e</span>)

  <span class="c">/// Add a new &#39;Run&#39; method that first replaces &#39;exactlyOneOrNone&#39; </span>
  <span class="c">/// (and other extensions) with their definition and then runs</span>
  <span class="c">/// the new quotation using previous &#39;oldRun&#39; method</span>
  <span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 101)" onmouseover="showTip(event, 'fs3', 101)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 102)" onmouseover="showTip(event, 'fs4', 102)" class="t">QueryBuilder</span> <span class="k">with</span>
    [&lt;<span onmouseout="hideTip(event, 'fs47', 103)" onmouseover="showTip(event, 'fs47', 103)" class="t">CompiledName</span>(<span class="s">&quot;RunQueryAsValue&quot;</span>)&gt;]
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs48', 104)" onmouseover="showTip(event, 'fs48', 104)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 105)" onmouseover="showTip(event, 'fs49', 105)" class="f">Run</span> (<span onmouseout="hideTip(event, 'fs50', 106)" onmouseover="showTip(event, 'fs50', 106)" class="i">q</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs22', 107)" onmouseover="showTip(event, 'fs22', 107)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 108)" onmouseover="showTip(event, 'fs23', 108)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 109)" onmouseover="showTip(event, 'fs24', 109)" class="i">Quotations</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 110)" onmouseover="showTip(event, 'fs40', 110)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span onmouseout="hideTip(event, 'fs10', 111)" onmouseover="showTip(event, 'fs10', 111)" class="t">option</span><span class="o">&gt;</span>) <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span onmouseout="hideTip(event, 'fs10', 112)" onmouseover="showTip(event, 'fs10', 112)" class="t">option</span> <span class="o">=</span> 
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 113)" onmouseover="showTip(event, 'fs50', 113)" class="i">q</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs40', 114)" onmouseover="showTip(event, 'fs40', 114)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span onmouseout="hideTip(event, 'fs10', 115)" onmouseover="showTip(event, 'fs10', 115)" class="t">option</span><span class="o">&gt;</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs50', 116)" onmouseover="showTip(event, 'fs50', 116)" class="i">q</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 117)" onmouseover="showTip(event, 'fs25', 117)" class="f">traverseQuotation</span> (<span class="k">function</span>
          <span class="c">// Detects a call to an (instance) method that has the ReflectedDefinition attribute</span>
          <span class="c">// and replaces it with the body of the method (taken from Query.fs of FSharp.Core.dll)</span>
          | <span onmouseout="hideTip(event, 'fs51', 118)" onmouseover="showTip(event, 'fs51', 118)" class="t">Patterns</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 119)" onmouseover="showTip(event, 'fs52', 119)" class="p">Call</span>(<span onmouseout="hideTip(event, 'fs15', 120)" onmouseover="showTip(event, 'fs15', 120)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs53', 121)" onmouseover="showTip(event, 'fs53', 121)" class="i">inst</span>, <span onmouseout="hideTip(event, 'fs54', 122)" onmouseover="showTip(event, 'fs54', 122)" class="t">DerivedPatterns</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 123)" onmouseover="showTip(event, 'fs55', 123)" class="p">MethodWithReflectedDefinition</span>(<span onmouseout="hideTip(event, 'fs54', 124)" onmouseover="showTip(event, 'fs54', 124)" class="t">DerivedPatterns</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 125)" onmouseover="showTip(event, 'fs56', 125)" class="p">Lambdas</span>(<span onmouseout="hideTip(event, 'fs57', 126)" onmouseover="showTip(event, 'fs57', 126)" class="i">vs</span>, <span onmouseout="hideTip(event, 'fs39', 127)" onmouseover="showTip(event, 'fs39', 127)" class="i">body</span>)), <span onmouseout="hideTip(event, 'fs32', 128)" onmouseover="showTip(event, 'fs32', 128)" class="i">args</span>) <span class="k">-&gt;</span> 
              <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 129)" onmouseover="showTip(event, 'fs32', 129)" class="i">args</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 130)" onmouseover="showTip(event, 'fs53', 130)" class="i">inst</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs32', 131)" onmouseover="showTip(event, 'fs32', 131)" class="i">args</span>
              <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 132)" onmouseover="showTip(event, 'fs58', 132)" class="i">tab</span> <span class="o">=</span> 
                <span onmouseout="hideTip(event, 'fs34', 133)" onmouseover="showTip(event, 'fs34', 133)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 134)" onmouseover="showTip(event, 'fs59', 134)" class="f">map2</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs60', 135)" onmouseover="showTip(event, 'fs60', 135)" class="i">vs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs61', 136)" onmouseover="showTip(event, 'fs61', 136)" class="t">Var</span> <span onmouseout="hideTip(event, 'fs62', 137)" onmouseover="showTip(event, 'fs62', 137)" class="t">list</span>) <span onmouseout="hideTip(event, 'fs63', 138)" onmouseover="showTip(event, 'fs63', 138)" class="i">arg</span> <span class="k">-&gt;</span> 
                  <span class="k">match</span> <span onmouseout="hideTip(event, 'fs60', 139)" onmouseover="showTip(event, 'fs60', 139)" class="i">vs</span>, <span onmouseout="hideTip(event, 'fs63', 140)" onmouseover="showTip(event, 'fs63', 140)" class="i">arg</span> <span class="k">with</span> 
                  | [<span onmouseout="hideTip(event, 'fs38', 141)" onmouseover="showTip(event, 'fs38', 141)" class="i">v</span>], <span onmouseout="hideTip(event, 'fs63', 142)" onmouseover="showTip(event, 'fs63', 142)" class="i">arg</span> <span class="k">-&gt;</span> [(<span onmouseout="hideTip(event, 'fs38', 143)" onmouseover="showTip(event, 'fs38', 143)" class="i">v</span>, <span onmouseout="hideTip(event, 'fs63', 144)" onmouseover="showTip(event, 'fs63', 144)" class="i">arg</span>)] | <span onmouseout="hideTip(event, 'fs60', 145)" onmouseover="showTip(event, 'fs60', 145)" class="i">vs</span>, <span onmouseout="hideTip(event, 'fs51', 146)" onmouseover="showTip(event, 'fs51', 146)" class="t">Patterns</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 147)" onmouseover="showTip(event, 'fs64', 147)" class="p">NewTuple</span>(<span onmouseout="hideTip(event, 'fs32', 148)" onmouseover="showTip(event, 'fs32', 148)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs34', 149)" onmouseover="showTip(event, 'fs34', 149)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 150)" onmouseover="showTip(event, 'fs65', 150)" class="f">zip</span> <span onmouseout="hideTip(event, 'fs60', 151)" onmouseover="showTip(event, 'fs60', 151)" class="i">vs</span> <span onmouseout="hideTip(event, 'fs32', 152)" onmouseover="showTip(event, 'fs32', 152)" class="i">args</span> 
                  | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs34', 153)" onmouseover="showTip(event, 'fs34', 153)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 154)" onmouseover="showTip(event, 'fs65', 154)" class="f">zip</span> <span onmouseout="hideTip(event, 'fs60', 155)" onmouseover="showTip(event, 'fs60', 155)" class="i">vs</span> [<span onmouseout="hideTip(event, 'fs63', 156)" onmouseover="showTip(event, 'fs63', 156)" class="i">arg</span>]) <span onmouseout="hideTip(event, 'fs60', 157)" onmouseover="showTip(event, 'fs60', 157)" class="i">vs</span> <span onmouseout="hideTip(event, 'fs32', 158)" onmouseover="showTip(event, 'fs32', 158)" class="i">args</span>
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs34', 159)" onmouseover="showTip(event, 'fs34', 159)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs66', 160)" onmouseover="showTip(event, 'fs66', 160)" class="f">concat</span>
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs67', 161)" onmouseover="showTip(event, 'fs67', 161)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 162)" onmouseover="showTip(event, 'fs68', 162)" class="f">ofSeq</span>
              <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 163)" onmouseover="showTip(event, 'fs39', 163)" class="i">body</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 164)" onmouseover="showTip(event, 'fs39', 164)" class="i">body</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 165)" onmouseover="showTip(event, 'fs69', 165)" class="f">Substitute</span> <span onmouseout="hideTip(event, 'fs58', 166)" onmouseover="showTip(event, 'fs58', 166)" class="i">tab</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 167)" onmouseover="showTip(event, 'fs70', 167)" class="f">TryFind</span> 
              <span onmouseout="hideTip(event, 'fs15', 168)" onmouseover="showTip(event, 'fs15', 168)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs39', 169)" onmouseover="showTip(event, 'fs39', 169)" class="i">body</span>
          | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs71', 170)" onmouseover="showTip(event, 'fs71', 170)" class="p">None</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs40', 171)" onmouseover="showTip(event, 'fs40', 171)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 172)" onmouseover="showTip(event, 'fs72', 172)" class="f">Cast</span>
      <span onmouseout="hideTip(event, 'fs44', 173)" onmouseover="showTip(event, 'fs44', 173)" class="f">oldRun</span>(<span onmouseout="hideTip(event, 'fs50', 174)" onmouseover="showTip(event, 'fs50', 174)" class="i">q</span>)

<span class="c">// Example - now we can use &#39;exactlyOneOrNone&#39;!                                       </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs73', 175)" onmouseover="showTip(event, 'fs73', 175)" class="i">data</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 176)" onmouseover="showTip(event, 'fs34', 176)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 177)" onmouseover="showTip(event, 'fs74', 177)" class="i">empty</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs75', 178)" onmouseover="showTip(event, 'fs75', 178)" class="t">int</span><span class="o">&gt;</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs76', 179)" onmouseover="showTip(event, 'fs76', 179)" class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 180)" onmouseover="showTip(event, 'fs11', 180)" class="i">query</span> { <span class="k">for</span> <span onmouseout="hideTip(event, 'fs77', 181)" onmouseover="showTip(event, 'fs77', 181)" class="i">v</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs73', 182)" onmouseover="showTip(event, 'fs73', 182)" class="i">data</span> <span class="k">do</span>
                    <span onmouseout="hideTip(event, 'fs78', 183)" onmouseover="showTip(event, 'fs78', 183)" class="k">select</span> <span onmouseout="hideTip(event, 'fs77', 184)" onmouseover="showTip(event, 'fs77', 184)" class="i">v</span>
                    <span onmouseout="hideTip(event, 'fs79', 185)" onmouseover="showTip(event, 'fs79', 185)" class="k">exactlyOneOrNone</span> }  

<span class="k">match</span> <span onmouseout="hideTip(event, 'fs76', 186)" onmouseover="showTip(event, 'fs76', 186)" class="i">value</span> <span class="k">with</span>
| <span onmouseout="hideTip(event, 'fs15', 187)" onmouseover="showTip(event, 'fs15', 187)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs80', 188)" onmouseover="showTip(event, 'fs80', 188)" class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs81', 189)" onmouseover="showTip(event, 'fs81', 189)" class="f">printf</span> <span class="s">&quot;Some value </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs80', 190)" onmouseover="showTip(event, 'fs80', 190)" class="i">a</span>
| <span onmouseout="hideTip(event, 'fs71', 191)" onmouseover="showTip(event, 'fs71', 191)" class="p">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs81', 192)" onmouseover="showTip(event, 'fs81', 192)" class="f">printf</span> <span class="s">&quot;None&quot;</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Linq</div>
<div class="tip" id="fs3">namespace Microsoft.FSharp.Linq</div>
<div class="tip" id="fs4">Multiple items<br />type QueryBuilder =<br />&#160;&#160;new : unit -&gt; QueryBuilder<br />&#160;&#160;member All : source:QuerySource&lt;&#39;T,&#39;Q&gt; * predicate:(&#39;T -&gt; bool) -&gt; bool<br />&#160;&#160;member AverageBy : source:QuerySource&lt;&#39;T,&#39;Q&gt; * projection:(&#39;T -&gt; &#39;Value) -&gt; &#39;Value (requires member ( + ) and member DivideByInt and member get_Zero)<br />&#160;&#160;member AverageByNullable : source:QuerySource&lt;&#39;T,&#39;Q&gt; * projection:(&#39;T -&gt; Nullable&lt;&#39;Value&gt;) -&gt; Nullable&lt;&#39;Value&gt; (requires member ( + ) and member DivideByInt and member get_Zero and default constructor and value type and &#39;Value :&gt; ValueType)<br />&#160;&#160;member Contains : source:QuerySource&lt;&#39;T,&#39;Q&gt; * key:&#39;T -&gt; bool<br />&#160;&#160;member Count : source:QuerySource&lt;&#39;T,&#39;Q&gt; -&gt; int<br />&#160;&#160;member Distinct : source:QuerySource&lt;&#39;T,&#39;Q&gt; -&gt; QuerySource&lt;&#39;T,&#39;Q&gt; (requires equality)<br />&#160;&#160;member ExactlyOne : source:QuerySource&lt;&#39;T,&#39;Q&gt; -&gt; &#39;T<br />&#160;&#160;member ExactlyOneOrDefault : source:QuerySource&lt;&#39;T,&#39;Q&gt; -&gt; &#39;T<br />&#160;&#160;member Exists : source:QuerySource&lt;&#39;T,&#39;Q&gt; * predicate:(&#39;T -&gt; bool) -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Linq.QueryBuilder<br /><br />--------------------<br />new : unit -&gt; Linq.QueryBuilder</div>
<div class="tip" id="fs5">Multiple items<br />type ReflectedDefinitionAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; ReflectedDefinitionAttribute<br /><br />Full name: Microsoft.FSharp.Core.ReflectedDefinitionAttribute<br /><br />--------------------<br />new : unit -&gt; ReflectedDefinitionAttribute</div>
<div class="tip" id="fs6">Multiple items<br />type CustomOperationAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : name:string -&gt; CustomOperationAttribute<br />&#160;&#160;member AllowIntoPattern : bool<br />&#160;&#160;member IsLikeGroupJoin : bool<br />&#160;&#160;member IsLikeJoin : bool<br />&#160;&#160;member IsLikeZip : bool<br />&#160;&#160;member JoinConditionWord : string<br />&#160;&#160;member MaintainsVariableSpace : bool<br />&#160;&#160;member MaintainsVariableSpaceUsingBind : bool<br />&#160;&#160;member Name : string<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Core.CustomOperationAttribute<br /><br />--------------------<br />new : name:string -&gt; CustomOperationAttribute</div>
<div class="tip" id="fs7">member Linq.QueryBuilder.ExactlyOneOrNone : source:Linq.QuerySource&lt;&#39;T,&#39;U&gt; -&gt; &#39;T option<br /><br />Full name: Script.ExactlyOneOrNone</div>
<div class="tip" id="fs8">val source : Linq.QuerySource&lt;&#39;T,&#39;U&gt;</div>
<div class="tip" id="fs9">Multiple items<br />type QuerySource&lt;&#39;T,&#39;Q&gt; =<br />&#160;&#160;new : seq&lt;&#39;T&gt; -&gt; QuerySource&lt;&#39;T,&#39;Q&gt;<br />&#160;&#160;member Source : seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Linq.QuerySource&lt;_,_&gt;<br /><br />--------------------<br />new : seq&lt;&#39;T&gt; -&gt; Linq.QuerySource&lt;&#39;T,&#39;Q&gt;</div>
<div class="tip" id="fs10">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs11">val query : Linq.QueryBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.query</div>
<div class="tip" id="fs12">member Linq.QueryBuilder.ExactlyOneOrDefault : source:Linq.QuerySource&lt;&#39;T,&#39;Q&gt; -&gt; &#39;T</div>
<div class="tip" id="fs13">member Linq.QueryBuilder.Select : source:Linq.QuerySource&lt;&#39;T,&#39;Q&gt; * projection:(&#39;T -&gt; &#39;Result) -&gt; Linq.QuerySource&lt;&#39;Result,&#39;Q&gt;</div>
<div class="tip" id="fs14">val x : &#39;T</div>
<div class="tip" id="fs15">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs16">val __ : Linq.QueryBuilder</div>
<div class="tip" id="fs17">member Linq.QueryBuilder.HeadOrNone : source:Linq.QuerySource&lt;&#39;T,&#39;U&gt; -&gt; &#39;T option<br /><br />Full name: Script.HeadOrNone</div>
<div class="tip" id="fs18">member Linq.QueryBuilder.HeadOrDefault : source:Linq.QuerySource&lt;&#39;T,&#39;Q&gt; -&gt; &#39;T</div>
<div class="tip" id="fs19">member Linq.QueryBuilder.LastOrNone : source:Linq.QuerySource&lt;&#39;T,&#39;U&gt; -&gt; &#39;T option<br /><br />Full name: Script.LastOrNone</div>
<div class="tip" id="fs20">member Linq.QueryBuilder.LastOrDefault : source:Linq.QuerySource&lt;&#39;T,&#39;Q&gt; -&gt; &#39;T</div>
<div class="tip" id="fs21">Multiple items<br />type AutoOpenAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AutoOpenAttribute<br />&#160;&#160;new : path:string -&gt; AutoOpenAttribute<br />&#160;&#160;member Path : string<br /><br />Full name: Microsoft.FSharp.Core.AutoOpenAttribute<br /><br />--------------------<br />new : unit -&gt; AutoOpenAttribute<br />new : path:string -&gt; AutoOpenAttribute</div>
<div class="tip" id="fs22">namespace Microsoft</div>
<div class="tip" id="fs23">namespace Microsoft.FSharp</div>
<div class="tip" id="fs24">namespace Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs25">val traverseQuotation : f:(Expr -&gt; Expr option) -&gt; q:Expr -&gt; Expr<br /><br />Full name: Script.QueryExtensions.traverseQuotation<br /><em><br /><br />&#160;Traverse a quotation and replace expressions according to &#39;f&#39;<br />&#160;(see also http://fssnip.net/1i)</em></div>
<div class="tip" id="fs26">val f : (Expr -&gt; Expr option)</div>
<div class="tip" id="fs27">val q : Expr</div>
<div class="tip" id="fs28">val defaultArg : arg:&#39;T option -&gt; defaultValue:&#39;T -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.defaultArg</div>
<div class="tip" id="fs29">module ExprShape<br /><br />from Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs30">active recognizer ShapeCombination: Expr -&gt; Choice&lt;Var,(Var * Expr),(obj * Expr list)&gt;<br /><br />Full name: Microsoft.FSharp.Quotations.ExprShape.( |ShapeVar|ShapeLambda|ShapeCombination| )</div>
<div class="tip" id="fs31">val a : obj</div>
<div class="tip" id="fs32">val args : Expr list</div>
<div class="tip" id="fs33">val nargs : Expr list</div>
<div class="tip" id="fs34">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs35">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs36">val RebuildShapeCombination : shape:obj * arguments:Expr list -&gt; Expr<br /><br />Full name: Microsoft.FSharp.Quotations.ExprShape.RebuildShapeCombination</div>
<div class="tip" id="fs37">active recognizer ShapeLambda: Expr -&gt; Choice&lt;Var,(Var * Expr),(obj * Expr list)&gt;<br /><br />Full name: Microsoft.FSharp.Quotations.ExprShape.( |ShapeVar|ShapeLambda|ShapeCombination| )</div>
<div class="tip" id="fs38">val v : Var</div>
<div class="tip" id="fs39">val body : Expr</div>
<div class="tip" id="fs40">Multiple items<br />type Expr =<br />&#160;&#160;override Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetFreeVars : unit -&gt; seq&lt;Var&gt;<br />&#160;&#160;member Substitute : substitution:(Var -&gt; Expr option) -&gt; Expr<br />&#160;&#160;member ToString : full:bool -&gt; string<br />&#160;&#160;member CustomAttributes : Expr list<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member AddressOf : target:Expr -&gt; Expr<br />&#160;&#160;static member AddressSet : target:Expr * value:Expr -&gt; Expr<br />&#160;&#160;static member Application : functionExpr:Expr * argument:Expr -&gt; Expr<br />&#160;&#160;static member Applications : functionExpr:Expr * arguments:Expr list list -&gt; Expr<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Quotations.Expr<br /><br />--------------------<br />type Expr&lt;&#39;T&gt; =<br />&#160;&#160;inherit Expr<br />&#160;&#160;member Raw : Expr<br /><br />Full name: Microsoft.FSharp.Quotations.Expr&lt;_&gt;</div>
<div class="tip" id="fs41">static member Expr.Lambda : parameter:Var * body:Expr -&gt; Expr</div>
<div class="tip" id="fs42">active recognizer ShapeVar: Expr -&gt; Choice&lt;Var,(Var * Expr),(obj * Expr list)&gt;<br /><br />Full name: Microsoft.FSharp.Quotations.ExprShape.( |ShapeVar|ShapeLambda|ShapeCombination| )</div>
<div class="tip" id="fs43">static member Expr.Var : variable:Var -&gt; Expr</div>
<div class="tip" id="fs44">val oldRun : e:Expr&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Script.QueryExtensions.oldRun<br /><em><br /><br />&#160;Store the original query.Run operation</em></div>
<div class="tip" id="fs45">val e : Expr&lt;&#39;T&gt;</div>
<div class="tip" id="fs46">member Linq.QueryBuilder.Run : Expr&lt;&#39;T&gt; -&gt; &#39;T<br />member Linq.QueryBuilder.Run : Expr&lt;Linq.QuerySource&lt;&#39;T,System.Collections.IEnumerable&gt;&gt; -&gt; seq&lt;&#39;T&gt;<br />member Linq.QueryBuilder.Run : Expr&lt;Linq.QuerySource&lt;&#39;T,IQueryable&gt;&gt; -&gt; IQueryable&lt;&#39;T&gt;</div>
<div class="tip" id="fs47">Multiple items<br />type CompiledNameAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : compiledName:string -&gt; CompiledNameAttribute<br />&#160;&#160;member CompiledName : string<br /><br />Full name: Microsoft.FSharp.Core.CompiledNameAttribute<br /><br />--------------------<br />new : compiledName:string -&gt; CompiledNameAttribute</div>
<div class="tip" id="fs48">val this : Linq.QueryBuilder</div>
<div class="tip" id="fs49">member Linq.QueryBuilder.Run : q:Expr&lt;&#39;T option&gt; -&gt; &#39;T option<br /><br />Full name: Script.QueryExtensions.Run</div>
<div class="tip" id="fs50">val q : Expr&lt;&#39;T option&gt;</div>
<div class="tip" id="fs51">module Patterns<br /><br />from Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs52">active recognizer Call: Expr -&gt; (Expr option * System.Reflection.MethodInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Call|_| )</div>
<div class="tip" id="fs53">val inst : Expr</div>
<div class="tip" id="fs54">module DerivedPatterns<br /><br />from Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs55">active recognizer MethodWithReflectedDefinition: System.Reflection.MethodBase -&gt; Expr option<br /><br />Full name: Microsoft.FSharp.Quotations.DerivedPatterns.( |MethodWithReflectedDefinition|_| )</div>
<div class="tip" id="fs56">active recognizer Lambdas: Expr -&gt; (Var list list * Expr) option<br /><br />Full name: Microsoft.FSharp.Quotations.DerivedPatterns.( |Lambdas|_| )</div>
<div class="tip" id="fs57">val vs : Var list list</div>
<div class="tip" id="fs58">val tab : Map&lt;Var,Expr&gt;</div>
<div class="tip" id="fs59">val map2 : mapping:(&#39;T1 -&gt; &#39;T2 -&gt; &#39;U) -&gt; list1:&#39;T1 list -&gt; list2:&#39;T2 list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map2</div>
<div class="tip" id="fs60">val vs : Var list</div>
<div class="tip" id="fs61">Multiple items<br />type Var =<br />&#160;&#160;interface IComparable<br />&#160;&#160;new : name:string * typ:Type * ?isMutable:bool -&gt; Var<br />&#160;&#160;member IsMutable : bool<br />&#160;&#160;member Name : string<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member Global : name:string * typ:Type -&gt; Var<br /><br />Full name: Microsoft.FSharp.Quotations.Var<br /><br />--------------------<br />new : name:string * typ:System.Type * ?isMutable:bool -&gt; Var</div>
<div class="tip" id="fs62">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs63">val arg : Expr</div>
<div class="tip" id="fs64">active recognizer NewTuple: Expr -&gt; Expr list option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewTuple|_| )</div>
<div class="tip" id="fs65">val zip : list1:&#39;T1 list -&gt; list2:&#39;T2 list -&gt; (&#39;T1 * &#39;T2) list<br /><br />Full name: Microsoft.FSharp.Collections.List.zip</div>
<div class="tip" id="fs66">val concat : lists:seq&lt;&#39;T list&gt; -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.concat</div>
<div class="tip" id="fs67">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member Remove : key:&#39;Key -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Map&lt;_,_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs68">val ofSeq : elements:seq&lt;&#39;Key * &#39;T&gt; -&gt; Map&lt;&#39;Key,&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.ofSeq</div>
<div class="tip" id="fs69">member Expr.Substitute : substitution:(Var -&gt; Expr option) -&gt; Expr</div>
<div class="tip" id="fs70">member Map.TryFind : key:&#39;Key -&gt; &#39;Value option</div>
<div class="tip" id="fs71">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs72">static member Expr.Cast : source:Expr -&gt; Expr&lt;&#39;T&gt;</div>
<div class="tip" id="fs73">val data : int list<br /><br />Full name: Script.data</div>
<div class="tip" id="fs74">val empty&lt;&#39;T&gt; : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.empty</div>
<div class="tip" id="fs75">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs76">val value : int option<br /><br />Full name: Script.value</div>
<div class="tip" id="fs77">val v : int</div>
<div class="tip" id="fs78">custom operation: select (&#39;Result)<br /><br />Calls Linq.QueryBuilder.Select </div>
<div class="tip" id="fs79">custom operation: exactlyOneOrNone<br /><br />Calls Linq.QueryBuilder.ExactlyOneOrNone </div>
<div class="tip" id="fs80">val a : int</div>
<div class="tip" id="fs81">val printf : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printf</div>

