<h2><a name="Growing-Tree-Algorithm-for-Maze-Generation" class="anchor" href="#Growing-Tree-Algorithm-for-Maze-Generation">Growing Tree Algorithm for Maze Generation</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">directions</span> <span class="o">=</span> [|
    <span class="n">0</span>, <span class="n">1</span>   <span class="c">// down</span>
    <span class="n">1</span>, <span class="n">0</span>   <span class="c">// right</span>
    <span class="n">0</span>, <span class="o">-</span><span class="n">1</span>  <span class="c">// up</span>
    <span class="o">-</span><span class="n">1</span>, <span class="n">0</span>  <span class="c">// left</span>
|]

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">CellType</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="p">Free</span> | <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="p">Wall</span>

<span class="c">/// Several heuristics for choosing the next cell</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">GrowMethod</span> <span class="o">=</span> 
    | <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="p">RecursiveBacktracker</span> 
    | <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="p">Prim</span> 
    | <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="p">ChooseTheOldest</span>
    <span id="fst9" onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9, document.getElementById('fst9'))" class="omitted">(overriden ToString())</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="f">createMaze</span> <span onmouseout="hideTip(event, 'fs11', 11)" onmouseover="showTip(event, 'fs11', 11)" class="i">xMax</span> <span onmouseout="hideTip(event, 'fs12', 12)" onmouseover="showTip(event, 'fs12', 12)" class="i">yMax</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 13)" onmouseover="showTip(event, 'fs13', 13)" class="i">maze</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 14)" onmouseover="showTip(event, 'fs14', 14)" class="t">Array2D</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 15)" onmouseover="showTip(event, 'fs15', 15)" class="f">create</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="i">xMax</span> <span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="i">yMax</span> <span onmouseout="hideTip(event, 'fs4', 18)" onmouseover="showTip(event, 'fs4', 18)" class="p">Wall</span>
    <span class="c">// Check if (x, y) are valid coordinates</span>
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs16', 19)" onmouseover="showTip(event, 'fs16', 19)" class="f">inMaze</span> <span onmouseout="hideTip(event, 'fs17', 20)" onmouseover="showTip(event, 'fs17', 20)" class="i">x</span> <span onmouseout="hideTip(event, 'fs18', 21)" onmouseover="showTip(event, 'fs18', 21)" class="i">y</span> <span class="o">=</span> <span class="n">0</span> <span class="o">&lt;=</span> <span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="i">x</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs17', 23)" onmouseover="showTip(event, 'fs17', 23)" class="i">x</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs11', 24)" onmouseover="showTip(event, 'fs11', 24)" class="i">xMax</span> <span class="o">&amp;&amp;</span> <span class="n">0</span> <span class="o">&lt;=</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="i">y</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs18', 26)" onmouseover="showTip(event, 'fs18', 26)" class="i">y</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs12', 27)" onmouseover="showTip(event, 'fs12', 27)" class="i">yMax</span>

    <span class="c">// The wall at (x, y) between current cell and another can be removed </span>
    <span class="c">// if all it&#39;s neighbors are walls too (we leave a border of walls)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 28)" onmouseover="showTip(event, 'fs19', 28)" class="f">canRemoveWall</span> <span onmouseout="hideTip(event, 'fs17', 29)" onmouseover="showTip(event, 'fs17', 29)" class="i">x</span> <span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="i">y</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 31)" onmouseover="showTip(event, 'fs20', 31)" class="i">dirs</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs1', 32)" onmouseover="showTip(event, 'fs1', 32)" class="i">directions</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs21', 33)" onmouseover="showTip(event, 'fs21', 33)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 34)" onmouseover="showTip(event, 'fs22', 34)" class="f">sumBy</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs23', 35)" onmouseover="showTip(event, 'fs23', 35)" class="i">dx</span>, <span onmouseout="hideTip(event, 'fs24', 36)" onmouseover="showTip(event, 'fs24', 36)" class="i">dy</span>) <span class="k">-&gt;</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 37)" onmouseover="showTip(event, 'fs25', 37)" class="i">x&#39;</span>, <span onmouseout="hideTip(event, 'fs26', 38)" onmouseover="showTip(event, 'fs26', 38)" class="i">y&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 39)" onmouseover="showTip(event, 'fs17', 39)" class="i">x</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs23', 40)" onmouseover="showTip(event, 'fs23', 40)" class="i">dx</span>, <span onmouseout="hideTip(event, 'fs18', 41)" onmouseover="showTip(event, 'fs18', 41)" class="i">y</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs24', 42)" onmouseover="showTip(event, 'fs24', 42)" class="i">dy</span>
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs16', 43)" onmouseover="showTip(event, 'fs16', 43)" class="f">inMaze</span> <span onmouseout="hideTip(event, 'fs25', 44)" onmouseover="showTip(event, 'fs25', 44)" class="i">x&#39;</span> <span onmouseout="hideTip(event, 'fs26', 45)" onmouseover="showTip(event, 'fs26', 45)" class="i">y&#39;</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs13', 46)" onmouseover="showTip(event, 'fs13', 46)" class="i">maze</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs25', 47)" onmouseover="showTip(event, 'fs25', 47)" class="i">x&#39;</span>, <span onmouseout="hideTip(event, 'fs26', 48)" onmouseover="showTip(event, 'fs26', 48)" class="i">y&#39;</span>] <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 49)" onmouseover="showTip(event, 'fs4', 49)" class="p">Wall</span> <span class="k">then</span> <span class="n">1</span> <span class="k">else</span> <span class="n">0</span>)
        <span onmouseout="hideTip(event, 'fs20', 50)" onmouseover="showTip(event, 'fs20', 50)" class="i">dirs</span> <span class="o">=</span> <span class="n">3</span>

    <span class="c">// Check if a cell is not free yet and the wall can be removed</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 51)" onmouseover="showTip(event, 'fs27', 51)" class="f">getPossibleDirections</span> (<span onmouseout="hideTip(event, 'fs17', 52)" onmouseover="showTip(event, 'fs17', 52)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs18', 53)" onmouseover="showTip(event, 'fs18', 53)" class="i">y</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 54)" onmouseover="showTip(event, 'fs28', 54)" class="i">async</span> {
        <span class="k">return</span> <span onmouseout="hideTip(event, 'fs1', 55)" onmouseover="showTip(event, 'fs1', 55)" class="i">directions</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs21', 56)" onmouseover="showTip(event, 'fs21', 56)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 57)" onmouseover="showTip(event, 'fs29', 57)" class="f">filter</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs23', 58)" onmouseover="showTip(event, 'fs23', 58)" class="i">dx</span>, <span onmouseout="hideTip(event, 'fs24', 59)" onmouseover="showTip(event, 'fs24', 59)" class="i">dy</span>) <span class="k">-&gt;</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 60)" onmouseover="showTip(event, 'fs25', 60)" class="i">x&#39;</span>, <span onmouseout="hideTip(event, 'fs26', 61)" onmouseover="showTip(event, 'fs26', 61)" class="i">y&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 62)" onmouseover="showTip(event, 'fs17', 62)" class="i">x</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs23', 63)" onmouseover="showTip(event, 'fs23', 63)" class="i">dx</span>, <span onmouseout="hideTip(event, 'fs18', 64)" onmouseover="showTip(event, 'fs18', 64)" class="i">y</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs24', 65)" onmouseover="showTip(event, 'fs24', 65)" class="i">dy</span>
            <span onmouseout="hideTip(event, 'fs16', 66)" onmouseover="showTip(event, 'fs16', 66)" class="f">inMaze</span> <span onmouseout="hideTip(event, 'fs25', 67)" onmouseover="showTip(event, 'fs25', 67)" class="i">x&#39;</span> <span onmouseout="hideTip(event, 'fs26', 68)" onmouseover="showTip(event, 'fs26', 68)" class="i">y&#39;</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs13', 69)" onmouseover="showTip(event, 'fs13', 69)" class="i">maze</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs25', 70)" onmouseover="showTip(event, 'fs25', 70)" class="i">x&#39;</span>, <span onmouseout="hideTip(event, 'fs26', 71)" onmouseover="showTip(event, 'fs26', 71)" class="i">y&#39;</span>] <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 72)" onmouseover="showTip(event, 'fs4', 72)" class="p">Wall</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs19', 73)" onmouseover="showTip(event, 'fs19', 73)" class="f">canRemoveWall</span> <span onmouseout="hideTip(event, 'fs25', 74)" onmouseover="showTip(event, 'fs25', 74)" class="i">x&#39;</span> <span onmouseout="hideTip(event, 'fs26', 75)" onmouseover="showTip(event, 'fs26', 75)" class="i">y&#39;</span>)}
    <span onmouseout="hideTip(event, 'fs13', 76)" onmouseover="showTip(event, 'fs13', 76)" class="i">maze</span>, <span onmouseout="hideTip(event, 'fs27', 77)" onmouseover="showTip(event, 'fs27', 77)" class="f">getPossibleDirections</span>

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs30', 78)" onmouseover="showTip(event, 'fs30', 78)" class="f">map</span> <span onmouseout="hideTip(event, 'fs31', 79)" onmouseover="showTip(event, 'fs31', 79)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs32', 80)" onmouseover="showTip(event, 'fs32', 80)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs33', 81)" onmouseover="showTip(event, 'fs33', 81)" class="i">y</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 82)" onmouseover="showTip(event, 'fs31', 82)" class="f">f</span> <span onmouseout="hideTip(event, 'fs32', 83)" onmouseover="showTip(event, 'fs32', 83)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs31', 84)" onmouseover="showTip(event, 'fs31', 84)" class="f">f</span> <span onmouseout="hideTip(event, 'fs33', 85)" onmouseover="showTip(event, 'fs33', 85)" class="i">y</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs34', 86)" onmouseover="showTip(event, 'fs34', 86)" class="t">MazeControl</span>() <span class="k">as</span> <span onmouseout="hideTip(event, 'fs35', 87)" onmouseover="showTip(event, 'fs35', 87)" class="v">this</span> <span class="o">=</span>
    <span class="k">inherit</span> <span class="i">UserControl</span>()

    <span class="k">let</span> <span class="i">pause</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs36', 88)" onmouseover="showTip(event, 'fs36', 88)" class="i">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 89)" onmouseover="showTip(event, 'fs37', 89)" class="i">Sleep</span> <span class="n">25</span>

    <span class="k">let</span> <span class="i">canvas</span> <span class="o">=</span> <span class="i">Canvas</span>(<span class="i">Background</span> <span class="o">=</span> <span class="i">SolidColorBrush</span> <span class="i">Colors</span><span class="o">.</span><span class="i">Blue</span>)
    <span class="k">do</span> <span class="i">this</span><span class="o">.</span><span class="i">Content</span> <span class="o">&lt;-</span> <span class="i">canvas</span>

    <span class="c">// Create a rectangle at the cell: current - red, others - white</span>
    <span class="k">let</span> <span class="i">createRectangle</span> (<span class="i">cell</span>, <span class="i">current</span>) <span class="o">=</span> <span id="fst38" onmouseout="hideTip(event, 'fs38', 90)" onmouseover="showTip(event, 'fs38', 90, document.getElementById('fst38'))" class="omitted">(...)</span>

    <span class="c">// Fill a cell with corresponding color</span>
    <span class="k">let</span> <span class="i">fill</span> <span class="o">=</span> <span class="i">createRectangle</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span class="i">canvas</span><span class="o">.</span><span class="i">Children</span><span class="o">.</span><span class="i">Add</span>
 
    
    <span class="k">let</span> <span class="i">drawMaze</span> <span class="i">xMax</span> <span class="i">yMax</span> <span class="i">growMethod</span> <span class="o">=</span>
        <span id="fst39" onmouseout="hideTip(event, 'fs39', 91)" onmouseover="showTip(event, 'fs39', 91, document.getElementById('fst39'))" class="omitted">(...)</span>
        <span class="k">let</span> <span class="i">maze</span>, <span class="i">getPossibleDirections</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 92)" onmouseover="showTip(event, 'fs10', 92)" class="i">createMaze</span> <span class="i">xMax</span> <span class="i">yMax</span>
        <span class="c">// List of the cells to choose from</span>
        <span class="k">let</span> <span class="i">cells</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs40', 93)" onmouseover="showTip(event, 'fs40', 93)" class="i">ResizeArray</span><span class="o">&lt;</span>_<span class="o">&gt;</span>()
        
        <span class="c">// To get the Recursive Backtracker we choose the most recent cell</span>
        <span class="c">// For Prim - the random one</span>
        <span class="c">// And the third one - the oldest</span>
        <span class="k">let</span> <span class="i">chooseNext</span>() <span class="o">=</span> 
            <span class="k">let</span> <span class="i">ind</span> <span class="o">=</span> 
                <span class="k">match</span> <span class="i">growMethod</span> <span class="k">with</span>
                | <span onmouseout="hideTip(event, 'fs6', 94)" onmouseover="showTip(event, 'fs6', 94)" class="i">RecursiveBacktracker</span> <span class="k">-&gt;</span> <span class="i">cells</span><span class="o">.</span><span class="i">Count</span> <span class="o">-</span> <span class="n">1</span>
                | <span onmouseout="hideTip(event, 'fs7', 95)" onmouseover="showTip(event, 'fs7', 95)" class="i">Prim</span> <span class="k">-&gt;</span> <span class="i">rand</span><span class="o">.</span><span class="i">Next</span> <span class="i">cells</span><span class="o">.</span><span class="i">Count</span>
                | _ <span class="k">-&gt;</span> <span class="n">0</span>
            <span class="i">cells</span><span class="o">.</span>[<span class="i">ind</span>]

        <span class="c">// Choose a start point</span>
        <span class="k">let</span> <span class="i">sx</span>, <span class="i">sy</span> <span class="o">=</span> <span class="i">rand</span><span class="o">.</span><span class="i">Next</span> (<span class="n">1</span>, <span class="i">xMax</span><span class="o">-</span><span class="n">1</span>), <span class="i">rand</span><span class="o">.</span><span class="i">Next</span> (<span class="n">1</span>, <span class="i">yMax</span><span class="o">-</span><span class="n">1</span>)
        <span class="i">maze</span><span class="o">.</span>[<span class="i">sx</span>, <span class="i">sy</span>] <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs3', 96)" onmouseover="showTip(event, 'fs3', 96)" class="i">Free</span>
        <span class="i">cells</span><span class="o">.</span><span class="i">Add</span> (<span class="i">sx</span>, <span class="i">sy</span>)

        <span class="c">// Draw the maze</span>
        <span class="k">let</span> <span class="k">rec</span> <span class="i">run</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 97)" onmouseover="showTip(event, 'fs28', 97)" class="i">async</span> {
            <span class="k">if</span> <span class="i">cells</span><span class="o">.</span><span class="i">Count</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span> () <span class="c">// If there&#39;re no cells - finish</span>
            <span class="k">else</span>
                <span class="c">// Go to the next cell and draw it as current</span>
                <span class="k">let</span> <span class="i">cell</span> <span class="o">=</span> <span class="i">chooseNext</span>()
                <span class="i">fill</span> (<span class="i">cell</span>, <span class="k">true</span>) 
                <span class="k">do!</span> <span class="i">pause</span>()

                <span class="k">let!</span> <span class="i">possibleDirections</span> <span class="o">=</span> <span class="i">getPossibleDirections</span> <span class="i">cell</span>
                <span class="k">match</span> <span class="i">possibleDirections</span><span class="o">.</span><span class="i">Length</span> <span class="k">with</span>
                | <span class="n">0</span> <span class="k">-&gt;</span> <span class="i">cells</span><span class="o">.</span><span class="i">Remove</span> <span class="i">cell</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 98)" onmouseover="showTip(event, 'fs41', 98)" class="i">ignore</span>  <span class="c">// There&#39;s no way to go - remove it</span>
                | <span class="i">len</span> <span class="k">-&gt;</span> 
                    <span class="c">// Randomly choose a direction</span>
                    <span class="k">let</span> <span class="i">dx</span>, <span class="i">dy</span> <span class="o">=</span> <span class="i">possibleDirections</span><span class="o">.</span>[<span class="i">rand</span><span class="o">.</span><span class="i">Next</span> <span class="i">len</span>]
                    <span class="k">let</span> <span class="i">x</span>, <span class="i">y</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs42', 99)" onmouseover="showTip(event, 'fs42', 99)" class="i">fst</span> <span class="i">cell</span> <span class="o">+</span> <span class="i">dx</span>, <span onmouseout="hideTip(event, 'fs43', 100)" onmouseover="showTip(event, 'fs43', 100)" class="i">snd</span> <span class="i">cell</span> <span class="o">+</span> <span class="i">dy</span>
                    <span class="i">maze</span><span class="o">.</span>[<span class="i">x</span>, <span class="i">y</span>] <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs3', 101)" onmouseover="showTip(event, 'fs3', 101)" class="i">Free</span>
                    <span class="c">// Add to list as a candidate for a futures growth</span>
                    <span class="i">cells</span><span class="o">.</span><span class="i">Add</span> (<span class="i">x</span>, <span class="i">y</span>)
               
                <span class="i">fill</span> (<span class="i">cell</span>, <span class="k">false</span>) <span class="c">// It&#39;s not current any more</span>
                <span class="k">do!</span> <span class="i">run</span>()  
        }
        <span class="i">run</span>()
    
    <span class="c">/// Drawing a 21x21 maze with a specified method</span>
    <span class="k">member</span> <span class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 102)" onmouseover="showTip(event, 'fs44', 102)" class="f">DrawMaze</span> <span class="i">growMethod</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs36', 103)" onmouseover="showTip(event, 'fs36', 103)" class="i">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 104)" onmouseover="showTip(event, 'fs45', 104)" class="i">CancelDefaultToken</span>() <span class="c">// Cancel drawing of the previous maze</span>
        <span class="i">canvas</span><span class="o">.</span><span class="i">Children</span><span class="o">.</span><span class="i">Clear</span>()  
        <span class="i">drawMaze</span> <span class="n">21</span> <span class="n">21</span> <span class="i">growMethod</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs36', 105)" onmouseover="showTip(event, 'fs36', 105)" class="i">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 106)" onmouseover="showTip(event, 'fs46', 106)" class="i">StartImmediate</span>        
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val directions : (int * int) []<br /><br />Full name: Script.directions</div>
<div class="tip" id="fs2">type CellType =<br />&#160;&#160;| Free<br />&#160;&#160;| Wall<br /><br />Full name: Script.CellType</div>
<div class="tip" id="fs3">union case CellType.Free: CellType</div>
<div class="tip" id="fs4">union case CellType.Wall: CellType</div>
<div class="tip" id="fs5">type GrowMethod =<br />&#160;&#160;| RecursiveBacktracker<br />&#160;&#160;| Prim<br />&#160;&#160;| ChooseTheOldest<br />&#160;&#160;override ToString : unit -&gt; string<br /><br />Full name: Script.GrowMethod<br /><em><br /><br />&#160;Several heuristics for choosing the next cell</em></div>
<div class="tip" id="fs6">union case GrowMethod.RecursiveBacktracker: GrowMethod</div>
<div class="tip" id="fs7">union case GrowMethod.Prim: GrowMethod</div>
<div class="tip" id="fs8">union case GrowMethod.ChooseTheOldest: GrowMethod</div>
<div class="tip" id="fs9">with override this.ToString() = <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;match this with <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| RecursiveBacktracker -&gt; &quot;Recursive Backtracker&quot;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| Prim -&gt; &quot;Prim&quot;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| ChooseTheOldest -&gt; &quot;Choose the Oldest&quot;</div>
<div class="tip" id="fs10">val createMaze : xMax:int -&gt; yMax:int -&gt; CellType [,] * (int * int -&gt; Async&lt;(int * int) []&gt;)<br /><br />Full name: Script.createMaze</div>
<div class="tip" id="fs11">val xMax : int</div>
<div class="tip" id="fs12">val yMax : int</div>
<div class="tip" id="fs13">val maze : CellType [,]</div>
<div class="tip" id="fs14">module Array2D<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs15">val create : length1:int -&gt; length2:int -&gt; value:&#39;T -&gt; &#39;T [,]<br /><br />Full name: Microsoft.FSharp.Collections.Array2D.create</div>
<div class="tip" id="fs16">val inMaze : (int -&gt; int -&gt; bool)</div>
<div class="tip" id="fs17">val x : int</div>
<div class="tip" id="fs18">val y : int</div>
<div class="tip" id="fs19">val canRemoveWall : (int -&gt; int -&gt; bool)</div>
<div class="tip" id="fs20">val dirs : int</div>
<div class="tip" id="fs21">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs22">val sumBy : projection:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U (requires member ( + ) and member get_Zero)<br /><br />Full name: Microsoft.FSharp.Collections.Array.sumBy</div>
<div class="tip" id="fs23">val dx : int</div>
<div class="tip" id="fs24">val dy : int</div>
<div class="tip" id="fs25">val x&#39; : int</div>
<div class="tip" id="fs26">val y&#39; : int</div>
<div class="tip" id="fs27">val getPossibleDirections : (int * int -&gt; Async&lt;(int * int) []&gt;)</div>
<div class="tip" id="fs28">val async : AsyncBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.async</div>
<div class="tip" id="fs29">val filter : predicate:(&#39;T -&gt; bool) -&gt; array:&#39;T [] -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.filter</div>
<div class="tip" id="fs30">val map : f:(&#39;a -&gt; &#39;b) -&gt; x:&#39;a * y:&#39;a -&gt; &#39;b * &#39;b<br /><br />Full name: Script.map</div>
<div class="tip" id="fs31">val f : (&#39;a -&gt; &#39;b)</div>
<div class="tip" id="fs32">val x : &#39;a</div>
<div class="tip" id="fs33">val y : &#39;a</div>
<div class="tip" id="fs34">Multiple items<br />type MazeControl =<br />&#160;&#160;inherit obj<br />&#160;&#160;new : unit -&gt; MazeControl<br />&#160;&#160;member DrawMaze : growMethod:&#39;a -&gt; &#39;b<br /><br />Full name: Script.MazeControl<br /><br />--------------------<br />new : unit -&gt; MazeControl</div>
<div class="tip" id="fs35">val this : MazeControl</div>
<div class="tip" id="fs36">Multiple items<br />type Async<br />static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member CancelDefaultToken : unit -&gt; unit<br />static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromContinuations : callback:((&#39;T -&gt; unit) * (exn -&gt; unit) * (OperationCanceledException -&gt; unit) -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;<br />static member OnCancel : interruption:(unit -&gt; unit) -&gt; Async&lt;IDisposable&gt;<br />static member Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;<br />static member RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T<br />static member Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;<br />static member Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;<br />static member StartChild : computation:Async&lt;&#39;T&gt; * ?millisecondsTimeout:int -&gt; Async&lt;Async&lt;&#39;T&gt;&gt;<br />static member StartChildAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions -&gt; Async&lt;Task&lt;&#39;T&gt;&gt;<br />static member StartImmediate : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartWithContinuations : computation:Async&lt;&#39;T&gt; * continuation:(&#39;T -&gt; unit) * exceptionContinuation:(exn -&gt; unit) * cancellationContinuation:(OperationCanceledException -&gt; unit) * ?cancellationToken:CancellationToken -&gt; unit<br />static member SwitchToContext : syncContext:SynchronizationContext -&gt; Async&lt;unit&gt;<br />static member SwitchToNewThread : unit -&gt; Async&lt;unit&gt;<br />static member SwitchToThreadPool : unit -&gt; Async&lt;unit&gt;<br />static member TryCancelled : computation:Async&lt;&#39;T&gt; * compensation:(OperationCanceledException -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member CancellationToken : Async&lt;CancellationToken&gt;<br />static member DefaultCancellationToken : CancellationToken<br /><br />Full name: Microsoft.FSharp.Control.Async<br /><br />--------------------<br />type Async&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Async&lt;_&gt;</div>
<div class="tip" id="fs37">static member Async.Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs38">let color, offset, size = if current then Colors.Red, 2., 6. else Colors.White, 0.5, 9. <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let x, y = map (fun x -&gt; float x * 10. + offset) cell<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let rect = Rectangle(Width = size, Height = size, Fill = SolidColorBrush color)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rect.SetValue(Canvas.LeftProperty, x)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rect.SetValue(Canvas.TopProperty, y)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rect</div>
<div class="tip" id="fs39">this.Width &lt;- float xMax * 10.<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.Height &lt;- float yMax * 10.<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let rand = System.Random()</div>
<div class="tip" id="fs40">type ResizeArray&lt;&#39;T&gt; = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.ResizeArray&lt;_&gt;</div>
<div class="tip" id="fs41">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>
<div class="tip" id="fs42">val fst : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T1<br /><br />Full name: Microsoft.FSharp.Core.Operators.fst</div>
<div class="tip" id="fs43">val snd : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T2<br /><br />Full name: Microsoft.FSharp.Core.Operators.snd</div>
<div class="tip" id="fs44">member MazeControl.DrawMaze : growMethod:&#39;a -&gt; &#39;b<br /><br />Full name: Script.MazeControl.DrawMaze<br /><em><br /><br />&#160;Drawing a 21x21 maze with a specified method</em></div>
<div class="tip" id="fs45">static member Async.CancelDefaultToken : unit -&gt; unit</div>
<div class="tip" id="fs46">static member Async.StartImmediate : computation:Async&lt;unit&gt; * ?cancellationToken:System.Threading.CancellationToken -&gt; unit</div>

