<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">async_sleep_fix</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Collections</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="i">Generic</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 8)" onmouseover="showTip(event, 'fs2', 8)" class="i">System</span><span class="o">.</span><span class="i">Reactive</span><span class="o">.</span><span class="i">Concurrency</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 9)" onmouseover="showTip(event, 'fs2', 9)" class="i">System</span><span class="o">.</span><span class="i">Reactive</span><span class="o">.</span><span class="i">Disposables</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 10)" onmouseover="showTip(event, 'fs2', 10)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 11)" onmouseover="showTip(event, 'fs5', 11)" class="i">Threading</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 12)" onmouseover="showTip(event, 'fs2', 12)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 13)" onmouseover="showTip(event, 'fs5', 13)" class="i">Threading</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 14)" onmouseover="showTip(event, 'fs6', 14)" class="i">Tasks</span>

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs7', 15)" onmouseover="showTip(event, 'fs7', 15)" class="t">Async</span> <span class="k">with</span>
        <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs8', 16)" onmouseover="showTip(event, 'fs8', 16)" class="f">SleepEx</span>(<span onmouseout="hideTip(event, 'fs9', 17)" onmouseover="showTip(event, 'fs9', 17)" class="i">milliseconds</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs10', 18)" onmouseover="showTip(event, 'fs10', 18)" class="t">int</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 19)" onmouseover="showTip(event, 'fs11', 19)" class="i">async</span>{
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs9', 20)" onmouseover="showTip(event, 'fs9', 20)" class="i">milliseconds</span> <span class="o">&gt;</span> <span class="n">0</span> <span class="k">then</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="i">disp</span> <span class="o">=</span> <span class="k">new</span> <span class="i">SerialDisposable</span>()
                <span class="k">use!</span> <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="i">ch</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 23)" onmouseover="showTip(event, 'fs7', 23)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 24)" onmouseover="showTip(event, 'fs14', 24)" class="f">OnCancel</span>(<span class="k">fun</span>()<span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs12', 25)" onmouseover="showTip(event, 'fs12', 25)" class="i">disp</span><span class="o">.</span><span class="i">Dispose</span>())
                <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs7', 26)" onmouseover="showTip(event, 'fs7', 26)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 27)" onmouseover="showTip(event, 'fs15', 27)" class="f">FromContinuations</span>(<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs16', 28)" onmouseover="showTip(event, 'fs16', 28)" class="f">success</span>, <span onmouseout="hideTip(event, 'fs17', 29)" onmouseover="showTip(event, 'fs17', 29)" class="f">error</span>, <span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="f">cancel</span>) <span class="k">-&gt;</span>
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="i">timerSubscription</span> <span class="o">=</span> <span class="k">new</span> <span class="i">SerialDisposable</span>()
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 32)" onmouseover="showTip(event, 'fs20', 32)" class="f">CompleteWith</span> <span class="o">=</span> 
                        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 33)" onmouseover="showTip(event, 'fs21', 33)" class="v">completed</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 34)" onmouseover="showTip(event, 'fs22', 34)" class="f">ref</span> <span class="n">0</span>
                        <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs23', 35)" onmouseover="showTip(event, 'fs23', 35)" class="f">cont</span> <span class="k">-&gt;</span>
                            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs24', 36)" onmouseover="showTip(event, 'fs24', 36)" class="t">Interlocked</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 37)" onmouseover="showTip(event, 'fs25', 37)" class="f">Exchange</span>(<span onmouseout="hideTip(event, 'fs21', 38)" onmouseover="showTip(event, 'fs21', 38)" class="v">completed</span>, <span class="n">1</span>) <span class="o">=</span> <span class="n">0</span> <span class="k">then</span>
                                <span onmouseout="hideTip(event, 'fs19', 39)" onmouseover="showTip(event, 'fs19', 39)" class="i">timerSubscription</span><span class="o">.</span><span class="i">Dispose</span>()
                                <span class="k">try</span> <span onmouseout="hideTip(event, 'fs23', 40)" onmouseover="showTip(event, 'fs23', 40)" class="f">cont</span>() <span class="k">with</span> _<span class="k">-&gt;</span>()

                    <span onmouseout="hideTip(event, 'fs12', 41)" onmouseover="showTip(event, 'fs12', 41)" class="i">disp</span><span class="o">.</span><span class="i">Disposable</span> <span class="o">&lt;-</span> <span class="i">Disposable</span><span class="o">.</span><span class="i">Create</span>(<span class="k">fun</span>()<span class="k">-&gt;</span>
                        <span onmouseout="hideTip(event, 'fs20', 42)" onmouseover="showTip(event, 'fs20', 42)" class="i">CompleteWith</span> (<span class="k">fun</span> ()<span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs18', 43)" onmouseover="showTip(event, 'fs18', 43)" class="i">cancel</span>(<span class="k">new</span> <span onmouseout="hideTip(event, 'fs26', 44)" onmouseover="showTip(event, 'fs26', 44)" class="i">OperationCanceledException</span>()))
                    )
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 45)" onmouseover="showTip(event, 'fs27', 45)" class="i">tmr</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs28', 46)" onmouseover="showTip(event, 'fs28', 46)" class="t">Timer</span>(
                        <span class="i">callback</span> <span class="o">=</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs29', 47)" onmouseover="showTip(event, 'fs29', 47)" class="i">state</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 48)" onmouseover="showTip(event, 'fs20', 48)" class="f">CompleteWith</span>(<span onmouseout="hideTip(event, 'fs16', 49)" onmouseover="showTip(event, 'fs16', 49)" class="f">success</span>)), 
                        <span onmouseout="hideTip(event, 'fs29', 50)" onmouseover="showTip(event, 'fs29', 50)" class="i">state</span> <span class="o">=</span> <span class="k">null</span>, <span class="i">dueTime</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 51)" onmouseover="showTip(event, 'fs9', 51)" class="i">milliseconds</span>, <span class="i">period</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 52)" onmouseover="showTip(event, 'fs30', 52)" class="t">Timeout</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 53)" onmouseover="showTip(event, 'fs31', 53)" class="i">Infinite</span>
                    )
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs27', 54)" onmouseover="showTip(event, 'fs27', 54)" class="i">tmr</span> <span class="o">=</span> <span class="k">null</span> <span class="k">then</span>
                        <span onmouseout="hideTip(event, 'fs20', 55)" onmouseover="showTip(event, 'fs20', 55)" class="f">CompleteWith</span>(<span class="k">fun</span> ()<span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs17', 56)" onmouseover="showTip(event, 'fs17', 56)" class="f">error</span>(<span class="k">new</span> <span onmouseout="hideTip(event, 'fs32', 57)" onmouseover="showTip(event, 'fs32', 57)" class="t">Exception</span>(<span class="s">&quot;failed to create timer&quot;</span>)))
                    <span class="k">else</span>
                        <span onmouseout="hideTip(event, 'fs19', 58)" onmouseover="showTip(event, 'fs19', 58)" class="i">timerSubscription</span><span class="o">.</span><span class="i">Disposable</span> <span class="o">&lt;-</span> <span class="i">Disposable</span><span class="o">.</span><span class="i">Create</span>(<span class="k">fun</span>()<span class="k">-&gt;</span>
                            <span class="k">try</span> <span onmouseout="hideTip(event, 'fs27', 59)" onmouseover="showTip(event, 'fs27', 59)" class="i">tmr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 60)" onmouseover="showTip(event, 'fs33', 60)" class="i">Dispose</span>() <span class="k">with</span> _ <span class="k">-&gt;</span> ()
                        )
                )
            <span class="k">else</span>
                <span class="k">return</span> ()
        }
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module async_sleep_fix</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace System.Collections</div>
<div class="tip" id="fs4">namespace System.Collections.Generic</div>
<div class="tip" id="fs5">namespace System.Threading</div>
<div class="tip" id="fs6">namespace System.Threading.Tasks</div>
<div class="tip" id="fs7">Multiple items<br />type Async<br />static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member CancelDefaultToken : unit -&gt; unit<br />static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromContinuations : callback:((&#39;T -&gt; unit) * (exn -&gt; unit) * (OperationCanceledException -&gt; unit) -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;<br />static member OnCancel : interruption:(unit -&gt; unit) -&gt; Async&lt;IDisposable&gt;<br />static member Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;<br />static member RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T<br />static member Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;<br />static member Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;<br />static member StartChild : computation:Async&lt;&#39;T&gt; * ?millisecondsTimeout:int -&gt; Async&lt;Async&lt;&#39;T&gt;&gt;<br />static member StartChildAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions -&gt; Async&lt;Task&lt;&#39;T&gt;&gt;<br />static member StartImmediate : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartWithContinuations : computation:Async&lt;&#39;T&gt; * continuation:(&#39;T -&gt; unit) * exceptionContinuation:(exn -&gt; unit) * cancellationContinuation:(OperationCanceledException -&gt; unit) * ?cancellationToken:CancellationToken -&gt; unit<br />static member SwitchToContext : syncContext:SynchronizationContext -&gt; Async&lt;unit&gt;<br />static member SwitchToNewThread : unit -&gt; Async&lt;unit&gt;<br />static member SwitchToThreadPool : unit -&gt; Async&lt;unit&gt;<br />static member TryCancelled : computation:Async&lt;&#39;T&gt; * compensation:(OperationCanceledException -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member CancellationToken : Async&lt;CancellationToken&gt;<br />static member DefaultCancellationToken : CancellationToken<br /><br />Full name: Microsoft.FSharp.Control.Async<br /><br />--------------------<br />type Async&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Async&lt;_&gt;</div>
<div class="tip" id="fs8">static member Async.SleepEx : milliseconds:int -&gt; Async&lt;unit&gt;<br /><br />Full name: async_sleep_fix.SleepEx</div>
<div class="tip" id="fs9">val milliseconds : int</div>
<div class="tip" id="fs10">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs11">val async : AsyncBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.async</div>
<div class="tip" id="fs12">val disp : obj</div>
<div class="tip" id="fs13">val ch : IDisposable</div>
<div class="tip" id="fs14">static member Async.OnCancel : interruption:(unit -&gt; unit) -&gt; Async&lt;IDisposable&gt;</div>
<div class="tip" id="fs15">static member Async.FromContinuations : callback:((&#39;T -&gt; unit) * (exn -&gt; unit) * (OperationCanceledException -&gt; unit) -&gt; unit) -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs16">val success : (unit -&gt; unit)</div>
<div class="tip" id="fs17">val error : (exn -&gt; unit)</div>
<div class="tip" id="fs18">val cancel : (OperationCanceledException -&gt; unit)</div>
<div class="tip" id="fs19">val timerSubscription : obj</div>
<div class="tip" id="fs20">val CompleteWith : ((unit -&gt; unit) -&gt; unit)</div>
<div class="tip" id="fs21">val completed : int ref</div>
<div class="tip" id="fs22">Multiple items<br />val ref : value:&#39;T -&gt; &#39;T ref<br /><br />Full name: Microsoft.FSharp.Core.Operators.ref<br /><br />--------------------<br />type &#39;T ref = Ref&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.ref&lt;_&gt;</div>
<div class="tip" id="fs23">val cont : (unit -&gt; unit)</div>
<div class="tip" id="fs24">type Interlocked =<br />&#160;&#160;static member Add : location1:int * value:int -&gt; int + 1 overload<br />&#160;&#160;static member CompareExchange : location1:int * value:int * comparand:int -&gt; int + 6 overloads<br />&#160;&#160;static member Decrement : location:int -&gt; int + 1 overload<br />&#160;&#160;static member Exchange : location1:int * value:int -&gt; int + 6 overloads<br />&#160;&#160;static member Increment : location:int -&gt; int + 1 overload<br />&#160;&#160;static member Read : location:int64 -&gt; int64<br /><br />Full name: System.Threading.Interlocked</div>
<div class="tip" id="fs25">Interlocked.Exchange&lt;&#39;T (requires reference type)&gt;(location1: byref&lt;&#39;T&gt;, value: &#39;T) : &#39;T<br />Interlocked.Exchange(location1: byref&lt;nativeint&gt;, value: nativeint) : nativeint<br />Interlocked.Exchange(location1: byref&lt;obj&gt;, value: obj) : obj<br />Interlocked.Exchange(location1: byref&lt;float&gt;, value: float) : float<br />Interlocked.Exchange(location1: byref&lt;float32&gt;, value: float32) : float32<br />Interlocked.Exchange(location1: byref&lt;int64&gt;, value: int64) : int64<br />Interlocked.Exchange(location1: byref&lt;int&gt;, value: int) : int</div>
<div class="tip" id="fs26">Multiple items<br />type OperationCanceledException =<br />&#160;&#160;inherit SystemException<br />&#160;&#160;new : unit -&gt; OperationCanceledException + 5 overloads<br />&#160;&#160;member CancellationToken : CancellationToken with get, set<br /><br />Full name: System.OperationCanceledException<br /><br />--------------------<br />OperationCanceledException() : unit<br />OperationCanceledException(message: string) : unit<br />OperationCanceledException(token: CancellationToken) : unit<br />OperationCanceledException(message: string, innerException: exn) : unit<br />OperationCanceledException(message: string, token: CancellationToken) : unit<br />OperationCanceledException(message: string, innerException: exn, token: CancellationToken) : unit</div>
<div class="tip" id="fs27">val tmr : Timer</div>
<div class="tip" id="fs28">Multiple items<br />type Timer =<br />&#160;&#160;inherit MarshalByRefObject<br />&#160;&#160;new : callback:TimerCallback -&gt; Timer + 4 overloads<br />&#160;&#160;member Change : dueTime:int * period:int -&gt; bool + 3 overloads<br />&#160;&#160;member Dispose : unit -&gt; unit + 1 overload<br /><br />Full name: System.Threading.Timer<br /><br />--------------------<br />Timer(callback: TimerCallback) : unit<br />Timer(callback: TimerCallback, state: obj, dueTime: int, period: int) : unit<br />Timer(callback: TimerCallback, state: obj, dueTime: TimeSpan, period: TimeSpan) : unit<br />Timer(callback: TimerCallback, state: obj, dueTime: uint32, period: uint32) : unit<br />Timer(callback: TimerCallback, state: obj, dueTime: int64, period: int64) : unit</div>
<div class="tip" id="fs29">val state : obj</div>
<div class="tip" id="fs30">type Timeout =<br />&#160;&#160;static val Infinite : int<br /><br />Full name: System.Threading.Timeout</div>
<div class="tip" id="fs31">field Timeout.Infinite = -1</div>
<div class="tip" id="fs32">Multiple items<br />type Exception =<br />&#160;&#160;new : unit -&gt; Exception + 2 overloads<br />&#160;&#160;member Data : IDictionary<br />&#160;&#160;member GetBaseException : unit -&gt; Exception<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;member GetType : unit -&gt; Type<br />&#160;&#160;member HelpLink : string with get, set<br />&#160;&#160;member InnerException : Exception<br />&#160;&#160;member Message : string<br />&#160;&#160;member Source : string with get, set<br />&#160;&#160;member StackTrace : string<br />&#160;&#160;...<br /><br />Full name: System.Exception<br /><br />--------------------<br />Exception() : unit<br />Exception(message: string) : unit<br />Exception(message: string, innerException: exn) : unit</div>
<div class="tip" id="fs33">Timer.Dispose() : unit<br />Timer.Dispose(notifyObject: WaitHandle) : bool</div>

