<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// Dynamic libray for F#.</span>
<span class="c">// Syntax: obj?FieldOrProperty() =&gt; obj </span>
<span class="c">//         obj?Property1?SubProperty2?MethodName1(arg)?MethodName2()?FieldOrProperty() =&gt; obj</span>
<span class="c">//         obj?MethodName(argument1,argement2,...) =&gt; obj or null</span>
<span class="c">//         obj?FieldOrPropertyName&lt;-Value =&gt; unit</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Reflection</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">Text</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">RegularExpressions</span>

<span class="k">let</span> <span class="k">rec</span> (<span class="o">?</span>) (<span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">ob</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="t">obj</span>) <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">name</span><span class="o">=</span>
  <span class="k">let</span> (|<span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="p">Tuple</span>|_|) <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="i">o</span><span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="t">Regex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="f">Match</span>(<span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">o</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="f">GetType</span>()<span class="o">.</span><span class="i">Name</span>,<span class="s">&quot;^Tuple`(\d*)&quot;</span>)<span class="o">|&gt;</span><span class="k">function</span>
      |<span onmouseout="hideTip(event, 'fs13', 16)" onmouseover="showTip(event, 'fs13', 16)" class="i">m</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="i">Success</span><span class="k">-&gt;</span>{<span class="n">1..</span><span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="i">Groups</span><span class="o">.</span>[<span class="n">1</span>]<span class="o">.</span><span class="i">Value</span><span class="o">|&gt;</span><span onmouseout="hideTip(event, 'fs16', 21)" onmouseover="showTip(event, 'fs16', 21)" class="f">int</span>}
                           <span class="o">|&gt;</span><span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs19', 24)" onmouseover="showTip(event, 'fs19', 24)" class="i">x</span><span class="k">-&gt;</span>((<span class="o">?</span>) <span onmouseout="hideTip(event, 'fs9', 25)" onmouseover="showTip(event, 'fs9', 25)" class="i">o</span> (<span class="s">&quot;Item&quot;</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs20', 26)" onmouseover="showTip(event, 'fs20', 26)" class="f">string</span>(<span onmouseout="hideTip(event, 'fs19', 27)" onmouseover="showTip(event, 'fs19', 27)" class="i">x</span>))(<span class="k">null</span>)))
                           <span class="o">|&gt;</span><span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 29)" onmouseover="showTip(event, 'fs21', 29)" class="f">toArray</span><span class="o">|&gt;</span><span onmouseout="hideTip(event, 'fs22', 30)" onmouseover="showTip(event, 'fs22', 30)" class="p">Some</span>
      |_<span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs23', 31)" onmouseover="showTip(event, 'fs23', 31)" class="p">None</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 32)" onmouseover="showTip(event, 'fs24', 32)" class="i">x</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs5', 33)" onmouseover="showTip(event, 'fs5', 33)" class="i">ob</span><span class="o">|&gt;</span><span class="k">function</span>
          | <span class="o">:?</span> (<span onmouseout="hideTip(event, 'fs6', 34)" onmouseover="showTip(event, 'fs6', 34)" class="t">obj</span><span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs6', 35)" onmouseover="showTip(event, 'fs6', 35)" class="t">obj</span>) <span class="k">as</span> <span onmouseout="hideTip(event, 'fs25', 36)" onmouseover="showTip(event, 'fs25', 36)" class="f">x</span><span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs25', 37)" onmouseover="showTip(event, 'fs25', 37)" class="f">x</span>()
          |<span onmouseout="hideTip(event, 'fs24', 38)" onmouseover="showTip(event, 'fs24', 38)" class="i">x</span><span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs24', 39)" onmouseover="showTip(event, 'fs24', 39)" class="i">x</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 40)" onmouseover="showTip(event, 'fs26', 40)" class="i">tp</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs24', 41)" onmouseover="showTip(event, 'fs24', 41)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 42)" onmouseover="showTip(event, 'fs12', 42)" class="f">GetType</span>()
  (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs27', 43)" onmouseover="showTip(event, 'fs27', 43)" class="i">arg</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 44)" onmouseover="showTip(event, 'fs6', 44)" class="t">obj</span>) <span class="k">-&gt;</span><span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 45)" onmouseover="showTip(event, 'fs28', 45)" class="i">ar</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs27', 46)" onmouseover="showTip(event, 'fs27', 46)" class="i">arg</span><span class="o">|&gt;</span><span class="k">function</span>
                           |<span class="k">null</span><span class="k">-&gt;</span>[||]
                           |<span onmouseout="hideTip(event, 'fs29', 47)" onmouseover="showTip(event, 'fs29', 47)" class="p">Tuple</span>(<span onmouseout="hideTip(event, 'fs30', 48)" onmouseover="showTip(event, 'fs30', 48)" class="i">arr</span>)<span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs30', 49)" onmouseover="showTip(event, 'fs30', 49)" class="i">arr</span>
                           |_<span class="k">-&gt;</span>[|<span onmouseout="hideTip(event, 'fs27', 50)" onmouseover="showTip(event, 'fs27', 50)" class="i">arg</span>|]
                   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 51)" onmouseover="showTip(event, 'fs31', 51)" class="f">fn2</span> <span onmouseout="hideTip(event, 'fs32', 52)" onmouseover="showTip(event, 'fs32', 52)" class="i">bn</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs26', 53)" onmouseover="showTip(event, 'fs26', 53)" class="i">tp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 54)" onmouseover="showTip(event, 'fs33', 54)" class="f">InvokeMember</span>(<span onmouseout="hideTip(event, 'fs7', 55)" onmouseover="showTip(event, 'fs7', 55)" class="i">name</span>,<span onmouseout="hideTip(event, 'fs32', 56)" onmouseover="showTip(event, 'fs32', 56)" class="i">bn</span>,<span class="k">null</span>,<span onmouseout="hideTip(event, 'fs24', 57)" onmouseover="showTip(event, 'fs24', 57)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs28', 58)" onmouseover="showTip(event, 'fs28', 58)" class="i">ar</span>)
                   <span class="k">try</span> <span onmouseout="hideTip(event, 'fs31', 59)" onmouseover="showTip(event, 'fs31', 59)" class="f">fn2</span> <span onmouseout="hideTip(event, 'fs34', 60)" onmouseover="showTip(event, 'fs34', 60)" class="t">BindingFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 61)" onmouseover="showTip(event, 'fs35', 61)" class="i">GetProperty</span>
                   <span class="k">with</span> _ <span class="k">-&gt;</span><span class="k">try</span> <span onmouseout="hideTip(event, 'fs31', 62)" onmouseover="showTip(event, 'fs31', 62)" class="f">fn2</span> <span onmouseout="hideTip(event, 'fs34', 63)" onmouseover="showTip(event, 'fs34', 63)" class="t">BindingFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 64)" onmouseover="showTip(event, 'fs36', 64)" class="i">GetField</span>
                            <span class="k">with</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 65)" onmouseover="showTip(event, 'fs31', 65)" class="f">fn2</span> <span onmouseout="hideTip(event, 'fs34', 66)" onmouseover="showTip(event, 'fs34', 66)" class="t">BindingFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 67)" onmouseover="showTip(event, 'fs37', 67)" class="i">InvokeMethod</span>)

<span class="k">let</span> (<span class="o">?&lt;-</span>) (<span onmouseout="hideTip(event, 'fs5', 68)" onmouseover="showTip(event, 'fs5', 68)" class="i">ob</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 69)" onmouseover="showTip(event, 'fs6', 69)" class="t">obj</span>) <span onmouseout="hideTip(event, 'fs7', 70)" onmouseover="showTip(event, 'fs7', 70)" class="i">name</span> <span onmouseout="hideTip(event, 'fs38', 71)" onmouseover="showTip(event, 'fs38', 71)" class="i">arg</span><span class="o">=</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 72)" onmouseover="showTip(event, 'fs24', 72)" class="i">x</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs5', 73)" onmouseover="showTip(event, 'fs5', 73)" class="i">ob</span><span class="o">|&gt;</span><span class="k">function</span>
          | <span class="o">:?</span> (<span onmouseout="hideTip(event, 'fs6', 74)" onmouseover="showTip(event, 'fs6', 74)" class="t">obj</span><span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs6', 75)" onmouseover="showTip(event, 'fs6', 75)" class="t">obj</span>) <span class="k">as</span> <span onmouseout="hideTip(event, 'fs25', 76)" onmouseover="showTip(event, 'fs25', 76)" class="f">x</span><span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs25', 77)" onmouseover="showTip(event, 'fs25', 77)" class="f">x</span>()
          |<span onmouseout="hideTip(event, 'fs24', 78)" onmouseover="showTip(event, 'fs24', 78)" class="i">x</span><span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs24', 79)" onmouseover="showTip(event, 'fs24', 79)" class="i">x</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 80)" onmouseover="showTip(event, 'fs39', 80)" class="f">fn</span> <span onmouseout="hideTip(event, 'fs32', 81)" onmouseover="showTip(event, 'fs32', 81)" class="i">bn</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs24', 82)" onmouseover="showTip(event, 'fs24', 82)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 83)" onmouseover="showTip(event, 'fs12', 83)" class="f">GetType</span>()<span class="o">.</span><span class="f">InvokeMember</span>(<span onmouseout="hideTip(event, 'fs7', 84)" onmouseover="showTip(event, 'fs7', 84)" class="i">name</span>,<span onmouseout="hideTip(event, 'fs32', 85)" onmouseover="showTip(event, 'fs32', 85)" class="i">bn</span>,<span class="k">null</span>,<span onmouseout="hideTip(event, 'fs24', 86)" onmouseover="showTip(event, 'fs24', 86)" class="i">x</span>,[|<span onmouseout="hideTip(event, 'fs38', 87)" onmouseover="showTip(event, 'fs38', 87)" class="i">arg</span>|])<span class="o">|&gt;</span><span onmouseout="hideTip(event, 'fs40', 88)" onmouseover="showTip(event, 'fs40', 88)" class="f">ignore</span>
  <span class="k">try</span> <span onmouseout="hideTip(event, 'fs39', 89)" onmouseover="showTip(event, 'fs39', 89)" class="f">fn</span> <span onmouseout="hideTip(event, 'fs34', 90)" onmouseover="showTip(event, 'fs34', 90)" class="t">BindingFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 91)" onmouseover="showTip(event, 'fs41', 91)" class="i">SetProperty</span>
  <span class="k">with</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs39', 92)" onmouseover="showTip(event, 'fs39', 92)" class="f">fn</span> <span onmouseout="hideTip(event, 'fs34', 93)" onmouseover="showTip(event, 'fs34', 93)" class="t">BindingFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 94)" onmouseover="showTip(event, 'fs42', 94)" class="i">SetField</span>

<span class="c">// Example 1</span>
<span class="c">//open System.Windows.Forms</span>
<span class="c">//let f=new Form():&gt;obj</span>
<span class="c">//let tb=new TextBox():&gt;obj</span>
<span class="c">//let x=125:&gt;obj</span>
<span class="c">//x?MinValue() // !!!! Warning adding &quot;()&quot; symbols after last field or property</span>
<span class="c">//f?Show()</span>
<span class="c">//f?SetDesktopLocation(100,200)</span>
<span class="c">//tb?Parent&lt;-f</span>
<span class="c">//f?Controls?Item(0)?Text&lt;-&quot;Check&quot;</span>
<span class="c">//tb?Text()</span>

<span class="c">// Example 2</span>
<span class="c">//let excel=Activator.CreateInstance(Type.GetTypeFromProgID(&quot;excel.application&quot;))</span>
<span class="c">//excel?Visible&lt;-true</span>
<span class="c">//let wb=excel?Workbooks?Add()</span>
<span class="c">//let sheet=wb?Worksheets?Item(1)</span>
<span class="c">//sheet?Range(&quot;a1&quot;)?Value&lt;-3</span>
<span class="c">//sheet?Range(&quot;b1&quot;)?Value&lt;-4</span>
<span class="c">//sheet?Range(&quot;c1&quot;)?Value&lt;-&quot;=a1+b1&quot;</span>
<span class="c">//sheet?Range(&quot;c1&quot;)?Text()</span>
<span class="c">//excel?Quit()</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Reflection</div>
<div class="tip" id="fs3">namespace System.Text</div>
<div class="tip" id="fs4">namespace System.Text.RegularExpressions</div>
<div class="tip" id="fs5">val ob : obj</div>
<div class="tip" id="fs6">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs7">val name : string</div>
<div class="tip" id="fs8">Multiple items<br />type Tuple =<br />&#160;&#160;static member Create&lt;&#39;T1&gt; : item1:&#39;T1 -&gt; Tuple&lt;&#39;T1&gt; + 7 overloads<br /><br />Full name: System.Tuple<br /><br />--------------------<br />type Tuple&lt;&#39;T1&gt; =<br />&#160;&#160;new : item1:&#39;T1 -&gt; Tuple&lt;&#39;T1&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 -&gt; Tuple&lt;&#39;T1, &#39;T2&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 * item5:&#39;T5 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4, &#39;T5&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member Item5 : &#39;T5<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_,_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 * item5:&#39;T5 * item6:&#39;T6 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4, &#39;T5, &#39;T6&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member Item5 : &#39;T5<br />&#160;&#160;member Item6 : &#39;T6<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 * item5:&#39;T5 * item6:&#39;T6 * item7:&#39;T7 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4, &#39;T5, &#39;T6, &#39;T7&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member Item5 : &#39;T5<br />&#160;&#160;member Item6 : &#39;T6<br />&#160;&#160;member Item7 : &#39;T7<br />&#160;&#160;...<br /><br />Full name: System.Tuple&lt;_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;TRest&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 * item5:&#39;T5 * item6:&#39;T6 * item7:&#39;T7 * rest:&#39;TRest -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4, &#39;T5, &#39;T6, &#39;T7, &#39;TRest&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member Item5 : &#39;T5<br />&#160;&#160;member Item6 : &#39;T6<br />&#160;&#160;member Item7 : &#39;T7<br />&#160;&#160;...<br /><br />Full name: System.Tuple&lt;_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />Tuple(item1: &#39;T1) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4, item5: &#39;T5) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4, item5: &#39;T5, item6: &#39;T6) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4, item5: &#39;T5, item6: &#39;T6, item7: &#39;T7) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4, item5: &#39;T5, item6: &#39;T6, item7: &#39;T7, rest: &#39;TRest) : unit</div>
<div class="tip" id="fs9">val o : &#39;a</div>
<div class="tip" id="fs10">Multiple items<br />type Regex =<br />&#160;&#160;new : pattern:string -&gt; Regex + 1 overload<br />&#160;&#160;member GetGroupNames : unit -&gt; string[]<br />&#160;&#160;member GetGroupNumbers : unit -&gt; int[]<br />&#160;&#160;member GroupNameFromNumber : i:int -&gt; string<br />&#160;&#160;member GroupNumberFromName : name:string -&gt; int<br />&#160;&#160;member IsMatch : input:string -&gt; bool + 1 overload<br />&#160;&#160;member Match : input:string -&gt; Match + 2 overloads<br />&#160;&#160;member Matches : input:string -&gt; MatchCollection + 1 overload<br />&#160;&#160;member Options : RegexOptions<br />&#160;&#160;member Replace : input:string * replacement:string -&gt; string + 5 overloads<br />&#160;&#160;...<br /><br />Full name: System.Text.RegularExpressions.Regex<br /><br />--------------------<br />Regex(pattern: string) : unit<br />Regex(pattern: string, options: RegexOptions) : unit</div>
<div class="tip" id="fs11">Regex.Match(input: string, pattern: string) : Match<br />Regex.Match(input: string, pattern: string, options: RegexOptions) : Match</div>
<div class="tip" id="fs12">Object.GetType() : Type</div>
<div class="tip" id="fs13">val m : Match</div>
<div class="tip" id="fs14">property Group.Success: bool</div>
<div class="tip" id="fs15">property Match.Groups: GroupCollection</div>
<div class="tip" id="fs16">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs17">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs18">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs19">val x : int</div>
<div class="tip" id="fs20">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs21">val toArray : source:seq&lt;&#39;T&gt; -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Seq.toArray</div>
<div class="tip" id="fs22">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs23">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs24">val x : obj</div>
<div class="tip" id="fs25">val x : (obj -&gt; obj)</div>
<div class="tip" id="fs26">val tp : Type</div>
<div class="tip" id="fs27">val arg : obj</div>
<div class="tip" id="fs28">val ar : obj []</div>
<div class="tip" id="fs29">Multiple items<br />active recognizer Tuple: &#39;a -&gt; obj [] option<br /><br />--------------------<br />type Tuple =<br />&#160;&#160;static member Create&lt;&#39;T1&gt; : item1:&#39;T1 -&gt; Tuple&lt;&#39;T1&gt; + 7 overloads<br /><br />Full name: System.Tuple<br /><br />--------------------<br />type Tuple&lt;&#39;T1&gt; =<br />&#160;&#160;new : item1:&#39;T1 -&gt; Tuple&lt;&#39;T1&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 -&gt; Tuple&lt;&#39;T1, &#39;T2&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 * item5:&#39;T5 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4, &#39;T5&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member Item5 : &#39;T5<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_,_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 * item5:&#39;T5 * item6:&#39;T6 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4, &#39;T5, &#39;T6&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member Item5 : &#39;T5<br />&#160;&#160;member Item6 : &#39;T6<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Tuple&lt;_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 * item5:&#39;T5 * item6:&#39;T6 * item7:&#39;T7 -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4, &#39;T5, &#39;T6, &#39;T7&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member Item5 : &#39;T5<br />&#160;&#160;member Item6 : &#39;T6<br />&#160;&#160;member Item7 : &#39;T7<br />&#160;&#160;...<br /><br />Full name: System.Tuple&lt;_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Tuple&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;TRest&gt; =<br />&#160;&#160;new : item1:&#39;T1 * item2:&#39;T2 * item3:&#39;T3 * item4:&#39;T4 * item5:&#39;T5 * item6:&#39;T6 * item7:&#39;T7 * rest:&#39;TRest -&gt; Tuple&lt;&#39;T1, &#39;T2, &#39;T3, &#39;T4, &#39;T5, &#39;T6, &#39;T7, &#39;TRest&gt;<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Item1 : &#39;T1<br />&#160;&#160;member Item2 : &#39;T2<br />&#160;&#160;member Item3 : &#39;T3<br />&#160;&#160;member Item4 : &#39;T4<br />&#160;&#160;member Item5 : &#39;T5<br />&#160;&#160;member Item6 : &#39;T6<br />&#160;&#160;member Item7 : &#39;T7<br />&#160;&#160;...<br /><br />Full name: System.Tuple&lt;_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />Tuple(item1: &#39;T1) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4, item5: &#39;T5) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4, item5: &#39;T5, item6: &#39;T6) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4, item5: &#39;T5, item6: &#39;T6, item7: &#39;T7) : unit<br /><br />--------------------<br />Tuple(item1: &#39;T1, item2: &#39;T2, item3: &#39;T3, item4: &#39;T4, item5: &#39;T5, item6: &#39;T6, item7: &#39;T7, rest: &#39;TRest) : unit</div>
<div class="tip" id="fs30">val arr : obj []</div>
<div class="tip" id="fs31">val fn2 : (BindingFlags -&gt; obj)</div>
<div class="tip" id="fs32">val bn : BindingFlags</div>
<div class="tip" id="fs33">Type.InvokeMember(name: string, invokeAttr: BindingFlags, binder: Binder, target: obj, args: obj []) : obj<br />Type.InvokeMember(name: string, invokeAttr: BindingFlags, binder: Binder, target: obj, args: obj [], culture: Globalization.CultureInfo) : obj<br />Type.InvokeMember(name: string, invokeAttr: BindingFlags, binder: Binder, target: obj, args: obj [], modifiers: ParameterModifier [], culture: Globalization.CultureInfo, namedParameters: string []) : obj</div>
<div class="tip" id="fs34">type BindingFlags =<br />&#160;&#160;| Default = 0<br />&#160;&#160;| IgnoreCase = 1<br />&#160;&#160;| DeclaredOnly = 2<br />&#160;&#160;| Instance = 4<br />&#160;&#160;| Static = 8<br />&#160;&#160;| Public = 16<br />&#160;&#160;| NonPublic = 32<br />&#160;&#160;| FlattenHierarchy = 64<br />&#160;&#160;| InvokeMethod = 256<br />&#160;&#160;| CreateInstance = 512<br />&#160;&#160;...<br /><br />Full name: System.Reflection.BindingFlags</div>
<div class="tip" id="fs35">field BindingFlags.GetProperty = 4096</div>
<div class="tip" id="fs36">field BindingFlags.GetField = 1024</div>
<div class="tip" id="fs37">field BindingFlags.InvokeMethod = 256</div>
<div class="tip" id="fs38">val arg : &#39;a</div>
<div class="tip" id="fs39">val fn : (BindingFlags -&gt; unit)</div>
<div class="tip" id="fs40">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>
<div class="tip" id="fs41">field BindingFlags.SetProperty = 8192</div>
<div class="tip" id="fs42">field BindingFlags.SetField = 2048</div>

