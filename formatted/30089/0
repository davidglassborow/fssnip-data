<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Reflection</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">Linq</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 6)" onmouseover="showTip(event, 'fs1', 6)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="i">Expressions</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="f">memoize</span> <span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="f">f</span> <span class="o">=</span>
           <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="i">dict</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 12)" onmouseover="showTip(event, 'fs1', 12)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">Concurrent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="t">ConcurrentDictionary</span><span class="o">&lt;</span>_,_<span class="o">&gt;</span>()
           <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 17)" onmouseover="showTip(event, 'fs7', 17)" class="i">dict</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="f">GetOrAdd</span>(<span onmouseout="hideTip(event, 'fs11', 19)" onmouseover="showTip(event, 'fs11', 19)" class="i">x</span>, <span class="k">lazy</span> (<span onmouseout="hideTip(event, 'fs6', 20)" onmouseover="showTip(event, 'fs6', 20)" class="f">f</span> <span onmouseout="hideTip(event, 'fs11', 21)" onmouseover="showTip(event, 'fs11', 21)" class="i">x</span>))<span class="o">.</span><span class="f">Force</span>()

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="f">getProperties</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 23)" onmouseover="showTip(event, 'fs5', 23)" class="f">memoize</span>(<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs14', 24)" onmouseover="showTip(event, 'fs14', 24)" class="i">t</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs15', 25)" onmouseover="showTip(event, 'fs15', 25)" class="t">Type</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 26)" onmouseover="showTip(event, 'fs14', 26)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 27)" onmouseover="showTip(event, 'fs16', 27)" class="f">GetProperties</span>(<span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="t">BindingFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="i">Instance</span> <span class="o">|||</span> <span onmouseout="hideTip(event, 'fs17', 30)" onmouseover="showTip(event, 'fs17', 30)" class="t">BindingFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="i">Public</span> <span class="o">|||</span> <span onmouseout="hideTip(event, 'fs17', 32)" onmouseover="showTip(event, 'fs17', 32)" class="t">BindingFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 33)" onmouseover="showTip(event, 'fs20', 33)" class="i">SetProperty</span>)<span class="o">.</span><span class="f">ToDictionary</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs21', 34)" onmouseover="showTip(event, 'fs21', 34)" class="i">p</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 35)" onmouseover="showTip(event, 'fs21', 35)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 36)" onmouseover="showTip(event, 'fs22', 36)" class="i">Name</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 37)" onmouseover="showTip(event, 'fs23', 37)" class="f">ToLower</span>()))

<span class="c">/// translate f# record init syntax tree into class property init tree: </span>
<span class="c">/// r -&gt; v1 -&gt; v2 ... invoke(v2).invoke(v1) </span>
<span class="c">/// into:</span>
<span class="c">/// new { prop1 = v1, prop2 = v2 }</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 38)" onmouseover="showTip(event, 'fs24', 38)" class="f">translate</span> <span onmouseout="hideTip(event, 'fs25', 39)" onmouseover="showTip(event, 'fs25', 39)" class="i">x</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs26', 40)" onmouseover="showTip(event, 'fs26', 40)" class="t">Expression</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs27', 41)" onmouseover="showTip(event, 'fs27', 41)" class="t">Func</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>,<span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="o">=</span> 
        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs28', 42)" onmouseover="showTip(event, 'fs28', 42)" class="f">extract</span> (<span onmouseout="hideTip(event, 'fs29', 43)" onmouseover="showTip(event, 'fs29', 43)" class="i">args</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs26', 44)" onmouseover="showTip(event, 'fs26', 44)" class="t">Expression</span> <span onmouseout="hideTip(event, 'fs30', 45)" onmouseover="showTip(event, 'fs30', 45)" class="t">seq</span>) (<span onmouseout="hideTip(event, 'fs31', 46)" onmouseover="showTip(event, 'fs31', 46)" class="i">ps</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs32', 47)" onmouseover="showTip(event, 'fs32', 47)" class="t">ParameterExpression</span> <span onmouseout="hideTip(event, 'fs30', 48)" onmouseover="showTip(event, 'fs30', 48)" class="t">seq</span>) <span onmouseout="hideTip(event, 'fs33', 49)" onmouseover="showTip(event, 'fs33', 49)" class="i">sx</span> <span class="o">=</span> 
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs34', 50)" onmouseover="showTip(event, 'fs34', 50)" class="f">box</span> <span onmouseout="hideTip(event, 'fs33', 51)" onmouseover="showTip(event, 'fs33', 51)" class="i">sx</span> <span class="k">with</span>
            | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs35', 52)" onmouseover="showTip(event, 'fs35', 52)" class="t">LambdaExpression</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs36', 53)" onmouseover="showTip(event, 'fs36', 53)" class="i">lambda</span> <span class="k">-&gt;</span> 
                <span class="k">match</span> <span onmouseout="hideTip(event, 'fs36', 54)" onmouseover="showTip(event, 'fs36', 54)" class="i">lambda</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 55)" onmouseover="showTip(event, 'fs37', 55)" class="i">Body</span> <span class="k">with</span>
                | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs38', 56)" onmouseover="showTip(event, 'fs38', 56)" class="t">NewExpression</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs39', 57)" onmouseover="showTip(event, 'fs39', 57)" class="i">n</span> <span class="k">-&gt;</span>
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 58)" onmouseover="showTip(event, 'fs40', 58)" class="i">props</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 59)" onmouseover="showTip(event, 'fs13', 59)" class="f">getProperties</span> <span onmouseout="hideTip(event, 'fs41', 60)" onmouseover="showTip(event, 'fs41', 60)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 61)" onmouseover="showTip(event, 'fs42', 61)" class="i">vals</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs36', 62)" onmouseover="showTip(event, 'fs36', 62)" class="i">lambda</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 63)" onmouseover="showTip(event, 'fs43', 63)" class="i">Parameters</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs44', 64)" onmouseover="showTip(event, 'fs44', 64)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 65)" onmouseover="showTip(event, 'fs45', 65)" class="f">append</span> <span onmouseout="hideTip(event, 'fs31', 66)" onmouseover="showTip(event, 'fs31', 66)" class="i">ps</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs44', 67)" onmouseover="showTip(event, 'fs44', 67)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 68)" onmouseover="showTip(event, 'fs46', 68)" class="f">skip</span> <span class="n">1</span> <span class="c">// skip $</span>
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs47', 69)" onmouseover="showTip(event, 'fs47', 69)" class="i">bindings</span> <span class="o">=</span> 
                        <span onmouseout="hideTip(event, 'fs42', 70)" onmouseover="showTip(event, 'fs42', 70)" class="i">vals</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 71)" onmouseover="showTip(event, 'fs48', 71)" class="f">Select</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs49', 72)" onmouseover="showTip(event, 'fs49', 72)" class="i">p</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs40', 73)" onmouseover="showTip(event, 'fs40', 73)" class="i">props</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 74)" onmouseover="showTip(event, 'fs50', 74)" class="f">TryGetValue</span>(<span onmouseout="hideTip(event, 'fs49', 75)" onmouseover="showTip(event, 'fs49', 75)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 76)" onmouseover="showTip(event, 'fs51', 76)" class="i">Name</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 77)" onmouseover="showTip(event, 'fs23', 77)" class="f">ToLower</span>()))<span class="o">.</span><span class="f">Where</span>(<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs52', 78)" onmouseover="showTip(event, 'fs52', 78)" class="i">f</span>,_) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs52', 79)" onmouseover="showTip(event, 'fs52', 79)" class="i">f</span>)
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs44', 80)" onmouseover="showTip(event, 'fs44', 80)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 81)" onmouseover="showTip(event, 'fs53', 81)" class="f">zip</span> <span onmouseout="hideTip(event, 'fs29', 82)" onmouseover="showTip(event, 'fs29', 82)" class="i">args</span>
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs44', 83)" onmouseover="showTip(event, 'fs44', 83)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs54', 84)" onmouseover="showTip(event, 'fs54', 84)" class="f">map</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs55', 85)" onmouseover="showTip(event, 'fs55', 85)" class="i">a</span>, (_,<span onmouseout="hideTip(event, 'fs21', 86)" onmouseover="showTip(event, 'fs21', 86)" class="i">p</span>)) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs26', 87)" onmouseover="showTip(event, 'fs26', 87)" class="t">Expression</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 88)" onmouseover="showTip(event, 'fs56', 88)" class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs21', 89)" onmouseover="showTip(event, 'fs21', 89)" class="i">p</span>, <span onmouseout="hideTip(event, 'fs55', 90)" onmouseover="showTip(event, 'fs55', 90)" class="i">a</span>))
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs44', 91)" onmouseover="showTip(event, 'fs44', 91)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 92)" onmouseover="showTip(event, 'fs45', 92)" class="f">append</span> 
                               (<span onmouseout="hideTip(event, 'fs39', 93)" onmouseover="showTip(event, 'fs39', 93)" class="i">n</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 94)" onmouseover="showTip(event, 'fs57', 94)" class="i">Constructor</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 95)" onmouseover="showTip(event, 'fs58', 95)" class="f">GetParameters</span>()
                                 <span class="o">.</span><span class="f">Select</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs59', 96)" onmouseover="showTip(event, 'fs59', 96)" class="i">p</span> <span onmouseout="hideTip(event, 'fs60', 97)" onmouseover="showTip(event, 'fs60', 97)" class="i">i</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs59', 98)" onmouseover="showTip(event, 'fs59', 98)" class="i">p</span>, <span onmouseout="hideTip(event, 'fs39', 99)" onmouseover="showTip(event, 'fs39', 99)" class="i">n</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 100)" onmouseover="showTip(event, 'fs61', 100)" class="i">Arguments</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs60', 101)" onmouseover="showTip(event, 'fs60', 101)" class="i">i</span>]))
                                 <span class="o">.</span><span class="f">Where</span>(<span class="k">fun</span> (_, <span onmouseout="hideTip(event, 'fs55', 102)" onmouseover="showTip(event, 'fs55', 102)" class="i">a</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs55', 103)" onmouseover="showTip(event, 'fs55', 103)" class="i">a</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 104)" onmouseover="showTip(event, 'fs62', 104)" class="i">NodeType</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs63', 105)" onmouseover="showTip(event, 'fs63', 105)" class="t">ExpressionType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 106)" onmouseover="showTip(event, 'fs64', 106)" class="i">Constant</span>)
                                 <span class="o">.</span><span class="f">Select</span>(<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs59', 107)" onmouseover="showTip(event, 'fs59', 107)" class="i">p</span>, <span onmouseout="hideTip(event, 'fs55', 108)" onmouseover="showTip(event, 'fs55', 108)" class="i">a</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs26', 109)" onmouseover="showTip(event, 'fs26', 109)" class="t">Expression</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 110)" onmouseover="showTip(event, 'fs56', 110)" class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs40', 111)" onmouseover="showTip(event, 'fs40', 111)" class="i">props</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs59', 112)" onmouseover="showTip(event, 'fs59', 112)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 113)" onmouseover="showTip(event, 'fs65', 113)" class="i">Name</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 114)" onmouseover="showTip(event, 'fs23', 114)" class="f">ToLower</span>()], <span onmouseout="hideTip(event, 'fs55', 115)" onmouseover="showTip(event, 'fs55', 115)" class="i">a</span>)))
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs44', 116)" onmouseover="showTip(event, 'fs44', 116)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs54', 117)" onmouseover="showTip(event, 'fs54', 117)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs66', 118)" onmouseover="showTip(event, 'fs66', 118)" class="i">b</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs66', 119)" onmouseover="showTip(event, 'fs66', 119)" class="i">b</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs67', 120)" onmouseover="showTip(event, 'fs67', 120)" class="t">MemberBinding</span>)
                        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs68', 121)" onmouseover="showTip(event, 'fs68', 121)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 122)" onmouseover="showTip(event, 'fs69', 122)" class="f">ofSeq</span>

                    <span onmouseout="hideTip(event, 'fs26', 123)" onmouseover="showTip(event, 'fs26', 123)" class="t">Expression</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 124)" onmouseover="showTip(event, 'fs70', 124)" class="f">Lambda</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs27', 125)" onmouseover="showTip(event, 'fs27', 125)" class="t">Func</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>,<span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs26', 126)" onmouseover="showTip(event, 'fs26', 126)" class="t">Expression</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 127)" onmouseover="showTip(event, 'fs71', 127)" class="f">MemberInit</span>(<span onmouseout="hideTip(event, 'fs26', 128)" onmouseover="showTip(event, 'fs26', 128)" class="t">Expression</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 129)" onmouseover="showTip(event, 'fs72', 129)" class="f">New</span>(<span onmouseout="hideTip(event, 'fs41', 130)" onmouseover="showTip(event, 'fs41', 130)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>),<span onmouseout="hideTip(event, 'fs47', 131)" onmouseover="showTip(event, 'fs47', 131)" class="i">bindings</span>), <span onmouseout="hideTip(event, 'fs36', 132)" onmouseover="showTip(event, 'fs36', 132)" class="i">lambda</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 133)" onmouseover="showTip(event, 'fs43', 133)" class="i">Parameters</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs44', 134)" onmouseover="showTip(event, 'fs44', 134)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 135)" onmouseover="showTip(event, 'fs45', 135)" class="f">append</span> <span onmouseout="hideTip(event, 'fs31', 136)" onmouseover="showTip(event, 'fs31', 136)" class="i">ps</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs44', 137)" onmouseover="showTip(event, 'fs44', 137)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 138)" onmouseover="showTip(event, 'fs73', 138)" class="f">take</span> <span class="n">1</span>) <span class="c">// take $</span>
                | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs74', 139)" onmouseover="showTip(event, 'fs74', 139)" class="t">MethodCallExpression</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs75', 140)" onmouseover="showTip(event, 'fs75', 140)" class="i">call</span> <span class="k">-&gt;</span>
                    <span onmouseout="hideTip(event, 'fs28', 141)" onmouseover="showTip(event, 'fs28', 141)" class="f">extract</span> (<span onmouseout="hideTip(event, 'fs44', 142)" onmouseover="showTip(event, 'fs44', 142)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 143)" onmouseover="showTip(event, 'fs45', 143)" class="f">append</span> <span onmouseout="hideTip(event, 'fs29', 144)" onmouseover="showTip(event, 'fs29', 144)" class="i">args</span> <span onmouseout="hideTip(event, 'fs75', 145)" onmouseover="showTip(event, 'fs75', 145)" class="i">call</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs76', 146)" onmouseover="showTip(event, 'fs76', 146)" class="i">Arguments</span>) (<span onmouseout="hideTip(event, 'fs44', 147)" onmouseover="showTip(event, 'fs44', 147)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 148)" onmouseover="showTip(event, 'fs45', 148)" class="f">append</span> <span onmouseout="hideTip(event, 'fs31', 149)" onmouseover="showTip(event, 'fs31', 149)" class="i">ps</span> <span onmouseout="hideTip(event, 'fs36', 150)" onmouseover="showTip(event, 'fs36', 150)" class="i">lambda</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 151)" onmouseover="showTip(event, 'fs43', 151)" class="i">Parameters</span>) <span onmouseout="hideTip(event, 'fs75', 152)" onmouseover="showTip(event, 'fs75', 152)" class="i">call</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs77', 153)" onmouseover="showTip(event, 'fs77', 153)" class="i">Object</span>
                | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs78', 154)" onmouseover="showTip(event, 'fs78', 154)" class="f">failwith</span> <span class="s">&quot;Don&#39;t know how to translate the expression&quot;</span>
            | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 155)" onmouseover="showTip(event, 'fs25', 155)" class="i">x</span>
        <span onmouseout="hideTip(event, 'fs28', 156)" onmouseover="showTip(event, 'fs28', 156)" class="f">extract</span> <span onmouseout="hideTip(event, 'fs44', 157)" onmouseover="showTip(event, 'fs44', 157)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 158)" onmouseover="showTip(event, 'fs79', 158)" class="i">empty</span> <span onmouseout="hideTip(event, 'fs44', 159)" onmouseover="showTip(event, 'fs44', 159)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 160)" onmouseover="showTip(event, 'fs79', 160)" class="i">empty</span> <span onmouseout="hideTip(event, 'fs25', 161)" onmouseover="showTip(event, 'fs25', 161)" class="i">x</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Reflection</div>
<div class="tip" id="fs3">namespace System.Linq</div>
<div class="tip" id="fs4">namespace System.Linq.Expressions</div>
<div class="tip" id="fs5">val memoize : f:(&#39;a -&gt; &#39;b) -&gt; (&#39;a -&gt; &#39;b)<br /><br />Full name: Script.memoize</div>
<div class="tip" id="fs6">val f : (&#39;a -&gt; &#39;b)</div>
<div class="tip" id="fs7">val dict : Collections.Concurrent.ConcurrentDictionary&lt;&#39;a,Lazy&lt;&#39;b&gt;&gt;</div>
<div class="tip" id="fs8">namespace System.Collections</div>
<div class="tip" id="fs9">namespace System.Collections.Concurrent</div>
<div class="tip" id="fs10">Multiple items<br />type ConcurrentDictionary&lt;&#39;TKey,&#39;TValue&gt; =<br />&#160;&#160;new : unit -&gt; ConcurrentDictionary&lt;&#39;TKey, &#39;TValue&gt; + 6 overloads<br />&#160;&#160;member AddOrUpdate : key:&#39;TKey * addValueFactory:Func&lt;&#39;TKey, &#39;TValue&gt; * updateValueFactory:Func&lt;&#39;TKey, &#39;TValue, &#39;TValue&gt; -&gt; &#39;TValue + 1 overload<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member ContainsKey : key:&#39;TKey -&gt; bool<br />&#160;&#160;member Count : int<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator&lt;KeyValuePair&lt;&#39;TKey, &#39;TValue&gt;&gt;<br />&#160;&#160;member GetOrAdd : key:&#39;TKey * valueFactory:Func&lt;&#39;TKey, &#39;TValue&gt; -&gt; &#39;TValue + 1 overload<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : &#39;TKey -&gt; &#39;TValue with get, set<br />&#160;&#160;member Keys : ICollection&lt;&#39;TKey&gt;<br />&#160;&#160;...<br /><br />Full name: System.Collections.Concurrent.ConcurrentDictionary&lt;_,_&gt;<br /><br />--------------------<br />Collections.Concurrent.ConcurrentDictionary() : unit<br />Collections.Concurrent.ConcurrentDictionary(collection: Collections.Generic.IEnumerable&lt;Collections.Generic.KeyValuePair&lt;&#39;TKey,&#39;TValue&gt;&gt;) : unit<br />Collections.Concurrent.ConcurrentDictionary(comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Collections.Concurrent.ConcurrentDictionary(concurrencyLevel: int, capacity: int) : unit<br />Collections.Concurrent.ConcurrentDictionary(collection: Collections.Generic.IEnumerable&lt;Collections.Generic.KeyValuePair&lt;&#39;TKey,&#39;TValue&gt;&gt;, comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Collections.Concurrent.ConcurrentDictionary(concurrencyLevel: int, collection: Collections.Generic.IEnumerable&lt;Collections.Generic.KeyValuePair&lt;&#39;TKey,&#39;TValue&gt;&gt;, comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Collections.Concurrent.ConcurrentDictionary(concurrencyLevel: int, capacity: int, comparer: Collections.Generic.IEqualityComparer&lt;&#39;TKey&gt;) : unit</div>
<div class="tip" id="fs11">val x : &#39;a</div>
<div class="tip" id="fs12">Collections.Concurrent.ConcurrentDictionary.GetOrAdd(key: &#39;a, value: Lazy&lt;&#39;b&gt;) : Lazy&lt;&#39;b&gt;<br />Collections.Concurrent.ConcurrentDictionary.GetOrAdd(key: &#39;a, valueFactory: Func&lt;&#39;a,Lazy&lt;&#39;b&gt;&gt;) : Lazy&lt;&#39;b&gt;</div>
<div class="tip" id="fs13">val getProperties : (Type -&gt; Collections.Generic.Dictionary&lt;string,PropertyInfo&gt;)<br /><br />Full name: Script.getProperties</div>
<div class="tip" id="fs14">val t : Type</div>
<div class="tip" id="fs15">type Type =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Assembly : Assembly<br />&#160;&#160;member AssemblyQualifiedName : string<br />&#160;&#160;member Attributes : TypeAttributes<br />&#160;&#160;member BaseType : Type<br />&#160;&#160;member ContainsGenericParameters : bool<br />&#160;&#160;member DeclaringMethod : MethodBase<br />&#160;&#160;member DeclaringType : Type<br />&#160;&#160;member Equals : o:obj -&gt; bool + 1 overload<br />&#160;&#160;member FindInterfaces : filter:TypeFilter * filterCriteria:obj -&gt; Type[]<br />&#160;&#160;member FindMembers : memberType:MemberTypes * bindingAttr:BindingFlags * filter:MemberFilter * filterCriteria:obj -&gt; MemberInfo[]<br />&#160;&#160;...<br /><br />Full name: System.Type</div>
<div class="tip" id="fs16">Type.GetProperties() : PropertyInfo []<br />Type.GetProperties(bindingAttr: BindingFlags) : PropertyInfo []</div>
<div class="tip" id="fs17">type BindingFlags =<br />&#160;&#160;| Default = 0<br />&#160;&#160;| IgnoreCase = 1<br />&#160;&#160;| DeclaredOnly = 2<br />&#160;&#160;| Instance = 4<br />&#160;&#160;| Static = 8<br />&#160;&#160;| Public = 16<br />&#160;&#160;| NonPublic = 32<br />&#160;&#160;| FlattenHierarchy = 64<br />&#160;&#160;| InvokeMethod = 256<br />&#160;&#160;| CreateInstance = 512<br />&#160;&#160;...<br /><br />Full name: System.Reflection.BindingFlags</div>
<div class="tip" id="fs18">field BindingFlags.Instance = 4</div>
<div class="tip" id="fs19">field BindingFlags.Public = 16</div>
<div class="tip" id="fs20">field BindingFlags.SetProperty = 8192</div>
<div class="tip" id="fs21">val p : PropertyInfo</div>
<div class="tip" id="fs22">property MemberInfo.Name: string</div>
<div class="tip" id="fs23">String.ToLower() : string<br />String.ToLower(culture: Globalization.CultureInfo) : string</div>
<div class="tip" id="fs24">val translate : x:Expression&lt;Func&lt;&#39;T,&#39;T&gt;&gt; -&gt; Expression&lt;Func&lt;&#39;T,&#39;T&gt;&gt;<br /><br />Full name: Script.translate<br /><em><br /><br />&#160;translate f# record init syntax tree into class property init tree: <br />&#160;r -&gt; v1 -&gt; v2 ... invoke(v2).invoke(v1) <br />&#160;into:<br />&#160;new { prop1 = v1, prop2 = v2 }</em></div>
<div class="tip" id="fs25">val x : Expression&lt;Func&lt;&#39;T,&#39;T&gt;&gt;</div>
<div class="tip" id="fs26">Multiple items<br />type Expression =<br />&#160;&#160;member CanReduce : bool<br />&#160;&#160;member NodeType : ExpressionType<br />&#160;&#160;member Reduce : unit -&gt; Expression<br />&#160;&#160;member ReduceAndCheck : unit -&gt; Expression<br />&#160;&#160;member ReduceExtensions : unit -&gt; Expression<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member Add : left:Expression * right:Expression -&gt; BinaryExpression + 1 overload<br />&#160;&#160;static member AddAssign : left:Expression * right:Expression -&gt; BinaryExpression + 2 overloads<br />&#160;&#160;static member AddAssignChecked : left:Expression * right:Expression -&gt; BinaryExpression + 2 overloads<br />&#160;&#160;...<br /><br />Full name: System.Linq.Expressions.Expression<br /><br />--------------------<br />type Expression&lt;&#39;TDelegate&gt; =<br />&#160;&#160;inherit LambdaExpression<br />&#160;&#160;member Compile : unit -&gt; &#39;TDelegate + 1 overload<br />&#160;&#160;member Update : body:Expression * parameters:IEnumerable&lt;ParameterExpression&gt; -&gt; Expression&lt;&#39;TDelegate&gt;<br /><br />Full name: System.Linq.Expressions.Expression&lt;_&gt;</div>
<div class="tip" id="fs27">Multiple items<br />type Func&lt;&#39;TResult&gt; =<br />&#160;&#160;delegate of unit -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;T16,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 * &#39;T16 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;</div>
<div class="tip" id="fs28">val extract : (seq&lt;Expression&gt; -&gt; seq&lt;ParameterExpression&gt; -&gt; Expression -&gt; Expression&lt;Func&lt;&#39;T,&#39;T&gt;&gt;)</div>
<div class="tip" id="fs29">val args : seq&lt;Expression&gt;</div>
<div class="tip" id="fs30">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs31">val ps : seq&lt;ParameterExpression&gt;</div>
<div class="tip" id="fs32">type ParameterExpression =<br />&#160;&#160;inherit Expression<br />&#160;&#160;member IsByRef : bool<br />&#160;&#160;member Name : string<br />&#160;&#160;member NodeType : ExpressionType<br />&#160;&#160;member Type : Type<br /><br />Full name: System.Linq.Expressions.ParameterExpression</div>
<div class="tip" id="fs33">val sx : Expression</div>
<div class="tip" id="fs34">val box : value:&#39;T -&gt; obj<br /><br />Full name: Microsoft.FSharp.Core.Operators.box</div>
<div class="tip" id="fs35">type LambdaExpression =<br />&#160;&#160;inherit Expression<br />&#160;&#160;member Body : Expression<br />&#160;&#160;member Compile : unit -&gt; Delegate + 1 overload<br />&#160;&#160;member CompileToMethod : method:MethodBuilder -&gt; unit + 1 overload<br />&#160;&#160;member Name : string<br />&#160;&#160;member NodeType : ExpressionType<br />&#160;&#160;member Parameters : ReadOnlyCollection&lt;ParameterExpression&gt;<br />&#160;&#160;member ReturnType : Type<br />&#160;&#160;member TailCall : bool<br />&#160;&#160;member Type : Type<br /><br />Full name: System.Linq.Expressions.LambdaExpression</div>
<div class="tip" id="fs36">val lambda : LambdaExpression</div>
<div class="tip" id="fs37">property LambdaExpression.Body: Expression</div>
<div class="tip" id="fs38">type NewExpression =<br />&#160;&#160;inherit Expression<br />&#160;&#160;member Arguments : ReadOnlyCollection&lt;Expression&gt;<br />&#160;&#160;member Constructor : ConstructorInfo<br />&#160;&#160;member Members : ReadOnlyCollection&lt;MemberInfo&gt;<br />&#160;&#160;member NodeType : ExpressionType<br />&#160;&#160;member Type : Type<br />&#160;&#160;member Update : arguments:IEnumerable&lt;Expression&gt; -&gt; NewExpression<br /><br />Full name: System.Linq.Expressions.NewExpression</div>
<div class="tip" id="fs39">val n : NewExpression</div>
<div class="tip" id="fs40">val props : Collections.Generic.Dictionary&lt;string,PropertyInfo&gt;</div>
<div class="tip" id="fs41">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs42">val vals : seq&lt;ParameterExpression&gt;</div>
<div class="tip" id="fs43">property LambdaExpression.Parameters: Collections.ObjectModel.ReadOnlyCollection&lt;ParameterExpression&gt;</div>
<div class="tip" id="fs44">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs45">val append : source1:seq&lt;&#39;T&gt; -&gt; source2:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.append</div>
<div class="tip" id="fs46">val skip : count:int -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.skip</div>
<div class="tip" id="fs47">val bindings : MemberBinding []</div>
<div class="tip" id="fs48">(extension) Collections.Generic.IEnumerable.Select&lt;&#39;TSource,&#39;TResult&gt;(selector: Func&lt;&#39;TSource,&#39;TResult&gt;) : Collections.Generic.IEnumerable&lt;&#39;TResult&gt;<br />(extension) Collections.Generic.IEnumerable.Select&lt;&#39;TSource,&#39;TResult&gt;(selector: Func&lt;&#39;TSource,int,&#39;TResult&gt;) : Collections.Generic.IEnumerable&lt;&#39;TResult&gt;</div>
<div class="tip" id="fs49">val p : ParameterExpression</div>
<div class="tip" id="fs50">Collections.Generic.Dictionary.TryGetValue(key: string, value: byref&lt;PropertyInfo&gt;) : bool</div>
<div class="tip" id="fs51">property ParameterExpression.Name: string</div>
<div class="tip" id="fs52">val f : bool</div>
<div class="tip" id="fs53">val zip : source1:seq&lt;&#39;T1&gt; -&gt; source2:seq&lt;&#39;T2&gt; -&gt; seq&lt;&#39;T1 * &#39;T2&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.zip</div>
<div class="tip" id="fs54">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs55">val a : Expression</div>
<div class="tip" id="fs56">Expression.Bind(propertyAccessor: MethodInfo, expression: Expression) : MemberAssignment<br />Expression.Bind(member: MemberInfo, expression: Expression) : MemberAssignment</div>
<div class="tip" id="fs57">property NewExpression.Constructor: ConstructorInfo</div>
<div class="tip" id="fs58">MethodBase.GetParameters() : ParameterInfo []</div>
<div class="tip" id="fs59">val p : ParameterInfo</div>
<div class="tip" id="fs60">val i : int</div>
<div class="tip" id="fs61">property NewExpression.Arguments: Collections.ObjectModel.ReadOnlyCollection&lt;Expression&gt;</div>
<div class="tip" id="fs62">property Expression.NodeType: ExpressionType</div>
<div class="tip" id="fs63">type ExpressionType =<br />&#160;&#160;| Add = 0<br />&#160;&#160;| AddChecked = 1<br />&#160;&#160;| And = 2<br />&#160;&#160;| AndAlso = 3<br />&#160;&#160;| ArrayLength = 4<br />&#160;&#160;| ArrayIndex = 5<br />&#160;&#160;| Call = 6<br />&#160;&#160;| Coalesce = 7<br />&#160;&#160;| Conditional = 8<br />&#160;&#160;| Constant = 9<br />&#160;&#160;...<br /><br />Full name: System.Linq.Expressions.ExpressionType</div>
<div class="tip" id="fs64">field ExpressionType.Constant = 9</div>
<div class="tip" id="fs65">property ParameterInfo.Name: string</div>
<div class="tip" id="fs66">val b : MemberAssignment</div>
<div class="tip" id="fs67">type MemberBinding =<br />&#160;&#160;member BindingType : MemberBindingType<br />&#160;&#160;member Member : MemberInfo<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />Full name: System.Linq.Expressions.MemberBinding</div>
<div class="tip" id="fs68">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs69">val ofSeq : source:seq&lt;&#39;T&gt; -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.ofSeq</div>
<div class="tip" id="fs70">Expression.Lambda(body: Expression, parameters: Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(body: Expression, [&lt;ParamArray&gt;] parameters: ParameterExpression []) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda&lt;&#39;TDelegate&gt;(body: Expression, parameters: Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : Expression&lt;&#39;TDelegate&gt;<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda&lt;&#39;TDelegate&gt;(body: Expression, [&lt;ParamArray&gt;] parameters: ParameterExpression []) : Expression&lt;&#39;TDelegate&gt;<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(body: Expression, name: string, parameters: Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(delegateType: Type, body: Expression, parameters: Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(delegateType: Type, body: Expression, [&lt;ParamArray&gt;] parameters: ParameterExpression []) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(body: Expression, tailCall: bool, parameters: Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(body: Expression, tailCall: bool, [&lt;ParamArray&gt;] parameters: ParameterExpression []) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda&lt;&#39;TDelegate&gt;(body: Expression, name: string, parameters: Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : Expression&lt;&#39;TDelegate&gt;<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs71">Expression.MemberInit(newExpression: NewExpression, bindings: Collections.Generic.IEnumerable&lt;MemberBinding&gt;) : MemberInitExpression<br />Expression.MemberInit(newExpression: NewExpression, [&lt;ParamArray&gt;] bindings: MemberBinding []) : MemberInitExpression</div>
<div class="tip" id="fs72">Expression.New(type: Type) : NewExpression<br />Expression.New(constructor: ConstructorInfo) : NewExpression<br />Expression.New(constructor: ConstructorInfo, arguments: Collections.Generic.IEnumerable&lt;Expression&gt;) : NewExpression<br />Expression.New(constructor: ConstructorInfo, [&lt;ParamArray&gt;] arguments: Expression []) : NewExpression<br />Expression.New(constructor: ConstructorInfo, arguments: Collections.Generic.IEnumerable&lt;Expression&gt;, [&lt;ParamArray&gt;] members: MemberInfo []) : NewExpression<br />Expression.New(constructor: ConstructorInfo, arguments: Collections.Generic.IEnumerable&lt;Expression&gt;, members: Collections.Generic.IEnumerable&lt;MemberInfo&gt;) : NewExpression</div>
<div class="tip" id="fs73">val take : count:int -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.take</div>
<div class="tip" id="fs74">type MethodCallExpression =<br />&#160;&#160;inherit Expression<br />&#160;&#160;member Arguments : ReadOnlyCollection&lt;Expression&gt;<br />&#160;&#160;member Method : MethodInfo<br />&#160;&#160;member NodeType : ExpressionType<br />&#160;&#160;member Object : Expression<br />&#160;&#160;member Type : Type<br />&#160;&#160;member Update : object:Expression * arguments:IEnumerable&lt;Expression&gt; -&gt; MethodCallExpression<br /><br />Full name: System.Linq.Expressions.MethodCallExpression</div>
<div class="tip" id="fs75">val call : MethodCallExpression</div>
<div class="tip" id="fs76">property MethodCallExpression.Arguments: Collections.ObjectModel.ReadOnlyCollection&lt;Expression&gt;</div>
<div class="tip" id="fs77">property MethodCallExpression.Object: Expression</div>
<div class="tip" id="fs78">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs79">val empty&lt;&#39;T&gt; : seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.empty</div>

