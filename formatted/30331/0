<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// **** **** **** **** **** **** **** **** **** **** **** **** ****</span>
<span class="c">// **  Copyright (c) 2017, Robert Nielsen. All rights reserved.  **</span>
<span class="c">// **** **** **** **** **** **** **** **** **** **** **** **** ****</span>

<span class="k">namespace</span> <span class="i">Rodhern</span><span class="o">.</span><span class="i">FerramDebug</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Generic</span>
<span class="k">open</span> <span class="i">UnityEngine</span>


[&lt; <span class="i">KSPAddon</span>(<span class="i">KSPAddon</span><span class="o">.</span><span class="i">Startup</span><span class="o">.</span><span class="i">EditorSPH</span>, <span class="k">false</span>) &gt;]
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="t">FerramDebugger</span> () <span class="o">=</span>
  <span class="k">inherit</span> <span class="i">MonoBehaviour</span> ()
  
  <span class="c">/// Check if object reference is null.</span>
  <span class="k">let</span> <span class="i">unassigned</span> <span class="i">o</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">obj</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">ReferenceEquals</span> (<span class="i">o</span>, <span class="k">null</span>)
  
  <span class="c">/// Get value from named instance field.</span>
  <span class="k">let</span> (<span class="o">.</span><span class="o">&gt;</span>) (<span class="i">o</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">obj</span>) (<span class="i">name</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">string</span>) <span class="o">=</span>
    <span class="k">if</span> <span class="i">unassigned</span> <span class="i">o</span> <span class="k">then</span> <span class="k">null</span> <span class="k">else</span>
    <span class="k">let</span> <span class="i">bindingflags</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">Reflection</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="i">BindingFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">Instance</span> <span class="o">|||</span> <span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="i">Reflection</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">BindingFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="i">Public</span> <span class="o">|||</span> <span onmouseout="hideTip(event, 'fs8', 16)" onmouseover="showTip(event, 'fs8', 16)" class="i">Reflection</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 17)" onmouseover="showTip(event, 'fs9', 17)" class="i">BindingFlags</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="i">NonPublic</span>
    <span class="k">match</span> (<span class="i">o</span><span class="o">.</span><span class="i">GetType</span> ())<span class="o">.</span><span class="i">GetMember</span> (<span class="i">name</span>, <span class="i">bindingflags</span>) <span class="k">with</span>
    | [| <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs8', 19)" onmouseover="showTip(event, 'fs8', 19)" class="i">Reflection</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="i">FieldInfo</span> <span class="k">as</span> <span class="i">fieldinfo</span> |] <span class="k">-&gt;</span> <span class="i">fieldinfo</span><span class="o">.</span><span class="i">GetValue</span> <span class="i">o</span>
    | _ <span class="k">-&gt;</span> <span class="k">null</span>
  
  <span class="c">/// Return all parts of the vessel in the editor.</span>
  <span class="k">let</span> <span class="i">allEditorParts</span> () <span class="o">=</span>
    <span class="k">let</span> <span class="k">rec</span> <span class="i">inclusiveChildren</span> (<span class="i">parts</span><span class="o">:</span> <span class="i">Part</span> <span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="i">seq</span>) <span class="o">=</span>
      <span onmouseout="hideTip(event, 'fs14', 22)" onmouseover="showTip(event, 'fs14', 22)" class="i">seq</span> { <span class="k">for</span> <span class="i">part</span> <span class="k">in</span> <span class="i">parts</span>
             <span class="k">do</span> <span class="k">yield</span> <span class="i">part</span>
                <span class="k">yield!</span> <span class="i">inclusiveChildren</span> <span class="i">part</span><span class="o">.</span><span class="i">children</span> }
    <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="i">seq</span> { <span class="k">match</span> <span class="i">EditorLogic</span><span class="o">.</span><span class="i">RootPart</span> <span class="k">with</span>
          | <span class="i">root</span> <span class="k">when</span> <span class="i">unassigned</span> <span class="i">root</span> <span class="k">-&gt;</span> ()
          | <span class="i">root</span> <span class="k">-&gt;</span> <span class="k">yield</span> <span class="i">root</span> }
    <span class="o">|&gt;</span> <span class="i">inclusiveChildren</span>
  
  <span class="c">/// Pick the &quot;FARWingAerodynamicModel&quot; module from those parts that have one.</span>
  <span class="k">let</span> <span class="i">listWingMods</span> (<span class="i">partseq</span><span class="o">:</span> <span class="i">Part</span> <span onmouseout="hideTip(event, 'fs14', 24)" onmouseover="showTip(event, 'fs14', 24)" class="i">seq</span>) <span class="o">=</span>
    [ <span class="k">for</span> <span class="i">part</span> <span class="k">in</span> <span class="i">partseq</span>
       <span class="k">do</span> <span class="k">if</span> (<span class="i">part</span><span class="o">.</span><span class="i">Modules</span><span class="o">.</span><span class="i">Contains</span> <span class="s">&quot;FARWingAerodynamicModel&quot;</span>)
           <span class="k">then</span> <span class="k">yield</span> <span class="i">part</span><span class="o">.</span><span class="i">Modules</span><span class="o">.</span>[<span class="s">&quot;FARWingAerodynamicModel&quot;</span>] ]
  
  <span class="c">/// Output text to trace listeners and the Unity debug log.</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 25)" onmouseover="showTip(event, 'fs15', 25)" class="i">log</span> <span class="i">s</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs1', 26)" onmouseover="showTip(event, 'fs1', 26)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 27)" onmouseover="showTip(event, 'fs16', 27)" class="i">Diagnostics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="i">Trace</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="i">WriteLine</span> <span class="i">s</span>
    <span class="i">Debug</span><span class="o">.</span><span class="i">Log</span> <span class="i">s</span>
  
  <span class="c">/// Output &#39;influence&#39; values for particular part module to debug log.</span>
  <span class="k">let</span> <span class="i">writePartModInfluences</span> (<span class="i">partmodlist</span><span class="o">:</span> <span class="i">PartModule</span> <span onmouseout="hideTip(event, 'fs19', 30)" onmouseover="showTip(event, 'fs19', 30)" class="i">list</span>) (<span class="i">partmodidx</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs20', 31)" onmouseover="showTip(event, 'fs20', 31)" class="i">int</span>) <span class="o">=</span>
    
    <span class="k">let</span> <span class="i">asList</span> (<span class="i">o</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 32)" onmouseover="showTip(event, 'fs5', 32)" class="i">obj</span>) <span class="o">=</span>
      [ <span class="k">for</span> <span class="i">i</span> <span class="k">in</span> <span class="i">o</span> <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs1', 33)" onmouseover="showTip(event, 'fs1', 33)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 34)" onmouseover="showTip(event, 'fs2', 34)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 35)" onmouseover="showTip(event, 'fs21', 35)" class="i">ICollection</span> <span class="k">do</span> <span class="k">yield</span> <span class="i">i</span> ]
    
    <span class="k">let</span> <span class="i">getIdx</span> (<span class="i">o</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 36)" onmouseover="showTip(event, 'fs5', 36)" class="i">obj</span>) <span class="o">=</span>
      <span class="k">let</span> <span class="k">mutable</span> <span class="i">idx</span> <span class="o">=</span> <span class="o">-</span><span class="n">1</span>
      <span onmouseout="hideTip(event, 'fs22', 37)" onmouseover="showTip(event, 'fs22', 37)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 38)" onmouseover="showTip(event, 'fs23', 38)" class="i">tryFindIndex</span> (<span class="k">fun</span> <span class="i">pmod</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 39)" onmouseover="showTip(event, 'fs5', 39)" class="i">obj</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 40)" onmouseover="showTip(event, 'fs6', 40)" class="i">ReferenceEquals</span> (<span class="i">o</span>, <span class="i">pmod</span>)) <span class="i">partmodlist</span>
      
    <span class="k">let</span> <span class="i">printInfluence</span> (<span class="i">s</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 41)" onmouseover="showTip(event, 'fs7', 41)" class="i">string</span>) (<span class="i">d</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 42)" onmouseover="showTip(event, 'fs5', 42)" class="i">obj</span>) (<span class="i">reflist</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 43)" onmouseover="showTip(event, 'fs5', 43)" class="i">obj</span>) (<span class="i">dlist</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 44)" onmouseover="showTip(event, 'fs5', 44)" class="i">obj</span>) <span class="o">=</span>
      <span class="k">let</span> <span class="i">d</span> <span class="o">=</span> <span class="i">d</span> <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs24', 45)" onmouseover="showTip(event, 'fs24', 45)" class="i">double</span>
      <span class="k">let</span> <span class="i">reflist</span> <span class="o">=</span> <span class="i">reflist</span> <span class="o">|&gt;</span> <span class="i">asList</span>
      <span class="k">let</span> <span class="i">dlist</span> <span class="o">=</span> <span class="i">dlist</span> <span class="o">|&gt;</span> <span class="i">asList</span>
      <span onmouseout="hideTip(event, 'fs15', 46)" onmouseover="showTip(event, 'fs15', 46)" class="i">log</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs25', 47)" onmouseover="showTip(event, 'fs25', 47)" class="i">sprintf</span> <span class="s">&quot;   %s exposure %f (%d nearby wing modules).&quot;</span> <span class="i">s</span> <span class="i">d</span> <span class="i">reflist</span><span class="o">.</span><span class="i">Length</span>
      <span class="k">if</span> <span class="i">reflist</span><span class="o">.</span><span class="i">Length</span> <span class="o">&lt;&gt;</span> <span class="i">dlist</span><span class="o">.</span><span class="i">Length</span>
       <span class="k">then</span> <span onmouseout="hideTip(event, 'fs15', 48)" onmouseover="showTip(event, 'fs15', 48)" class="i">log</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs25', 49)" onmouseover="showTip(event, 'fs25', 49)" class="i">sprintf</span> <span class="s">&quot;   CAUTION: %s nearby list length mis-match; %d &lt;&gt; %d.&quot;</span> <span class="i">s</span> <span class="i">reflist</span><span class="o">.</span><span class="i">Length</span> <span class="i">dlist</span><span class="o">.</span><span class="i">Length</span>
      
      <span class="k">for</span> <span class="i">j</span> <span class="o">=</span> <span class="n">0</span> <span class="k">to</span> (<span onmouseout="hideTip(event, 'fs26', 50)" onmouseover="showTip(event, 'fs26', 50)" class="i">min</span> <span class="i">reflist</span><span class="o">.</span><span class="i">Length</span> <span class="i">dlist</span><span class="o">.</span><span class="i">Length</span>) <span class="o">-</span> <span class="n">1</span>
       <span class="k">do</span> <span class="k">match</span> <span class="i">getIdx</span> <span class="i">reflist</span><span class="o">.</span>[<span class="i">j</span>] <span class="k">with</span>
          | <span onmouseout="hideTip(event, 'fs27', 51)" onmouseover="showTip(event, 'fs27', 51)" class="i">None</span> <span class="k">-&gt;</span> <span class="s">&quot;no match&quot;</span>
          | <span onmouseout="hideTip(event, 'fs28', 52)" onmouseover="showTip(event, 'fs28', 52)" class="i">Some</span> <span class="i">k</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 53)" onmouseover="showTip(event, 'fs25', 53)" class="i">sprintf</span> <span class="s">&quot;match idx %d&quot;</span> <span class="i">k</span>
          <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 54)" onmouseover="showTip(event, 'fs25', 54)" class="i">sprintf</span> <span class="s">&quot;      influence= %f (%s).&quot;</span> (<span class="i">dlist</span><span class="o">.</span>[<span class="i">j</span>] <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs24', 55)" onmouseover="showTip(event, 'fs24', 55)" class="i">double</span>)
          <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 56)" onmouseover="showTip(event, 'fs15', 56)" class="i">log</span>
    
    <span class="k">let</span> <span class="i">partmod</span> <span class="o">=</span> <span class="i">partmodlist</span><span class="o">.</span>[<span class="i">partmodidx</span>]
    <span class="k">do</span> <span onmouseout="hideTip(event, 'fs15', 57)" onmouseover="showTip(event, 'fs15', 57)" class="i">log</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs25', 58)" onmouseover="showTip(event, 'fs25', 58)" class="i">sprintf</span> <span class="s">&quot; Part &#39;%s&#39; (idx= %d; x= %f; y= %f; z= %f).&quot;</span> <span class="i">partmod</span><span class="o">.</span><span class="i">part</span><span class="o">.</span><span class="i">name</span> <span class="i">partmodidx</span> <span class="i">partmod</span><span class="o">.</span><span class="i">part</span><span class="o">.</span><span class="i">attPos</span><span class="o">.</span><span class="i">x</span> <span class="i">partmod</span><span class="o">.</span><span class="i">part</span><span class="o">.</span><span class="i">attPos</span><span class="o">.</span><span class="i">y</span> <span class="i">partmod</span><span class="o">.</span><span class="i">part</span><span class="o">.</span><span class="i">attPos</span><span class="o">.</span><span class="i">z</span>
    <span class="k">let</span> <span class="i">wingInteraction</span> <span class="o">=</span> <span class="i">partmod</span><span class="o">.</span><span class="o">&gt;</span> <span class="s">&quot;wingInteraction&quot;</span>
    
    <span class="k">let</span> <span class="i">forwardExposure</span> <span class="o">=</span> <span class="i">wingInteraction</span><span class="o">.</span><span class="o">&gt;</span> <span class="s">&quot;forwardExposure&quot;</span>
    <span class="k">let</span> <span class="i">nearbyWingModulesForwardList</span> <span class="o">=</span> <span class="i">wingInteraction</span><span class="o">.</span><span class="o">&gt;</span> <span class="s">&quot;nearbyWingModulesForwardList&quot;</span>
    <span class="k">let</span> <span class="i">nearbyWingModulesForwardInfluence</span> <span class="o">=</span> <span class="i">wingInteraction</span><span class="o">.</span><span class="o">&gt;</span> <span class="s">&quot;nearbyWingModulesForwardInfluence&quot;</span>
    <span class="k">do</span> <span class="i">printInfluence</span> <span class="s">&quot;forward&quot;</span> <span class="i">forwardExposure</span> <span class="i">nearbyWingModulesForwardList</span> <span class="i">nearbyWingModulesForwardInfluence</span>

    <span class="k">let</span> <span class="i">backwardExposure</span> <span class="o">=</span> <span class="i">wingInteraction</span><span class="o">.</span><span class="o">&gt;</span> <span class="s">&quot;backwardExposure&quot;</span>
    <span class="k">let</span> <span class="i">nearbyWingModulesBackwardList</span> <span class="o">=</span> <span class="i">wingInteraction</span><span class="o">.</span><span class="o">&gt;</span> <span class="s">&quot;nearbyWingModulesBackwardList&quot;</span>
    <span class="k">let</span> <span class="i">nearbyWingModulesBackwardInfluence</span> <span class="o">=</span> <span class="i">wingInteraction</span><span class="o">.</span><span class="o">&gt;</span> <span class="s">&quot;nearbyWingModulesBackwardInfluence&quot;</span>
    <span class="k">do</span> <span class="i">printInfluence</span> <span class="s">&quot;backward&quot;</span> <span class="i">backwardExposure</span> <span class="i">nearbyWingModulesBackwardList</span> <span class="i">nearbyWingModulesBackwardInfluence</span>

    <span class="k">let</span> <span class="i">leftwardExposure</span> <span class="o">=</span> <span class="i">wingInteraction</span><span class="o">.</span><span class="o">&gt;</span> <span class="s">&quot;leftwardExposure&quot;</span>
    <span class="k">let</span> <span class="i">nearbyWingModulesLeftwardList</span> <span class="o">=</span> <span class="i">wingInteraction</span><span class="o">.</span><span class="o">&gt;</span> <span class="s">&quot;nearbyWingModulesLeftwardList&quot;</span>
    <span class="k">let</span> <span class="i">nearbyWingModulesLeftwardInfluence</span> <span class="o">=</span> <span class="i">wingInteraction</span><span class="o">.</span><span class="o">&gt;</span> <span class="s">&quot;nearbyWingModulesLeftwardInfluence&quot;</span>
    <span class="k">do</span> <span class="i">printInfluence</span> <span class="s">&quot;leftward&quot;</span> <span class="i">leftwardExposure</span> <span class="i">nearbyWingModulesLeftwardList</span> <span class="i">nearbyWingModulesLeftwardInfluence</span>

    <span class="k">let</span> <span class="i">rightwardExposure</span> <span class="o">=</span> <span class="i">wingInteraction</span><span class="o">.</span><span class="o">&gt;</span> <span class="s">&quot;rightwardExposure&quot;</span>
    <span class="k">let</span> <span class="i">nearbyWingModulesRightwardList</span> <span class="o">=</span> <span class="i">wingInteraction</span><span class="o">.</span><span class="o">&gt;</span> <span class="s">&quot;nearbyWingModulesRightwardList&quot;</span>
    <span class="k">let</span> <span class="i">nearbyWingModulesRightwardInfluence</span> <span class="o">=</span> <span class="i">wingInteraction</span><span class="o">.</span><span class="o">&gt;</span> <span class="s">&quot;nearbyWingModulesRightwardInfluence&quot;</span>
    <span class="k">do</span> <span class="i">printInfluence</span> <span class="s">&quot;rightward&quot;</span> <span class="i">rightwardExposure</span> <span class="i">nearbyWingModulesRightwardList</span> <span class="i">nearbyWingModulesRightwardInfluence</span>
  
  <span class="k">member</span> <span class="k">public</span> <span class="i">dbg</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 59)" onmouseover="showTip(event, 'fs29', 59)" class="f">Update</span> () <span class="o">=</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs30', 60)" onmouseover="showTip(event, 'fs30', 60)" class="i">not</span> (<span class="i">Input</span><span class="o">.</span><span class="i">GetKeyDown</span> <span class="i">KeyCode</span><span class="o">.</span><span class="i">F1</span>) <span class="k">then</span> () <span class="k">else</span>
    <span onmouseout="hideTip(event, 'fs15', 61)" onmouseover="showTip(event, 'fs15', 61)" class="i">log</span> <span class="s">&quot; -- FAR Wing Interaction Influences --&quot;</span>
    <span class="k">let</span> <span class="i">allparts</span> <span class="o">=</span> <span class="i">allEditorParts</span> ()
    <span class="k">let</span> <span class="i">allmods</span> <span class="o">=</span> <span class="i">listWingMods</span> <span class="i">allparts</span>
    <span onmouseout="hideTip(event, 'fs15', 62)" onmouseover="showTip(event, 'fs15', 62)" class="i">log</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs25', 63)" onmouseover="showTip(event, 'fs25', 63)" class="i">sprintf</span> <span class="s">&quot; %d vessel parts including %d wing modules.&quot;</span> (<span onmouseout="hideTip(event, 'fs31', 64)" onmouseover="showTip(event, 'fs31', 64)" class="i">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 65)" onmouseover="showTip(event, 'fs32', 65)" class="i">length</span> <span class="i">allparts</span>) (<span onmouseout="hideTip(event, 'fs22', 66)" onmouseover="showTip(event, 'fs22', 66)" class="i">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 67)" onmouseover="showTip(event, 'fs33', 67)" class="i">length</span> <span class="i">allmods</span>)
    <span class="k">for</span> <span class="i">j</span> <span class="o">=</span> <span class="n">0</span> <span class="k">to</span> <span class="i">allmods</span><span class="o">.</span><span class="i">Length</span> <span class="o">-</span> <span class="n">1</span>
     <span class="k">do</span> <span class="i">writePartModInfluences</span> <span class="i">allmods</span> <span class="i">j</span>
    <span onmouseout="hideTip(event, 'fs15', 68)" onmouseover="showTip(event, 'fs15', 68)" class="i">log</span> <span class="s">&quot; -- ----- ----- -- - -- ----- ----- --&quot;</span>
    <span class="i">ScreenMessages</span><span class="o">.</span><span class="i">PostScreenMessage</span> <span class="s">&quot;Data listed in log output.&quot;</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs34', 69)" onmouseover="showTip(event, 'fs34', 69)" class="i">ignore</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Collections</div>
<div class="tip" id="fs3">namespace System.Collections.Generic</div>
<div class="tip" id="fs4">Multiple items<br />type FerramDebugger =<br />&#160;&#160;inherit obj<br />&#160;&#160;new : unit -&gt; FerramDebugger<br />&#160;&#160;member Update : unit -&gt; &#39;a<br /><br />Full name: Rodhern.FerramDebug.FerramDebugger<br /><br />--------------------<br />new : unit -&gt; FerramDebugger</div>
<div class="tip" id="fs5">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs6">Object.ReferenceEquals(objA: obj, objB: obj) : bool</div>
<div class="tip" id="fs7">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs8">Multiple items<br />namespace System.Reflection<br /><br />--------------------<br />namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs9">type BindingFlags =<br />&#160;&#160;| Default = 0<br />&#160;&#160;| IgnoreCase = 1<br />&#160;&#160;| DeclaredOnly = 2<br />&#160;&#160;| Instance = 4<br />&#160;&#160;| Static = 8<br />&#160;&#160;| Public = 16<br />&#160;&#160;| NonPublic = 32<br />&#160;&#160;| FlattenHierarchy = 64<br />&#160;&#160;| InvokeMethod = 256<br />&#160;&#160;| CreateInstance = 512<br />&#160;&#160;...<br /><br />Full name: System.Reflection.BindingFlags</div>
<div class="tip" id="fs10">field Reflection.BindingFlags.Instance = 4</div>
<div class="tip" id="fs11">field Reflection.BindingFlags.Public = 16</div>
<div class="tip" id="fs12">field Reflection.BindingFlags.NonPublic = 32</div>
<div class="tip" id="fs13">type FieldInfo =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Attributes : FieldAttributes<br />&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;member FieldHandle : RuntimeFieldHandle<br />&#160;&#160;member FieldType : Type<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetOptionalCustomModifiers : unit -&gt; Type[]<br />&#160;&#160;member GetRawConstantValue : unit -&gt; obj<br />&#160;&#160;member GetRequiredCustomModifiers : unit -&gt; Type[]<br />&#160;&#160;member GetValue : obj:obj -&gt; obj<br />&#160;&#160;member GetValueDirect : obj:TypedReference -&gt; obj<br />&#160;&#160;...<br /><br />Full name: System.Reflection.FieldInfo</div>
<div class="tip" id="fs14">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs15">val log : value:&#39;T -&gt; &#39;T (requires member Log)<br /><br />Full name: Microsoft.FSharp.Core.Operators.log</div>
<div class="tip" id="fs16">namespace System.Diagnostics</div>
<div class="tip" id="fs17">type Trace =<br />&#160;&#160;static member Assert : condition:bool -&gt; unit + 2 overloads<br />&#160;&#160;static member AutoFlush : bool with get, set<br />&#160;&#160;static member Close : unit -&gt; unit<br />&#160;&#160;static member CorrelationManager : CorrelationManager<br />&#160;&#160;static member Fail : message:string -&gt; unit + 1 overload<br />&#160;&#160;static member Flush : unit -&gt; unit<br />&#160;&#160;static member Indent : unit -&gt; unit<br />&#160;&#160;static member IndentLevel : int with get, set<br />&#160;&#160;static member IndentSize : int with get, set<br />&#160;&#160;static member Listeners : TraceListenerCollection<br />&#160;&#160;...<br /><br />Full name: System.Diagnostics.Trace</div>
<div class="tip" id="fs18">Diagnostics.Trace.WriteLine(value: obj) : unit<br />Diagnostics.Trace.WriteLine(message: string) : unit<br />Diagnostics.Trace.WriteLine(value: obj, category: string) : unit<br />Diagnostics.Trace.WriteLine(message: string, category: string) : unit</div>
<div class="tip" id="fs19">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs20">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs21">type ICollection =<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit<br />&#160;&#160;member Count : int<br />&#160;&#160;member IsSynchronized : bool<br />&#160;&#160;member SyncRoot : obj<br /><br />Full name: System.Collections.ICollection</div>
<div class="tip" id="fs22">Multiple items<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; List&lt;&#39;T&gt; + 2 overloads<br />&#160;&#160;member Add : item:&#39;T -&gt; unit<br />&#160;&#160;member AddRange : collection:IEnumerable&lt;&#39;T&gt; -&gt; unit<br />&#160;&#160;member AsReadOnly : unit -&gt; ReadOnlyCollection&lt;&#39;T&gt;<br />&#160;&#160;member BinarySearch : item:&#39;T -&gt; int + 2 overloads<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Contains : item:&#39;T -&gt; bool<br />&#160;&#160;member ConvertAll&lt;&#39;TOutput&gt; : converter:Converter&lt;&#39;T, &#39;TOutput&gt; -&gt; List&lt;&#39;TOutput&gt;<br />&#160;&#160;member CopyTo : array:&#39;T[] -&gt; unit + 2 overloads<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br /><br />Full name: System.Collections.Generic.List&lt;_&gt;<br /><br />--------------------<br />List() : unit<br />List(capacity: int) : unit<br />List(collection: IEnumerable&lt;&#39;T&gt;) : unit</div>
<div class="tip" id="fs23">val tryFindIndex : predicate:(&#39;T -&gt; bool) -&gt; list:&#39;T list -&gt; int option<br /><br />Full name: Microsoft.FSharp.Collections.List.tryFindIndex</div>
<div class="tip" id="fs24">Multiple items<br />val double : value:&#39;T -&gt; double (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.double<br /><br />--------------------<br />type double = Double<br /><br />Full name: Microsoft.FSharp.Core.double</div>
<div class="tip" id="fs25">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs26">val min : e1:&#39;T -&gt; e2:&#39;T -&gt; &#39;T (requires comparison)<br /><br />Full name: Microsoft.FSharp.Core.Operators.min</div>
<div class="tip" id="fs27">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs28">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs29">member FerramDebugger.Update : unit -&gt; &#39;a<br /><br />Full name: Rodhern.FerramDebug.FerramDebugger.Update</div>
<div class="tip" id="fs30">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs31">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs32">val length : source:seq&lt;&#39;T&gt; -&gt; int<br /><br />Full name: Microsoft.FSharp.Collections.Seq.length</div>
<div class="tip" id="fs33">val length : list:&#39;T list -&gt; int<br /><br />Full name: Microsoft.FSharp.Collections.List.length</div>
<div class="tip" id="fs34">val ignore : value:&#39;T -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.ignore</div>

