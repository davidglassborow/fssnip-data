<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
<span class="l">6: </span>
<span class="l">7: </span>
<span class="l">8: </span>
<span class="l">9: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">stringRepeat</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">n</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">input</span> <span class="o">=</span>
  <span class="k">if</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="f">IsNullOrEmpty</span> <span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="i">input</span> <span class="k">then</span>
    <span onmouseout="hideTip(event, 'fs3', 8)" onmouseover="showTip(event, 'fs3', 8)" class="i">input</span>

  <span class="k">else</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">result</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs4', 10)" onmouseover="showTip(event, 'fs4', 10)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">Text</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="t">StringBuilder</span>(<span onmouseout="hideTip(event, 'fs3', 13)" onmouseover="showTip(event, 'fs3', 13)" class="i">input</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="i">Length</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs2', 15)" onmouseover="showTip(event, 'fs2', 15)" class="i">n</span>)
    <span onmouseout="hideTip(event, 'fs7', 16)" onmouseover="showTip(event, 'fs7', 16)" class="i">result</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="f">Insert</span>(<span class="n">0</span>, <span onmouseout="hideTip(event, 'fs3', 18)" onmouseover="showTip(event, 'fs3', 18)" class="i">input</span>, <span onmouseout="hideTip(event, 'fs2', 19)" onmouseover="showTip(event, 'fs2', 19)" class="i">n</span>)<span class="o">.</span><span class="f">ToString</span>()

<span class="s">&quot;-&quot;</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 20)" onmouseover="showTip(event, 'fs1', 20)" class="f">stringRepeat</span> <span class="n">10</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val stringRepeat : n:int -&gt; input:string -&gt; string<br /><br />Full name: Script.stringRepeat</div>
<div class="tip" id="fs2">val n : int</div>
<div class="tip" id="fs3">val input : string</div>
<div class="tip" id="fs4">namespace System</div>
<div class="tip" id="fs5">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />System.String(value: nativeptr&lt;char&gt;) : unit<br />System.String(value: nativeptr&lt;sbyte&gt;) : unit<br />System.String(value: char []) : unit<br />System.String(c: char, count: int) : unit<br />System.String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />System.String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />System.String(value: char [], startIndex: int, length: int) : unit<br />System.String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: System.Text.Encoding) : unit</div>
<div class="tip" id="fs6">System.String.IsNullOrEmpty(value: string) : bool</div>
<div class="tip" id="fs7">val result : System.Text.StringBuilder</div>
<div class="tip" id="fs8">namespace System.Text</div>
<div class="tip" id="fs9">Multiple items<br />type StringBuilder =<br />&#160;&#160;new : unit -&gt; StringBuilder + 5 overloads<br />&#160;&#160;member Append : value:string -&gt; StringBuilder + 18 overloads<br />&#160;&#160;member AppendFormat : format:string * arg0:obj -&gt; StringBuilder + 4 overloads<br />&#160;&#160;member AppendLine : unit -&gt; StringBuilder + 1 overload<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member Chars : int -&gt; char with get, set<br />&#160;&#160;member Clear : unit -&gt; StringBuilder<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EnsureCapacity : capacity:int -&gt; int<br />&#160;&#160;member Equals : sb:StringBuilder -&gt; bool<br />&#160;&#160;...<br /><br />Full name: System.Text.StringBuilder<br /><br />--------------------<br />System.Text.StringBuilder() : unit<br />System.Text.StringBuilder(capacity: int) : unit<br />System.Text.StringBuilder(value: string) : unit<br />System.Text.StringBuilder(value: string, capacity: int) : unit<br />System.Text.StringBuilder(capacity: int, maxCapacity: int) : unit<br />System.Text.StringBuilder(value: string, startIndex: int, length: int, capacity: int) : unit</div>
<div class="tip" id="fs10">property System.String.Length: int</div>
<div class="tip" id="fs11">System.Text.StringBuilder.Insert(index: int, value: obj) : System.Text.StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Text.StringBuilder.Insert(index: int, value: uint64) : System.Text.StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Text.StringBuilder.Insert(index: int, value: uint32) : System.Text.StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Text.StringBuilder.Insert(index: int, value: uint16) : System.Text.StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Text.StringBuilder.Insert(index: int, value: decimal) : System.Text.StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Text.StringBuilder.Insert(index: int, value: float) : System.Text.StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Text.StringBuilder.Insert(index: int, value: float32) : System.Text.StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Text.StringBuilder.Insert(index: int, value: int64) : System.Text.StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Text.StringBuilder.Insert(index: int, value: int) : System.Text.StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Text.StringBuilder.Insert(index: int, value: char []) : System.Text.StringBuilder<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>

