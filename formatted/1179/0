<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">/// Represents an open world, in a functional sense.</span>
<span class="k">type</span> <span class="t">IWorld</span> <span class="o">=</span>
    <span class="c">/// Try to find an element of a world.</span>
    <span class="k">abstract</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">TryFind</span> <span class="o">:</span> <span class="i">Address</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">e</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">option</span>
    <span class="c">/// Set an element of a world.</span>
    <span class="k">abstract</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">Set</span> <span class="o">:</span> <span class="i">Address</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">e</span> <span class="k">-&gt;</span> #<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">IWorld</span>
    <span class="c">/// Remove an element of a world.</span>
    <span class="k">abstract</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="f">Remove</span> <span class="o">:</span> <span class="i">Address</span> <span class="k">-&gt;</span> #<span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="t">IWorld</span>

<span class="c">/// The world, in a functional programming sense.</span>
<span class="c">/// A reference type with some value semantics.</span>
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">World</span> <span class="o">=</span>
    { <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">Game</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">Game</span>
      <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">Subscriptions</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">Subscriptions</span>
      <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="i">Mailboxes</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="i">Mailboxes</span> }
    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs4', 14)" onmouseover="showTip(event, 'fs4', 14)" class="t">IWorld</span> <span class="k">with</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="f">TryFind</span> <span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="i">address</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="p">None</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs10', 19)" onmouseover="showTip(event, 'fs10', 19)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="f">Set</span> <span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="i">address</span> <span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="i">element</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 23)" onmouseover="showTip(event, 'fs10', 23)" class="i">this</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs10', 24)" onmouseover="showTip(event, 'fs10', 24)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 25)" onmouseover="showTip(event, 'fs16', 25)" class="f">Remove</span> <span onmouseout="hideTip(event, 'fs12', 26)" onmouseover="showTip(event, 'fs12', 26)" class="i">address</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 27)" onmouseover="showTip(event, 'fs10', 27)" class="i">this</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">abstract member IWorld.TryFind : &#39;a0 -&gt; &#39;e option<br /><br />Full name: Script.IWorld.TryFind<br /><em><br /><br />&#160;Try to find an element of a world.</em></div>
<div class="tip" id="fs2">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs3">Multiple items<br />abstract member IWorld.Set : &#39;a0 -&gt; &#39;e -&gt; #IWorld<br /><br />Full name: Script.IWorld.Set<br /><em><br /><br />&#160;Set an element of a world.</em><br /><br />--------------------<br />module Set<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Set&lt;&#39;T (requires comparison)&gt; =<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;interface ICollection&lt;&#39;T&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Add : value:&#39;T -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Contains : value:&#39;T -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member IsProperSubsetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;member IsProperSupersetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Set&lt;_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;</div>
<div class="tip" id="fs4">type IWorld =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member Remove : &#39;a0 -&gt; #IWorld<br />&#160;&#160;&#160;&#160;abstract member Set : &#39;a0 -&gt; &#39;e -&gt; #IWorld<br />&#160;&#160;&#160;&#160;abstract member TryFind : &#39;a0 -&gt; &#39;e option<br />&#160;&#160;end<br /><br />Full name: Script.IWorld<br /><em><br /><br />&#160;Represents an open world, in a functional sense.</em></div>
<div class="tip" id="fs5">abstract member IWorld.Remove : &#39;a0 -&gt; #IWorld<br /><br />Full name: Script.IWorld.Remove<br /><em><br /><br />&#160;Remove an element of a world.</em></div>
<div class="tip" id="fs6">type World =<br />&#160;&#160;{Game: obj;<br />&#160;&#160;&#160;Subscriptions: obj;<br />&#160;&#160;&#160;Mailboxes: obj;}<br />&#160;&#160;interface IWorld<br /><br />Full name: Script.World<br /><em><br /><br />&#160;The world, in a functional programming sense.<br />&#160;A reference type with some value semantics.</em></div>
<div class="tip" id="fs7">World.Game: obj</div>
<div class="tip" id="fs8">World.Subscriptions: obj</div>
<div class="tip" id="fs9">World.Mailboxes: obj</div>
<div class="tip" id="fs10">val this : World</div>
<div class="tip" id="fs11">override World.TryFind : address:&#39;a -&gt; &#39;b option<br /><br />Full name: Script.World.TryFind</div>
<div class="tip" id="fs12">val address : &#39;a</div>
<div class="tip" id="fs13">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs14">Multiple items<br />override World.Set : address:&#39;a -&gt; element:&#39;b -&gt; #IWorld<br /><br />Full name: Script.World.Set<br /><br />--------------------<br />module Set<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Set&lt;&#39;T (requires comparison)&gt; =<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;interface ICollection&lt;&#39;T&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Add : value:&#39;T -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Contains : value:&#39;T -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member IsProperSubsetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;member IsProperSupersetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Set&lt;_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;</div>
<div class="tip" id="fs15">val element : &#39;b</div>
<div class="tip" id="fs16">override World.Remove : address:&#39;a -&gt; #IWorld<br /><br />Full name: Script.World.Remove</div>

