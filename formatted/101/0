<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
<span class="l">6: </span>
<span class="l">7: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">eval</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">dt</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">Data</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">DataTable</span>()
    <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">expr</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="t">Convert</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="f">ToDouble</span>(<span onmouseout="hideTip(event, 'fs2', 10)" onmouseover="showTip(event, 'fs2', 10)" class="i">dt</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="f">Compute</span>(<span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="i">expr</span>,<span class="s">&quot;&quot;</span>))

<span class="c">// usage (FSI)          </span>
<span class="c">// &gt; eval &quot;(1+5)*7/((3+(2-1))/(7-3))&quot;;;</span>
<span class="c">// val it : float = 42.0</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val eval : (string -&gt; float)<br /><br />Full name: Script.eval</div>
<div class="tip" id="fs2">val dt : System.Data.DataTable</div>
<div class="tip" id="fs3">namespace System</div>
<div class="tip" id="fs4">namespace System.Data</div>
<div class="tip" id="fs5">Multiple items<br />type DataTable =<br />&#160;&#160;inherit MarshalByValueComponent<br />&#160;&#160;new : unit -&gt; DataTable + 2 overloads<br />&#160;&#160;member AcceptChanges : unit -&gt; unit<br />&#160;&#160;member BeginInit : unit -&gt; unit<br />&#160;&#160;member BeginLoadData : unit -&gt; unit<br />&#160;&#160;member CaseSensitive : bool with get, set<br />&#160;&#160;member ChildRelations : DataRelationCollection<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Clone : unit -&gt; DataTable<br />&#160;&#160;member Columns : DataColumnCollection<br />&#160;&#160;member Compute : expression:string * filter:string -&gt; obj<br />&#160;&#160;...<br /><br />Full name: System.Data.DataTable<br /><br />--------------------<br />System.Data.DataTable() : unit<br />System.Data.DataTable(tableName: string) : unit<br />System.Data.DataTable(tableName: string, tableNamespace: string) : unit</div>
<div class="tip" id="fs6">val expr : string</div>
<div class="tip" id="fs7">type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>
<div class="tip" id="fs8">System.Convert.ToDouble(value: System.DateTime) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: bool) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: string) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: decimal) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: float) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: float32) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: uint64) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: int64) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: uint32) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDouble(value: int) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs9">System.Data.DataTable.Compute(expression: string, filter: string) : obj</div>

