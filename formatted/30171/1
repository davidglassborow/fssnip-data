<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">TypeShape</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">tryGetCtor</span> (<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">t</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">Type</span>) <span class="o">=</span>
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">TypeShape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="f">Create</span>(<span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="i">t</span>) <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="p">DefaultConstructor</span> <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="i">s</span> <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="f">Accept</span> {
            <span class="k">new</span> <span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="t">IDefaultConstructorVisitor</span><span class="o">&lt;</span>(<span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="t">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 16)" onmouseover="showTip(event, 'fs14', 16)" class="t">obj</span>) <span onmouseout="hideTip(event, 'fs15', 17)" onmouseover="showTip(event, 'fs15', 17)" class="t">option</span><span class="o">&gt;</span> <span class="k">with</span>
                <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span class="f">Visit</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span class="k">when</span> <span class="o">&#39;</span><span class="i">T</span> <span class="o">:</span> (<span class="k">new</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">T</span>)<span class="o">&gt;</span>() <span class="o">=</span>
                    <span onmouseout="hideTip(event, 'fs16', 19)" onmouseover="showTip(event, 'fs16', 19)" class="p">Some</span>(<span class="k">fun</span> () <span class="k">-&gt;</span> <span class="k">new</span> <span class="o">&#39;</span><span class="i">T</span>() <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="t">obj</span>)
        }

    | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs17', 21)" onmouseover="showTip(event, 'fs17', 21)" class="p">None</span>


<span class="k">type</span> <span onmouseout="hideTip(event, 'fs18', 22)" onmouseover="showTip(event, 'fs18', 22)" class="t">Foo</span>(<span onmouseout="hideTip(event, 'fs19', 23)" onmouseover="showTip(event, 'fs19', 23)" class="i">value</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs20', 24)" onmouseover="showTip(event, 'fs20', 24)" class="t">int</span>) <span class="o">=</span>
    <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 25)" onmouseover="showTip(event, 'fs21', 25)" class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 26)" onmouseover="showTip(event, 'fs19', 26)" class="i">value</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs22', 27)" onmouseover="showTip(event, 'fs22', 27)" class="t">Bar</span>() <span class="o">=</span> <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="t">Foo</span>(<span class="n">42</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 29)" onmouseover="showTip(event, 'fs23', 29)" class="i">f</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 30)" onmouseover="showTip(event, 'fs3', 30)" class="f">tryGetCtor</span> <span onmouseout="hideTip(event, 'fs24', 31)" onmouseover="showTip(event, 'fs24', 31)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs18', 32)" onmouseover="showTip(event, 'fs18', 32)" class="t">Foo</span><span class="o">&gt;</span> <span class="c">// None</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 33)" onmouseover="showTip(event, 'fs25', 33)" class="f">b</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 34)" onmouseover="showTip(event, 'fs3', 34)" class="f">tryGetCtor</span> <span onmouseout="hideTip(event, 'fs24', 35)" onmouseover="showTip(event, 'fs24', 35)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs22', 36)" onmouseover="showTip(event, 'fs22', 36)" class="t">Bar</span><span class="o">&gt;</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs26', 37)" onmouseover="showTip(event, 'fs26', 37)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 38)" onmouseover="showTip(event, 'fs27', 38)" class="f">get</span> <span class="c">// Some</span>

<span onmouseout="hideTip(event, 'fs25', 39)" onmouseover="showTip(event, 'fs25', 39)" class="f">b</span> () <span class="c">// Bar {value = 42;}</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">module TypeShape</div>
<div class="tip" id="fs3">val tryGetCtor : t:Type -&gt; (unit -&gt; obj) option<br /><br />Full name: Script.tryGetCtor</div>
<div class="tip" id="fs4">val t : Type</div>
<div class="tip" id="fs5">type Type =<br />&#160;&#160;inherit MemberInfo<br />&#160;&#160;member Assembly : Assembly<br />&#160;&#160;member AssemblyQualifiedName : string<br />&#160;&#160;member Attributes : TypeAttributes<br />&#160;&#160;member BaseType : Type<br />&#160;&#160;member ContainsGenericParameters : bool<br />&#160;&#160;member DeclaringMethod : MethodBase<br />&#160;&#160;member DeclaringType : Type<br />&#160;&#160;member Equals : o:obj -&gt; bool + 1 overload<br />&#160;&#160;member FindInterfaces : filter:TypeFilter * filterCriteria:obj -&gt; Type[]<br />&#160;&#160;member FindMembers : memberType:MemberTypes * bindingAttr:BindingFlags * filter:MemberFilter * filterCriteria:obj -&gt; MemberInfo[]<br />&#160;&#160;...<br /><br />Full name: System.Type</div>
<div class="tip" id="fs6">Multiple items<br />module TypeShape<br /><br />--------------------<br />type TypeShape =<br />&#160;&#160;private new : unit -&gt; TypeShape<br />&#160;&#160;abstract member Accept : ITypeShapeVisitor&lt;&#39;R&gt; -&gt; &#39;R<br />&#160;&#160;abstract member ShapeInfo : TypeShapeInfo<br />&#160;&#160;abstract member Type : Type<br />&#160;&#160;override ToString : unit -&gt; string<br />&#160;&#160;static member Create : unit -&gt; TypeShape&lt;&#39;T&gt;<br />&#160;&#160;static member Create : typ:Type -&gt; TypeShape<br /><br />Full name: TypeShape.TypeShape<br /><br />--------------------<br />type TypeShape&lt;&#39;T&gt; =<br />&#160;&#160;inherit TypeShape<br />&#160;&#160;new : unit -&gt; TypeShape&lt;&#39;T&gt;<br />&#160;&#160;override Accept : v:ITypeShapeVisitor&lt;&#39;a1&gt; -&gt; &#39;a1<br />&#160;&#160;override ShapeInfo : TypeShapeInfo<br />&#160;&#160;override Type : Type<br /><br />Full name: TypeShape.TypeShape&lt;_&gt;<br /><br />--------------------<br />new : unit -&gt; TypeShape&lt;&#39;T&gt;</div>
<div class="tip" id="fs7">static member TypeShape.Create : unit -&gt; TypeShape&lt;&#39;T&gt;<br />static member TypeShape.Create : typ:Type -&gt; TypeShape</div>
<div class="tip" id="fs8">module Shape<br /><br />from TypeShape</div>
<div class="tip" id="fs9">active recognizer DefaultConstructor: TypeShape -&gt; IShapeDefaultConstructor option<br /><br />Full name: TypeShape.Shape.( |DefaultConstructor|_| )</div>
<div class="tip" id="fs10">val s : IShapeDefaultConstructor</div>
<div class="tip" id="fs11">abstract member IShapeDefaultConstructor.Accept : IDefaultConstructorVisitor&lt;&#39;R&gt; -&gt; &#39;R</div>
<div class="tip" id="fs12">type IDefaultConstructorVisitor&lt;&#39;R&gt; =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member Visit : unit -&gt; &#39;R<br />&#160;&#160;end<br /><br />Full name: TypeShape.IDefaultConstructorVisitor&lt;_&gt;</div>
<div class="tip" id="fs13">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs14">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs15">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs16">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs17">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs18">Multiple items<br />type Foo =<br />&#160;&#160;new : value:int -&gt; Foo<br />&#160;&#160;member value : int<br /><br />Full name: Script.Foo<br /><br />--------------------<br />new : value:int -&gt; Foo</div>
<div class="tip" id="fs19">val value : int</div>
<div class="tip" id="fs20">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs21">member Foo.value : int<br /><br />Full name: Script.Foo.value</div>
<div class="tip" id="fs22">Multiple items<br />type Bar =<br />&#160;&#160;inherit Foo<br />&#160;&#160;new : unit -&gt; Bar<br /><br />Full name: Script.Bar<br /><br />--------------------<br />new : unit -&gt; Bar</div>
<div class="tip" id="fs23">val f : (unit -&gt; obj) option<br /><br />Full name: Script.f</div>
<div class="tip" id="fs24">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs25">val b : (unit -&gt; obj)<br /><br />Full name: Script.b</div>
<div class="tip" id="fs26">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs27">val get : option:&#39;T option -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Option.get</div>

