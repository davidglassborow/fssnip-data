<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Windows</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">Windows</span><span class="o">.</span><span class="i">Controls</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 6)" onmouseover="showTip(event, 'fs1', 6)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 7)" onmouseover="showTip(event, 'fs2', 7)" class="i">Windows</span><span class="o">.</span><span class="i">Markup</span>
 
 <span class="c">// Use a single-threaded apartment COM threading model</span>
[&lt;<span onmouseout="hideTip(event, 'fs3', 8)" onmouseover="showTip(event, 'fs3', 8)" class="t">STAThread</span>&gt;]
<span class="c">// Mark this as the EXE assembly entry point for execution</span>
[&lt;<span onmouseout="hideTip(event, 'fs4', 9)" onmouseover="showTip(event, 'fs4', 9)" class="t">EntryPoint</span>&gt;]
<span class="c">// Set up MVVM relationships and launch WPF application for debugging purposes</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 10)" onmouseover="showTip(event, 'fs5', 10)" class="f">main</span> _ <span class="o">=</span> 
    <span class="c">// Launch application context to hold the WPF application and UI thread</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="i">application</span> <span class="o">=</span> <span class="k">new</span> <span class="i">Application</span>()
    <span class="c">// Startup is an event that will fire in this thread, when this main function calls application.Run() as its final operation</span>
    <span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="i">application</span><span class="o">.</span><span class="i">Startup</span> <span class="o">|&gt;</span> <span class="c">// The |&gt; operator applies a function to a value, with the value being on left instead of the normal convention</span>
        <span class="c">// The add() function is provided the handle to the Startup event by the pipe operator</span>
        <span onmouseout="hideTip(event, 'fs7', 13)" onmouseover="showTip(event, 'fs7', 13)" class="t">Event</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="f">add</span>( <span class="c">// At this line, we provide the second argument to the add() function to complete the function call </span>
            <span class="c">// The second argument is a function that acts as the Startup event&#39;s delegate</span>
            <span class="c">// The line below is syntax to create an anonymous function (lamda) that will be executed later on application.Run() for the ViewModel thread</span>
            <span class="k">fun</span> _ <span class="k">-&gt;</span> 
                 <span class="c">// Create reference to XAML Visual tree</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="i">mainWindow</span> <span class="o">=</span> 
                    <span class="c">// View layer of MVVM is expressed in the MainWindow XAML tree</span>
                    <span class="i">Application</span><span class="o">.</span><span class="i">LoadComponent</span>(
                        <span class="k">new</span> <span onmouseout="hideTip(event, 'fs1', 16)" onmouseover="showTip(event, 'fs1', 16)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 17)" onmouseover="showTip(event, 'fs10', 17)" class="i">Uri</span>(<span class="s">&quot;/GRAIL.Testing;component/MainWindow.xaml&quot;</span>, <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="i">UriKind</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="i">Relative</span>)) <span class="o">:?&gt;</span> <span class="i">Window</span>
                <span class="c">// The DataContext is a mutable value for purposes for binding</span>
                <span onmouseout="hideTip(event, 'fs9', 20)" onmouseover="showTip(event, 'fs9', 20)" class="i">mainWindow</span><span class="o">.</span><span class="i">DataContext</span> 
                    <span class="c">// The &quot;&lt;-&quot; operator assigns a type expression to a mutable value</span>
                    <span class="o">&lt;-</span>
                        <span class="c">// ViewModel layer of MVVM is expressed in this type</span>
                        <span class="k">new</span> <span class="i">MainWindowViewModel</span>() 
                <span class="c">// The application needs a reference to the MainWindow type expression</span>
                <span onmouseout="hideTip(event, 'fs6', 21)" onmouseover="showTip(event, 'fs6', 21)" class="i">application</span><span class="o">.</span><span class="i">MainWindow</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs9', 22)" onmouseover="showTip(event, 'fs9', 22)" class="i">mainWindow</span>
                <span class="c">// Show the View to the user and return execution to the UI thread by returning the unit type</span>
                <span onmouseout="hideTip(event, 'fs9', 23)" onmouseover="showTip(event, 'fs9', 23)" class="i">mainWindow</span><span class="o">.</span><span class="i">Show</span>()
            <span class="c">// Finish the call to Event.add() and return a unit type at this point in the main() function</span>
            <span class="c">// There is no purpose in saving the value of a unit type as an expression in the main() function</span>
            )
    <span class="c">// Use the application context to load the WPF application and yield execution on this thread to the user</span>
    <span onmouseout="hideTip(event, 'fs6', 24)" onmouseover="showTip(event, 'fs6', 24)" class="i">application</span><span class="o">.</span><span class="i">Run</span>()
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Windows</div>
<div class="tip" id="fs3">Multiple items<br />type STAThreadAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; STAThreadAttribute<br /><br />Full name: System.STAThreadAttribute<br /><br />--------------------<br />STAThreadAttribute() : unit</div>
<div class="tip" id="fs4">Multiple items<br />type EntryPointAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; EntryPointAttribute<br /><br />Full name: Microsoft.FSharp.Core.EntryPointAttribute<br /><br />--------------------<br />new : unit -&gt; EntryPointAttribute</div>
<div class="tip" id="fs5">val main : string [] -&gt; int<br /><br />Full name: Script.main</div>
<div class="tip" id="fs6">val application : obj</div>
<div class="tip" id="fs7">Multiple items<br />module Event<br /><br />from Microsoft.FSharp.Control<br /><br />--------------------<br />type Event&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; Event&lt;&#39;T&gt;<br />&#160;&#160;member Trigger : arg:&#39;T -&gt; unit<br />&#160;&#160;member Publish : IEvent&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Event&lt;_&gt;<br /><br />--------------------<br />type Event&lt;&#39;Delegate,&#39;Args (requires delegate and &#39;Delegate :&gt; Delegate)&gt; =<br />&#160;&#160;new : unit -&gt; Event&lt;&#39;Delegate,&#39;Args&gt;<br />&#160;&#160;member Trigger : sender:obj * args:&#39;Args -&gt; unit<br />&#160;&#160;member Publish : IEvent&lt;&#39;Delegate,&#39;Args&gt;<br /><br />Full name: Microsoft.FSharp.Control.Event&lt;_,_&gt;<br /><br />--------------------<br />new : unit -&gt; Event&lt;&#39;T&gt;<br /><br />--------------------<br />new : unit -&gt; Event&lt;&#39;Delegate,&#39;Args&gt;</div>
<div class="tip" id="fs8">val add : callback:(&#39;T -&gt; unit) -&gt; sourceEvent:IEvent&lt;&#39;Del,&#39;T&gt; -&gt; unit (requires delegate and &#39;Del :&gt; Delegate)<br /><br />Full name: Microsoft.FSharp.Control.Event.add</div>
<div class="tip" id="fs9">val mainWindow : &#39;a</div>
<div class="tip" id="fs10">Multiple items<br />type Uri =<br />&#160;&#160;new : uriString:string -&gt; Uri + 5 overloads<br />&#160;&#160;member AbsolutePath : string<br />&#160;&#160;member AbsoluteUri : string<br />&#160;&#160;member Authority : string<br />&#160;&#160;member DnsSafeHost : string<br />&#160;&#160;member Equals : comparand:obj -&gt; bool<br />&#160;&#160;member Fragment : string<br />&#160;&#160;member GetComponents : components:UriComponents * format:UriFormat -&gt; string<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetLeftPart : part:UriPartial -&gt; string<br />&#160;&#160;...<br /><br />Full name: System.Uri<br /><br />--------------------<br />Uri(uriString: string) : unit<br />Uri(uriString: string, uriKind: UriKind) : unit<br />Uri(baseUri: Uri, relativeUri: string) : unit<br />Uri(baseUri: Uri, relativeUri: Uri) : unit</div>
<div class="tip" id="fs11">type UriKind =<br />&#160;&#160;| RelativeOrAbsolute = 0<br />&#160;&#160;| Absolute = 1<br />&#160;&#160;| Relative = 2<br /><br />Full name: System.UriKind</div>
<div class="tip" id="fs12">field UriKind.Relative = 2</div>

