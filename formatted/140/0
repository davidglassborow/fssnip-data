<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp">[&lt;<span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">RequireQualifiedAccess</span>&gt;]
<span class="k">module</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">LinkedList</span> <span class="o">=</span>   
   <span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">Generic</span>
   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">empty</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="t">LinkedList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>()
   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="f">find</span> (<span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="f">f</span><span class="o">:</span><span class="o">&#39;</span><span class="i">a</span><span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="t">bool</span>) (<span onmouseout="hideTip(event, 'fs11', 11)" onmouseover="showTip(event, 'fs11', 11)" class="i">xs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="t">LinkedList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>) <span class="o">=</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="v">node</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 14)" onmouseover="showTip(event, 'fs13', 14)" class="f">ref</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="i">xs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 16)" onmouseover="showTip(event, 'fs14', 16)" class="i">First</span>
      <span class="k">while</span> (<span class="o">!</span><span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="v">node</span> <span class="o">&lt;&gt;</span> <span class="k">null</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs15', 18)" onmouseover="showTip(event, 'fs15', 18)" class="f">not</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs9', 19)" onmouseover="showTip(event, 'fs9', 19)" class="f">f</span>((<span class="o">!</span><span onmouseout="hideTip(event, 'fs12', 20)" onmouseover="showTip(event, 'fs12', 20)" class="v">node</span>)<span class="o">.</span><span class="i">Value</span>)) <span class="k">do</span> 
         <span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="v">node</span> <span class="o">:=</span> (<span class="o">!</span><span onmouseout="hideTip(event, 'fs12', 22)" onmouseover="showTip(event, 'fs12', 22)" class="v">node</span>)<span class="o">.</span><span class="i">Next</span>
      <span class="o">!</span><span onmouseout="hideTip(event, 'fs12', 23)" onmouseover="showTip(event, 'fs12', 23)" class="v">node</span>
   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 24)" onmouseover="showTip(event, 'fs16', 24)" class="f">findi</span> (<span onmouseout="hideTip(event, 'fs17', 25)" onmouseover="showTip(event, 'fs17', 25)" class="f">f</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 26)" onmouseover="showTip(event, 'fs18', 26)" class="t">int</span><span class="k">-&gt;</span><span class="o">&#39;</span><span class="i">a</span><span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs10', 27)" onmouseover="showTip(event, 'fs10', 27)" class="t">bool</span>) (<span onmouseout="hideTip(event, 'fs11', 28)" onmouseover="showTip(event, 'fs11', 28)" class="i">xs</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs7', 29)" onmouseover="showTip(event, 'fs7', 29)" class="t">LinkedList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>) <span class="o">=</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 30)" onmouseover="showTip(event, 'fs12', 30)" class="v">node</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 31)" onmouseover="showTip(event, 'fs13', 31)" class="f">ref</span> <span onmouseout="hideTip(event, 'fs11', 32)" onmouseover="showTip(event, 'fs11', 32)" class="i">xs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 33)" onmouseover="showTip(event, 'fs14', 33)" class="i">First</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 34)" onmouseover="showTip(event, 'fs19', 34)" class="v">i</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 35)" onmouseover="showTip(event, 'fs13', 35)" class="f">ref</span> <span class="n">0</span>
      <span class="k">while</span> (<span class="o">!</span><span onmouseout="hideTip(event, 'fs12', 36)" onmouseover="showTip(event, 'fs12', 36)" class="v">node</span> <span class="o">&lt;&gt;</span> <span class="k">null</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs15', 37)" onmouseover="showTip(event, 'fs15', 37)" class="f">not</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs17', 38)" onmouseover="showTip(event, 'fs17', 38)" class="f">f</span> (<span class="o">!</span><span onmouseout="hideTip(event, 'fs19', 39)" onmouseover="showTip(event, 'fs19', 39)" class="v">i</span>) (<span class="o">!</span><span onmouseout="hideTip(event, 'fs12', 40)" onmouseover="showTip(event, 'fs12', 40)" class="v">node</span>)<span class="o">.</span><span class="i">Value</span>) <span class="k">do</span> 
         <span onmouseout="hideTip(event, 'fs20', 41)" onmouseover="showTip(event, 'fs20', 41)" class="f">incr</span> <span onmouseout="hideTip(event, 'fs19', 42)" onmouseover="showTip(event, 'fs19', 42)" class="v">i</span>; <span onmouseout="hideTip(event, 'fs12', 43)" onmouseover="showTip(event, 'fs12', 43)" class="v">node</span> <span class="o">:=</span> (<span class="o">!</span><span onmouseout="hideTip(event, 'fs12', 44)" onmouseover="showTip(event, 'fs12', 44)" class="v">node</span>)<span class="o">.</span><span class="i">Next</span>
      <span class="k">if</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs12', 45)" onmouseover="showTip(event, 'fs12', 45)" class="v">node</span> <span class="o">=</span> <span class="k">null</span> <span class="k">then</span> <span class="o">-</span><span class="n">1</span> <span class="k">else</span> <span class="o">!</span><span onmouseout="hideTip(event, 'fs19', 46)" onmouseover="showTip(event, 'fs19', 46)" class="v">i</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />type RequireQualifiedAccessAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; RequireQualifiedAccessAttribute<br /><br />Full name: Microsoft.FSharp.Core.RequireQualifiedAccessAttribute<br /><br />--------------------<br />new : unit -&gt; RequireQualifiedAccessAttribute</div>
<div class="tip" id="fs2">module LinkedList<br /><br />from Script</div>
<div class="tip" id="fs3">namespace System</div>
<div class="tip" id="fs4">namespace System.Collections</div>
<div class="tip" id="fs5">namespace System.Collections.Generic</div>
<div class="tip" id="fs6">val empty&lt;&#39;a&gt; : LinkedList&lt;&#39;a&gt;<br /><br />Full name: Script.LinkedList.empty</div>
<div class="tip" id="fs7">Multiple items<br />type LinkedList&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; LinkedList&lt;&#39;T&gt; + 1 overload<br />&#160;&#160;member AddAfter : node:LinkedListNode&lt;&#39;T&gt; * value:&#39;T -&gt; LinkedListNode&lt;&#39;T&gt; + 1 overload<br />&#160;&#160;member AddBefore : node:LinkedListNode&lt;&#39;T&gt; * value:&#39;T -&gt; LinkedListNode&lt;&#39;T&gt; + 1 overload<br />&#160;&#160;member AddFirst : value:&#39;T -&gt; LinkedListNode&lt;&#39;T&gt; + 1 overload<br />&#160;&#160;member AddLast : value:&#39;T -&gt; LinkedListNode&lt;&#39;T&gt; + 1 overload<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Contains : value:&#39;T -&gt; bool<br />&#160;&#160;member CopyTo : array:&#39;T[] * index:int -&gt; unit<br />&#160;&#160;member Count : int<br />&#160;&#160;member Find : value:&#39;T -&gt; LinkedListNode&lt;&#39;T&gt;<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br /><br />Full name: System.Collections.Generic.LinkedList&lt;_&gt;<br /><br />--------------------<br />LinkedList() : unit<br />LinkedList(collection: IEnumerable&lt;&#39;T&gt;) : unit</div>
<div class="tip" id="fs8">val find : f:(&#39;a -&gt; bool) -&gt; xs:LinkedList&lt;&#39;a&gt; -&gt; LinkedListNode&lt;&#39;a&gt;<br /><br />Full name: Script.LinkedList.find</div>
<div class="tip" id="fs9">val f : (&#39;a -&gt; bool)</div>
<div class="tip" id="fs10">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs11">val xs : LinkedList&lt;&#39;a&gt;</div>
<div class="tip" id="fs12">val node : LinkedListNode&lt;&#39;a&gt; ref</div>
<div class="tip" id="fs13">Multiple items<br />val ref : value:&#39;T -&gt; &#39;T ref<br /><br />Full name: Microsoft.FSharp.Core.Operators.ref<br /><br />--------------------<br />type &#39;T ref = Ref&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.ref&lt;_&gt;</div>
<div class="tip" id="fs14">property LinkedList.First: LinkedListNode&lt;&#39;a&gt;</div>
<div class="tip" id="fs15">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs16">val findi : f:(int -&gt; &#39;a -&gt; bool) -&gt; xs:LinkedList&lt;&#39;a&gt; -&gt; int<br /><br />Full name: Script.LinkedList.findi</div>
<div class="tip" id="fs17">val f : (int -&gt; &#39;a -&gt; bool)</div>
<div class="tip" id="fs18">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs19">val i : int ref</div>
<div class="tip" id="fs20">val incr : cell:int ref -&gt; unit<br /><br />Full name: Microsoft.FSharp.Core.Operators.incr</div>

