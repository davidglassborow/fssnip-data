<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">Core</span> 
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">System</span>

<span class="c">//Microsoft.FSharp.Core.OptimizedClosures</span>
<span class="c">//https://msdn.microsoft.com/en-us/library/ee340450.aspx</span>

<span class="c">//https://github.com/fsharp/fsharp/blob/master/src/fsharp/FSharp.Core/array.fs#L25</span>
<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="f">checkNonNull</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">argName</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="i">arg</span> <span class="o">=</span>  
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="f">box</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">arg</span> <span class="k">with</span>  
    | <span class="k">null</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="f">nullArg</span> <span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="i">argName</span>  
    | _ <span class="k">-&gt;</span> ()

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="f">checkArrayNonZeroLen</span> <span onmouseout="hideTip(event, 'fs6', 13)" onmouseover="showTip(event, 'fs6', 13)" class="i">argName</span> <span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="i">arg</span> <span class="o">=</span>
    <span class="k">match</span> (<span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 16)" onmouseover="showTip(event, 'fs13', 16)" class="f">length</span> <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">arg</span>) <span class="k">with</span>
    | <span class="n">0</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="f">failwith</span> (<span onmouseout="hideTip(event, 'fs6', 19)" onmouseover="showTip(event, 'fs6', 19)" class="i">argName</span> <span class="o">+</span> <span class="s">&quot; can&#39;t be zero length&quot;</span>)
    | _ <span class="k">-&gt;</span> ()

<span class="c">//https://github.com/fsharp/fsharp/blob/master/src/fsharp/FSharp.Core/array.fs#L698</span>
[&lt;<span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="t">CompiledName</span>(<span class="s">&quot;MyFold&quot;</span>)&gt;] 
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 21)" onmouseover="showTip(event, 'fs16', 21)" class="f">myfold</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>,<span class="o">&#39;</span><span class="i">State</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="f">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">State</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">State</span>) (<span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="i">acc</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">State</span>) (<span onmouseout="hideTip(event, 'fs19', 24)" onmouseover="showTip(event, 'fs19', 24)" class="i">array</span><span class="o">:</span><span class="o">&#39;</span><span class="i">T</span>[]) <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs5', 25)" onmouseover="showTip(event, 'fs5', 25)" class="f">checkNonNull</span> <span class="s">&quot;array&quot;</span> <span onmouseout="hideTip(event, 'fs19', 26)" onmouseover="showTip(event, 'fs19', 26)" class="i">array</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 27)" onmouseover="showTip(event, 'fs20', 27)" class="i">f</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 28)" onmouseover="showTip(event, 'fs21', 28)" class="t">OptimizedClosures</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 29)" onmouseover="showTip(event, 'fs22', 29)" class="t">FSharpFunc</span><span class="o">&lt;</span>_,_,_<span class="o">&gt;</span><span class="o">.</span><span class="f">Adapt</span>(<span onmouseout="hideTip(event, 'fs17', 30)" onmouseover="showTip(event, 'fs17', 30)" class="f">f</span>) 
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs23', 31)" onmouseover="showTip(event, 'fs23', 31)" class="v">state</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 32)" onmouseover="showTip(event, 'fs18', 32)" class="i">acc</span>  
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 33)" onmouseover="showTip(event, 'fs24', 33)" class="i">len</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 34)" onmouseover="showTip(event, 'fs19', 34)" class="i">array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 35)" onmouseover="showTip(event, 'fs25', 35)" class="i">Length</span> 
    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs26', 36)" onmouseover="showTip(event, 'fs26', 36)" class="i">i</span> <span class="o">=</span> <span class="n">0</span> <span class="k">to</span> <span onmouseout="hideTip(event, 'fs24', 37)" onmouseover="showTip(event, 'fs24', 37)" class="i">len</span> <span class="o">-</span> <span class="n">1</span> <span class="k">do</span>  
        <span onmouseout="hideTip(event, 'fs23', 38)" onmouseover="showTip(event, 'fs23', 38)" class="v">state</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs20', 39)" onmouseover="showTip(event, 'fs20', 39)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 40)" onmouseover="showTip(event, 'fs27', 40)" class="f">Invoke</span>(<span onmouseout="hideTip(event, 'fs23', 41)" onmouseover="showTip(event, 'fs23', 41)" class="v">state</span>,<span onmouseout="hideTip(event, 'fs19', 42)" onmouseover="showTip(event, 'fs19', 42)" class="i">array</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs26', 43)" onmouseover="showTip(event, 'fs26', 43)" class="i">i</span>]) 
    <span onmouseout="hideTip(event, 'fs23', 44)" onmouseover="showTip(event, 'fs23', 44)" class="v">state</span> 

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 45)" onmouseover="showTip(event, 'fs28', 45)" class="i">xs</span> <span class="o">=</span> [|<span class="n">10</span>; <span class="n">3</span>; <span class="n">17</span>; <span class="n">8</span>; <span class="n">2</span>; <span class="n">5</span>; <span class="n">1</span>; <span class="n">20</span>; <span class="n">9</span>|]

<span onmouseout="hideTip(event, 'fs29', 46)" onmouseover="showTip(event, 'fs29', 46)" class="f">printfn</span> <span class="s">&quot;min(</span><span class="pf">%A</span><span class="s">) = </span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs28', 47)" onmouseover="showTip(event, 'fs28', 47)" class="i">xs</span> (<span onmouseout="hideTip(event, 'fs28', 48)" onmouseover="showTip(event, 'fs28', 48)" class="i">xs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 49)" onmouseover="showTip(event, 'fs16', 49)" class="f">myfold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs30', 50)" onmouseover="showTip(event, 'fs30', 50)" class="i">acc</span> <span onmouseout="hideTip(event, 'fs31', 51)" onmouseover="showTip(event, 'fs31', 51)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs32', 52)" onmouseover="showTip(event, 'fs32', 52)" class="t">Math</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 53)" onmouseover="showTip(event, 'fs33', 53)" class="f">Min</span>(<span onmouseout="hideTip(event, 'fs30', 54)" onmouseover="showTip(event, 'fs30', 54)" class="i">acc</span>, <span onmouseout="hideTip(event, 'fs31', 55)" onmouseover="showTip(event, 'fs31', 55)" class="i">x</span>)) <span onmouseout="hideTip(event, 'fs34', 56)" onmouseover="showTip(event, 'fs34', 56)" class="t">Int32</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 57)" onmouseover="showTip(event, 'fs35', 57)" class="i">MaxValue</span>)
<span onmouseout="hideTip(event, 'fs29', 58)" onmouseover="showTip(event, 'fs29', 58)" class="f">printfn</span> <span class="s">&quot;sum(</span><span class="pf">%A</span><span class="s">) = </span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs28', 59)" onmouseover="showTip(event, 'fs28', 59)" class="i">xs</span> (<span onmouseout="hideTip(event, 'fs28', 60)" onmouseover="showTip(event, 'fs28', 60)" class="i">xs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 61)" onmouseover="showTip(event, 'fs16', 61)" class="f">myfold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs30', 62)" onmouseover="showTip(event, 'fs30', 62)" class="i">acc</span> <span onmouseout="hideTip(event, 'fs31', 63)" onmouseover="showTip(event, 'fs31', 63)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs30', 64)" onmouseover="showTip(event, 'fs30', 64)" class="i">acc</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs31', 65)" onmouseover="showTip(event, 'fs31', 65)" class="i">x</span>) <span class="n">0</span>)

[&lt;<span onmouseout="hideTip(event, 'fs15', 66)" onmouseover="showTip(event, 'fs15', 66)" class="t">CompiledName</span>(<span class="s">&quot;MyFoldAssociative&quot;</span>)&gt;]
<span class="c">//f : SemigroupOperation</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 67)" onmouseover="showTip(event, 'fs36', 67)" class="f">myfoldAssociative</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs37', 68)" onmouseover="showTip(event, 'fs37', 68)" class="f">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">T</span>) (<span onmouseout="hideTip(event, 'fs19', 69)" onmouseover="showTip(event, 'fs19', 69)" class="i">array</span><span class="o">:</span><span class="o">&#39;</span><span class="i">T</span>[]) <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs5', 70)" onmouseover="showTip(event, 'fs5', 70)" class="f">checkNonNull</span> <span class="s">&quot;array&quot;</span> <span onmouseout="hideTip(event, 'fs19', 71)" onmouseover="showTip(event, 'fs19', 71)" class="i">array</span>
    <span onmouseout="hideTip(event, 'fs10', 72)" onmouseover="showTip(event, 'fs10', 72)" class="f">checkArrayNonZeroLen</span> <span class="s">&quot;array&quot;</span> <span onmouseout="hideTip(event, 'fs19', 73)" onmouseover="showTip(event, 'fs19', 73)" class="i">array</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 74)" onmouseover="showTip(event, 'fs38', 74)" class="i">f</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 75)" onmouseover="showTip(event, 'fs21', 75)" class="t">OptimizedClosures</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 76)" onmouseover="showTip(event, 'fs22', 76)" class="t">FSharpFunc</span><span class="o">&lt;</span>_,_,_<span class="o">&gt;</span><span class="o">.</span><span class="f">Adapt</span>(<span onmouseout="hideTip(event, 'fs37', 77)" onmouseover="showTip(event, 'fs37', 77)" class="f">f</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 78)" onmouseover="showTip(event, 'fs39', 78)" class="i">THRESHOLD</span> <span class="o">=</span> <span class="n">2</span> <span class="c">//for demonstration purpose    </span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs40', 79)" onmouseover="showTip(event, 'fs40', 79)" class="f">myfoldAssociativeRec</span> (<span onmouseout="hideTip(event, 'fs41', 80)" onmouseover="showTip(event, 'fs41', 80)" class="i">array2</span><span class="o">:</span><span class="o">&#39;</span><span class="i">T</span>[]) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 81)" onmouseover="showTip(event, 'fs42', 81)" class="i">n</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 82)" onmouseover="showTip(event, 'fs12', 82)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 83)" onmouseover="showTip(event, 'fs13', 83)" class="f">length</span> <span onmouseout="hideTip(event, 'fs41', 84)" onmouseover="showTip(event, 'fs41', 84)" class="i">array2</span>
        <span class="k">if</span> (<span onmouseout="hideTip(event, 'fs42', 85)" onmouseover="showTip(event, 'fs42', 85)" class="i">n</span> <span class="o">&gt;</span><span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 86)" onmouseover="showTip(event, 'fs39', 86)" class="i">THRESHOLD</span>) <span class="k">then</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs43', 87)" onmouseover="showTip(event, 'fs43', 87)" class="i">lhs</span>, <span onmouseout="hideTip(event, 'fs44', 88)" onmouseover="showTip(event, 'fs44', 88)" class="i">rhs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs41', 89)" onmouseover="showTip(event, 'fs41', 89)" class="i">array2</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs12', 90)" onmouseover="showTip(event, 'fs12', 90)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 91)" onmouseover="showTip(event, 'fs45', 91)" class="f">splitAt</span> (<span onmouseout="hideTip(event, 'fs42', 92)" onmouseover="showTip(event, 'fs42', 92)" class="i">n</span> <span class="o">/</span> <span class="n">2</span>)
            <span class="c">//divide</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 93)" onmouseover="showTip(event, 'fs46', 93)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 94)" onmouseover="showTip(event, 'fs40', 94)" class="f">myfoldAssociativeRec</span> <span onmouseout="hideTip(event, 'fs43', 95)" onmouseover="showTip(event, 'fs43', 95)" class="i">lhs</span> <span class="c">//potential parallelism here (*)</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs47', 96)" onmouseover="showTip(event, 'fs47', 96)" class="i">b</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 97)" onmouseover="showTip(event, 'fs40', 97)" class="f">myfoldAssociativeRec</span> <span onmouseout="hideTip(event, 'fs44', 98)" onmouseover="showTip(event, 'fs44', 98)" class="i">rhs</span> <span class="c">//(*)</span>
            <span class="c">//combine</span>
            <span onmouseout="hideTip(event, 'fs38', 99)" onmouseover="showTip(event, 'fs38', 99)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 100)" onmouseover="showTip(event, 'fs27', 100)" class="f">Invoke</span>(<span onmouseout="hideTip(event, 'fs46', 101)" onmouseover="showTip(event, 'fs46', 101)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs47', 102)" onmouseover="showTip(event, 'fs47', 102)" class="i">b</span>)
        <span class="k">else</span>
            <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs48', 103)" onmouseover="showTip(event, 'fs48', 103)" class="v">acc</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs41', 104)" onmouseover="showTip(event, 'fs41', 104)" class="i">array2</span><span class="o">.</span>[<span class="n">0</span>]
            <span class="k">for</span> <span onmouseout="hideTip(event, 'fs26', 105)" onmouseover="showTip(event, 'fs26', 105)" class="i">i</span> <span class="o">=</span> <span class="n">1</span> <span class="k">to</span> <span onmouseout="hideTip(event, 'fs42', 106)" onmouseover="showTip(event, 'fs42', 106)" class="i">n</span> <span class="o">-</span> <span class="n">1</span> <span class="k">do</span>  
                <span onmouseout="hideTip(event, 'fs48', 107)" onmouseover="showTip(event, 'fs48', 107)" class="v">acc</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs38', 108)" onmouseover="showTip(event, 'fs38', 108)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 109)" onmouseover="showTip(event, 'fs27', 109)" class="f">Invoke</span>(<span onmouseout="hideTip(event, 'fs48', 110)" onmouseover="showTip(event, 'fs48', 110)" class="v">acc</span>,<span onmouseout="hideTip(event, 'fs41', 111)" onmouseover="showTip(event, 'fs41', 111)" class="i">array2</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs26', 112)" onmouseover="showTip(event, 'fs26', 112)" class="i">i</span>]) 
            <span onmouseout="hideTip(event, 'fs48', 113)" onmouseover="showTip(event, 'fs48', 113)" class="v">acc</span>
    <span onmouseout="hideTip(event, 'fs40', 114)" onmouseover="showTip(event, 'fs40', 114)" class="f">myfoldAssociativeRec</span> <span onmouseout="hideTip(event, 'fs19', 115)" onmouseover="showTip(event, 'fs19', 115)" class="i">array</span>

<span onmouseout="hideTip(event, 'fs29', 116)" onmouseover="showTip(event, 'fs29', 116)" class="f">printfn</span> <span class="s">&quot;min(</span><span class="pf">%A</span><span class="s">) = </span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs28', 117)" onmouseover="showTip(event, 'fs28', 117)" class="i">xs</span> (<span onmouseout="hideTip(event, 'fs28', 118)" onmouseover="showTip(event, 'fs28', 118)" class="i">xs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs36', 119)" onmouseover="showTip(event, 'fs36', 119)" class="f">myfoldAssociative</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs31', 120)" onmouseover="showTip(event, 'fs31', 120)" class="i">x</span> <span onmouseout="hideTip(event, 'fs49', 121)" onmouseover="showTip(event, 'fs49', 121)" class="i">y</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs32', 122)" onmouseover="showTip(event, 'fs32', 122)" class="t">Math</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 123)" onmouseover="showTip(event, 'fs33', 123)" class="f">Min</span>(<span onmouseout="hideTip(event, 'fs31', 124)" onmouseover="showTip(event, 'fs31', 124)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs49', 125)" onmouseover="showTip(event, 'fs49', 125)" class="i">y</span>)))
<span onmouseout="hideTip(event, 'fs29', 126)" onmouseover="showTip(event, 'fs29', 126)" class="f">printfn</span> <span class="s">&quot;sum(</span><span class="pf">%A</span><span class="s">) = </span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs28', 127)" onmouseover="showTip(event, 'fs28', 127)" class="i">xs</span> (<span onmouseout="hideTip(event, 'fs28', 128)" onmouseover="showTip(event, 'fs28', 128)" class="i">xs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs36', 129)" onmouseover="showTip(event, 'fs36', 129)" class="f">myfoldAssociative</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs30', 130)" onmouseover="showTip(event, 'fs30', 130)" class="i">acc</span> <span onmouseout="hideTip(event, 'fs31', 131)" onmouseover="showTip(event, 'fs31', 131)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs30', 132)" onmouseover="showTip(event, 'fs30', 132)" class="i">acc</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs31', 133)" onmouseover="showTip(event, 'fs31', 133)" class="i">x</span>))

<span class="c">(*</span>
<span class="c">    min([|10; 3; 17; 8; 2; 5; 1; 20; 9|]) = 1</span>
<span class="c">    sum([|10; 3; 17; 8; 2; 5; 1; 20; 9|]) = 75</span>
<span class="c">    min([|10; 3; 17; 8; 2; 5; 1; 20; 9|]) = 1</span>
<span class="c">    sum([|10; 3; 17; 8; 2; 5; 1; 20; 9|]) = 75</span>
<span class="c">*)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace Microsoft</div>
<div class="tip" id="fs2">namespace Microsoft.FSharp</div>
<div class="tip" id="fs3">namespace Microsoft.FSharp.Core</div>
<div class="tip" id="fs4">namespace System</div>
<div class="tip" id="fs5">val checkNonNull : argName:string -&gt; arg:&#39;a -&gt; unit<br /><br />Full name: Script.checkNonNull</div>
<div class="tip" id="fs6">val argName : string</div>
<div class="tip" id="fs7">val arg : &#39;a</div>
<div class="tip" id="fs8">val box : value:&#39;T -&gt; obj<br /><br />Full name: Microsoft.FSharp.Core.Operators.box</div>
<div class="tip" id="fs9">val nullArg : argumentName:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.nullArg</div>
<div class="tip" id="fs10">val checkArrayNonZeroLen : argName:string -&gt; arg:&#39;a [] -&gt; unit<br /><br />Full name: Script.checkArrayNonZeroLen</div>
<div class="tip" id="fs11">val arg : &#39;a []</div>
<div class="tip" id="fs12">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs13">val length : array:&#39;T [] -&gt; int<br /><br />Full name: Microsoft.FSharp.Collections.Array.length</div>
<div class="tip" id="fs14">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs15">Multiple items<br />type CompiledNameAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : compiledName:string -&gt; CompiledNameAttribute<br />&#160;&#160;member CompiledName : string<br /><br />Full name: Microsoft.FSharp.Core.CompiledNameAttribute<br /><br />--------------------<br />new : compiledName:string -&gt; CompiledNameAttribute</div>
<div class="tip" id="fs16">val myfold : f:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; acc:&#39;State -&gt; array:&#39;T [] -&gt; &#39;State<br /><br />Full name: Script.myfold</div>
<div class="tip" id="fs17">val f : (&#39;State -&gt; &#39;T -&gt; &#39;State)</div>
<div class="tip" id="fs18">val acc : &#39;State</div>
<div class="tip" id="fs19">Multiple items<br />val array : &#39;T []<br /><br />--------------------<br />type &#39;T array = &#39;T []<br /><br />Full name: Microsoft.FSharp.Core.array&lt;_&gt;</div>
<div class="tip" id="fs20">val f : OptimizedClosures.FSharpFunc&lt;&#39;State,&#39;T,&#39;State&gt;</div>
<div class="tip" id="fs21">module OptimizedClosures<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs22">Multiple items<br />type FSharpFunc&lt;&#39;T1,&#39;T2,&#39;U&gt; =<br />&#160;&#160;inherit FSharpFunc&lt;&#39;T1,(&#39;T2 -&gt; &#39;U)&gt;<br />&#160;&#160;new : unit -&gt; FSharpFunc&lt;&#39;T1,&#39;T2,&#39;U&gt;<br />&#160;&#160;abstract member Invoke : arg1:&#39;T1 * arg2:&#39;T2 -&gt; &#39;U<br />&#160;&#160;static member Adapt : func:(&#39;T1 -&gt; &#39;T2 -&gt; &#39;U) -&gt; FSharpFunc&lt;&#39;T1,&#39;T2,&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc&lt;_,_,_&gt;<br /><br />--------------------<br />type FSharpFunc&lt;&#39;T1,&#39;T2,&#39;T3,&#39;U&gt; =<br />&#160;&#160;inherit FSharpFunc&lt;&#39;T1,(&#39;T2 -&gt; &#39;T3 -&gt; &#39;U)&gt;<br />&#160;&#160;new : unit -&gt; FSharpFunc&lt;&#39;T1,&#39;T2,&#39;T3,&#39;U&gt;<br />&#160;&#160;abstract member Invoke : arg1:&#39;T1 * arg2:&#39;T2 * arg3:&#39;T3 -&gt; &#39;U<br />&#160;&#160;static member Adapt : func:(&#39;T1 -&gt; &#39;T2 -&gt; &#39;T3 -&gt; &#39;U) -&gt; FSharpFunc&lt;&#39;T1,&#39;T2,&#39;T3,&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc&lt;_,_,_,_&gt;<br /><br />--------------------<br />type FSharpFunc&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;U&gt; =<br />&#160;&#160;inherit FSharpFunc&lt;&#39;T1,(&#39;T2 -&gt; &#39;T3 -&gt; &#39;T4 -&gt; &#39;U)&gt;<br />&#160;&#160;new : unit -&gt; FSharpFunc&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;U&gt;<br />&#160;&#160;abstract member Invoke : arg1:&#39;T1 * arg2:&#39;T2 * arg3:&#39;T3 * arg4:&#39;T4 -&gt; &#39;U<br />&#160;&#160;static member Adapt : func:(&#39;T1 -&gt; &#39;T2 -&gt; &#39;T3 -&gt; &#39;T4 -&gt; &#39;U) -&gt; FSharpFunc&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc&lt;_,_,_,_,_&gt;<br /><br />--------------------<br />type FSharpFunc&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;U&gt; =<br />&#160;&#160;inherit FSharpFunc&lt;&#39;T1,(&#39;T2 -&gt; &#39;T3 -&gt; &#39;T4 -&gt; &#39;T5 -&gt; &#39;U)&gt;<br />&#160;&#160;new : unit -&gt; FSharpFunc&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;U&gt;<br />&#160;&#160;abstract member Invoke : arg1:&#39;T1 * arg2:&#39;T2 * arg3:&#39;T3 * arg4:&#39;T4 * arg5:&#39;T5 -&gt; &#39;U<br />&#160;&#160;static member Adapt : func:(&#39;T1 -&gt; &#39;T2 -&gt; &#39;T3 -&gt; &#39;T4 -&gt; &#39;T5 -&gt; &#39;U) -&gt; FSharpFunc&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc&lt;_,_,_,_,_,_&gt;<br /><br />--------------------<br />new : unit -&gt; OptimizedClosures.FSharpFunc&lt;&#39;T1,&#39;T2,&#39;U&gt;<br /><br />--------------------<br />new : unit -&gt; OptimizedClosures.FSharpFunc&lt;&#39;T1,&#39;T2,&#39;T3,&#39;U&gt;<br /><br />--------------------<br />new : unit -&gt; OptimizedClosures.FSharpFunc&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;U&gt;<br /><br />--------------------<br />new : unit -&gt; OptimizedClosures.FSharpFunc&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;U&gt;</div>
<div class="tip" id="fs23">val mutable state : &#39;State</div>
<div class="tip" id="fs24">val len : int</div>
<div class="tip" id="fs25">property Array.Length: int</div>
<div class="tip" id="fs26">val i : int</div>
<div class="tip" id="fs27">abstract member FSharpFunc.Invoke : func:&#39;T -&gt; &#39;U<br />abstract member OptimizedClosures.FSharpFunc.Invoke : arg1:&#39;T1 * arg2:&#39;T2 -&gt; &#39;U</div>
<div class="tip" id="fs28">val xs : int []<br /><br />Full name: Script.xs</div>
<div class="tip" id="fs29">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs30">val acc : int</div>
<div class="tip" id="fs31">val x : int</div>
<div class="tip" id="fs32">type Math =<br />&#160;&#160;static val PI : float<br />&#160;&#160;static val E : float<br />&#160;&#160;static member Abs : value:sbyte -&gt; sbyte + 6 overloads<br />&#160;&#160;static member Acos : d:float -&gt; float<br />&#160;&#160;static member Asin : d:float -&gt; float<br />&#160;&#160;static member Atan : d:float -&gt; float<br />&#160;&#160;static member Atan2 : y:float * x:float -&gt; float<br />&#160;&#160;static member BigMul : a:int * b:int -&gt; int64<br />&#160;&#160;static member Ceiling : d:decimal -&gt; decimal + 1 overload<br />&#160;&#160;static member Cos : d:float -&gt; float<br />&#160;&#160;...<br /><br />Full name: System.Math</div>
<div class="tip" id="fs33">Math.Min(val1: decimal, val2: decimal) : decimal<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Math.Min(val1: float, val2: float) : float<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Math.Min(val1: float32, val2: float32) : float32<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Math.Min(val1: uint64, val2: uint64) : uint64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Math.Min(val1: int64, val2: int64) : int64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Math.Min(val1: uint32, val2: uint32) : uint32<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Math.Min(val1: int, val2: int) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Math.Min(val1: uint16, val2: uint16) : uint16<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Math.Min(val1: int16, val2: int16) : int16<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Math.Min(val1: byte, val2: byte) : byte<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs34">type Int32 =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 3 overloads<br />&#160;&#160;&#160;&#160;static val MaxValue : int<br />&#160;&#160;&#160;&#160;static val MinValue : int<br />&#160;&#160;&#160;&#160;static member Parse : s:string -&gt; int + 3 overloads<br />&#160;&#160;&#160;&#160;static member TryParse : s:string * result:int -&gt; bool + 1 overload<br />&#160;&#160;end<br /><br />Full name: System.Int32</div>
<div class="tip" id="fs35">field int.MaxValue = 2147483647</div>
<div class="tip" id="fs36">val myfoldAssociative : f:(&#39;T -&gt; &#39;T -&gt; &#39;T) -&gt; array:&#39;T [] -&gt; &#39;T<br /><br />Full name: Script.myfoldAssociative</div>
<div class="tip" id="fs37">val f : (&#39;T -&gt; &#39;T -&gt; &#39;T)</div>
<div class="tip" id="fs38">val f : OptimizedClosures.FSharpFunc&lt;&#39;T,&#39;T,&#39;T&gt;</div>
<div class="tip" id="fs39">val THRESHOLD : int</div>
<div class="tip" id="fs40">val myfoldAssociativeRec : (&#39;T [] -&gt; &#39;T)</div>
<div class="tip" id="fs41">val array2 : &#39;T []</div>
<div class="tip" id="fs42">val n : int</div>
<div class="tip" id="fs43">val lhs : &#39;T []</div>
<div class="tip" id="fs44">val rhs : &#39;T []</div>
<div class="tip" id="fs45">val splitAt : index:int -&gt; array:&#39;T [] -&gt; &#39;T [] * &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.splitAt</div>
<div class="tip" id="fs46">val a : &#39;T</div>
<div class="tip" id="fs47">val b : &#39;T</div>
<div class="tip" id="fs48">val mutable acc : &#39;T</div>
<div class="tip" id="fs49">val y : int</div>

