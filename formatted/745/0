<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">(*[omit:boyer-moore.c]</span>
<span class="c">/*</span>
<span class="c">    Simple implementation of the fast Boyer-Moore string search algorithm.</span>

<span class="c">    By X-Calibre, 2002</span>
<span class="c">    </span>
<span class="c">    - slight modifications by davidk (main removed, cdecl added, casting for return types)</span>
<span class="c">*/</span>

<span class="c">#include &lt;stdio.h&gt;</span>
<span class="c">#include &lt;stdlib.h&gt;</span>
<span class="c">#include &lt;string.h&gt;</span>
<span class="c">#include &lt;windows.h&gt;</span>
<span class="c">#include &lt;strsafe.h&gt;</span>

<span class="c">#define EXTERN_DLL_EXPORT extern &quot;C&quot; __declspec(dllexport) </span>

<span class="c">char *BoyerMoore( unsigned char *data, unsigned int dataLength, unsigned char *string, unsigned int strLength ) {</span>
<span class="c">    unsigned int skipTable[256], i;</span>
<span class="c">    unsigned char *search;</span>
<span class="c">    register unsigned char lastChar;</span>

<span class="c">    if (strLength == 0)</span>
<span class="c">        return NULL;</span>

<span class="c">    // Initialize skip lookup table</span>
<span class="c">    for (i = 0; i &lt; 256; i++)</span>
<span class="c">        skipTable[i] = strLength;</span>

<span class="c">    search = string;</span>

<span class="c">    // Decrease strLength here to make it an index</span>
<span class="c">    i = --strLength;</span>

<span class="c">    do</span>
<span class="c">    {</span>
<span class="c">        skipTable[*search++] = i;</span>
<span class="c">    } while (i--);</span>

<span class="c">    lastChar = *--search;</span>

<span class="c">    // Start searching, position pointer at possible end of string.</span>
<span class="c">    search = data + strLength;</span>
<span class="c">    dataLength -= strLength+(strLength-1);</span>

<span class="c">    while ((int)dataLength &gt; 0 )</span>
<span class="c">    {</span>
<span class="c">        unsigned int skip;</span>

<span class="c">        skip = skipTable[*search];</span>
<span class="c">        search += skip;</span>
<span class="c">        dataLength -= skip;</span>
<span class="c">        skip = skipTable[*search];</span>
<span class="c">        search += skip;</span>
<span class="c">        dataLength -= skip;</span>
<span class="c">        skip = skipTable[*search];</span>

<span class="c">        if (*search != lastChar) /*if (skip &gt; 0)*/</span>
<span class="c">        {</span>
<span class="c">            // Character does not match, realign string and try again</span>
<span class="c">            search += skip;</span>
<span class="c">            dataLength -= skip;</span>
<span class="c">            continue;</span>
<span class="c">        }</span>

<span class="c">        // We had a match, we could be at the end of the string</span>
<span class="c">        i = strLength;</span>

<span class="c">        do</span>
<span class="c">        {</span>
<span class="c">            // Have we found the entire string?</span>
<span class="c">            if (i-- == 0)</span>
<span class="c">                return (char * )search;</span>
<span class="c">        } while (*--search == string[i]);</span>

<span class="c">        // Skip past the part of the string that we scanned already</span>
<span class="c">        search += (strLength - i + 1);</span>
<span class="c">        dataLength--;</span>
<span class="c">    }</span>

<span class="c">    // We reached the end of the data, and didn&#39;t find the string</span>
<span class="c">    return NULL;</span>
<span class="c">}</span>

<span class="c">EXTERN_DLL_EXPORT</span>
<span class="c">char *boyerMoore(unsigned char *data, unsigned char *search) {</span>

<span class="c">    char *str = BoyerMoore( data, strlen((const char *)data), search, strlen((const char *)search) );</span>

<span class="c">    if (str == NULL)</span>
<span class="c">       return &quot;String not found&quot;;</span>
<span class="c">    else</span>
<span class="c">       return str;</span>

<span class="c">    return &quot;&quot;;</span>
<span class="c">} </span>
<span class="c">[/omit]*)</span>
<span class="k">module</span> <span class="t">native</span> <span class="o">=</span> 
  <span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">string_search</span> <span class="o">=</span> 
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">Text</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 4)" onmouseover="showTip(event, 'fs2', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">Runtime</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">InteropServices</span>
    
    [&lt;<span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">DllImport</span>(<span class="s">@&quot;boyermoore.dll&quot;</span>, <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="v">EntryPoint</span><span class="o">=</span><span class="s">&quot;boyerMoore&quot;</span>, <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="v">CharSet</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="t">CharSet</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="i">Ansi</span>)&gt;]
    <span class="k">extern</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="t">nativeint</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="f">boyerMoore</span>(<span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="t">nativeint</span> <span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="i">data</span>, <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="t">nativeint</span> <span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="i">search</span>)
    
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="f">alloc_a</span> (<span onmouseout="hideTip(event, 'fs15', 19)" onmouseover="showTip(event, 'fs15', 19)" class="i">data</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs16', 20)" onmouseover="showTip(event, 'fs16', 20)" class="t">string</span>) <span class="o">=</span> 
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 21)" onmouseover="showTip(event, 'fs17', 21)" class="i">strbuf</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 22)" onmouseover="showTip(event, 'fs18', 22)" class="t">Encoding</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 23)" onmouseover="showTip(event, 'fs19', 23)" class="i">UTF8</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 24)" onmouseover="showTip(event, 'fs20', 24)" class="f">GetBytes</span> <span onmouseout="hideTip(event, 'fs15', 25)" onmouseover="showTip(event, 'fs15', 25)" class="i">data</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 26)" onmouseover="showTip(event, 'fs21', 26)" class="i">buffer</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 27)" onmouseover="showTip(event, 'fs22', 27)" class="t">Marshal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 28)" onmouseover="showTip(event, 'fs23', 28)" class="f">AllocHGlobal</span>(<span onmouseout="hideTip(event, 'fs17', 29)" onmouseover="showTip(event, 'fs17', 29)" class="i">strbuf</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 30)" onmouseover="showTip(event, 'fs24', 30)" class="i">Length</span> <span class="o">+</span> <span class="n">1</span>)
      <span onmouseout="hideTip(event, 'fs22', 31)" onmouseover="showTip(event, 'fs22', 31)" class="t">Marshal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 32)" onmouseover="showTip(event, 'fs25', 32)" class="f">Copy</span>(<span onmouseout="hideTip(event, 'fs17', 33)" onmouseover="showTip(event, 'fs17', 33)" class="i">strbuf</span>, <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs21', 34)" onmouseover="showTip(event, 'fs21', 34)" class="i">buffer</span>, <span onmouseout="hideTip(event, 'fs17', 35)" onmouseover="showTip(event, 'fs17', 35)" class="i">strbuf</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 36)" onmouseover="showTip(event, 'fs24', 36)" class="i">Length</span>)
      <span onmouseout="hideTip(event, 'fs22', 37)" onmouseover="showTip(event, 'fs22', 37)" class="t">Marshal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 38)" onmouseover="showTip(event, 'fs26', 38)" class="f">WriteByte</span>( <span onmouseout="hideTip(event, 'fs21', 39)" onmouseover="showTip(event, 'fs21', 39)" class="i">buffer</span> <span class="o">+</span> (<span onmouseout="hideTip(event, 'fs10', 40)" onmouseover="showTip(event, 'fs10', 40)" class="f">nativeint</span> <span onmouseout="hideTip(event, 'fs17', 41)" onmouseover="showTip(event, 'fs17', 41)" class="i">strbuf</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 42)" onmouseover="showTip(event, 'fs24', 42)" class="i">Length</span>), <span class="n">0uy</span>)
      <span onmouseout="hideTip(event, 'fs21', 43)" onmouseover="showTip(event, 'fs21', 43)" class="i">buffer</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 44)" onmouseover="showTip(event, 'fs27', 44)" class="f">bMoore</span> <span onmouseout="hideTip(event, 'fs15', 45)" onmouseover="showTip(event, 'fs15', 45)" class="i">data</span> <span onmouseout="hideTip(event, 'fs28', 46)" onmouseover="showTip(event, 'fs28', 46)" class="i">search</span> <span class="o">=</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 47)" onmouseover="showTip(event, 'fs29', 47)" class="i">d</span>,<span onmouseout="hideTip(event, 'fs30', 48)" onmouseover="showTip(event, 'fs30', 48)" class="i">s</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 49)" onmouseover="showTip(event, 'fs14', 49)" class="f">alloc_a</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs15', 50)" onmouseover="showTip(event, 'fs15', 50)" class="i">data</span>, <span onmouseout="hideTip(event, 'fs14', 51)" onmouseover="showTip(event, 'fs14', 51)" class="f">alloc_a</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs28', 52)" onmouseover="showTip(event, 'fs28', 52)" class="i">search</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 53)" onmouseover="showTip(event, 'fs31', 53)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 54)" onmouseover="showTip(event, 'fs22', 54)" class="t">Marshal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 55)" onmouseover="showTip(event, 'fs32', 55)" class="f">PtrToStringAnsi</span>(<span onmouseout="hideTip(event, 'fs11', 56)" onmouseover="showTip(event, 'fs11', 56)" class="f">boyerMoore</span>(<span onmouseout="hideTip(event, 'fs29', 57)" onmouseover="showTip(event, 'fs29', 57)" class="i">d</span>,<span onmouseout="hideTip(event, 'fs30', 58)" onmouseover="showTip(event, 'fs30', 58)" class="i">s</span>) )
      <span onmouseout="hideTip(event, 'fs22', 59)" onmouseover="showTip(event, 'fs22', 59)" class="t">Marshal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 60)" onmouseover="showTip(event, 'fs33', 60)" class="f">FreeHGlobal</span> <span onmouseout="hideTip(event, 'fs29', 61)" onmouseover="showTip(event, 'fs29', 61)" class="i">d</span>
      <span onmouseout="hideTip(event, 'fs22', 62)" onmouseover="showTip(event, 'fs22', 62)" class="t">Marshal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 63)" onmouseover="showTip(event, 'fs33', 63)" class="f">FreeHGlobal</span> <span onmouseout="hideTip(event, 'fs30', 64)" onmouseover="showTip(event, 'fs30', 64)" class="i">s</span> 
      <span onmouseout="hideTip(event, 'fs31', 65)" onmouseover="showTip(event, 'fs31', 65)" class="i">x</span>
    
<span onmouseout="hideTip(event, 'fs34', 66)" onmouseover="showTip(event, 'fs34', 66)" class="t">native</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs1', 67)" onmouseover="showTip(event, 'fs1', 67)" class="t">string_search</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 68)" onmouseover="showTip(event, 'fs27', 68)" class="f">bMoore</span> <span class="s">&quot;aaaabouaaa384982n chwercoiewar45u0943 twert3aaaaaaMarabou t9034u5t09t8493t43vkdsropgb&quot;</span> <span class="s">&quot;Marabou&quot;</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module string_search<br /><br />from Script.native</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace System.Text</div>
<div class="tip" id="fs4">namespace System.Runtime</div>
<div class="tip" id="fs5">namespace System.Runtime.InteropServices</div>
<div class="tip" id="fs6">Multiple items<br />type DllImportAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : dllName:string -&gt; DllImportAttribute<br />&#160;&#160;val EntryPoint : string<br />&#160;&#160;val CharSet : CharSet<br />&#160;&#160;val SetLastError : bool<br />&#160;&#160;val ExactSpelling : bool<br />&#160;&#160;val PreserveSig : bool<br />&#160;&#160;val CallingConvention : CallingConvention<br />&#160;&#160;val BestFitMapping : bool<br />&#160;&#160;val ThrowOnUnmappableChar : bool<br />&#160;&#160;member Value : string<br /><br />Full name: System.Runtime.InteropServices.DllImportAttribute<br /><br />--------------------<br />DllImportAttribute(dllName: string) : unit</div>
<div class="tip" id="fs7">Multiple items<br />type EntryPointAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; EntryPointAttribute<br /><br />Full name: Microsoft.FSharp.Core.EntryPointAttribute<br /><br />--------------------<br />new : unit -&gt; EntryPointAttribute</div>
<div class="tip" id="fs8">type CharSet =<br />&#160;&#160;| None = 1<br />&#160;&#160;| Ansi = 2<br />&#160;&#160;| Unicode = 3<br />&#160;&#160;| Auto = 4<br /><br />Full name: System.Runtime.InteropServices.CharSet</div>
<div class="tip" id="fs9">field CharSet.Ansi = 2</div>
<div class="tip" id="fs10">Multiple items<br />val nativeint : value:&#39;T -&gt; nativeint (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.nativeint<br /><br />--------------------<br />type nativeint = System.IntPtr<br /><br />Full name: Microsoft.FSharp.Core.nativeint</div>
<div class="tip" id="fs11">val boyerMoore : data:nativeint * search:nativeint -&gt; nativeint<br /><br />Full name: Script.native.string_search.boyerMoore</div>
<div class="tip" id="fs12">val data : nativeint</div>
<div class="tip" id="fs13">val search : nativeint</div>
<div class="tip" id="fs14">val alloc_a : data:string -&gt; nativeint<br /><br />Full name: Script.native.string_search.alloc_a</div>
<div class="tip" id="fs15">val data : string</div>
<div class="tip" id="fs16">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs17">val strbuf : byte []</div>
<div class="tip" id="fs18">type Encoding =<br />&#160;&#160;member BodyName : string<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CodePage : int<br />&#160;&#160;member DecoderFallback : DecoderFallback with get, set<br />&#160;&#160;member EncoderFallback : EncoderFallback with get, set<br />&#160;&#160;member EncodingName : string<br />&#160;&#160;member Equals : value:obj -&gt; bool<br />&#160;&#160;member GetByteCount : chars:char[] -&gt; int + 3 overloads<br />&#160;&#160;member GetBytes : chars:char[] -&gt; byte[] + 5 overloads<br />&#160;&#160;member GetCharCount : bytes:byte[] -&gt; int + 2 overloads<br />&#160;&#160;...<br /><br />Full name: System.Text.Encoding</div>
<div class="tip" id="fs19">property Encoding.UTF8: Encoding</div>
<div class="tip" id="fs20">Encoding.GetBytes(s: string) : byte []<br />Encoding.GetBytes(chars: char []) : byte []<br />Encoding.GetBytes(chars: char [], index: int, count: int) : byte []<br />Encoding.GetBytes(chars: nativeptr&lt;char&gt;, charCount: int, bytes: nativeptr&lt;byte&gt;, byteCount: int) : int<br />Encoding.GetBytes(s: string, charIndex: int, charCount: int, bytes: byte [], byteIndex: int) : int<br />Encoding.GetBytes(chars: char [], charIndex: int, charCount: int, bytes: byte [], byteIndex: int) : int</div>
<div class="tip" id="fs21">val buffer : nativeint</div>
<div class="tip" id="fs22">type Marshal =<br />&#160;&#160;static val SystemDefaultCharSize : int<br />&#160;&#160;static val SystemMaxDBCSCharSize : int<br />&#160;&#160;static member AddRef : pUnk:nativeint -&gt; int<br />&#160;&#160;static member AllocCoTaskMem : cb:int -&gt; nativeint<br />&#160;&#160;static member AllocHGlobal : cb:nativeint -&gt; nativeint + 1 overload<br />&#160;&#160;static member AreComObjectsAvailableForCleanup : unit -&gt; bool<br />&#160;&#160;static member BindToMoniker : monikerName:string -&gt; obj<br />&#160;&#160;static member ChangeWrapperHandleStrength : otp:obj * fIsWeak:bool -&gt; unit<br />&#160;&#160;static member CleanupUnusedObjectsInCurrentContext : unit -&gt; unit<br />&#160;&#160;static member Copy : source:int[] * startIndex:int * destination:nativeint * length:int -&gt; unit + 15 overloads<br />&#160;&#160;...<br /><br />Full name: System.Runtime.InteropServices.Marshal</div>
<div class="tip" id="fs23">Marshal.AllocHGlobal(cb: int) : nativeint<br />Marshal.AllocHGlobal(cb: nativeint) : nativeint</div>
<div class="tip" id="fs24">property System.Array.Length: int</div>
<div class="tip" id="fs25">Marshal.Copy(source: nativeint, destination: nativeint [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: byte [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: float [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: float32 [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: int64 [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: int16 [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: char [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: int [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint [], startIndex: int, destination: nativeint, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: byte [], startIndex: int, destination: nativeint, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs26">Marshal.WriteByte(ptr: nativeint, val: byte) : unit<br />Marshal.WriteByte(ptr: obj, ofs: int, val: byte) : unit<br />Marshal.WriteByte(ptr: nativeint, ofs: int, val: byte) : unit</div>
<div class="tip" id="fs27">val bMoore : data:string -&gt; search:string -&gt; string<br /><br />Full name: Script.native.string_search.bMoore</div>
<div class="tip" id="fs28">val search : string</div>
<div class="tip" id="fs29">val d : nativeint</div>
<div class="tip" id="fs30">val s : nativeint</div>
<div class="tip" id="fs31">val x : string</div>
<div class="tip" id="fs32">Marshal.PtrToStringAnsi(ptr: nativeint) : string<br />Marshal.PtrToStringAnsi(ptr: nativeint, len: int) : string</div>
<div class="tip" id="fs33">Marshal.FreeHGlobal(hglobal: nativeint) : unit</div>
<div class="tip" id="fs34">module native<br /><br />from Script</div>

