<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span id="fst1" onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1, document.getElementById('fst1'))" class="omitted">boyer-moore.c</span>
<span class="k">module</span> <span class="t">native</span> <span class="o">=</span> 
  <span class="k">module</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">string_search</span> <span class="o">=</span> 
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">Text</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">Runtime</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">InteropServices</span>
    
    [&lt;<span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="t">DllImport</span>(<span class="s">@&quot;boyermoore.dll&quot;</span>, <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="v">EntryPoint</span><span class="o">=</span><span class="s">&quot;boyerMoore&quot;</span>, <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="v">CharSet</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="t">CharSet</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">Ansi</span>)&gt;]
    <span class="k">extern</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="t">nativeint</span> <span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="f">boyerMoore</span>(<span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="t">nativeint</span> <span onmouseout="hideTip(event, 'fs13', 16)" onmouseover="showTip(event, 'fs13', 16)" class="i">data</span>, <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="t">nativeint</span> <span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="i">search</span>)
    
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 19)" onmouseover="showTip(event, 'fs15', 19)" class="f">alloc_a</span> (<span onmouseout="hideTip(event, 'fs16', 20)" onmouseover="showTip(event, 'fs16', 20)" class="i">data</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs17', 21)" onmouseover="showTip(event, 'fs17', 21)" class="t">string</span>) <span class="o">=</span> 
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 22)" onmouseover="showTip(event, 'fs18', 22)" class="i">strbuf</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 23)" onmouseover="showTip(event, 'fs19', 23)" class="t">Encoding</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 24)" onmouseover="showTip(event, 'fs20', 24)" class="i">UTF8</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 25)" onmouseover="showTip(event, 'fs21', 25)" class="f">GetBytes</span> <span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="i">data</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 27)" onmouseover="showTip(event, 'fs22', 27)" class="i">buffer</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 28)" onmouseover="showTip(event, 'fs23', 28)" class="t">Marshal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 29)" onmouseover="showTip(event, 'fs24', 29)" class="f">AllocHGlobal</span>(<span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="i">strbuf</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 31)" onmouseover="showTip(event, 'fs25', 31)" class="i">Length</span> <span class="o">+</span> <span class="n">1</span>)
      <span onmouseout="hideTip(event, 'fs23', 32)" onmouseover="showTip(event, 'fs23', 32)" class="t">Marshal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 33)" onmouseover="showTip(event, 'fs26', 33)" class="f">Copy</span>(<span onmouseout="hideTip(event, 'fs18', 34)" onmouseover="showTip(event, 'fs18', 34)" class="i">strbuf</span>, <span class="n">0</span>, <span onmouseout="hideTip(event, 'fs22', 35)" onmouseover="showTip(event, 'fs22', 35)" class="i">buffer</span>, <span onmouseout="hideTip(event, 'fs18', 36)" onmouseover="showTip(event, 'fs18', 36)" class="i">strbuf</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 37)" onmouseover="showTip(event, 'fs25', 37)" class="i">Length</span>)
      <span onmouseout="hideTip(event, 'fs23', 38)" onmouseover="showTip(event, 'fs23', 38)" class="t">Marshal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 39)" onmouseover="showTip(event, 'fs27', 39)" class="f">WriteByte</span>( <span onmouseout="hideTip(event, 'fs22', 40)" onmouseover="showTip(event, 'fs22', 40)" class="i">buffer</span> <span class="o">+</span> (<span onmouseout="hideTip(event, 'fs11', 41)" onmouseover="showTip(event, 'fs11', 41)" class="f">nativeint</span> <span onmouseout="hideTip(event, 'fs18', 42)" onmouseover="showTip(event, 'fs18', 42)" class="i">strbuf</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 43)" onmouseover="showTip(event, 'fs25', 43)" class="i">Length</span>), <span class="n">0uy</span>)
      <span onmouseout="hideTip(event, 'fs22', 44)" onmouseover="showTip(event, 'fs22', 44)" class="i">buffer</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 45)" onmouseover="showTip(event, 'fs28', 45)" class="f">bMoore</span> <span onmouseout="hideTip(event, 'fs16', 46)" onmouseover="showTip(event, 'fs16', 46)" class="i">data</span> <span onmouseout="hideTip(event, 'fs29', 47)" onmouseover="showTip(event, 'fs29', 47)" class="i">search</span> <span class="o">=</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 48)" onmouseover="showTip(event, 'fs30', 48)" class="i">d</span>,<span onmouseout="hideTip(event, 'fs31', 49)" onmouseover="showTip(event, 'fs31', 49)" class="i">s</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 50)" onmouseover="showTip(event, 'fs15', 50)" class="f">alloc_a</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs16', 51)" onmouseover="showTip(event, 'fs16', 51)" class="i">data</span>, <span onmouseout="hideTip(event, 'fs15', 52)" onmouseover="showTip(event, 'fs15', 52)" class="f">alloc_a</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs29', 53)" onmouseover="showTip(event, 'fs29', 53)" class="i">search</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 54)" onmouseover="showTip(event, 'fs32', 54)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 55)" onmouseover="showTip(event, 'fs23', 55)" class="t">Marshal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 56)" onmouseover="showTip(event, 'fs33', 56)" class="f">PtrToStringAnsi</span>(<span onmouseout="hideTip(event, 'fs12', 57)" onmouseover="showTip(event, 'fs12', 57)" class="f">boyerMoore</span>(<span onmouseout="hideTip(event, 'fs30', 58)" onmouseover="showTip(event, 'fs30', 58)" class="i">d</span>,<span onmouseout="hideTip(event, 'fs31', 59)" onmouseover="showTip(event, 'fs31', 59)" class="i">s</span>) )
      <span onmouseout="hideTip(event, 'fs23', 60)" onmouseover="showTip(event, 'fs23', 60)" class="t">Marshal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 61)" onmouseover="showTip(event, 'fs34', 61)" class="f">FreeHGlobal</span> <span onmouseout="hideTip(event, 'fs30', 62)" onmouseover="showTip(event, 'fs30', 62)" class="i">d</span>
      <span onmouseout="hideTip(event, 'fs23', 63)" onmouseover="showTip(event, 'fs23', 63)" class="t">Marshal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 64)" onmouseover="showTip(event, 'fs34', 64)" class="f">FreeHGlobal</span> <span onmouseout="hideTip(event, 'fs31', 65)" onmouseover="showTip(event, 'fs31', 65)" class="i">s</span> 
      <span onmouseout="hideTip(event, 'fs32', 66)" onmouseover="showTip(event, 'fs32', 66)" class="i">x</span>
    
<span onmouseout="hideTip(event, 'fs35', 67)" onmouseover="showTip(event, 'fs35', 67)" class="t">native</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 68)" onmouseover="showTip(event, 'fs2', 68)" class="t">string_search</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 69)" onmouseover="showTip(event, 'fs28', 69)" class="f">bMoore</span> <span class="s">&quot;aaaabouaaa384982n chwercoiewar45u0943 twert3aaaaaaMarabou t9034u5t09t8493t43vkdsropgb&quot;</span> <span class="s">&quot;Marabou&quot;</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">(*<br />/*<br />&#160;&#160;&#160;&#160;Simple implementation of the fast Boyer-Moore string search algorithm.<br /><br />&#160;&#160;&#160;&#160;By X-Calibre, 2002<br />&#160;&#160;&#160;&#160;<br />&#160;&#160;&#160;&#160;- slight modifications by davidk (main removed, cdecl added, casting for return types)<br />*/<br /><br />#include &lt;stdio.h&gt;<br />#include &lt;stdlib.h&gt;<br />#include &lt;string.h&gt;<br />#include &lt;windows.h&gt;<br />#include &lt;strsafe.h&gt;<br /><br />#define EXTERN_DLL_EXPORT extern &quot;C&quot; __declspec(dllexport) <br /><br />char *BoyerMoore( unsigned char *data, unsigned int dataLength, unsigned char *string, unsigned int strLength ) {<br />&#160;&#160;&#160;&#160;unsigned int skipTable[256], i;<br />&#160;&#160;&#160;&#160;unsigned char *search;<br />&#160;&#160;&#160;&#160;register unsigned char lastChar;<br /><br />&#160;&#160;&#160;&#160;if (strLength == 0)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return NULL;<br /><br />&#160;&#160;&#160;&#160;// Initialize skip lookup table<br />&#160;&#160;&#160;&#160;for (i = 0; i &lt; 256; i++)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;skipTable[i] = strLength;<br /><br />&#160;&#160;&#160;&#160;search = string;<br /><br />&#160;&#160;&#160;&#160;// Decrease strLength here to make it an index<br />&#160;&#160;&#160;&#160;i = --strLength;<br /><br />&#160;&#160;&#160;&#160;do<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;skipTable[*search++] = i;<br />&#160;&#160;&#160;&#160;} while (i--);<br /><br />&#160;&#160;&#160;&#160;lastChar = *--search;<br /><br />&#160;&#160;&#160;&#160;// Start searching, position pointer at possible end of string.<br />&#160;&#160;&#160;&#160;search = data + strLength;<br />&#160;&#160;&#160;&#160;dataLength -= strLength+(strLength-1);<br /><br />&#160;&#160;&#160;&#160;while ((int)dataLength &gt; 0 )<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;unsigned int skip;<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;skip = skipTable[*search];<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;search += skip;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dataLength -= skip;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;skip = skipTable[*search];<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;search += skip;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dataLength -= skip;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;skip = skipTable[*search];<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (*search != lastChar) /*if (skip &gt; 0)*/<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Character does not match, realign string and try again<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;search += skip;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dataLength -= skip;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// We had a match, we could be at the end of the string<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;i = strLength;<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;do<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Have we found the entire string?<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (i-- == 0)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return (char * )search;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} while (*--search == string[i]);<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Skip past the part of the string that we scanned already<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;search += (strLength - i + 1);<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dataLength--;<br />&#160;&#160;&#160;&#160;}<br /><br />&#160;&#160;&#160;&#160;// We reached the end of the data, and didn&#39;t find the string<br />&#160;&#160;&#160;&#160;return NULL;<br />}<br /><br />EXTERN_DLL_EXPORT<br />char *boyerMoore(unsigned char *data, unsigned char *search) {<br /><br />&#160;&#160;&#160;&#160;char *str = BoyerMoore( data, strlen((const char *)data), search, strlen((const char *)search) );<br /><br />&#160;&#160;&#160;&#160;if (str == NULL)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;return &quot;String not found&quot;;<br />&#160;&#160;&#160;&#160;else<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;return str;<br /><br />&#160;&#160;&#160;&#160;return &quot;&quot;;<br />} <br />*)</div>
<div class="tip" id="fs2">module string_search<br /><br />from Script.native</div>
<div class="tip" id="fs3">namespace System</div>
<div class="tip" id="fs4">namespace System.Text</div>
<div class="tip" id="fs5">namespace System.Runtime</div>
<div class="tip" id="fs6">namespace System.Runtime.InteropServices</div>
<div class="tip" id="fs7">Multiple items<br />type DllImportAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : dllName:string -&gt; DllImportAttribute<br />&#160;&#160;val EntryPoint : string<br />&#160;&#160;val CharSet : CharSet<br />&#160;&#160;val SetLastError : bool<br />&#160;&#160;val ExactSpelling : bool<br />&#160;&#160;val PreserveSig : bool<br />&#160;&#160;val CallingConvention : CallingConvention<br />&#160;&#160;val BestFitMapping : bool<br />&#160;&#160;val ThrowOnUnmappableChar : bool<br />&#160;&#160;member Value : string<br /><br />Full name: System.Runtime.InteropServices.DllImportAttribute<br /><br />--------------------<br />DllImportAttribute(dllName: string) : unit</div>
<div class="tip" id="fs8">Multiple items<br />type EntryPointAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; EntryPointAttribute<br /><br />Full name: Microsoft.FSharp.Core.EntryPointAttribute<br /><br />--------------------<br />new : unit -&gt; EntryPointAttribute</div>
<div class="tip" id="fs9">type CharSet =<br />&#160;&#160;| None = 1<br />&#160;&#160;| Ansi = 2<br />&#160;&#160;| Unicode = 3<br />&#160;&#160;| Auto = 4<br /><br />Full name: System.Runtime.InteropServices.CharSet</div>
<div class="tip" id="fs10">field CharSet.Ansi = 2</div>
<div class="tip" id="fs11">Multiple items<br />val nativeint : value:&#39;T -&gt; nativeint (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.nativeint<br /><br />--------------------<br />type nativeint = System.IntPtr<br /><br />Full name: Microsoft.FSharp.Core.nativeint</div>
<div class="tip" id="fs12">val boyerMoore : data:nativeint * search:nativeint -&gt; nativeint<br /><br />Full name: Script.native.string_search.boyerMoore</div>
<div class="tip" id="fs13">val data : nativeint</div>
<div class="tip" id="fs14">val search : nativeint</div>
<div class="tip" id="fs15">val alloc_a : data:string -&gt; nativeint<br /><br />Full name: Script.native.string_search.alloc_a</div>
<div class="tip" id="fs16">val data : string</div>
<div class="tip" id="fs17">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs18">val strbuf : byte []</div>
<div class="tip" id="fs19">type Encoding =<br />&#160;&#160;member BodyName : string<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CodePage : int<br />&#160;&#160;member DecoderFallback : DecoderFallback with get, set<br />&#160;&#160;member EncoderFallback : EncoderFallback with get, set<br />&#160;&#160;member EncodingName : string<br />&#160;&#160;member Equals : value:obj -&gt; bool<br />&#160;&#160;member GetByteCount : chars:char[] -&gt; int + 3 overloads<br />&#160;&#160;member GetBytes : chars:char[] -&gt; byte[] + 5 overloads<br />&#160;&#160;member GetCharCount : bytes:byte[] -&gt; int + 2 overloads<br />&#160;&#160;...<br /><br />Full name: System.Text.Encoding</div>
<div class="tip" id="fs20">property Encoding.UTF8: Encoding</div>
<div class="tip" id="fs21">Encoding.GetBytes(s: string) : byte []<br />Encoding.GetBytes(chars: char []) : byte []<br />Encoding.GetBytes(chars: char [], index: int, count: int) : byte []<br />Encoding.GetBytes(chars: nativeptr&lt;char&gt;, charCount: int, bytes: nativeptr&lt;byte&gt;, byteCount: int) : int<br />Encoding.GetBytes(s: string, charIndex: int, charCount: int, bytes: byte [], byteIndex: int) : int<br />Encoding.GetBytes(chars: char [], charIndex: int, charCount: int, bytes: byte [], byteIndex: int) : int</div>
<div class="tip" id="fs22">val buffer : nativeint</div>
<div class="tip" id="fs23">type Marshal =<br />&#160;&#160;static val SystemDefaultCharSize : int<br />&#160;&#160;static val SystemMaxDBCSCharSize : int<br />&#160;&#160;static member AddRef : pUnk:nativeint -&gt; int<br />&#160;&#160;static member AllocCoTaskMem : cb:int -&gt; nativeint<br />&#160;&#160;static member AllocHGlobal : cb:nativeint -&gt; nativeint + 1 overload<br />&#160;&#160;static member AreComObjectsAvailableForCleanup : unit -&gt; bool<br />&#160;&#160;static member BindToMoniker : monikerName:string -&gt; obj<br />&#160;&#160;static member ChangeWrapperHandleStrength : otp:obj * fIsWeak:bool -&gt; unit<br />&#160;&#160;static member CleanupUnusedObjectsInCurrentContext : unit -&gt; unit<br />&#160;&#160;static member Copy : source:int[] * startIndex:int * destination:nativeint * length:int -&gt; unit + 15 overloads<br />&#160;&#160;...<br /><br />Full name: System.Runtime.InteropServices.Marshal</div>
<div class="tip" id="fs24">Marshal.AllocHGlobal(cb: int) : nativeint<br />Marshal.AllocHGlobal(cb: nativeint) : nativeint</div>
<div class="tip" id="fs25">property System.Array.Length: int</div>
<div class="tip" id="fs26">Marshal.Copy(source: nativeint, destination: nativeint [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: byte [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: float [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: float32 [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: int64 [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: int16 [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: char [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint, destination: int [], startIndex: int, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: nativeint [], startIndex: int, destination: nativeint, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Marshal.Copy(source: byte [], startIndex: int, destination: nativeint, length: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs27">Marshal.WriteByte(ptr: nativeint, val: byte) : unit<br />Marshal.WriteByte(ptr: obj, ofs: int, val: byte) : unit<br />Marshal.WriteByte(ptr: nativeint, ofs: int, val: byte) : unit</div>
<div class="tip" id="fs28">val bMoore : data:string -&gt; search:string -&gt; string<br /><br />Full name: Script.native.string_search.bMoore</div>
<div class="tip" id="fs29">val search : string</div>
<div class="tip" id="fs30">val d : nativeint</div>
<div class="tip" id="fs31">val s : nativeint</div>
<div class="tip" id="fs32">val x : string</div>
<div class="tip" id="fs33">Marshal.PtrToStringAnsi(ptr: nativeint) : string<br />Marshal.PtrToStringAnsi(ptr: nativeint, len: int) : string</div>
<div class="tip" id="fs34">Marshal.FreeHGlobal(hglobal: nativeint) : unit</div>
<div class="tip" id="fs35">module native<br /><br />from Script</div>

