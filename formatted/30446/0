<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">FPGrowth</span>
<span class="c">//An implementation of frequent pattern growth algorithm to find frequent itemsets</span>
<span class="c">//(generates only frequent itemsets; does not mine association rules)</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">Generic</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">Node</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">i</span><span class="o">&gt;</span> <span class="o">=</span> 
  {
    <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">Item</span><span class="o">:</span><span class="o">&#39;</span><span class="i">i</span>
    <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="v">Support</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="t">int</span>; 
    <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="i">Children</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="t">Dictionary</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">i</span>,<span onmouseout="hideTip(event, 'fs5', 11)" onmouseover="showTip(event, 'fs5', 11)" class="t">Node</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">i</span><span class="o">&gt;</span><span class="o">&gt;</span>
  }

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="t">Root</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">i</span><span class="o">&gt;</span> <span class="o">=</span> {<span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="i">Heads</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="t">Dictionary</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">i</span>,<span onmouseout="hideTip(event, 'fs5', 15)" onmouseover="showTip(event, 'fs5', 15)" class="t">Node</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">i</span><span class="o">&gt;</span><span class="o">&gt;</span>}
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs13', 16)" onmouseover="showTip(event, 'fs13', 16)" class="t">TableEntry</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">i</span><span class="o">&gt;</span><span class="o">=</span> {<span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="i">Item</span><span class="o">:</span><span class="o">&#39;</span><span class="i">i</span>; <span onmouseout="hideTip(event, 'fs15', 18)" onmouseover="showTip(event, 'fs15', 18)" class="i">Frequency</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs8', 19)" onmouseover="showTip(event, 'fs8', 19)" class="t">int</span>}
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs16', 20)" onmouseover="showTip(event, 'fs16', 20)" class="t">Tree</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">i</span><span class="o">&gt;</span> <span class="o">=</span> {<span onmouseout="hideTip(event, 'fs17', 21)" onmouseover="showTip(event, 'fs17', 21)" class="i">Root</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="t">Root</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">i</span><span class="o">&gt;</span>}
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="t">Path</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">i</span><span class="o">&gt;</span> <span class="o">=</span> {<span onmouseout="hideTip(event, 'fs19', 24)" onmouseover="showTip(event, 'fs19', 24)" class="i">Items</span><span class="o">:</span><span class="o">&#39;</span><span class="i">i</span> <span onmouseout="hideTip(event, 'fs20', 25)" onmouseover="showTip(event, 'fs20', 25)" class="t">list</span>; <span onmouseout="hideTip(event, 'fs21', 26)" onmouseover="showTip(event, 'fs21', 26)" class="i">Support</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs8', 27)" onmouseover="showTip(event, 'fs8', 27)" class="t">int</span>}

<span class="k">let</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs22', 28)" onmouseover="showTip(event, 'fs22', 28)" class="f">yourself</span> <span onmouseout="hideTip(event, 'fs23', 29)" onmouseover="showTip(event, 'fs23', 29)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 30)" onmouseover="showTip(event, 'fs23', 30)" class="i">x</span>

<span class="c">//scan transactions and find frequency of each distinct item</span>
<span class="c">//sort results in descending order of frequency</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 31)" onmouseover="showTip(event, 'fs24', 31)" class="f">initTable</span> (<span onmouseout="hideTip(event, 'fs25', 32)" onmouseover="showTip(event, 'fs25', 32)" class="i">transactions</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs26', 33)" onmouseover="showTip(event, 'fs26', 33)" class="t">seq</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs27', 34)" onmouseover="showTip(event, 'fs27', 34)" class="i">id</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs28', 35)" onmouseover="showTip(event, 'fs28', 35)" class="t">Set</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">item</span><span class="o">&gt;</span><span class="o">&gt;</span>) <span class="o">=</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 36)" onmouseover="showTip(event, 'fs29', 36)" class="i">freq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 37)" onmouseover="showTip(event, 'fs25', 37)" class="i">transactions</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 38)" onmouseover="showTip(event, 'fs30', 38)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 39)" onmouseover="showTip(event, 'fs31', 39)" class="f">collect</span> <span onmouseout="hideTip(event, 'fs32', 40)" onmouseover="showTip(event, 'fs32', 40)" class="f">snd</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 41)" onmouseover="showTip(event, 'fs30', 41)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 42)" onmouseover="showTip(event, 'fs33', 42)" class="f">countBy</span> <span onmouseout="hideTip(event, 'fs22', 43)" onmouseover="showTip(event, 'fs22', 43)" class="f">yourself</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 44)" onmouseover="showTip(event, 'fs34', 44)" class="i">table</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs29', 45)" onmouseover="showTip(event, 'fs29', 45)" class="i">freq</span> 
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 46)" onmouseover="showTip(event, 'fs30', 46)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 47)" onmouseover="showTip(event, 'fs35', 47)" class="f">map</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs36', 48)" onmouseover="showTip(event, 'fs36', 48)" class="i">i</span>,<span onmouseout="hideTip(event, 'fs37', 49)" onmouseover="showTip(event, 'fs37', 49)" class="i">c</span>) <span class="k">-&gt;</span> {<span class="i">Item</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs36', 50)" onmouseover="showTip(event, 'fs36', 50)" class="i">i</span>; <span class="i">Frequency</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs37', 51)" onmouseover="showTip(event, 'fs37', 51)" class="i">c</span>})
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 52)" onmouseover="showTip(event, 'fs30', 52)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 53)" onmouseover="showTip(event, 'fs38', 53)" class="f">sortBy</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs39', 54)" onmouseover="showTip(event, 'fs39', 54)" class="i">te</span> <span class="k">-&gt;</span> <span class="o">-</span><span onmouseout="hideTip(event, 'fs39', 55)" onmouseover="showTip(event, 'fs39', 55)" class="i">te</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 56)" onmouseover="showTip(event, 'fs15', 56)" class="i">Frequency</span>)
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 57)" onmouseover="showTip(event, 'fs30', 57)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 58)" onmouseover="showTip(event, 'fs40', 58)" class="f">toArray</span>
  <span onmouseout="hideTip(event, 'fs34', 59)" onmouseover="showTip(event, 'fs34', 59)" class="i">table</span>

<span class="c">//sort items in each *transaction* by descending order of (global) item frequency (calculated in initTable)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 60)" onmouseover="showTip(event, 'fs41', 60)" class="f">sortTransactions</span> (<span onmouseout="hideTip(event, 'fs25', 61)" onmouseover="showTip(event, 'fs25', 61)" class="i">transactions</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs26', 62)" onmouseover="showTip(event, 'fs26', 62)" class="t">seq</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs27', 63)" onmouseover="showTip(event, 'fs27', 63)" class="i">id</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs28', 64)" onmouseover="showTip(event, 'fs28', 64)" class="t">Set</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">item</span><span class="o">&gt;</span><span class="o">&gt;</span>)  (<span onmouseout="hideTip(event, 'fs34', 65)" onmouseover="showTip(event, 'fs34', 65)" class="i">table</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs13', 66)" onmouseover="showTip(event, 'fs13', 66)" class="t">TableEntry</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">item</span><span class="o">&gt;</span>[]) <span class="o">=</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 67)" onmouseover="showTip(event, 'fs42', 67)" class="i">tblIdx</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 68)" onmouseover="showTip(event, 'fs34', 68)" class="i">table</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 69)" onmouseover="showTip(event, 'fs30', 69)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 70)" onmouseover="showTip(event, 'fs35', 70)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs39', 71)" onmouseover="showTip(event, 'fs39', 71)" class="i">te</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs39', 72)" onmouseover="showTip(event, 'fs39', 72)" class="i">te</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 73)" onmouseover="showTip(event, 'fs43', 73)" class="i">Item</span>, <span onmouseout="hideTip(event, 'fs39', 74)" onmouseover="showTip(event, 'fs39', 74)" class="i">te</span> ) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs44', 75)" onmouseover="showTip(event, 'fs44', 75)" class="f">dict</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs45', 76)" onmouseover="showTip(event, 'fs45', 76)" class="i">sorted</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs25', 77)" onmouseover="showTip(event, 'fs25', 77)" class="i">transactions</span> 
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 78)" onmouseover="showTip(event, 'fs30', 78)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 79)" onmouseover="showTip(event, 'fs35', 79)" class="f">map</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs46', 80)" onmouseover="showTip(event, 'fs46', 80)" class="i">id</span>,<span onmouseout="hideTip(event, 'fs47', 81)" onmouseover="showTip(event, 'fs47', 81)" class="i">s</span>)<span class="k">-&gt;</span>
      <span onmouseout="hideTip(event, 'fs46', 82)" onmouseover="showTip(event, 'fs46', 82)" class="i">id</span>,
      <span onmouseout="hideTip(event, 'fs47', 83)" onmouseover="showTip(event, 'fs47', 83)" class="i">s</span> 
      <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 84)" onmouseover="showTip(event, 'fs30', 84)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 85)" onmouseover="showTip(event, 'fs48', 85)" class="f">filter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs49', 86)" onmouseover="showTip(event, 'fs49', 86)" class="i">item</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs42', 87)" onmouseover="showTip(event, 'fs42', 87)" class="i">tblIdx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 88)" onmouseover="showTip(event, 'fs50', 88)" class="f">ContainsKey</span> <span onmouseout="hideTip(event, 'fs49', 89)" onmouseover="showTip(event, 'fs49', 89)" class="i">item</span>) 
      <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 90)" onmouseover="showTip(event, 'fs30', 90)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 91)" onmouseover="showTip(event, 'fs51', 91)" class="f">sortByDescending</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs49', 92)" onmouseover="showTip(event, 'fs49', 92)" class="i">item</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs42', 93)" onmouseover="showTip(event, 'fs42', 93)" class="i">tblIdx</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs49', 94)" onmouseover="showTip(event, 'fs49', 94)" class="i">item</span>]<span class="o">.</span><span class="i">Frequency</span>) 
      <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 95)" onmouseover="showTip(event, 'fs30', 95)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 96)" onmouseover="showTip(event, 'fs40', 96)" class="f">toArray</span>) 
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 97)" onmouseover="showTip(event, 'fs30', 97)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 98)" onmouseover="showTip(event, 'fs40', 98)" class="f">toArray</span>
  <span onmouseout="hideTip(event, 'fs45', 99)" onmouseover="showTip(event, 'fs45', 99)" class="i">sorted</span>

<span class="c">//insert item (should be the first item of each transaction) into the root of the tree</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs52', 100)" onmouseover="showTip(event, 'fs52', 100)" class="f">insertRoot</span> (<span onmouseout="hideTip(event, 'fs53', 101)" onmouseover="showTip(event, 'fs53', 101)" class="i">r</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs11', 102)" onmouseover="showTip(event, 'fs11', 102)" class="t">Root</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span onmouseout="hideTip(event, 'fs54', 103)" onmouseover="showTip(event, 'fs54', 103)" class="i">item</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs55', 104)" onmouseover="showTip(event, 'fs55', 104)" class="i">node</span> <span class="o">=</span> 
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs53', 105)" onmouseover="showTip(event, 'fs53', 105)" class="i">r</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 106)" onmouseover="showTip(event, 'fs56', 106)" class="i">Heads</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 107)" onmouseover="showTip(event, 'fs57', 107)" class="f">TryGetValue</span> <span onmouseout="hideTip(event, 'fs54', 108)" onmouseover="showTip(event, 'fs54', 108)" class="i">item</span> <span class="k">with</span>
      | <span class="k">true</span>,<span onmouseout="hideTip(event, 'fs58', 109)" onmouseover="showTip(event, 'fs58', 109)" class="i">n</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs58', 110)" onmouseover="showTip(event, 'fs58', 110)" class="i">n</span>
      | <span class="k">false</span>,_ <span class="k">-&gt;</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 111)" onmouseover="showTip(event, 'fs58', 111)" class="i">n</span> <span class="o">=</span> {<span class="i">Item</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs54', 112)" onmouseover="showTip(event, 'fs54', 112)" class="i">item</span>; <span class="v">Support</span><span class="o">=</span><span class="n">0</span>; <span class="i">Children</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs10', 113)" onmouseover="showTip(event, 'fs10', 113)" class="t">Dictionary</span>()}
        <span onmouseout="hideTip(event, 'fs53', 114)" onmouseover="showTip(event, 'fs53', 114)" class="i">r</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 115)" onmouseover="showTip(event, 'fs56', 115)" class="i">Heads</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 116)" onmouseover="showTip(event, 'fs59', 116)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs54', 117)" onmouseover="showTip(event, 'fs54', 117)" class="i">item</span>,<span onmouseout="hideTip(event, 'fs58', 118)" onmouseover="showTip(event, 'fs58', 118)" class="i">n</span>)
        <span onmouseout="hideTip(event, 'fs58', 119)" onmouseover="showTip(event, 'fs58', 119)" class="i">n</span>
    <span onmouseout="hideTip(event, 'fs55', 120)" onmouseover="showTip(event, 'fs55', 120)" class="i">node</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 121)" onmouseover="showTip(event, 'fs7', 121)" class="v">Support</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs55', 122)" onmouseover="showTip(event, 'fs55', 122)" class="i">node</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 123)" onmouseover="showTip(event, 'fs7', 123)" class="v">Support</span> <span class="o">+</span> <span class="n">1</span>     <span class="c">//count how times this item shows up as the first element of sorted transactions</span>
    <span onmouseout="hideTip(event, 'fs55', 124)" onmouseover="showTip(event, 'fs55', 124)" class="i">node</span>
  
<span class="c">//insert a transaction item into the tree</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 125)" onmouseover="showTip(event, 'fs60', 125)" class="f">insertNode</span> (<span onmouseout="hideTip(event, 'fs61', 126)" onmouseover="showTip(event, 'fs61', 126)" class="i">r</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs5', 127)" onmouseover="showTip(event, 'fs5', 127)" class="t">Node</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span onmouseout="hideTip(event, 'fs54', 128)" onmouseover="showTip(event, 'fs54', 128)" class="i">item</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs55', 129)" onmouseover="showTip(event, 'fs55', 129)" class="i">node</span> <span class="o">=</span> 
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs61', 130)" onmouseover="showTip(event, 'fs61', 130)" class="i">r</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 131)" onmouseover="showTip(event, 'fs62', 131)" class="i">Children</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 132)" onmouseover="showTip(event, 'fs57', 132)" class="f">TryGetValue</span> <span onmouseout="hideTip(event, 'fs54', 133)" onmouseover="showTip(event, 'fs54', 133)" class="i">item</span> <span class="k">with</span>
      | <span class="k">true</span>,<span onmouseout="hideTip(event, 'fs58', 134)" onmouseover="showTip(event, 'fs58', 134)" class="i">n</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs58', 135)" onmouseover="showTip(event, 'fs58', 135)" class="i">n</span>
      | <span class="k">false</span>,_ <span class="k">-&gt;</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 136)" onmouseover="showTip(event, 'fs58', 136)" class="i">n</span> <span class="o">=</span> {<span class="i">Item</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs54', 137)" onmouseover="showTip(event, 'fs54', 137)" class="i">item</span>; <span class="v">Support</span><span class="o">=</span><span class="n">0</span>; <span class="i">Children</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs10', 138)" onmouseover="showTip(event, 'fs10', 138)" class="t">Dictionary</span>()}
        <span onmouseout="hideTip(event, 'fs61', 139)" onmouseover="showTip(event, 'fs61', 139)" class="i">r</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 140)" onmouseover="showTip(event, 'fs62', 140)" class="i">Children</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 141)" onmouseover="showTip(event, 'fs59', 141)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs54', 142)" onmouseover="showTip(event, 'fs54', 142)" class="i">item</span>,<span onmouseout="hideTip(event, 'fs58', 143)" onmouseover="showTip(event, 'fs58', 143)" class="i">n</span>)
        <span onmouseout="hideTip(event, 'fs58', 144)" onmouseover="showTip(event, 'fs58', 144)" class="i">n</span>
    <span onmouseout="hideTip(event, 'fs55', 145)" onmouseover="showTip(event, 'fs55', 145)" class="i">node</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 146)" onmouseover="showTip(event, 'fs7', 146)" class="v">Support</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs55', 147)" onmouseover="showTip(event, 'fs55', 147)" class="i">node</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 148)" onmouseover="showTip(event, 'fs7', 148)" class="v">Support</span> <span class="o">+</span> <span class="n">1</span>  <span class="c">//count how times this item shows in association with other items along the path to the root</span>
    <span onmouseout="hideTip(event, 'fs55', 149)" onmouseover="showTip(event, 'fs55', 149)" class="i">node</span>

<span class="c">//recursively insert items of a (sorted) transaction into the tree</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs63', 150)" onmouseover="showTip(event, 'fs63', 150)" class="f">insert</span> <span onmouseout="hideTip(event, 'fs64', 151)" onmouseover="showTip(event, 'fs64', 151)" class="i">acc</span> <span onmouseout="hideTip(event, 'fs65', 152)" onmouseover="showTip(event, 'fs65', 152)" class="i">tree</span> (<span onmouseout="hideTip(event, 'fs66', 153)" onmouseover="showTip(event, 'fs66', 153)" class="i">items</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs67', 154)" onmouseover="showTip(event, 'fs67', 154)" class="t">array</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span onmouseout="hideTip(event, 'fs68', 155)" onmouseover="showTip(event, 'fs68', 155)" class="i">i</span> <span class="o">=</span>
  <span class="k">if</span> <span onmouseout="hideTip(event, 'fs68', 156)" onmouseover="showTip(event, 'fs68', 156)" class="i">i</span> <span class="o">&gt;</span><span class="o">=</span> <span onmouseout="hideTip(event, 'fs66', 157)" onmouseover="showTip(event, 'fs66', 157)" class="i">items</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 158)" onmouseover="showTip(event, 'fs69', 158)" class="i">Length</span> <span class="k">then</span> 
    <span onmouseout="hideTip(event, 'fs64', 159)" onmouseover="showTip(event, 'fs64', 159)" class="i">acc</span>
  <span class="k">else</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 160)" onmouseover="showTip(event, 'fs54', 160)" class="i">item</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs66', 161)" onmouseover="showTip(event, 'fs66', 161)" class="i">items</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs68', 162)" onmouseover="showTip(event, 'fs68', 162)" class="i">i</span>]
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 163)" onmouseover="showTip(event, 'fs58', 163)" class="i">n</span> <span class="o">=</span> 
      <span class="k">if</span> <span onmouseout="hideTip(event, 'fs68', 164)" onmouseover="showTip(event, 'fs68', 164)" class="i">i</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span> 
        <span onmouseout="hideTip(event, 'fs52', 165)" onmouseover="showTip(event, 'fs52', 165)" class="f">insertRoot</span> <span onmouseout="hideTip(event, 'fs65', 166)" onmouseover="showTip(event, 'fs65', 166)" class="i">tree</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 167)" onmouseover="showTip(event, 'fs70', 167)" class="i">Root</span> <span onmouseout="hideTip(event, 'fs54', 168)" onmouseover="showTip(event, 'fs54', 168)" class="i">item</span>
      <span class="k">else</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs71', 169)" onmouseover="showTip(event, 'fs71', 169)" class="i">prev</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs72', 170)" onmouseover="showTip(event, 'fs72', 170)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 171)" onmouseover="showTip(event, 'fs73', 171)" class="f">head</span> <span onmouseout="hideTip(event, 'fs64', 172)" onmouseover="showTip(event, 'fs64', 172)" class="i">acc</span>
        <span onmouseout="hideTip(event, 'fs60', 173)" onmouseover="showTip(event, 'fs60', 173)" class="f">insertNode</span> <span onmouseout="hideTip(event, 'fs71', 174)" onmouseover="showTip(event, 'fs71', 174)" class="i">prev</span> <span onmouseout="hideTip(event, 'fs54', 175)" onmouseover="showTip(event, 'fs54', 175)" class="i">item</span>
    <span onmouseout="hideTip(event, 'fs63', 176)" onmouseover="showTip(event, 'fs63', 176)" class="f">insert</span> (<span onmouseout="hideTip(event, 'fs58', 177)" onmouseover="showTip(event, 'fs58', 177)" class="i">n</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs64', 178)" onmouseover="showTip(event, 'fs64', 178)" class="i">acc</span>) <span onmouseout="hideTip(event, 'fs65', 179)" onmouseover="showTip(event, 'fs65', 179)" class="i">tree</span> <span onmouseout="hideTip(event, 'fs66', 180)" onmouseover="showTip(event, 'fs66', 180)" class="i">items</span> (<span onmouseout="hideTip(event, 'fs68', 181)" onmouseover="showTip(event, 'fs68', 181)" class="i">i</span><span class="o">+</span><span class="n">1</span>)
      
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs74', 182)" onmouseover="showTip(event, 'fs74', 182)" class="f">makeTree</span> (<span onmouseout="hideTip(event, 'fs25', 183)" onmouseover="showTip(event, 'fs25', 183)" class="i">transactions</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs26', 184)" onmouseover="showTip(event, 'fs26', 184)" class="t">seq</span><span class="o">&lt;</span><span class="o">&#39;</span><span onmouseout="hideTip(event, 'fs27', 185)" onmouseover="showTip(event, 'fs27', 185)" class="i">id</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs28', 186)" onmouseover="showTip(event, 'fs28', 186)" class="t">Set</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">item</span><span class="o">&gt;</span><span class="o">&gt;</span>) <span class="o">=</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 187)" onmouseover="showTip(event, 'fs34', 187)" class="i">table</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 188)" onmouseover="showTip(event, 'fs24', 188)" class="f">initTable</span> <span onmouseout="hideTip(event, 'fs25', 189)" onmouseover="showTip(event, 'fs25', 189)" class="i">transactions</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs45', 190)" onmouseover="showTip(event, 'fs45', 190)" class="i">sorted</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs41', 191)" onmouseover="showTip(event, 'fs41', 191)" class="f">sortTransactions</span> <span onmouseout="hideTip(event, 'fs25', 192)" onmouseover="showTip(event, 'fs25', 192)" class="i">transactions</span> <span onmouseout="hideTip(event, 'fs34', 193)" onmouseover="showTip(event, 'fs34', 193)" class="i">table</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs75', 194)" onmouseover="showTip(event, 'fs75', 194)" class="i">tree</span> <span class="o">=</span> {<span onmouseout="hideTip(event, 'fs11', 195)" onmouseover="showTip(event, 'fs11', 195)" class="i">Root</span><span class="o">=</span>{<span class="i">Heads</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs10', 196)" onmouseover="showTip(event, 'fs10', 196)" class="t">Dictionary</span>()}}
  <span class="k">let</span> _ <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs75', 197)" onmouseover="showTip(event, 'fs75', 197)" class="i">tree</span>,<span onmouseout="hideTip(event, 'fs45', 198)" onmouseover="showTip(event, 'fs45', 198)" class="i">sorted</span>) <span class="o">||&gt;</span> <span onmouseout="hideTip(event, 'fs76', 199)" onmouseover="showTip(event, 'fs76', 199)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs77', 200)" onmouseover="showTip(event, 'fs77', 200)" class="f">fold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs75', 201)" onmouseover="showTip(event, 'fs75', 201)" class="i">tree</span> (_,<span onmouseout="hideTip(event, 'fs78', 202)" onmouseover="showTip(event, 'fs78', 202)" class="i">sortedTxns</span>) <span class="k">-&gt;</span> 
    <span class="k">let</span> _ <span class="o">=</span> <span onmouseout="hideTip(event, 'fs63', 203)" onmouseover="showTip(event, 'fs63', 203)" class="f">insert</span> [] <span onmouseout="hideTip(event, 'fs75', 204)" onmouseover="showTip(event, 'fs75', 204)" class="i">tree</span> <span onmouseout="hideTip(event, 'fs78', 205)" onmouseover="showTip(event, 'fs78', 205)" class="i">sortedTxns</span> <span class="n">0</span>
    <span onmouseout="hideTip(event, 'fs75', 206)" onmouseover="showTip(event, 'fs75', 206)" class="i">tree</span>
  )
  <span onmouseout="hideTip(event, 'fs75', 207)" onmouseover="showTip(event, 'fs75', 207)" class="i">tree</span>

<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs79', 208)" onmouseover="showTip(event, 'fs79', 208)" class="f">mineNode</span> <span onmouseout="hideTip(event, 'fs80', 209)" onmouseover="showTip(event, 'fs80', 209)" class="i">acc</span> (<span onmouseout="hideTip(event, 'fs81', 210)" onmouseover="showTip(event, 'fs81', 210)" class="i">node</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs5', 211)" onmouseover="showTip(event, 'fs5', 211)" class="t">Node</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span class="o">=</span>
  <span class="k">if</span> <span onmouseout="hideTip(event, 'fs81', 212)" onmouseover="showTip(event, 'fs81', 212)" class="i">node</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 213)" onmouseover="showTip(event, 'fs62', 213)" class="i">Children</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs82', 214)" onmouseover="showTip(event, 'fs82', 214)" class="i">Count</span> <span class="o">=</span> <span class="n">0</span> <span class="k">then</span>     <span class="c">//leaf</span>
    <span onmouseout="hideTip(event, 'fs26', 215)" onmouseover="showTip(event, 'fs26', 215)" class="i">seq</span>{<span class="k">yield</span> {<span class="i">Items</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs80', 216)" onmouseover="showTip(event, 'fs80', 216)" class="i">acc</span>; <span class="i">Support</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs81', 217)" onmouseover="showTip(event, 'fs81', 217)" class="i">node</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 218)" onmouseover="showTip(event, 'fs7', 218)" class="v">Support</span>}}
  <span class="k">else</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs80', 219)" onmouseover="showTip(event, 'fs80', 219)" class="i">acc</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs81', 220)" onmouseover="showTip(event, 'fs81', 220)" class="i">node</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs83', 221)" onmouseover="showTip(event, 'fs83', 221)" class="i">Item</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs80', 222)" onmouseover="showTip(event, 'fs80', 222)" class="i">acc</span> <span class="c">//combine path items</span>
    <span onmouseout="hideTip(event, 'fs81', 223)" onmouseover="showTip(event, 'fs81', 223)" class="i">node</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 224)" onmouseover="showTip(event, 'fs62', 224)" class="i">Children</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 225)" onmouseover="showTip(event, 'fs30', 225)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 226)" onmouseover="showTip(event, 'fs31', 226)" class="f">collect</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs84', 227)" onmouseover="showTip(event, 'fs84', 227)" class="i">kv</span><span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs79', 228)" onmouseover="showTip(event, 'fs79', 228)" class="f">mineNode</span> <span onmouseout="hideTip(event, 'fs80', 229)" onmouseover="showTip(event, 'fs80', 229)" class="i">acc</span> <span onmouseout="hideTip(event, 'fs84', 230)" onmouseover="showTip(event, 'fs84', 230)" class="i">kv</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs85', 231)" onmouseover="showTip(event, 'fs85', 231)" class="i">Value</span>) <span class="c">//PSeq seems to be much slower for test data</span>
  
<span class="c">//http://www.fssnip.net/2z/title/All-combinations-of-list-elements</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs86', 232)" onmouseover="showTip(event, 'fs86', 232)" class="f">allCombinations</span> <span onmouseout="hideTip(event, 'fs87', 233)" onmouseover="showTip(event, 'fs87', 233)" class="i">lst</span> <span class="o">=</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs88', 234)" onmouseover="showTip(event, 'fs88', 234)" class="f">comb</span> <span onmouseout="hideTip(event, 'fs89', 235)" onmouseover="showTip(event, 'fs89', 235)" class="i">accLst</span> <span onmouseout="hideTip(event, 'fs90', 236)" onmouseover="showTip(event, 'fs90', 236)" class="i">elemLst</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs90', 237)" onmouseover="showTip(event, 'fs90', 237)" class="i">elemLst</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs91', 238)" onmouseover="showTip(event, 'fs91', 238)" class="i">h</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs92', 239)" onmouseover="showTip(event, 'fs92', 239)" class="i">t</span> <span class="k">-&gt;</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs93', 240)" onmouseover="showTip(event, 'fs93', 240)" class="i">next</span> <span class="o">=</span> [<span onmouseout="hideTip(event, 'fs91', 241)" onmouseover="showTip(event, 'fs91', 241)" class="i">h</span>]<span class="o">::</span><span onmouseout="hideTip(event, 'fs72', 242)" onmouseover="showTip(event, 'fs72', 242)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs94', 243)" onmouseover="showTip(event, 'fs94', 243)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs95', 244)" onmouseover="showTip(event, 'fs95', 244)" class="i">el</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs91', 245)" onmouseover="showTip(event, 'fs91', 245)" class="i">h</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs95', 246)" onmouseover="showTip(event, 'fs95', 246)" class="i">el</span>) <span onmouseout="hideTip(event, 'fs89', 247)" onmouseover="showTip(event, 'fs89', 247)" class="i">accLst</span> <span class="o">@</span> <span onmouseout="hideTip(event, 'fs89', 248)" onmouseover="showTip(event, 'fs89', 248)" class="i">accLst</span>
            <span onmouseout="hideTip(event, 'fs88', 249)" onmouseover="showTip(event, 'fs88', 249)" class="f">comb</span> <span onmouseout="hideTip(event, 'fs93', 250)" onmouseover="showTip(event, 'fs93', 250)" class="i">next</span> <span onmouseout="hideTip(event, 'fs92', 251)" onmouseover="showTip(event, 'fs92', 251)" class="i">t</span>
        | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs89', 252)" onmouseover="showTip(event, 'fs89', 252)" class="i">accLst</span>
    <span onmouseout="hideTip(event, 'fs88', 253)" onmouseover="showTip(event, 'fs88', 253)" class="f">comb</span> [] <span onmouseout="hideTip(event, 'fs87', 254)" onmouseover="showTip(event, 'fs87', 254)" class="i">lst</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs96', 255)" onmouseover="showTip(event, 'fs96', 255)" class="f">mineTree</span> <span onmouseout="hideTip(event, 'fs97', 256)" onmouseover="showTip(event, 'fs97', 256)" class="i">support</span> (<span onmouseout="hideTip(event, 'fs98', 257)" onmouseover="showTip(event, 'fs98', 257)" class="i">tree</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs16', 258)" onmouseover="showTip(event, 'fs16', 258)" class="t">Tree</span><span class="o">&lt;</span>_<span class="o">&gt;</span>) <span class="o">=</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs99', 259)" onmouseover="showTip(event, 'fs99', 259)" class="i">paths</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs98', 260)" onmouseover="showTip(event, 'fs98', 260)" class="i">tree</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 261)" onmouseover="showTip(event, 'fs70', 261)" class="i">Root</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 262)" onmouseover="showTip(event, 'fs56', 262)" class="i">Heads</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 263)" onmouseover="showTip(event, 'fs30', 263)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 264)" onmouseover="showTip(event, 'fs31', 264)" class="f">collect</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs100', 265)" onmouseover="showTip(event, 'fs100', 265)" class="i">kv</span><span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs79', 266)" onmouseover="showTip(event, 'fs79', 266)" class="f">mineNode</span> [] <span onmouseout="hideTip(event, 'fs100', 267)" onmouseover="showTip(event, 'fs100', 267)" class="i">kv</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs85', 268)" onmouseover="showTip(event, 'fs85', 268)" class="i">Value</span>) <span class="c">//find support for each path from root to leaf</span>
  <span onmouseout="hideTip(event, 'fs99', 269)" onmouseover="showTip(event, 'fs99', 269)" class="i">paths</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 270)" onmouseover="showTip(event, 'fs30', 270)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 271)" onmouseover="showTip(event, 'fs31', 271)" class="f">collect</span> (<span class="k">fun</span> {<span class="i">Items</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs101', 272)" onmouseover="showTip(event, 'fs101', 272)" class="i">is</span>;<span class="i">Support</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs37', 273)" onmouseover="showTip(event, 'fs37', 273)" class="i">c</span>} <span class="k">-&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs102', 274)" onmouseover="showTip(event, 'fs102', 274)" class="i">combos</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs86', 275)" onmouseover="showTip(event, 'fs86', 275)" class="f">allCombinations</span> <span onmouseout="hideTip(event, 'fs101', 276)" onmouseover="showTip(event, 'fs101', 276)" class="i">is</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs72', 277)" onmouseover="showTip(event, 'fs72', 277)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs94', 278)" onmouseover="showTip(event, 'fs94', 278)" class="f">map</span> <span onmouseout="hideTip(event, 'fs103', 279)" onmouseover="showTip(event, 'fs103', 279)" class="f">set</span>         <span class="c">//explode all possible combinations of items in the path</span>
    <span onmouseout="hideTip(event, 'fs102', 280)" onmouseover="showTip(event, 'fs102', 280)" class="i">combos</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs72', 281)" onmouseover="showTip(event, 'fs72', 281)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs94', 282)" onmouseover="showTip(event, 'fs94', 282)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs104', 283)" onmouseover="showTip(event, 'fs104', 283)" class="i">combo</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs104', 284)" onmouseover="showTip(event, 'fs104', 284)" class="i">combo</span>,<span onmouseout="hideTip(event, 'fs37', 285)" onmouseover="showTip(event, 'fs37', 285)" class="i">c</span>))              <span class="c">//associate them with support from this path</span>
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 286)" onmouseover="showTip(event, 'fs30', 286)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 287)" onmouseover="showTip(event, 'fs48', 287)" class="f">filter</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs104', 288)" onmouseover="showTip(event, 'fs104', 288)" class="i">combo</span>,_) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs28', 289)" onmouseover="showTip(event, 'fs28', 289)" class="t">Set</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs105', 290)" onmouseover="showTip(event, 'fs105', 290)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs104', 291)" onmouseover="showTip(event, 'fs104', 291)" class="i">combo</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs106', 292)" onmouseover="showTip(event, 'fs106', 292)" class="f">not</span>) <span class="c">//filter out empty sets</span>
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 293)" onmouseover="showTip(event, 'fs30', 293)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs107', 294)" onmouseover="showTip(event, 'fs107', 294)" class="f">groupBy</span> <span onmouseout="hideTip(event, 'fs108', 295)" onmouseover="showTip(event, 'fs108', 295)" class="f">fst</span>                                        <span class="c">//group by each combination of items generated earlier</span>
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 296)" onmouseover="showTip(event, 'fs30', 296)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 297)" onmouseover="showTip(event, 'fs35', 297)" class="f">map</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs109', 298)" onmouseover="showTip(event, 'fs109', 298)" class="i">k</span>,<span onmouseout="hideTip(event, 'fs110', 299)" onmouseover="showTip(event, 'fs110', 299)" class="i">vs</span>)<span class="k">-&gt;</span><span onmouseout="hideTip(event, 'fs109', 300)" onmouseover="showTip(event, 'fs109', 300)" class="i">k</span>,<span onmouseout="hideTip(event, 'fs110', 301)" onmouseover="showTip(event, 'fs110', 301)" class="i">vs</span><span class="o">|&gt;</span><span onmouseout="hideTip(event, 'fs30', 302)" onmouseover="showTip(event, 'fs30', 302)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs111', 303)" onmouseover="showTip(event, 'fs111', 303)" class="f">sumBy</span> <span onmouseout="hideTip(event, 'fs32', 304)" onmouseover="showTip(event, 'fs32', 304)" class="f">snd</span>)              <span class="c">//sum up individual supports for each group into total support</span>
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 305)" onmouseover="showTip(event, 'fs30', 305)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 306)" onmouseover="showTip(event, 'fs48', 306)" class="f">filter</span> (<span class="k">fun</span> (_,<span onmouseout="hideTip(event, 'fs112', 307)" onmouseover="showTip(event, 'fs112', 307)" class="i">s</span>)<span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs112', 308)" onmouseover="showTip(event, 'fs112', 308)" class="i">s</span> <span class="o">&gt;</span><span class="o">=</span> <span onmouseout="hideTip(event, 'fs97', 309)" onmouseover="showTip(event, 'fs97', 309)" class="i">support</span>)                  <span class="c">//filter out combinations that fall below the specified support threshold</span>

<span class="c">(* usage  </span>

<span class="c">#load &quot;FPGrowth.fs&quot;</span>
<span class="c">open FPGrowth</span>
<span class="c">let transactions = //each character in the strings below is a transaction item</span>
<span class="c">  [|&quot;abcefo&quot;; &quot;acg&quot;; &quot;ei&quot;; &quot;acdeg&quot;; &quot;acegl&quot;; &quot;ej&quot;; &quot;abcefp&quot;; &quot;acd&quot;; &quot;acegm&quot;; &quot;acegn&quot;|]</span>
<span class="c">  |&gt; Array.mapi (fun i s-&gt; i,s |&gt; Seq.toList |&gt; set)</span>

<span class="c">let support = 3</span>
<span class="c">let tree = makeTree transactions //make a compressed representation of the transactions</span>
<span class="c">let frequentItems = mineTree support tree |&gt; Seq.toList</span>

<span class="c">&gt;</span>
<span class="c">val frequentItems : (Set&lt;char&gt; * int) list =</span>
<span class="c">  [(set [&#39;a&#39;], 8); (set [&#39;a&#39;; &#39;c&#39;], 8); (set [&#39;a&#39;; &#39;c&#39;; &#39;e&#39;], 6);</span>
<span class="c">   (set [&#39;a&#39;; &#39;e&#39;], 6); (set [&#39;c&#39;], 8); (set [&#39;c&#39;; &#39;e&#39;], 6); (set [&#39;e&#39;], 8);</span>
<span class="c">   (set [&#39;a&#39;; &#39;c&#39;; &#39;e&#39;; &#39;g&#39;], 4); (set [&#39;a&#39;; &#39;c&#39;; &#39;g&#39;], 4);</span>
<span class="c">   (set [&#39;a&#39;; &#39;e&#39;; &#39;g&#39;], 4); (set [&#39;a&#39;; &#39;g&#39;], 4); (set [&#39;c&#39;; &#39;e&#39;; &#39;g&#39;], 4);</span>
<span class="c">   (set [&#39;c&#39;; &#39;g&#39;], 4); (set [&#39;e&#39;; &#39;g&#39;], 4); (set [&#39;g&#39;], 4)]</span>

<span class="c">*)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module FPGrowth</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace System.Collections</div>
<div class="tip" id="fs4">namespace System.Collections.Generic</div>
<div class="tip" id="fs5">type Node&lt;&#39;i&gt; =<br />&#160;&#160;{Item: &#39;i;<br />&#160;&#160;&#160;mutable Support: int;<br />&#160;&#160;&#160;Children: Dictionary&lt;&#39;i,Node&lt;&#39;i&gt;&gt;;}<br /><br />Full name: FPGrowth.Node&lt;_&gt;</div>
<div class="tip" id="fs6">Node.Item: &#39;i</div>
<div class="tip" id="fs7">Node.Support: int</div>
<div class="tip" id="fs8">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs9">Node.Children: Dictionary&lt;&#39;i,Node&lt;&#39;i&gt;&gt;</div>
<div class="tip" id="fs10">Multiple items<br />type Dictionary&lt;&#39;TKey,&#39;TValue&gt; =<br />&#160;&#160;new : unit -&gt; Dictionary&lt;&#39;TKey, &#39;TValue&gt; + 5 overloads<br />&#160;&#160;member Add : key:&#39;TKey * value:&#39;TValue -&gt; unit<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Comparer : IEqualityComparer&lt;&#39;TKey&gt;<br />&#160;&#160;member ContainsKey : key:&#39;TKey -&gt; bool<br />&#160;&#160;member ContainsValue : value:&#39;TValue -&gt; bool<br />&#160;&#160;member Count : int<br />&#160;&#160;member GetEnumerator : unit -&gt; Enumerator&lt;&#39;TKey, &#39;TValue&gt;<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;member Item : &#39;TKey -&gt; &#39;TValue with get, set<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br />&#160;&#160;nested type KeyCollection<br />&#160;&#160;nested type ValueCollection<br /><br />Full name: System.Collections.Generic.Dictionary&lt;_,_&gt;<br /><br />--------------------<br />Dictionary() : unit<br />Dictionary(capacity: int) : unit<br />Dictionary(comparer: IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Dictionary(dictionary: IDictionary&lt;&#39;TKey,&#39;TValue&gt;) : unit<br />Dictionary(capacity: int, comparer: IEqualityComparer&lt;&#39;TKey&gt;) : unit<br />Dictionary(dictionary: IDictionary&lt;&#39;TKey,&#39;TValue&gt;, comparer: IEqualityComparer&lt;&#39;TKey&gt;) : unit</div>
<div class="tip" id="fs11">type Root&lt;&#39;i&gt; =<br />&#160;&#160;{Heads: Dictionary&lt;&#39;i,Node&lt;&#39;i&gt;&gt;;}<br /><br />Full name: FPGrowth.Root&lt;_&gt;</div>
<div class="tip" id="fs12">Root.Heads: Dictionary&lt;&#39;i,Node&lt;&#39;i&gt;&gt;</div>
<div class="tip" id="fs13">type TableEntry&lt;&#39;i&gt; =<br />&#160;&#160;{Item: &#39;i;<br />&#160;&#160;&#160;Frequency: int;}<br /><br />Full name: FPGrowth.TableEntry&lt;_&gt;</div>
<div class="tip" id="fs14">TableEntry.Item: &#39;i</div>
<div class="tip" id="fs15">TableEntry.Frequency: int</div>
<div class="tip" id="fs16">type Tree&lt;&#39;i&gt; =<br />&#160;&#160;{Root: Root&lt;&#39;i&gt;;}<br /><br />Full name: FPGrowth.Tree&lt;_&gt;</div>
<div class="tip" id="fs17">Multiple items<br />Tree.Root: Root&lt;&#39;i&gt;<br /><br />--------------------<br />type Root&lt;&#39;i&gt; =<br />&#160;&#160;{Heads: Dictionary&lt;&#39;i,Node&lt;&#39;i&gt;&gt;;}<br /><br />Full name: FPGrowth.Root&lt;_&gt;</div>
<div class="tip" id="fs18">type Path&lt;&#39;i&gt; =<br />&#160;&#160;{Items: &#39;i list;<br />&#160;&#160;&#160;Support: int;}<br /><br />Full name: FPGrowth.Path&lt;_&gt;</div>
<div class="tip" id="fs19">Path.Items: &#39;i list</div>
<div class="tip" id="fs20">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs21">Path.Support: int</div>
<div class="tip" id="fs22">val private yourself : x:&#39;a -&gt; &#39;a<br /><br />Full name: FPGrowth.yourself</div>
<div class="tip" id="fs23">val x : &#39;a</div>
<div class="tip" id="fs24">val initTable : transactions:seq&lt;&#39;id * Set&lt;&#39;item&gt;&gt; -&gt; TableEntry&lt;&#39;item&gt; [] (requires comparison)<br /><br />Full name: FPGrowth.initTable</div>
<div class="tip" id="fs25">val transactions : seq&lt;&#39;id * Set&lt;&#39;item&gt;&gt; (requires comparison)</div>
<div class="tip" id="fs26">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs27">val id : x:&#39;T -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.id</div>
<div class="tip" id="fs28">Multiple items<br />module Set<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Set&lt;&#39;T (requires comparison)&gt; =<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;interface ICollection&lt;&#39;T&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Add : value:&#39;T -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Contains : value:&#39;T -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member IsProperSubsetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;member IsProperSupersetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Set&lt;_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;</div>
<div class="tip" id="fs29">val freq : seq&lt;&#39;item * int&gt; (requires comparison)</div>
<div class="tip" id="fs30">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs31">val collect : mapping:(&#39;T -&gt; #seq&lt;&#39;U&gt;) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.collect</div>
<div class="tip" id="fs32">val snd : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T2<br /><br />Full name: Microsoft.FSharp.Core.Operators.snd</div>
<div class="tip" id="fs33">val countBy : projection:(&#39;T -&gt; &#39;Key) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;Key * int&gt; (requires equality)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.countBy</div>
<div class="tip" id="fs34">val table : TableEntry&lt;&#39;item&gt; [] (requires comparison)</div>
<div class="tip" id="fs35">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs36">val i : &#39;item (requires comparison)</div>
<div class="tip" id="fs37">val c : int</div>
<div class="tip" id="fs38">val sortBy : projection:(&#39;T -&gt; &#39;Key) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.sortBy</div>
<div class="tip" id="fs39">val te : TableEntry&lt;&#39;item&gt; (requires comparison)</div>
<div class="tip" id="fs40">val toArray : source:seq&lt;&#39;T&gt; -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Seq.toArray</div>
<div class="tip" id="fs41">val sortTransactions : transactions:seq&lt;&#39;id * Set&lt;&#39;item&gt;&gt; -&gt; table:TableEntry&lt;&#39;item&gt; [] -&gt; (&#39;id * &#39;item []) [] (requires comparison)<br /><br />Full name: FPGrowth.sortTransactions</div>
<div class="tip" id="fs42">val tblIdx : IDictionary&lt;&#39;item,TableEntry&lt;&#39;item&gt;&gt; (requires comparison)</div>
<div class="tip" id="fs43">TableEntry.Item: &#39;item</div>
<div class="tip" id="fs44">val dict : keyValuePairs:seq&lt;&#39;Key * &#39;Value&gt; -&gt; IDictionary&lt;&#39;Key,&#39;Value&gt; (requires equality)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.dict</div>
<div class="tip" id="fs45">val sorted : (&#39;id * &#39;item []) [] (requires comparison)</div>
<div class="tip" id="fs46">val id : &#39;id</div>
<div class="tip" id="fs47">val s : Set&lt;&#39;item&gt; (requires comparison)</div>
<div class="tip" id="fs48">val filter : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.filter</div>
<div class="tip" id="fs49">val item : &#39;item (requires comparison)</div>
<div class="tip" id="fs50">IDictionary.ContainsKey(key: &#39;item) : bool</div>
<div class="tip" id="fs51">val sortByDescending : projection:(&#39;T -&gt; &#39;Key) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.sortByDescending</div>
<div class="tip" id="fs52">val insertRoot : r:Root&lt;&#39;a&gt; -&gt; item:&#39;a -&gt; Node&lt;&#39;a&gt; (requires equality)<br /><br />Full name: FPGrowth.insertRoot</div>
<div class="tip" id="fs53">val r : Root&lt;&#39;a&gt; (requires equality)</div>
<div class="tip" id="fs54">val item : &#39;a (requires equality)</div>
<div class="tip" id="fs55">val node : Node&lt;&#39;a&gt; (requires equality)</div>
<div class="tip" id="fs56">Root.Heads: Dictionary&lt;&#39;a,Node&lt;&#39;a&gt;&gt;</div>
<div class="tip" id="fs57">Dictionary.TryGetValue(key: &#39;a, value: byref&lt;Node&lt;&#39;a&gt;&gt;) : bool</div>
<div class="tip" id="fs58">val n : Node&lt;&#39;a&gt; (requires equality)</div>
<div class="tip" id="fs59">Dictionary.Add(key: &#39;a, value: Node&lt;&#39;a&gt;) : unit</div>
<div class="tip" id="fs60">val insertNode : r:Node&lt;&#39;a&gt; -&gt; item:&#39;a -&gt; Node&lt;&#39;a&gt; (requires equality)<br /><br />Full name: FPGrowth.insertNode</div>
<div class="tip" id="fs61">val r : Node&lt;&#39;a&gt; (requires equality)</div>
<div class="tip" id="fs62">Node.Children: Dictionary&lt;&#39;a,Node&lt;&#39;a&gt;&gt;</div>
<div class="tip" id="fs63">val insert : acc:Node&lt;&#39;a&gt; list -&gt; tree:Tree&lt;&#39;a&gt; -&gt; items:&#39;a array -&gt; i:int -&gt; Node&lt;&#39;a&gt; list (requires equality)<br /><br />Full name: FPGrowth.insert</div>
<div class="tip" id="fs64">val acc : Node&lt;&#39;a&gt; list (requires equality)</div>
<div class="tip" id="fs65">val tree : Tree&lt;&#39;a&gt; (requires equality)</div>
<div class="tip" id="fs66">val items : &#39;a array (requires equality)</div>
<div class="tip" id="fs67">type &#39;T array = &#39;T []<br /><br />Full name: Microsoft.FSharp.Core.array&lt;_&gt;</div>
<div class="tip" id="fs68">val i : int</div>
<div class="tip" id="fs69">property System.Array.Length: int</div>
<div class="tip" id="fs70">Tree.Root: Root&lt;&#39;a&gt;</div>
<div class="tip" id="fs71">val prev : Node&lt;&#39;a&gt; (requires equality)</div>
<div class="tip" id="fs72">Multiple items<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; List&lt;&#39;T&gt; + 2 overloads<br />&#160;&#160;member Add : item:&#39;T -&gt; unit<br />&#160;&#160;member AddRange : collection:IEnumerable&lt;&#39;T&gt; -&gt; unit<br />&#160;&#160;member AsReadOnly : unit -&gt; ReadOnlyCollection&lt;&#39;T&gt;<br />&#160;&#160;member BinarySearch : item:&#39;T -&gt; int + 2 overloads<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Contains : item:&#39;T -&gt; bool<br />&#160;&#160;member ConvertAll&lt;&#39;TOutput&gt; : converter:Converter&lt;&#39;T, &#39;TOutput&gt; -&gt; List&lt;&#39;TOutput&gt;<br />&#160;&#160;member CopyTo : array:&#39;T[] -&gt; unit + 2 overloads<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br /><br />Full name: System.Collections.Generic.List&lt;_&gt;<br /><br />--------------------<br />List() : unit<br />List(capacity: int) : unit<br />List(collection: IEnumerable&lt;&#39;T&gt;) : unit</div>
<div class="tip" id="fs73">val head : list:&#39;T list -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.List.head</div>
<div class="tip" id="fs74">val makeTree : transactions:seq&lt;&#39;id * Set&lt;&#39;item&gt;&gt; -&gt; Tree&lt;&#39;item&gt; (requires comparison)<br /><br />Full name: FPGrowth.makeTree</div>
<div class="tip" id="fs75">val tree : Tree&lt;&#39;item&gt; (requires comparison)</div>
<div class="tip" id="fs76">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs77">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; array:&#39;T [] -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.Array.fold</div>
<div class="tip" id="fs78">val sortedTxns : &#39;item [] (requires comparison)</div>
<div class="tip" id="fs79">val mineNode : acc:&#39;a list -&gt; node:Node&lt;&#39;a&gt; -&gt; seq&lt;Path&lt;&#39;a&gt;&gt;<br /><br />Full name: FPGrowth.mineNode</div>
<div class="tip" id="fs80">val acc : &#39;a list</div>
<div class="tip" id="fs81">val node : Node&lt;&#39;a&gt;</div>
<div class="tip" id="fs82">property Dictionary.Count: int</div>
<div class="tip" id="fs83">Node.Item: &#39;a</div>
<div class="tip" id="fs84">val kv : KeyValuePair&lt;&#39;a,Node&lt;&#39;a&gt;&gt;</div>
<div class="tip" id="fs85">property KeyValuePair.Value: Node&lt;&#39;a&gt;</div>
<div class="tip" id="fs86">val allCombinations : lst:&#39;a list -&gt; &#39;a list list<br /><br />Full name: FPGrowth.allCombinations</div>
<div class="tip" id="fs87">val lst : &#39;a list</div>
<div class="tip" id="fs88">val comb : (&#39;b list list -&gt; &#39;b list -&gt; &#39;b list list)</div>
<div class="tip" id="fs89">val accLst : &#39;b list list</div>
<div class="tip" id="fs90">val elemLst : &#39;b list</div>
<div class="tip" id="fs91">val h : &#39;b</div>
<div class="tip" id="fs92">val t : &#39;b list</div>
<div class="tip" id="fs93">val next : &#39;b list list</div>
<div class="tip" id="fs94">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs95">val el : &#39;b list</div>
<div class="tip" id="fs96">val mineTree : support:int -&gt; tree:Tree&lt;&#39;a&gt; -&gt; seq&lt;Set&lt;&#39;a&gt; * int&gt; (requires comparison)<br /><br />Full name: FPGrowth.mineTree</div>
<div class="tip" id="fs97">val support : int</div>
<div class="tip" id="fs98">val tree : Tree&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs99">val paths : seq&lt;Path&lt;&#39;a&gt;&gt; (requires comparison)</div>
<div class="tip" id="fs100">val kv : KeyValuePair&lt;&#39;a,Node&lt;&#39;a&gt;&gt; (requires comparison)</div>
<div class="tip" id="fs101">val is : &#39;a list (requires comparison)</div>
<div class="tip" id="fs102">val combos : Set&lt;&#39;a&gt; list (requires comparison)</div>
<div class="tip" id="fs103">val set : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.set</div>
<div class="tip" id="fs104">val combo : Set&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs105">val isEmpty : set:Set&lt;&#39;T&gt; -&gt; bool (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Set.isEmpty</div>
<div class="tip" id="fs106">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs107">val groupBy : projection:(&#39;T -&gt; &#39;Key) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;Key * seq&lt;&#39;T&gt;&gt; (requires equality)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.groupBy</div>
<div class="tip" id="fs108">val fst : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T1<br /><br />Full name: Microsoft.FSharp.Core.Operators.fst</div>
<div class="tip" id="fs109">val k : Set&lt;&#39;a&gt; (requires comparison)</div>
<div class="tip" id="fs110">val vs : seq&lt;Set&lt;&#39;a&gt; * int&gt; (requires comparison)</div>
<div class="tip" id="fs111">val sumBy : projection:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;U (requires member ( + ) and member get_Zero)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.sumBy</div>
<div class="tip" id="fs112">val s : int</div>

