<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="prep">#r</span> <span class="s">&quot;System.Xml.dll&quot;</span>;;
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>;;
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Linq</span>;;
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">Xml</span>;;
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 6)" onmouseover="showTip(event, 'fs1', 6)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="i">Xml</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="i">Schema</span>;;
 
<span class="c">// open sample XML files, and infer a schema</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="i">samples</span> <span class="o">=</span> [<span class="s">@&quot;file1.xml&quot;</span>; <span class="s">@&quot;file2.xml&quot;</span>; <span class="s">@&quot;fileN.xml&quot;</span> ];;
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="i">inference</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="t">XmlSchemaInference</span>();;
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="i">inferred</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs5', 13)" onmouseover="showTip(event, 'fs5', 13)" class="i">samples</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="t">XmlReader</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="f">Create</span> <span onmouseout="hideTip(event, 'fs11', 19)" onmouseover="showTip(event, 'fs11', 19)" class="i">x</span>)
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 20)" onmouseover="showTip(event, 'fs9', 20)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="f">fold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="i">schema</span> <span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 24)" onmouseover="showTip(event, 'fs6', 24)" class="i">inference</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 25)" onmouseover="showTip(event, 'fs17', 25)" class="f">InferSchema</span>(<span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs15', 27)" onmouseover="showTip(event, 'fs15', 27)" class="i">schema</span>)) (<span class="k">new</span> <span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="t">XmlSchemaSet</span>());;

<span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="t">Enumerable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 30)" onmouseover="showTip(event, 'fs20', 30)" class="f">Cast</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="t">XmlSchema</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs8', 32)" onmouseover="showTip(event, 'fs8', 32)" class="i">inferred</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 33)" onmouseover="showTip(event, 'fs22', 33)" class="f">Schemas</span>())
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 34)" onmouseover="showTip(event, 'fs23', 34)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 35)" onmouseover="showTip(event, 'fs24', 35)" class="f">iter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs25', 36)" onmouseover="showTip(event, 'fs25', 36)" class="i">schema</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 37)" onmouseover="showTip(event, 'fs25', 37)" class="i">schema</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 38)" onmouseover="showTip(event, 'fs26', 38)" class="f">Write</span>(<span onmouseout="hideTip(event, 'fs27', 39)" onmouseover="showTip(event, 'fs27', 39)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 40)" onmouseover="showTip(event, 'fs28', 40)" class="i">Out</span>));;
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Linq</div>
<div class="tip" id="fs3">namespace System.Xml</div>
<div class="tip" id="fs4">namespace System.Xml.Schema</div>
<div class="tip" id="fs5">val samples : string list<br /><br />Full name: Script.samples</div>
<div class="tip" id="fs6">val inference : XmlSchemaInference<br /><br />Full name: Script.inference</div>
<div class="tip" id="fs7">Multiple items<br />type XmlSchemaInference =<br />&#160;&#160;new : unit -&gt; XmlSchemaInference<br />&#160;&#160;member InferSchema : instanceDocument:XmlReader -&gt; XmlSchemaSet + 1 overload<br />&#160;&#160;member Occurrence : InferenceOption with get, set<br />&#160;&#160;member TypeInference : InferenceOption with get, set<br />&#160;&#160;nested type InferenceOption<br /><br />Full name: System.Xml.Schema.XmlSchemaInference<br /><br />--------------------<br />XmlSchemaInference() : unit</div>
<div class="tip" id="fs8">val inferred : XmlSchemaSet<br /><br />Full name: Script.inferred</div>
<div class="tip" id="fs9">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs10">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs11">val x : string</div>
<div class="tip" id="fs12">type XmlReader =<br />&#160;&#160;member AttributeCount : int<br />&#160;&#160;member BaseURI : string<br />&#160;&#160;member CanReadBinaryContent : bool<br />&#160;&#160;member CanReadValueChunk : bool<br />&#160;&#160;member CanResolveEntity : bool<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member Depth : int<br />&#160;&#160;member EOF : bool<br />&#160;&#160;member GetAttribute : name:string -&gt; string + 2 overloads<br />&#160;&#160;member HasAttributes : bool<br />&#160;&#160;...<br /><br />Full name: System.Xml.XmlReader</div>
<div class="tip" id="fs13">XmlReader.Create(input: IO.TextReader) : XmlReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />XmlReader.Create(input: IO.Stream) : XmlReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />XmlReader.Create(inputUri: string) : XmlReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />XmlReader.Create(reader: XmlReader, settings: XmlReaderSettings) : XmlReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />XmlReader.Create(input: IO.TextReader, settings: XmlReaderSettings) : XmlReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />XmlReader.Create(input: IO.Stream, settings: XmlReaderSettings) : XmlReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />XmlReader.Create(inputUri: string, settings: XmlReaderSettings) : XmlReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />XmlReader.Create(input: IO.TextReader, settings: XmlReaderSettings, inputContext: XmlParserContext) : XmlReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />XmlReader.Create(input: IO.TextReader, settings: XmlReaderSettings, baseUri: string) : XmlReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />XmlReader.Create(input: IO.Stream, settings: XmlReaderSettings, inputContext: XmlParserContext) : XmlReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs14">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; list:&#39;T list -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.List.fold</div>
<div class="tip" id="fs15">val schema : XmlSchemaSet</div>
<div class="tip" id="fs16">val x : XmlReader</div>
<div class="tip" id="fs17">XmlSchemaInference.InferSchema(instanceDocument: XmlReader) : XmlSchemaSet<br />XmlSchemaInference.InferSchema(instanceDocument: XmlReader, schemas: XmlSchemaSet) : XmlSchemaSet</div>
<div class="tip" id="fs18">Multiple items<br />type XmlSchemaSet =<br />&#160;&#160;new : unit -&gt; XmlSchemaSet + 1 overload<br />&#160;&#160;member Add : schemas:XmlSchemaSet -&gt; unit + 3 overloads<br />&#160;&#160;member CompilationSettings : XmlSchemaCompilationSettings with get, set<br />&#160;&#160;member Compile : unit -&gt; unit<br />&#160;&#160;member Contains : targetNamespace:string -&gt; bool + 1 overload<br />&#160;&#160;member CopyTo : schemas:XmlSchema[] * index:int -&gt; unit<br />&#160;&#160;member Count : int<br />&#160;&#160;member GlobalAttributes : XmlSchemaObjectTable<br />&#160;&#160;member GlobalElements : XmlSchemaObjectTable<br />&#160;&#160;member GlobalTypes : XmlSchemaObjectTable<br />&#160;&#160;...<br /><br />Full name: System.Xml.Schema.XmlSchemaSet<br /><br />--------------------<br />XmlSchemaSet() : unit<br />XmlSchemaSet(nameTable: XmlNameTable) : unit</div>
<div class="tip" id="fs19">type Enumerable =<br />&#160;&#160;static member Aggregate&lt;&#39;TSource&gt; : source:IEnumerable&lt;&#39;TSource&gt; * func:Func&lt;&#39;TSource, &#39;TSource, &#39;TSource&gt; -&gt; &#39;TSource + 2 overloads<br />&#160;&#160;static member All&lt;&#39;TSource&gt; : source:IEnumerable&lt;&#39;TSource&gt; * predicate:Func&lt;&#39;TSource, bool&gt; -&gt; bool<br />&#160;&#160;static member Any&lt;&#39;TSource&gt; : source:IEnumerable&lt;&#39;TSource&gt; -&gt; bool + 1 overload<br />&#160;&#160;static member AsEnumerable&lt;&#39;TSource&gt; : source:IEnumerable&lt;&#39;TSource&gt; -&gt; IEnumerable&lt;&#39;TSource&gt;<br />&#160;&#160;static member Average : source:IEnumerable&lt;int&gt; -&gt; float + 19 overloads<br />&#160;&#160;static member Cast&lt;&#39;TResult&gt; : source:IEnumerable -&gt; IEnumerable&lt;&#39;TResult&gt;<br />&#160;&#160;static member Concat&lt;&#39;TSource&gt; : first:IEnumerable&lt;&#39;TSource&gt; * second:IEnumerable&lt;&#39;TSource&gt; -&gt; IEnumerable&lt;&#39;TSource&gt;<br />&#160;&#160;static member Contains&lt;&#39;TSource&gt; : source:IEnumerable&lt;&#39;TSource&gt; * value:&#39;TSource -&gt; bool + 1 overload<br />&#160;&#160;static member Count&lt;&#39;TSource&gt; : source:IEnumerable&lt;&#39;TSource&gt; -&gt; int + 1 overload<br />&#160;&#160;static member DefaultIfEmpty&lt;&#39;TSource&gt; : source:IEnumerable&lt;&#39;TSource&gt; -&gt; IEnumerable&lt;&#39;TSource&gt; + 1 overload<br />&#160;&#160;...<br /><br />Full name: System.Linq.Enumerable</div>
<div class="tip" id="fs20">Enumerable.Cast&lt;&#39;TResult&gt;(source: Collections.IEnumerable) : Collections.Generic.IEnumerable&lt;&#39;TResult&gt;</div>
<div class="tip" id="fs21">Multiple items<br />type XmlSchema =<br />&#160;&#160;inherit XmlSchemaObject<br />&#160;&#160;new : unit -&gt; XmlSchema<br />&#160;&#160;member AttributeFormDefault : XmlSchemaForm with get, set<br />&#160;&#160;member AttributeGroups : XmlSchemaObjectTable<br />&#160;&#160;member Attributes : XmlSchemaObjectTable<br />&#160;&#160;member BlockDefault : XmlSchemaDerivationMethod with get, set<br />&#160;&#160;member Compile : validationEventHandler:ValidationEventHandler -&gt; unit + 1 overload<br />&#160;&#160;member ElementFormDefault : XmlSchemaForm with get, set<br />&#160;&#160;member Elements : XmlSchemaObjectTable<br />&#160;&#160;member FinalDefault : XmlSchemaDerivationMethod with get, set<br />&#160;&#160;member Groups : XmlSchemaObjectTable<br />&#160;&#160;...<br /><br />Full name: System.Xml.Schema.XmlSchema<br /><br />--------------------<br />type XmlSchemaAttribute =<br />&#160;&#160;inherit XmlSchemaAnnotated<br />&#160;&#160;new : unit -&gt; XmlSchemaAttribute<br />&#160;&#160;member AttributeSchemaType : XmlSchemaSimpleType<br />&#160;&#160;member AttributeType : obj<br />&#160;&#160;member DefaultValue : string with get, set<br />&#160;&#160;member FixedValue : string with get, set<br />&#160;&#160;member Form : XmlSchemaForm with get, set<br />&#160;&#160;member Name : string with get, set<br />&#160;&#160;member QualifiedName : XmlQualifiedName<br />&#160;&#160;member RefName : XmlQualifiedName with get, set<br />&#160;&#160;member SchemaType : XmlSchemaSimpleType with get, set<br />&#160;&#160;...<br /><br />Full name: System.Xml.Schema.XmlSchemaAttribute<br /><br />--------------------<br />XmlSchema() : unit<br /><br />--------------------<br />XmlSchemaAttribute() : unit</div>
<div class="tip" id="fs22">XmlSchemaSet.Schemas() : Collections.ICollection<br />XmlSchemaSet.Schemas(targetNamespace: string) : Collections.ICollection</div>
<div class="tip" id="fs23">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs24">val iter : action:(&#39;T -&gt; unit) -&gt; source:seq&lt;&#39;T&gt; -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.Seq.iter</div>
<div class="tip" id="fs25">val schema : XmlSchema</div>
<div class="tip" id="fs26">XmlSchema.Write(writer: XmlWriter) : unit<br />XmlSchema.Write(writer: IO.TextWriter) : unit<br />XmlSchema.Write(stream: IO.Stream) : unit<br />XmlSchema.Write(writer: XmlWriter, namespaceManager: XmlNamespaceManager) : unit<br />XmlSchema.Write(writer: IO.TextWriter, namespaceManager: XmlNamespaceManager) : unit<br />XmlSchema.Write(stream: IO.Stream, namespaceManager: XmlNamespaceManager) : unit</div>
<div class="tip" id="fs27">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs28">property Console.Out: IO.TextWriter</div>

