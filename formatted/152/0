<h2><a name="Disposable-builder-declaration" class="anchor" href="#Disposable-builder-declaration">Disposable builder declaration</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">DisposableBuilder</span>() <span class="o">=</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">Delay</span>(<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="f">f</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">IDisposable</span>) <span class="o">=</span> 
    { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">IDisposable</span> <span class="k">with</span> 
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="f">Dispose</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 10)" onmouseover="showTip(event, 'fs4', 10)" class="f">f</span>()<span class="o">.</span><span class="f">Dispose</span>() }
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs2', 11)" onmouseover="showTip(event, 'fs2', 11)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="i">d1</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs6', 14)" onmouseover="showTip(event, 'fs6', 14)" class="t">IDisposable</span>, <span onmouseout="hideTip(event, 'fs4', 15)" onmouseover="showTip(event, 'fs4', 15)" class="f">f</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs5', 16)" onmouseover="showTip(event, 'fs5', 16)" class="t">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 17)" onmouseover="showTip(event, 'fs6', 17)" class="t">IDisposable</span>) <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="i">d2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 19)" onmouseover="showTip(event, 'fs4', 19)" class="f">f</span>()
    { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs6', 20)" onmouseover="showTip(event, 'fs6', 20)" class="t">IDisposable</span> <span class="k">with</span> 
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs7', 21)" onmouseover="showTip(event, 'fs7', 21)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 22)" onmouseover="showTip(event, 'fs8', 22)" class="f">Dispose</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 23)" onmouseover="showTip(event, 'fs10', 23)" class="i">d1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 24)" onmouseover="showTip(event, 'fs8', 24)" class="f">Dispose</span>(); <span onmouseout="hideTip(event, 'fs11', 25)" onmouseover="showTip(event, 'fs11', 25)" class="i">d2</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 26)" onmouseover="showTip(event, 'fs8', 26)" class="f">Dispose</span>() }
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs2', 27)" onmouseover="showTip(event, 'fs2', 27)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 28)" onmouseover="showTip(event, 'fs12', 28)" class="f">Return</span>(()) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 29)" onmouseover="showTip(event, 'fs2', 29)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 30)" onmouseover="showTip(event, 'fs13', 30)" class="f">Zero</span>()
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs2', 31)" onmouseover="showTip(event, 'fs2', 31)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 32)" onmouseover="showTip(event, 'fs14', 32)" class="f">Zero</span>() <span class="o">=</span>
    { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs6', 33)" onmouseover="showTip(event, 'fs6', 33)" class="t">IDisposable</span> <span class="k">with</span> 
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs7', 34)" onmouseover="showTip(event, 'fs7', 34)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 35)" onmouseover="showTip(event, 'fs8', 35)" class="f">Dispose</span>() <span class="o">=</span> () }

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 36)" onmouseover="showTip(event, 'fs15', 36)" class="i">disposable</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 37)" onmouseover="showTip(event, 'fs1', 37)" class="t">DisposableBuilder</span>()
</code></pre></td>
</tr>
</table>
<h2><a name="Demo-1-Resetting-console-colors" class="anchor" href="#Demo-1-Resetting-console-colors">Demo #1: Resetting console colors</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// Creates disposable that resets console color when disposed</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 38)" onmouseover="showTip(event, 'fs16', 38)" class="f">resetColor</span>() <span class="o">=</span> 
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 39)" onmouseover="showTip(event, 'fs17', 39)" class="i">clr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 40)" onmouseover="showTip(event, 'fs18', 40)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="i">ForegroundColor</span>
  <span onmouseout="hideTip(event, 'fs15', 42)" onmouseover="showTip(event, 'fs15', 42)" class="i">disposable</span> { <span onmouseout="hideTip(event, 'fs18', 43)" onmouseover="showTip(event, 'fs18', 43)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 44)" onmouseover="showTip(event, 'fs19', 44)" class="i">ForegroundColor</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs17', 45)" onmouseover="showTip(event, 'fs17', 45)" class="i">clr</span> }

<span class="c">// Prints &#39;doing work&#39; in red and resets color back</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 46)" onmouseover="showTip(event, 'fs20', 46)" class="f">demo1</span>() <span class="o">=</span>
  <span class="k">use</span> <span onmouseout="hideTip(event, 'fs21', 47)" onmouseover="showTip(event, 'fs21', 47)" class="i">unwind</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 48)" onmouseover="showTip(event, 'fs16', 48)" class="f">resetColor</span>()
  <span onmouseout="hideTip(event, 'fs18', 49)" onmouseover="showTip(event, 'fs18', 49)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 50)" onmouseover="showTip(event, 'fs19', 50)" class="i">ForegroundColor</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs22', 51)" onmouseover="showTip(event, 'fs22', 51)" class="t">ConsoleColor</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 52)" onmouseover="showTip(event, 'fs23', 52)" class="i">Red</span>
  <span onmouseout="hideTip(event, 'fs24', 53)" onmouseover="showTip(event, 'fs24', 53)" class="f">printfn</span> <span class="s">&quot;doing work&quot;</span>

<span onmouseout="hideTip(event, 'fs20', 54)" onmouseover="showTip(event, 'fs20', 54)" class="f">demo1</span>()        <span class="c">// Prints &#39;doing work&#39; in red</span>
<span onmouseout="hideTip(event, 'fs24', 55)" onmouseover="showTip(event, 'fs24', 55)" class="f">printfn</span> <span class="s">&quot;done&quot;</span> <span class="c">// Prints &#39;done&#39; in original color</span>
</code></pre></td>
</tr>
</table>
<h2><a name="Demo-2-Composing-disposables" class="anchor" href="#Demo-2-Composing-disposables">Demo #2: Composing disposables</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// Create two IDisposable objects that do some cleanup</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 56)" onmouseover="showTip(event, 'fs25', 56)" class="i">cleanup1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 57)" onmouseover="showTip(event, 'fs15', 57)" class="i">disposable</span> { 
  <span onmouseout="hideTip(event, 'fs24', 58)" onmouseover="showTip(event, 'fs24', 58)" class="f">printfn</span> <span class="s">&quot;cleanup #1&quot;</span> }
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 59)" onmouseover="showTip(event, 'fs26', 59)" class="i">cleanup2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 60)" onmouseover="showTip(event, 'fs15', 60)" class="i">disposable</span> { 
  <span onmouseout="hideTip(event, 'fs24', 61)" onmouseover="showTip(event, 'fs24', 61)" class="f">printfn</span> <span class="s">&quot;cleanup #1&quot;</span> }

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 62)" onmouseover="showTip(event, 'fs27', 62)" class="f">demo2</span>() <span class="o">=</span>
  <span class="c">// Dispose of both &#39;cleanup1&#39; and &#39;cleanup2&#39; when the</span>
  <span class="c">// method finishes. This is useful for example when working</span>
  <span class="c">// with IObservable (to dispose of event registrations)</span>
  <span class="k">use</span> <span onmouseout="hideTip(event, 'fs28', 63)" onmouseover="showTip(event, 'fs28', 63)" class="i">d</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 64)" onmouseover="showTip(event, 'fs15', 64)" class="i">disposable</span> { 
    <span onmouseout="hideTip(event, 'fs24', 65)" onmouseover="showTip(event, 'fs24', 65)" class="f">printfn</span> <span class="s">&quot;cleanup&quot;</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs25', 66)" onmouseover="showTip(event, 'fs25', 66)" class="i">cleanup1</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs26', 67)" onmouseover="showTip(event, 'fs26', 67)" class="i">cleanup2</span> }
  <span onmouseout="hideTip(event, 'fs24', 68)" onmouseover="showTip(event, 'fs24', 68)" class="f">printfn</span> <span class="s">&quot;foo&quot;</span>

<span onmouseout="hideTip(event, 'fs27', 69)" onmouseover="showTip(event, 'fs27', 69)" class="f">demo2</span>()
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />type DisposableBuilder =<br />&#160;&#160;new : unit -&gt; DisposableBuilder<br />&#160;&#160;member Bind : d1:IDisposable * f:(unit -&gt; IDisposable) -&gt; IDisposable<br />&#160;&#160;member Delay : f:(unit -&gt; IDisposable) -&gt; IDisposable<br />&#160;&#160;member Return : unit -&gt; IDisposable<br />&#160;&#160;member Zero : unit -&gt; IDisposable<br /><br />Full name: Script.DisposableBuilder<br /><br />--------------------<br />new : unit -&gt; DisposableBuilder</div>
<div class="tip" id="fs2">val x : DisposableBuilder</div>
<div class="tip" id="fs3">member DisposableBuilder.Delay : f:(unit -&gt; IDisposable) -&gt; IDisposable<br /><br />Full name: Script.DisposableBuilder.Delay</div>
<div class="tip" id="fs4">val f : (unit -&gt; IDisposable)</div>
<div class="tip" id="fs5">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs6">type IDisposable =<br />&#160;&#160;member Dispose : unit -&gt; unit<br /><br />Full name: System.IDisposable</div>
<div class="tip" id="fs7">val x : IDisposable</div>
<div class="tip" id="fs8">IDisposable.Dispose() : unit</div>
<div class="tip" id="fs9">member DisposableBuilder.Bind : d1:IDisposable * f:(unit -&gt; IDisposable) -&gt; IDisposable<br /><br />Full name: Script.DisposableBuilder.Bind</div>
<div class="tip" id="fs10">val d1 : IDisposable</div>
<div class="tip" id="fs11">val d2 : IDisposable</div>
<div class="tip" id="fs12">member DisposableBuilder.Return : unit -&gt; IDisposable<br /><br />Full name: Script.DisposableBuilder.Return</div>
<div class="tip" id="fs13">member DisposableBuilder.Zero : unit -&gt; IDisposable</div>
<div class="tip" id="fs14">member DisposableBuilder.Zero : unit -&gt; IDisposable<br /><br />Full name: Script.DisposableBuilder.Zero</div>
<div class="tip" id="fs15">val disposable : DisposableBuilder<br /><br />Full name: Script.disposable</div>
<div class="tip" id="fs16">val resetColor : unit -&gt; IDisposable<br /><br />Full name: Script.resetColor</div>
<div class="tip" id="fs17">val clr : ConsoleColor</div>
<div class="tip" id="fs18">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs19">property Console.ForegroundColor: ConsoleColor</div>
<div class="tip" id="fs20">val demo1 : unit -&gt; unit<br /><br />Full name: Script.demo1</div>
<div class="tip" id="fs21">val unwind : IDisposable</div>
<div class="tip" id="fs22">type ConsoleColor =<br />&#160;&#160;| Black = 0<br />&#160;&#160;| DarkBlue = 1<br />&#160;&#160;| DarkGreen = 2<br />&#160;&#160;| DarkCyan = 3<br />&#160;&#160;| DarkRed = 4<br />&#160;&#160;| DarkMagenta = 5<br />&#160;&#160;| DarkYellow = 6<br />&#160;&#160;| Gray = 7<br />&#160;&#160;| DarkGray = 8<br />&#160;&#160;| Blue = 9<br />&#160;&#160;...<br /><br />Full name: System.ConsoleColor</div>
<div class="tip" id="fs23">field ConsoleColor.Red = 12</div>
<div class="tip" id="fs24">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs25">val cleanup1 : IDisposable<br /><br />Full name: Script.cleanup1</div>
<div class="tip" id="fs26">val cleanup2 : IDisposable<br /><br />Full name: Script.cleanup2</div>
<div class="tip" id="fs27">val demo2 : unit -&gt; unit<br /><br />Full name: Script.demo2</div>
<div class="tip" id="fs28">val d : IDisposable</div>

