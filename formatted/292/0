<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Text</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">Text</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">RegularExpressions</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="i">Reflection</span>


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="f">check</span> <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="f">f</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="i">x</span> <span class="o">=</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="f">f</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">x</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="i">x</span>
                <span class="k">else</span> <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="f">failwithf</span> <span class="s">&quot;format failure </span><span class="e">\&quot;</span><span class="s"></span><span class="pf">%s</span><span class="s"></span><span class="e">\&quot;</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs9', 17)" onmouseover="showTip(event, 'fs9', 17)" class="i">x</span>


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="f">parseDecimal</span> <span onmouseout="hideTip(event, 'fs9', 19)" onmouseover="showTip(event, 'fs9', 19)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 20)" onmouseover="showTip(event, 'fs12', 20)" class="t">Decimal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 21)" onmouseover="showTip(event, 'fs13', 21)" class="f">Parse</span>(<span onmouseout="hideTip(event, 'fs9', 22)" onmouseover="showTip(event, 'fs9', 22)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs1', 23)" onmouseover="showTip(event, 'fs1', 23)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 24)" onmouseover="showTip(event, 'fs14', 24)" class="i">Globalization</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 25)" onmouseover="showTip(event, 'fs15', 25)" class="t">CultureInfo</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="i">InvariantCulture</span>)


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 27)" onmouseover="showTip(event, 'fs17', 27)" class="i">parsers</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="f">dict</span> [
                 <span class="s">&#39;b&#39;</span>, <span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="t">Boolean</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 30)" onmouseover="showTip(event, 'fs20', 30)" class="f">Parse</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="f">box</span>
                 <span class="s">&#39;d&#39;</span>, <span onmouseout="hideTip(event, 'fs22', 32)" onmouseover="showTip(event, 'fs22', 32)" class="f">int</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 33)" onmouseover="showTip(event, 'fs21', 33)" class="f">box</span>
                 <span class="s">&#39;i&#39;</span>, <span onmouseout="hideTip(event, 'fs22', 34)" onmouseover="showTip(event, 'fs22', 34)" class="f">int</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 35)" onmouseover="showTip(event, 'fs21', 35)" class="f">box</span>
                 <span class="s">&#39;s&#39;</span>, <span onmouseout="hideTip(event, 'fs21', 36)" onmouseover="showTip(event, 'fs21', 36)" class="f">box</span>
                 <span class="s">&#39;u&#39;</span>, <span onmouseout="hideTip(event, 'fs23', 37)" onmouseover="showTip(event, 'fs23', 37)" class="f">uint32</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs22', 38)" onmouseover="showTip(event, 'fs22', 38)" class="f">int</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 39)" onmouseover="showTip(event, 'fs21', 39)" class="f">box</span>
                 <span class="s">&#39;x&#39;</span>, <span onmouseout="hideTip(event, 'fs7', 40)" onmouseover="showTip(event, 'fs7', 40)" class="f">check</span> (<span onmouseout="hideTip(event, 'fs24', 41)" onmouseover="showTip(event, 'fs24', 41)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 42)" onmouseover="showTip(event, 'fs25', 42)" class="f">forall</span> <span onmouseout="hideTip(event, 'fs26', 43)" onmouseover="showTip(event, 'fs26', 43)" class="t">Char</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 44)" onmouseover="showTip(event, 'fs27', 44)" class="f">IsLower</span>) <span class="o">&gt;</span><span class="o">&gt;</span> ((<span class="o">+</span>) <span class="s">&quot;0x&quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs22', 45)" onmouseover="showTip(event, 'fs22', 45)" class="f">int</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 46)" onmouseover="showTip(event, 'fs21', 46)" class="f">box</span>
                 <span class="s">&#39;X&#39;</span>, <span onmouseout="hideTip(event, 'fs7', 47)" onmouseover="showTip(event, 'fs7', 47)" class="f">check</span> (<span onmouseout="hideTip(event, 'fs24', 48)" onmouseover="showTip(event, 'fs24', 48)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 49)" onmouseover="showTip(event, 'fs25', 49)" class="f">forall</span> <span onmouseout="hideTip(event, 'fs26', 50)" onmouseover="showTip(event, 'fs26', 50)" class="t">Char</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 51)" onmouseover="showTip(event, 'fs28', 51)" class="f">IsUpper</span>) <span class="o">&gt;</span><span class="o">&gt;</span> ((<span class="o">+</span>) <span class="s">&quot;0x&quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs22', 52)" onmouseover="showTip(event, 'fs22', 52)" class="f">int</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 53)" onmouseover="showTip(event, 'fs21', 53)" class="f">box</span>
                 <span class="s">&#39;o&#39;</span>, ((<span class="o">+</span>) <span class="s">&quot;0o&quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs22', 54)" onmouseover="showTip(event, 'fs22', 54)" class="f">int</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 55)" onmouseover="showTip(event, 'fs21', 55)" class="f">box</span>
                 <span class="s">&#39;e&#39;</span>, <span onmouseout="hideTip(event, 'fs29', 56)" onmouseover="showTip(event, 'fs29', 56)" class="f">float</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 57)" onmouseover="showTip(event, 'fs21', 57)" class="f">box</span> <span class="c">// no check for correct format for floats</span>
                 <span class="s">&#39;E&#39;</span>, <span onmouseout="hideTip(event, 'fs29', 58)" onmouseover="showTip(event, 'fs29', 58)" class="f">float</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 59)" onmouseover="showTip(event, 'fs21', 59)" class="f">box</span>
                 <span class="s">&#39;f&#39;</span>, <span onmouseout="hideTip(event, 'fs29', 60)" onmouseover="showTip(event, 'fs29', 60)" class="f">float</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 61)" onmouseover="showTip(event, 'fs21', 61)" class="f">box</span>
                 <span class="s">&#39;F&#39;</span>, <span onmouseout="hideTip(event, 'fs29', 62)" onmouseover="showTip(event, 'fs29', 62)" class="f">float</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 63)" onmouseover="showTip(event, 'fs21', 63)" class="f">box</span>
                 <span class="s">&#39;g&#39;</span>, <span onmouseout="hideTip(event, 'fs29', 64)" onmouseover="showTip(event, 'fs29', 64)" class="f">float</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 65)" onmouseover="showTip(event, 'fs21', 65)" class="f">box</span>
                 <span class="s">&#39;G&#39;</span>, <span onmouseout="hideTip(event, 'fs29', 66)" onmouseover="showTip(event, 'fs29', 66)" class="f">float</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 67)" onmouseover="showTip(event, 'fs21', 67)" class="f">box</span>
                 <span class="s">&#39;M&#39;</span>, <span onmouseout="hideTip(event, 'fs11', 68)" onmouseover="showTip(event, 'fs11', 68)" class="f">parseDecimal</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 69)" onmouseover="showTip(event, 'fs21', 69)" class="f">box</span>
                 <span class="s">&#39;c&#39;</span>, <span onmouseout="hideTip(event, 'fs30', 70)" onmouseover="showTip(event, 'fs30', 70)" class="f">char</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs21', 71)" onmouseover="showTip(event, 'fs21', 71)" class="f">box</span>
                ]


<span class="c">// array of all possible formatters, i.e. [|&quot;%b&quot;; &quot;%d&quot;; ...|]</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 72)" onmouseover="showTip(event, 'fs31', 72)" class="i">separators</span> <span class="o">=</span>
   <span onmouseout="hideTip(event, 'fs17', 73)" onmouseover="showTip(event, 'fs17', 73)" class="i">parsers</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 74)" onmouseover="showTip(event, 'fs32', 74)" class="i">Keys</span>
   <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs33', 75)" onmouseover="showTip(event, 'fs33', 75)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 76)" onmouseover="showTip(event, 'fs34', 76)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs35', 77)" onmouseover="showTip(event, 'fs35', 77)" class="i">c</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs36', 78)" onmouseover="showTip(event, 'fs36', 78)" class="f">sprintf</span> <span class="s">&quot;%%</span><span class="pf">%c</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs35', 79)" onmouseover="showTip(event, 'fs35', 79)" class="i">c</span>)
   <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs33', 80)" onmouseover="showTip(event, 'fs33', 80)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 81)" onmouseover="showTip(event, 'fs37', 81)" class="f">toArray</span>


<span class="c">// Creates a list of formatter characters from a format string,</span>
<span class="c">// for example &quot;(%s,%d)&quot; -&gt; [&#39;s&#39;, &#39;d&#39;]</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs38', 82)" onmouseover="showTip(event, 'fs38', 82)" class="f">getFormatters</span> <span onmouseout="hideTip(event, 'fs39', 83)" onmouseover="showTip(event, 'fs39', 83)" class="i">xs</span> <span class="o">=</span>
   <span class="k">match</span> <span onmouseout="hideTip(event, 'fs39', 84)" onmouseover="showTip(event, 'fs39', 84)" class="i">xs</span> <span class="k">with</span>
   | <span class="s">&#39;%&#39;</span><span class="o">::</span><span class="s">&#39;%&#39;</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs40', 85)" onmouseover="showTip(event, 'fs40', 85)" class="i">xr</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs38', 86)" onmouseover="showTip(event, 'fs38', 86)" class="f">getFormatters</span> <span onmouseout="hideTip(event, 'fs40', 87)" onmouseover="showTip(event, 'fs40', 87)" class="i">xr</span>
   | <span class="s">&#39;%&#39;</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs41', 88)" onmouseover="showTip(event, 'fs41', 88)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs40', 89)" onmouseover="showTip(event, 'fs40', 89)" class="i">xr</span> <span class="k">-&gt;</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs17', 90)" onmouseover="showTip(event, 'fs17', 90)" class="i">parsers</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 91)" onmouseover="showTip(event, 'fs42', 91)" class="f">ContainsKey</span> <span onmouseout="hideTip(event, 'fs41', 92)" onmouseover="showTip(event, 'fs41', 92)" class="i">x</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs41', 93)" onmouseover="showTip(event, 'fs41', 93)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs38', 94)" onmouseover="showTip(event, 'fs38', 94)" class="f">getFormatters</span> <span onmouseout="hideTip(event, 'fs40', 95)" onmouseover="showTip(event, 'fs40', 95)" class="i">xr</span>
                   <span class="k">else</span> <span onmouseout="hideTip(event, 'fs10', 96)" onmouseover="showTip(event, 'fs10', 96)" class="f">failwithf</span> <span class="s">&quot;Unknown formatter %%</span><span class="pf">%c</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs41', 97)" onmouseover="showTip(event, 'fs41', 97)" class="i">x</span>
   | <span onmouseout="hideTip(event, 'fs41', 98)" onmouseover="showTip(event, 'fs41', 98)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs40', 99)" onmouseover="showTip(event, 'fs40', 99)" class="i">xr</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs38', 100)" onmouseover="showTip(event, 'fs38', 100)" class="f">getFormatters</span> <span onmouseout="hideTip(event, 'fs40', 101)" onmouseover="showTip(event, 'fs40', 101)" class="i">xr</span>
   | [] <span class="k">-&gt;</span> []


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs43', 102)" onmouseover="showTip(event, 'fs43', 102)" class="f">sscanf</span> (<span onmouseout="hideTip(event, 'fs44', 103)" onmouseover="showTip(event, 'fs44', 103)" class="i">pf</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs45', 104)" onmouseover="showTip(event, 'fs45', 104)" class="t">PrintfFormat</span><span class="o">&lt;</span>_,_,_,_,<span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span>) <span onmouseout="hideTip(event, 'fs46', 105)" onmouseover="showTip(event, 'fs46', 105)" class="i">s</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">t</span> <span class="o">=</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs47', 106)" onmouseover="showTip(event, 'fs47', 106)" class="i">formatStr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs44', 107)" onmouseover="showTip(event, 'fs44', 107)" class="i">pf</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 108)" onmouseover="showTip(event, 'fs48', 108)" class="i">Value</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 109)" onmouseover="showTip(event, 'fs49', 109)" class="f">Replace</span>(<span class="s">&quot;%%&quot;</span>, <span class="s">&quot;%&quot;</span>)
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 110)" onmouseover="showTip(event, 'fs50', 110)" class="i">constants</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs47', 111)" onmouseover="showTip(event, 'fs47', 111)" class="i">formatStr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 112)" onmouseover="showTip(event, 'fs51', 112)" class="f">Split</span>(<span onmouseout="hideTip(event, 'fs31', 113)" onmouseover="showTip(event, 'fs31', 113)" class="i">separators</span>, <span onmouseout="hideTip(event, 'fs52', 114)" onmouseover="showTip(event, 'fs52', 114)" class="t">StringSplitOptions</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 115)" onmouseover="showTip(event, 'fs53', 115)" class="i">None</span>)
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 116)" onmouseover="showTip(event, 'fs54', 116)" class="i">regex</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 117)" onmouseover="showTip(event, 'fs55', 117)" class="t">Regex</span>(<span class="s">&quot;^&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs24', 118)" onmouseover="showTip(event, 'fs24', 118)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 119)" onmouseover="showTip(event, 'fs56', 119)" class="f">Join</span>(<span class="s">&quot;(.*?)&quot;</span>, <span onmouseout="hideTip(event, 'fs50', 120)" onmouseover="showTip(event, 'fs50', 120)" class="i">constants</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 121)" onmouseover="showTip(event, 'fs57', 121)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 122)" onmouseover="showTip(event, 'fs58', 122)" class="f">map</span> <span onmouseout="hideTip(event, 'fs55', 123)" onmouseover="showTip(event, 'fs55', 123)" class="t">Regex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 124)" onmouseover="showTip(event, 'fs59', 124)" class="f">Escape</span>) <span class="o">+</span> <span class="s">&quot;$&quot;</span>)
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 125)" onmouseover="showTip(event, 'fs60', 125)" class="i">formatters</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs44', 126)" onmouseover="showTip(event, 'fs44', 126)" class="i">pf</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 127)" onmouseover="showTip(event, 'fs48', 127)" class="i">Value</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 128)" onmouseover="showTip(event, 'fs61', 128)" class="f">ToCharArray</span>() <span class="c">// need original string here (possibly with &quot;%%&quot;s)</span>
                   <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs57', 129)" onmouseover="showTip(event, 'fs57', 129)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 130)" onmouseover="showTip(event, 'fs62', 130)" class="f">toList</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs38', 131)" onmouseover="showTip(event, 'fs38', 131)" class="f">getFormatters</span> 
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 132)" onmouseover="showTip(event, 'fs63', 132)" class="i">groups</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs54', 133)" onmouseover="showTip(event, 'fs54', 133)" class="i">regex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 134)" onmouseover="showTip(event, 'fs64', 134)" class="f">Match</span>(<span onmouseout="hideTip(event, 'fs46', 135)" onmouseover="showTip(event, 'fs46', 135)" class="i">s</span>)<span class="o">.</span><span class="i">Groups</span> 
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs33', 136)" onmouseover="showTip(event, 'fs33', 136)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 137)" onmouseover="showTip(event, 'fs65', 137)" class="f">cast</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs66', 138)" onmouseover="showTip(event, 'fs66', 138)" class="t">Group</span><span class="o">&gt;</span> 
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs33', 139)" onmouseover="showTip(event, 'fs33', 139)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs67', 140)" onmouseover="showTip(event, 'fs67', 140)" class="f">skip</span> <span class="n">1</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs68', 141)" onmouseover="showTip(event, 'fs68', 141)" class="i">matches</span> <span class="o">=</span>
    (<span onmouseout="hideTip(event, 'fs63', 142)" onmouseover="showTip(event, 'fs63', 142)" class="i">groups</span>, <span onmouseout="hideTip(event, 'fs60', 143)" onmouseover="showTip(event, 'fs60', 143)" class="i">formatters</span>)
    <span class="o">||&gt;</span> <span onmouseout="hideTip(event, 'fs33', 144)" onmouseover="showTip(event, 'fs33', 144)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 145)" onmouseover="showTip(event, 'fs69', 145)" class="f">map2</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs70', 146)" onmouseover="showTip(event, 'fs70', 146)" class="i">g</span> <span onmouseout="hideTip(event, 'fs71', 147)" onmouseover="showTip(event, 'fs71', 147)" class="i">f</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs70', 148)" onmouseover="showTip(event, 'fs70', 148)" class="i">g</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 149)" onmouseover="showTip(event, 'fs72', 149)" class="i">Value</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs17', 150)" onmouseover="showTip(event, 'fs17', 150)" class="i">parsers</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs71', 151)" onmouseover="showTip(event, 'fs71', 151)" class="i">f</span>])
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs33', 152)" onmouseover="showTip(event, 'fs33', 152)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 153)" onmouseover="showTip(event, 'fs37', 153)" class="f">toArray</span>
  <span onmouseout="hideTip(event, 'fs73', 154)" onmouseover="showTip(event, 'fs73', 154)" class="t">FSharpValue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 155)" onmouseover="showTip(event, 'fs74', 155)" class="f">MakeTuple</span>(<span onmouseout="hideTip(event, 'fs68', 156)" onmouseover="showTip(event, 'fs68', 156)" class="i">matches</span>, <span onmouseout="hideTip(event, 'fs75', 157)" onmouseover="showTip(event, 'fs75', 157)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span>) <span class="o">:?&gt;</span> <span class="o">&#39;</span><span class="i">t</span>


<span class="c">// some basic testing</span>
<span class="k">let</span> (<span onmouseout="hideTip(event, 'fs76', 158)" onmouseover="showTip(event, 'fs76', 158)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs77', 159)" onmouseover="showTip(event, 'fs77', 159)" class="i">b</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs43', 160)" onmouseover="showTip(event, 'fs43', 160)" class="f">sscanf</span> <span class="s">&quot;(%%</span><span class="pf">%s</span><span class="s">,</span><span class="pf">%M</span><span class="s">)&quot;</span> <span class="s">&quot;(%hello, 4.53)&quot;</span>
<span class="k">let</span> (<span onmouseout="hideTip(event, 'fs78', 161)" onmouseover="showTip(event, 'fs78', 161)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs79', 162)" onmouseover="showTip(event, 'fs79', 162)" class="i">y</span>,<span onmouseout="hideTip(event, 'fs80', 163)" onmouseover="showTip(event, 'fs80', 163)" class="i">z</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs43', 164)" onmouseover="showTip(event, 'fs43', 164)" class="f">sscanf</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">-</span><span class="pf">%s</span><span class="s">-</span><span class="pf">%s</span><span class="s">&quot;</span> <span class="s">&quot;test-this-string&quot;</span>
<span class="k">let</span> (<span onmouseout="hideTip(event, 'fs81', 165)" onmouseover="showTip(event, 'fs81', 165)" class="i">c</span>,<span onmouseout="hideTip(event, 'fs82', 166)" onmouseover="showTip(event, 'fs82', 166)" class="i">d</span>,<span onmouseout="hideTip(event, 'fs83', 167)" onmouseover="showTip(event, 'fs83', 167)" class="i">e</span>,<span onmouseout="hideTip(event, 'fs84', 168)" onmouseover="showTip(event, 'fs84', 168)" class="i">f</span>,<span onmouseout="hideTip(event, 'fs85', 169)" onmouseover="showTip(event, 'fs85', 169)" class="i">g</span>,<span onmouseout="hideTip(event, 'fs86', 170)" onmouseover="showTip(event, 'fs86', 170)" class="i">h</span>,<span onmouseout="hideTip(event, 'fs87', 171)" onmouseover="showTip(event, 'fs87', 171)" class="i">i</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs43', 172)" onmouseover="showTip(event, 'fs43', 172)" class="f">sscanf</span> <span class="s">&quot;</span><span class="pf">%b</span><span class="s">-</span><span class="pf">%d</span><span class="s">-</span><span class="pf">%i</span><span class="s">,</span><span class="pf">%u</span><span class="s">,</span><span class="pf">%x</span><span class="s">,</span><span class="pf">%X</span><span class="s">,</span><span class="pf">%o</span><span class="s">&quot;</span> <span class="s">&quot;false-42--31,13,ff,FF,42&quot;</span>
<span class="k">let</span> (<span onmouseout="hideTip(event, 'fs88', 173)" onmouseover="showTip(event, 'fs88', 173)" class="i">j</span>,<span onmouseout="hideTip(event, 'fs89', 174)" onmouseover="showTip(event, 'fs89', 174)" class="i">k</span>,<span onmouseout="hideTip(event, 'fs90', 175)" onmouseover="showTip(event, 'fs90', 175)" class="i">l</span>,<span onmouseout="hideTip(event, 'fs91', 176)" onmouseover="showTip(event, 'fs91', 176)" class="i">m</span>,<span onmouseout="hideTip(event, 'fs92', 177)" onmouseover="showTip(event, 'fs92', 177)" class="i">n</span>,<span onmouseout="hideTip(event, 'fs93', 178)" onmouseover="showTip(event, 'fs93', 178)" class="i">o</span>,<span onmouseout="hideTip(event, 'fs94', 179)" onmouseover="showTip(event, 'fs94', 179)" class="i">p</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs43', 180)" onmouseover="showTip(event, 'fs43', 180)" class="f">sscanf</span> <span class="s">&quot;</span><span class="pf">%f</span><span class="s"> </span><span class="pf">%F</span><span class="s"> </span><span class="pf">%g</span><span class="s"> </span><span class="pf">%G</span><span class="s"> </span><span class="pf">%e</span><span class="s"> </span><span class="pf">%E</span><span class="s"> </span><span class="pf">%c</span><span class="s">&quot;</span> <span class="s">&quot;1 2.1 3.4 .3 43.2e32 0 f&quot;</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Text</div>
<div class="tip" id="fs3">namespace System.Text.RegularExpressions</div>
<div class="tip" id="fs4">namespace Microsoft</div>
<div class="tip" id="fs5">namespace Microsoft.FSharp</div>
<div class="tip" id="fs6">namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs7">val check : f:(string -&gt; bool) -&gt; x:string -&gt; string<br /><br />Full name: Script.check</div>
<div class="tip" id="fs8">val f : (string -&gt; bool)</div>
<div class="tip" id="fs9">val x : string</div>
<div class="tip" id="fs10">val failwithf : format:Printf.StringFormat&lt;&#39;T,&#39;Result&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.failwithf</div>
<div class="tip" id="fs11">val parseDecimal : x:string -&gt; decimal<br /><br />Full name: Script.parseDecimal</div>
<div class="tip" id="fs12">Multiple items<br />type Decimal =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : value:int -&gt; decimal + 7 overloads<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : value:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 3 overloads<br />&#160;&#160;&#160;&#160;static val Zero : decimal<br />&#160;&#160;&#160;&#160;static val One : decimal<br />&#160;&#160;&#160;&#160;static val MinusOne : decimal<br />&#160;&#160;&#160;&#160;static val MaxValue : decimal<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Decimal<br /><br />--------------------<br />Decimal()<br />Decimal(value: int) : unit<br />Decimal(value: uint32) : unit<br />Decimal(value: int64) : unit<br />Decimal(value: uint64) : unit<br />Decimal(value: float32) : unit<br />Decimal(value: float) : unit<br />Decimal(bits: int []) : unit<br />Decimal(lo: int, mid: int, hi: int, isNegative: bool, scale: byte) : unit</div>
<div class="tip" id="fs13">Decimal.Parse(s: string) : decimal<br />Decimal.Parse(s: string, provider: IFormatProvider) : decimal<br />Decimal.Parse(s: string, style: Globalization.NumberStyles) : decimal<br />Decimal.Parse(s: string, style: Globalization.NumberStyles, provider: IFormatProvider) : decimal</div>
<div class="tip" id="fs14">namespace System.Globalization</div>
<div class="tip" id="fs15">Multiple items<br />type CultureInfo =<br />&#160;&#160;new : name:string -&gt; CultureInfo + 3 overloads<br />&#160;&#160;member Calendar : Calendar<br />&#160;&#160;member ClearCachedData : unit -&gt; unit<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareInfo : CompareInfo<br />&#160;&#160;member CultureTypes : CultureTypes<br />&#160;&#160;member DateTimeFormat : DateTimeFormatInfo with get, set<br />&#160;&#160;member DisplayName : string<br />&#160;&#160;member EnglishName : string<br />&#160;&#160;member Equals : value:obj -&gt; bool<br />&#160;&#160;...<br /><br />Full name: System.Globalization.CultureInfo<br /><br />--------------------<br />Globalization.CultureInfo(name: string) : unit<br />Globalization.CultureInfo(culture: int) : unit<br />Globalization.CultureInfo(name: string, useUserOverride: bool) : unit<br />Globalization.CultureInfo(culture: int, useUserOverride: bool) : unit</div>
<div class="tip" id="fs16">property Globalization.CultureInfo.InvariantCulture: Globalization.CultureInfo</div>
<div class="tip" id="fs17">val parsers : Collections.Generic.IDictionary&lt;char,(string -&gt; obj)&gt;<br /><br />Full name: Script.parsers</div>
<div class="tip" id="fs18">val dict : keyValuePairs:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Collections.Generic.IDictionary&lt;&#39;Key,&#39;Value&gt; (requires equality)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.dict</div>
<div class="tip" id="fs19">type Boolean =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : obj:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 1 overload<br />&#160;&#160;&#160;&#160;static val TrueString : string<br />&#160;&#160;&#160;&#160;static val FalseString : string<br />&#160;&#160;&#160;&#160;static member Parse : value:string -&gt; bool<br />&#160;&#160;&#160;&#160;static member TryParse : value:string * result:bool -&gt; bool<br />&#160;&#160;end<br /><br />Full name: System.Boolean</div>
<div class="tip" id="fs20">Boolean.Parse(value: string) : bool</div>
<div class="tip" id="fs21">val box : value:&#39;T -&gt; obj<br /><br />Full name: Microsoft.FSharp.Core.Operators.box</div>
<div class="tip" id="fs22">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs23">Multiple items<br />val uint32 : value:&#39;T -&gt; uint32 (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.uint32<br /><br />--------------------<br />type uint32 = UInt32<br /><br />Full name: Microsoft.FSharp.Core.uint32</div>
<div class="tip" id="fs24">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Encoding) : unit</div>
<div class="tip" id="fs25">val forall : predicate:(char -&gt; bool) -&gt; str:string -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.String.forall</div>
<div class="tip" id="fs26">type Char =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 1 overload<br />&#160;&#160;&#160;&#160;static val MaxValue : char<br />&#160;&#160;&#160;&#160;static val MinValue : char<br />&#160;&#160;&#160;&#160;static member ConvertFromUtf32 : utf32:int -&gt; string<br />&#160;&#160;&#160;&#160;static member ConvertToUtf32 : highSurrogate:char * lowSurrogate:char -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;static member GetNumericValue : c:char -&gt; float + 1 overload<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Char</div>
<div class="tip" id="fs27">Char.IsLower(c: char) : bool<br />Char.IsLower(s: string, index: int) : bool</div>
<div class="tip" id="fs28">Char.IsUpper(c: char) : bool<br />Char.IsUpper(s: string, index: int) : bool</div>
<div class="tip" id="fs29">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs30">Multiple items<br />val char : value:&#39;T -&gt; char (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.char<br /><br />--------------------<br />type char = Char<br /><br />Full name: Microsoft.FSharp.Core.char</div>
<div class="tip" id="fs31">val separators : string []<br /><br />Full name: Script.separators</div>
<div class="tip" id="fs32">property Collections.Generic.IDictionary.Keys: Collections.Generic.ICollection&lt;char&gt;</div>
<div class="tip" id="fs33">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs34">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs35">val c : char</div>
<div class="tip" id="fs36">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs37">val toArray : source:seq&lt;&#39;T&gt; -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Seq.toArray</div>
<div class="tip" id="fs38">val getFormatters : xs:char list -&gt; char list<br /><br />Full name: Script.getFormatters</div>
<div class="tip" id="fs39">val xs : char list</div>
<div class="tip" id="fs40">val xr : char list</div>
<div class="tip" id="fs41">val x : char</div>
<div class="tip" id="fs42">Collections.Generic.IDictionary.ContainsKey(key: char) : bool</div>
<div class="tip" id="fs43">val sscanf : pf:PrintfFormat&lt;&#39;a,&#39;b,&#39;c,&#39;d,&#39;t&gt; -&gt; s:string -&gt; &#39;t<br /><br />Full name: Script.sscanf</div>
<div class="tip" id="fs44">val pf : PrintfFormat&lt;&#39;a,&#39;b,&#39;c,&#39;d,&#39;t&gt;</div>
<div class="tip" id="fs45">Multiple items<br />type PrintfFormat&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result&gt; =<br />&#160;&#160;new : value:string -&gt; PrintfFormat&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result&gt;<br />&#160;&#160;member Value : string<br /><br />Full name: Microsoft.FSharp.Core.PrintfFormat&lt;_,_,_,_&gt;<br /><br />--------------------<br />type PrintfFormat&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result,&#39;Tuple&gt; =<br />&#160;&#160;inherit PrintfFormat&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result&gt;<br />&#160;&#160;new : value:string -&gt; PrintfFormat&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result,&#39;Tuple&gt;<br /><br />Full name: Microsoft.FSharp.Core.PrintfFormat&lt;_,_,_,_,_&gt;<br /><br />--------------------<br />new : value:string -&gt; PrintfFormat&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result&gt;<br /><br />--------------------<br />new : value:string -&gt; PrintfFormat&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result,&#39;Tuple&gt;</div>
<div class="tip" id="fs46">val s : string</div>
<div class="tip" id="fs47">val formatStr : string</div>
<div class="tip" id="fs48">property PrintfFormat.Value: string</div>
<div class="tip" id="fs49">String.Replace(oldValue: string, newValue: string) : string<br />String.Replace(oldChar: char, newChar: char) : string</div>
<div class="tip" id="fs50">val constants : string []</div>
<div class="tip" id="fs51">String.Split([&lt;ParamArray&gt;] separator: char []) : string []<br />String.Split(separator: string [], options: StringSplitOptions) : string []<br />String.Split(separator: char [], options: StringSplitOptions) : string []<br />String.Split(separator: char [], count: int) : string []<br />String.Split(separator: string [], count: int, options: StringSplitOptions) : string []<br />String.Split(separator: char [], count: int, options: StringSplitOptions) : string []</div>
<div class="tip" id="fs52">type StringSplitOptions =<br />&#160;&#160;| None = 0<br />&#160;&#160;| RemoveEmptyEntries = 1<br /><br />Full name: System.StringSplitOptions</div>
<div class="tip" id="fs53">field StringSplitOptions.None = 0</div>
<div class="tip" id="fs54">val regex : Regex</div>
<div class="tip" id="fs55">Multiple items<br />type Regex =<br />&#160;&#160;new : pattern:string -&gt; Regex + 1 overload<br />&#160;&#160;member GetGroupNames : unit -&gt; string[]<br />&#160;&#160;member GetGroupNumbers : unit -&gt; int[]<br />&#160;&#160;member GroupNameFromNumber : i:int -&gt; string<br />&#160;&#160;member GroupNumberFromName : name:string -&gt; int<br />&#160;&#160;member IsMatch : input:string -&gt; bool + 1 overload<br />&#160;&#160;member Match : input:string -&gt; Match + 2 overloads<br />&#160;&#160;member Matches : input:string -&gt; MatchCollection + 1 overload<br />&#160;&#160;member Options : RegexOptions<br />&#160;&#160;member Replace : input:string * replacement:string -&gt; string + 5 overloads<br />&#160;&#160;...<br /><br />Full name: System.Text.RegularExpressions.Regex<br /><br />--------------------<br />Regex(pattern: string) : unit<br />Regex(pattern: string, options: RegexOptions) : unit</div>
<div class="tip" id="fs56">String.Join(separator: string, values: Collections.Generic.IEnumerable&lt;string&gt;) : string<br />String.Join&lt;&#39;T&gt;(separator: string, values: Collections.Generic.IEnumerable&lt;&#39;T&gt;) : string<br />String.Join(separator: string, [&lt;ParamArray&gt;] values: obj []) : string<br />String.Join(separator: string, [&lt;ParamArray&gt;] value: string []) : string<br />String.Join(separator: string, value: string [], startIndex: int, count: int) : string</div>
<div class="tip" id="fs57">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs58">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.map</div>
<div class="tip" id="fs59">Regex.Escape(str: string) : string</div>
<div class="tip" id="fs60">val formatters : char list</div>
<div class="tip" id="fs61">String.ToCharArray() : char []<br />String.ToCharArray(startIndex: int, length: int) : char []</div>
<div class="tip" id="fs62">val toList : array:&#39;T [] -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.Array.toList</div>
<div class="tip" id="fs63">val groups : seq&lt;Group&gt;</div>
<div class="tip" id="fs64">Regex.Match(input: string) : Match<br />Regex.Match(input: string, startat: int) : Match<br />Regex.Match(input: string, beginning: int, length: int) : Match</div>
<div class="tip" id="fs65">val cast : source:Collections.IEnumerable -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.cast</div>
<div class="tip" id="fs66">type Group =<br />&#160;&#160;inherit Capture<br />&#160;&#160;member Captures : CaptureCollection<br />&#160;&#160;member Success : bool<br />&#160;&#160;static member Synchronized : inner:Group -&gt; Group<br /><br />Full name: System.Text.RegularExpressions.Group</div>
<div class="tip" id="fs67">val skip : count:int -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.skip</div>
<div class="tip" id="fs68">val matches : obj []</div>
<div class="tip" id="fs69">val map2 : mapping:(&#39;T1 -&gt; &#39;T2 -&gt; &#39;U) -&gt; source1:seq&lt;&#39;T1&gt; -&gt; source2:seq&lt;&#39;T2&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map2</div>
<div class="tip" id="fs70">val g : Group</div>
<div class="tip" id="fs71">val f : char</div>
<div class="tip" id="fs72">property Capture.Value: string</div>
<div class="tip" id="fs73">type FSharpValue =<br />&#160;&#160;static member GetExceptionFields : exn:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetRecordField : record:obj * info:PropertyInfo -&gt; obj<br />&#160;&#160;static member GetRecordFields : record:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetTupleField : tuple:obj * index:int -&gt; obj<br />&#160;&#160;static member GetTupleFields : tuple:obj -&gt; obj []<br />&#160;&#160;static member GetUnionFields : value:obj * unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo * obj []<br />&#160;&#160;static member MakeFunction : functionType:Type * implementation:(obj -&gt; obj) -&gt; obj<br />&#160;&#160;static member MakeRecord : recordType:Type * values:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;static member MakeTuple : tupleElements:obj [] * tupleType:Type -&gt; obj<br />&#160;&#160;static member MakeUnion : unionCase:UnionCaseInfo * args:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpValue</div>
<div class="tip" id="fs74">static member FSharpValue.MakeTuple : tupleElements:obj [] * tupleType:Type -&gt; obj</div>
<div class="tip" id="fs75">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs76">val a : string<br /><br />Full name: Script.a</div>
<div class="tip" id="fs77">val b : decimal<br /><br />Full name: Script.b</div>
<div class="tip" id="fs78">val x : string<br /><br />Full name: Script.x</div>
<div class="tip" id="fs79">val y : string<br /><br />Full name: Script.y</div>
<div class="tip" id="fs80">val z : string<br /><br />Full name: Script.z</div>
<div class="tip" id="fs81">val c : bool<br /><br />Full name: Script.c</div>
<div class="tip" id="fs82">val d : int<br /><br />Full name: Script.d</div>
<div class="tip" id="fs83">val e : int<br /><br />Full name: Script.e</div>
<div class="tip" id="fs84">val f : int<br /><br />Full name: Script.f</div>
<div class="tip" id="fs85">val g : int<br /><br />Full name: Script.g</div>
<div class="tip" id="fs86">val h : int<br /><br />Full name: Script.h</div>
<div class="tip" id="fs87">val i : int<br /><br />Full name: Script.i</div>
<div class="tip" id="fs88">val j : float<br /><br />Full name: Script.j</div>
<div class="tip" id="fs89">val k : float<br /><br />Full name: Script.k</div>
<div class="tip" id="fs90">val l : float<br /><br />Full name: Script.l</div>
<div class="tip" id="fs91">val m : float<br /><br />Full name: Script.m</div>
<div class="tip" id="fs92">val n : float<br /><br />Full name: Script.n</div>
<div class="tip" id="fs93">val o : float<br /><br />Full name: Script.o</div>
<div class="tip" id="fs94">val p : char<br /><br />Full name: Script.p</div>

