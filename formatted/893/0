<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp">[&lt;<span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">AutoOpen</span>&gt;]
<span class="k">module</span> <span class="t">EnToSeq</span> <span class="o">=</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">QueryBuilder</span> <span class="k">with</span>
        <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">qb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="f">Source</span>(<span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">s</span>) <span class="o">=</span> 
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="i">e</span> <span class="o">=</span> (<span class="o">^</span><span class="i">t</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">GetEnumerator</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">e</span>) <span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="i">s</span>)
            <span onmouseout="hideTip(event, 'fs2', 10)" onmouseover="showTip(event, 'fs2', 10)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="t">QuerySource</span><span class="o">&lt;</span>_,<span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="t">IEnumerable</span><span class="o">&gt;</span>(
                <span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="i">seq</span> { <span class="k">while</span> (<span class="o">^</span><span class="i">e</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">MoveNext</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 16)" onmouseover="showTip(event, 'fs8', 16)" class="t">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="t">bool</span>) <span onmouseout="hideTip(event, 'fs7', 18)" onmouseover="showTip(event, 'fs7', 18)" class="i">e</span>) <span class="k">do</span>
                        <span class="k">yield</span> (<span class="o">^</span><span class="i">e</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">Current</span> <span class="o">:</span> <span class="o">^</span><span class="i">v</span>) <span onmouseout="hideTip(event, 'fs7', 19)" onmouseover="showTip(event, 'fs7', 19)" class="i">e</span>) })

[&lt;<span onmouseout="hideTip(event, 'fs1', 20)" onmouseover="showTip(event, 'fs1', 20)" class="t">AutoOpen</span>&gt;]
<span class="k">module</span> <span class="t">EnToSeqWithItem</span> <span class="o">=</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 21)" onmouseover="showTip(event, 'fs2', 21)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 22)" onmouseover="showTip(event, 'fs3', 22)" class="t">QueryBuilder</span> <span class="k">with</span>
        <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs4', 23)" onmouseover="showTip(event, 'fs4', 23)" class="i">qb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 24)" onmouseover="showTip(event, 'fs15', 24)" class="f">Source</span>(<span onmouseout="hideTip(event, 'fs16', 25)" onmouseover="showTip(event, 'fs16', 25)" class="i">s</span>) <span class="o">=</span> 
            <span class="c">// constrain ^t to have an Item indexed property (which we don&#39;t actually invoke)</span>
            <span class="k">let</span> _ <span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs17', 26)" onmouseover="showTip(event, 'fs17', 26)" class="i">x</span> <span class="k">-&gt;</span> (<span class="o">^</span><span class="i">t</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">Item</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs18', 27)" onmouseover="showTip(event, 'fs18', 27)" class="t">int</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">v</span> <span class="k">with</span> <span class="i">get</span>) (<span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="i">x</span>, <span class="n">0</span>))
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 29)" onmouseover="showTip(event, 'fs7', 29)" class="i">e</span> <span class="o">=</span> (<span class="o">^</span><span class="i">t</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">GetEnumerator</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 30)" onmouseover="showTip(event, 'fs8', 30)" class="t">unit</span> <span class="k">-&gt;</span> <span class="o">^</span><span class="i">e</span>) <span onmouseout="hideTip(event, 'fs16', 31)" onmouseover="showTip(event, 'fs16', 31)" class="i">s</span>)
            <span onmouseout="hideTip(event, 'fs2', 32)" onmouseover="showTip(event, 'fs2', 32)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 33)" onmouseover="showTip(event, 'fs9', 33)" class="t">QuerySource</span><span class="o">&lt;</span>_,<span onmouseout="hideTip(event, 'fs10', 34)" onmouseover="showTip(event, 'fs10', 34)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 35)" onmouseover="showTip(event, 'fs11', 35)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 36)" onmouseover="showTip(event, 'fs12', 36)" class="t">IEnumerable</span><span class="o">&gt;</span>(
                <span onmouseout="hideTip(event, 'fs13', 37)" onmouseover="showTip(event, 'fs13', 37)" class="i">seq</span> { <span class="k">while</span> (<span class="o">^</span><span class="i">e</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">MoveNext</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 38)" onmouseover="showTip(event, 'fs8', 38)" class="t">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 39)" onmouseover="showTip(event, 'fs14', 39)" class="t">bool</span>) <span onmouseout="hideTip(event, 'fs7', 40)" onmouseover="showTip(event, 'fs7', 40)" class="i">e</span>) <span class="k">do</span>
                        <span class="k">yield</span> (<span class="o">^</span><span class="i">e</span> <span class="o">:</span> (<span class="k">member</span> <span class="i">Current</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="t">obj</span>) <span onmouseout="hideTip(event, 'fs7', 42)" onmouseover="showTip(event, 'fs7', 42)" class="i">e</span>) <span class="o">:?&gt;</span> <span class="o">^</span><span class="i">v</span> })

<span class="c">// demonstration usage</span>
<span onmouseout="hideTip(event, 'fs20', 43)" onmouseover="showTip(event, 'fs20', 43)" class="i">query</span> { <span class="k">for</span> <span onmouseout="hideTip(event, 'fs21', 44)" onmouseover="showTip(event, 'fs21', 44)" class="i">m</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs10', 45)" onmouseover="showTip(event, 'fs10', 45)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 46)" onmouseover="showTip(event, 'fs22', 46)" class="i">Text</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 47)" onmouseover="showTip(event, 'fs23', 47)" class="i">RegularExpressions</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 48)" onmouseover="showTip(event, 'fs24', 48)" class="t">Regex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 49)" onmouseover="showTip(event, 'fs25', 49)" class="f">Matches</span>(<span class="s">&quot;test&quot;</span>, <span class="s">&quot;t|e&quot;</span>) <span class="k">do</span>
        <span onmouseout="hideTip(event, 'fs26', 50)" onmouseover="showTip(event, 'fs26', 50)" class="k">where</span> <span onmouseout="hideTip(event, 'fs21', 51)" onmouseover="showTip(event, 'fs21', 51)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 52)" onmouseover="showTip(event, 'fs27', 52)" class="i">Success</span>
        <span onmouseout="hideTip(event, 'fs28', 53)" onmouseover="showTip(event, 'fs28', 53)" class="k">select</span> <span onmouseout="hideTip(event, 'fs21', 54)" onmouseover="showTip(event, 'fs21', 54)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 55)" onmouseover="showTip(event, 'fs29', 55)" class="i">Value</span>
        <span onmouseout="hideTip(event, 'fs30', 56)" onmouseover="showTip(event, 'fs30', 56)" class="k">distinct</span> }
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />type AutoOpenAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AutoOpenAttribute<br />&#160;&#160;new : path:string -&gt; AutoOpenAttribute<br />&#160;&#160;member Path : string<br /><br />Full name: Microsoft.FSharp.Core.AutoOpenAttribute<br /><br />--------------------<br />new : unit -&gt; AutoOpenAttribute<br />new : path:string -&gt; AutoOpenAttribute</div>
<div class="tip" id="fs2">namespace Microsoft.FSharp.Linq</div>
<div class="tip" id="fs3">Multiple items<br />type QueryBuilder =<br />&#160;&#160;new : unit -&gt; QueryBuilder<br />&#160;&#160;member All : source:QuerySource&lt;&#39;T,&#39;Q&gt; * predicate:(&#39;T -&gt; bool) -&gt; bool<br />&#160;&#160;member AverageBy : source:QuerySource&lt;&#39;T,&#39;Q&gt; * projection:(&#39;T -&gt; &#39;Value) -&gt; &#39;Value (requires member ( + ) and member DivideByInt and member get_Zero)<br />&#160;&#160;member AverageByNullable : source:QuerySource&lt;&#39;T,&#39;Q&gt; * projection:(&#39;T -&gt; Nullable&lt;&#39;Value&gt;) -&gt; Nullable&lt;&#39;Value&gt; (requires member ( + ) and member DivideByInt and member get_Zero and default constructor and value type and &#39;Value :&gt; ValueType)<br />&#160;&#160;member Contains : source:QuerySource&lt;&#39;T,&#39;Q&gt; * key:&#39;T -&gt; bool<br />&#160;&#160;member Count : source:QuerySource&lt;&#39;T,&#39;Q&gt; -&gt; int<br />&#160;&#160;member Distinct : source:QuerySource&lt;&#39;T,&#39;Q&gt; -&gt; QuerySource&lt;&#39;T,&#39;Q&gt; (requires equality)<br />&#160;&#160;member ExactlyOne : source:QuerySource&lt;&#39;T,&#39;Q&gt; -&gt; &#39;T<br />&#160;&#160;member ExactlyOneOrDefault : source:QuerySource&lt;&#39;T,&#39;Q&gt; -&gt; &#39;T<br />&#160;&#160;member Exists : source:QuerySource&lt;&#39;T,&#39;Q&gt; * predicate:(&#39;T -&gt; bool) -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Linq.QueryBuilder<br /><br />--------------------<br />new : unit -&gt; Linq.QueryBuilder</div>
<div class="tip" id="fs4">val qb : Linq.QueryBuilder</div>
<div class="tip" id="fs5">member Linq.QueryBuilder.Source : s:&#39;t -&gt; Linq.QuerySource&lt;&#39;v,System.Collections.IEnumerable&gt; (requires member GetEnumerator and member MoveNext and member get_Current)<br /><br />Full name: Script.EnToSeq.Source</div>
<div class="tip" id="fs6">val s : &#39;t (requires member GetEnumerator and member MoveNext and member get_Current)</div>
<div class="tip" id="fs7">val e : &#39;e (requires member MoveNext and member get_Current)</div>
<div class="tip" id="fs8">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs9">Multiple items<br />type QuerySource&lt;&#39;T,&#39;Q&gt; =<br />&#160;&#160;new : seq&lt;&#39;T&gt; -&gt; QuerySource&lt;&#39;T,&#39;Q&gt;<br />&#160;&#160;member Source : seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Linq.QuerySource&lt;_,_&gt;<br /><br />--------------------<br />new : seq&lt;&#39;T&gt; -&gt; Linq.QuerySource&lt;&#39;T,&#39;Q&gt;</div>
<div class="tip" id="fs10">namespace System</div>
<div class="tip" id="fs11">namespace System.Collections</div>
<div class="tip" id="fs12">type IEnumerable =<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br /><br />Full name: System.Collections.IEnumerable</div>
<div class="tip" id="fs13">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = System.Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs14">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs15">member Linq.QueryBuilder.Source : s:&#39;t -&gt; Linq.QuerySource&lt;&#39;v,System.Collections.IEnumerable&gt; (requires member get_Item and member GetEnumerator and member MoveNext and member get_Current)<br /><br />Full name: Script.EnToSeqWithItem.Source</div>
<div class="tip" id="fs16">val s : &#39;t (requires member get_Item and member GetEnumerator and member MoveNext and member get_Current)</div>
<div class="tip" id="fs17">val x : &#39;t (requires member get_Item and member GetEnumerator and member MoveNext and member get_Current)</div>
<div class="tip" id="fs18">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs19">type obj = System.Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs20">val query : Linq.QueryBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.query</div>
<div class="tip" id="fs21">val m : System.Text.RegularExpressions.Match</div>
<div class="tip" id="fs22">namespace System.Text</div>
<div class="tip" id="fs23">namespace System.Text.RegularExpressions</div>
<div class="tip" id="fs24">Multiple items<br />type Regex =<br />&#160;&#160;new : pattern:string -&gt; Regex + 1 overload<br />&#160;&#160;member GetGroupNames : unit -&gt; string[]<br />&#160;&#160;member GetGroupNumbers : unit -&gt; int[]<br />&#160;&#160;member GroupNameFromNumber : i:int -&gt; string<br />&#160;&#160;member GroupNumberFromName : name:string -&gt; int<br />&#160;&#160;member IsMatch : input:string -&gt; bool + 1 overload<br />&#160;&#160;member Match : input:string -&gt; Match + 2 overloads<br />&#160;&#160;member Matches : input:string -&gt; MatchCollection + 1 overload<br />&#160;&#160;member Options : RegexOptions<br />&#160;&#160;member Replace : input:string * replacement:string -&gt; string + 5 overloads<br />&#160;&#160;...<br /><br />Full name: System.Text.RegularExpressions.Regex<br /><br />--------------------<br />System.Text.RegularExpressions.Regex(pattern: string) : unit<br />System.Text.RegularExpressions.Regex(pattern: string, options: System.Text.RegularExpressions.RegexOptions) : unit</div>
<div class="tip" id="fs25">System.Text.RegularExpressions.Regex.Matches(input: string, pattern: string) : System.Text.RegularExpressions.MatchCollection<br />System.Text.RegularExpressions.Regex.Matches(input: string, pattern: string, options: System.Text.RegularExpressions.RegexOptions) : System.Text.RegularExpressions.MatchCollection</div>
<div class="tip" id="fs26">custom operation: where (bool)<br /><br />Calls Linq.QueryBuilder.Where </div>
<div class="tip" id="fs27">property System.Text.RegularExpressions.Group.Success: bool</div>
<div class="tip" id="fs28">custom operation: select (&#39;Result)<br /><br />Calls Linq.QueryBuilder.Select </div>
<div class="tip" id="fs29">property System.Text.RegularExpressions.Capture.Value: string</div>
<div class="tip" id="fs30">custom operation: distinct<br /><br />Calls Linq.QueryBuilder.Distinct </div>

