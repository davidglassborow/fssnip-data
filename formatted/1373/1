<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
<span class="l">74: </span>
<span class="l">75: </span>
<span class="l">76: </span>
<span class="l">77: </span>
<span class="l">78: </span>
<span class="l">79: </span>
<span class="l">80: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// String Interpolation</span>
<span class="c">// http://fslang.uservoice.com/forums/245727-f-language/suggestions/5678806-string-interpolation </span>
<span class="k">let</span> (<span class="o">+@</span>) <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">a</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">b</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">sprintf</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s"></span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">a</span> <span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">b</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">a</span> <span class="o">=</span> <span class="n">40</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">p</span> <span class="o">=</span> <span class="s">&quot;John&quot;</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">b</span> <span class="o">=</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="i">p</span> <span class="o">+</span> <span class="s">&quot; has &quot;</span> <span class="o">+@</span> <span onmouseout="hideTip(event, 'fs4', 10)" onmouseover="showTip(event, 'fs4', 10)" class="i">a</span><span class="o">*</span><span class="n">2</span> <span class="o">+</span> <span class="s">&quot; items&quot;</span>
<span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="i">b</span>


<span class="c">// Add Option.filter</span>
<span class="c">// http://fslang.uservoice.com/forums/245727-f-language/suggestions/5674917-add-option-filter</span>
<span class="k">module</span> <span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="t">Option</span> <span class="o">=</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="f">filter</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="f">cond</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs8', 16)" onmouseover="showTip(event, 'fs8', 16)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="f">bind</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="i">x</span> <span class="k">-&gt;</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs10', 19)" onmouseover="showTip(event, 'fs10', 19)" class="f">cond</span> <span onmouseout="hideTip(event, 'fs12', 20)" onmouseover="showTip(event, 'fs12', 20)" class="i">x</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs13', 21)" onmouseover="showTip(event, 'fs13', 21)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs12', 22)" onmouseover="showTip(event, 'fs12', 22)" class="i">x</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="p">None</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 24)" onmouseover="showTip(event, 'fs15', 24)" class="i">x1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 25)" onmouseover="showTip(event, 'fs13', 25)" class="p">Some</span> <span class="n">1</span> 
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="i">x2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 27)" onmouseover="showTip(event, 'fs13', 27)" class="p">Some</span> <span class="n">3</span> 
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="i">y1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 29)" onmouseover="showTip(event, 'fs15', 29)" class="i">x1</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 31)" onmouseover="showTip(event, 'fs9', 31)" class="f">filter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs19', 32)" onmouseover="showTip(event, 'fs19', 32)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 33)" onmouseover="showTip(event, 'fs19', 33)" class="i">i</span> <span class="o">=</span> <span class="n">3</span>) <span class="c">// Returns None </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 34)" onmouseover="showTip(event, 'fs20', 34)" class="i">y2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 35)" onmouseover="showTip(event, 'fs16', 35)" class="i">x2</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs18', 36)" onmouseover="showTip(event, 'fs18', 36)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 37)" onmouseover="showTip(event, 'fs9', 37)" class="f">filter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs19', 38)" onmouseover="showTip(event, 'fs19', 38)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 39)" onmouseover="showTip(event, 'fs19', 39)" class="i">i</span> <span class="o">=</span> <span class="n">3</span>) <span class="c">// Returns Some 3</span>


<span class="c">// Allow the use of the tuple operator (,) as a function.</span>
<span class="c">// http://fslang.uservoice.com/forums/245727-f-language/suggestions/5669324-allow-the-use-of-the-tuple-operator-as-a-funct </span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 40)" onmouseover="showTip(event, 'fs21', 40)" class="i">``(,)``</span> <span onmouseout="hideTip(event, 'fs12', 41)" onmouseover="showTip(event, 'fs12', 41)" class="i">x</span> <span onmouseout="hideTip(event, 'fs22', 42)" onmouseover="showTip(event, 'fs22', 42)" class="i">y</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs12', 43)" onmouseover="showTip(event, 'fs12', 43)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs22', 44)" onmouseover="showTip(event, 'fs22', 44)" class="i">y</span>)


<span class="c">// F# 3.0 query expression with pipelined style</span>
<span class="c">// http://fslang.uservoice.com/forums/245727-f-language/suggestions/5666371-f-3-0-query-expression-with-pipelined-style</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs23', 45)" onmouseover="showTip(event, 'fs23', 45)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 46)" onmouseover="showTip(event, 'fs24', 46)" class="i">Linq</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs25', 47)" onmouseover="showTip(event, 'fs25', 47)" class="t">Row</span> <span class="o">=</span> { <span onmouseout="hideTip(event, 'fs26', 48)" onmouseover="showTip(event, 'fs26', 48)" class="i">ColumnA</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs27', 49)" onmouseover="showTip(event, 'fs27', 49)" class="t">int</span> }
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 50)" onmouseover="showTip(event, 'fs28', 50)" class="i">source</span> <span class="o">=</span> [ <span class="k">for</span> <span onmouseout="hideTip(event, 'fs19', 51)" onmouseover="showTip(event, 'fs19', 51)" class="i">i</span> <span class="k">in</span> <span class="n">0..</span><span class="n">9</span> <span class="k">-&gt;</span> { <span class="i">ColumnA</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 52)" onmouseover="showTip(event, 'fs19', 52)" class="i">i</span> } ]
<span onmouseout="hideTip(event, 'fs28', 53)" onmouseover="showTip(event, 'fs28', 53)" class="i">source</span>
  <span class="o">.</span><span class="f">OrderBy</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs29', 54)" onmouseover="showTip(event, 'fs29', 54)" class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs29', 55)" onmouseover="showTip(event, 'fs29', 55)" class="i">a</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 56)" onmouseover="showTip(event, 'fs26', 56)" class="i">ColumnA</span>)
  <span class="o">.</span><span class="f">Skip</span>(<span class="n">10</span>)
  <span class="o">.</span><span class="f">Take</span>(<span class="n">20</span>)
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 57)" onmouseover="showTip(event, 'fs30', 57)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 58)" onmouseover="showTip(event, 'fs31', 58)" class="f">iter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs29', 59)" onmouseover="showTip(event, 'fs29', 59)" class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 60)" onmouseover="showTip(event, 'fs7', 60)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs32', 61)" onmouseover="showTip(event, 'fs32', 61)" class="f">string</span> <span onmouseout="hideTip(event, 'fs29', 62)" onmouseover="showTip(event, 'fs29', 62)" class="i">a</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 63)" onmouseover="showTip(event, 'fs26', 63)" class="i">ColumnA</span>))


<span class="c">// Add syntactic sugar for functions ala Scala/Clojure</span>
<span class="c">// http://fslang.uservoice.com/forums/245727-f-language/suggestions/5665355-add-syntactic-sugar-for-functions-ala-scala-clojur</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs33', 64)" onmouseover="showTip(event, 'fs33', 64)" class="t">PlaceHolder</span> () <span class="o">=</span>
  <span class="k">static</span> <span class="k">member</span> (<span class="o">+</span>) (<span class="i">__</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs33', 65)" onmouseover="showTip(event, 'fs33', 65)" class="t">PlaceHolder</span>, <span onmouseout="hideTip(event, 'fs34', 66)" onmouseover="showTip(event, 'fs34', 66)" class="i">right</span>) <span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs35', 67)" onmouseover="showTip(event, 'fs35', 67)" class="i">left</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs35', 68)" onmouseover="showTip(event, 'fs35', 68)" class="i">left</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs34', 69)" onmouseover="showTip(event, 'fs34', 69)" class="i">right</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 70)" onmouseover="showTip(event, 'fs36', 70)" class="i">__</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 71)" onmouseover="showTip(event, 'fs33', 71)" class="t">PlaceHolder</span>()
<span class="s">&quot;Place&quot;</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs37', 72)" onmouseover="showTip(event, 'fs37', 72)" class="i">__</span> <span class="o">+</span> <span class="s">&quot;Holder&quot;</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs7', 73)" onmouseover="showTip(event, 'fs7', 73)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">&quot;</span>


<span class="c">// Allow Pattern Matching on Types </span>
<span class="c">// http://fslang.uservoice.com/forums/245727-f-language/suggestions/5664335-allow-pattern-matching-on-types</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs23', 74)" onmouseover="showTip(event, 'fs23', 74)" class="i">System</span>
<span class="k">match</span> <span onmouseout="hideTip(event, 'fs38', 75)" onmouseover="showTip(event, 'fs38', 75)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs39', 76)" onmouseover="showTip(event, 'fs39', 76)" class="t">float</span><span class="o">&gt;</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs40', 77)" onmouseover="showTip(event, 'fs40', 77)" class="t">Activator</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 78)" onmouseover="showTip(event, 'fs41', 78)" class="f">CreateInstance</span> <span class="k">with</span> 
| <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs27', 79)" onmouseover="showTip(event, 'fs27', 79)" class="t">int</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 80)" onmouseover="showTip(event, 'fs7', 80)" class="f">printfn</span> <span class="s">&quot;int!&quot;</span>
| <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs39', 81)" onmouseover="showTip(event, 'fs39', 81)" class="t">float</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 82)" onmouseover="showTip(event, 'fs7', 82)" class="f">printfn</span> <span class="s">&quot;float!&quot;</span>
| _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 83)" onmouseover="showTip(event, 'fs7', 83)" class="f">printfn</span> <span class="s">&quot;didn&#39;t match!&quot;</span>


<span class="c">// Allow private constructors on DU cases </span>
<span class="c">// http://fslang.uservoice.com/forums/245727-f-language/suggestions/5663374-allow-private-constructors-on-du-cases</span>
<span class="c">// ADDED: Mr @iceypoi kindly gived a better version of private DU constructor!</span>
<span class="c">// URL: http://fssnip.net/ma</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs42', 84)" onmouseover="showTip(event, 'fs42', 84)" class="t">EmailAddress</span> <span class="o">=</span> 
  | <span onmouseout="hideTip(event, 'fs43', 85)" onmouseover="showTip(event, 'fs43', 85)" class="p">ValidEmail</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs44', 86)" onmouseover="showTip(event, 'fs44', 86)" class="t">string</span> 
  | <span onmouseout="hideTip(event, 'fs45', 87)" onmouseover="showTip(event, 'fs45', 87)" class="p">InvalidEmail</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs44', 88)" onmouseover="showTip(event, 'fs44', 88)" class="t">string</span> 

[&lt;<span onmouseout="hideTip(event, 'fs46', 89)" onmouseover="showTip(event, 'fs46', 89)" class="t">AutoOpen</span>&gt;]
<span class="k">module</span> <span class="t">Hide</span> <span class="o">=</span>
  <span class="k">type</span> <span class="t">``Don&#39;t use this! It&#39;s private constructor for the DU``</span> () <span class="o">=</span> <span class="k">do</span> ()
  <span class="k">module</span> <span onmouseout="hideTip(event, 'fs47', 90)" onmouseover="showTip(event, 'fs47', 90)" class="t">EmailAddress</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 91)" onmouseover="showTip(event, 'fs48', 91)" class="i">ValidEmail</span> <span class="o">=</span> <span class="t">``Don&#39;t use this! It&#39;s private constructor for the DU``</span> ()


<span class="c">// Allow custom equality on record types.</span>
<span class="c">// http://fslang.uservoice.com/forums/245727-f-language/suggestions/5663332-allow-custom-equality-on-record-types</span>
[&lt;<span onmouseout="hideTip(event, 'fs49', 92)" onmouseover="showTip(event, 'fs49', 92)" class="t">CustomEquality</span>; <span onmouseout="hideTip(event, 'fs50', 93)" onmouseover="showTip(event, 'fs50', 93)" class="t">CustomComparison</span>&gt;]
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs51', 94)" onmouseover="showTip(event, 'fs51', 94)" class="t">Record</span> <span class="o">=</span>   
  { <span onmouseout="hideTip(event, 'fs52', 95)" onmouseover="showTip(event, 'fs52', 95)" class="i">Field</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs44', 96)" onmouseover="showTip(event, 'fs44', 96)" class="t">string</span> }
  <span class="k">override</span> <span onmouseout="hideTip(event, 'fs37', 97)" onmouseover="showTip(event, 'fs37', 97)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 98)" onmouseover="showTip(event, 'fs53', 98)" class="f">Equals</span> (<span onmouseout="hideTip(event, 'fs54', 99)" onmouseover="showTip(event, 'fs54', 99)" class="i">o</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs55', 100)" onmouseover="showTip(event, 'fs55', 100)" class="t">obj</span>) <span class="o">=</span> <span class="k">false</span>
  <span class="k">override</span> <span onmouseout="hideTip(event, 'fs56', 101)" onmouseover="showTip(event, 'fs56', 101)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 102)" onmouseover="showTip(event, 'fs57', 102)" class="f">GetHashCode</span> () <span class="o">=</span> <span class="n">0</span>
  <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs23', 103)" onmouseover="showTip(event, 'fs23', 103)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 104)" onmouseover="showTip(event, 'fs58', 104)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 105)" onmouseover="showTip(event, 'fs59', 105)" class="t">IStructuralComparable</span> <span class="k">with</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs56', 106)" onmouseover="showTip(event, 'fs56', 106)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 107)" onmouseover="showTip(event, 'fs60', 107)" class="f">CompareTo</span> (<span onmouseout="hideTip(event, 'fs54', 108)" onmouseover="showTip(event, 'fs54', 108)" class="i">o</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs55', 109)" onmouseover="showTip(event, 'fs55', 109)" class="t">obj</span>, _) <span class="o">=</span> <span class="n">0</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val a : string</div>
<div class="tip" id="fs2">val b : &#39;a</div>
<div class="tip" id="fs3">val sprintf : format:Printf.StringFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.sprintf</div>
<div class="tip" id="fs4">val a : int<br /><br />Full name: Script.a</div>
<div class="tip" id="fs5">val p : string<br /><br />Full name: Script.p</div>
<div class="tip" id="fs6">val b : string<br /><br />Full name: Script.b</div>
<div class="tip" id="fs7">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs8">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs9">val filter : cond:(&#39;a -&gt; bool) -&gt; (&#39;a option -&gt; &#39;a option)<br /><br />Full name: Script.Option.filter</div>
<div class="tip" id="fs10">val cond : (&#39;a -&gt; bool)</div>
<div class="tip" id="fs11">val bind : binder:(&#39;T -&gt; &#39;U option) -&gt; option:&#39;T option -&gt; &#39;U option<br /><br />Full name: Microsoft.FSharp.Core.Option.bind</div>
<div class="tip" id="fs12">val x : &#39;a</div>
<div class="tip" id="fs13">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs14">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs15">val x1 : int option<br /><br />Full name: Script.x1</div>
<div class="tip" id="fs16">val x2 : int option<br /><br />Full name: Script.x2</div>
<div class="tip" id="fs17">val y1 : int option<br /><br />Full name: Script.y1</div>
<div class="tip" id="fs18">Multiple items<br />module Option<br /><br />from Script<br /><br />--------------------<br />module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs19">val i : int</div>
<div class="tip" id="fs20">val y2 : int option<br /><br />Full name: Script.y2</div>
<div class="tip" id="fs21">val ( (,) ) : x:&#39;a -&gt; y:&#39;b -&gt; &#39;a * &#39;b<br /><br />Full name: Script.( (,) )</div>
<div class="tip" id="fs22">val y : &#39;b</div>
<div class="tip" id="fs23">namespace System</div>
<div class="tip" id="fs24">namespace System.Linq</div>
<div class="tip" id="fs25">type Row =<br />&#160;&#160;{ColumnA: int;}<br /><br />Full name: Script.Row</div>
<div class="tip" id="fs26">Row.ColumnA: int</div>
<div class="tip" id="fs27">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs28">val source : Row list<br /><br />Full name: Script.source</div>
<div class="tip" id="fs29">val a : Row</div>
<div class="tip" id="fs30">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs31">val iter : action:(&#39;T -&gt; unit) -&gt; source:seq&lt;&#39;T&gt; -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.Seq.iter</div>
<div class="tip" id="fs32">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs33">Multiple items<br />type PlaceHolder =<br />&#160;&#160;new : unit -&gt; PlaceHolder<br />&#160;&#160;static member ( + ) : __:PlaceHolder * right:string -&gt; (string -&gt; string)<br /><br />Full name: Script.PlaceHolder<br /><br />--------------------<br />new : unit -&gt; PlaceHolder</div>
<div class="tip" id="fs34">val right : string</div>
<div class="tip" id="fs35">val left : string</div>
<div class="tip" id="fs36">val __ : PlaceHolder</div>
<div class="tip" id="fs37">val __ : PlaceHolder<br /><br />Full name: Script.__</div>
<div class="tip" id="fs38">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs39">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs40">type Activator =<br />&#160;&#160;static member CreateComInstanceFrom : assemblyName:string * typeName:string -&gt; ObjectHandle + 1 overload<br />&#160;&#160;static member CreateInstance&lt;&#39;T&gt; : unit -&gt; &#39;T + 15 overloads<br />&#160;&#160;static member CreateInstanceFrom : assemblyFile:string * typeName:string -&gt; ObjectHandle + 6 overloads<br />&#160;&#160;static member GetObject : type:Type * url:string -&gt; obj + 1 overload<br /><br />Full name: System.Activator</div>
<div class="tip" id="fs41">Activator.CreateInstance&lt;&#39;T&gt;() : &#39;T<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(activationContext: ActivationContext) : Runtime.Remoting.ObjectHandle<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(type: Type) : obj<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(activationContext: ActivationContext, activationCustomData: string []) : Runtime.Remoting.ObjectHandle<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(type: Type, nonPublic: bool) : obj<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(assemblyName: string, typeName: string) : Runtime.Remoting.ObjectHandle<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(type: Type, [&lt;ParamArray&gt;] args: obj []) : obj<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(domain: AppDomain, assemblyName: string, typeName: string) : Runtime.Remoting.ObjectHandle<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(assemblyName: string, typeName: string, activationAttributes: obj []) : Runtime.Remoting.ObjectHandle<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Activator.CreateInstance(type: Type, args: obj [], activationAttributes: obj []) : obj<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs42">type EmailAddress =<br />&#160;&#160;| ValidEmail of string<br />&#160;&#160;| InvalidEmail of string<br /><br />Full name: Script.EmailAddress</div>
<div class="tip" id="fs43">union case EmailAddress.ValidEmail: string -&gt; EmailAddress</div>
<div class="tip" id="fs44">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs45">union case EmailAddress.InvalidEmail: string -&gt; EmailAddress</div>
<div class="tip" id="fs46">Multiple items<br />type AutoOpenAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AutoOpenAttribute<br />&#160;&#160;new : path:string -&gt; AutoOpenAttribute<br />&#160;&#160;member Path : string<br /><br />Full name: Microsoft.FSharp.Core.AutoOpenAttribute<br /><br />--------------------<br />new : unit -&gt; AutoOpenAttribute<br />new : path:string -&gt; AutoOpenAttribute</div>
<div class="tip" id="fs47">Multiple items<br />module EmailAddress<br /><br />from Script.Hide<br /><br />--------------------<br />type EmailAddress =<br />&#160;&#160;| ValidEmail of string<br />&#160;&#160;| InvalidEmail of string<br /><br />Full name: Script.EmailAddress</div>
<div class="tip" id="fs48">val ValidEmail : Don&#39;t use this! It&#39;s private constructor for the DU<br /><br />Full name: Script.Hide.EmailAddress.ValidEmail</div>
<div class="tip" id="fs49">Multiple items<br />type CustomEqualityAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; CustomEqualityAttribute<br /><br />Full name: Microsoft.FSharp.Core.CustomEqualityAttribute<br /><br />--------------------<br />new : unit -&gt; CustomEqualityAttribute</div>
<div class="tip" id="fs50">Multiple items<br />type CustomComparisonAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; CustomComparisonAttribute<br /><br />Full name: Microsoft.FSharp.Core.CustomComparisonAttribute<br /><br />--------------------<br />new : unit -&gt; CustomComparisonAttribute</div>
<div class="tip" id="fs51">type Record =<br />&#160;&#160;{Field: string;}<br />&#160;&#160;interface IStructuralComparable<br />&#160;&#160;override Equals : o:obj -&gt; bool<br />&#160;&#160;override GetHashCode : unit -&gt; int<br /><br />Full name: Script.Record</div>
<div class="tip" id="fs52">Record.Field: string</div>
<div class="tip" id="fs53">Object.Equals(obj: obj) : bool</div>
<div class="tip" id="fs54">val o : obj</div>
<div class="tip" id="fs55">type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs56">val __ : Record</div>
<div class="tip" id="fs57">Object.GetHashCode() : int</div>
<div class="tip" id="fs58">namespace System.Collections</div>
<div class="tip" id="fs59">type IStructuralComparable =<br />&#160;&#160;member CompareTo : other:obj * comparer:IComparer -&gt; int<br /><br />Full name: System.Collections.IStructuralComparable</div>
<div class="tip" id="fs60">override Record.CompareTo : o:obj * Collections.IComparer -&gt; int<br /><br />Full name: Script.Record.CompareTo</div>

