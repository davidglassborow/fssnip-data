<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// This program is an optimizer that can generate optimal code</span>
<span class="c">// for any bitwise function with up to 4 parameters.</span>
<span class="c">// Only 65536 such functions exists so they can be precomputed</span>
<span class="c">// and cached, given enough time and an efficient searcher.</span>
<span class="c">// </span>
<span class="c">// This F# function was not optimised by the F# 3.0 compiler:</span>
<span class="c">//   let booltest a b  = (a ||| b) &amp;&amp;&amp; (~~~ (a &amp;&amp;&amp; b))</span>
<span class="c">// It generated this CIL code:</span>
<span class="c">//   [Ldarg 0; Ldarg 1; Or; Ldarg 0; Ldarg 1; And; Not; And]</span>
<span class="c">// Instead of the optimal code:</span>
<span class="c">//   [Ldarg 0; Ldarg 1; Xor]</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">ops</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="p">Ldarg</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">int</span> | <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="p">And</span> | <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="p">Or</span> | <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="p">Xor</span> | <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="p">Not</span> | <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="p">Dup</span> | <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="p">Pop</span> | <span onmouseout="hideTip(event, 'fs11', 11)" onmouseover="showTip(event, 'fs11', 11)" class="p">Ones</span> | <span onmouseout="hideTip(event, 'fs12', 12)" onmouseover="showTip(event, 'fs12', 12)" class="p">Zeros</span>

[&lt;<span onmouseout="hideTip(event, 'fs13', 13)" onmouseover="showTip(event, 'fs13', 13)" class="t">EntryPoint</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 14)" onmouseover="showTip(event, 'fs14', 14)" class="f">main</span> <span onmouseout="hideTip(event, 'fs15', 15)" onmouseover="showTip(event, 'fs15', 15)" class="i">argv</span> <span class="o">=</span>   
    
    <span class="c">/// Bit patterns for computing the truth table in parallel</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 16)" onmouseover="showTip(event, 'fs16', 16)" class="i">args</span> <span class="o">=</span> [|<span class="n">0b1010101010101010</span>; <span class="n">0b1100110011001100</span>;
                 <span class="n">0b1111000011110000</span>; <span class="n">0b1111111100000000</span>|]

    <span class="c">/// Instructions understood and used by the optimiser</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 17)" onmouseover="showTip(event, 'fs17', 17)" class="i">validinstructions</span> <span class="o">=</span> [|<span onmouseout="hideTip(event, 'fs3', 18)" onmouseover="showTip(event, 'fs3', 18)" class="p">Ldarg</span> <span class="n">0</span>; <span onmouseout="hideTip(event, 'fs3', 19)" onmouseover="showTip(event, 'fs3', 19)" class="p">Ldarg</span> <span class="n">1</span>; <span onmouseout="hideTip(event, 'fs3', 20)" onmouseover="showTip(event, 'fs3', 20)" class="p">Ldarg</span> <span class="n">2</span>; <span onmouseout="hideTip(event, 'fs3', 21)" onmouseover="showTip(event, 'fs3', 21)" class="p">Ldarg</span> <span class="n">3</span>;
                              <span onmouseout="hideTip(event, 'fs5', 22)" onmouseover="showTip(event, 'fs5', 22)" class="p">And</span>; <span onmouseout="hideTip(event, 'fs6', 23)" onmouseover="showTip(event, 'fs6', 23)" class="p">Or</span>; <span onmouseout="hideTip(event, 'fs7', 24)" onmouseover="showTip(event, 'fs7', 24)" class="p">Xor</span>; <span onmouseout="hideTip(event, 'fs9', 25)" onmouseover="showTip(event, 'fs9', 25)" class="p">Dup</span>; <span onmouseout="hideTip(event, 'fs10', 26)" onmouseover="showTip(event, 'fs10', 26)" class="p">Pop</span>; <span onmouseout="hideTip(event, 'fs8', 27)" onmouseover="showTip(event, 'fs8', 27)" class="p">Not</span>; <span onmouseout="hideTip(event, 'fs11', 28)" onmouseover="showTip(event, 'fs11', 28)" class="p">Ones</span>; <span onmouseout="hideTip(event, 'fs12', 29)" onmouseover="showTip(event, 'fs12', 29)" class="p">Zeros</span>|]


    <span class="c">/// Execute a single stack based instruction</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="f">exec</span> <span class="o">=</span> <span class="k">function</span>
               | <span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="i">stk</span>,<span onmouseout="hideTip(event, 'fs3', 32)" onmouseover="showTip(event, 'fs3', 32)" class="p">Ldarg</span> <span onmouseout="hideTip(event, 'fs20', 33)" onmouseover="showTip(event, 'fs20', 33)" class="i">n</span>   <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 34)" onmouseover="showTip(event, 'fs21', 34)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs16', 35)" onmouseover="showTip(event, 'fs16', 35)" class="i">args</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs20', 36)" onmouseover="showTip(event, 'fs20', 36)" class="i">n</span>]<span class="o">::</span><span class="i">stk</span>)
               | <span onmouseout="hideTip(event, 'fs22', 37)" onmouseover="showTip(event, 'fs22', 37)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs23', 38)" onmouseover="showTip(event, 'fs23', 38)" class="i">y</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 39)" onmouseover="showTip(event, 'fs19', 39)" class="i">stk</span>,<span onmouseout="hideTip(event, 'fs5', 40)" onmouseover="showTip(event, 'fs5', 40)" class="p">And</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 41)" onmouseover="showTip(event, 'fs21', 41)" class="p">Some</span>((<span onmouseout="hideTip(event, 'fs22', 42)" onmouseover="showTip(event, 'fs22', 42)" class="i">x</span> <span class="o">&amp;&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs23', 43)" onmouseover="showTip(event, 'fs23', 43)" class="i">y</span>)<span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 44)" onmouseover="showTip(event, 'fs19', 44)" class="i">stk</span>)
               | <span onmouseout="hideTip(event, 'fs22', 45)" onmouseover="showTip(event, 'fs22', 45)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs23', 46)" onmouseover="showTip(event, 'fs23', 46)" class="i">y</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 47)" onmouseover="showTip(event, 'fs19', 47)" class="i">stk</span>,<span onmouseout="hideTip(event, 'fs6', 48)" onmouseover="showTip(event, 'fs6', 48)" class="p">Or</span>  <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 49)" onmouseover="showTip(event, 'fs21', 49)" class="p">Some</span>((<span onmouseout="hideTip(event, 'fs22', 50)" onmouseover="showTip(event, 'fs22', 50)" class="i">x</span> <span class="o">|||</span> <span onmouseout="hideTip(event, 'fs23', 51)" onmouseover="showTip(event, 'fs23', 51)" class="i">y</span>)<span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 52)" onmouseover="showTip(event, 'fs19', 52)" class="i">stk</span>)
               | <span onmouseout="hideTip(event, 'fs22', 53)" onmouseover="showTip(event, 'fs22', 53)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs23', 54)" onmouseover="showTip(event, 'fs23', 54)" class="i">y</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 55)" onmouseover="showTip(event, 'fs19', 55)" class="i">stk</span>,<span onmouseout="hideTip(event, 'fs7', 56)" onmouseover="showTip(event, 'fs7', 56)" class="p">Xor</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 57)" onmouseover="showTip(event, 'fs21', 57)" class="p">Some</span>((<span onmouseout="hideTip(event, 'fs22', 58)" onmouseover="showTip(event, 'fs22', 58)" class="i">x</span> <span class="o">^^^</span> <span onmouseout="hideTip(event, 'fs23', 59)" onmouseover="showTip(event, 'fs23', 59)" class="i">y</span>)<span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 60)" onmouseover="showTip(event, 'fs19', 60)" class="i">stk</span>)
               | <span onmouseout="hideTip(event, 'fs22', 61)" onmouseover="showTip(event, 'fs22', 61)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 62)" onmouseover="showTip(event, 'fs19', 62)" class="i">stk</span>,<span onmouseout="hideTip(event, 'fs8', 63)" onmouseover="showTip(event, 'fs8', 63)" class="p">Not</span>    <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 64)" onmouseover="showTip(event, 'fs21', 64)" class="p">Some</span>((<span onmouseout="hideTip(event, 'fs22', 65)" onmouseover="showTip(event, 'fs22', 65)" class="i">x</span> <span class="o">^^^</span> <span class="n">0xffff</span>)<span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 66)" onmouseover="showTip(event, 'fs19', 66)" class="i">stk</span>)
               | <span onmouseout="hideTip(event, 'fs22', 67)" onmouseover="showTip(event, 'fs22', 67)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 68)" onmouseover="showTip(event, 'fs19', 68)" class="i">stk</span>,<span onmouseout="hideTip(event, 'fs9', 69)" onmouseover="showTip(event, 'fs9', 69)" class="p">Dup</span>    <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 70)" onmouseover="showTip(event, 'fs21', 70)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs22', 71)" onmouseover="showTip(event, 'fs22', 71)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs22', 72)" onmouseover="showTip(event, 'fs22', 72)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 73)" onmouseover="showTip(event, 'fs19', 73)" class="i">stk</span>)
               | <span onmouseout="hideTip(event, 'fs22', 74)" onmouseover="showTip(event, 'fs22', 74)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 75)" onmouseover="showTip(event, 'fs19', 75)" class="i">stk</span>,<span onmouseout="hideTip(event, 'fs10', 76)" onmouseover="showTip(event, 'fs10', 76)" class="p">Pop</span>    <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 77)" onmouseover="showTip(event, 'fs21', 77)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs19', 78)" onmouseover="showTip(event, 'fs19', 78)" class="i">stk</span>)
               | <span onmouseout="hideTip(event, 'fs19', 79)" onmouseover="showTip(event, 'fs19', 79)" class="i">stk</span>,<span onmouseout="hideTip(event, 'fs11', 80)" onmouseover="showTip(event, 'fs11', 80)" class="p">Ones</span>      <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 81)" onmouseover="showTip(event, 'fs21', 81)" class="p">Some</span>(<span class="n">0xffff</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 82)" onmouseover="showTip(event, 'fs19', 82)" class="i">stk</span>)
               | <span onmouseout="hideTip(event, 'fs19', 83)" onmouseover="showTip(event, 'fs19', 83)" class="i">stk</span>,<span onmouseout="hideTip(event, 'fs12', 84)" onmouseover="showTip(event, 'fs12', 84)" class="p">Zeros</span>     <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 85)" onmouseover="showTip(event, 'fs21', 85)" class="p">Some</span>(<span class="n">0</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs19', 86)" onmouseover="showTip(event, 'fs19', 86)" class="i">stk</span>)
               | _             <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs24', 87)" onmouseover="showTip(event, 'fs24', 87)" class="p">None</span>


    <span class="c">/// Calculate one truth table for each return value of a function</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 88)" onmouseover="showTip(event, 'fs25', 88)" class="f">truthtables</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs26', 89)" onmouseover="showTip(event, 'fs26', 89)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 90)" onmouseover="showTip(event, 'fs27', 90)" class="f">fold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs28', 91)" onmouseover="showTip(event, 'fs28', 91)" class="i">acc</span> <span onmouseout="hideTip(event, 'fs29', 92)" onmouseover="showTip(event, 'fs29', 92)" class="i">op</span> <span class="k">-&gt;</span> <span class="k">match</span> <span onmouseout="hideTip(event, 'fs28', 93)" onmouseover="showTip(event, 'fs28', 93)" class="i">acc</span> <span class="k">with</span>
                                 | <span onmouseout="hideTip(event, 'fs24', 94)" onmouseover="showTip(event, 'fs24', 94)" class="p">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs24', 95)" onmouseover="showTip(event, 'fs24', 95)" class="p">None</span>
                                 | <span onmouseout="hideTip(event, 'fs21', 96)" onmouseover="showTip(event, 'fs21', 96)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs30', 97)" onmouseover="showTip(event, 'fs30', 97)" class="i">xs</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs18', 98)" onmouseover="showTip(event, 'fs18', 98)" class="f">exec</span> (<span onmouseout="hideTip(event, 'fs30', 99)" onmouseover="showTip(event, 'fs30', 99)" class="i">xs</span>,<span onmouseout="hideTip(event, 'fs29', 100)" onmouseover="showTip(event, 'fs29', 100)" class="i">op</span>)) (<span onmouseout="hideTip(event, 'fs21', 101)" onmouseover="showTip(event, 'fs21', 101)" class="p">Some</span>([]) )


    <span class="c">/// Increment a number in the form of a list of digits</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs31', 102)" onmouseover="showTip(event, 'fs31', 102)" class="f">increment</span> <span onmouseout="hideTip(event, 'fs32', 103)" onmouseover="showTip(event, 'fs32', 103)" class="i">max</span> <span class="o">=</span>
        <span class="k">function</span>
        | <span onmouseout="hideTip(event, 'fs22', 104)" onmouseover="showTip(event, 'fs22', 104)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs30', 105)" onmouseover="showTip(event, 'fs30', 105)" class="i">xs</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs22', 106)" onmouseover="showTip(event, 'fs22', 106)" class="i">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 107)" onmouseover="showTip(event, 'fs32', 107)" class="i">max</span> <span class="k">-&gt;</span> <span class="n">0</span><span class="o">::</span>(<span onmouseout="hideTip(event, 'fs31', 108)" onmouseover="showTip(event, 'fs31', 108)" class="f">increment</span> <span onmouseout="hideTip(event, 'fs32', 109)" onmouseover="showTip(event, 'fs32', 109)" class="i">max</span> <span onmouseout="hideTip(event, 'fs30', 110)" onmouseover="showTip(event, 'fs30', 110)" class="i">xs</span>)
        | <span onmouseout="hideTip(event, 'fs22', 111)" onmouseover="showTip(event, 'fs22', 111)" class="i">x</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs30', 112)" onmouseover="showTip(event, 'fs30', 112)" class="i">xs</span>              <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs22', 113)" onmouseover="showTip(event, 'fs22', 113)" class="i">x</span> <span class="o">+</span> <span class="n">1</span>)<span class="o">::</span><span onmouseout="hideTip(event, 'fs30', 114)" onmouseover="showTip(event, 'fs30', 114)" class="i">xs</span>
        | _                  <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs33', 115)" onmouseover="showTip(event, 'fs33', 115)" class="f">failwith</span> <span class="s">&quot;Empty list!&quot;</span>


    <span class="c">/// Create a list of all numbers of length and radix</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 116)" onmouseover="showTip(event, 'fs34', 116)" class="f">makenumbers</span> <span onmouseout="hideTip(event, 'fs35', 117)" onmouseover="showTip(event, 'fs35', 117)" class="i">length</span> <span onmouseout="hideTip(event, 'fs36', 118)" onmouseover="showTip(event, 'fs36', 118)" class="i">radix</span> <span class="o">=</span> 
        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs37', 119)" onmouseover="showTip(event, 'fs37', 119)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs38', 120)" onmouseover="showTip(event, 'fs38', 120)" class="i">number</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs39', 121)" onmouseover="showTip(event, 'fs39', 121)" class="i">seq</span> { <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs38', 122)" onmouseover="showTip(event, 'fs38', 122)" class="i">number</span>
                  <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs37', 123)" onmouseover="showTip(event, 'fs37', 123)" class="f">loop</span> (<span onmouseout="hideTip(event, 'fs31', 124)" onmouseover="showTip(event, 'fs31', 124)" class="f">increment</span> (<span onmouseout="hideTip(event, 'fs36', 125)" onmouseover="showTip(event, 'fs36', 125)" class="i">radix</span> <span class="o">-</span> <span class="n">1</span>) <span onmouseout="hideTip(event, 'fs38', 126)" onmouseover="showTip(event, 'fs38', 126)" class="i">number</span>)
            }

        <span onmouseout="hideTip(event, 'fs37', 127)" onmouseover="showTip(event, 'fs37', 127)" class="f">loop</span> (<span onmouseout="hideTip(event, 'fs26', 128)" onmouseover="showTip(event, 'fs26', 128)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 129)" onmouseover="showTip(event, 'fs40', 129)" class="f">init</span> <span onmouseout="hideTip(event, 'fs35', 130)" onmouseover="showTip(event, 'fs35', 130)" class="i">length</span> (<span class="k">fun</span> _ <span class="k">-&gt;</span> <span class="n">0</span>))
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 131)" onmouseover="showTip(event, 'fs41', 131)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 132)" onmouseover="showTip(event, 'fs42', 132)" class="f">take</span> (<span onmouseout="hideTip(event, 'fs4', 133)" onmouseover="showTip(event, 'fs4', 133)" class="f">int</span> (<span onmouseout="hideTip(event, 'fs43', 134)" onmouseover="showTip(event, 'fs43', 134)" class="f">float</span> <span onmouseout="hideTip(event, 'fs36', 135)" onmouseover="showTip(event, 'fs36', 135)" class="i">radix</span> <span class="o">**</span> <span onmouseout="hideTip(event, 'fs43', 136)" onmouseover="showTip(event, 'fs43', 136)" class="f">float</span> <span onmouseout="hideTip(event, 'fs35', 137)" onmouseover="showTip(event, 'fs35', 137)" class="i">length</span>))


    <span class="c">/// Populating the dictionary with the optimal functions,</span>
    <span class="c">//  by testing the functions by increasing length from 1 to size</span>
    <span class="c">//  the first function to generate a truth table is the shortest one.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 138)" onmouseover="showTip(event, 'fs44', 138)" class="f">createdictionary</span> <span onmouseout="hideTip(event, 'fs45', 139)" onmouseover="showTip(event, 'fs45', 139)" class="i">size</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs39', 140)" onmouseover="showTip(event, 'fs39', 140)" class="i">seq</span> { <span class="n">0</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs45', 141)" onmouseover="showTip(event, 'fs45', 141)" class="i">size</span> }
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 142)" onmouseover="showTip(event, 'fs41', 142)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 143)" onmouseover="showTip(event, 'fs46', 143)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs47', 144)" onmouseover="showTip(event, 'fs47', 144)" class="i">i</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs34', 145)" onmouseover="showTip(event, 'fs34', 145)" class="f">makenumbers</span> <span onmouseout="hideTip(event, 'fs47', 146)" onmouseover="showTip(event, 'fs47', 146)" class="i">i</span> <span onmouseout="hideTip(event, 'fs17', 147)" onmouseover="showTip(event, 'fs17', 147)" class="i">validinstructions</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 148)" onmouseover="showTip(event, 'fs48', 148)" class="i">Length</span>))
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 149)" onmouseover="showTip(event, 'fs41', 149)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 150)" onmouseover="showTip(event, 'fs49', 150)" class="f">concat</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 151)" onmouseover="showTip(event, 'fs41', 151)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 152)" onmouseover="showTip(event, 'fs46', 152)" class="f">map</span> (<span onmouseout="hideTip(event, 'fs26', 153)" onmouseover="showTip(event, 'fs26', 153)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 154)" onmouseover="showTip(event, 'fs50', 154)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs20', 155)" onmouseover="showTip(event, 'fs20', 155)" class="i">n</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs17', 156)" onmouseover="showTip(event, 'fs17', 156)" class="i">validinstructions</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs20', 157)" onmouseover="showTip(event, 'fs20', 157)" class="i">n</span>]))
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 158)" onmouseover="showTip(event, 'fs41', 158)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 159)" onmouseover="showTip(event, 'fs46', 159)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs51', 160)" onmouseover="showTip(event, 'fs51', 160)" class="i">p</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs25', 161)" onmouseover="showTip(event, 'fs25', 161)" class="f">truthtables</span> <span onmouseout="hideTip(event, 'fs51', 162)" onmouseover="showTip(event, 'fs51', 162)" class="i">p</span>) <span class="o">|&gt;</span> (<span onmouseout="hideTip(event, 'fs52', 163)" onmouseover="showTip(event, 'fs52', 163)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 164)" onmouseover="showTip(event, 'fs53', 164)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs54', 165)" onmouseover="showTip(event, 'fs54', 165)" class="i">x</span> <span class="k">-&gt;</span> (<span onmouseout="hideTip(event, 'fs54', 166)" onmouseover="showTip(event, 'fs54', 166)" class="i">x</span>,<span onmouseout="hideTip(event, 'fs51', 167)" onmouseover="showTip(event, 'fs51', 167)" class="i">p</span>))))
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 168)" onmouseover="showTip(event, 'fs41', 168)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 169)" onmouseover="showTip(event, 'fs55', 169)" class="f">choose</span> <span onmouseout="hideTip(event, 'fs56', 170)" onmouseover="showTip(event, 'fs56', 170)" class="f">id</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 171)" onmouseover="showTip(event, 'fs41', 171)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 172)" onmouseover="showTip(event, 'fs57', 172)" class="f">distinctBy</span> <span onmouseout="hideTip(event, 'fs58', 173)" onmouseover="showTip(event, 'fs58', 173)" class="f">fst</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs41', 174)" onmouseover="showTip(event, 'fs41', 174)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 175)" onmouseover="showTip(event, 'fs59', 175)" class="f">fold</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs60', 176)" onmouseover="showTip(event, 'fs60', 176)" class="i">acc</span> (<span onmouseout="hideTip(event, 'fs61', 177)" onmouseover="showTip(event, 'fs61', 177)" class="i">a</span>,<span onmouseout="hideTip(event, 'fs62', 178)" onmouseover="showTip(event, 'fs62', 178)" class="i">b</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs63', 179)" onmouseover="showTip(event, 'fs63', 179)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 180)" onmouseover="showTip(event, 'fs64', 180)" class="f">add</span> <span onmouseout="hideTip(event, 'fs61', 181)" onmouseover="showTip(event, 'fs61', 181)" class="i">a</span> <span onmouseout="hideTip(event, 'fs62', 182)" onmouseover="showTip(event, 'fs62', 182)" class="i">b</span> <span onmouseout="hideTip(event, 'fs60', 183)" onmouseover="showTip(event, 'fs60', 183)" class="i">acc</span>) <span onmouseout="hideTip(event, 'fs63', 184)" onmouseover="showTip(event, 'fs63', 184)" class="t">Map</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 185)" onmouseover="showTip(event, 'fs65', 185)" class="i">empty</span> 

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs66', 186)" onmouseover="showTip(event, 'fs66', 186)" class="i">optimal</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs44', 187)" onmouseover="showTip(event, 'fs44', 187)" class="f">createdictionary</span> <span class="n">5</span>
    <span onmouseout="hideTip(event, 'fs67', 188)" onmouseover="showTip(event, 'fs67', 188)" class="f">printfn</span> <span class="s">&quot;Number of optimal functions in dictionary: </span><span class="pf">%A</span><span class="s"></span><span class="e">\n</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs66', 189)" onmouseover="showTip(event, 'fs66', 189)" class="i">optimal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 190)" onmouseover="showTip(event, 'fs68', 190)" class="i">Count</span>


    <span class="c">/// Display results</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs69', 191)" onmouseover="showTip(event, 'fs69', 191)" class="f">show</span> <span class="o">=</span> 
        <span class="k">function</span>
        | <span onmouseout="hideTip(event, 'fs70', 192)" onmouseover="showTip(event, 'fs70', 192)" class="i">prog</span>,<span onmouseout="hideTip(event, 'fs21', 193)" onmouseover="showTip(event, 'fs21', 193)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs71', 194)" onmouseover="showTip(event, 'fs71', 194)" class="i">result</span>) <span class="k">-&gt;</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs66', 195)" onmouseover="showTip(event, 'fs66', 195)" class="i">optimal</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 196)" onmouseover="showTip(event, 'fs72', 196)" class="f">ContainsKey</span> <span onmouseout="hideTip(event, 'fs71', 197)" onmouseover="showTip(event, 'fs71', 197)" class="i">result</span> <span class="o">=</span> <span class="k">true</span>
                               <span class="k">then</span> <span onmouseout="hideTip(event, 'fs67', 198)" onmouseover="showTip(event, 'fs67', 198)" class="f">printfn</span> <span class="s">&quot; Source:  </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs70', 199)" onmouseover="showTip(event, 'fs70', 199)" class="i">prog</span>
                                    <span onmouseout="hideTip(event, 'fs67', 200)" onmouseover="showTip(event, 'fs67', 200)" class="f">printfn</span> <span class="s">&quot;Optimal:  </span><span class="pf">%A</span><span class="s"></span><span class="e">\n</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs66', 201)" onmouseover="showTip(event, 'fs66', 201)" class="i">optimal</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs71', 202)" onmouseover="showTip(event, 'fs71', 202)" class="i">result</span>]
                               <span class="k">else</span> <span onmouseout="hideTip(event, 'fs67', 203)" onmouseover="showTip(event, 'fs67', 203)" class="f">printfn</span> <span class="s">&quot;Not found:  </span><span class="pf">%A</span><span class="s"></span><span class="e">\n</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs70', 204)" onmouseover="showTip(event, 'fs70', 204)" class="i">prog</span>
        | <span onmouseout="hideTip(event, 'fs70', 205)" onmouseover="showTip(event, 'fs70', 205)" class="i">prog</span>,<span onmouseout="hideTip(event, 'fs24', 206)" onmouseover="showTip(event, 'fs24', 206)" class="p">None</span>         <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs67', 207)" onmouseover="showTip(event, 'fs67', 207)" class="f">printfn</span> <span class="s">&quot;Invalid:  </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs70', 208)" onmouseover="showTip(event, 'fs70', 208)" class="i">prog</span> 


    <span class="c">// Functions to be optimized</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs73', 209)" onmouseover="showTip(event, 'fs73', 209)" class="i">progs</span> <span class="o">=</span> 
        [ [<span onmouseout="hideTip(event, 'fs3', 210)" onmouseover="showTip(event, 'fs3', 210)" class="p">Ldarg</span> <span class="n">0</span>; <span onmouseout="hideTip(event, 'fs3', 211)" onmouseover="showTip(event, 'fs3', 211)" class="p">Ldarg</span> <span class="n">1</span>; <span onmouseout="hideTip(event, 'fs6', 212)" onmouseover="showTip(event, 'fs6', 212)" class="p">Or</span>; <span onmouseout="hideTip(event, 'fs3', 213)" onmouseover="showTip(event, 'fs3', 213)" class="p">Ldarg</span> <span class="n">0</span>; <span onmouseout="hideTip(event, 'fs3', 214)" onmouseover="showTip(event, 'fs3', 214)" class="p">Ldarg</span> <span class="n">1</span>; <span onmouseout="hideTip(event, 'fs5', 215)" onmouseover="showTip(event, 'fs5', 215)" class="p">And</span>; <span onmouseout="hideTip(event, 'fs8', 216)" onmouseover="showTip(event, 'fs8', 216)" class="p">Not</span>; <span onmouseout="hideTip(event, 'fs5', 217)" onmouseover="showTip(event, 'fs5', 217)" class="p">And</span>]
          [<span onmouseout="hideTip(event, 'fs3', 218)" onmouseover="showTip(event, 'fs3', 218)" class="p">Ldarg</span> <span class="n">0</span>; <span onmouseout="hideTip(event, 'fs3', 219)" onmouseover="showTip(event, 'fs3', 219)" class="p">Ldarg</span> <span class="n">0</span>; <span onmouseout="hideTip(event, 'fs7', 220)" onmouseover="showTip(event, 'fs7', 220)" class="p">Xor</span>]
          [<span onmouseout="hideTip(event, 'fs3', 221)" onmouseover="showTip(event, 'fs3', 221)" class="p">Ldarg</span> <span class="n">0</span>; <span onmouseout="hideTip(event, 'fs10', 222)" onmouseover="showTip(event, 'fs10', 222)" class="p">Pop</span>]
          [<span onmouseout="hideTip(event, 'fs3', 223)" onmouseover="showTip(event, 'fs3', 223)" class="p">Ldarg</span> <span class="n">0</span>; <span onmouseout="hideTip(event, 'fs3', 224)" onmouseover="showTip(event, 'fs3', 224)" class="p">Ldarg</span> <span class="n">1</span>; <span onmouseout="hideTip(event, 'fs5', 225)" onmouseover="showTip(event, 'fs5', 225)" class="p">And</span>; <span onmouseout="hideTip(event, 'fs9', 226)" onmouseover="showTip(event, 'fs9', 226)" class="p">Dup</span>; <span onmouseout="hideTip(event, 'fs6', 227)" onmouseover="showTip(event, 'fs6', 227)" class="p">Or</span>]
          [<span onmouseout="hideTip(event, 'fs12', 228)" onmouseover="showTip(event, 'fs12', 228)" class="p">Zeros</span>; <span onmouseout="hideTip(event, 'fs8', 229)" onmouseover="showTip(event, 'fs8', 229)" class="p">Not</span>]
        ]

    <span onmouseout="hideTip(event, 'fs26', 230)" onmouseover="showTip(event, 'fs26', 230)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 231)" onmouseover="showTip(event, 'fs50', 231)" class="f">map</span> <span onmouseout="hideTip(event, 'fs25', 232)" onmouseover="showTip(event, 'fs25', 232)" class="f">truthtables</span> <span onmouseout="hideTip(event, 'fs73', 233)" onmouseover="showTip(event, 'fs73', 233)" class="i">progs</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs26', 234)" onmouseover="showTip(event, 'fs26', 234)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 235)" onmouseover="showTip(event, 'fs74', 235)" class="f">zip</span> <span onmouseout="hideTip(event, 'fs73', 236)" onmouseover="showTip(event, 'fs73', 236)" class="i">progs</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs26', 237)" onmouseover="showTip(event, 'fs26', 237)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs75', 238)" onmouseover="showTip(event, 'fs75', 238)" class="f">iter</span> <span onmouseout="hideTip(event, 'fs69', 239)" onmouseover="showTip(event, 'fs69', 239)" class="f">show</span>  

    <span class="c">//Console.ReadKey() |&gt; ignore</span>
    <span class="n">0</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">type ops =<br />&#160;&#160;| Ldarg of int<br />&#160;&#160;| And<br />&#160;&#160;| Or<br />&#160;&#160;| Xor<br />&#160;&#160;| Not<br />&#160;&#160;| Dup<br />&#160;&#160;| Pop<br />&#160;&#160;| Ones<br />&#160;&#160;| Zeros<br /><br />Full name: Script.ops</div>
<div class="tip" id="fs3">union case ops.Ldarg: int -&gt; ops</div>
<div class="tip" id="fs4">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs5">union case ops.And: ops</div>
<div class="tip" id="fs6">union case ops.Or: ops</div>
<div class="tip" id="fs7">union case ops.Xor: ops</div>
<div class="tip" id="fs8">union case ops.Not: ops</div>
<div class="tip" id="fs9">union case ops.Dup: ops</div>
<div class="tip" id="fs10">union case ops.Pop: ops</div>
<div class="tip" id="fs11">union case ops.Ones: ops</div>
<div class="tip" id="fs12">union case ops.Zeros: ops</div>
<div class="tip" id="fs13">Multiple items<br />type EntryPointAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; EntryPointAttribute<br /><br />Full name: Microsoft.FSharp.Core.EntryPointAttribute<br /><br />--------------------<br />new : unit -&gt; EntryPointAttribute</div>
<div class="tip" id="fs14">val main : argv:string [] -&gt; int<br /><br />Full name: Script.main</div>
<div class="tip" id="fs15">val argv : string []</div>
<div class="tip" id="fs16">val args : int []<br /><em><br /><br />&#160;Bit patterns for computing the truth table in parallel</em></div>
<div class="tip" id="fs17">val validinstructions : ops []<br /><em><br /><br />&#160;Instructions understood and used by the optimiser</em></div>
<div class="tip" id="fs18">val exec : (int list * ops -&gt; int list option)<br /><em><br /><br />&#160;Execute a single stack based instruction</em></div>
<div class="tip" id="fs19">val stk : int list</div>
<div class="tip" id="fs20">val n : int</div>
<div class="tip" id="fs21">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs22">val x : int</div>
<div class="tip" id="fs23">val y : int</div>
<div class="tip" id="fs24">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs25">val truthtables : (ops list -&gt; int list option)<br /><em><br /><br />&#160;Calculate one truth table for each return value of a function</em></div>
<div class="tip" id="fs26">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs27">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; list:&#39;T list -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.List.fold</div>
<div class="tip" id="fs28">val acc : int list option</div>
<div class="tip" id="fs29">val op : ops</div>
<div class="tip" id="fs30">val xs : int list</div>
<div class="tip" id="fs31">val increment : (int -&gt; int list -&gt; int list)<br /><em><br /><br />&#160;Increment a number in the form of a list of digits</em></div>
<div class="tip" id="fs32">val max : int</div>
<div class="tip" id="fs33">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs34">val makenumbers : (int -&gt; int -&gt; seq&lt;int list&gt;)<br /><em><br /><br />&#160;Create a list of all numbers of length and radix</em></div>
<div class="tip" id="fs35">val length : int</div>
<div class="tip" id="fs36">val radix : int</div>
<div class="tip" id="fs37">val loop : (int list -&gt; seq&lt;int list&gt;)</div>
<div class="tip" id="fs38">val number : int list</div>
<div class="tip" id="fs39">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs40">val init : length:int -&gt; initializer:(int -&gt; &#39;T) -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.init</div>
<div class="tip" id="fs41">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs42">val take : count:int -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.take</div>
<div class="tip" id="fs43">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs44">val createdictionary : (int -&gt; Map&lt;int list,ops list&gt;)<br /><em><br /><br />&#160;Populating the dictionary with the optimal functions,</em></div>
<div class="tip" id="fs45">val size : int</div>
<div class="tip" id="fs46">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs47">val i : int</div>
<div class="tip" id="fs48">property Array.Length: int</div>
<div class="tip" id="fs49">val concat : sources:seq&lt;#seq&lt;&#39;T&gt;&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.concat</div>
<div class="tip" id="fs50">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.map</div>
<div class="tip" id="fs51">val p : ops list</div>
<div class="tip" id="fs52">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs53">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; option:&#39;T option -&gt; &#39;U option<br /><br />Full name: Microsoft.FSharp.Core.Option.map</div>
<div class="tip" id="fs54">val x : int list</div>
<div class="tip" id="fs55">val choose : chooser:(&#39;T -&gt; &#39;U option) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.choose</div>
<div class="tip" id="fs56">val id : x:&#39;T -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.id</div>
<div class="tip" id="fs57">val distinctBy : projection:(&#39;T -&gt; &#39;Key) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt; (requires equality)<br /><br />Full name: Microsoft.FSharp.Collections.Seq.distinctBy</div>
<div class="tip" id="fs58">val fst : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T1<br /><br />Full name: Microsoft.FSharp.Core.Operators.fst</div>
<div class="tip" id="fs59">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.Seq.fold</div>
<div class="tip" id="fs60">val acc : Map&lt;int list,ops list&gt;</div>
<div class="tip" id="fs61">val a : int list</div>
<div class="tip" id="fs62">val b : ops list</div>
<div class="tip" id="fs63">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member Remove : key:&#39;Key -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Collections.Map&lt;_,_&gt;<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs64">val add : key:&#39;Key -&gt; value:&#39;T -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; Map&lt;&#39;Key,&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.add</div>
<div class="tip" id="fs65">val empty&lt;&#39;Key,&#39;T (requires comparison)&gt; : Map&lt;&#39;Key,&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Map.empty</div>
<div class="tip" id="fs66">val optimal : Map&lt;int list,ops list&gt;</div>
<div class="tip" id="fs67">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs68">property Map.Count: int</div>
<div class="tip" id="fs69">val show : (&#39;a * int list option -&gt; unit)<br /><em><br /><br />&#160;Display results</em></div>
<div class="tip" id="fs70">val prog : &#39;a</div>
<div class="tip" id="fs71">val result : int list</div>
<div class="tip" id="fs72">member Map.ContainsKey : key:&#39;Key -&gt; bool</div>
<div class="tip" id="fs73">val progs : ops list list</div>
<div class="tip" id="fs74">val zip : list1:&#39;T1 list -&gt; list2:&#39;T2 list -&gt; (&#39;T1 * &#39;T2) list<br /><br />Full name: Microsoft.FSharp.Collections.List.zip</div>
<div class="tip" id="fs75">val iter : action:(&#39;T -&gt; unit) -&gt; list:&#39;T list -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.List.iter</div>

