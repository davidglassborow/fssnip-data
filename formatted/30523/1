<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
<span class="l">74: </span>
<span class="l">75: </span>
<span class="l">76: </span>
<span class="l">77: </span>
<span class="l">78: </span>
<span class="l">79: </span>
<span class="l">80: </span>
<span class="l">81: </span>
<span class="l">82: </span>
<span class="l">83: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">/// Inclusive choice type based on Haskell&#39;s &quot;These&quot; type.</span>
<span class="k">type</span> <span class="t">Both</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">left</span>, <span class="o">&#39;</span><span class="i">right</span><span class="o">&gt;</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="p">Left</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">left</span>
    | <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="p">Right</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">right</span>
    | <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="p">Both</span> <span class="k">of</span> (<span class="o">&#39;</span><span class="i">left</span> <span class="o">*</span> <span class="o">&#39;</span><span class="i">right</span>)

<span class="k">module</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="t">Both</span> <span class="o">=</span>

    <span class="c">/// Zips two sequences together, producing a new sequence that</span>
    <span class="c">/// is the same length as the *longer* of the two inputs.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="f">align</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">lefts</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">rights</span> <span class="o">=</span>

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="f">pad</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">items</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">seq</span> {
                <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">items</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="f">map</span> <span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="p">Some</span>
                <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 16)" onmouseover="showTip(event, 'fs13', 16)" class="f">initInfinite</span> (<span class="k">fun</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="p">None</span>)
            }

        <span onmouseout="hideTip(event, 'fs10', 18)" onmouseover="showTip(event, 'fs10', 18)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 19)" onmouseover="showTip(event, 'fs15', 19)" class="f">zip</span> (<span onmouseout="hideTip(event, 'fs7', 20)" onmouseover="showTip(event, 'fs7', 20)" class="f">pad</span> <span onmouseout="hideTip(event, 'fs5', 21)" onmouseover="showTip(event, 'fs5', 21)" class="i">lefts</span>) (<span onmouseout="hideTip(event, 'fs7', 22)" onmouseover="showTip(event, 'fs7', 22)" class="f">pad</span> <span onmouseout="hideTip(event, 'fs6', 23)" onmouseover="showTip(event, 'fs6', 23)" class="i">rights</span>)
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 24)" onmouseover="showTip(event, 'fs10', 24)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 25)" onmouseover="showTip(event, 'fs16', 25)" class="f">takeWhile</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs17', 26)" onmouseover="showTip(event, 'fs17', 26)" class="i">leftOpt</span>, <span onmouseout="hideTip(event, 'fs18', 27)" onmouseover="showTip(event, 'fs18', 27)" class="i">rightOpt</span>) <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="i">leftOpt</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="i">IsSome</span> <span class="o">||</span> <span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="i">rightOpt</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="i">IsSome</span>)
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 32)" onmouseover="showTip(event, 'fs10', 32)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 33)" onmouseover="showTip(event, 'fs11', 33)" class="f">map</span> (<span class="k">function</span>
                | (<span onmouseout="hideTip(event, 'fs12', 34)" onmouseover="showTip(event, 'fs12', 34)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs20', 35)" onmouseover="showTip(event, 'fs20', 35)" class="i">left</span>, <span onmouseout="hideTip(event, 'fs14', 36)" onmouseover="showTip(event, 'fs14', 36)" class="p">None</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs1', 37)" onmouseover="showTip(event, 'fs1', 37)" class="p">Left</span> <span onmouseout="hideTip(event, 'fs20', 38)" onmouseover="showTip(event, 'fs20', 38)" class="i">left</span>
                | (<span onmouseout="hideTip(event, 'fs14', 39)" onmouseover="showTip(event, 'fs14', 39)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs12', 40)" onmouseover="showTip(event, 'fs12', 40)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs21', 41)" onmouseover="showTip(event, 'fs21', 41)" class="i">right</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 42)" onmouseover="showTip(event, 'fs2', 42)" class="p">Right</span> <span onmouseout="hideTip(event, 'fs21', 43)" onmouseover="showTip(event, 'fs21', 43)" class="i">right</span>
                | (<span onmouseout="hideTip(event, 'fs12', 44)" onmouseover="showTip(event, 'fs12', 44)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs20', 45)" onmouseover="showTip(event, 'fs20', 45)" class="i">left</span>, <span onmouseout="hideTip(event, 'fs12', 46)" onmouseover="showTip(event, 'fs12', 46)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs21', 47)" onmouseover="showTip(event, 'fs21', 47)" class="i">right</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs3', 48)" onmouseover="showTip(event, 'fs3', 48)" class="p">Both</span> (<span onmouseout="hideTip(event, 'fs20', 49)" onmouseover="showTip(event, 'fs20', 49)" class="i">left</span>, <span onmouseout="hideTip(event, 'fs21', 50)" onmouseover="showTip(event, 'fs21', 50)" class="i">right</span>)
                | (<span onmouseout="hideTip(event, 'fs14', 51)" onmouseover="showTip(event, 'fs14', 51)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs14', 52)" onmouseover="showTip(event, 'fs14', 52)" class="p">None</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs22', 53)" onmouseover="showTip(event, 'fs22', 53)" class="f">failwith</span> <span class="s">&quot;Impossible&quot;</span>)

    <span class="c">/// Splits a sequence of boths into its component parts.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 54)" onmouseover="showTip(event, 'fs23', 54)" class="f">unalign</span> <span onmouseout="hideTip(event, 'fs24', 55)" onmouseover="showTip(event, 'fs24', 55)" class="i">boths</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs24', 56)" onmouseover="showTip(event, 'fs24', 56)" class="i">boths</span>
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 57)" onmouseover="showTip(event, 'fs10', 57)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 58)" onmouseover="showTip(event, 'fs11', 58)" class="f">map</span> (<span class="k">function</span>
                | <span onmouseout="hideTip(event, 'fs1', 59)" onmouseover="showTip(event, 'fs1', 59)" class="p">Left</span> <span onmouseout="hideTip(event, 'fs20', 60)" onmouseover="showTip(event, 'fs20', 60)" class="i">left</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs12', 61)" onmouseover="showTip(event, 'fs12', 61)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs20', 62)" onmouseover="showTip(event, 'fs20', 62)" class="i">left</span>, <span onmouseout="hideTip(event, 'fs14', 63)" onmouseover="showTip(event, 'fs14', 63)" class="p">None</span>
                | <span onmouseout="hideTip(event, 'fs2', 64)" onmouseover="showTip(event, 'fs2', 64)" class="p">Right</span> <span onmouseout="hideTip(event, 'fs21', 65)" onmouseover="showTip(event, 'fs21', 65)" class="i">right</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 66)" onmouseover="showTip(event, 'fs14', 66)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs12', 67)" onmouseover="showTip(event, 'fs12', 67)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs21', 68)" onmouseover="showTip(event, 'fs21', 68)" class="i">right</span>
                | <span onmouseout="hideTip(event, 'fs3', 69)" onmouseover="showTip(event, 'fs3', 69)" class="p">Both</span> (<span onmouseout="hideTip(event, 'fs20', 70)" onmouseover="showTip(event, 'fs20', 70)" class="i">left</span>, <span onmouseout="hideTip(event, 'fs21', 71)" onmouseover="showTip(event, 'fs21', 71)" class="i">right</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs12', 72)" onmouseover="showTip(event, 'fs12', 72)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs20', 73)" onmouseover="showTip(event, 'fs20', 73)" class="i">left</span>, <span onmouseout="hideTip(event, 'fs12', 74)" onmouseover="showTip(event, 'fs12', 74)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs21', 75)" onmouseover="showTip(event, 'fs21', 75)" class="i">right</span>)

    <span class="c">/// Aligns and combines two sequences.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 76)" onmouseover="showTip(event, 'fs25', 76)" class="f">malign</span> (<span class="o">+</span>) <span onmouseout="hideTip(event, 'fs5', 77)" onmouseover="showTip(event, 'fs5', 77)" class="i">lefts</span> <span onmouseout="hideTip(event, 'fs26', 78)" onmouseover="showTip(event, 'fs26', 78)" class="i">rights</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs4', 79)" onmouseover="showTip(event, 'fs4', 79)" class="f">align</span> <span onmouseout="hideTip(event, 'fs5', 80)" onmouseover="showTip(event, 'fs5', 80)" class="i">lefts</span> <span onmouseout="hideTip(event, 'fs26', 81)" onmouseover="showTip(event, 'fs26', 81)" class="i">rights</span>
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 82)" onmouseover="showTip(event, 'fs10', 82)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs11', 83)" onmouseover="showTip(event, 'fs11', 83)" class="f">map</span> (<span class="k">function</span>
                | <span onmouseout="hideTip(event, 'fs1', 84)" onmouseover="showTip(event, 'fs1', 84)" class="p">Left</span> <span onmouseout="hideTip(event, 'fs20', 85)" onmouseover="showTip(event, 'fs20', 85)" class="i">left</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 86)" onmouseover="showTip(event, 'fs20', 86)" class="i">left</span>
                | <span onmouseout="hideTip(event, 'fs2', 87)" onmouseover="showTip(event, 'fs2', 87)" class="p">Right</span> <span onmouseout="hideTip(event, 'fs27', 88)" onmouseover="showTip(event, 'fs27', 88)" class="i">right</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs27', 89)" onmouseover="showTip(event, 'fs27', 89)" class="i">right</span>
                | <span onmouseout="hideTip(event, 'fs3', 90)" onmouseover="showTip(event, 'fs3', 90)" class="p">Both</span> (<span onmouseout="hideTip(event, 'fs20', 91)" onmouseover="showTip(event, 'fs20', 91)" class="i">left</span>, <span onmouseout="hideTip(event, 'fs27', 92)" onmouseover="showTip(event, 'fs27', 92)" class="i">right</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 93)" onmouseover="showTip(event, 'fs20', 93)" class="i">left</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs27', 94)" onmouseover="showTip(event, 'fs27', 94)" class="i">right</span>)

[&lt;<span onmouseout="hideTip(event, 'fs28', 95)" onmouseover="showTip(event, 'fs28', 95)" class="t">EntryPoint</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 96)" onmouseover="showTip(event, 'fs29', 96)" class="f">main</span> <span onmouseout="hideTip(event, 'fs30', 97)" onmouseover="showTip(event, 'fs30', 97)" class="i">argv</span> <span class="o">=</span>

    <span class="k">assert</span>(
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 98)" onmouseover="showTip(event, 'fs31', 98)" class="i">actual</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs32', 99)" onmouseover="showTip(event, 'fs32', 99)" class="t">Both</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 100)" onmouseover="showTip(event, 'fs4', 100)" class="f">align</span> [<span class="n">1</span>; <span class="n">2</span>; <span class="n">3</span>] [<span class="n">4</span>; <span class="n">5</span>]
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 101)" onmouseover="showTip(event, 'fs10', 101)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 102)" onmouseover="showTip(event, 'fs33', 102)" class="f">toList</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 103)" onmouseover="showTip(event, 'fs34', 103)" class="i">expected</span> <span class="o">=</span>
            [
                <span onmouseout="hideTip(event, 'fs32', 104)" onmouseover="showTip(event, 'fs32', 104)" class="p">Both</span> (<span class="n">1</span>, <span class="n">4</span>)
                <span onmouseout="hideTip(event, 'fs32', 105)" onmouseover="showTip(event, 'fs32', 105)" class="p">Both</span> (<span class="n">2</span>, <span class="n">5</span>)
                <span onmouseout="hideTip(event, 'fs1', 106)" onmouseover="showTip(event, 'fs1', 106)" class="p">Left</span> <span class="n">3</span>
            ]
        <span onmouseout="hideTip(event, 'fs31', 107)" onmouseover="showTip(event, 'fs31', 107)" class="i">actual</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 108)" onmouseover="showTip(event, 'fs34', 108)" class="i">expected</span>)

    <span class="k">assert</span>(
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 109)" onmouseover="showTip(event, 'fs35', 109)" class="i">actual</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs32', 110)" onmouseover="showTip(event, 'fs32', 110)" class="t">Both</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 111)" onmouseover="showTip(event, 'fs23', 111)" class="f">unalign</span> [
                <span onmouseout="hideTip(event, 'fs32', 112)" onmouseover="showTip(event, 'fs32', 112)" class="p">Both</span> (<span class="n">1</span>, <span class="s">&quot;one&quot;</span>)
                <span onmouseout="hideTip(event, 'fs1', 113)" onmouseover="showTip(event, 'fs1', 113)" class="p">Left</span> <span class="n">2</span>
                <span onmouseout="hideTip(event, 'fs32', 114)" onmouseover="showTip(event, 'fs32', 114)" class="p">Both</span> (<span class="n">3</span>, <span class="s">&quot;three&quot;</span>)
                <span onmouseout="hideTip(event, 'fs2', 115)" onmouseover="showTip(event, 'fs2', 115)" class="p">Right</span> <span class="s">&quot;four&quot;</span>
            ] <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 116)" onmouseover="showTip(event, 'fs10', 116)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 117)" onmouseover="showTip(event, 'fs33', 117)" class="f">toList</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 118)" onmouseover="showTip(event, 'fs36', 118)" class="i">expected</span> <span class="o">=</span>
            [
                <span onmouseout="hideTip(event, 'fs12', 119)" onmouseover="showTip(event, 'fs12', 119)" class="p">Some</span> <span class="n">1</span>, <span onmouseout="hideTip(event, 'fs12', 120)" onmouseover="showTip(event, 'fs12', 120)" class="p">Some</span> <span class="s">&quot;one&quot;</span>
                <span onmouseout="hideTip(event, 'fs12', 121)" onmouseover="showTip(event, 'fs12', 121)" class="p">Some</span> <span class="n">2</span>, <span onmouseout="hideTip(event, 'fs14', 122)" onmouseover="showTip(event, 'fs14', 122)" class="p">None</span>
                <span onmouseout="hideTip(event, 'fs12', 123)" onmouseover="showTip(event, 'fs12', 123)" class="p">Some</span> <span class="n">3</span>, <span onmouseout="hideTip(event, 'fs12', 124)" onmouseover="showTip(event, 'fs12', 124)" class="p">Some</span> <span class="s">&quot;three&quot;</span>
                <span onmouseout="hideTip(event, 'fs14', 125)" onmouseover="showTip(event, 'fs14', 125)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs12', 126)" onmouseover="showTip(event, 'fs12', 126)" class="p">Some</span> <span class="s">&quot;four&quot;</span>
            ]
        <span onmouseout="hideTip(event, 'fs35', 127)" onmouseover="showTip(event, 'fs35', 127)" class="i">actual</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs36', 128)" onmouseover="showTip(event, 'fs36', 128)" class="i">expected</span>)

    <span class="k">assert</span>(
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 129)" onmouseover="showTip(event, 'fs37', 129)" class="i">actual</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs32', 130)" onmouseover="showTip(event, 'fs32', 130)" class="t">Both</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 131)" onmouseover="showTip(event, 'fs25', 131)" class="f">malign</span> (<span class="o">+</span>) [<span class="n">1</span>; <span class="n">2</span>; <span class="n">3</span>] [<span class="n">4</span>; <span class="n">5</span>]
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 132)" onmouseover="showTip(event, 'fs10', 132)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 133)" onmouseover="showTip(event, 'fs33', 133)" class="f">toList</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 134)" onmouseover="showTip(event, 'fs38', 134)" class="i">expected</span> <span class="o">=</span> [<span class="n">5</span>; <span class="n">7</span>; <span class="n">3</span>]
        <span onmouseout="hideTip(event, 'fs37', 135)" onmouseover="showTip(event, 'fs37', 135)" class="i">actual</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 136)" onmouseover="showTip(event, 'fs38', 136)" class="i">expected</span>)

    <span class="n">0</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">union case Both.Left: &#39;left -&gt; Both&lt;&#39;left,&#39;right&gt;</div>
<div class="tip" id="fs2">union case Both.Right: &#39;right -&gt; Both&lt;&#39;left,&#39;right&gt;</div>
<div class="tip" id="fs3">Multiple items<br />union case Both.Both: (&#39;left * &#39;right) -&gt; Both&lt;&#39;left,&#39;right&gt;<br /><br />--------------------<br />type Both&lt;&#39;left,&#39;right&gt; =<br />&#160;&#160;| Left of &#39;left<br />&#160;&#160;| Right of &#39;right<br />&#160;&#160;| Both of (&#39;left * &#39;right)<br /><br />Full name: Script.Both&lt;_,_&gt;<br /><em><br /><br />&#160;Inclusive choice type based on Haskell&#39;s &quot;These&quot; type.</em></div>
<div class="tip" id="fs4">val align : lefts:seq&lt;&#39;a&gt; -&gt; rights:seq&lt;&#39;b&gt; -&gt; seq&lt;Both&lt;&#39;a,&#39;b&gt;&gt;<br /><br />Full name: Script.Both.align<br /><em><br /><br />&#160;Zips two sequences together, producing a new sequence that<br />&#160;is the same length as the *longer* of the two inputs.</em></div>
<div class="tip" id="fs5">val lefts : seq&lt;&#39;a&gt;</div>
<div class="tip" id="fs6">val rights : seq&lt;&#39;b&gt;</div>
<div class="tip" id="fs7">val pad : (seq&lt;&#39;c&gt; -&gt; seq&lt;&#39;c option&gt;)</div>
<div class="tip" id="fs8">val items : seq&lt;&#39;c&gt;</div>
<div class="tip" id="fs9">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = System.Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs10">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs11">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs12">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs13">val initInfinite : initializer:(int -&gt; &#39;T) -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.initInfinite</div>
<div class="tip" id="fs14">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs15">val zip : source1:seq&lt;&#39;T1&gt; -&gt; source2:seq&lt;&#39;T2&gt; -&gt; seq&lt;&#39;T1 * &#39;T2&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.zip</div>
<div class="tip" id="fs16">val takeWhile : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.takeWhile</div>
<div class="tip" id="fs17">val leftOpt : &#39;a option</div>
<div class="tip" id="fs18">val rightOpt : &#39;b option</div>
<div class="tip" id="fs19">property Option.IsSome: bool</div>
<div class="tip" id="fs20">val left : &#39;a</div>
<div class="tip" id="fs21">val right : &#39;b</div>
<div class="tip" id="fs22">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs23">val unalign : boths:seq&lt;Both&lt;&#39;a,&#39;b&gt;&gt; -&gt; seq&lt;&#39;a option * &#39;b option&gt;<br /><br />Full name: Script.Both.unalign<br /><em><br /><br />&#160;Splits a sequence of boths into its component parts.</em></div>
<div class="tip" id="fs24">val boths : seq&lt;Both&lt;&#39;a,&#39;b&gt;&gt;</div>
<div class="tip" id="fs25">val malign : op_Addition:(&#39;a -&gt; &#39;a -&gt; &#39;a) -&gt; lefts:seq&lt;&#39;a&gt; -&gt; rights:seq&lt;&#39;a&gt; -&gt; seq&lt;&#39;a&gt;<br /><br />Full name: Script.Both.malign<br /><em><br /><br />&#160;Aligns and combines two sequences.</em></div>
<div class="tip" id="fs26">val rights : seq&lt;&#39;a&gt;</div>
<div class="tip" id="fs27">val right : &#39;a</div>
<div class="tip" id="fs28">Multiple items<br />type EntryPointAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; EntryPointAttribute<br /><br />Full name: Microsoft.FSharp.Core.EntryPointAttribute<br /><br />--------------------<br />new : unit -&gt; EntryPointAttribute</div>
<div class="tip" id="fs29">val main : argv:string [] -&gt; int<br /><br />Full name: Script.main</div>
<div class="tip" id="fs30">val argv : string []</div>
<div class="tip" id="fs31">val actual : Both&lt;int,int&gt; list</div>
<div class="tip" id="fs32">Multiple items<br />union case Both.Both: (&#39;left * &#39;right) -&gt; Both&lt;&#39;left,&#39;right&gt;<br /><br />--------------------<br />module Both<br /><br />from Script<br /><br />--------------------<br />type Both&lt;&#39;left,&#39;right&gt; =<br />&#160;&#160;| Left of &#39;left<br />&#160;&#160;| Right of &#39;right<br />&#160;&#160;| Both of (&#39;left * &#39;right)<br /><br />Full name: Script.Both&lt;_,_&gt;<br /><em><br /><br />&#160;Inclusive choice type based on Haskell&#39;s &quot;These&quot; type.</em></div>
<div class="tip" id="fs33">val toList : source:seq&lt;&#39;T&gt; -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.Seq.toList</div>
<div class="tip" id="fs34">val expected : Both&lt;int,int&gt; list</div>
<div class="tip" id="fs35">val actual : (int option * string option) list</div>
<div class="tip" id="fs36">val expected : (int option * string option) list</div>
<div class="tip" id="fs37">val actual : int list</div>
<div class="tip" id="fs38">val expected : int list</div>

