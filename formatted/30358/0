<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Threading</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 4)" onmouseover="showTip(event, 'fs2', 4)" class="i">Threading</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">Tasks</span>

[&lt;<span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="t">AbstractClass</span>&gt;]
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="t">AsyncBuilderAbstract</span>() <span class="o">=</span>
    <span class="c">// AsyncBuilder is marked sealed, so we need this wrapper</span>
    <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="f">Zero</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="f">Zero</span>()
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="f">Return</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 14)" onmouseover="showTip(event, 'fs7', 14)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="f">Return</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="i">t</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 17)" onmouseover="showTip(event, 'fs9', 17)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="f">ReturnFrom</span> <span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 20)" onmouseover="showTip(event, 'fs7', 20)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="f">ReturnFrom</span> <span onmouseout="hideTip(event, 'fs14', 22)" onmouseover="showTip(event, 'fs14', 22)" class="i">t</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 23)" onmouseover="showTip(event, 'fs9', 23)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 24)" onmouseover="showTip(event, 'fs16', 24)" class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs17', 25)" onmouseover="showTip(event, 'fs17', 25)" class="i">f</span>,<span onmouseout="hideTip(event, 'fs18', 26)" onmouseover="showTip(event, 'fs18', 26)" class="f">g</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 27)" onmouseover="showTip(event, 'fs7', 27)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 28)" onmouseover="showTip(event, 'fs19', 28)" class="f">Bind</span>(<span onmouseout="hideTip(event, 'fs17', 29)" onmouseover="showTip(event, 'fs17', 29)" class="i">f</span>,<span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="f">g</span>)
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 31)" onmouseover="showTip(event, 'fs9', 31)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 32)" onmouseover="showTip(event, 'fs20', 32)" class="f">Combine</span>(<span onmouseout="hideTip(event, 'fs21', 33)" onmouseover="showTip(event, 'fs21', 33)" class="i">f</span>,<span onmouseout="hideTip(event, 'fs22', 34)" onmouseover="showTip(event, 'fs22', 34)" class="i">g</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 35)" onmouseover="showTip(event, 'fs7', 35)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 36)" onmouseover="showTip(event, 'fs23', 36)" class="f">Combine</span>(<span onmouseout="hideTip(event, 'fs21', 37)" onmouseover="showTip(event, 'fs21', 37)" class="i">f</span>,<span onmouseout="hideTip(event, 'fs22', 38)" onmouseover="showTip(event, 'fs22', 38)" class="i">g</span>)
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 39)" onmouseover="showTip(event, 'fs9', 39)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 40)" onmouseover="showTip(event, 'fs24', 40)" class="f">Delay</span> <span onmouseout="hideTip(event, 'fs25', 41)" onmouseover="showTip(event, 'fs25', 41)" class="f">f</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 42)" onmouseover="showTip(event, 'fs7', 42)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 43)" onmouseover="showTip(event, 'fs26', 43)" class="f">Delay</span> <span onmouseout="hideTip(event, 'fs25', 44)" onmouseover="showTip(event, 'fs25', 44)" class="f">f</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 45)" onmouseover="showTip(event, 'fs9', 45)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 46)" onmouseover="showTip(event, 'fs27', 46)" class="f">While</span>(<span onmouseout="hideTip(event, 'fs28', 47)" onmouseover="showTip(event, 'fs28', 47)" class="f">c</span>,<span onmouseout="hideTip(event, 'fs29', 48)" onmouseover="showTip(event, 'fs29', 48)" class="i">b</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 49)" onmouseover="showTip(event, 'fs7', 49)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 50)" onmouseover="showTip(event, 'fs30', 50)" class="f">While</span>(<span onmouseout="hideTip(event, 'fs28', 51)" onmouseover="showTip(event, 'fs28', 51)" class="f">c</span>,<span onmouseout="hideTip(event, 'fs29', 52)" onmouseover="showTip(event, 'fs29', 52)" class="i">b</span>)
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 53)" onmouseover="showTip(event, 'fs9', 53)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 54)" onmouseover="showTip(event, 'fs31', 54)" class="f">For</span>(<span onmouseout="hideTip(event, 'fs32', 55)" onmouseover="showTip(event, 'fs32', 55)" class="i">xs</span>,<span onmouseout="hideTip(event, 'fs33', 56)" onmouseover="showTip(event, 'fs33', 56)" class="f">b</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 57)" onmouseover="showTip(event, 'fs7', 57)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 58)" onmouseover="showTip(event, 'fs34', 58)" class="f">For</span>(<span onmouseout="hideTip(event, 'fs32', 59)" onmouseover="showTip(event, 'fs32', 59)" class="i">xs</span>,<span onmouseout="hideTip(event, 'fs33', 60)" onmouseover="showTip(event, 'fs33', 60)" class="f">b</span>)
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs9', 61)" onmouseover="showTip(event, 'fs9', 61)" class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 62)" onmouseover="showTip(event, 'fs35', 62)" class="f">TryWith</span>(<span onmouseout="hideTip(event, 'fs36', 63)" onmouseover="showTip(event, 'fs36', 63)" class="i">b</span>,<span onmouseout="hideTip(event, 'fs37', 64)" onmouseover="showTip(event, 'fs37', 64)" class="f">e</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 65)" onmouseover="showTip(event, 'fs7', 65)" class="i">async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 66)" onmouseover="showTip(event, 'fs38', 66)" class="f">TryWith</span>(<span onmouseout="hideTip(event, 'fs36', 67)" onmouseover="showTip(event, 'fs36', 67)" class="i">b</span>,<span onmouseout="hideTip(event, 'fs37', 68)" onmouseover="showTip(event, 'fs37', 68)" class="f">e</span>)

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs39', 69)" onmouseover="showTip(event, 'fs39', 69)" class="t">TaskBuilder</span>(<span class="o">?</span><span onmouseout="hideTip(event, 'fs40', 70)" onmouseover="showTip(event, 'fs40', 70)" class="i">ct</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs41', 71)" onmouseover="showTip(event, 'fs41', 71)" class="t">CancellationToken</span>) <span class="o">=</span>
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs5', 72)" onmouseover="showTip(event, 'fs5', 72)" class="t">AsyncBuilderAbstract</span>()
    <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs42', 73)" onmouseover="showTip(event, 'fs42', 73)" class="f">Run</span> <span onmouseout="hideTip(event, 'fs43', 74)" onmouseover="showTip(event, 'fs43', 74)" class="i">f</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs44', 75)" onmouseover="showTip(event, 'fs44', 75)" class="t">Task</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs45', 76)" onmouseover="showTip(event, 'fs45', 76)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 77)" onmouseover="showTip(event, 'fs46', 77)" class="f">StartAsTask</span>(<span onmouseout="hideTip(event, 'fs43', 78)" onmouseover="showTip(event, 'fs43', 78)" class="i">f</span>, <span class="o">?</span><span class="i">cancellationToken</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 79)" onmouseover="showTip(event, 'fs40', 79)" class="i">ct</span>)

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs47', 80)" onmouseover="showTip(event, 'fs47', 80)" class="t">UntypedTaskBuilder</span>(<span class="o">?</span><span onmouseout="hideTip(event, 'fs40', 81)" onmouseover="showTip(event, 'fs40', 81)" class="i">ct</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs41', 82)" onmouseover="showTip(event, 'fs41', 82)" class="t">CancellationToken</span>) <span class="o">=</span>
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs5', 83)" onmouseover="showTip(event, 'fs5', 83)" class="t">AsyncBuilderAbstract</span>()
    <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 84)" onmouseover="showTip(event, 'fs48', 84)" class="f">Run</span> <span onmouseout="hideTip(event, 'fs49', 85)" onmouseover="showTip(event, 'fs49', 85)" class="i">f</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs44', 86)" onmouseover="showTip(event, 'fs44', 86)" class="t">Task</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs45', 87)" onmouseover="showTip(event, 'fs45', 87)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 88)" onmouseover="showTip(event, 'fs46', 88)" class="f">StartAsTask</span>(<span onmouseout="hideTip(event, 'fs49', 89)" onmouseover="showTip(event, 'fs49', 89)" class="i">f</span>, <span class="o">?</span><span class="i">cancellationToken</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 90)" onmouseover="showTip(event, 'fs40', 90)" class="i">ct</span>) <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs44', 91)" onmouseover="showTip(event, 'fs44', 91)" class="t">Task</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 92)" onmouseover="showTip(event, 'fs50', 92)" class="i">task</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs39', 93)" onmouseover="showTip(event, 'fs39', 93)" class="t">TaskBuilder</span>()
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 94)" onmouseover="showTip(event, 'fs51', 94)" class="f">taskC</span> <span onmouseout="hideTip(event, 'fs52', 95)" onmouseover="showTip(event, 'fs52', 95)" class="i">ct</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs39', 96)" onmouseover="showTip(event, 'fs39', 96)" class="t">TaskBuilder</span>(<span onmouseout="hideTip(event, 'fs52', 97)" onmouseover="showTip(event, 'fs52', 97)" class="i">ct</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 98)" onmouseover="showTip(event, 'fs53', 98)" class="i">taskU</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs47', 99)" onmouseover="showTip(event, 'fs47', 99)" class="t">UntypedTaskBuilder</span>()

<span class="c">// Examples</span>

<span class="c">// Before:</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 100)" onmouseover="showTip(event, 'fs54', 100)" class="i">ct</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs41', 101)" onmouseover="showTip(event, 'fs41', 101)" class="t">CancellationToken</span>()

<span onmouseout="hideTip(event, 'fs7', 102)" onmouseover="showTip(event, 'fs7', 102)" class="i">async</span> {
    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs55', 103)" onmouseover="showTip(event, 'fs55', 103)" class="i">i</span> <span class="k">in</span> <span class="n">1</span> <span class="o">..</span> <span class="n">100</span> <span class="k">do</span> 
        <span onmouseout="hideTip(event, 'fs56', 104)" onmouseover="showTip(event, 'fs56', 104)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs55', 105)" onmouseover="showTip(event, 'fs55', 105)" class="i">i</span>
        <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs45', 106)" onmouseover="showTip(event, 'fs45', 106)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 107)" onmouseover="showTip(event, 'fs57', 107)" class="f">Sleep</span> <span class="n">10</span>
} <span class="o">|&gt;</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs58', 108)" onmouseover="showTip(event, 'fs58', 108)" class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs45', 109)" onmouseover="showTip(event, 'fs45', 109)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 110)" onmouseover="showTip(event, 'fs46', 110)" class="f">StartAsTask</span>(<span onmouseout="hideTip(event, 'fs58', 111)" onmouseover="showTip(event, 'fs58', 111)" class="i">a</span>, <span class="i">cancellationToken</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs54', 112)" onmouseover="showTip(event, 'fs54', 112)" class="i">ct</span>)

<span class="c">// After:</span>
<span onmouseout="hideTip(event, 'fs50', 113)" onmouseover="showTip(event, 'fs50', 113)" class="i">task</span> {
    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs55', 114)" onmouseover="showTip(event, 'fs55', 114)" class="i">i</span> <span class="k">in</span> <span class="n">1</span> <span class="o">..</span> <span class="n">100</span> <span class="k">do</span>
        <span onmouseout="hideTip(event, 'fs56', 115)" onmouseover="showTip(event, 'fs56', 115)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs55', 116)" onmouseover="showTip(event, 'fs55', 116)" class="i">i</span>
        <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs45', 117)" onmouseover="showTip(event, 'fs45', 117)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 118)" onmouseover="showTip(event, 'fs57', 118)" class="f">Sleep</span> <span class="n">10</span>
}

<span class="c">// with cancellation:</span>
<span onmouseout="hideTip(event, 'fs51', 119)" onmouseover="showTip(event, 'fs51', 119)" class="f">taskC</span> <span onmouseout="hideTip(event, 'fs54', 120)" onmouseover="showTip(event, 'fs54', 120)" class="i">ct</span> {
    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs55', 121)" onmouseover="showTip(event, 'fs55', 121)" class="i">i</span> <span class="k">in</span> <span class="n">1</span> <span class="o">..</span> <span class="n">100</span> <span class="k">do</span>
        <span onmouseout="hideTip(event, 'fs56', 122)" onmouseover="showTip(event, 'fs56', 122)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%d</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs55', 123)" onmouseover="showTip(event, 'fs55', 123)" class="i">i</span>
        <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs45', 124)" onmouseover="showTip(event, 'fs45', 124)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 125)" onmouseover="showTip(event, 'fs57', 125)" class="f">Sleep</span> <span class="n">10</span>
}
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Threading</div>
<div class="tip" id="fs3">namespace System.Threading.Tasks</div>
<div class="tip" id="fs4">Multiple items<br />type AbstractClassAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AbstractClassAttribute<br /><br />Full name: Microsoft.FSharp.Core.AbstractClassAttribute<br /><br />--------------------<br />new : unit -&gt; AbstractClassAttribute</div>
<div class="tip" id="fs5">Multiple items<br />type AsyncBuilderAbstract =<br />&#160;&#160;new : unit -&gt; AsyncBuilderAbstract<br />&#160;&#160;member Bind : f:Async&lt;&#39;e&gt; * g:(&#39;e -&gt; Async&lt;&#39;f&gt;) -&gt; Async&lt;&#39;f&gt;<br />&#160;&#160;member Combine : f:Async&lt;unit&gt; * g:Async&lt;&#39;d&gt; -&gt; Async&lt;&#39;d&gt;<br />&#160;&#160;member Delay : f:(unit -&gt; Async&lt;&#39;c&gt;) -&gt; Async&lt;&#39;c&gt;<br />&#160;&#160;member For : xs:seq&lt;&#39;b&gt; * b:(&#39;b -&gt; Async&lt;unit&gt;) -&gt; Async&lt;unit&gt;<br />&#160;&#160;member Return : t:&#39;h -&gt; Async&lt;&#39;h&gt;<br />&#160;&#160;member ReturnFrom : t:Async&lt;&#39;g&gt; -&gt; Async&lt;&#39;g&gt;<br />&#160;&#160;member TryWith : b:Async&lt;&#39;a&gt; * e:(exn -&gt; Async&lt;&#39;a&gt;) -&gt; Async&lt;&#39;a&gt;<br />&#160;&#160;member While : c:(unit -&gt; bool) * b:Async&lt;unit&gt; -&gt; Async&lt;unit&gt;<br />&#160;&#160;member Zero : unit -&gt; Async&lt;unit&gt;<br /><br />Full name: Script.AsyncBuilderAbstract<br /><br />--------------------<br />new : unit -&gt; AsyncBuilderAbstract</div>
<div class="tip" id="fs6">member AsyncBuilderAbstract.Zero : unit -&gt; Async&lt;unit&gt;<br /><br />Full name: Script.AsyncBuilderAbstract.Zero</div>
<div class="tip" id="fs7">val async : AsyncBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.async</div>
<div class="tip" id="fs8">member AsyncBuilder.Zero : unit -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs9">val __ : AsyncBuilderAbstract</div>
<div class="tip" id="fs10">member AsyncBuilderAbstract.Return : t:&#39;h -&gt; Async&lt;&#39;h&gt;<br /><br />Full name: Script.AsyncBuilderAbstract.Return</div>
<div class="tip" id="fs11">val t : &#39;h</div>
<div class="tip" id="fs12">member AsyncBuilder.Return : value:&#39;T -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs13">member AsyncBuilderAbstract.ReturnFrom : t:Async&lt;&#39;g&gt; -&gt; Async&lt;&#39;g&gt;<br /><br />Full name: Script.AsyncBuilderAbstract.ReturnFrom</div>
<div class="tip" id="fs14">val t : Async&lt;&#39;g&gt;</div>
<div class="tip" id="fs15">member AsyncBuilder.ReturnFrom : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs16">member AsyncBuilderAbstract.Bind : f:Async&lt;&#39;e&gt; * g:(&#39;e -&gt; Async&lt;&#39;f&gt;) -&gt; Async&lt;&#39;f&gt;<br /><br />Full name: Script.AsyncBuilderAbstract.Bind</div>
<div class="tip" id="fs17">val f : Async&lt;&#39;e&gt;</div>
<div class="tip" id="fs18">val g : (&#39;e -&gt; Async&lt;&#39;f&gt;)</div>
<div class="tip" id="fs19">member AsyncBuilder.Bind : computation:Async&lt;&#39;T&gt; * binder:(&#39;T -&gt; Async&lt;&#39;U&gt;) -&gt; Async&lt;&#39;U&gt;</div>
<div class="tip" id="fs20">member AsyncBuilderAbstract.Combine : f:Async&lt;unit&gt; * g:Async&lt;&#39;d&gt; -&gt; Async&lt;&#39;d&gt;<br /><br />Full name: Script.AsyncBuilderAbstract.Combine</div>
<div class="tip" id="fs21">val f : Async&lt;unit&gt;</div>
<div class="tip" id="fs22">val g : Async&lt;&#39;d&gt;</div>
<div class="tip" id="fs23">member AsyncBuilder.Combine : computation1:Async&lt;unit&gt; * computation2:Async&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs24">member AsyncBuilderAbstract.Delay : f:(unit -&gt; Async&lt;&#39;c&gt;) -&gt; Async&lt;&#39;c&gt;<br /><br />Full name: Script.AsyncBuilderAbstract.Delay</div>
<div class="tip" id="fs25">val f : (unit -&gt; Async&lt;&#39;c&gt;)</div>
<div class="tip" id="fs26">member AsyncBuilder.Delay : generator:(unit -&gt; Async&lt;&#39;T&gt;) -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs27">member AsyncBuilderAbstract.While : c:(unit -&gt; bool) * b:Async&lt;unit&gt; -&gt; Async&lt;unit&gt;<br /><br />Full name: Script.AsyncBuilderAbstract.While</div>
<div class="tip" id="fs28">val c : (unit -&gt; bool)</div>
<div class="tip" id="fs29">val b : Async&lt;unit&gt;</div>
<div class="tip" id="fs30">member AsyncBuilder.While : guard:(unit -&gt; bool) * computation:Async&lt;unit&gt; -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs31">member AsyncBuilderAbstract.For : xs:seq&lt;&#39;b&gt; * b:(&#39;b -&gt; Async&lt;unit&gt;) -&gt; Async&lt;unit&gt;<br /><br />Full name: Script.AsyncBuilderAbstract.For</div>
<div class="tip" id="fs32">val xs : seq&lt;&#39;b&gt;</div>
<div class="tip" id="fs33">val b : (&#39;b -&gt; Async&lt;unit&gt;)</div>
<div class="tip" id="fs34">member AsyncBuilder.For : sequence:seq&lt;&#39;T&gt; * body:(&#39;T -&gt; Async&lt;unit&gt;) -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs35">member AsyncBuilderAbstract.TryWith : b:Async&lt;&#39;a&gt; * e:(exn -&gt; Async&lt;&#39;a&gt;) -&gt; Async&lt;&#39;a&gt;<br /><br />Full name: Script.AsyncBuilderAbstract.TryWith</div>
<div class="tip" id="fs36">val b : Async&lt;&#39;a&gt;</div>
<div class="tip" id="fs37">val e : (exn -&gt; Async&lt;&#39;a&gt;)</div>
<div class="tip" id="fs38">member AsyncBuilder.TryWith : computation:Async&lt;&#39;T&gt; * catchHandler:(exn -&gt; Async&lt;&#39;T&gt;) -&gt; Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs39">Multiple items<br />type TaskBuilder =<br />&#160;&#160;inherit AsyncBuilderAbstract<br />&#160;&#160;new : ?ct:CancellationToken -&gt; TaskBuilder<br />&#160;&#160;member Run : f:Async&lt;&#39;T&gt; -&gt; Task&lt;&#39;T&gt;<br /><br />Full name: Script.TaskBuilder<br /><br />--------------------<br />new : ?ct:CancellationToken -&gt; TaskBuilder</div>
<div class="tip" id="fs40">val ct : CancellationToken option</div>
<div class="tip" id="fs41">Multiple items<br />type CancellationToken =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : canceled:bool -&gt; CancellationToken<br />&#160;&#160;&#160;&#160;member CanBeCanceled : bool<br />&#160;&#160;&#160;&#160;member Equals : other:CancellationToken -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member IsCancellationRequested : bool<br />&#160;&#160;&#160;&#160;member Register : callback:Action -&gt; CancellationTokenRegistration + 3 overloads<br />&#160;&#160;&#160;&#160;member ThrowIfCancellationRequested : unit -&gt; unit<br />&#160;&#160;&#160;&#160;member WaitHandle : WaitHandle<br />&#160;&#160;&#160;&#160;static member None : CancellationToken<br />&#160;&#160;end<br /><br />Full name: System.Threading.CancellationToken<br /><br />--------------------<br />CancellationToken()<br />CancellationToken(canceled: bool) : unit</div>
<div class="tip" id="fs42">member TaskBuilder.Run : f:Async&lt;&#39;T&gt; -&gt; Task&lt;&#39;T&gt;<br /><br />Full name: Script.TaskBuilder.Run</div>
<div class="tip" id="fs43">val f : Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs44">Multiple items<br />type Task =<br />&#160;&#160;new : action:Action -&gt; Task + 7 overloads<br />&#160;&#160;member AsyncState : obj<br />&#160;&#160;member ContinueWith : continuationAction:Action&lt;Task&gt; -&gt; Task + 9 overloads<br />&#160;&#160;member CreationOptions : TaskCreationOptions<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member Exception : AggregateException<br />&#160;&#160;member Id : int<br />&#160;&#160;member IsCanceled : bool<br />&#160;&#160;member IsCompleted : bool<br />&#160;&#160;member IsFaulted : bool<br />&#160;&#160;...<br /><br />Full name: System.Threading.Tasks.Task<br /><br />--------------------<br />type Task&lt;&#39;TResult&gt; =<br />&#160;&#160;inherit Task<br />&#160;&#160;new : function:Func&lt;&#39;TResult&gt; -&gt; Task&lt;&#39;TResult&gt; + 7 overloads<br />&#160;&#160;member ContinueWith : continuationAction:Action&lt;Task&lt;&#39;TResult&gt;&gt; -&gt; Task + 9 overloads<br />&#160;&#160;member Result : &#39;TResult with get, set<br />&#160;&#160;static member Factory : TaskFactory&lt;&#39;TResult&gt;<br /><br />Full name: System.Threading.Tasks.Task&lt;_&gt;<br /><br />--------------------<br />Task(action: System.Action) : unit<br />Task(action: System.Action, cancellationToken: CancellationToken) : unit<br />Task(action: System.Action, creationOptions: TaskCreationOptions) : unit<br />Task(action: System.Action&lt;obj&gt;, state: obj) : unit<br />Task(action: System.Action, cancellationToken: CancellationToken, creationOptions: TaskCreationOptions) : unit<br />Task(action: System.Action&lt;obj&gt;, state: obj, cancellationToken: CancellationToken) : unit<br />Task(action: System.Action&lt;obj&gt;, state: obj, creationOptions: TaskCreationOptions) : unit<br />Task(action: System.Action&lt;obj&gt;, state: obj, cancellationToken: CancellationToken, creationOptions: TaskCreationOptions) : unit<br /><br />--------------------<br />Task(function: System.Func&lt;&#39;TResult&gt;) : unit<br />Task(function: System.Func&lt;&#39;TResult&gt;, cancellationToken: CancellationToken) : unit<br />Task(function: System.Func&lt;&#39;TResult&gt;, creationOptions: TaskCreationOptions) : unit<br />Task(function: System.Func&lt;obj,&#39;TResult&gt;, state: obj) : unit<br />Task(function: System.Func&lt;&#39;TResult&gt;, cancellationToken: CancellationToken, creationOptions: TaskCreationOptions) : unit<br />Task(function: System.Func&lt;obj,&#39;TResult&gt;, state: obj, cancellationToken: CancellationToken) : unit<br />Task(function: System.Func&lt;obj,&#39;TResult&gt;, state: obj, creationOptions: TaskCreationOptions) : unit<br />Task(function: System.Func&lt;obj,&#39;TResult&gt;, state: obj, cancellationToken: CancellationToken, creationOptions: TaskCreationOptions) : unit</div>
<div class="tip" id="fs45">Multiple items<br />type Async<br />static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member AwaitTask : task:Task -&gt; Async&lt;unit&gt;<br />static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member CancelDefaultToken : unit -&gt; unit<br />static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromContinuations : callback:((&#39;T -&gt; unit) * (exn -&gt; unit) * (OperationCanceledException -&gt; unit) -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;<br />static member OnCancel : interruption:(unit -&gt; unit) -&gt; Async&lt;IDisposable&gt;<br />static member Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;<br />static member RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T<br />static member Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;<br />static member Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;<br />static member StartChild : computation:Async&lt;&#39;T&gt; * ?millisecondsTimeout:int -&gt; Async&lt;Async&lt;&#39;T&gt;&gt;<br />static member StartChildAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions -&gt; Async&lt;Task&lt;&#39;T&gt;&gt;<br />static member StartImmediate : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartWithContinuations : computation:Async&lt;&#39;T&gt; * continuation:(&#39;T -&gt; unit) * exceptionContinuation:(exn -&gt; unit) * cancellationContinuation:(OperationCanceledException -&gt; unit) * ?cancellationToken:CancellationToken -&gt; unit<br />static member SwitchToContext : syncContext:SynchronizationContext -&gt; Async&lt;unit&gt;<br />static member SwitchToNewThread : unit -&gt; Async&lt;unit&gt;<br />static member SwitchToThreadPool : unit -&gt; Async&lt;unit&gt;<br />static member TryCancelled : computation:Async&lt;&#39;T&gt; * compensation:(OperationCanceledException -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member CancellationToken : Async&lt;CancellationToken&gt;<br />static member DefaultCancellationToken : CancellationToken<br /><br />Full name: Microsoft.FSharp.Control.Async<br /><br />--------------------<br />type Async&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Async&lt;_&gt;</div>
<div class="tip" id="fs46">static member Async.StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;</div>
<div class="tip" id="fs47">Multiple items<br />type UntypedTaskBuilder =<br />&#160;&#160;inherit AsyncBuilderAbstract<br />&#160;&#160;new : ?ct:CancellationToken -&gt; UntypedTaskBuilder<br />&#160;&#160;member Run : f:Async&lt;&#39;a&gt; -&gt; Task<br /><br />Full name: Script.UntypedTaskBuilder<br /><br />--------------------<br />new : ?ct:CancellationToken -&gt; UntypedTaskBuilder</div>
<div class="tip" id="fs48">member UntypedTaskBuilder.Run : f:Async&lt;&#39;a&gt; -&gt; Task<br /><br />Full name: Script.UntypedTaskBuilder.Run</div>
<div class="tip" id="fs49">val f : Async&lt;&#39;a&gt;</div>
<div class="tip" id="fs50">val task : TaskBuilder<br /><br />Full name: Script.task</div>
<div class="tip" id="fs51">val taskC : ct:CancellationToken -&gt; TaskBuilder<br /><br />Full name: Script.taskC</div>
<div class="tip" id="fs52">val ct : CancellationToken</div>
<div class="tip" id="fs53">val taskU : UntypedTaskBuilder<br /><br />Full name: Script.taskU</div>
<div class="tip" id="fs54">val ct : CancellationToken<br /><br />Full name: Script.ct</div>
<div class="tip" id="fs55">val i : int</div>
<div class="tip" id="fs56">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs57">static member Async.Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs58">val a : Async&lt;unit&gt;</div>

