<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
<span class="l">74: </span>
<span class="l">75: </span>
<span class="l">76: </span>
<span class="l">77: </span>
<span class="l">78: </span>
<span class="l">79: </span>
<span class="l">80: </span>
<span class="l">81: </span>
<span class="l">82: </span>
<span class="l">83: </span>
<span class="l">84: </span>
<span class="l">85: </span>
<span class="l">86: </span>
<span class="l">87: </span>
<span class="l">88: </span>
<span class="l">89: </span>
<span class="l">90: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">FParsecCombinators</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">FParsec</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">System</span>

<span class="k">exception</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">Error</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">string</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">Arg</span> <span class="o">=</span> 
    | <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="p">WithType</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="t">string</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="t">string</span>
    | <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="p">NoType</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 11)" onmouseover="showTip(event, 'fs5', 11)" class="t">string</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="t">LocaleContents</span> <span class="o">=</span> 
    | <span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="p">Argument</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs6', 14)" onmouseover="showTip(event, 'fs6', 14)" class="t">Arg</span>
    | <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="p">Text</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 16)" onmouseover="showTip(event, 'fs5', 16)" class="t">string</span>
    | <span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="p">Line</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs9', 18)" onmouseover="showTip(event, 'fs9', 18)" class="t">LocaleContents</span> <span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="t">list</span>
    | <span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="p">Comment</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 21)" onmouseover="showTip(event, 'fs5', 21)" class="t">string</span>
    | <span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="p">NewLine</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="t">Locale</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="p">Entry</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 25)" onmouseover="showTip(event, 'fs5', 25)" class="t">string</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs9', 26)" onmouseover="showTip(event, 'fs9', 26)" class="t">LocaleContents</span>
    | <span onmouseout="hideTip(event, 'fs18', 27)" onmouseover="showTip(event, 'fs18', 27)" class="p">IgnoreEntry</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs9', 28)" onmouseover="showTip(event, 'fs9', 28)" class="t">LocaleContents</span>

<span class="c">(*</span>
<span class="c">    Utilities</span>
<span class="c">*)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="f">brackets</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 30)" onmouseover="showTip(event, 'fs20', 30)" class="f">isAnyOf</span> [<span class="s">&#39;{&#39;</span>;<span class="s">&#39;}&#39;</span>]
    
 <span class="c">(* non new line space *)</span>  
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="f">regSpace</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 32)" onmouseover="showTip(event, 'fs22', 32)" class="f">manySatisfy</span> (<span onmouseout="hideTip(event, 'fs20', 33)" onmouseover="showTip(event, 'fs20', 33)" class="f">isAnyOf</span> [<span class="s">&#39; &#39;</span>;<span class="s">&#39;\t&#39;</span>])
  
<span class="c">(* any string literal that is charcaters *)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 34)" onmouseover="showTip(event, 'fs23', 34)" class="f">phrase</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 35)" onmouseover="showTip(event, 'fs24', 35)" class="f">many1Chars</span> (<span onmouseout="hideTip(event, 'fs25', 36)" onmouseover="showTip(event, 'fs25', 36)" class="f">satisfy</span> (<span onmouseout="hideTip(event, 'fs26', 37)" onmouseover="showTip(event, 'fs26', 37)" class="f">isNoneOf</span> [<span class="s">&#39;{&#39;</span>;<span class="s">&#39;\n&#39;</span>]))
  
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 38)" onmouseover="showTip(event, 'fs27', 38)" class="f">singleWord</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 39)" onmouseover="showTip(event, 'fs24', 39)" class="f">many1Chars</span> (<span onmouseout="hideTip(event, 'fs25', 40)" onmouseover="showTip(event, 'fs25', 40)" class="f">satisfy</span> <span onmouseout="hideTip(event, 'fs28', 41)" onmouseover="showTip(event, 'fs28', 41)" class="f">isDigit</span> <span class="o">&lt;|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 42)" onmouseover="showTip(event, 'fs25', 42)" class="f">satisfy</span> <span onmouseout="hideTip(event, 'fs29', 43)" onmouseover="showTip(event, 'fs29', 43)" class="f">isLetter</span> <span class="o">&lt;|&gt;</span> <span onmouseout="hideTip(event, 'fs25', 44)" onmouseover="showTip(event, 'fs25', 44)" class="f">satisfy</span> (<span onmouseout="hideTip(event, 'fs20', 45)" onmouseover="showTip(event, 'fs20', 45)" class="f">isAnyOf</span> [<span class="s">&#39;_&#39;</span>;<span class="s">&#39;-&#39;</span>]))

<span class="c">(* utility method to set between parsers space agnostic *)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 46)" onmouseover="showTip(event, 'fs30', 46)" class="f">between</span> <span onmouseout="hideTip(event, 'fs31', 47)" onmouseover="showTip(event, 'fs31', 47)" class="i">x</span> <span onmouseout="hideTip(event, 'fs32', 48)" onmouseover="showTip(event, 'fs32', 48)" class="i">y</span> <span onmouseout="hideTip(event, 'fs33', 49)" onmouseover="showTip(event, 'fs33', 49)" class="f">p</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 50)" onmouseover="showTip(event, 'fs34', 50)" class="f">pstring</span> <span onmouseout="hideTip(event, 'fs31', 51)" onmouseover="showTip(event, 'fs31', 51)" class="i">x</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs21', 52)" onmouseover="showTip(event, 'fs21', 52)" class="f">regSpace</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs33', 53)" onmouseover="showTip(event, 'fs33', 53)" class="f">p</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs21', 54)" onmouseover="showTip(event, 'fs21', 54)" class="f">regSpace</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs34', 55)" onmouseover="showTip(event, 'fs34', 55)" class="f">pstring</span> <span onmouseout="hideTip(event, 'fs32', 56)" onmouseover="showTip(event, 'fs32', 56)" class="i">y</span>

<span class="c">(*</span>
<span class="c">    Arguments</span>
<span class="c">*)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 57)" onmouseover="showTip(event, 'fs35', 57)" class="f">argDelim</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 58)" onmouseover="showTip(event, 'fs34', 58)" class="f">pstring</span> <span class="s">&quot;:&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 59)" onmouseover="showTip(event, 'fs36', 59)" class="f">argumentNoType</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 60)" onmouseover="showTip(event, 'fs27', 60)" class="f">singleWord</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs8', 61)" onmouseover="showTip(event, 'fs8', 61)" class="p">NoType</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 62)" onmouseover="showTip(event, 'fs37', 62)" class="f">argumentWithType</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 63)" onmouseover="showTip(event, 'fs27', 63)" class="f">singleWord</span> <span class="o">.</span><span class="o">&gt;&gt;.?</span> (<span onmouseout="hideTip(event, 'fs35', 64)" onmouseover="showTip(event, 'fs35', 64)" class="f">argDelim</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs27', 65)" onmouseover="showTip(event, 'fs27', 65)" class="f">singleWord</span>) <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs7', 66)" onmouseover="showTip(event, 'fs7', 66)" class="p">WithType</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 67)" onmouseover="showTip(event, 'fs38', 67)" class="f">arg</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs37', 68)" onmouseover="showTip(event, 'fs37', 68)" class="f">argumentWithType</span> <span class="o">&lt;|&gt;</span> <span onmouseout="hideTip(event, 'fs36', 69)" onmouseover="showTip(event, 'fs36', 69)" class="f">argumentNoType</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 70)" onmouseover="showTip(event, 'fs30', 70)" class="f">between</span> <span class="s">&quot;{&quot;</span> <span class="s">&quot;}&quot;</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs10', 71)" onmouseover="showTip(event, 'fs10', 71)" class="p">Argument</span>

<span class="c">(*</span>
<span class="c">    Text Elements</span>
<span class="c">*)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 72)" onmouseover="showTip(event, 'fs39', 72)" class="f">textElement</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 73)" onmouseover="showTip(event, 'fs23', 73)" class="f">phrase</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs11', 74)" onmouseover="showTip(event, 'fs11', 74)" class="p">Text</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 75)" onmouseover="showTip(event, 'fs40', 75)" class="f">newLine</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs41', 76)" onmouseover="showTip(event, 'fs41', 76)" class="f">unicodeNewline</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">?</span> <span onmouseout="hideTip(event, 'fs21', 77)" onmouseover="showTip(event, 'fs21', 77)" class="f">regSpace</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">?</span> <span onmouseout="hideTip(event, 'fs34', 78)" onmouseover="showTip(event, 'fs34', 78)" class="f">pstring</span> <span class="s">&quot;=&quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs15', 79)" onmouseover="showTip(event, 'fs15', 79)" class="p">NewLine</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 80)" onmouseover="showTip(event, 'fs42', 80)" class="f">line</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs43', 81)" onmouseover="showTip(event, 'fs43', 81)" class="f">many</span> (<span onmouseout="hideTip(event, 'fs21', 82)" onmouseover="showTip(event, 'fs21', 82)" class="f">regSpace</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">?</span> (<span onmouseout="hideTip(event, 'fs38', 83)" onmouseover="showTip(event, 'fs38', 83)" class="f">arg</span> <span class="o">&lt;|&gt;</span> <span onmouseout="hideTip(event, 'fs39', 84)" onmouseover="showTip(event, 'fs39', 84)" class="f">textElement</span> <span class="o">&lt;|&gt;</span> <span onmouseout="hideTip(event, 'fs40', 85)" onmouseover="showTip(event, 'fs40', 85)" class="f">newLine</span>)) <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs12', 86)" onmouseover="showTip(event, 'fs12', 86)" class="p">Line</span>

<span class="c">(*</span>
<span class="c">    Entries</span>
<span class="c">*)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 87)" onmouseover="showTip(event, 'fs44', 87)" class="f">delim</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 88)" onmouseover="showTip(event, 'fs21', 88)" class="f">regSpace</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs34', 89)" onmouseover="showTip(event, 'fs34', 89)" class="f">pstring</span> <span class="s">&quot;=&quot;</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs21', 90)" onmouseover="showTip(event, 'fs21', 90)" class="f">regSpace</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs45', 91)" onmouseover="showTip(event, 'fs45', 91)" class="f">identifier</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 92)" onmouseover="showTip(event, 'fs21', 92)" class="f">regSpace</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs27', 93)" onmouseover="showTip(event, 'fs27', 93)" class="f">singleWord</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs44', 94)" onmouseover="showTip(event, 'fs44', 94)" class="f">delim</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 95)" onmouseover="showTip(event, 'fs46', 95)" class="f">localeElement</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs47', 96)" onmouseover="showTip(event, 'fs47', 96)" class="f">unicodeSpaces</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">?</span> (<span onmouseout="hideTip(event, 'fs45', 97)" onmouseover="showTip(event, 'fs45', 97)" class="f">identifier</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span onmouseout="hideTip(event, 'fs42', 98)" onmouseover="showTip(event, 'fs42', 98)" class="f">line</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs48', 99)" onmouseover="showTip(event, 'fs48', 99)" class="f">skipRestOfLine</span> <span class="k">true</span>) <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs17', 100)" onmouseover="showTip(event, 'fs17', 100)" class="p">Entry</span>

<span class="c">(*</span>
<span class="c">    Comments</span>
<span class="c">*)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs49', 101)" onmouseover="showTip(event, 'fs49', 101)" class="f">comment</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 102)" onmouseover="showTip(event, 'fs34', 102)" class="f">pstring</span> <span class="s">&quot;#&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs50', 103)" onmouseover="showTip(event, 'fs50', 103)" class="f">restOfLine</span> <span class="k">false</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs14', 104)" onmouseover="showTip(event, 'fs14', 104)" class="p">Comment</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 105)" onmouseover="showTip(event, 'fs51', 105)" class="f">commentElement</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs47', 106)" onmouseover="showTip(event, 'fs47', 106)" class="f">unicodeSpaces</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">?</span> <span onmouseout="hideTip(event, 'fs49', 107)" onmouseover="showTip(event, 'fs49', 107)" class="f">comment</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs18', 108)" onmouseover="showTip(event, 'fs18', 108)" class="p">IgnoreEntry</span>

<span class="c">(*</span>
<span class="c">    Full Locale</span>
<span class="c">*)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs52', 109)" onmouseover="showTip(event, 'fs52', 109)" class="f">locale</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs43', 110)" onmouseover="showTip(event, 'fs43', 110)" class="f">many</span> (<span onmouseout="hideTip(event, 'fs51', 111)" onmouseover="showTip(event, 'fs51', 111)" class="f">commentElement</span> <span class="o">&lt;|&gt;</span> <span onmouseout="hideTip(event, 'fs46', 112)" onmouseover="showTip(event, 'fs46', 112)" class="f">localeElement</span>) <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs53', 113)" onmouseover="showTip(event, 'fs53', 113)" class="f">eof</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 114)" onmouseover="showTip(event, 'fs54', 114)" class="f">test</span> <span onmouseout="hideTip(event, 'fs55', 115)" onmouseover="showTip(event, 'fs55', 115)" class="i">input</span> <span class="o">=</span> <span class="k">match</span> <span onmouseout="hideTip(event, 'fs56', 116)" onmouseover="showTip(event, 'fs56', 116)" class="f">run</span> <span onmouseout="hideTip(event, 'fs52', 117)" onmouseover="showTip(event, 'fs52', 117)" class="f">locale</span> <span onmouseout="hideTip(event, 'fs55', 118)" onmouseover="showTip(event, 'fs55', 118)" class="i">input</span> <span class="k">with</span>
                    | <span onmouseout="hideTip(event, 'fs57', 119)" onmouseover="showTip(event, 'fs57', 119)" class="p">Success</span>(<span onmouseout="hideTip(event, 'fs58', 120)" onmouseover="showTip(event, 'fs58', 120)" class="i">r</span>,_,_) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs58', 121)" onmouseover="showTip(event, 'fs58', 121)" class="i">r</span>
                    | <span onmouseout="hideTip(event, 'fs59', 122)" onmouseover="showTip(event, 'fs59', 122)" class="p">Failure</span>(<span onmouseout="hideTip(event, 'fs60', 123)" onmouseover="showTip(event, 'fs60', 123)" class="i">r</span>,_,_) <span class="k">-&gt;</span> 
                            <span onmouseout="hideTip(event, 'fs61', 124)" onmouseover="showTip(event, 'fs61', 124)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 125)" onmouseover="showTip(event, 'fs62', 125)" class="f">WriteLine</span> <span onmouseout="hideTip(event, 'fs60', 126)" onmouseover="showTip(event, 'fs60', 126)" class="i">r</span>
                            <span onmouseout="hideTip(event, 'fs63', 127)" onmouseover="showTip(event, 'fs63', 127)" class="f">raise</span> (<span onmouseout="hideTip(event, 'fs4', 128)" onmouseover="showTip(event, 'fs4', 128)" class="t">Error</span>(<span onmouseout="hideTip(event, 'fs60', 129)" onmouseover="showTip(event, 'fs60', 129)" class="i">r</span>))
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module FParsecCombinators</div>
<div class="tip" id="fs2">namespace FParsec</div>
<div class="tip" id="fs3">namespace System</div>
<div class="tip" id="fs4">Multiple items<br />exception Error of string<br /><br />Full name: FParsecCombinators.Error<br /><br />--------------------<br />module Error<br /><br />from FParsec</div>
<div class="tip" id="fs5">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs6">type Arg =<br />&#160;&#160;| WithType of string * string<br />&#160;&#160;| NoType of string<br /><br />Full name: FParsecCombinators.Arg</div>
<div class="tip" id="fs7">union case Arg.WithType: string * string -&gt; Arg</div>
<div class="tip" id="fs8">union case Arg.NoType: string -&gt; Arg</div>
<div class="tip" id="fs9">type LocaleContents =<br />&#160;&#160;| Argument of Arg<br />&#160;&#160;| Text of string<br />&#160;&#160;| Line of LocaleContents list<br />&#160;&#160;| Comment of string<br />&#160;&#160;| NewLine<br /><br />Full name: FParsecCombinators.LocaleContents</div>
<div class="tip" id="fs10">union case LocaleContents.Argument: Arg -&gt; LocaleContents</div>
<div class="tip" id="fs11">Multiple items<br />union case LocaleContents.Text: string -&gt; LocaleContents<br /><br />--------------------<br />type Text =<br />&#160;&#160;static member CountTextElements : str:string -&gt; int<br />&#160;&#160;static member FoldCase : str:string -&gt; string + 1 overload<br />&#160;&#160;static member IsHighSurrogate : ch:char -&gt; bool<br />&#160;&#160;static member IsLowSurrogate : ch:char -&gt; bool<br />&#160;&#160;static member IsSurrogate : ch:char -&gt; bool<br />&#160;&#160;static member IsWhitespace : ch:char -&gt; bool<br />&#160;&#160;static member NormalizeNewlines : str:string -&gt; string<br /><br />Full name: FParsec.Text</div>
<div class="tip" id="fs12">union case LocaleContents.Line: LocaleContents list -&gt; LocaleContents</div>
<div class="tip" id="fs13">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs14">union case LocaleContents.Comment: string -&gt; LocaleContents</div>
<div class="tip" id="fs15">union case LocaleContents.NewLine: LocaleContents</div>
<div class="tip" id="fs16">type Locale =<br />&#160;&#160;| Entry of string * LocaleContents<br />&#160;&#160;| IgnoreEntry of LocaleContents<br /><br />Full name: FParsecCombinators.Locale</div>
<div class="tip" id="fs17">union case Locale.Entry: string * LocaleContents -&gt; Locale</div>
<div class="tip" id="fs18">union case Locale.IgnoreEntry: LocaleContents -&gt; Locale</div>
<div class="tip" id="fs19">val brackets : (char -&gt; bool)<br /><br />Full name: FParsecCombinators.brackets</div>
<div class="tip" id="fs20">val isAnyOf : seq&lt;char&gt; -&gt; (char -&gt; bool)<br /><br />Full name: FParsec.CharParsers.isAnyOf</div>
<div class="tip" id="fs21">val regSpace : Parser&lt;string,unit&gt;<br /><br />Full name: FParsecCombinators.regSpace</div>
<div class="tip" id="fs22">val manySatisfy : (char -&gt; bool) -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.manySatisfy</div>
<div class="tip" id="fs23">val phrase : Parser&lt;string,unit&gt;<br /><br />Full name: FParsecCombinators.phrase</div>
<div class="tip" id="fs24">val many1Chars : Parser&lt;char,&#39;u&gt; -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.many1Chars</div>
<div class="tip" id="fs25">val satisfy : (char -&gt; bool) -&gt; Parser&lt;char,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.satisfy</div>
<div class="tip" id="fs26">val isNoneOf : seq&lt;char&gt; -&gt; (char -&gt; bool)<br /><br />Full name: FParsec.CharParsers.isNoneOf</div>
<div class="tip" id="fs27">val singleWord : Parser&lt;string,unit&gt;<br /><br />Full name: FParsecCombinators.singleWord</div>
<div class="tip" id="fs28">val isDigit : char -&gt; bool<br /><br />Full name: FParsec.CharParsers.isDigit</div>
<div class="tip" id="fs29">val isLetter : char -&gt; bool<br /><br />Full name: FParsec.CharParsers.isLetter</div>
<div class="tip" id="fs30">val between : x:string -&gt; y:string -&gt; p:Parser&lt;&#39;a,unit&gt; -&gt; Parser&lt;&#39;a,unit&gt;<br /><br />Full name: FParsecCombinators.between</div>
<div class="tip" id="fs31">val x : string</div>
<div class="tip" id="fs32">val y : string</div>
<div class="tip" id="fs33">val p : Parser&lt;&#39;a,unit&gt;</div>
<div class="tip" id="fs34">val pstring : string -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.pstring</div>
<div class="tip" id="fs35">val argDelim : Parser&lt;string,unit&gt;<br /><br />Full name: FParsecCombinators.argDelim</div>
<div class="tip" id="fs36">val argumentNoType : Parser&lt;Arg,unit&gt;<br /><br />Full name: FParsecCombinators.argumentNoType</div>
<div class="tip" id="fs37">val argumentWithType : Parser&lt;Arg,unit&gt;<br /><br />Full name: FParsecCombinators.argumentWithType</div>
<div class="tip" id="fs38">val arg : Parser&lt;LocaleContents,unit&gt;<br /><br />Full name: FParsecCombinators.arg</div>
<div class="tip" id="fs39">val textElement : Parser&lt;LocaleContents,unit&gt;<br /><br />Full name: FParsecCombinators.textElement</div>
<div class="tip" id="fs40">val newLine : Parser&lt;LocaleContents,unit&gt;<br /><br />Full name: FParsecCombinators.newLine</div>
<div class="tip" id="fs41">val unicodeNewline&lt;&#39;u&gt; : Parser&lt;char,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.unicodeNewline</div>
<div class="tip" id="fs42">val line : Parser&lt;LocaleContents,unit&gt;<br /><br />Full name: FParsecCombinators.line</div>
<div class="tip" id="fs43">val many : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;a list,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.many</div>
<div class="tip" id="fs44">val delim : Parser&lt;string,unit&gt;<br /><br />Full name: FParsecCombinators.delim</div>
<div class="tip" id="fs45">val identifier : Parser&lt;string,unit&gt;<br /><br />Full name: FParsecCombinators.identifier</div>
<div class="tip" id="fs46">val localeElement : Parser&lt;Locale,unit&gt;<br /><br />Full name: FParsecCombinators.localeElement</div>
<div class="tip" id="fs47">val unicodeSpaces : Parser&lt;unit,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.unicodeSpaces</div>
<div class="tip" id="fs48">val skipRestOfLine : bool -&gt; Parser&lt;unit,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.skipRestOfLine</div>
<div class="tip" id="fs49">val comment : Parser&lt;LocaleContents,unit&gt;<br /><br />Full name: FParsecCombinators.comment</div>
<div class="tip" id="fs50">val restOfLine : bool -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.restOfLine</div>
<div class="tip" id="fs51">val commentElement : Parser&lt;Locale,unit&gt;<br /><br />Full name: FParsecCombinators.commentElement</div>
<div class="tip" id="fs52">val locale : Parser&lt;Locale list,unit&gt;<br /><br />Full name: FParsecCombinators.locale</div>
<div class="tip" id="fs53">val eof : Parser&lt;unit,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.eof</div>
<div class="tip" id="fs54">val test : input:string -&gt; Locale list<br /><br />Full name: FParsecCombinators.test</div>
<div class="tip" id="fs55">val input : string</div>
<div class="tip" id="fs56">val run : Parser&lt;&#39;Result,unit&gt; -&gt; string -&gt; ParserResult&lt;&#39;Result,unit&gt;<br /><br />Full name: FParsec.CharParsers.run</div>
<div class="tip" id="fs57">union case ParserResult.Success: &#39;Result * &#39;UserState * Position -&gt; ParserResult&lt;&#39;Result,&#39;UserState&gt;</div>
<div class="tip" id="fs58">val r : Locale list</div>
<div class="tip" id="fs59">union case ParserResult.Failure: string * ParserError * &#39;UserState -&gt; ParserResult&lt;&#39;Result,&#39;UserState&gt;</div>
<div class="tip" id="fs60">val r : string</div>
<div class="tip" id="fs61">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs62">Console.WriteLine() : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: obj) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: decimal) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs63">val raise : exn:Exception -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.raise</div>

