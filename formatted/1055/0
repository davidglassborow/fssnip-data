<h2><a name="Evaluate-expression" class="anchor" href="#Evaluate-expression">Evaluate expression</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">Reflection</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 5)" onmouseover="showTip(event, 'fs2', 5)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">Quotations</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 8)" onmouseover="showTip(event, 'fs2', 8)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 9)" onmouseover="showTip(event, 'fs3', 9)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 10)" onmouseover="showTip(event, 'fs5', 10)" class="i">Quotations</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="i">Patterns</span>

<span class="c">/// Evaluates expression untyped</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="f">eval</span> <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="p">Value</span>(<span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">v</span>,<span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="i">t</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 16)" onmouseover="showTip(event, 'fs9', 16)" class="i">v</span>
    | <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="p">Coerce</span>(<span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="i">e</span>,<span onmouseout="hideTip(event, 'fs10', 19)" onmouseover="showTip(event, 'fs10', 19)" class="i">t</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 20)" onmouseover="showTip(event, 'fs7', 20)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="i">e</span>
    | <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="p">NewObject</span>(<span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="i">ci</span>,<span onmouseout="hideTip(event, 'fs15', 24)" onmouseover="showTip(event, 'fs15', 24)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 25)" onmouseover="showTip(event, 'fs14', 25)" class="i">ci</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="f">Invoke</span>(<span onmouseout="hideTip(event, 'fs17', 27)" onmouseover="showTip(event, 'fs17', 27)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs15', 28)" onmouseover="showTip(event, 'fs15', 28)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="p">NewArray</span>(<span onmouseout="hideTip(event, 'fs10', 30)" onmouseover="showTip(event, 'fs10', 30)" class="i">t</span>,<span onmouseout="hideTip(event, 'fs15', 31)" onmouseover="showTip(event, 'fs15', 31)" class="i">args</span>) <span class="k">-&gt;</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 32)" onmouseover="showTip(event, 'fs19', 32)" class="i">array</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 33)" onmouseover="showTip(event, 'fs20', 33)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 34)" onmouseover="showTip(event, 'fs21', 34)" class="f">CreateInstance</span>(<span onmouseout="hideTip(event, 'fs10', 35)" onmouseover="showTip(event, 'fs10', 35)" class="i">t</span>, <span onmouseout="hideTip(event, 'fs15', 36)" onmouseover="showTip(event, 'fs15', 36)" class="i">args</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 37)" onmouseover="showTip(event, 'fs22', 37)" class="i">Length</span>) 
        <span onmouseout="hideTip(event, 'fs15', 38)" onmouseover="showTip(event, 'fs15', 38)" class="i">args</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 39)" onmouseover="showTip(event, 'fs23', 39)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 40)" onmouseover="showTip(event, 'fs24', 40)" class="f">iteri</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs25', 41)" onmouseover="showTip(event, 'fs25', 41)" class="i">i</span> <span onmouseout="hideTip(event, 'fs26', 42)" onmouseover="showTip(event, 'fs26', 42)" class="i">arg</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 43)" onmouseover="showTip(event, 'fs19', 43)" class="i">array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 44)" onmouseover="showTip(event, 'fs27', 44)" class="f">SetValue</span>(<span onmouseout="hideTip(event, 'fs7', 45)" onmouseover="showTip(event, 'fs7', 45)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs26', 46)" onmouseover="showTip(event, 'fs26', 46)" class="i">arg</span>, <span onmouseout="hideTip(event, 'fs25', 47)" onmouseover="showTip(event, 'fs25', 47)" class="i">i</span>))
        <span onmouseout="hideTip(event, 'fs28', 48)" onmouseover="showTip(event, 'fs28', 48)" class="f">box</span> <span onmouseout="hideTip(event, 'fs19', 49)" onmouseover="showTip(event, 'fs19', 49)" class="i">array</span>
    | <span onmouseout="hideTip(event, 'fs29', 50)" onmouseover="showTip(event, 'fs29', 50)" class="p">NewUnionCase</span>(<span onmouseout="hideTip(event, 'fs30', 51)" onmouseover="showTip(event, 'fs30', 51)" class="i">case</span>,<span onmouseout="hideTip(event, 'fs15', 52)" onmouseover="showTip(event, 'fs15', 52)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 53)" onmouseover="showTip(event, 'fs31', 53)" class="t">FSharpValue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 54)" onmouseover="showTip(event, 'fs32', 54)" class="f">MakeUnion</span>(<span onmouseout="hideTip(event, 'fs30', 55)" onmouseover="showTip(event, 'fs30', 55)" class="i">case</span>, <span onmouseout="hideTip(event, 'fs17', 56)" onmouseover="showTip(event, 'fs17', 56)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs15', 57)" onmouseover="showTip(event, 'fs15', 57)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs33', 58)" onmouseover="showTip(event, 'fs33', 58)" class="p">NewRecord</span>(<span onmouseout="hideTip(event, 'fs10', 59)" onmouseover="showTip(event, 'fs10', 59)" class="i">t</span>,<span onmouseout="hideTip(event, 'fs15', 60)" onmouseover="showTip(event, 'fs15', 60)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 61)" onmouseover="showTip(event, 'fs31', 61)" class="t">FSharpValue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 62)" onmouseover="showTip(event, 'fs34', 62)" class="f">MakeRecord</span>(<span onmouseout="hideTip(event, 'fs10', 63)" onmouseover="showTip(event, 'fs10', 63)" class="i">t</span>, <span onmouseout="hideTip(event, 'fs17', 64)" onmouseover="showTip(event, 'fs17', 64)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs15', 65)" onmouseover="showTip(event, 'fs15', 65)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs35', 66)" onmouseover="showTip(event, 'fs35', 66)" class="p">NewTuple</span>(<span onmouseout="hideTip(event, 'fs15', 67)" onmouseover="showTip(event, 'fs15', 67)" class="i">args</span>) <span class="k">-&gt;</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 68)" onmouseover="showTip(event, 'fs10', 68)" class="i">t</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs36', 69)" onmouseover="showTip(event, 'fs36', 69)" class="t">FSharpType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 70)" onmouseover="showTip(event, 'fs37', 70)" class="f">MakeTupleType</span> [|<span class="k">for</span> <span onmouseout="hideTip(event, 'fs26', 71)" onmouseover="showTip(event, 'fs26', 71)" class="i">arg</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs15', 72)" onmouseover="showTip(event, 'fs15', 72)" class="i">args</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs26', 73)" onmouseover="showTip(event, 'fs26', 73)" class="i">arg</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 74)" onmouseover="showTip(event, 'fs38', 74)" class="i">Type</span>|]
        <span onmouseout="hideTip(event, 'fs31', 75)" onmouseover="showTip(event, 'fs31', 75)" class="t">FSharpValue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 76)" onmouseover="showTip(event, 'fs39', 76)" class="f">MakeTuple</span>(<span onmouseout="hideTip(event, 'fs17', 77)" onmouseover="showTip(event, 'fs17', 77)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs15', 78)" onmouseover="showTip(event, 'fs15', 78)" class="i">args</span>, <span onmouseout="hideTip(event, 'fs10', 79)" onmouseover="showTip(event, 'fs10', 79)" class="i">t</span>)
    | <span onmouseout="hideTip(event, 'fs40', 80)" onmouseover="showTip(event, 'fs40', 80)" class="p">FieldGet</span>(<span onmouseout="hideTip(event, 'fs41', 81)" onmouseover="showTip(event, 'fs41', 81)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs8', 82)" onmouseover="showTip(event, 'fs8', 82)" class="p">Value</span>(<span onmouseout="hideTip(event, 'fs9', 83)" onmouseover="showTip(event, 'fs9', 83)" class="i">v</span>,_)),<span onmouseout="hideTip(event, 'fs42', 84)" onmouseover="showTip(event, 'fs42', 84)" class="i">fi</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs42', 85)" onmouseover="showTip(event, 'fs42', 85)" class="i">fi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 86)" onmouseover="showTip(event, 'fs43', 86)" class="f">GetValue</span>(<span onmouseout="hideTip(event, 'fs9', 87)" onmouseover="showTip(event, 'fs9', 87)" class="i">v</span>)
    | <span onmouseout="hideTip(event, 'fs44', 88)" onmouseover="showTip(event, 'fs44', 88)" class="p">PropertyGet</span>(<span onmouseout="hideTip(event, 'fs45', 89)" onmouseover="showTip(event, 'fs45', 89)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs46', 90)" onmouseover="showTip(event, 'fs46', 90)" class="i">pi</span>, <span onmouseout="hideTip(event, 'fs15', 91)" onmouseover="showTip(event, 'fs15', 91)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs46', 92)" onmouseover="showTip(event, 'fs46', 92)" class="i">pi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 93)" onmouseover="showTip(event, 'fs47', 93)" class="f">GetValue</span>(<span class="k">null</span>, <span onmouseout="hideTip(event, 'fs17', 94)" onmouseover="showTip(event, 'fs17', 94)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs15', 95)" onmouseover="showTip(event, 'fs15', 95)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs44', 96)" onmouseover="showTip(event, 'fs44', 96)" class="p">PropertyGet</span>(<span onmouseout="hideTip(event, 'fs41', 97)" onmouseover="showTip(event, 'fs41', 97)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs48', 98)" onmouseover="showTip(event, 'fs48', 98)" class="i">x</span>),<span onmouseout="hideTip(event, 'fs46', 99)" onmouseover="showTip(event, 'fs46', 99)" class="i">pi</span>,<span onmouseout="hideTip(event, 'fs15', 100)" onmouseover="showTip(event, 'fs15', 100)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs46', 101)" onmouseover="showTip(event, 'fs46', 101)" class="i">pi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 102)" onmouseover="showTip(event, 'fs47', 102)" class="f">GetValue</span>(<span onmouseout="hideTip(event, 'fs7', 103)" onmouseover="showTip(event, 'fs7', 103)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs48', 104)" onmouseover="showTip(event, 'fs48', 104)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs17', 105)" onmouseover="showTip(event, 'fs17', 105)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs15', 106)" onmouseover="showTip(event, 'fs15', 106)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs49', 107)" onmouseover="showTip(event, 'fs49', 107)" class="p">Call</span>(<span onmouseout="hideTip(event, 'fs45', 108)" onmouseover="showTip(event, 'fs45', 108)" class="p">None</span>,<span onmouseout="hideTip(event, 'fs50', 109)" onmouseover="showTip(event, 'fs50', 109)" class="i">mi</span>,<span onmouseout="hideTip(event, 'fs15', 110)" onmouseover="showTip(event, 'fs15', 110)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs50', 111)" onmouseover="showTip(event, 'fs50', 111)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 112)" onmouseover="showTip(event, 'fs51', 112)" class="f">Invoke</span>(<span class="k">null</span>, <span onmouseout="hideTip(event, 'fs17', 113)" onmouseover="showTip(event, 'fs17', 113)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs15', 114)" onmouseover="showTip(event, 'fs15', 114)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs49', 115)" onmouseover="showTip(event, 'fs49', 115)" class="p">Call</span>(<span onmouseout="hideTip(event, 'fs41', 116)" onmouseover="showTip(event, 'fs41', 116)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs48', 117)" onmouseover="showTip(event, 'fs48', 117)" class="i">x</span>),<span onmouseout="hideTip(event, 'fs50', 118)" onmouseover="showTip(event, 'fs50', 118)" class="i">mi</span>,<span onmouseout="hideTip(event, 'fs15', 119)" onmouseover="showTip(event, 'fs15', 119)" class="i">args</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs50', 120)" onmouseover="showTip(event, 'fs50', 120)" class="i">mi</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 121)" onmouseover="showTip(event, 'fs51', 121)" class="f">Invoke</span>(<span onmouseout="hideTip(event, 'fs7', 122)" onmouseover="showTip(event, 'fs7', 122)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs48', 123)" onmouseover="showTip(event, 'fs48', 123)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs17', 124)" onmouseover="showTip(event, 'fs17', 124)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs15', 125)" onmouseover="showTip(event, 'fs15', 125)" class="i">args</span>)
    | <span onmouseout="hideTip(event, 'fs26', 126)" onmouseover="showTip(event, 'fs26', 126)" class="i">arg</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs52', 127)" onmouseover="showTip(event, 'fs52', 127)" class="f">raise</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs53', 128)" onmouseover="showTip(event, 'fs53', 128)" class="t">NotSupportedException</span>(<span onmouseout="hideTip(event, 'fs26', 129)" onmouseover="showTip(event, 'fs26', 129)" class="i">arg</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs54', 130)" onmouseover="showTip(event, 'fs54', 130)" class="f">ToString</span>())
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs17', 131)" onmouseover="showTip(event, 'fs17', 131)" class="f">evalAll</span> <span onmouseout="hideTip(event, 'fs15', 132)" onmouseover="showTip(event, 'fs15', 132)" class="i">args</span> <span class="o">=</span> [|<span class="k">for</span> <span onmouseout="hideTip(event, 'fs26', 133)" onmouseover="showTip(event, 'fs26', 133)" class="i">arg</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs15', 134)" onmouseover="showTip(event, 'fs15', 134)" class="i">args</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs7', 135)" onmouseover="showTip(event, 'fs7', 135)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs26', 136)" onmouseover="showTip(event, 'fs26', 136)" class="i">arg</span>|]
</code></pre></td>
</tr>
</table>
<h2><a name="Unit-tests" class="anchor" href="#Unit-tests">Unit tests</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs55', 137)" onmouseover="showTip(event, 'fs55', 137)" class="i">NUnit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs56', 138)" onmouseover="showTip(event, 'fs56', 138)" class="i">Framework</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs57', 139)" onmouseover="showTip(event, 'fs57', 139)" class="t">Tests</span> () <span class="o">=</span>
    <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs58', 140)" onmouseover="showTip(event, 'fs58', 140)" class="i">Expressions</span> <span class="o">=</span> 
        <span class="k">let</span> (<span class="o">==</span>) <span onmouseout="hideTip(event, 'fs59', 141)" onmouseover="showTip(event, 'fs59', 141)" class="i">quote</span> <span onmouseout="hideTip(event, 'fs60', 142)" onmouseover="showTip(event, 'fs60', 142)" class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs61', 143)" onmouseover="showTip(event, 'fs61', 143)" class="t">TestCaseData</span>([|<span onmouseout="hideTip(event, 'fs59', 144)" onmouseover="showTip(event, 'fs59', 144)" class="i">quote</span>|])<span class="o">.</span><span class="f">Returns</span>(<span onmouseout="hideTip(event, 'fs60', 145)" onmouseover="showTip(event, 'fs60', 145)" class="i">value</span>)
        [
        &lt;@ <span class="n">1</span> @&gt; <span class="o">==</span> <span class="n">1</span>
        &lt;@ <span class="n">1</span> <span class="o">+</span> <span class="n">1</span> @&gt; <span class="o">==</span> <span class="n">2</span>
        &lt;@ <span class="n">2</span> <span class="o">*</span> <span class="n">2</span> @&gt; <span class="o">==</span> <span class="n">4</span>
        &lt;@ <span class="n">9.9M</span> @&gt; <span class="o">==</span> <span class="n">9.9M</span>
        &lt;@ <span class="s">&quot;Hello World&quot;</span> @&gt; <span class="o">==</span> <span class="s">&quot;Hello World&quot;</span>
        &lt;@ [<span class="n">1</span>;<span class="n">2</span>;<span class="n">3</span>] @&gt; <span class="o">==</span> [<span class="n">1</span>;<span class="n">2</span>;<span class="n">3</span>]
        &lt;@ [|<span class="n">1</span>;<span class="n">2</span>;<span class="n">3</span>|] @&gt; <span class="o">==</span> [|<span class="n">1</span>;<span class="n">2</span>;<span class="n">3</span>|]
        &lt;@ (<span class="n">1</span>,<span class="n">2</span>,<span class="n">3</span>) @&gt; <span class="o">==</span> (<span class="n">1</span>,<span class="n">2</span>,<span class="n">3</span>)
        &lt;@ <span onmouseout="hideTip(event, 'fs41', 146)" onmouseover="showTip(event, 'fs41', 146)" class="p">Some</span>(<span class="n">1</span>) @&gt; <span class="o">==</span> <span onmouseout="hideTip(event, 'fs41', 147)" onmouseover="showTip(event, 'fs41', 147)" class="p">Some</span>(<span class="n">1</span>)
        &lt;@ {<span class="i">Name</span><span class="o">=</span><span class="s">&quot;Phil&quot;</span>; <span class="i">Age</span><span class="o">=</span><span class="n">27</span>} @&gt; <span class="o">==</span> {<span class="i">Name</span> <span class="o">=</span> <span class="s">&quot;Phil&quot;</span>; <span class="i">Age</span><span class="o">=</span><span class="n">27</span>}
        &lt;@ <span onmouseout="hideTip(event, 'fs62', 148)" onmouseover="showTip(event, 'fs62', 148)" class="t">PersonClass</span>(<span class="s">&quot;Phil&quot;</span>, <span class="n">27</span>) @&gt; <span class="o">==</span> <span onmouseout="hideTip(event, 'fs62', 149)" onmouseover="showTip(event, 'fs62', 149)" class="t">PersonClass</span>(<span class="s">&quot;Phil&quot;</span>, <span class="n">27</span>)
        ]        
    
    [&lt;<span onmouseout="hideTip(event, 'fs63', 150)" onmouseover="showTip(event, 'fs63', 150)" class="t">Test</span>;<span onmouseout="hideTip(event, 'fs64', 151)" onmouseover="showTip(event, 'fs64', 151)" class="t">TestCaseSource</span>(<span class="s">&quot;Expressions&quot;</span>)&gt;]
    <span class="k">static</span> <span class="k">member</span> <span class="f">``evaluates``</span> (<span onmouseout="hideTip(event, 'fs65', 152)" onmouseover="showTip(event, 'fs65', 152)" class="i">expr</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs66', 153)" onmouseover="showTip(event, 'fs66', 153)" class="t">Expr</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 154)" onmouseover="showTip(event, 'fs7', 154)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs65', 155)" onmouseover="showTip(event, 'fs65', 155)" class="i">expr</span>

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs67', 156)" onmouseover="showTip(event, 'fs67', 156)" class="i">test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 157)" onmouseover="showTip(event, 'fs68', 157)" class="i">LocalProperty</span> <span class="o">=</span> <span class="n">1</span>

    [&lt;<span onmouseout="hideTip(event, 'fs63', 158)" onmouseover="showTip(event, 'fs63', 158)" class="t">Test</span>&gt;]
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs67', 159)" onmouseover="showTip(event, 'fs67', 159)" class="i">test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 160)" onmouseover="showTip(event, 'fs69', 160)" class="f">``local property getter``</span> () <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs70', 161)" onmouseover="showTip(event, 'fs70', 161)" class="t">Assert</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 162)" onmouseover="showTip(event, 'fs71', 162)" class="f">AreEqual</span>(<span onmouseout="hideTip(event, 'fs67', 163)" onmouseover="showTip(event, 'fs67', 163)" class="i">test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 164)" onmouseover="showTip(event, 'fs72', 164)" class="i">LocalProperty</span>, <span onmouseout="hideTip(event, 'fs7', 165)" onmouseover="showTip(event, 'fs7', 165)" class="f">eval</span> &lt;@ <span onmouseout="hideTip(event, 'fs67', 166)" onmouseover="showTip(event, 'fs67', 166)" class="i">test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 167)" onmouseover="showTip(event, 'fs72', 167)" class="i">LocalProperty</span> @&gt;)

    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs67', 168)" onmouseover="showTip(event, 'fs67', 168)" class="i">test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 169)" onmouseover="showTip(event, 'fs73', 169)" class="f">LocalMethod</span>() <span class="o">=</span> <span class="n">1</span>

    [&lt;<span onmouseout="hideTip(event, 'fs63', 170)" onmouseover="showTip(event, 'fs63', 170)" class="t">Test</span>&gt;]
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs67', 171)" onmouseover="showTip(event, 'fs67', 171)" class="i">test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 172)" onmouseover="showTip(event, 'fs74', 172)" class="f">``local property method``</span> () <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs70', 173)" onmouseover="showTip(event, 'fs70', 173)" class="t">Assert</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 174)" onmouseover="showTip(event, 'fs71', 174)" class="f">AreEqual</span>(<span onmouseout="hideTip(event, 'fs67', 175)" onmouseover="showTip(event, 'fs67', 175)" class="i">test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs75', 176)" onmouseover="showTip(event, 'fs75', 176)" class="f">LocalMethod</span>(), <span onmouseout="hideTip(event, 'fs7', 177)" onmouseover="showTip(event, 'fs7', 177)" class="f">eval</span> &lt;@ <span onmouseout="hideTip(event, 'fs67', 178)" onmouseover="showTip(event, 'fs67', 178)" class="i">test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs75', 179)" onmouseover="showTip(event, 'fs75', 179)" class="f">LocalMethod</span>() @&gt;)

    <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs76', 180)" onmouseover="showTip(event, 'fs76', 180)" class="i">GlobalProperty</span> <span class="o">=</span> <span class="n">1</span>

    [&lt;<span onmouseout="hideTip(event, 'fs63', 181)" onmouseover="showTip(event, 'fs63', 181)" class="t">Test</span>&gt;]
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs67', 182)" onmouseover="showTip(event, 'fs67', 182)" class="i">test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs77', 183)" onmouseover="showTip(event, 'fs77', 183)" class="f">``global property getter``</span> () <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs70', 184)" onmouseover="showTip(event, 'fs70', 184)" class="t">Assert</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 185)" onmouseover="showTip(event, 'fs71', 185)" class="f">AreEqual</span>(<span onmouseout="hideTip(event, 'fs57', 186)" onmouseover="showTip(event, 'fs57', 186)" class="t">Tests</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs78', 187)" onmouseover="showTip(event, 'fs78', 187)" class="i">GlobalProperty</span>, <span onmouseout="hideTip(event, 'fs7', 188)" onmouseover="showTip(event, 'fs7', 188)" class="f">eval</span> &lt;@ <span onmouseout="hideTip(event, 'fs57', 189)" onmouseover="showTip(event, 'fs57', 189)" class="t">Tests</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs78', 190)" onmouseover="showTip(event, 'fs78', 190)" class="i">GlobalProperty</span> @&gt;)

    <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs79', 191)" onmouseover="showTip(event, 'fs79', 191)" class="f">GlobalMethod</span>() <span class="o">=</span> <span class="n">1</span>

    [&lt;<span onmouseout="hideTip(event, 'fs63', 192)" onmouseover="showTip(event, 'fs63', 192)" class="t">Test</span>&gt;]
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs67', 193)" onmouseover="showTip(event, 'fs67', 193)" class="i">test</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs80', 194)" onmouseover="showTip(event, 'fs80', 194)" class="f">``global property method``</span> () <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs70', 195)" onmouseover="showTip(event, 'fs70', 195)" class="t">Assert</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 196)" onmouseover="showTip(event, 'fs71', 196)" class="f">AreEqual</span>(<span onmouseout="hideTip(event, 'fs57', 197)" onmouseover="showTip(event, 'fs57', 197)" class="t">Tests</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 198)" onmouseover="showTip(event, 'fs81', 198)" class="f">GlobalMethod</span>(), <span onmouseout="hideTip(event, 'fs7', 199)" onmouseover="showTip(event, 'fs7', 199)" class="f">eval</span> &lt;@ <span onmouseout="hideTip(event, 'fs57', 200)" onmouseover="showTip(event, 'fs57', 200)" class="t">Tests</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 201)" onmouseover="showTip(event, 'fs81', 201)" class="f">GlobalMethod</span>() @&gt;)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace Microsoft</div>
<div class="tip" id="fs3">namespace Microsoft.FSharp</div>
<div class="tip" id="fs4">namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs5">namespace Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs6">module Patterns<br /><br />from Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs7">val eval : _arg1:Expr -&gt; obj<br /><br />Full name: Script.eval<br /><em><br /><br />&#160;Evaluates expression untyped</em></div>
<div class="tip" id="fs8">active recognizer Value: Expr -&gt; (obj * Type) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Value|_| )</div>
<div class="tip" id="fs9">val v : obj</div>
<div class="tip" id="fs10">val t : Type</div>
<div class="tip" id="fs11">active recognizer Coerce: Expr -&gt; (Expr * Type) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Coerce|_| )</div>
<div class="tip" id="fs12">val e : Expr</div>
<div class="tip" id="fs13">active recognizer NewObject: Expr -&gt; (Reflection.ConstructorInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewObject|_| )</div>
<div class="tip" id="fs14">val ci : Reflection.ConstructorInfo</div>
<div class="tip" id="fs15">val args : Expr list</div>
<div class="tip" id="fs16">Reflection.ConstructorInfo.Invoke(parameters: obj []) : obj<br />Reflection.MethodBase.Invoke(obj: obj, parameters: obj []) : obj<br />Reflection.ConstructorInfo.Invoke(invokeAttr: Reflection.BindingFlags, binder: Reflection.Binder, parameters: obj [], culture: Globalization.CultureInfo) : obj<br />Reflection.MethodBase.Invoke(obj: obj, invokeAttr: Reflection.BindingFlags, binder: Reflection.Binder, parameters: obj [], culture: Globalization.CultureInfo) : obj</div>
<div class="tip" id="fs17">val evalAll : args:Expr list -&gt; obj []<br /><br />Full name: Script.evalAll</div>
<div class="tip" id="fs18">active recognizer NewArray: Expr -&gt; (Type * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewArray|_| )</div>
<div class="tip" id="fs19">Multiple items<br />val array : Array<br /><br />--------------------<br />type &#39;T array = &#39;T []<br /><br />Full name: Microsoft.FSharp.Core.array&lt;_&gt;</div>
<div class="tip" id="fs20">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs21">Array.CreateInstance(elementType: Type, [&lt;ParamArray&gt;] lengths: int64 []) : Array<br />Array.CreateInstance(elementType: Type, [&lt;ParamArray&gt;] lengths: int []) : Array<br />Array.CreateInstance(elementType: Type, length: int) : Array<br />Array.CreateInstance(elementType: Type, lengths: int [], lowerBounds: int []) : Array<br />Array.CreateInstance(elementType: Type, length1: int, length2: int) : Array<br />Array.CreateInstance(elementType: Type, length1: int, length2: int, length3: int) : Array</div>
<div class="tip" id="fs22">property List.Length: int</div>
<div class="tip" id="fs23">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs24">val iteri : action:(int -&gt; &#39;T -&gt; unit) -&gt; list:&#39;T list -&gt; unit<br /><br />Full name: Microsoft.FSharp.Collections.List.iteri</div>
<div class="tip" id="fs25">val i : int</div>
<div class="tip" id="fs26">val arg : Expr</div>
<div class="tip" id="fs27">Array.SetValue(value: obj, [&lt;ParamArray&gt;] indices: int64 []) : unit<br />Array.SetValue(value: obj, index: int64) : unit<br />Array.SetValue(value: obj, [&lt;ParamArray&gt;] indices: int []) : unit<br />Array.SetValue(value: obj, index: int) : unit<br />Array.SetValue(value: obj, index1: int64, index2: int64) : unit<br />Array.SetValue(value: obj, index1: int, index2: int) : unit<br />Array.SetValue(value: obj, index1: int64, index2: int64, index3: int64) : unit<br />Array.SetValue(value: obj, index1: int, index2: int, index3: int) : unit</div>
<div class="tip" id="fs28">val box : value:&#39;T -&gt; obj<br /><br />Full name: Microsoft.FSharp.Core.Operators.box</div>
<div class="tip" id="fs29">active recognizer NewUnionCase: Expr -&gt; (UnionCaseInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewUnionCase|_| )</div>
<div class="tip" id="fs30">val case : UnionCaseInfo</div>
<div class="tip" id="fs31">type FSharpValue =<br />&#160;&#160;static member GetExceptionFields : exn:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetRecordField : record:obj * info:PropertyInfo -&gt; obj<br />&#160;&#160;static member GetRecordFields : record:obj * ?bindingFlags:BindingFlags -&gt; obj []<br />&#160;&#160;static member GetTupleField : tuple:obj * index:int -&gt; obj<br />&#160;&#160;static member GetTupleFields : tuple:obj -&gt; obj []<br />&#160;&#160;static member GetUnionFields : value:obj * unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo * obj []<br />&#160;&#160;static member MakeFunction : functionType:Type * implementation:(obj -&gt; obj) -&gt; obj<br />&#160;&#160;static member MakeRecord : recordType:Type * values:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;static member MakeTuple : tupleElements:obj [] * tupleType:Type -&gt; obj<br />&#160;&#160;static member MakeUnion : unionCase:UnionCaseInfo * args:obj [] * ?bindingFlags:BindingFlags -&gt; obj<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpValue</div>
<div class="tip" id="fs32">static member FSharpValue.MakeUnion : unionCase:UnionCaseInfo * args:obj [] * ?allowAccessToPrivateRepresentation:bool -&gt; obj<br />static member FSharpValue.MakeUnion : unionCase:UnionCaseInfo * args:obj [] * ?bindingFlags:Reflection.BindingFlags -&gt; obj</div>
<div class="tip" id="fs33">active recognizer NewRecord: Expr -&gt; (Type * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewRecord|_| )</div>
<div class="tip" id="fs34">static member FSharpValue.MakeRecord : recordType:Type * values:obj [] * ?allowAccessToPrivateRepresentation:bool -&gt; obj<br />static member FSharpValue.MakeRecord : recordType:Type * values:obj [] * ?bindingFlags:Reflection.BindingFlags -&gt; obj</div>
<div class="tip" id="fs35">active recognizer NewTuple: Expr -&gt; Expr list option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewTuple|_| )</div>
<div class="tip" id="fs36">type FSharpType =<br />&#160;&#160;static member GetExceptionFields : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetFunctionElements : functionType:Type -&gt; Type * Type<br />&#160;&#160;static member GetRecordFields : recordType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetTupleElements : tupleType:Type -&gt; Type []<br />&#160;&#160;static member GetUnionCases : unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo []<br />&#160;&#160;static member IsExceptionRepresentation : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsFunction : typ:Type -&gt; bool<br />&#160;&#160;static member IsModule : typ:Type -&gt; bool<br />&#160;&#160;static member IsRecord : typ:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsTuple : typ:Type -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpType</div>
<div class="tip" id="fs37">static member FSharpType.MakeTupleType : types:Type [] -&gt; Type</div>
<div class="tip" id="fs38">property Expr.Type: Type</div>
<div class="tip" id="fs39">static member FSharpValue.MakeTuple : tupleElements:obj [] * tupleType:Type -&gt; obj</div>
<div class="tip" id="fs40">active recognizer FieldGet: Expr -&gt; (Expr option * Reflection.FieldInfo) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |FieldGet|_| )</div>
<div class="tip" id="fs41">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs42">val fi : Reflection.FieldInfo</div>
<div class="tip" id="fs43">Reflection.FieldInfo.GetValue(obj: obj) : obj</div>
<div class="tip" id="fs44">active recognizer PropertyGet: Expr -&gt; (Expr option * Reflection.PropertyInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |PropertyGet|_| )</div>
<div class="tip" id="fs45">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs46">val pi : Reflection.PropertyInfo</div>
<div class="tip" id="fs47">Reflection.PropertyInfo.GetValue(obj: obj, index: obj []) : obj<br />Reflection.PropertyInfo.GetValue(obj: obj, invokeAttr: Reflection.BindingFlags, binder: Reflection.Binder, index: obj [], culture: Globalization.CultureInfo) : obj</div>
<div class="tip" id="fs48">val x : Expr</div>
<div class="tip" id="fs49">active recognizer Call: Expr -&gt; (Expr option * Reflection.MethodInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Call|_| )</div>
<div class="tip" id="fs50">val mi : Reflection.MethodInfo</div>
<div class="tip" id="fs51">Reflection.MethodBase.Invoke(obj: obj, parameters: obj []) : obj<br />Reflection.MethodBase.Invoke(obj: obj, invokeAttr: Reflection.BindingFlags, binder: Reflection.Binder, parameters: obj [], culture: Globalization.CultureInfo) : obj</div>
<div class="tip" id="fs52">val raise : exn:Exception -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.raise</div>
<div class="tip" id="fs53">Multiple items<br />type NotSupportedException =<br />&#160;&#160;inherit SystemException<br />&#160;&#160;new : unit -&gt; NotSupportedException + 2 overloads<br /><br />Full name: System.NotSupportedException<br /><br />--------------------<br />NotSupportedException() : unit<br />NotSupportedException(message: string) : unit<br />NotSupportedException(message: string, innerException: exn) : unit</div>
<div class="tip" id="fs54">Object.ToString() : string<br />member Expr.ToString : full:bool -&gt; string</div>
<div class="tip" id="fs55">namespace NUnit</div>
<div class="tip" id="fs56">namespace NUnit.Framework</div>
<div class="tip" id="fs57">Multiple items<br />type Tests =<br />&#160;&#160;new : unit -&gt; Tests<br />&#160;&#160;member LocalMethod : unit -&gt; int<br />&#160;&#160;member LocalProperty : int<br />&#160;&#160;member ( global property getter ) : unit -&gt; unit<br />&#160;&#160;member ( global property method ) : unit -&gt; unit<br />&#160;&#160;member ( local property getter ) : unit -&gt; unit<br />&#160;&#160;member ( local property method ) : unit -&gt; unit<br />&#160;&#160;static member GlobalMethod : unit -&gt; int<br />&#160;&#160;static member evaluates : expr:Expr -&gt; obj<br />&#160;&#160;static member Expressions : TestCaseData list<br />&#160;&#160;...<br /><br />Full name: Script.Tests<br /><br />--------------------<br />new : unit -&gt; Tests</div>
<div class="tip" id="fs58">static member Tests.Expressions : TestCaseData list<br /><br />Full name: Script.Tests.Expressions</div>
<div class="tip" id="fs59">val quote : obj</div>
<div class="tip" id="fs60">val value : &#39;a</div>
<div class="tip" id="fs61">Multiple items<br />type TestCaseData =<br />&#160;&#160;new : [&lt;ParamArray&gt;] args:obj[] -&gt; TestCaseData + 3 overloads<br />&#160;&#160;member Arguments : obj[]<br />&#160;&#160;member Categories : IList<br />&#160;&#160;member Description : string<br />&#160;&#160;member ExpectedException : Type<br />&#160;&#160;member ExpectedExceptionName : string<br />&#160;&#160;member Explicit : bool<br />&#160;&#160;member HasExpectedResult : bool<br />&#160;&#160;member Ignore : unit -&gt; TestCaseData + 1 overload<br />&#160;&#160;member IgnoreReason : string<br />&#160;&#160;...<br /><br />Full name: NUnit.Framework.TestCaseData<br /><br />--------------------<br />TestCaseData([&lt;ParamArray&gt;] args: obj []) : unit<br />TestCaseData(arg: obj) : unit<br />TestCaseData(arg1: obj, arg2: obj) : unit<br />TestCaseData(arg1: obj, arg2: obj, arg3: obj) : unit</div>
<div class="tip" id="fs62">Multiple items<br />type PersonClass =<br />&#160;&#160;new : name:string * age:int -&gt; PersonClass<br />&#160;&#160;override Equals : b:obj -&gt; bool<br />&#160;&#160;override GetHashCode : unit -&gt; int<br />&#160;&#160;member Age : int<br />&#160;&#160;member Name : string<br /><br />Full name: Script.PersonClass<br /><br />--------------------<br />new : name:string * age:int -&gt; PersonClass</div>
<div class="tip" id="fs63">Multiple items<br />type TestAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; TestAttribute<br />&#160;&#160;member Description : string with get, set<br /><br />Full name: NUnit.Framework.TestAttribute<br /><br />--------------------<br />TestAttribute() : unit</div>
<div class="tip" id="fs64">Multiple items<br />type TestCaseSourceAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : sourceName:string -&gt; TestCaseSourceAttribute + 2 overloads<br />&#160;&#160;member Category : string with get, set<br />&#160;&#160;member SourceName : string<br />&#160;&#160;member SourceType : Type<br /><br />Full name: NUnit.Framework.TestCaseSourceAttribute<br /><br />--------------------<br />TestCaseSourceAttribute(sourceName: string) : unit<br />TestCaseSourceAttribute(sourceType: Type) : unit<br />TestCaseSourceAttribute(sourceType: Type, sourceName: string) : unit</div>
<div class="tip" id="fs65">val expr : Expr</div>
<div class="tip" id="fs66">Multiple items<br />type Expr =<br />&#160;&#160;override Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetFreeVars : unit -&gt; seq&lt;Var&gt;<br />&#160;&#160;member Substitute : substitution:(Var -&gt; Expr option) -&gt; Expr<br />&#160;&#160;member ToString : full:bool -&gt; string<br />&#160;&#160;member CustomAttributes : Expr list<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member AddressOf : target:Expr -&gt; Expr<br />&#160;&#160;static member AddressSet : target:Expr * value:Expr -&gt; Expr<br />&#160;&#160;static member Application : functionExpr:Expr * argument:Expr -&gt; Expr<br />&#160;&#160;static member Applications : functionExpr:Expr * arguments:Expr list list -&gt; Expr<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Quotations.Expr<br /><br />--------------------<br />type Expr&lt;&#39;T&gt; =<br />&#160;&#160;inherit Expr<br />&#160;&#160;member Raw : Expr<br /><br />Full name: Microsoft.FSharp.Quotations.Expr&lt;_&gt;</div>
<div class="tip" id="fs67">val test : Tests</div>
<div class="tip" id="fs68">member Tests.LocalProperty : int<br /><br />Full name: Script.Tests.LocalProperty</div>
<div class="tip" id="fs69">member Tests.( local property getter ) : unit -&gt; unit<br /><br />Full name: Script.Tests.( local property getter )</div>
<div class="tip" id="fs70">type Assert =<br />&#160;&#160;static member AreEqual : expected:int * actual:int -&gt; unit + 23 overloads<br />&#160;&#160;static member AreNotEqual : expected:int * actual:int -&gt; unit + 23 overloads<br />&#160;&#160;static member AreNotSame : expected:obj * actual:obj -&gt; unit + 2 overloads<br />&#160;&#160;static member AreSame : expected:obj * actual:obj -&gt; unit + 2 overloads<br />&#160;&#160;static member ByVal : actual:obj * expression:IResolveConstraint -&gt; unit + 2 overloads<br />&#160;&#160;static member Catch : code:TestDelegate -&gt; Exception + 8 overloads<br />&#160;&#160;static member Contains : expected:obj * actual:ICollection -&gt; unit + 2 overloads<br />&#160;&#160;static member Counter : int<br />&#160;&#160;static member DoesNotThrow : code:TestDelegate -&gt; unit + 2 overloads<br />&#160;&#160;static member Equals : a:obj * b:obj -&gt; bool<br />&#160;&#160;...<br /><br />Full name: NUnit.Framework.Assert</div>
<div class="tip" id="fs71">Assert.AreEqual(expected: obj, actual: obj) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: decimal, actual: decimal) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: uint64, actual: uint64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: uint32, actual: uint32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: int64, actual: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: int, actual: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: obj, actual: obj, message: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: float, actual: Nullable&lt;float&gt;, delta: float) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: float, actual: float, delta: float) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Assert.AreEqual(expected: decimal, actual: decimal, message: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs72">property Tests.LocalProperty: int</div>
<div class="tip" id="fs73">member Tests.LocalMethod : unit -&gt; int<br /><br />Full name: Script.Tests.LocalMethod</div>
<div class="tip" id="fs74">member Tests.( local property method ) : unit -&gt; unit<br /><br />Full name: Script.Tests.( local property method )</div>
<div class="tip" id="fs75">member Tests.LocalMethod : unit -&gt; int</div>
<div class="tip" id="fs76">static member Tests.GlobalProperty : int<br /><br />Full name: Script.Tests.GlobalProperty</div>
<div class="tip" id="fs77">member Tests.( global property getter ) : unit -&gt; unit<br /><br />Full name: Script.Tests.( global property getter )</div>
<div class="tip" id="fs78">property Tests.GlobalProperty: int</div>
<div class="tip" id="fs79">static member Tests.GlobalMethod : unit -&gt; int<br /><br />Full name: Script.Tests.GlobalMethod</div>
<div class="tip" id="fs80">member Tests.( global property method ) : unit -&gt; unit<br /><br />Full name: Script.Tests.( global property method )</div>
<div class="tip" id="fs81">static member Tests.GlobalMethod : unit -&gt; int</div>

