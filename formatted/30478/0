<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// https://docs.scala-lang.org/tour/implicit-parameters.html</span>

<span class="k">open</span> <span class="i">Fable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">Core</span>
<span class="k">open</span> <span class="i">Fable</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">Core</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Experimental</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="t">Monoid</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">=</span>
    <span class="k">abstract</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="f">add</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">a</span>
    <span class="k">abstract</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">unit</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">ImplicitTest</span> <span class="o">=</span>
    <span class="k">static</span> <span class="k">member</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="f">sum</span> (<span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">xs</span><span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="t">list</span>, [&lt;<span class="i">Inject</span>; <span class="i">Implicit</span>&gt;] <span class="o">?</span><span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="i">m</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 12)" onmouseover="showTip(event, 'fs3', 12)" class="t">Monoid</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>) <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="i">m</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="i">m</span><span class="o">.</span><span class="i">Value</span> <span class="c">// unwrap instance</span>
        <span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="i">xs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="f">fold</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="f">add</span> <span onmouseout="hideTip(event, 'fs11', 20)" onmouseover="showTip(event, 'fs11', 20)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="i">unit</span>

<span class="k">let</span> [&lt;<span class="i">Implicit</span>&gt;] <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="i">intMonoid</span> <span class="o">=</span> 
    { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs3', 23)" onmouseover="showTip(event, 'fs3', 23)" class="t">Monoid</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="t">int</span><span class="o">&gt;</span> <span class="k">with</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 26)" onmouseover="showTip(event, 'fs14', 26)" class="f">add</span> (<span onmouseout="hideTip(event, 'fs19', 27)" onmouseover="showTip(event, 'fs19', 27)" class="i">x</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="t">int</span>) (<span onmouseout="hideTip(event, 'fs20', 29)" onmouseover="showTip(event, 'fs20', 29)" class="i">y</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs17', 30)" onmouseover="showTip(event, 'fs17', 30)" class="t">int</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="i">x</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs20', 32)" onmouseover="showTip(event, 'fs20', 32)" class="i">y</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs18', 33)" onmouseover="showTip(event, 'fs18', 33)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 34)" onmouseover="showTip(event, 'fs21', 34)" class="i">unit</span> <span class="o">=</span> <span class="n">0</span> }

<span class="k">let</span> [&lt;<span class="i">Implicit</span>&gt;] <span onmouseout="hideTip(event, 'fs22', 35)" onmouseover="showTip(event, 'fs22', 35)" class="i">stringMonoid</span> <span class="o">=</span> 
    { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs3', 36)" onmouseover="showTip(event, 'fs3', 36)" class="t">Monoid</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs23', 37)" onmouseover="showTip(event, 'fs23', 37)" class="t">string</span><span class="o">&gt;</span> <span class="k">with</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs24', 38)" onmouseover="showTip(event, 'fs24', 38)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 39)" onmouseover="showTip(event, 'fs14', 39)" class="f">add</span> (<span onmouseout="hideTip(event, 'fs25', 40)" onmouseover="showTip(event, 'fs25', 40)" class="i">x</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs23', 41)" onmouseover="showTip(event, 'fs23', 41)" class="t">string</span>) (<span onmouseout="hideTip(event, 'fs26', 42)" onmouseover="showTip(event, 'fs26', 42)" class="i">y</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs23', 43)" onmouseover="showTip(event, 'fs23', 43)" class="t">string</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 44)" onmouseover="showTip(event, 'fs25', 44)" class="i">x</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs26', 45)" onmouseover="showTip(event, 'fs26', 45)" class="i">y</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs24', 46)" onmouseover="showTip(event, 'fs24', 46)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 47)" onmouseover="showTip(event, 'fs27', 47)" class="i">unit</span> <span class="o">=</span> <span class="s">&quot;&quot;</span> }      

<span onmouseout="hideTip(event, 'fs28', 48)" onmouseover="showTip(event, 'fs28', 48)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%d</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs6', 49)" onmouseover="showTip(event, 'fs6', 49)" class="t">ImplicitTest</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 50)" onmouseover="showTip(event, 'fs29', 50)" class="f">sum</span> [<span class="n">1</span>; <span class="n">2</span>; <span class="n">3</span>]) <span class="c">// 6</span>
<span onmouseout="hideTip(event, 'fs28', 51)" onmouseover="showTip(event, 'fs28', 51)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs6', 52)" onmouseover="showTip(event, 'fs6', 52)" class="t">ImplicitTest</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 53)" onmouseover="showTip(event, 'fs29', 53)" class="f">sum</span> [<span class="s">&quot;a&quot;</span>; <span class="s">&quot;b&quot;</span>; <span class="s">&quot;c&quot;</span>]) <span class="c">// abc</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace Microsoft.FSharp.Core</div>
<div class="tip" id="fs2">Multiple items<br />type ExperimentalAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : message:string -&gt; ExperimentalAttribute<br />&#160;&#160;member Message : string<br /><br />Full name: Microsoft.FSharp.Core.ExperimentalAttribute<br /><br />--------------------<br />new : message:string -&gt; ExperimentalAttribute</div>
<div class="tip" id="fs3">type Monoid&lt;&#39;a&gt; =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member add : &#39;a -&gt; &#39;a -&gt; &#39;a<br />&#160;&#160;&#160;&#160;abstract member unit : &#39;a<br />&#160;&#160;end<br /><br />Full name: Script.Monoid&lt;_&gt;</div>
<div class="tip" id="fs4">abstract member Monoid.add : &#39;a -&gt; &#39;a -&gt; &#39;a<br /><br />Full name: Script.Monoid`1.add</div>
<div class="tip" id="fs5">Multiple items<br />abstract member Monoid.unit : &#39;a<br /><br />Full name: Script.Monoid`1.unit<br /><br />--------------------<br />type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs6">type ImplicitTest =<br />&#160;&#160;static member sum : xs:&#39;a list * ?m:Monoid&lt;&#39;a&gt; -&gt; &#39;a<br /><br />Full name: Script.ImplicitTest</div>
<div class="tip" id="fs7">static member ImplicitTest.sum : xs:&#39;a list * ?m:Monoid&lt;&#39;a&gt; -&gt; &#39;a<br /><br />Full name: Script.ImplicitTest.sum</div>
<div class="tip" id="fs8">val xs : &#39;a list</div>
<div class="tip" id="fs9">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs10">val m : Monoid&lt;&#39;a&gt; option</div>
<div class="tip" id="fs11">val m : Monoid&lt;&#39;a&gt;</div>
<div class="tip" id="fs12">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs13">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; list:&#39;T list -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.List.fold</div>
<div class="tip" id="fs14">abstract member Monoid.add : &#39;a -&gt; &#39;a -&gt; &#39;a</div>
<div class="tip" id="fs15">property Monoid.unit: &#39;a</div>
<div class="tip" id="fs16">val intMonoid : Monoid&lt;int&gt;<br /><br />Full name: Script.intMonoid</div>
<div class="tip" id="fs17">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs18">val this : Monoid&lt;int&gt;</div>
<div class="tip" id="fs19">val x : int</div>
<div class="tip" id="fs20">val y : int</div>
<div class="tip" id="fs21">property Monoid.unit: int</div>
<div class="tip" id="fs22">val stringMonoid : Monoid&lt;string&gt;<br /><br />Full name: Script.stringMonoid</div>
<div class="tip" id="fs23">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs24">val this : Monoid&lt;string&gt;</div>
<div class="tip" id="fs25">val x : string</div>
<div class="tip" id="fs26">val y : string</div>
<div class="tip" id="fs27">property Monoid.unit: string</div>
<div class="tip" id="fs28">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs29">static member ImplicitTest.sum : xs:&#39;a list * ?m:Monoid&lt;&#39;a&gt; -&gt; &#39;a</div>

