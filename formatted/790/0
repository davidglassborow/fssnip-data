<h2><a name="Triggering-events-directly" class="anchor" href="#Triggering-events-directly">Triggering events directly</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp">    <span class="c">/// Type alias that gives convenient name to F# agent type</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">Agent</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">MailboxProcessor</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>
    
    <span class="c">/// Agent that implements batch processing</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">BatchProcessor</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">count</span>) <span class="o">=</span>
      <span class="c">// Event used to report aggregated batches to the user</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">batchEvent</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">Event</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>[]<span class="o">&gt;</span>()
      <span class="c">// Trigger event on the thread where the agent is running</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="f">reportBatch</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="i">batch</span> <span class="o">=</span>
        <span class="k">try</span>
          <span class="c">// If the handler throws, we need to handle the exception</span>
          <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="i">batchEvent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="f">Trigger</span>(<span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="i">batch</span>)
        <span class="k">with</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">e</span> <span class="k">-&gt;</span>
          <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="f">printfn</span> <span class="s">&quot;Event handler failed: </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs10', 14)" onmouseover="showTip(event, 'fs10', 14)" class="i">e</span>
    
      <span class="c">// Start an agent that implements the batching</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="i">agent</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 16)" onmouseover="showTip(event, 'fs1', 16)" class="t">Agent</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span><span class="o">.</span><span class="f">Start</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs13', 17)" onmouseover="showTip(event, 'fs13', 17)" class="i">inbox</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="i">async</span> {
        <span class="k">while</span> <span class="k">true</span> <span class="k">do</span>
          <span class="c">// Repeatedly allocate a new queue </span>
          <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 19)" onmouseover="showTip(event, 'fs15', 19)" class="i">queue</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs16', 20)" onmouseover="showTip(event, 'fs16', 20)" class="t">ResizeArray</span><span class="o">&lt;</span>_<span class="o">&gt;</span>()
          <span class="c">// Add specified number of messages to the queue</span>
          <span class="k">for</span> <span onmouseout="hideTip(event, 'fs17', 21)" onmouseover="showTip(event, 'fs17', 21)" class="i">i</span> <span class="k">in</span> <span class="n">1</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs4', 22)" onmouseover="showTip(event, 'fs4', 22)" class="i">count</span> <span class="k">do</span>
            <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="i">msg</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 24)" onmouseover="showTip(event, 'fs13', 24)" class="i">inbox</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 25)" onmouseover="showTip(event, 'fs19', 25)" class="f">Receive</span>()
            <span onmouseout="hideTip(event, 'fs15', 26)" onmouseover="showTip(event, 'fs15', 26)" class="i">queue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 27)" onmouseover="showTip(event, 'fs20', 27)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="i">msg</span>)
          <span class="c">// Report the batch as an array</span>
          <span onmouseout="hideTip(event, 'fs7', 29)" onmouseover="showTip(event, 'fs7', 29)" class="f">reportBatch</span> (<span onmouseout="hideTip(event, 'fs15', 30)" onmouseover="showTip(event, 'fs15', 30)" class="i">queue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="f">ToArray</span>()) })
    
      <span class="c">/// Event that is triggered when a batch is collected</span>
      <span class="k">member</span> <span onmouseout="hideTip(event, 'fs22', 32)" onmouseover="showTip(event, 'fs22', 32)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs23', 33)" onmouseover="showTip(event, 'fs23', 33)" class="i">BatchProduced</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 34)" onmouseover="showTip(event, 'fs5', 34)" class="i">batchEvent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 35)" onmouseover="showTip(event, 'fs24', 35)" class="i">Publish</span>
      <span class="c">/// The method adds one object to the agent</span>
      <span class="k">member</span> <span onmouseout="hideTip(event, 'fs22', 36)" onmouseover="showTip(event, 'fs22', 36)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 37)" onmouseover="showTip(event, 'fs25', 37)" class="f">Post</span>(<span onmouseout="hideTip(event, 'fs26', 38)" onmouseover="showTip(event, 'fs26', 38)" class="i">value</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 39)" onmouseover="showTip(event, 'fs12', 39)" class="i">agent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 40)" onmouseover="showTip(event, 'fs27', 40)" class="f">Post</span>(<span onmouseout="hideTip(event, 'fs26', 41)" onmouseover="showTip(event, 'fs26', 41)" class="i">value</span>)
</code></pre></td>
</tr>
</table>
<h2><a name="Triggering-events-in-a-thread-pool" class="anchor" href="#Triggering-events-in-a-thread-pool">Triggering events in a thread pool</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp">    <span class="c">/// Agent that implements batch processing</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs28', 42)" onmouseover="showTip(event, 'fs28', 42)" class="t">BatchProcessor</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs4', 43)" onmouseover="showTip(event, 'fs4', 43)" class="i">count</span>) <span class="o">=</span>
      <span class="c">// Event used to report aggregated batches to the user</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 44)" onmouseover="showTip(event, 'fs5', 44)" class="i">batchEvent</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs6', 45)" onmouseover="showTip(event, 'fs6', 45)" class="t">Event</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>[]<span class="o">&gt;</span>()
      <span class="c">// Trigger event in a thread pool</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 46)" onmouseover="showTip(event, 'fs7', 46)" class="f">reportBatch</span> <span onmouseout="hideTip(event, 'fs8', 47)" onmouseover="showTip(event, 'fs8', 47)" class="i">batch</span> <span class="o">=</span>
        <span class="c">// Create simple workflow &amp; start it in the background</span>
        <span onmouseout="hideTip(event, 'fs14', 48)" onmouseover="showTip(event, 'fs14', 48)" class="i">async</span> { <span onmouseout="hideTip(event, 'fs5', 49)" onmouseover="showTip(event, 'fs5', 49)" class="i">batchEvent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 50)" onmouseover="showTip(event, 'fs9', 50)" class="f">Trigger</span>(<span onmouseout="hideTip(event, 'fs8', 51)" onmouseover="showTip(event, 'fs8', 51)" class="i">batch</span>) } 
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 52)" onmouseover="showTip(event, 'fs29', 52)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 53)" onmouseover="showTip(event, 'fs30', 53)" class="f">Start</span>
    
      <span class="c">// Start an agent that implements the batching</span>
      <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 54)" onmouseover="showTip(event, 'fs12', 54)" class="i">agent</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 55)" onmouseover="showTip(event, 'fs31', 55)" class="t">Agent</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span><span class="o">.</span><span class="f">Start</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs13', 56)" onmouseover="showTip(event, 'fs13', 56)" class="i">inbox</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 57)" onmouseover="showTip(event, 'fs14', 57)" class="i">async</span> {
        <span class="k">while</span> <span class="k">true</span> <span class="k">do</span>
          <span class="c">// Repeatedly allocate a new queue </span>
          <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 58)" onmouseover="showTip(event, 'fs15', 58)" class="i">queue</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs16', 59)" onmouseover="showTip(event, 'fs16', 59)" class="t">ResizeArray</span><span class="o">&lt;</span>_<span class="o">&gt;</span>()
          <span class="c">// Add specified number of messages to the queue</span>
          <span class="k">for</span> <span onmouseout="hideTip(event, 'fs17', 60)" onmouseover="showTip(event, 'fs17', 60)" class="i">i</span> <span class="k">in</span> <span class="n">1</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs4', 61)" onmouseover="showTip(event, 'fs4', 61)" class="i">count</span> <span class="k">do</span>
            <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs18', 62)" onmouseover="showTip(event, 'fs18', 62)" class="i">msg</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 63)" onmouseover="showTip(event, 'fs13', 63)" class="i">inbox</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 64)" onmouseover="showTip(event, 'fs19', 64)" class="f">Receive</span>()
            <span onmouseout="hideTip(event, 'fs15', 65)" onmouseover="showTip(event, 'fs15', 65)" class="i">queue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 66)" onmouseover="showTip(event, 'fs20', 66)" class="f">Add</span>(<span onmouseout="hideTip(event, 'fs18', 67)" onmouseover="showTip(event, 'fs18', 67)" class="i">msg</span>)
          <span class="c">// Report the batch as an array</span>
          <span onmouseout="hideTip(event, 'fs7', 68)" onmouseover="showTip(event, 'fs7', 68)" class="f">reportBatch</span> (<span onmouseout="hideTip(event, 'fs15', 69)" onmouseover="showTip(event, 'fs15', 69)" class="i">queue</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 70)" onmouseover="showTip(event, 'fs21', 70)" class="f">ToArray</span>()) })
    
      <span class="c">/// Event that is triggered when a batch is collected</span>
      <span class="k">member</span> <span onmouseout="hideTip(event, 'fs22', 71)" onmouseover="showTip(event, 'fs22', 71)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 72)" onmouseover="showTip(event, 'fs32', 72)" class="i">BatchProduced</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 73)" onmouseover="showTip(event, 'fs5', 73)" class="i">batchEvent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 74)" onmouseover="showTip(event, 'fs24', 74)" class="i">Publish</span>
      <span class="c">/// The method adds one object to the agent</span>
      <span class="k">member</span> <span onmouseout="hideTip(event, 'fs22', 75)" onmouseover="showTip(event, 'fs22', 75)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 76)" onmouseover="showTip(event, 'fs33', 76)" class="f">Post</span>(<span onmouseout="hideTip(event, 'fs26', 77)" onmouseover="showTip(event, 'fs26', 77)" class="i">value</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 78)" onmouseover="showTip(event, 'fs12', 78)" class="i">agent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 79)" onmouseover="showTip(event, 'fs27', 79)" class="f">Post</span>(<span onmouseout="hideTip(event, 'fs26', 80)" onmouseover="showTip(event, 'fs26', 80)" class="i">value</span>)
</code></pre></td>
</tr>
</table>
<h2><a name="Reporting-events-using-synchronization-context" class="anchor" href="#Reporting-events-using-synchronization-context">Reporting events using synchronization context</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs34', 81)" onmouseover="showTip(event, 'fs34', 81)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 82)" onmouseover="showTip(event, 'fs35', 82)" class="i">Threading</span>

<span class="c">/// Agent that implements batch processing (eventContext can </span>
<span class="c">/// be provided to specify synchronization context for event reporting)</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs36', 83)" onmouseover="showTip(event, 'fs36', 83)" class="t">BatchProcessor</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs4', 84)" onmouseover="showTip(event, 'fs4', 84)" class="i">count</span>, <span class="o">?</span><span onmouseout="hideTip(event, 'fs37', 85)" onmouseover="showTip(event, 'fs37', 85)" class="i">eventContext</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs38', 86)" onmouseover="showTip(event, 'fs38', 86)" class="t">SynchronizationContext</span>) <span class="o">=</span>
  <span class="c">/// Event used to report aggregated batches to the user</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 87)" onmouseover="showTip(event, 'fs39', 87)" class="i">batchEvent</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs6', 88)" onmouseover="showTip(event, 'fs6', 88)" class="t">Event</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>[]<span class="o">&gt;</span>()

  <span class="c">/// Triggers event using the specified synchronization context</span>
  <span class="c">/// (or directly, if no synchronization context is specified)</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 89)" onmouseover="showTip(event, 'fs40', 89)" class="f">reportBatch</span> <span onmouseout="hideTip(event, 'fs8', 90)" onmouseover="showTip(event, 'fs8', 90)" class="i">batch</span> <span class="o">=</span>
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs37', 91)" onmouseover="showTip(event, 'fs37', 91)" class="i">eventContext</span> <span class="k">with</span> 
    | <span onmouseout="hideTip(event, 'fs41', 92)" onmouseover="showTip(event, 'fs41', 92)" class="p">None</span> <span class="k">-&gt;</span> 
        <span class="c">// No synchronization context - trigger as in the first case</span>
        <span onmouseout="hideTip(event, 'fs39', 93)" onmouseover="showTip(event, 'fs39', 93)" class="i">batchEvent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 94)" onmouseover="showTip(event, 'fs9', 94)" class="f">Trigger</span>(<span onmouseout="hideTip(event, 'fs8', 95)" onmouseover="showTip(event, 'fs8', 95)" class="i">batch</span>)
    | <span onmouseout="hideTip(event, 'fs42', 96)" onmouseover="showTip(event, 'fs42', 96)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs43', 97)" onmouseover="showTip(event, 'fs43', 97)" class="i">ctx</span> <span class="k">-&gt;</span>
        <span class="c">// Use the &#39;Post&#39; method of the context to trigger the event</span>
        <span onmouseout="hideTip(event, 'fs43', 98)" onmouseover="showTip(event, 'fs43', 98)" class="i">ctx</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs44', 99)" onmouseover="showTip(event, 'fs44', 99)" class="f">Post</span>((<span class="k">fun</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs39', 100)" onmouseover="showTip(event, 'fs39', 100)" class="i">batchEvent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 101)" onmouseover="showTip(event, 'fs9', 101)" class="f">Trigger</span>(<span onmouseout="hideTip(event, 'fs8', 102)" onmouseover="showTip(event, 'fs8', 102)" class="i">batch</span>)), <span class="k">null</span>)

  <span id="fst45" onmouseout="hideTip(event, 'fs45', 103)" onmouseover="showTip(event, 'fs45', 103, document.getElementById('fst45'))" class="omitted">(unchanged agent body)</span>

  <span class="c">/// Event that is triggered when a batch is collected</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs22', 104)" onmouseover="showTip(event, 'fs22', 104)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs46', 105)" onmouseover="showTip(event, 'fs46', 105)" class="i">BatchProduced</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 106)" onmouseover="showTip(event, 'fs39', 106)" class="i">batchEvent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 107)" onmouseover="showTip(event, 'fs24', 107)" class="i">Publish</span>
  <span class="c">/// The method adds one object to the agent</span>
  <span class="k">member</span> <span onmouseout="hideTip(event, 'fs22', 108)" onmouseover="showTip(event, 'fs22', 108)" class="i">x</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs47', 109)" onmouseover="showTip(event, 'fs47', 109)" class="f">Post</span>(<span onmouseout="hideTip(event, 'fs26', 110)" onmouseover="showTip(event, 'fs26', 110)" class="i">value</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 111)" onmouseover="showTip(event, 'fs12', 111)" class="i">agent</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 112)" onmouseover="showTip(event, 'fs27', 112)" class="f">Post</span>(<span onmouseout="hideTip(event, 'fs26', 113)" onmouseover="showTip(event, 'fs26', 113)" class="i">value</span>)
</code></pre></td>
</tr>
</table>
<h2><a name="Capturing-current-user-interface-context" class="anchor" href="#Capturing-current-user-interface-context">Capturing current (user-interface) context</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
<span class="l">6: </span>
<span class="l">7: </span>
<span class="l">8: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// Agent that will trigger events on the current (GUI) thread</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 114)" onmouseover="showTip(event, 'fs48', 114)" class="i">sync</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 115)" onmouseover="showTip(event, 'fs38', 115)" class="t">SynchronizationContext</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 116)" onmouseover="showTip(event, 'fs49', 116)" class="i">Current</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 117)" onmouseover="showTip(event, 'fs50', 117)" class="i">proc</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs36', 118)" onmouseover="showTip(event, 'fs36', 118)" class="t">BatchProcessor</span><span class="o">&lt;</span>_<span class="o">&gt;</span>(<span class="n">10</span>, <span onmouseout="hideTip(event, 'fs48', 119)" onmouseover="showTip(event, 'fs48', 119)" class="i">sync</span>)

<span class="c">// Start some background work that will report batches to GUI thread</span>
<span onmouseout="hideTip(event, 'fs14', 120)" onmouseover="showTip(event, 'fs14', 120)" class="i">async</span> {
  <span class="k">for</span> <span onmouseout="hideTip(event, 'fs17', 121)" onmouseover="showTip(event, 'fs17', 121)" class="i">i</span> <span class="k">in</span> <span class="n">0</span> <span class="o">..</span> <span class="n">1000</span> <span class="k">do</span> 
    <span onmouseout="hideTip(event, 'fs50', 122)" onmouseover="showTip(event, 'fs50', 122)" class="i">proc</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 123)" onmouseover="showTip(event, 'fs51', 123)" class="f">Post</span>(<span onmouseout="hideTip(event, 'fs17', 124)" onmouseover="showTip(event, 'fs17', 124)" class="i">i</span>) } <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs29', 125)" onmouseover="showTip(event, 'fs29', 125)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 126)" onmouseover="showTip(event, 'fs52', 126)" class="f">Start</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">type Agent&lt;&#39;T&gt; = MailboxProcessor&lt;&#39;T&gt;<br /><br />Full name: Demo.Template.Agent&lt;_&gt;<br /><em><br /><br />&#160;Type alias that gives convenient name to F# agent type</em></div>
<div class="tip" id="fs2">Multiple items<br />type MailboxProcessor&lt;&#39;Msg&gt; =<br />&#160;&#160;interface IDisposable<br />&#160;&#160;new : body:(MailboxProcessor&lt;&#39;Msg&gt; -&gt; Async&lt;unit&gt;) * ?cancellationToken:CancellationToken -&gt; MailboxProcessor&lt;&#39;Msg&gt;<br />&#160;&#160;member Post : message:&#39;Msg -&gt; unit<br />&#160;&#160;member PostAndAsyncReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; Async&lt;&#39;Reply&gt;<br />&#160;&#160;member PostAndReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; &#39;Reply<br />&#160;&#160;member PostAndTryAsyncReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; Async&lt;&#39;Reply option&gt;<br />&#160;&#160;member Receive : ?timeout:int -&gt; Async&lt;&#39;Msg&gt;<br />&#160;&#160;member Scan : scanner:(&#39;Msg -&gt; Async&lt;&#39;T&gt; option) * ?timeout:int -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;member Start : unit -&gt; unit<br />&#160;&#160;member TryPostAndReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; &#39;Reply option<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Control.MailboxProcessor&lt;_&gt;<br /><br />--------------------<br />new : body:(MailboxProcessor&lt;&#39;Msg&gt; -&gt; Async&lt;unit&gt;) * ?cancellationToken:System.Threading.CancellationToken -&gt; MailboxProcessor&lt;&#39;Msg&gt;</div>
<div class="tip" id="fs3">Multiple items<br />type BatchProcessor&lt;&#39;T&gt; =<br />&#160;&#160;new : count:int -&gt; BatchProcessor&lt;&#39;T&gt;<br />&#160;&#160;member Post : value:&#39;T -&gt; unit<br />&#160;&#160;member BatchProduced : IEvent&lt;&#39;T []&gt;<br /><br />Full name: Demo.Template.BatchProcessor&lt;_&gt;<br /><em><br /><br />&#160;Agent that implements batch processing</em><br /><br />--------------------<br />new : count:int -&gt; BatchProcessor&lt;&#39;T&gt;</div>
<div class="tip" id="fs4">val count : int</div>
<div class="tip" id="fs5">val batchEvent : Event&lt;&#39;T []&gt;</div>
<div class="tip" id="fs6">Multiple items<br />module Event<br /><br />from Microsoft.FSharp.Control<br /><br />--------------------<br />type Event&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; Event&lt;&#39;T&gt;<br />&#160;&#160;member Trigger : arg:&#39;T -&gt; unit<br />&#160;&#160;member Publish : IEvent&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Event&lt;_&gt;<br /><br />--------------------<br />type Event&lt;&#39;Delegate,&#39;Args (requires delegate and &#39;Delegate :&gt; Delegate)&gt; =<br />&#160;&#160;new : unit -&gt; Event&lt;&#39;Delegate,&#39;Args&gt;<br />&#160;&#160;member Trigger : sender:obj * args:&#39;Args -&gt; unit<br />&#160;&#160;member Publish : IEvent&lt;&#39;Delegate,&#39;Args&gt;<br /><br />Full name: Microsoft.FSharp.Control.Event&lt;_,_&gt;<br /><br />--------------------<br />new : unit -&gt; Event&lt;&#39;T&gt;<br /><br />--------------------<br />new : unit -&gt; Event&lt;&#39;Delegate,&#39;Args&gt;</div>
<div class="tip" id="fs7">val reportBatch : (&#39;T [] -&gt; unit)</div>
<div class="tip" id="fs8">val batch : &#39;T []</div>
<div class="tip" id="fs9">member Event.Trigger : arg:&#39;T -&gt; unit</div>
<div class="tip" id="fs10">val e : exn</div>
<div class="tip" id="fs11">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs12">val agent : MailboxProcessor&lt;&#39;T&gt;</div>
<div class="tip" id="fs13">val inbox : MailboxProcessor&lt;&#39;T&gt;</div>
<div class="tip" id="fs14">val async : AsyncBuilder<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.async</div>
<div class="tip" id="fs15">val queue : ResizeArray&lt;&#39;T&gt;</div>
<div class="tip" id="fs16">type ResizeArray&lt;&#39;T&gt; = System.Collections.Generic.List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.ResizeArray&lt;_&gt;</div>
<div class="tip" id="fs17">val i : int</div>
<div class="tip" id="fs18">val msg : &#39;T</div>
<div class="tip" id="fs19">member MailboxProcessor.Receive : ?timeout:int -&gt; Async&lt;&#39;Msg&gt;</div>
<div class="tip" id="fs20">System.Collections.Generic.List.Add(item: &#39;T) : unit</div>
<div class="tip" id="fs21">System.Collections.Generic.List.ToArray() : &#39;T []</div>
<div class="tip" id="fs22">val x : BatchProcessor&lt;&#39;T&gt;</div>
<div class="tip" id="fs23">member BatchProcessor.BatchProduced : IEvent&lt;&#39;T []&gt;<br /><br />Full name: Demo.Template.BatchProcessor`1.BatchProduced<br /><em><br /><br />&#160;Event that is triggered when a batch is collected</em></div>
<div class="tip" id="fs24">property Event.Publish: IEvent&lt;&#39;T []&gt;</div>
<div class="tip" id="fs25">member BatchProcessor.Post : value:&#39;T -&gt; unit<br /><br />Full name: Demo.Template.BatchProcessor`1.Post<br /><em><br /><br />&#160;The method adds one object to the agent</em></div>
<div class="tip" id="fs26">val value : &#39;T</div>
<div class="tip" id="fs27">member MailboxProcessor.Post : message:&#39;Msg -&gt; unit</div>
<div class="tip" id="fs28">Multiple items<br />type BatchProcessor&lt;&#39;T&gt; =<br />&#160;&#160;new : count:int -&gt; BatchProcessor&lt;&#39;T&gt;<br />&#160;&#160;member Post : value:&#39;T -&gt; unit<br />&#160;&#160;member BatchProduced : IEvent&lt;&#39;T []&gt;<br /><br />Full name: Demo.ThreadPool.BatchProcessor&lt;_&gt;<br /><em><br /><br />&#160;Agent that implements batch processing</em><br /><br />--------------------<br />new : count:int -&gt; BatchProcessor&lt;&#39;T&gt;</div>
<div class="tip" id="fs29">Multiple items<br />type Async<br />static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member CancelDefaultToken : unit -&gt; unit<br />static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromContinuations : callback:((&#39;T -&gt; unit) * (exn -&gt; unit) * (OperationCanceledException -&gt; unit) -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;<br />static member OnCancel : interruption:(unit -&gt; unit) -&gt; Async&lt;IDisposable&gt;<br />static member Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;<br />static member RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T<br />static member Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;<br />static member Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;<br />static member StartChild : computation:Async&lt;&#39;T&gt; * ?millisecondsTimeout:int -&gt; Async&lt;Async&lt;&#39;T&gt;&gt;<br />static member StartChildAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions -&gt; Async&lt;Task&lt;&#39;T&gt;&gt;<br />static member StartImmediate : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartWithContinuations : computation:Async&lt;&#39;T&gt; * continuation:(&#39;T -&gt; unit) * exceptionContinuation:(exn -&gt; unit) * cancellationContinuation:(OperationCanceledException -&gt; unit) * ?cancellationToken:CancellationToken -&gt; unit<br />static member SwitchToContext : syncContext:SynchronizationContext -&gt; Async&lt;unit&gt;<br />static member SwitchToNewThread : unit -&gt; Async&lt;unit&gt;<br />static member SwitchToThreadPool : unit -&gt; Async&lt;unit&gt;<br />static member TryCancelled : computation:Async&lt;&#39;T&gt; * compensation:(OperationCanceledException -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member CancellationToken : Async&lt;CancellationToken&gt;<br />static member DefaultCancellationToken : CancellationToken<br /><br />Full name: Microsoft.FSharp.Control.Async<br /><br />--------------------<br />type Async&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Async&lt;_&gt;</div>
<div class="tip" id="fs30">static member Async.Start : computation:Async&lt;unit&gt; * ?cancellationToken:System.Threading.CancellationToken -&gt; unit</div>
<div class="tip" id="fs31">type Agent&lt;&#39;T&gt; = MailboxProcessor&lt;&#39;T&gt;<br /><br />Full name: Demo.Agent&lt;_&gt;<br /><em><br /><br />&#160;Type alias that gives convenient name to F# agent type</em></div>
<div class="tip" id="fs32">member BatchProcessor.BatchProduced : IEvent&lt;&#39;T []&gt;<br /><br />Full name: Demo.ThreadPool.BatchProcessor`1.BatchProduced<br /><em><br /><br />&#160;Event that is triggered when a batch is collected</em></div>
<div class="tip" id="fs33">member BatchProcessor.Post : value:&#39;T -&gt; unit<br /><br />Full name: Demo.ThreadPool.BatchProcessor`1.Post<br /><em><br /><br />&#160;The method adds one object to the agent</em></div>
<div class="tip" id="fs34">namespace System</div>
<div class="tip" id="fs35">namespace System.Threading</div>
<div class="tip" id="fs36">Multiple items<br />type BatchProcessor&lt;&#39;T&gt; =<br />&#160;&#160;new : count:int * ?eventContext:SynchronizationContext -&gt; BatchProcessor&lt;&#39;T&gt;<br />&#160;&#160;member Post : value:&#39;T -&gt; unit<br />&#160;&#160;member BatchProduced : IEvent&lt;&#39;T []&gt;<br /><br />Full name: Demo.BatchProcessor&lt;_&gt;<br /><em><br /><br />&#160;Agent that implements batch processing (eventContext can <br />&#160;be provided to specify synchronization context for event reporting)</em><br /><br />--------------------<br />new : count:int * ?eventContext:SynchronizationContext -&gt; BatchProcessor&lt;&#39;T&gt;</div>
<div class="tip" id="fs37">val eventContext : SynchronizationContext option</div>
<div class="tip" id="fs38">Multiple items<br />type SynchronizationContext =<br />&#160;&#160;new : unit -&gt; SynchronizationContext<br />&#160;&#160;member CreateCopy : unit -&gt; SynchronizationContext<br />&#160;&#160;member IsWaitNotificationRequired : unit -&gt; bool<br />&#160;&#160;member OperationCompleted : unit -&gt; unit<br />&#160;&#160;member OperationStarted : unit -&gt; unit<br />&#160;&#160;member Post : d:SendOrPostCallback * state:obj -&gt; unit<br />&#160;&#160;member Send : d:SendOrPostCallback * state:obj -&gt; unit<br />&#160;&#160;member Wait : waitHandles:nativeint[] * waitAll:bool * millisecondsTimeout:int -&gt; int<br />&#160;&#160;static member Current : SynchronizationContext<br />&#160;&#160;static member SetSynchronizationContext : syncContext:SynchronizationContext -&gt; unit<br /><br />Full name: System.Threading.SynchronizationContext<br /><br />--------------------<br />SynchronizationContext() : unit</div>
<div class="tip" id="fs39">val batchEvent : Event&lt;&#39;T []&gt;<br /><em><br /><br />&#160;Event used to report aggregated batches to the user</em></div>
<div class="tip" id="fs40">val reportBatch : (&#39;T [] -&gt; unit)<br /><em><br /><br />&#160;Triggers event using the specified synchronization context<br />&#160;(or directly, if no synchronization context is specified)</em></div>
<div class="tip" id="fs41">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs42">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs43">val ctx : SynchronizationContext</div>
<div class="tip" id="fs44">SynchronizationContext.Post(d: SendOrPostCallback, state: obj) : unit</div>
<div class="tip" id="fs45">// Start an agent that implements the batching<br />&#160;&#160;let agent = Agent&lt;&#39;T&gt;.Start(fun inbox -&gt; async {<br />&#160;&#160;&#160;&#160;while true do<br />&#160;&#160;&#160;&#160;&#160;&#160;// Repeatedly allocate a new queue <br />&#160;&#160;&#160;&#160;&#160;&#160;let queue = new ResizeArray&lt;_&gt;()<br />&#160;&#160;&#160;&#160;&#160;&#160;// Add specified number of messages to the queue<br />&#160;&#160;&#160;&#160;&#160;&#160;for i in 1 .. count do<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let! msg = inbox.Receive()<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;queue.Add(msg)<br />&#160;&#160;&#160;&#160;&#160;&#160;// Report the batch as an array<br />&#160;&#160;&#160;&#160;&#160;&#160;reportBatch (queue.ToArray()) })</div>
<div class="tip" id="fs46">member BatchProcessor.BatchProduced : IEvent&lt;&#39;T []&gt;<br /><br />Full name: Demo.BatchProcessor`1.BatchProduced<br /><em><br /><br />&#160;Event that is triggered when a batch is collected</em></div>
<div class="tip" id="fs47">member BatchProcessor.Post : value:&#39;T -&gt; unit<br /><br />Full name: Demo.BatchProcessor`1.Post<br /><em><br /><br />&#160;The method adds one object to the agent</em></div>
<div class="tip" id="fs48">val sync : SynchronizationContext<br /><br />Full name: Demo.sync</div>
<div class="tip" id="fs49">property SynchronizationContext.Current: SynchronizationContext</div>
<div class="tip" id="fs50">val proc : BatchProcessor&lt;int&gt;<br /><br />Full name: Demo.proc</div>
<div class="tip" id="fs51">member BatchProcessor.Post : value:&#39;T -&gt; unit<br /><em><br /><br />&#160;The method adds one object to the agent</em></div>
<div class="tip" id="fs52">static member Async.Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit</div>

