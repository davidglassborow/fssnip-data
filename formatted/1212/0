<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
<span class="l">74: </span>
<span class="l">75: </span>
<span class="l">76: </span>
<span class="l">77: </span>
<span class="l">78: </span>
<span class="l">79: </span>
<span class="l">80: </span>
<span class="l">81: </span>
<span class="l">82: </span>
<span class="l">83: </span>
<span class="l">84: </span>
<span class="l">85: </span>
<span class="l">86: </span>
<span class="l">87: </span>
<span class="l">88: </span>
<span class="l">89: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">fs</span>
    
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">NUnit</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">Framework</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">FsUnit</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">Data</span>
    
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="t">Operation</span> <span class="o">=</span> 
    | <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="p">Mult</span> 
    | <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="p">Sub</span>
    | <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="p">Add</span>
    <span class="k">override</span> <span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="f">ToString</span>() <span class="o">=</span> 
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="i">this</span> <span class="k">with</span>  
            | <span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="p">Mult</span> <span class="k">-&gt;</span> <span class="s">&quot;*&quot;</span> 
            | <span onmouseout="hideTip(event, 'fs9', 16)" onmouseover="showTip(event, 'fs9', 16)" class="p">Sub</span> <span class="k">-&gt;</span> <span class="s">&quot;-&quot;</span> 
            | <span onmouseout="hideTip(event, 'fs10', 17)" onmouseover="showTip(event, 'fs10', 17)" class="p">Add</span> <span class="k">-&gt;</span> <span class="s">&quot;+&quot;</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="i">evaluate</span> <span class="o">=</span> 
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs11', 20)" onmouseover="showTip(event, 'fs11', 20)" class="i">this</span> <span class="k">with</span>  
            | <span onmouseout="hideTip(event, 'fs8', 21)" onmouseover="showTip(event, 'fs8', 21)" class="p">Mult</span> <span class="k">-&gt;</span> <span class="o">(*)</span> 
            | <span onmouseout="hideTip(event, 'fs9', 22)" onmouseover="showTip(event, 'fs9', 22)" class="p">Sub</span> <span class="k">-&gt;</span> (<span class="o">-</span>) 
            | <span onmouseout="hideTip(event, 'fs10', 23)" onmouseover="showTip(event, 'fs10', 23)" class="p">Add</span> <span class="k">-&gt;</span> (<span class="o">+</span>)
    
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 24)" onmouseover="showTip(event, 'fs14', 24)" class="i">orderofOps</span> <span class="o">=</span> [[<span onmouseout="hideTip(event, 'fs8', 25)" onmouseover="showTip(event, 'fs8', 25)" class="p">Mult</span>];[<span onmouseout="hideTip(event, 'fs10', 26)" onmouseover="showTip(event, 'fs10', 26)" class="p">Add</span>;<span onmouseout="hideTip(event, 'fs9', 27)" onmouseover="showTip(event, 'fs9', 27)" class="p">Sub</span>]]

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs15', 28)" onmouseover="showTip(event, 'fs15', 28)" class="t">Expression</span> <span class="o">=</span> 
    | <span onmouseout="hideTip(event, 'fs16', 29)" onmouseover="showTip(event, 'fs16', 29)" class="p">Terminal</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs17', 30)" onmouseover="showTip(event, 'fs17', 30)" class="t">int</span>    
    | <span onmouseout="hideTip(event, 'fs18', 31)" onmouseover="showTip(event, 'fs18', 31)" class="p">Expr</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs15', 32)" onmouseover="showTip(event, 'fs15', 32)" class="t">Expression</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs7', 33)" onmouseover="showTip(event, 'fs7', 33)" class="t">Operation</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs15', 34)" onmouseover="showTip(event, 'fs15', 34)" class="t">Expression</span>
    
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 35)" onmouseover="showTip(event, 'fs19', 35)" class="i">rand</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs5', 36)" onmouseover="showTip(event, 'fs5', 36)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 37)" onmouseover="showTip(event, 'fs20', 37)" class="t">Random</span>()
    
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 38)" onmouseover="showTip(event, 'fs21', 38)" class="f">randNum</span> <span onmouseout="hideTip(event, 'fs22', 39)" onmouseover="showTip(event, 'fs22', 39)" class="i">min</span> <span onmouseout="hideTip(event, 'fs23', 40)" onmouseover="showTip(event, 'fs23', 40)" class="i">max</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="i">rand</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 42)" onmouseover="showTip(event, 'fs24', 42)" class="f">Next</span>(<span onmouseout="hideTip(event, 'fs22', 43)" onmouseover="showTip(event, 'fs22', 43)" class="i">min</span>, <span onmouseout="hideTip(event, 'fs23', 44)" onmouseover="showTip(event, 'fs23', 44)" class="i">max</span>)
    
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 45)" onmouseover="showTip(event, 'fs25', 45)" class="f">randomOperation</span> () <span class="o">=</span> 
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs21', 46)" onmouseover="showTip(event, 'fs21', 46)" class="f">randNum</span> <span class="n">0</span> <span class="n">2</span> <span class="k">with</span> 
    | <span class="n">0</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs8', 47)" onmouseover="showTip(event, 'fs8', 47)" class="p">Mult</span> 
    | <span class="n">1</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 48)" onmouseover="showTip(event, 'fs9', 48)" class="p">Sub</span>  
    | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs10', 49)" onmouseover="showTip(event, 'fs10', 49)" class="p">Add</span>

<span class="k">let</span> (|<span class="p">TermWithExpression</span>|_|) <span onmouseout="hideTip(event, 'fs26', 50)" onmouseover="showTip(event, 'fs26', 50)" class="f">predicate</span> <span onmouseout="hideTip(event, 'fs27', 51)" onmouseover="showTip(event, 'fs27', 51)" class="i">expr</span>  <span class="o">=</span> 
       <span class="k">match</span> <span onmouseout="hideTip(event, 'fs27', 52)" onmouseover="showTip(event, 'fs27', 52)" class="i">expr</span> <span class="k">with</span> 
        | <span onmouseout="hideTip(event, 'fs18', 53)" onmouseover="showTip(event, 'fs18', 53)" class="p">Expr</span>(<span onmouseout="hideTip(event, 'fs16', 54)" onmouseover="showTip(event, 'fs16', 54)" class="p">Terminal</span>(<span onmouseout="hideTip(event, 'fs28', 55)" onmouseover="showTip(event, 'fs28', 55)" class="i">left</span>), <span onmouseout="hideTip(event, 'fs29', 56)" onmouseover="showTip(event, 'fs29', 56)" class="i">targetOp</span>, <span onmouseout="hideTip(event, 'fs18', 57)" onmouseover="showTip(event, 'fs18', 57)" class="p">Expr</span>(<span onmouseout="hideTip(event, 'fs16', 58)" onmouseover="showTip(event, 'fs16', 58)" class="p">Terminal</span>(<span onmouseout="hideTip(event, 'fs30', 59)" onmouseover="showTip(event, 'fs30', 59)" class="i">right</span>), <span onmouseout="hideTip(event, 'fs31', 60)" onmouseover="showTip(event, 'fs31', 60)" class="i">o</span>, <span onmouseout="hideTip(event, 'fs32', 61)" onmouseover="showTip(event, 'fs32', 61)" class="i">next</span>)) 
            <span class="k">when</span> <span onmouseout="hideTip(event, 'fs26', 62)" onmouseover="showTip(event, 'fs26', 62)" class="f">predicate</span> <span onmouseout="hideTip(event, 'fs29', 63)" onmouseover="showTip(event, 'fs29', 63)" class="i">targetOp</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs18', 64)" onmouseover="showTip(event, 'fs18', 64)" class="p">Expr</span>(<span onmouseout="hideTip(event, 'fs16', 65)" onmouseover="showTip(event, 'fs16', 65)" class="p">Terminal</span>(<span onmouseout="hideTip(event, 'fs29', 66)" onmouseover="showTip(event, 'fs29', 66)" class="i">targetOp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 67)" onmouseover="showTip(event, 'fs33', 67)" class="f">evaluate</span> <span onmouseout="hideTip(event, 'fs28', 68)" onmouseover="showTip(event, 'fs28', 68)" class="i">left</span> <span onmouseout="hideTip(event, 'fs30', 69)" onmouseover="showTip(event, 'fs30', 69)" class="i">right</span>), <span onmouseout="hideTip(event, 'fs31', 70)" onmouseover="showTip(event, 'fs31', 70)" class="i">o</span>, <span onmouseout="hideTip(event, 'fs32', 71)" onmouseover="showTip(event, 'fs32', 71)" class="i">next</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs34', 72)" onmouseover="showTip(event, 'fs34', 72)" class="p">Some</span>
        | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs35', 73)" onmouseover="showTip(event, 'fs35', 73)" class="p">None</span>

<span class="k">let</span> (|<span class="p">TermWithTerm</span>|_|) <span onmouseout="hideTip(event, 'fs26', 74)" onmouseover="showTip(event, 'fs26', 74)" class="f">predicate</span> <span onmouseout="hideTip(event, 'fs27', 75)" onmouseover="showTip(event, 'fs27', 75)" class="i">expr</span> <span class="o">=</span> 
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs27', 76)" onmouseover="showTip(event, 'fs27', 76)" class="i">expr</span> <span class="k">with</span> 
        | <span onmouseout="hideTip(event, 'fs18', 77)" onmouseover="showTip(event, 'fs18', 77)" class="p">Expr</span>(<span onmouseout="hideTip(event, 'fs16', 78)" onmouseover="showTip(event, 'fs16', 78)" class="p">Terminal</span>(<span onmouseout="hideTip(event, 'fs36', 79)" onmouseover="showTip(event, 'fs36', 79)" class="i">item</span>), <span onmouseout="hideTip(event, 'fs29', 80)" onmouseover="showTip(event, 'fs29', 80)" class="i">targetOp</span>, <span onmouseout="hideTip(event, 'fs16', 81)" onmouseover="showTip(event, 'fs16', 81)" class="p">Terminal</span>(<span onmouseout="hideTip(event, 'fs37', 82)" onmouseover="showTip(event, 'fs37', 82)" class="i">item2</span>)) 
                <span class="k">when</span> <span onmouseout="hideTip(event, 'fs26', 83)" onmouseover="showTip(event, 'fs26', 83)" class="f">predicate</span> <span onmouseout="hideTip(event, 'fs29', 84)" onmouseover="showTip(event, 'fs29', 84)" class="i">targetOp</span> <span class="k">-&gt;</span> 
                    <span onmouseout="hideTip(event, 'fs16', 85)" onmouseover="showTip(event, 'fs16', 85)" class="p">Terminal</span>(<span onmouseout="hideTip(event, 'fs29', 86)" onmouseover="showTip(event, 'fs29', 86)" class="i">targetOp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 87)" onmouseover="showTip(event, 'fs33', 87)" class="f">evaluate</span> <span onmouseout="hideTip(event, 'fs36', 88)" onmouseover="showTip(event, 'fs36', 88)" class="i">item</span> <span onmouseout="hideTip(event, 'fs37', 89)" onmouseover="showTip(event, 'fs37', 89)" class="i">item2</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs34', 90)" onmouseover="showTip(event, 'fs34', 90)" class="p">Some</span>
        | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs35', 91)" onmouseover="showTip(event, 'fs35', 91)" class="p">None</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 92)" onmouseover="showTip(event, 'fs38', 92)" class="f">foldExpr</span> <span onmouseout="hideTip(event, 'fs27', 93)" onmouseover="showTip(event, 'fs27', 93)" class="i">expr</span> <span onmouseout="hideTip(event, 'fs39', 94)" onmouseover="showTip(event, 'fs39', 94)" class="i">opsInPrecedence</span> <span class="o">=</span> 
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs40', 95)" onmouseover="showTip(event, 'fs40', 95)" class="f">foldExpr&#39;</span> <span onmouseout="hideTip(event, 'fs27', 96)" onmouseover="showTip(event, 'fs27', 96)" class="i">expr</span> <span class="o">=</span> 
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 97)" onmouseover="showTip(event, 'fs41', 97)" class="f">shouldEvalOperator</span> <span onmouseout="hideTip(event, 'fs31', 98)" onmouseover="showTip(event, 'fs31', 98)" class="i">o</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs42', 99)" onmouseover="showTip(event, 'fs42', 99)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs43', 100)" onmouseover="showTip(event, 'fs43', 100)" class="f">exists</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs44', 101)" onmouseover="showTip(event, 'fs44', 101)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs44', 102)" onmouseover="showTip(event, 'fs44', 102)" class="i">i</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 103)" onmouseover="showTip(event, 'fs31', 103)" class="i">o</span>) <span onmouseout="hideTip(event, 'fs39', 104)" onmouseover="showTip(event, 'fs39', 104)" class="i">opsInPrecedence</span>

        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs27', 105)" onmouseover="showTip(event, 'fs27', 105)" class="i">expr</span> <span class="k">with</span> 
            | <span onmouseout="hideTip(event, 'fs45', 106)" onmouseover="showTip(event, 'fs45', 106)" class="p">TermWithExpression</span> <span onmouseout="hideTip(event, 'fs41', 107)" onmouseover="showTip(event, 'fs41', 107)" class="f">shouldEvalOperator</span> <span onmouseout="hideTip(event, 'fs46', 108)" onmouseover="showTip(event, 'fs46', 108)" class="i">output</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs40', 109)" onmouseover="showTip(event, 'fs40', 109)" class="f">foldExpr&#39;</span> <span onmouseout="hideTip(event, 'fs46', 110)" onmouseover="showTip(event, 'fs46', 110)" class="i">output</span>    
            | <span onmouseout="hideTip(event, 'fs47', 111)" onmouseover="showTip(event, 'fs47', 111)" class="p">TermWithTerm</span> <span onmouseout="hideTip(event, 'fs41', 112)" onmouseover="showTip(event, 'fs41', 112)" class="f">shouldEvalOperator</span> <span onmouseout="hideTip(event, 'fs46', 113)" onmouseover="showTip(event, 'fs46', 113)" class="i">output</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs46', 114)" onmouseover="showTip(event, 'fs46', 114)" class="i">output</span>
            | <span onmouseout="hideTip(event, 'fs18', 115)" onmouseover="showTip(event, 'fs18', 115)" class="p">Expr</span>(<span onmouseout="hideTip(event, 'fs48', 116)" onmouseover="showTip(event, 'fs48', 116)" class="i">left</span>, <span onmouseout="hideTip(event, 'fs31', 117)" onmouseover="showTip(event, 'fs31', 117)" class="i">o</span>, <span onmouseout="hideTip(event, 'fs49', 118)" onmouseover="showTip(event, 'fs49', 118)" class="i">right</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs18', 119)" onmouseover="showTip(event, 'fs18', 119)" class="p">Expr</span>(<span onmouseout="hideTip(event, 'fs40', 120)" onmouseover="showTip(event, 'fs40', 120)" class="f">foldExpr&#39;</span> <span onmouseout="hideTip(event, 'fs48', 121)" onmouseover="showTip(event, 'fs48', 121)" class="i">left</span>, <span onmouseout="hideTip(event, 'fs31', 122)" onmouseover="showTip(event, 'fs31', 122)" class="i">o</span>, <span onmouseout="hideTip(event, 'fs40', 123)" onmouseover="showTip(event, 'fs40', 123)" class="f">foldExpr&#39;</span> <span onmouseout="hideTip(event, 'fs49', 124)" onmouseover="showTip(event, 'fs49', 124)" class="i">right</span>)            
            | <span onmouseout="hideTip(event, 'fs16', 125)" onmouseover="showTip(event, 'fs16', 125)" class="p">Terminal</span>(<span onmouseout="hideTip(event, 'fs50', 126)" onmouseover="showTip(event, 'fs50', 126)" class="i">i</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs16', 127)" onmouseover="showTip(event, 'fs16', 127)" class="p">Terminal</span>(<span onmouseout="hideTip(event, 'fs50', 128)" onmouseover="showTip(event, 'fs50', 128)" class="i">i</span>)

    <span onmouseout="hideTip(event, 'fs40', 129)" onmouseover="showTip(event, 'fs40', 129)" class="f">foldExpr&#39;</span> <span onmouseout="hideTip(event, 'fs27', 130)" onmouseover="showTip(event, 'fs27', 130)" class="i">expr</span>
    
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs51', 131)" onmouseover="showTip(event, 'fs51', 131)" class="f">randomExpression</span> <span onmouseout="hideTip(event, 'fs22', 132)" onmouseover="showTip(event, 'fs22', 132)" class="i">min</span> <span onmouseout="hideTip(event, 'fs23', 133)" onmouseover="showTip(event, 'fs23', 133)" class="i">max</span> <span onmouseout="hideTip(event, 'fs52', 134)" onmouseover="showTip(event, 'fs52', 134)" class="i">length</span> <span class="o">=</span> 
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs52', 135)" onmouseover="showTip(event, 'fs52', 135)" class="i">length</span> <span class="k">with</span> 
        | <span class="n">0</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs16', 136)" onmouseover="showTip(event, 'fs16', 136)" class="p">Terminal</span>(<span onmouseout="hideTip(event, 'fs21', 137)" onmouseover="showTip(event, 'fs21', 137)" class="f">randNum</span> <span onmouseout="hideTip(event, 'fs22', 138)" onmouseover="showTip(event, 'fs22', 138)" class="i">min</span> <span onmouseout="hideTip(event, 'fs23', 139)" onmouseover="showTip(event, 'fs23', 139)" class="i">max</span>)
        | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs18', 140)" onmouseover="showTip(event, 'fs18', 140)" class="p">Expr</span>(<span onmouseout="hideTip(event, 'fs16', 141)" onmouseover="showTip(event, 'fs16', 141)" class="p">Terminal</span>(<span onmouseout="hideTip(event, 'fs21', 142)" onmouseover="showTip(event, 'fs21', 142)" class="f">randNum</span> <span onmouseout="hideTip(event, 'fs22', 143)" onmouseover="showTip(event, 'fs22', 143)" class="i">min</span> <span onmouseout="hideTip(event, 'fs23', 144)" onmouseover="showTip(event, 'fs23', 144)" class="i">max</span>), <span onmouseout="hideTip(event, 'fs25', 145)" onmouseover="showTip(event, 'fs25', 145)" class="f">randomOperation</span>(), <span onmouseout="hideTip(event, 'fs51', 146)" onmouseover="showTip(event, 'fs51', 146)" class="f">randomExpression</span> <span onmouseout="hideTip(event, 'fs22', 147)" onmouseover="showTip(event, 'fs22', 147)" class="i">min</span> <span onmouseout="hideTip(event, 'fs23', 148)" onmouseover="showTip(event, 'fs23', 148)" class="i">max</span> (<span onmouseout="hideTip(event, 'fs52', 149)" onmouseover="showTip(event, 'fs52', 149)" class="i">length</span> <span class="o">-</span> <span class="n">1</span>))
    
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs53', 150)" onmouseover="showTip(event, 'fs53', 150)" class="f">display</span> <span class="o">=</span> <span class="k">function</span>
        | <span onmouseout="hideTip(event, 'fs16', 151)" onmouseover="showTip(event, 'fs16', 151)" class="p">Terminal</span>(<span onmouseout="hideTip(event, 'fs50', 152)" onmouseover="showTip(event, 'fs50', 152)" class="i">i</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs50', 153)" onmouseover="showTip(event, 'fs50', 153)" class="i">i</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs54', 154)" onmouseover="showTip(event, 'fs54', 154)" class="f">ToString</span>()
        | <span onmouseout="hideTip(event, 'fs18', 155)" onmouseover="showTip(event, 'fs18', 155)" class="p">Expr</span>(<span onmouseout="hideTip(event, 'fs55', 156)" onmouseover="showTip(event, 'fs55', 156)" class="i">i</span>, <span onmouseout="hideTip(event, 'fs56', 157)" onmouseover="showTip(event, 'fs56', 157)" class="i">op</span>, <span onmouseout="hideTip(event, 'fs57', 158)" onmouseover="showTip(event, 'fs57', 158)" class="i">exp</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 159)" onmouseover="showTip(event, 'fs5', 159)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs58', 160)" onmouseover="showTip(event, 'fs58', 160)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 161)" onmouseover="showTip(event, 'fs59', 161)" class="f">Format</span>(<span class="s">&quot;{0} {1} {2}&quot;</span>,<span onmouseout="hideTip(event, 'fs53', 162)" onmouseover="showTip(event, 'fs53', 162)" class="f">display</span> <span onmouseout="hideTip(event, 'fs55', 163)" onmouseover="showTip(event, 'fs55', 163)" class="i">i</span>, <span onmouseout="hideTip(event, 'fs56', 164)" onmouseover="showTip(event, 'fs56', 164)" class="i">op</span>,<span onmouseout="hideTip(event, 'fs53', 165)" onmouseover="showTip(event, 'fs53', 165)" class="f">display</span> <span onmouseout="hideTip(event, 'fs57', 166)" onmouseover="showTip(event, 'fs57', 166)" class="i">exp</span>)        
    
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 167)" onmouseover="showTip(event, 'fs60', 167)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs61', 168)" onmouseover="showTip(event, 'fs61', 168)" class="i">e</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs42', 169)" onmouseover="showTip(event, 'fs42', 169)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs62', 170)" onmouseover="showTip(event, 'fs62', 170)" class="f">fold</span> <span onmouseout="hideTip(event, 'fs38', 171)" onmouseover="showTip(event, 'fs38', 171)" class="f">foldExpr</span> <span onmouseout="hideTip(event, 'fs61', 172)" onmouseover="showTip(event, 'fs61', 172)" class="i">e</span> <span onmouseout="hideTip(event, 'fs14', 173)" onmouseover="showTip(event, 'fs14', 173)" class="i">orderofOps</span>
    
[&lt;<span onmouseout="hideTip(event, 'fs63', 174)" onmouseover="showTip(event, 'fs63', 174)" class="t">Test</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs64', 175)" onmouseover="showTip(event, 'fs64', 175)" class="f">arithmeticTest</span>() <span class="o">=</span>
 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs65', 176)" onmouseover="showTip(event, 'fs65', 176)" class="i">dt</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs66', 177)" onmouseover="showTip(event, 'fs66', 177)" class="t">DataTable</span>()    

    <span class="k">for</span> <span onmouseout="hideTip(event, 'fs50', 178)" onmouseover="showTip(event, 'fs50', 178)" class="i">i</span> <span class="k">in</span> [<span class="n">0..</span><span class="n">100</span>] <span class="k">do</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs67', 179)" onmouseover="showTip(event, 'fs67', 179)" class="i">randomExpr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 180)" onmouseover="showTip(event, 'fs51', 180)" class="f">randomExpression</span> <span class="n">0</span> <span class="n">10</span> <span class="n">5</span>

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs68', 181)" onmouseover="showTip(event, 'fs68', 181)" class="i">validationResult</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs65', 182)" onmouseover="showTip(event, 'fs65', 182)" class="i">dt</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs69', 183)" onmouseover="showTip(event, 'fs69', 183)" class="f">Compute</span>(<span onmouseout="hideTip(event, 'fs53', 184)" onmouseover="showTip(event, 'fs53', 184)" class="f">display</span> <span onmouseout="hideTip(event, 'fs67', 185)" onmouseover="showTip(event, 'fs67', 185)" class="i">randomExpr</span>, <span class="s">&quot;&quot;</span>)<span class="o">.</span><span class="f">ToString</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs70', 186)" onmouseover="showTip(event, 'fs70', 186)" class="t">Convert</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 187)" onmouseover="showTip(event, 'fs71', 187)" class="f">ToInt32</span>
    
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs72', 188)" onmouseover="showTip(event, 'fs72', 188)" class="i">result</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs60', 189)" onmouseover="showTip(event, 'fs60', 189)" class="f">eval</span> <span onmouseout="hideTip(event, 'fs67', 190)" onmouseover="showTip(event, 'fs67', 190)" class="i">randomExpr</span>
            
        <span onmouseout="hideTip(event, 'fs73', 191)" onmouseover="showTip(event, 'fs73', 191)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s"> = </span><span class="pf">%d</span><span class="s"> = </span><span class="pf">%d</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs53', 192)" onmouseover="showTip(event, 'fs53', 192)" class="f">display</span> <span onmouseout="hideTip(event, 'fs67', 193)" onmouseover="showTip(event, 'fs67', 193)" class="i">randomExpr</span>) <span onmouseout="hideTip(event, 'fs68', 194)" onmouseover="showTip(event, 'fs68', 194)" class="i">validationResult</span> (<span class="k">match</span> <span onmouseout="hideTip(event, 'fs72', 195)" onmouseover="showTip(event, 'fs72', 195)" class="i">result</span> <span class="k">with</span> <span onmouseout="hideTip(event, 'fs16', 196)" onmouseover="showTip(event, 'fs16', 196)" class="p">Terminal</span>(<span onmouseout="hideTip(event, 'fs74', 197)" onmouseover="showTip(event, 'fs74', 197)" class="i">x</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs74', 198)" onmouseover="showTip(event, 'fs74', 198)" class="i">x</span>)
    
        <span onmouseout="hideTip(event, 'fs72', 199)" onmouseover="showTip(event, 'fs72', 199)" class="i">result</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs75', 200)" onmouseover="showTip(event, 'fs75', 200)" class="f">should</span> <span onmouseout="hideTip(event, 'fs76', 201)" onmouseover="showTip(event, 'fs76', 201)" class="f">equal</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs16', 202)" onmouseover="showTip(event, 'fs16', 202)" class="p">Terminal</span>(<span onmouseout="hideTip(event, 'fs68', 203)" onmouseover="showTip(event, 'fs68', 203)" class="i">validationResult</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module fs</div>
<div class="tip" id="fs2">namespace NUnit</div>
<div class="tip" id="fs3">namespace NUnit.Framework</div>
<div class="tip" id="fs4">namespace FsUnit</div>
<div class="tip" id="fs5">namespace System</div>
<div class="tip" id="fs6">namespace System.Data</div>
<div class="tip" id="fs7">type Operation =<br />&#160;&#160;| Mult<br />&#160;&#160;| Sub<br />&#160;&#160;| Add<br />&#160;&#160;override ToString : unit -&gt; string<br />&#160;&#160;member evaluate : (int -&gt; int -&gt; int)<br /><br />Full name: fs.Operation</div>
<div class="tip" id="fs8">union case Operation.Mult: Operation</div>
<div class="tip" id="fs9">union case Operation.Sub: Operation</div>
<div class="tip" id="fs10">union case Operation.Add: Operation</div>
<div class="tip" id="fs11">val this : Operation</div>
<div class="tip" id="fs12">override Operation.ToString : unit -&gt; string<br /><br />Full name: fs.Operation.ToString</div>
<div class="tip" id="fs13">member Operation.evaluate : (int -&gt; int -&gt; int)<br /><br />Full name: fs.Operation.evaluate</div>
<div class="tip" id="fs14">val orderofOps : Operation list list<br /><br />Full name: fs.orderofOps</div>
<div class="tip" id="fs15">type Expression =<br />&#160;&#160;| Terminal of int<br />&#160;&#160;| Expr of Expression * Operation * Expression<br /><br />Full name: fs.Expression</div>
<div class="tip" id="fs16">union case Expression.Terminal: int -&gt; Expression</div>
<div class="tip" id="fs17">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs18">union case Expression.Expr: Expression * Operation * Expression -&gt; Expression</div>
<div class="tip" id="fs19">val rand : Random<br /><br />Full name: fs.rand</div>
<div class="tip" id="fs20">Multiple items<br />type Random =<br />&#160;&#160;new : unit -&gt; Random + 1 overload<br />&#160;&#160;member Next : unit -&gt; int + 2 overloads<br />&#160;&#160;member NextBytes : buffer:byte[] -&gt; unit<br />&#160;&#160;member NextDouble : unit -&gt; float<br /><br />Full name: System.Random<br /><br />--------------------<br />Random() : unit<br />Random(Seed: int) : unit</div>
<div class="tip" id="fs21">val randNum : min:int -&gt; max:int -&gt; int<br /><br />Full name: fs.randNum</div>
<div class="tip" id="fs22">val min : int</div>
<div class="tip" id="fs23">val max : int</div>
<div class="tip" id="fs24">Random.Next() : int<br />Random.Next(maxValue: int) : int<br />Random.Next(minValue: int, maxValue: int) : int</div>
<div class="tip" id="fs25">val randomOperation : unit -&gt; Operation<br /><br />Full name: fs.randomOperation</div>
<div class="tip" id="fs26">val predicate : (Operation -&gt; bool)</div>
<div class="tip" id="fs27">val expr : Expression</div>
<div class="tip" id="fs28">val left : int</div>
<div class="tip" id="fs29">val targetOp : Operation</div>
<div class="tip" id="fs30">val right : int</div>
<div class="tip" id="fs31">val o : Operation</div>
<div class="tip" id="fs32">val next : Expression</div>
<div class="tip" id="fs33">property Operation.evaluate: int -&gt; int -&gt; int</div>
<div class="tip" id="fs34">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs35">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs36">val item : int</div>
<div class="tip" id="fs37">val item2 : int</div>
<div class="tip" id="fs38">val foldExpr : expr:Expression -&gt; opsInPrecedence:Operation list -&gt; Expression<br /><br />Full name: fs.foldExpr</div>
<div class="tip" id="fs39">val opsInPrecedence : Operation list</div>
<div class="tip" id="fs40">val foldExpr&#39; : (Expression -&gt; Expression)</div>
<div class="tip" id="fs41">val shouldEvalOperator : (Operation -&gt; bool)</div>
<div class="tip" id="fs42">Multiple items<br />type List =<br />&#160;&#160;new : unit -&gt; List<br />&#160;&#160;static member Map : actual:ICollection -&gt; ListMapper<br /><br />Full name: NUnit.Framework.List<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;<br /><br />--------------------<br />List() : unit</div>
<div class="tip" id="fs43">val exists : predicate:(&#39;T -&gt; bool) -&gt; list:&#39;T list -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.List.exists</div>
<div class="tip" id="fs44">val i : Operation</div>
<div class="tip" id="fs45">active recognizer TermWithExpression: (Operation -&gt; bool) -&gt; Expression -&gt; Expression option<br /><br />Full name: fs.( |TermWithExpression|_| )</div>
<div class="tip" id="fs46">val output : Expression</div>
<div class="tip" id="fs47">active recognizer TermWithTerm: (Operation -&gt; bool) -&gt; Expression -&gt; Expression option<br /><br />Full name: fs.( |TermWithTerm|_| )</div>
<div class="tip" id="fs48">val left : Expression</div>
<div class="tip" id="fs49">val right : Expression</div>
<div class="tip" id="fs50">val i : int</div>
<div class="tip" id="fs51">val randomExpression : min:int -&gt; max:int -&gt; length:int -&gt; Expression<br /><br />Full name: fs.randomExpression</div>
<div class="tip" id="fs52">val length : int</div>
<div class="tip" id="fs53">val display : _arg1:Expression -&gt; string<br /><br />Full name: fs.display</div>
<div class="tip" id="fs54">Int32.ToString() : string<br />Int32.ToString(provider: IFormatProvider) : string<br />Int32.ToString(format: string) : string<br />Int32.ToString(format: string, provider: IFormatProvider) : string</div>
<div class="tip" id="fs55">val i : Expression</div>
<div class="tip" id="fs56">val op : Operation</div>
<div class="tip" id="fs57">val exp : Expression</div>
<div class="tip" id="fs58">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs59">String.Format(format: string, [&lt;ParamArray&gt;] args: obj []) : string<br />String.Format(format: string, arg0: obj) : string<br />String.Format(provider: IFormatProvider, format: string, [&lt;ParamArray&gt;] args: obj []) : string<br />String.Format(format: string, arg0: obj, arg1: obj) : string<br />String.Format(format: string, arg0: obj, arg1: obj, arg2: obj) : string</div>
<div class="tip" id="fs60">val eval : e:Expression -&gt; Expression<br /><br />Full name: fs.eval</div>
<div class="tip" id="fs61">val e : Expression</div>
<div class="tip" id="fs62">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; list:&#39;T list -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.List.fold</div>
<div class="tip" id="fs63">Multiple items<br />type TestAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; TestAttribute<br />&#160;&#160;member Description : string with get, set<br /><br />Full name: NUnit.Framework.TestAttribute<br /><br />--------------------<br />TestAttribute() : unit</div>
<div class="tip" id="fs64">val arithmeticTest : unit -&gt; unit<br /><br />Full name: fs.arithmeticTest</div>
<div class="tip" id="fs65">val dt : DataTable</div>
<div class="tip" id="fs66">Multiple items<br />type DataTable =<br />&#160;&#160;inherit MarshalByValueComponent<br />&#160;&#160;new : unit -&gt; DataTable + 2 overloads<br />&#160;&#160;member AcceptChanges : unit -&gt; unit<br />&#160;&#160;member BeginInit : unit -&gt; unit<br />&#160;&#160;member BeginLoadData : unit -&gt; unit<br />&#160;&#160;member CaseSensitive : bool with get, set<br />&#160;&#160;member ChildRelations : DataRelationCollection<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Clone : unit -&gt; DataTable<br />&#160;&#160;member Columns : DataColumnCollection<br />&#160;&#160;member Compute : expression:string * filter:string -&gt; obj<br />&#160;&#160;...<br /><br />Full name: System.Data.DataTable<br /><br />--------------------<br />DataTable() : unit<br />DataTable(tableName: string) : unit<br />DataTable(tableName: string, tableNamespace: string) : unit</div>
<div class="tip" id="fs67">val randomExpr : Expression</div>
<div class="tip" id="fs68">val validationResult : int</div>
<div class="tip" id="fs69">DataTable.Compute(expression: string, filter: string) : obj</div>
<div class="tip" id="fs70">type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>
<div class="tip" id="fs71">Convert.ToInt32(value: DateTime) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: string) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: decimal) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: float) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: float32) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: uint64) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: int64) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: int) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: uint32) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt32(value: uint16) : int<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs72">val result : Expression</div>
<div class="tip" id="fs73">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs74">val x : int</div>
<div class="tip" id="fs75">val should : f:(&#39;a -&gt; #Constraints.Constraint) -&gt; x:&#39;a -&gt; y:obj -&gt; unit<br /><br />Full name: FsUnit.TopLevelOperators.should</div>
<div class="tip" id="fs76">val equal : x:&#39;a -&gt; EqualsConstraint<br /><br />Full name: FsUnit.TopLevelOperators.equal</div>

