<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">pow</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">b</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">e</span> <span class="o">=</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="f">loop</span> <span class="o">=</span> <span class="k">function</span>
    | <span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">e</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">e</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="t">LanguagePrimitives</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">GenericOne</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="t">LanguagePrimitives</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="i">GenericOne</span><span class="o">&lt;</span>_<span class="o">&gt;</span>
    | <span onmouseout="hideTip(event, 'fs3', 11)" onmouseover="showTip(event, 'fs3', 11)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 12)" onmouseover="showTip(event, 'fs2', 12)" class="i">b</span> <span class="o">*</span> (<span onmouseout="hideTip(event, 'fs4', 13)" onmouseover="showTip(event, 'fs4', 13)" class="f">loop</span> (<span onmouseout="hideTip(event, 'fs3', 14)" onmouseover="showTip(event, 'fs3', 14)" class="i">e</span><span class="o">-</span><span onmouseout="hideTip(event, 'fs5', 15)" onmouseover="showTip(event, 'fs5', 15)" class="t">LanguagePrimitives</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 16)" onmouseover="showTip(event, 'fs6', 16)" class="i">GenericOne</span><span class="o">&lt;</span>_<span class="o">&gt;</span>))
    <span onmouseout="hideTip(event, 'fs4', 17)" onmouseover="showTip(event, 'fs4', 17)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs3', 18)" onmouseover="showTip(event, 'fs3', 18)" class="i">e</span>

<span class="c">(*</span>
<span class="c">val inline pow :</span>
<span class="c">   ^a -&gt;  ^c -&gt;  ^b</span>
<span class="c">    when ( ^a or  ^b) : (static member ( * ) :  ^a *  ^b -&gt;  ^b) and</span>
<span class="c">          ^b : (static member get_One : -&gt;  ^b) and</span>
<span class="c">          ^c : (static member get_One : -&gt;  ^c) and  ^c : comparison and</span>
<span class="c">         ( ^c or  ^d) : (static member ( - ) :  ^c *  ^d -&gt;  ^c) and</span>
<span class="c">          ^d : (static member get_One : -&gt;  ^d)</span>

<span class="c">&gt; pow 5 2;;</span>
<span class="c">val it : int = 25</span>
<span class="c">&gt; pow 5.0 2;;</span>
<span class="c">val it : float = 25.0</span>
<span class="c">&gt; *)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val pow : b:&#39;a -&gt; e:&#39;c -&gt; &#39;b (requires member ( * ) and member get_One and member get_One and comparison and member ( - ) and member get_One)<br /><br />Full name: Script.pow</div>
<div class="tip" id="fs2">val b : &#39;a (requires member ( * ) and member get_One)</div>
<div class="tip" id="fs3">val e : &#39;c (requires member get_One and comparison and member ( - ) and member get_One)</div>
<div class="tip" id="fs4">val loop : (&#39;c -&gt; &#39;b) (requires member get_One and comparison and member ( - ) and member get_One and member get_One and member ( * ))</div>
<div class="tip" id="fs5">module LanguagePrimitives<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs6">val GenericOne&lt;&#39;T (requires member get_One)&gt; : &#39;T (requires member get_One)<br /><br />Full name: Microsoft.FSharp.Core.LanguagePrimitives.GenericOne</div>

