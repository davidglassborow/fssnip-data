<h2><a name="Implemenation" class="anchor" href="#Implemenation">Implemenation</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
<span class="l">74: </span>
<span class="l">75: </span>
<span class="l">76: </span>
<span class="l">77: </span>
<span class="l">78: </span>
<span class="l">79: </span>
<span class="l">80: </span>
<span class="l">81: </span>
<span class="l">82: </span>
<span class="l">83: </span>
<span class="l">84: </span>
<span class="l">85: </span>
<span class="l">86: </span>
<span class="l">87: </span>
<span class="l">88: </span>
<span class="l">89: </span>
<span class="l">90: </span>
<span class="l">91: </span>
<span class="l">92: </span>
<span class="l">93: </span>
<span class="l">94: </span>
<span class="l">95: </span>
<span class="l">96: </span>
<span class="l">97: </span>
<span class="l">98: </span>
<span class="l">99: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span class="t">Lens</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span> <span class="o">=</span>
    {
        <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">get</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">F</span>
        <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">set</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">F</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">T</span>
    }

<span class="k">module</span> <span class="k">private</span> <span class="t">Impl</span> <span class="o">=</span>

    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">Quotations</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">Quotations</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">Patterns</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">TypeShape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">Core</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">TypeShape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="i">Clone</span>

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="t">Path</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="t">Node</span> <span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="t">list</span>
    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="t">Node</span> <span class="o">=</span>
        | <span onmouseout="hideTip(event, 'fs13', 16)" onmouseover="showTip(event, 'fs13', 16)" class="p">Property</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="t">string</span>
        | <span onmouseout="hideTip(event, 'fs15', 18)" onmouseover="showTip(event, 'fs15', 18)" class="p">Item</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs16', 19)" onmouseover="showTip(event, 'fs16', 19)" class="t">int</span>

    <span class="c">// converts a quotation of the form &lt;@ fun x -&gt; x.Foo.Bar.[0].Baz @&gt; into a path</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 20)" onmouseover="showTip(event, 'fs17', 20)" class="f">extractPath</span> (<span onmouseout="hideTip(event, 'fs18', 21)" onmouseover="showTip(event, 'fs18', 21)" class="i">e</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs19', 22)" onmouseover="showTip(event, 'fs19', 22)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 23)" onmouseover="showTip(event, 'fs10', 23)" class="t">Path</span> <span class="o">=</span>
        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs20', 24)" onmouseover="showTip(event, 'fs20', 24)" class="f">aux</span> <span onmouseout="hideTip(event, 'fs21', 25)" onmouseover="showTip(event, 'fs21', 25)" class="i">v</span> <span onmouseout="hideTip(event, 'fs22', 26)" onmouseover="showTip(event, 'fs22', 26)" class="i">acc</span> <span onmouseout="hideTip(event, 'fs23', 27)" onmouseover="showTip(event, 'fs23', 27)" class="i">e</span> <span class="o">=</span>
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs23', 28)" onmouseover="showTip(event, 'fs23', 28)" class="i">e</span> <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs24', 29)" onmouseover="showTip(event, 'fs24', 29)" class="p">Var</span> <span onmouseout="hideTip(event, 'fs25', 30)" onmouseover="showTip(event, 'fs25', 30)" class="i">v&#39;</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="i">v</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 32)" onmouseover="showTip(event, 'fs25', 32)" class="i">v&#39;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs22', 33)" onmouseover="showTip(event, 'fs22', 33)" class="i">acc</span>
            | <span onmouseout="hideTip(event, 'fs26', 34)" onmouseover="showTip(event, 'fs26', 34)" class="p">PropertyGet</span>(<span onmouseout="hideTip(event, 'fs27', 35)" onmouseover="showTip(event, 'fs27', 35)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs28', 36)" onmouseover="showTip(event, 'fs28', 36)" class="i">o</span>, <span onmouseout="hideTip(event, 'fs29', 37)" onmouseover="showTip(event, 'fs29', 37)" class="i">p</span>, [<span onmouseout="hideTip(event, 'fs30', 38)" onmouseover="showTip(event, 'fs30', 38)" class="p">Value</span>((<span class="o">:?</span> <span onmouseout="hideTip(event, 'fs16', 39)" onmouseover="showTip(event, 'fs16', 39)" class="t">int</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs31', 40)" onmouseover="showTip(event, 'fs31', 40)" class="i">i</span>), _)]) <span class="k">when</span> <span onmouseout="hideTip(event, 'fs29', 41)" onmouseover="showTip(event, 'fs29', 41)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 42)" onmouseover="showTip(event, 'fs32', 42)" class="i">Name</span> <span class="o">=</span> <span class="s">&quot;Item&quot;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 43)" onmouseover="showTip(event, 'fs20', 43)" class="f">aux</span> <span onmouseout="hideTip(event, 'fs21', 44)" onmouseover="showTip(event, 'fs21', 44)" class="i">v</span> (<span onmouseout="hideTip(event, 'fs15', 45)" onmouseover="showTip(event, 'fs15', 45)" class="p">Item</span> <span onmouseout="hideTip(event, 'fs31', 46)" onmouseover="showTip(event, 'fs31', 46)" class="i">i</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs22', 47)" onmouseover="showTip(event, 'fs22', 47)" class="i">acc</span>) <span onmouseout="hideTip(event, 'fs28', 48)" onmouseover="showTip(event, 'fs28', 48)" class="i">o</span>
            | <span onmouseout="hideTip(event, 'fs26', 49)" onmouseover="showTip(event, 'fs26', 49)" class="p">PropertyGet</span>(<span onmouseout="hideTip(event, 'fs27', 50)" onmouseover="showTip(event, 'fs27', 50)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs28', 51)" onmouseover="showTip(event, 'fs28', 51)" class="i">o</span>, <span onmouseout="hideTip(event, 'fs29', 52)" onmouseover="showTip(event, 'fs29', 52)" class="i">p</span>, []) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 53)" onmouseover="showTip(event, 'fs20', 53)" class="f">aux</span> <span onmouseout="hideTip(event, 'fs21', 54)" onmouseover="showTip(event, 'fs21', 54)" class="i">v</span> (<span onmouseout="hideTip(event, 'fs13', 55)" onmouseover="showTip(event, 'fs13', 55)" class="p">Property</span> <span onmouseout="hideTip(event, 'fs29', 56)" onmouseover="showTip(event, 'fs29', 56)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 57)" onmouseover="showTip(event, 'fs32', 57)" class="i">Name</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs22', 58)" onmouseover="showTip(event, 'fs22', 58)" class="i">acc</span>) <span onmouseout="hideTip(event, 'fs28', 59)" onmouseover="showTip(event, 'fs28', 59)" class="i">o</span>
            | <span onmouseout="hideTip(event, 'fs33', 60)" onmouseover="showTip(event, 'fs33', 60)" class="p">Call</span>(<span onmouseout="hideTip(event, 'fs34', 61)" onmouseover="showTip(event, 'fs34', 61)" class="p">None</span>, <span onmouseout="hideTip(event, 'fs35', 62)" onmouseover="showTip(event, 'fs35', 62)" class="i">m</span>, [<span onmouseout="hideTip(event, 'fs28', 63)" onmouseover="showTip(event, 'fs28', 63)" class="i">o</span> ; <span onmouseout="hideTip(event, 'fs30', 64)" onmouseover="showTip(event, 'fs30', 64)" class="p">Value</span>(<span class="o">:?</span> <span onmouseout="hideTip(event, 'fs16', 65)" onmouseover="showTip(event, 'fs16', 65)" class="t">int</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs31', 66)" onmouseover="showTip(event, 'fs31', 66)" class="i">i</span>, _)]) <span class="k">when</span> <span onmouseout="hideTip(event, 'fs35', 67)" onmouseover="showTip(event, 'fs35', 67)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 68)" onmouseover="showTip(event, 'fs32', 68)" class="i">Name</span> <span class="o">=</span> <span class="s">&quot;GetArray&quot;</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs28', 69)" onmouseover="showTip(event, 'fs28', 69)" class="i">o</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 70)" onmouseover="showTip(event, 'fs36', 70)" class="i">Type</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 71)" onmouseover="showTip(event, 'fs37', 71)" class="i">IsArray</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs23', 72)" onmouseover="showTip(event, 'fs23', 72)" class="i">e</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 73)" onmouseover="showTip(event, 'fs36', 73)" class="i">Type</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 74)" onmouseover="showTip(event, 'fs28', 74)" class="i">o</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 75)" onmouseover="showTip(event, 'fs36', 75)" class="i">Type</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 76)" onmouseover="showTip(event, 'fs38', 76)" class="f">GetElementType</span>() <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 77)" onmouseover="showTip(event, 'fs20', 77)" class="f">aux</span> <span onmouseout="hideTip(event, 'fs21', 78)" onmouseover="showTip(event, 'fs21', 78)" class="i">v</span> (<span onmouseout="hideTip(event, 'fs15', 79)" onmouseover="showTip(event, 'fs15', 79)" class="p">Item</span> <span onmouseout="hideTip(event, 'fs31', 80)" onmouseover="showTip(event, 'fs31', 80)" class="i">i</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs22', 81)" onmouseover="showTip(event, 'fs22', 81)" class="i">acc</span>) <span onmouseout="hideTip(event, 'fs28', 82)" onmouseover="showTip(event, 'fs28', 82)" class="i">o</span>
            <span class="c">// we support tuples, as they are often used to encode fields in erased type providers</span>
            | <span onmouseout="hideTip(event, 'fs39', 83)" onmouseover="showTip(event, 'fs39', 83)" class="p">TupleGet</span>(<span onmouseout="hideTip(event, 'fs40', 84)" onmouseover="showTip(event, 'fs40', 84)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs31', 85)" onmouseover="showTip(event, 'fs31', 85)" class="i">i</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 86)" onmouseover="showTip(event, 'fs20', 86)" class="f">aux</span> <span onmouseout="hideTip(event, 'fs21', 87)" onmouseover="showTip(event, 'fs21', 87)" class="i">v</span> (<span onmouseout="hideTip(event, 'fs15', 88)" onmouseover="showTip(event, 'fs15', 88)" class="p">Item</span> <span onmouseout="hideTip(event, 'fs31', 89)" onmouseover="showTip(event, 'fs31', 89)" class="i">i</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs22', 90)" onmouseover="showTip(event, 'fs22', 90)" class="i">acc</span>) <span onmouseout="hideTip(event, 'fs40', 91)" onmouseover="showTip(event, 'fs40', 91)" class="i">x</span>
            | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs41', 92)" onmouseover="showTip(event, 'fs41', 92)" class="f">invalidArg</span> <span class="s">&quot;expr&quot;</span> <span class="s">&quot;invalid lens expression&quot;</span>

        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs18', 93)" onmouseover="showTip(event, 'fs18', 93)" class="i">e</span> <span class="k">with</span>
        | <span onmouseout="hideTip(event, 'fs42', 94)" onmouseover="showTip(event, 'fs42', 94)" class="p">Lambda</span>(<span onmouseout="hideTip(event, 'fs21', 95)" onmouseover="showTip(event, 'fs21', 95)" class="i">v</span>, <span onmouseout="hideTip(event, 'fs43', 96)" onmouseover="showTip(event, 'fs43', 96)" class="i">body</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 97)" onmouseover="showTip(event, 'fs20', 97)" class="f">aux</span> <span onmouseout="hideTip(event, 'fs21', 98)" onmouseover="showTip(event, 'fs21', 98)" class="i">v</span> [] <span onmouseout="hideTip(event, 'fs43', 99)" onmouseover="showTip(event, 'fs43', 99)" class="i">body</span>
        | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs41', 100)" onmouseover="showTip(event, 'fs41', 100)" class="f">invalidArg</span> <span class="s">&quot;expr&quot;</span> <span class="s">&quot;lens expressions must be lambda literals&quot;</span>

    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs44', 101)" onmouseover="showTip(event, 'fs44', 101)" class="f">mkLensAux</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs45', 102)" onmouseover="showTip(event, 'fs45', 102)" class="i">path</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 103)" onmouseover="showTip(event, 'fs10', 103)" class="t">Path</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs46', 104)" onmouseover="showTip(event, 'fs46', 104)" class="t">Lens</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs47', 105)" onmouseover="showTip(event, 'fs47', 105)" class="f">wrap</span> (<span onmouseout="hideTip(event, 'fs48', 106)" onmouseover="showTip(event, 'fs48', 106)" class="i">l</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs46', 107)" onmouseover="showTip(event, 'fs46', 107)" class="t">Lens</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span>,<span class="o">&#39;</span><span class="i">b</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs46', 108)" onmouseover="showTip(event, 'fs46', 108)" class="t">Lens</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 109)" onmouseover="showTip(event, 'fs49', 109)" class="f">unbox</span> <span onmouseout="hideTip(event, 'fs48', 110)" onmouseover="showTip(event, 'fs48', 110)" class="i">l</span>

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 111)" onmouseover="showTip(event, 'fs50', 111)" class="f">nest</span> <span onmouseout="hideTip(event, 'fs51', 112)" onmouseover="showTip(event, 'fs51', 112)" class="i">chain</span> (<span onmouseout="hideTip(event, 'fs52', 113)" onmouseover="showTip(event, 'fs52', 113)" class="i">m</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs53', 114)" onmouseover="showTip(event, 'fs53', 114)" class="t">IShapeWriteMember</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>) <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs52', 115)" onmouseover="showTip(event, 'fs52', 115)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs54', 116)" onmouseover="showTip(event, 'fs54', 116)" class="f">Accept</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs55', 117)" onmouseover="showTip(event, 'fs55', 117)" class="t">IWriteMemberVisitor</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span onmouseout="hideTip(event, 'fs46', 118)" onmouseover="showTip(event, 'fs46', 118)" class="t">Lens</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="k">with</span>
                <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span class="f">Visit</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">F0</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs56', 119)" onmouseover="showTip(event, 'fs56', 119)" class="i">m</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs57', 120)" onmouseover="showTip(event, 'fs57', 120)" class="t">ShapeWriteMember</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">F0</span><span class="o">&gt;</span>) <span class="o">=</span>
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 121)" onmouseover="showTip(event, 'fs58', 121)" class="i">inner</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs44', 122)" onmouseover="showTip(event, 'fs44', 122)" class="f">mkLensAux</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">F0</span>, <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs51', 123)" onmouseover="showTip(event, 'fs51', 123)" class="i">chain</span>
                    {
                        <span class="i">get</span> <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs59', 124)" onmouseover="showTip(event, 'fs59', 124)" class="i">t</span><span class="o">:</span><span class="o">&#39;</span><span class="i">T</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs58', 125)" onmouseover="showTip(event, 'fs58', 125)" class="i">inner</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs60', 126)" onmouseover="showTip(event, 'fs60', 126)" class="i">get</span> (<span onmouseout="hideTip(event, 'fs56', 127)" onmouseover="showTip(event, 'fs56', 127)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 128)" onmouseover="showTip(event, 'fs61', 128)" class="f">Project</span> <span onmouseout="hideTip(event, 'fs59', 129)" onmouseover="showTip(event, 'fs59', 129)" class="i">t</span>)
                        <span onmouseout="hideTip(event, 'fs62', 130)" onmouseover="showTip(event, 'fs62', 130)" class="i">set</span> <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs59', 131)" onmouseover="showTip(event, 'fs59', 131)" class="i">t</span><span class="o">:</span><span class="o">&#39;</span><span class="i">T</span>) (<span onmouseout="hideTip(event, 'fs63', 132)" onmouseover="showTip(event, 'fs63', 132)" class="i">f</span><span class="o">:</span><span class="o">&#39;</span><span class="i">F</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs56', 133)" onmouseover="showTip(event, 'fs56', 133)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 134)" onmouseover="showTip(event, 'fs64', 134)" class="f">Inject</span> <span onmouseout="hideTip(event, 'fs59', 135)" onmouseover="showTip(event, 'fs59', 135)" class="i">t</span> (<span onmouseout="hideTip(event, 'fs58', 136)" onmouseover="showTip(event, 'fs58', 136)" class="i">inner</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs65', 137)" onmouseover="showTip(event, 'fs65', 137)" class="i">set</span> (<span onmouseout="hideTip(event, 'fs56', 138)" onmouseover="showTip(event, 'fs56', 138)" class="i">m</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs61', 139)" onmouseover="showTip(event, 'fs61', 139)" class="f">Project</span> <span onmouseout="hideTip(event, 'fs59', 140)" onmouseover="showTip(event, 'fs59', 140)" class="i">t</span>) <span onmouseout="hideTip(event, 'fs63', 141)" onmouseover="showTip(event, 'fs63', 141)" class="i">f</span>)
                    }
        
            }

        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs66', 142)" onmouseover="showTip(event, 'fs66', 142)" class="i">shapeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>, <span onmouseout="hideTip(event, 'fs45', 143)" onmouseover="showTip(event, 'fs45', 143)" class="i">path</span> <span class="k">with</span>
        | _, [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs47', 144)" onmouseover="showTip(event, 'fs47', 144)" class="f">wrap</span> { <span class="i">get</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs67', 145)" onmouseover="showTip(event, 'fs67', 145)" class="f">id</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span> ; <span onmouseout="hideTip(event, 'fs62', 146)" onmouseover="showTip(event, 'fs62', 146)" class="i">set</span> <span class="o">=</span> <span class="k">fun</span> (_<span class="o">:</span><span class="o">&#39;</span><span class="i">F</span>) (<span onmouseout="hideTip(event, 'fs68', 147)" onmouseover="showTip(event, 'fs68', 147)" class="i">y</span><span class="o">:</span><span class="o">&#39;</span><span class="i">F</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs68', 148)" onmouseover="showTip(event, 'fs68', 148)" class="i">y</span> }
        | <span onmouseout="hideTip(event, 'fs69', 149)" onmouseover="showTip(event, 'fs69', 149)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs70', 150)" onmouseover="showTip(event, 'fs70', 150)" class="p">FSharpList</span> <span onmouseout="hideTip(event, 'fs71', 151)" onmouseover="showTip(event, 'fs71', 151)" class="i">s</span>, <span onmouseout="hideTip(event, 'fs15', 152)" onmouseover="showTip(event, 'fs15', 152)" class="p">Item</span> <span onmouseout="hideTip(event, 'fs31', 153)" onmouseover="showTip(event, 'fs31', 153)" class="i">i</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs72', 154)" onmouseover="showTip(event, 'fs72', 154)" class="i">rest</span> <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs71', 155)" onmouseover="showTip(event, 'fs71', 155)" class="i">s</span><span class="o">.</span><span class="f">Accept</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs73', 156)" onmouseover="showTip(event, 'fs73', 156)" class="t">IFSharpListVisitor</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs46', 157)" onmouseover="showTip(event, 'fs46', 157)" class="t">Lens</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>,<span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="k">with</span>
                <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span class="f">Visit</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span> () <span class="o">=</span>
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs74', 158)" onmouseover="showTip(event, 'fs74', 158)" class="i">inner</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs44', 159)" onmouseover="showTip(event, 'fs44', 159)" class="f">mkLensAux</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span>, <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs72', 160)" onmouseover="showTip(event, 'fs72', 160)" class="i">rest</span>
                    <span onmouseout="hideTip(event, 'fs47', 161)" onmouseover="showTip(event, 'fs47', 161)" class="f">wrap</span> {
                        <span class="i">get</span> <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs75', 162)" onmouseover="showTip(event, 'fs75', 162)" class="i">ts</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">t</span> <span onmouseout="hideTip(event, 'fs12', 163)" onmouseover="showTip(event, 'fs12', 163)" class="t">list</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs74', 164)" onmouseover="showTip(event, 'fs74', 164)" class="i">inner</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs76', 165)" onmouseover="showTip(event, 'fs76', 165)" class="i">get</span> <span onmouseout="hideTip(event, 'fs75', 166)" onmouseover="showTip(event, 'fs75', 166)" class="i">ts</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs31', 167)" onmouseover="showTip(event, 'fs31', 167)" class="i">i</span>]
                        <span onmouseout="hideTip(event, 'fs62', 168)" onmouseover="showTip(event, 'fs62', 168)" class="i">set</span> <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs75', 169)" onmouseover="showTip(event, 'fs75', 169)" class="i">ts</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">t</span> <span onmouseout="hideTip(event, 'fs12', 170)" onmouseover="showTip(event, 'fs12', 170)" class="t">list</span>) (<span onmouseout="hideTip(event, 'fs63', 171)" onmouseover="showTip(event, 'fs63', 171)" class="i">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">F</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs75', 172)" onmouseover="showTip(event, 'fs75', 172)" class="i">ts</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs77', 173)" onmouseover="showTip(event, 'fs77', 173)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs78', 174)" onmouseover="showTip(event, 'fs78', 174)" class="f">mapi</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs79', 175)" onmouseover="showTip(event, 'fs79', 175)" class="i">j</span> <span onmouseout="hideTip(event, 'fs80', 176)" onmouseover="showTip(event, 'fs80', 176)" class="i">t</span> <span class="k">-&gt;</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs79', 177)" onmouseover="showTip(event, 'fs79', 177)" class="i">j</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 178)" onmouseover="showTip(event, 'fs31', 178)" class="i">i</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs74', 179)" onmouseover="showTip(event, 'fs74', 179)" class="i">inner</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 180)" onmouseover="showTip(event, 'fs81', 180)" class="i">set</span> <span onmouseout="hideTip(event, 'fs80', 181)" onmouseover="showTip(event, 'fs80', 181)" class="i">t</span> <span onmouseout="hideTip(event, 'fs63', 182)" onmouseover="showTip(event, 'fs63', 182)" class="i">f</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs80', 183)" onmouseover="showTip(event, 'fs80', 183)" class="i">t</span>)
                    }
            }

        | <span onmouseout="hideTip(event, 'fs69', 184)" onmouseover="showTip(event, 'fs69', 184)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs82', 185)" onmouseover="showTip(event, 'fs82', 185)" class="p">FSharpOption</span> <span onmouseout="hideTip(event, 'fs83', 186)" onmouseover="showTip(event, 'fs83', 186)" class="i">s</span>, <span onmouseout="hideTip(event, 'fs13', 187)" onmouseover="showTip(event, 'fs13', 187)" class="p">Property</span> <span class="s">&quot;Value&quot;</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs72', 188)" onmouseover="showTip(event, 'fs72', 188)" class="i">rest</span> <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs83', 189)" onmouseover="showTip(event, 'fs83', 189)" class="i">s</span><span class="o">.</span><span class="f">Accept</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs84', 190)" onmouseover="showTip(event, 'fs84', 190)" class="t">IFSharpOptionVisitor</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs46', 191)" onmouseover="showTip(event, 'fs46', 191)" class="t">Lens</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>,<span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="k">with</span>
                <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span class="f">Visit</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span> () <span class="o">=</span>
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs74', 192)" onmouseover="showTip(event, 'fs74', 192)" class="i">inner</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs44', 193)" onmouseover="showTip(event, 'fs44', 193)" class="f">mkLensAux</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span>, <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs72', 194)" onmouseover="showTip(event, 'fs72', 194)" class="i">rest</span>
                    <span onmouseout="hideTip(event, 'fs47', 195)" onmouseover="showTip(event, 'fs47', 195)" class="f">wrap</span> {
                        <span class="i">get</span> <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs85', 196)" onmouseover="showTip(event, 'fs85', 196)" class="i">ts</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">t</span> <span onmouseout="hideTip(event, 'fs86', 197)" onmouseover="showTip(event, 'fs86', 197)" class="t">option</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs74', 198)" onmouseover="showTip(event, 'fs74', 198)" class="i">inner</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs76', 199)" onmouseover="showTip(event, 'fs76', 199)" class="i">get</span> (<span onmouseout="hideTip(event, 'fs87', 200)" onmouseover="showTip(event, 'fs87', 200)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs88', 201)" onmouseover="showTip(event, 'fs88', 201)" class="f">get</span> <span onmouseout="hideTip(event, 'fs85', 202)" onmouseover="showTip(event, 'fs85', 202)" class="i">ts</span>)
                        <span onmouseout="hideTip(event, 'fs62', 203)" onmouseover="showTip(event, 'fs62', 203)" class="i">set</span> <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs85', 204)" onmouseover="showTip(event, 'fs85', 204)" class="i">ts</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">t</span> <span onmouseout="hideTip(event, 'fs86', 205)" onmouseover="showTip(event, 'fs86', 205)" class="t">option</span>) (<span onmouseout="hideTip(event, 'fs63', 206)" onmouseover="showTip(event, 'fs63', 206)" class="i">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">F</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs74', 207)" onmouseover="showTip(event, 'fs74', 207)" class="i">inner</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 208)" onmouseover="showTip(event, 'fs81', 208)" class="i">set</span> (<span onmouseout="hideTip(event, 'fs87', 209)" onmouseover="showTip(event, 'fs87', 209)" class="t">Option</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs88', 210)" onmouseover="showTip(event, 'fs88', 210)" class="f">get</span> <span onmouseout="hideTip(event, 'fs85', 211)" onmouseover="showTip(event, 'fs85', 211)" class="i">ts</span>) <span onmouseout="hideTip(event, 'fs63', 212)" onmouseover="showTip(event, 'fs63', 212)" class="i">f</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs27', 213)" onmouseover="showTip(event, 'fs27', 213)" class="p">Some</span>
                    }
            }

        | <span onmouseout="hideTip(event, 'fs69', 214)" onmouseover="showTip(event, 'fs69', 214)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 215)" onmouseover="showTip(event, 'fs89', 215)" class="p">Tuple</span> (<span class="o">:?</span> <span onmouseout="hideTip(event, 'fs90', 216)" onmouseover="showTip(event, 'fs90', 216)" class="t">ShapeTuple</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs91', 217)" onmouseover="showTip(event, 'fs91', 217)" class="i">s</span>), <span onmouseout="hideTip(event, 'fs15', 218)" onmouseover="showTip(event, 'fs15', 218)" class="p">Item</span> <span onmouseout="hideTip(event, 'fs31', 219)" onmouseover="showTip(event, 'fs31', 219)" class="i">i</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs72', 220)" onmouseover="showTip(event, 'fs72', 220)" class="i">rest</span> <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs91', 221)" onmouseover="showTip(event, 'fs91', 221)" class="i">s</span><span class="o">.</span><span class="i">Elements</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs31', 222)" onmouseover="showTip(event, 'fs31', 222)" class="i">i</span>] <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs50', 223)" onmouseover="showTip(event, 'fs50', 223)" class="f">nest</span> <span onmouseout="hideTip(event, 'fs72', 224)" onmouseover="showTip(event, 'fs72', 224)" class="i">rest</span>

        | <span onmouseout="hideTip(event, 'fs69', 225)" onmouseover="showTip(event, 'fs69', 225)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs92', 226)" onmouseover="showTip(event, 'fs92', 226)" class="p">Array</span> <span onmouseout="hideTip(event, 'fs93', 227)" onmouseover="showTip(event, 'fs93', 227)" class="i">s</span>, <span onmouseout="hideTip(event, 'fs15', 228)" onmouseover="showTip(event, 'fs15', 228)" class="p">Item</span> <span onmouseout="hideTip(event, 'fs31', 229)" onmouseover="showTip(event, 'fs31', 229)" class="i">i</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs72', 230)" onmouseover="showTip(event, 'fs72', 230)" class="i">rest</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs93', 231)" onmouseover="showTip(event, 'fs93', 231)" class="i">s</span><span class="o">.</span><span class="i">Rank</span> <span class="o">=</span> <span class="n">1</span> <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs93', 232)" onmouseover="showTip(event, 'fs93', 232)" class="i">s</span><span class="o">.</span><span class="f">Accept</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs94', 233)" onmouseover="showTip(event, 'fs94', 233)" class="t">IArrayVisitor</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs46', 234)" onmouseover="showTip(event, 'fs46', 234)" class="t">Lens</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>,<span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="k">with</span>
                <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span class="f">Visit</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span> _ <span class="o">=</span>
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs74', 235)" onmouseover="showTip(event, 'fs74', 235)" class="i">inner</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs44', 236)" onmouseover="showTip(event, 'fs44', 236)" class="f">mkLensAux</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span>, <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs72', 237)" onmouseover="showTip(event, 'fs72', 237)" class="i">rest</span>
                    <span onmouseout="hideTip(event, 'fs47', 238)" onmouseover="showTip(event, 'fs47', 238)" class="f">wrap</span> {
                        <span class="i">get</span> <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs95', 239)" onmouseover="showTip(event, 'fs95', 239)" class="i">ts</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">t</span>[]) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs74', 240)" onmouseover="showTip(event, 'fs74', 240)" class="i">inner</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs76', 241)" onmouseover="showTip(event, 'fs76', 241)" class="i">get</span> <span onmouseout="hideTip(event, 'fs95', 242)" onmouseover="showTip(event, 'fs95', 242)" class="i">ts</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs31', 243)" onmouseover="showTip(event, 'fs31', 243)" class="i">i</span>]
                        <span onmouseout="hideTip(event, 'fs62', 244)" onmouseover="showTip(event, 'fs62', 244)" class="i">set</span> <span class="o">=</span> <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs95', 245)" onmouseover="showTip(event, 'fs95', 245)" class="i">ts</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">t</span>[]) (<span onmouseout="hideTip(event, 'fs63', 246)" onmouseover="showTip(event, 'fs63', 246)" class="i">f</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">F</span>) <span class="k">-&gt;</span>  <span onmouseout="hideTip(event, 'fs95', 247)" onmouseover="showTip(event, 'fs95', 247)" class="i">ts</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs31', 248)" onmouseover="showTip(event, 'fs31', 248)" class="i">i</span>] <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs74', 249)" onmouseover="showTip(event, 'fs74', 249)" class="i">inner</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 250)" onmouseover="showTip(event, 'fs81', 250)" class="i">set</span> <span onmouseout="hideTip(event, 'fs95', 251)" onmouseover="showTip(event, 'fs95', 251)" class="i">ts</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs31', 252)" onmouseover="showTip(event, 'fs31', 252)" class="i">i</span>] <span onmouseout="hideTip(event, 'fs63', 253)" onmouseover="showTip(event, 'fs63', 253)" class="i">f</span> ; <span onmouseout="hideTip(event, 'fs95', 254)" onmouseover="showTip(event, 'fs95', 254)" class="i">ts</span>
                    }
            }

        | <span onmouseout="hideTip(event, 'fs69', 255)" onmouseover="showTip(event, 'fs69', 255)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs96', 256)" onmouseover="showTip(event, 'fs96', 256)" class="p">FSharpRecord</span> (<span class="o">:?</span> <span onmouseout="hideTip(event, 'fs97', 257)" onmouseover="showTip(event, 'fs97', 257)" class="t">ShapeFSharpRecord</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs98', 258)" onmouseover="showTip(event, 'fs98', 258)" class="i">s</span>) <span class="o">&amp;</span> <span onmouseout="hideTip(event, 'fs69', 259)" onmouseover="showTip(event, 'fs69', 259)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs99', 260)" onmouseover="showTip(event, 'fs99', 260)" class="p">FSharpRef</span> _, <span onmouseout="hideTip(event, 'fs13', 261)" onmouseover="showTip(event, 'fs13', 261)" class="p">Property</span> <span class="s">&quot;Value&quot;</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs72', 262)" onmouseover="showTip(event, 'fs72', 262)" class="i">rest</span> <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs98', 263)" onmouseover="showTip(event, 'fs98', 263)" class="i">s</span><span class="o">.</span><span class="i">Fields</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs100', 264)" onmouseover="showTip(event, 'fs100', 264)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs101', 265)" onmouseover="showTip(event, 'fs101', 265)" class="f">find</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs102', 266)" onmouseover="showTip(event, 'fs102', 266)" class="i">p</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs102', 267)" onmouseover="showTip(event, 'fs102', 267)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs103', 268)" onmouseover="showTip(event, 'fs103', 268)" class="i">Label</span> <span class="o">=</span> <span class="s">&quot;contents&quot;</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs50', 269)" onmouseover="showTip(event, 'fs50', 269)" class="f">nest</span> <span onmouseout="hideTip(event, 'fs72', 270)" onmouseover="showTip(event, 'fs72', 270)" class="i">rest</span>

        | <span onmouseout="hideTip(event, 'fs69', 271)" onmouseover="showTip(event, 'fs69', 271)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs96', 272)" onmouseover="showTip(event, 'fs96', 272)" class="p">FSharpRecord</span> (<span class="o">:?</span> <span onmouseout="hideTip(event, 'fs97', 273)" onmouseover="showTip(event, 'fs97', 273)" class="t">ShapeFSharpRecord</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs98', 274)" onmouseover="showTip(event, 'fs98', 274)" class="i">s</span>), <span onmouseout="hideTip(event, 'fs13', 275)" onmouseover="showTip(event, 'fs13', 275)" class="p">Property</span> <span onmouseout="hideTip(event, 'fs104', 276)" onmouseover="showTip(event, 'fs104', 276)" class="i">id</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs72', 277)" onmouseover="showTip(event, 'fs72', 277)" class="i">rest</span> <span class="k">-&gt;</span>
            <span onmouseout="hideTip(event, 'fs98', 278)" onmouseover="showTip(event, 'fs98', 278)" class="i">s</span><span class="o">.</span><span class="i">Fields</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs100', 279)" onmouseover="showTip(event, 'fs100', 279)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs101', 280)" onmouseover="showTip(event, 'fs101', 280)" class="f">find</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs102', 281)" onmouseover="showTip(event, 'fs102', 281)" class="i">p</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs102', 282)" onmouseover="showTip(event, 'fs102', 282)" class="i">p</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs103', 283)" onmouseover="showTip(event, 'fs103', 283)" class="i">Label</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs104', 284)" onmouseover="showTip(event, 'fs104', 284)" class="i">id</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs50', 285)" onmouseover="showTip(event, 'fs50', 285)" class="f">nest</span> <span onmouseout="hideTip(event, 'fs72', 286)" onmouseover="showTip(event, 'fs72', 286)" class="i">rest</span>

        | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs105', 287)" onmouseover="showTip(event, 'fs105', 287)" class="f">failwithf</span> <span class="s">&quot;unsupported lens type </span><span class="pf">%O</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs106', 288)" onmouseover="showTip(event, 'fs106', 288)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs107', 289)" onmouseover="showTip(event, 'fs107', 289)" class="f">mkLens</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs108', 290)" onmouseover="showTip(event, 'fs108', 290)" class="i">expr</span> <span class="o">:</span> <span class="i">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs46', 291)" onmouseover="showTip(event, 'fs46', 291)" class="t">Lens</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs109', 292)" onmouseover="showTip(event, 'fs109', 292)" class="i">path</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs110', 293)" onmouseover="showTip(event, 'fs110', 293)" class="t">Impl</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs111', 294)" onmouseover="showTip(event, 'fs111', 294)" class="f">extractPath</span> <span onmouseout="hideTip(event, 'fs108', 295)" onmouseover="showTip(event, 'fs108', 295)" class="i">expr</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs112', 296)" onmouseover="showTip(event, 'fs112', 296)" class="i">lens</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs110', 297)" onmouseover="showTip(event, 'fs110', 297)" class="t">Impl</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs113', 298)" onmouseover="showTip(event, 'fs113', 298)" class="f">mkLensAux</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">F</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs109', 299)" onmouseover="showTip(event, 'fs109', 299)" class="i">path</span>
    {
        <span class="i">get</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs112', 300)" onmouseover="showTip(event, 'fs112', 300)" class="i">lens</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs1', 301)" onmouseover="showTip(event, 'fs1', 301)" class="i">get</span>
        <span onmouseout="hideTip(event, 'fs62', 302)" onmouseover="showTip(event, 'fs62', 302)" class="i">set</span> <span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs59', 303)" onmouseover="showTip(event, 'fs59', 303)" class="i">t</span> <span onmouseout="hideTip(event, 'fs63', 304)" onmouseover="showTip(event, 'fs63', 304)" class="i">f</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs112', 305)" onmouseover="showTip(event, 'fs112', 305)" class="i">lens</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 306)" onmouseover="showTip(event, 'fs2', 306)" class="i">set</span> (<span class="i">clone</span> <span onmouseout="hideTip(event, 'fs59', 307)" onmouseover="showTip(event, 'fs59', 307)" class="i">t</span>) <span onmouseout="hideTip(event, 'fs63', 308)" onmouseover="showTip(event, 'fs63', 308)" class="i">f</span> <span class="c">// TypeShape native lenses rely on mutation, so we clone to hide this fact</span>
    }
</code></pre></td>
</tr>
</table>
<h2><a name="Examples" class="anchor" href="#Examples">Examples</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span onmouseout="hideTip(event, 'fs114', 309)" onmouseover="showTip(event, 'fs114', 309)" class="t">Foo</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span>
    {
        <span onmouseout="hideTip(event, 'fs115', 310)" onmouseover="showTip(event, 'fs115', 310)" class="i">a</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">T</span>
        <span onmouseout="hideTip(event, 'fs116', 311)" onmouseover="showTip(event, 'fs116', 311)" class="i">b</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs14', 312)" onmouseover="showTip(event, 'fs14', 312)" class="t">string</span>
        <span onmouseout="hideTip(event, 'fs117', 313)" onmouseover="showTip(event, 'fs117', 313)" class="i">c</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs118', 314)" onmouseover="showTip(event, 'fs118', 314)" class="t">bool</span>
    }


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs119', 315)" onmouseover="showTip(event, 'fs119', 315)" class="i">l1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs107', 316)" onmouseover="showTip(event, 'fs107', 316)" class="f">mkLens</span> &lt;@ <span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs120', 317)" onmouseover="showTip(event, 'fs120', 317)" class="i">x</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs16', 318)" onmouseover="showTip(event, 'fs16', 318)" class="t">int</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs120', 319)" onmouseover="showTip(event, 'fs120', 319)" class="i">x</span> @&gt;
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs121', 320)" onmouseover="showTip(event, 'fs121', 320)" class="i">l2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs107', 321)" onmouseover="showTip(event, 'fs107', 321)" class="f">mkLens</span> &lt;@ <span class="k">fun</span> (<span class="i">x</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs114', 322)" onmouseover="showTip(event, 'fs114', 322)" class="t">Foo</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs16', 323)" onmouseover="showTip(event, 'fs16', 323)" class="t">int</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs122', 324)" onmouseover="showTip(event, 'fs122', 324)" class="t">ref</span>) <span class="k">-&gt;</span> <span class="i">x</span><span class="o">.</span><span class="i">Value</span><span class="o">.</span><span class="i">a</span> @&gt;
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs123', 325)" onmouseover="showTip(event, 'fs123', 325)" class="i">l3</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs107', 326)" onmouseover="showTip(event, 'fs107', 326)" class="f">mkLens</span> &lt;@ <span class="k">fun</span> (<span class="i">x</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs114', 327)" onmouseover="showTip(event, 'fs114', 327)" class="t">Foo</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs114', 328)" onmouseover="showTip(event, 'fs114', 328)" class="t">Foo</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs16', 329)" onmouseover="showTip(event, 'fs16', 329)" class="t">int</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs12', 330)" onmouseover="showTip(event, 'fs12', 330)" class="t">list</span><span class="o">&gt;</span> [] <span onmouseout="hideTip(event, 'fs12', 331)" onmouseover="showTip(event, 'fs12', 331)" class="t">list</span> <span onmouseout="hideTip(event, 'fs86', 332)" onmouseover="showTip(event, 'fs86', 332)" class="t">option</span>) <span class="k">-&gt;</span> <span class="i">x</span><span class="o">.</span><span class="i">Value</span><span class="o">.</span>[<span class="n">0</span>]<span class="o">.</span>[<span class="n">0</span>]<span class="o">.</span><span class="i">a</span><span class="o">.</span>[<span class="n">0</span>] @&gt;

<span onmouseout="hideTip(event, 'fs119', 333)" onmouseover="showTip(event, 'fs119', 333)" class="i">l1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs124', 334)" onmouseover="showTip(event, 'fs124', 334)" class="i">get</span> <span class="n">42</span> <span class="c">// 42</span>
<span onmouseout="hideTip(event, 'fs121', 335)" onmouseover="showTip(event, 'fs121', 335)" class="i">l2</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs125', 336)" onmouseover="showTip(event, 'fs125', 336)" class="i">get</span> (<span onmouseout="hideTip(event, 'fs122', 337)" onmouseover="showTip(event, 'fs122', 337)" class="f">ref</span> {<span onmouseout="hideTip(event, 'fs115', 338)" onmouseover="showTip(event, 'fs115', 338)" class="i">a</span> <span class="o">=</span> <span class="n">42</span>; <span onmouseout="hideTip(event, 'fs116', 339)" onmouseover="showTip(event, 'fs116', 339)" class="i">b</span> <span class="o">=</span> <span class="s">&quot;&quot;</span> ; <span onmouseout="hideTip(event, 'fs117', 340)" onmouseover="showTip(event, 'fs117', 340)" class="i">c</span> <span class="o">=</span> <span class="k">false</span>}) <span class="c">// 42</span>
<span onmouseout="hideTip(event, 'fs123', 341)" onmouseover="showTip(event, 'fs123', 341)" class="i">l3</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs126', 342)" onmouseover="showTip(event, 'fs126', 342)" class="i">get</span> (<span onmouseout="hideTip(event, 'fs27', 343)" onmouseover="showTip(event, 'fs27', 343)" class="p">Some</span> [[| { <span onmouseout="hideTip(event, 'fs115', 344)" onmouseover="showTip(event, 'fs115', 344)" class="i">a</span> <span class="o">=</span> [{ <span onmouseout="hideTip(event, 'fs115', 345)" onmouseover="showTip(event, 'fs115', 345)" class="i">a</span> <span class="o">=</span> <span class="n">42</span> ; <span onmouseout="hideTip(event, 'fs116', 346)" onmouseover="showTip(event, 'fs116', 346)" class="i">b</span> <span class="o">=</span> <span class="s">&quot;&quot;</span> ; <span onmouseout="hideTip(event, 'fs117', 347)" onmouseover="showTip(event, 'fs117', 347)" class="i">c</span> <span class="o">=</span> <span class="k">false</span> }] ; <span onmouseout="hideTip(event, 'fs116', 348)" onmouseover="showTip(event, 'fs116', 348)" class="i">b</span> <span class="o">=</span> <span class="s">&quot;&quot;</span> ; <span onmouseout="hideTip(event, 'fs117', 349)" onmouseover="showTip(event, 'fs117', 349)" class="i">c</span> <span class="o">=</span> <span class="k">false</span> } |]]) <span class="c">// { a = 42 ; b = &quot;&quot; ; c = false }</span>

<span onmouseout="hideTip(event, 'fs119', 350)" onmouseover="showTip(event, 'fs119', 350)" class="i">l1</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs127', 351)" onmouseover="showTip(event, 'fs127', 351)" class="i">set</span> <span class="n">42</span> <span class="n">1</span>
<span onmouseout="hideTip(event, 'fs121', 352)" onmouseover="showTip(event, 'fs121', 352)" class="i">l2</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs128', 353)" onmouseover="showTip(event, 'fs128', 353)" class="i">set</span> (<span onmouseout="hideTip(event, 'fs122', 354)" onmouseover="showTip(event, 'fs122', 354)" class="f">ref</span> {<span onmouseout="hideTip(event, 'fs115', 355)" onmouseover="showTip(event, 'fs115', 355)" class="i">a</span> <span class="o">=</span> <span class="n">42</span>; <span onmouseout="hideTip(event, 'fs116', 356)" onmouseover="showTip(event, 'fs116', 356)" class="i">b</span> <span class="o">=</span> <span class="s">&quot;&quot;</span> ; <span onmouseout="hideTip(event, 'fs117', 357)" onmouseover="showTip(event, 'fs117', 357)" class="i">c</span> <span class="o">=</span> <span class="k">false</span>}) <span class="n">5</span>
<span onmouseout="hideTip(event, 'fs123', 358)" onmouseover="showTip(event, 'fs123', 358)" class="i">l3</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs129', 359)" onmouseover="showTip(event, 'fs129', 359)" class="i">set</span> (<span onmouseout="hideTip(event, 'fs27', 360)" onmouseover="showTip(event, 'fs27', 360)" class="p">Some</span> [[| { <span onmouseout="hideTip(event, 'fs115', 361)" onmouseover="showTip(event, 'fs115', 361)" class="i">a</span> <span class="o">=</span> [{ <span onmouseout="hideTip(event, 'fs115', 362)" onmouseover="showTip(event, 'fs115', 362)" class="i">a</span> <span class="o">=</span> <span class="n">42</span> ; <span onmouseout="hideTip(event, 'fs116', 363)" onmouseover="showTip(event, 'fs116', 363)" class="i">b</span> <span class="o">=</span> <span class="s">&quot;&quot;</span> ; <span onmouseout="hideTip(event, 'fs117', 364)" onmouseover="showTip(event, 'fs117', 364)" class="i">c</span> <span class="o">=</span> <span class="k">false</span> }] ; <span onmouseout="hideTip(event, 'fs116', 365)" onmouseover="showTip(event, 'fs116', 365)" class="i">b</span> <span class="o">=</span> <span class="s">&quot;&quot;</span> ; <span onmouseout="hideTip(event, 'fs117', 366)" onmouseover="showTip(event, 'fs117', 366)" class="i">c</span> <span class="o">=</span> <span class="k">false</span> } |]]) { <span onmouseout="hideTip(event, 'fs115', 367)" onmouseover="showTip(event, 'fs115', 367)" class="i">a</span> <span class="o">=</span> <span class="n">42</span> ; <span onmouseout="hideTip(event, 'fs116', 368)" onmouseover="showTip(event, 'fs116', 368)" class="i">b</span> <span class="o">=</span> <span class="s">&quot;b&quot;</span> ; <span onmouseout="hideTip(event, 'fs117', 369)" onmouseover="showTip(event, 'fs117', 369)" class="i">c</span> <span class="o">=</span> <span class="k">true</span> }

<span class="c">// working with type providers</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 370)" onmouseover="showTip(event, 'fs3', 370)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs130', 371)" onmouseover="showTip(event, 'fs130', 371)" class="i">Data</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs131', 372)" onmouseover="showTip(event, 'fs131', 372)" class="t">Bar</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs132', 373)" onmouseover="showTip(event, 'fs132', 373)" class="t">CsvProvider</span><span class="o">&lt;</span><span class="i">Schema</span> <span class="o">=</span> <span class="s">&quot;A (int), B (string), C (float)&quot;</span>, <span class="i">HasHeaders</span> <span class="o">=</span> <span class="k">false</span><span class="o">&gt;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs133', 374)" onmouseover="showTip(event, 'fs133', 374)" class="i">l4</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs107', 375)" onmouseover="showTip(event, 'fs107', 375)" class="f">mkLens</span> &lt;@ <span class="k">fun</span> (<span class="i">x</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs131', 376)" onmouseover="showTip(event, 'fs131', 376)" class="i">Bar</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs134', 377)" onmouseover="showTip(event, 'fs134', 377)" class="t">Row</span> <span onmouseout="hideTip(event, 'fs12', 378)" onmouseover="showTip(event, 'fs12', 378)" class="t">list</span>) <span class="k">-&gt;</span> <span class="i">x</span><span class="o">.</span>[<span class="n">1</span>]<span class="o">.</span><span class="i">B</span> @&gt;

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs135', 379)" onmouseover="showTip(event, 'fs135', 379)" class="i">values</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs131', 380)" onmouseover="showTip(event, 'fs131', 380)" class="t">Bar</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs136', 381)" onmouseover="showTip(event, 'fs136', 381)" class="f">Parse</span>(<span class="s">&quot;42, bar, 3.14</span><span class="e">\n</span><span class="s">55, baz, 2.17&quot;</span>)<span class="o">.</span><span class="i">Rows</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs137', 382)" onmouseover="showTip(event, 'fs137', 382)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs138', 383)" onmouseover="showTip(event, 'fs138', 383)" class="f">toList</span>

<span onmouseout="hideTip(event, 'fs133', 384)" onmouseover="showTip(event, 'fs133', 384)" class="i">l4</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs139', 385)" onmouseover="showTip(event, 'fs139', 385)" class="i">get</span> <span onmouseout="hideTip(event, 'fs135', 386)" onmouseover="showTip(event, 'fs135', 386)" class="i">values</span>
<span onmouseout="hideTip(event, 'fs133', 387)" onmouseover="showTip(event, 'fs133', 387)" class="i">l4</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs140', 388)" onmouseover="showTip(event, 'fs140', 388)" class="i">set</span> <span onmouseout="hideTip(event, 'fs135', 389)" onmouseover="showTip(event, 'fs135', 389)" class="i">values</span> <span class="s">&quot;foo&quot;</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Lens.get: &#39;T -&gt; &#39;F</div>
<div class="tip" id="fs2">Lens.set: &#39;T -&gt; &#39;F -&gt; &#39;T</div>
<div class="tip" id="fs3">Multiple items<br />namespace FSharp<br /><br />--------------------<br />namespace Microsoft.FSharp</div>
<div class="tip" id="fs4">namespace Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs5">module Patterns<br /><br />from Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs6">namespace TypeShape</div>
<div class="tip" id="fs7">namespace TypeShape.Core</div>
<div class="tip" id="fs8">Multiple items<br />namespace TypeShape<br /><br />--------------------<br />type TypeShape =<br />&#160;&#160;private new : unit -&gt; TypeShape<br />&#160;&#160;abstract member Accept : ITypeShapeVisitor&lt;&#39;R&gt; -&gt; &#39;R<br />&#160;&#160;abstract member ShapeInfo : TypeShapeInfo<br />&#160;&#160;abstract member Type : Type<br />&#160;&#160;override ToString : unit -&gt; string<br />&#160;&#160;static member Create : unit -&gt; TypeShape&lt;&#39;T&gt;<br />&#160;&#160;static member Create : typ:Type -&gt; TypeShape<br />&#160;&#160;static member FromValue : obj:obj -&gt; TypeShape<br /><br />Full name: TypeShape.Core.Core.TypeShape<br /><br />--------------------<br />type TypeShape&lt;&#39;T&gt; =<br />&#160;&#160;inherit TypeShape<br />&#160;&#160;new : unit -&gt; TypeShape&lt;&#39;T&gt;<br />&#160;&#160;override Accept : v:ITypeShapeVisitor&lt;&#39;a1&gt; -&gt; &#39;a1<br />&#160;&#160;override Equals : o:obj -&gt; bool<br />&#160;&#160;override GetHashCode : unit -&gt; int<br />&#160;&#160;override ShapeInfo : TypeShapeInfo<br />&#160;&#160;override Type : Type<br /><br />Full name: TypeShape.Core.Core.TypeShape&lt;_&gt;<br /><br />--------------------<br />new : unit -&gt; TypeShape&lt;&#39;T&gt;</div>
<div class="tip" id="fs9">module Clone<br /><br />from TypeShape</div>
<div class="tip" id="fs10">type private Path = Node list<br /><br />Full name: Script.Impl.Path</div>
<div class="tip" id="fs11">type private Node =<br />&#160;&#160;| Property of string<br />&#160;&#160;| Item of int<br /><br />Full name: Script.Impl.Node</div>
<div class="tip" id="fs12">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs13">union case Node.Property: string -&gt; Node</div>
<div class="tip" id="fs14">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs15">union case Node.Item: int -&gt; Node</div>
<div class="tip" id="fs16">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs17">val private extractPath : e:Expr&lt;(&#39;T -&gt; &#39;F)&gt; -&gt; Path<br /><br />Full name: Script.Impl.extractPath</div>
<div class="tip" id="fs18">val e : Expr&lt;(&#39;T -&gt; &#39;F)&gt;</div>
<div class="tip" id="fs19">Multiple items<br />type Expr =<br />&#160;&#160;override Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetFreeVars : unit -&gt; seq&lt;Var&gt;<br />&#160;&#160;member Substitute : substitution:(Var -&gt; Expr option) -&gt; Expr<br />&#160;&#160;member ToString : full:bool -&gt; string<br />&#160;&#160;member CustomAttributes : Expr list<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member AddressOf : target:Expr -&gt; Expr<br />&#160;&#160;static member AddressSet : target:Expr * value:Expr -&gt; Expr<br />&#160;&#160;static member Application : functionExpr:Expr * argument:Expr -&gt; Expr<br />&#160;&#160;static member Applications : functionExpr:Expr * arguments:Expr list list -&gt; Expr<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Quotations.Expr<br /><br />--------------------<br />type Expr&lt;&#39;T&gt; =<br />&#160;&#160;inherit Expr<br />&#160;&#160;member Raw : Expr<br /><br />Full name: Microsoft.FSharp.Quotations.Expr&lt;_&gt;</div>
<div class="tip" id="fs20">val aux : (Var -&gt; Node list -&gt; Expr -&gt; Node list)</div>
<div class="tip" id="fs21">val v : Var</div>
<div class="tip" id="fs22">val acc : Node list</div>
<div class="tip" id="fs23">val e : Expr</div>
<div class="tip" id="fs24">Multiple items<br />active recognizer Var: Expr -&gt; Var option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Var|_| )<br /><br />--------------------<br />type Var =<br />&#160;&#160;interface IComparable<br />&#160;&#160;new : name:string * typ:Type * ?isMutable:bool -&gt; Var<br />&#160;&#160;member IsMutable : bool<br />&#160;&#160;member Name : string<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member Global : name:string * typ:Type -&gt; Var<br /><br />Full name: Microsoft.FSharp.Quotations.Var<br /><br />--------------------<br />new : name:string * typ:System.Type * ?isMutable:bool -&gt; Var</div>
<div class="tip" id="fs25">val v&#39; : Var</div>
<div class="tip" id="fs26">active recognizer PropertyGet: Expr -&gt; (Expr option * System.Reflection.PropertyInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |PropertyGet|_| )</div>
<div class="tip" id="fs27">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs28">val o : Expr</div>
<div class="tip" id="fs29">val p : System.Reflection.PropertyInfo</div>
<div class="tip" id="fs30">active recognizer Value: Expr -&gt; (obj * System.Type) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Value|_| )</div>
<div class="tip" id="fs31">val i : int</div>
<div class="tip" id="fs32">property System.Reflection.MemberInfo.Name: string</div>
<div class="tip" id="fs33">active recognizer Call: Expr -&gt; (Expr option * System.Reflection.MethodInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Call|_| )</div>
<div class="tip" id="fs34">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs35">val m : System.Reflection.MethodInfo</div>
<div class="tip" id="fs36">property Expr.Type: System.Type</div>
<div class="tip" id="fs37">property System.Type.IsArray: bool</div>
<div class="tip" id="fs38">System.Type.GetElementType() : System.Type</div>
<div class="tip" id="fs39">active recognizer TupleGet: Expr -&gt; (Expr * int) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |TupleGet|_| )</div>
<div class="tip" id="fs40">val x : Expr</div>
<div class="tip" id="fs41">val invalidArg : argumentName:string -&gt; message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.invalidArg</div>
<div class="tip" id="fs42">active recognizer Lambda: Expr -&gt; (Var * Expr) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Lambda|_| )</div>
<div class="tip" id="fs43">val body : Expr</div>
<div class="tip" id="fs44">val private mkLensAux : path:Path -&gt; Lens&lt;&#39;T,&#39;F&gt;<br /><br />Full name: Script.Impl.mkLensAux</div>
<div class="tip" id="fs45">val path : Path</div>
<div class="tip" id="fs46">type Lens&lt;&#39;T,&#39;F&gt; =<br />&#160;&#160;{get: &#39;T -&gt; &#39;F;<br />&#160;&#160;&#160;set: &#39;T -&gt; &#39;F -&gt; &#39;T;}<br /><br />Full name: Script.Lens&lt;_,_&gt;</div>
<div class="tip" id="fs47">val wrap : (Lens&lt;&#39;a,&#39;b&gt; -&gt; Lens&lt;&#39;T,&#39;F&gt;)</div>
<div class="tip" id="fs48">val l : Lens&lt;&#39;a,&#39;b&gt;</div>
<div class="tip" id="fs49">val unbox : value:obj -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.unbox</div>
<div class="tip" id="fs50">val nest : (Path -&gt; IShapeWriteMember&lt;&#39;T&gt; -&gt; Lens&lt;&#39;T,&#39;F&gt;)</div>
<div class="tip" id="fs51">val chain : Path</div>
<div class="tip" id="fs52">val m : IShapeWriteMember&lt;&#39;T&gt;</div>
<div class="tip" id="fs53">type IShapeWriteMember&lt;&#39;Record&gt; =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;inherit IShapeMember&lt;&#39;Record&gt;<br />&#160;&#160;&#160;&#160;abstract member Accept : IWriteMemberVisitor&lt;&#39;Record,&#39;R&gt; -&gt; &#39;R<br />&#160;&#160;end<br /><br />Full name: TypeShape.Core.Core.IShapeWriteMember&lt;_&gt;</div>
<div class="tip" id="fs54">abstract member IShapeMember.Accept : IMemberVisitor&lt;&#39;DeclaringType,&#39;R&gt; -&gt; &#39;R<br />abstract member IShapeWriteMember.Accept : IWriteMemberVisitor&lt;&#39;Record,&#39;R&gt; -&gt; &#39;R</div>
<div class="tip" id="fs55">type IWriteMemberVisitor&lt;&#39;TRecord,&#39;R&gt; =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member Visit : ShapeWriteMember&lt;&#39;TRecord,&#39;Field&gt; -&gt; &#39;R<br />&#160;&#160;end<br /><br />Full name: TypeShape.Core.Core.IWriteMemberVisitor&lt;_,_&gt;</div>
<div class="tip" id="fs56">val m : ShapeWriteMember&lt;&#39;T,&#39;F0&gt;</div>
<div class="tip" id="fs57">type ShapeWriteMember&lt;&#39;DeclaringType,&#39;MemberType&gt; =<br />&#160;&#160;inherit ShapeMember&lt;&#39;DeclaringType,&#39;MemberType&gt;<br />&#160;&#160;interface IShapeWriteMember&lt;&#39;DeclaringType&gt;<br />&#160;&#160;private new : label:string * memberInfo:MemberInfo * path:MemberInfo [] -&gt; ShapeWriteMember&lt;&#39;DeclaringType,&#39;MemberType&gt;<br />&#160;&#160;member Inject : instance:&#39;DeclaringType -&gt; field:&#39;MemberType -&gt; &#39;DeclaringType<br />&#160;&#160;member InjectExpr : instance:Expr&lt;&#39;DeclaringType&gt; -&gt; field:Expr&lt;&#39;MemberType&gt; -&gt; Expr&lt;&#39;DeclaringType&gt;<br /><br />Full name: TypeShape.Core.Core.ShapeWriteMember&lt;_,_&gt;</div>
<div class="tip" id="fs58">val inner : Lens&lt;&#39;F0,&#39;F&gt;</div>
<div class="tip" id="fs59">val t : &#39;T</div>
<div class="tip" id="fs60">Lens.get: &#39;F0 -&gt; &#39;F</div>
<div class="tip" id="fs61">member ShapeMember.Project : instance:&#39;DeclaringType -&gt; &#39;MemberType</div>
<div class="tip" id="fs62">val set : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.set</div>
<div class="tip" id="fs63">val f : &#39;F</div>
<div class="tip" id="fs64">member ShapeWriteMember.Inject : instance:&#39;DeclaringType -&gt; field:&#39;MemberType -&gt; &#39;DeclaringType</div>
<div class="tip" id="fs65">Lens.set: &#39;F0 -&gt; &#39;F -&gt; &#39;F0</div>
<div class="tip" id="fs66">val shapeof&lt;&#39;T&gt; : TypeShape<br /><br />Full name: TypeShape.Core.Core.shapeof</div>
<div class="tip" id="fs67">val id : x:&#39;T -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.id</div>
<div class="tip" id="fs68">val y : &#39;F</div>
<div class="tip" id="fs69">module Shape<br /><br />from TypeShape.Core.Core</div>
<div class="tip" id="fs70">active recognizer FSharpList: TypeShape -&gt; IShapeFSharpList option<br /><br />Full name: TypeShape.Core.Core.Shape.( |FSharpList|_| )</div>
<div class="tip" id="fs71">val s : IShapeFSharpList</div>
<div class="tip" id="fs72">val rest : Node list</div>
<div class="tip" id="fs73">type IFSharpListVisitor&lt;&#39;R&gt; =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member Visit : unit -&gt; &#39;R<br />&#160;&#160;end<br /><br />Full name: TypeShape.Core.Core.IFSharpListVisitor&lt;_&gt;</div>
<div class="tip" id="fs74">val inner : Lens&lt;&#39;t,&#39;F&gt;</div>
<div class="tip" id="fs75">val ts : &#39;t list</div>
<div class="tip" id="fs76">Lens.get: &#39;t -&gt; &#39;F</div>
<div class="tip" id="fs77">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs78">val mapi : mapping:(int -&gt; &#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list<br /><br />Full name: Microsoft.FSharp.Collections.List.mapi</div>
<div class="tip" id="fs79">val j : int</div>
<div class="tip" id="fs80">val t : &#39;t</div>
<div class="tip" id="fs81">Lens.set: &#39;t -&gt; &#39;F -&gt; &#39;t</div>
<div class="tip" id="fs82">active recognizer FSharpOption: TypeShape -&gt; IShapeFSharpOption option<br /><br />Full name: TypeShape.Core.Core.Shape.( |FSharpOption|_| )</div>
<div class="tip" id="fs83">val s : IShapeFSharpOption</div>
<div class="tip" id="fs84">type IFSharpOptionVisitor&lt;&#39;R&gt; =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member Visit : unit -&gt; &#39;R<br />&#160;&#160;end<br /><br />Full name: TypeShape.Core.Core.IFSharpOptionVisitor&lt;_&gt;</div>
<div class="tip" id="fs85">val ts : &#39;t option</div>
<div class="tip" id="fs86">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs87">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs88">val get : option:&#39;T option -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Option.get</div>
<div class="tip" id="fs89">active recognizer Tuple: TypeShape -&gt; IShapeTuple option<br /><br />Full name: TypeShape.Core.Core.Shape.( |Tuple|_| )</div>
<div class="tip" id="fs90">type ShapeTuple&lt;&#39;Tuple&gt; =<br />&#160;&#160;interface IShapeTuple<br />&#160;&#160;private new : unit -&gt; ShapeTuple&lt;&#39;Tuple&gt;<br />&#160;&#160;member CreateUninitialized : unit -&gt; &#39;Tuple<br />&#160;&#160;member CreateUninitializedExpr : unit -&gt; Expr&lt;&#39;Tuple&gt;<br />&#160;&#160;member Elements : IShapeWriteMember&lt;&#39;Tuple&gt; []<br />&#160;&#160;member IsStructTuple : bool<br /><br />Full name: TypeShape.Core.Core.ShapeTuple&lt;_&gt;</div>
<div class="tip" id="fs91">val s : ShapeTuple&lt;&#39;T&gt;</div>
<div class="tip" id="fs92">active recognizer Array: TypeShape -&gt; IShapeArray option<br /><br />Full name: TypeShape.Core.Core.Shape.( |Array|_| )</div>
<div class="tip" id="fs93">val s : IShapeArray</div>
<div class="tip" id="fs94">type IArrayVisitor&lt;&#39;R&gt; =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member Visit : rank:int -&gt; &#39;R<br />&#160;&#160;end<br /><br />Full name: TypeShape.Core.Core.IArrayVisitor&lt;_&gt;</div>
<div class="tip" id="fs95">val ts : &#39;t []</div>
<div class="tip" id="fs96">active recognizer FSharpRecord: TypeShape -&gt; IShapeFSharpRecord option<br /><br />Full name: TypeShape.Core.Core.Shape.( |FSharpRecord|_| )</div>
<div class="tip" id="fs97">type ShapeFSharpRecord&lt;&#39;Record&gt; =<br />&#160;&#160;interface IShapeFSharpRecord<br />&#160;&#160;private new : unit -&gt; ShapeFSharpRecord&lt;&#39;Record&gt;<br />&#160;&#160;member CreateUninitialized : unit -&gt; &#39;Record<br />&#160;&#160;member CreateUninitializedExpr : unit -&gt; Expr&lt;&#39;Record&gt;<br />&#160;&#160;member Fields : IShapeWriteMember&lt;&#39;Record&gt; []<br />&#160;&#160;member IsStructRecord : bool<br /><br />Full name: TypeShape.Core.Core.ShapeFSharpRecord&lt;_&gt;</div>
<div class="tip" id="fs98">val s : ShapeFSharpRecord&lt;&#39;T&gt;</div>
<div class="tip" id="fs99">active recognizer FSharpRef: TypeShape -&gt; IShapeFSharpRef option<br /><br />Full name: TypeShape.Core.Core.Shape.( |FSharpRef|_| )</div>
<div class="tip" id="fs100">Multiple items<br />union case TypeShapeInfo.Array: element: System.Type * rank: int -&gt; TypeShapeInfo<br /><br />--------------------<br />module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs101">val find : predicate:(&#39;T -&gt; bool) -&gt; array:&#39;T [] -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.Array.find</div>
<div class="tip" id="fs102">val p : IShapeWriteMember&lt;&#39;T&gt;</div>
<div class="tip" id="fs103">property IShapeMember.Label: string</div>
<div class="tip" id="fs104">val id : string</div>
<div class="tip" id="fs105">val failwithf : format:Printf.StringFormat&lt;&#39;T,&#39;Result&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.failwithf</div>
<div class="tip" id="fs106">val typeof&lt;&#39;T&gt; : System.Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs107">val mkLens : expr:Quotations.Expr&lt;(int -&gt; int)&gt; -&gt; Lens&lt;&#39;T,&#39;F&gt;<br /><br />Full name: Script.mkLens</div>
<div class="tip" id="fs108">val expr : Quotations.Expr&lt;(int -&gt; int)&gt;</div>
<div class="tip" id="fs109">val path : Impl.Path</div>
<div class="tip" id="fs110">module Impl<br /><br />from Script</div>
<div class="tip" id="fs111">val private extractPath : e:Quotations.Expr&lt;(&#39;T -&gt; &#39;F)&gt; -&gt; Impl.Path<br /><br />Full name: Script.Impl.extractPath</div>
<div class="tip" id="fs112">val lens : Lens&lt;&#39;T,&#39;F&gt;</div>
<div class="tip" id="fs113">val private mkLensAux : path:Impl.Path -&gt; Lens&lt;&#39;T,&#39;F&gt;<br /><br />Full name: Script.Impl.mkLensAux</div>
<div class="tip" id="fs114">type Foo&lt;&#39;T&gt; =<br />&#160;&#160;{a: &#39;T;<br />&#160;&#160;&#160;b: string;<br />&#160;&#160;&#160;c: bool;}<br /><br />Full name: Script.Foo&lt;_&gt;</div>
<div class="tip" id="fs115">Foo.a: &#39;a</div>
<div class="tip" id="fs116">Foo.b: string</div>
<div class="tip" id="fs117">Foo.c: bool</div>
<div class="tip" id="fs118">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs119">val l1 : Lens&lt;int,int&gt;<br /><br />Full name: Script.l1</div>
<div class="tip" id="fs120">val x : int</div>
<div class="tip" id="fs121">val l2 : Lens&lt;Foo&lt;int&gt; ref,int&gt;<br /><br />Full name: Script.l2</div>
<div class="tip" id="fs122">Multiple items<br />val ref : value:&#39;T -&gt; &#39;T ref<br /><br />Full name: Microsoft.FSharp.Core.Operators.ref<br /><br />--------------------<br />type &#39;T ref = Ref&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.ref&lt;_&gt;</div>
<div class="tip" id="fs123">val l3 : Lens&lt;Foo&lt;Foo&lt;int&gt; list&gt; [] list option,Foo&lt;int&gt;&gt;<br /><br />Full name: Script.l3</div>
<div class="tip" id="fs124">Lens.get: int -&gt; int</div>
<div class="tip" id="fs125">Lens.get: Foo&lt;int&gt; ref -&gt; int</div>
<div class="tip" id="fs126">Lens.get: Foo&lt;Foo&lt;int&gt; list&gt; [] list option -&gt; Foo&lt;int&gt;</div>
<div class="tip" id="fs127">Lens.set: int -&gt; int -&gt; int</div>
<div class="tip" id="fs128">Lens.set: Foo&lt;int&gt; ref -&gt; int -&gt; Foo&lt;int&gt; ref</div>
<div class="tip" id="fs129">Lens.set: Foo&lt;Foo&lt;int&gt; list&gt; [] list option -&gt; Foo&lt;int&gt; -&gt; Foo&lt;Foo&lt;int&gt; list&gt; [] list option</div>
<div class="tip" id="fs130">Multiple items<br />namespace FSharp.Data<br /><br />--------------------<br />namespace Microsoft.FSharp.Data</div>
<div class="tip" id="fs131">type Bar = CsvProvider&lt;...&gt;<br /><br />Full name: Script.Bar</div>
<div class="tip" id="fs132">type CsvProvider<br /><br />Full name: FSharp.Data.CsvProvider<br /><em><br /><br />&lt;summary&gt;Typed representation of a CSV file.&lt;/summary&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;Sample&#39;&gt;Location of a CSV sample file or a string containing a sample CSV document.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;Separators&#39;&gt;Column delimiter(s). Defaults to `,`.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;InferRows&#39;&gt;Number of rows to use for inference. Defaults to `1000`. If this is zero, all rows are used.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;Schema&#39;&gt;Optional column types, in a comma separated list. Valid types are `int`, `int64`, `bool`, `float`, `decimal`, `date`, `guid`, `string`, `int?`, `int64?`, `bool?`, `float?`, `decimal?`, `date?`, `guid?`, `int option`, `int64 option`, `bool option`, `float option`, `decimal option`, `date option`, `guid option` and `string option`.<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;You can also specify a unit and the name of the column like this: `Name (type&amp;lt;unit&amp;gt;)`, or you can override only the name. If you don&#39;t want to specify all the columns, you can reference the columns by name like this: `ColumnName=type`.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;HasHeaders&#39;&gt;Whether the sample contains the names of the columns as its first line.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;IgnoreErrors&#39;&gt;Whether to ignore rows that have the wrong number of columns or which can&#39;t be parsed using the inferred or specified schema. Otherwise an exception is thrown when these rows are encountered.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;SkipRows&#39;&gt;SKips the first n rows of the CSV file.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;AssumeMissingValues&#39;&gt;When set to true, the type provider will assume all columns can have missing values, even if in the provided sample all values are present. Defaults to false.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;PreferOptionals&#39;&gt;When set to true, inference will prefer to use the option type instead of nullable types, `double.NaN` or `&quot;&quot;` for missing values. Defaults to false.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;Quote&#39;&gt;The quotation mark (for surrounding values containing the delimiter). Defaults to `&quot;`.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;MissingValues&#39;&gt;The set of strings recogized as missing values. Defaults to `NaN,NA,N/A,#N/A,:,-,TBA,TBD`.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;CacheRows&#39;&gt;Whether the rows should be caches so they can be iterated multiple times. Defaults to true. Disable for large datasets.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;Culture&#39;&gt;The culture used for parsing numbers and dates. Defaults to the invariant culture.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;Encoding&#39;&gt;The encoding used to read the sample. You can specify either the character set name or the codepage number. Defaults to UTF8 for files, and to ISO-8859-1 the for HTTP requests, unless `charset` is specified in the `Content-Type` response header.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;ResolutionFolder&#39;&gt;A directory that is used when resolving relative file references (at design time and in hosted execution).&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;EmbeddedResource&#39;&gt;When specified, the type provider first attempts to load the sample from the specified resource <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(e.g. &#39;MyCompany.MyAssembly, resource_name.csv&#39;). This is useful when exposing types generated by the type provider.&lt;/param&gt;</em></div>
<div class="tip" id="fs133">val l4 : Lens&lt;CsvProvider&lt;...&gt;.Row list,string&gt;<br /><br />Full name: Script.l4</div>
<div class="tip" id="fs134">type Row =<br />&#160;&#160;inherit int * string * float<br />&#160;&#160;new : a: int * b: string * c: float -&gt; Row<br />&#160;&#160;member A : int<br />&#160;&#160;member B : string<br />&#160;&#160;member C : float<br /><br />Full name: FSharp.Data.CsvProvider,Schema=&quot;A (int), B (string), C (float)&quot;,HasHeaders=&quot;False&quot;.Row</div>
<div class="tip" id="fs135">val values : CsvProvider&lt;...&gt;.Row list<br /><br />Full name: Script.values</div>
<div class="tip" id="fs136">CsvProvider&lt;...&gt;.Parse(text: string) : CsvProvider&lt;...&gt;<br /><em><br /><br />Parses the specified CSV string</em></div>
<div class="tip" id="fs137">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs138">val toList : source:seq&lt;&#39;T&gt; -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.Seq.toList</div>
<div class="tip" id="fs139">Lens.get: CsvProvider&lt;...&gt;.Row list -&gt; string</div>
<div class="tip" id="fs140">Lens.set: CsvProvider&lt;...&gt;.Row list -&gt; string -&gt; CsvProvider&lt;...&gt;.Row list</div>

