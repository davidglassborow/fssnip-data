<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// You need NUnit (http://nunit.org/)</span>
<span class="k">open</span> <span class="i">NUnit</span><span class="o">.</span><span class="i">Framework</span>

<span class="k">let</span> <span class="k">inline</span> (<span class="o">==</span>) (<span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">actual</span><span class="o">:</span>#<span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">obj</span>) (<span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">expected</span><span class="o">:</span>#<span onmouseout="hideTip(event, 'fs2', 4)" onmouseover="showTip(event, 'fs2', 4)" class="t">obj</span>) <span class="o">=</span> <span class="i">Assert</span><span class="o">.</span><span class="i">AreEqual</span>(<span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">expected</span>, <span onmouseout="hideTip(event, 'fs1', 6)" onmouseover="showTip(event, 'fs1', 6)" class="i">actual</span>)
<span class="k">let</span> <span class="k">inline</span> (<span class="o">!=</span>) (<span onmouseout="hideTip(event, 'fs1', 7)" onmouseover="showTip(event, 'fs1', 7)" class="i">actual</span><span class="o">:</span>#<span onmouseout="hideTip(event, 'fs2', 8)" onmouseover="showTip(event, 'fs2', 8)" class="t">obj</span>) (<span onmouseout="hideTip(event, 'fs3', 9)" onmouseover="showTip(event, 'fs3', 9)" class="i">expected</span><span class="o">:</span>#<span onmouseout="hideTip(event, 'fs2', 10)" onmouseover="showTip(event, 'fs2', 10)" class="t">obj</span>) <span class="o">=</span> <span class="i">Assert</span><span class="o">.</span><span class="i">AreNotEqual</span>(<span onmouseout="hideTip(event, 'fs3', 11)" onmouseover="showTip(event, 'fs3', 11)" class="i">expected</span>, <span onmouseout="hideTip(event, 'fs1', 12)" onmouseover="showTip(event, 'fs1', 12)" class="i">actual</span>)
<span class="k">let</span> <span class="k">inline</span> (<span class="o">&lt;-&gt;</span>) (<span onmouseout="hideTip(event, 'fs1', 13)" onmouseover="showTip(event, 'fs1', 13)" class="i">actual</span><span class="o">:</span>#<span onmouseout="hideTip(event, 'fs2', 14)" onmouseover="showTip(event, 'fs2', 14)" class="t">obj</span>) <span onmouseout="hideTip(event, 'fs3', 15)" onmouseover="showTip(event, 'fs3', 15)" class="i">expected</span> <span class="o">=</span> <span class="i">Assert</span><span class="o">.</span><span class="i">IsInstanceOf</span>(<span onmouseout="hideTip(event, 'fs3', 16)" onmouseover="showTip(event, 'fs3', 16)" class="i">expected</span>, <span onmouseout="hideTip(event, 'fs1', 17)" onmouseover="showTip(event, 'fs1', 17)" class="i">actual</span>)
<span class="k">let</span> <span class="k">inline</span> (<span class="o">&lt;!&gt;</span>) (<span onmouseout="hideTip(event, 'fs1', 18)" onmouseover="showTip(event, 'fs1', 18)" class="i">actual</span><span class="o">:</span>#<span onmouseout="hideTip(event, 'fs2', 19)" onmouseover="showTip(event, 'fs2', 19)" class="t">obj</span>) <span onmouseout="hideTip(event, 'fs3', 20)" onmouseover="showTip(event, 'fs3', 20)" class="i">expected</span> <span class="o">=</span> <span class="i">Assert</span><span class="o">.</span><span class="i">IsNotInstanceOf</span>(<span onmouseout="hideTip(event, 'fs3', 21)" onmouseover="showTip(event, 'fs3', 21)" class="i">expected</span>, <span onmouseout="hideTip(event, 'fs1', 22)" onmouseover="showTip(event, 'fs1', 22)" class="i">actual</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 23)" onmouseover="showTip(event, 'fs4', 23)" class="f">``is null``</span> <span onmouseout="hideTip(event, 'fs5', 24)" onmouseover="showTip(event, 'fs5', 24)" class="i">anObject</span> <span class="o">=</span> <span class="i">Assert</span><span class="o">.</span><span class="i">IsNull</span>(<span onmouseout="hideTip(event, 'fs5', 25)" onmouseover="showTip(event, 'fs5', 25)" class="i">anObject</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 26)" onmouseover="showTip(event, 'fs6', 26)" class="f">``is not null``</span> <span onmouseout="hideTip(event, 'fs5', 27)" onmouseover="showTip(event, 'fs5', 27)" class="i">anObject</span> <span class="o">=</span> <span class="i">Assert</span><span class="o">.</span><span class="i">NotNull</span>(<span onmouseout="hideTip(event, 'fs5', 28)" onmouseover="showTip(event, 'fs5', 28)" class="i">anObject</span>)

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 29)" onmouseover="showTip(event, 'fs7', 29)" class="f">``1 + 1 = 2``</span>() <span class="o">=</span> <span class="n">1</span> <span class="o">+</span> <span class="n">1</span> <span class="o">==</span> <span class="n">2</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 30)" onmouseover="showTip(event, 'fs8', 30)" class="f">``1 + 1 + 1 &lt;&gt; 2``</span>() <span class="o">=</span> <span class="n">1</span> <span class="o">+</span> <span class="n">1</span> <span class="o">+</span> <span class="n">1</span> <span class="o">!=</span> <span class="n">2</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 31)" onmouseover="showTip(event, 'fs9', 31)" class="f">``&quot;Howdy&quot;B is a byte[]``</span>() <span class="o">=</span> <span class="s">&quot;Howdy&quot;B</span> <span class="o">&lt;-&gt;</span> <span onmouseout="hideTip(event, 'fs10', 32)" onmouseover="showTip(event, 'fs10', 32)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 33)" onmouseover="showTip(event, 'fs11', 33)" class="t">byte</span>[]<span class="o">&gt;</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 34)" onmouseover="showTip(event, 'fs12', 34)" class="f">``&quot;Howdy&quot; is not a byte[]``</span>() <span class="o">=</span> <span class="s">&quot;Howdy&quot;</span> <span class="o">&lt;!&gt;</span> <span onmouseout="hideTip(event, 'fs10', 35)" onmouseover="showTip(event, 'fs10', 35)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 36)" onmouseover="showTip(event, 'fs11', 36)" class="t">byte</span>[]<span class="o">&gt;</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 37)" onmouseover="showTip(event, 'fs13', 37)" class="f">``null is null``</span>() <span class="o">=</span> <span class="k">null</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs4', 38)" onmouseover="showTip(event, 'fs4', 38)" class="f">``is null``</span>

[&lt;<span class="i">Test</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 39)" onmouseover="showTip(event, 'fs14', 39)" class="f">``new obj() is not null``</span>() <span class="o">=</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 40)" onmouseover="showTip(event, 'fs15', 40)" class="i">o</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 41)" onmouseover="showTip(event, 'fs2', 41)" class="t">obj</span>() <span class="k">in</span> <span onmouseout="hideTip(event, 'fs15', 42)" onmouseover="showTip(event, 'fs15', 42)" class="i">o</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs6', 43)" onmouseover="showTip(event, 'fs6', 43)" class="f">``is not null``</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val actual : &#39;a</div>
<div class="tip" id="fs2">type obj = System.Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs3">val expected : &#39;b</div>
<div class="tip" id="fs4">val ( is null ) : anObject:&#39;a -&gt; &#39;b<br /><br />Full name: Script.( is null )</div>
<div class="tip" id="fs5">val anObject : &#39;a</div>
<div class="tip" id="fs6">val ( is not null ) : anObject:&#39;a -&gt; &#39;b<br /><br />Full name: Script.( is not null )</div>
<div class="tip" id="fs7">val ( 1 + 1 = 2 ) : unit -&gt; &#39;a<br /><br />Full name: Script.( 1 + 1 = 2 )</div>
<div class="tip" id="fs8">val ( 1 + 1 + 1 &lt;&gt; 2 ) : unit -&gt; &#39;a<br /><br />Full name: Script.( 1 + 1 + 1 &lt;&gt; 2 )</div>
<div class="tip" id="fs9">val ( &quot;Howdy&quot;B is a byte[] ) : unit -&gt; &#39;a<br /><br />Full name: Script.( &quot;Howdy&quot;B is a byte[] )</div>
<div class="tip" id="fs10">val typeof&lt;&#39;T&gt; : System.Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs11">Multiple items<br />val byte : value:&#39;T -&gt; byte (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.byte<br /><br />--------------------<br />type byte = System.Byte<br /><br />Full name: Microsoft.FSharp.Core.byte</div>
<div class="tip" id="fs12">val ( &quot;Howdy&quot; is not a byte[] ) : unit -&gt; &#39;a<br /><br />Full name: Script.( &quot;Howdy&quot; is not a byte[] )</div>
<div class="tip" id="fs13">val ( null is null ) : unit -&gt; &#39;a<br /><br />Full name: Script.( null is null )</div>
<div class="tip" id="fs14">val ( new obj() is not null ) : unit -&gt; &#39;a<br /><br />Full name: Script.( new obj() is not null )</div>
<div class="tip" id="fs15">val o : System.Object</div>

