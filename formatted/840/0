<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">(* Affine Cipher - origional in python from http://inventwithpython.com/codebreaker (BSD Licensed) *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">findModInverse</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">m</span> <span class="o">=</span>
  [<span class="n">0..</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">m</span>] 
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="f">filter</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">b</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 8)" onmouseover="showTip(event, 'fs2', 8)" class="i">a</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="i">b</span> <span class="o">%</span> <span onmouseout="hideTip(event, 'fs3', 10)" onmouseover="showTip(event, 'fs3', 10)" class="i">m</span> <span class="o">=</span> <span class="n">1</span>)  
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs4', 11)" onmouseover="showTip(event, 'fs4', 11)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="f">head</span>        

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="f">flip</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="f">f</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="i">a</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="i">b</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 17)" onmouseover="showTip(event, 'fs9', 17)" class="f">f</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="i">b</span> <span onmouseout="hideTip(event, 'fs10', 19)" onmouseover="showTip(event, 'fs10', 19)" class="i">a</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 20)" onmouseover="showTip(event, 'fs12', 20)" class="f">p</span> <span onmouseout="hideTip(event, 'fs13', 21)" onmouseover="showTip(event, 'fs13', 21)" class="i">a</span> <span onmouseout="hideTip(event, 'fs14', 22)" onmouseover="showTip(event, 'fs14', 22)" class="i">b</span> (<span onmouseout="hideTip(event, 'fs15', 23)" onmouseover="showTip(event, 'fs15', 23)" class="i">message</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs16', 24)" onmouseover="showTip(event, 'fs16', 24)" class="t">string</span>) (<span onmouseout="hideTip(event, 'fs17', 25)" onmouseover="showTip(event, 'fs17', 25)" class="i">S</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="t">string</span>) <span onmouseout="hideTip(event, 'fs18', 27)" onmouseover="showTip(event, 'fs18', 27)" class="f">f</span> <span onmouseout="hideTip(event, 'fs19', 28)" onmouseover="showTip(event, 'fs19', 28)" class="i">d</span> <span onmouseout="hideTip(event, 'fs20', 29)" onmouseover="showTip(event, 'fs20', 29)" class="f">f&#39;</span> <span onmouseout="hideTip(event, 'fs21', 30)" onmouseover="showTip(event, 'fs21', 30)" class="i">d&#39;</span> <span class="o">=</span>
  
  <span onmouseout="hideTip(event, 'fs15', 31)" onmouseover="showTip(event, 'fs15', 31)" class="i">message</span> 
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs4', 32)" onmouseover="showTip(event, 'fs4', 32)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 33)" onmouseover="showTip(event, 'fs22', 33)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs23', 34)" onmouseover="showTip(event, 'fs23', 34)" class="i">c</span> <span class="k">-&gt;</span> 
     <span onmouseout="hideTip(event, 'fs17', 35)" onmouseover="showTip(event, 'fs17', 35)" class="i">S</span><span class="o">.</span>[ <span onmouseout="hideTip(event, 'fs17', 36)" onmouseover="showTip(event, 'fs17', 36)" class="i">S</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 37)" onmouseover="showTip(event, 'fs24', 37)" class="f">IndexOf</span> <span onmouseout="hideTip(event, 'fs23', 38)" onmouseover="showTip(event, 'fs23', 38)" class="i">c</span> 
         <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs8', 39)" onmouseover="showTip(event, 'fs8', 39)" class="f">flip</span> <span onmouseout="hideTip(event, 'fs18', 40)" onmouseover="showTip(event, 'fs18', 40)" class="f">f</span>  <span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="i">d</span> 
         <span class="o">|&gt;</span>      <span onmouseout="hideTip(event, 'fs20', 42)" onmouseover="showTip(event, 'fs20', 42)" class="f">f&#39;</span> <span onmouseout="hideTip(event, 'fs21', 43)" onmouseover="showTip(event, 'fs21', 43)" class="i">d&#39;</span> 
         <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs8', 44)" onmouseover="showTip(event, 'fs8', 44)" class="f">flip</span> (<span class="o">%</span>) <span onmouseout="hideTip(event, 'fs17', 45)" onmouseover="showTip(event, 'fs17', 45)" class="i">S</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 46)" onmouseover="showTip(event, 'fs25', 46)" class="i">Length</span>]
         <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs16', 47)" onmouseover="showTip(event, 'fs16', 47)" class="f">string</span>)
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs26', 48)" onmouseover="showTip(event, 'fs26', 48)" class="t">String</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 49)" onmouseover="showTip(event, 'fs27', 49)" class="f">concat</span> <span class="s">&quot;&quot;</span>
  
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 50)" onmouseover="showTip(event, 'fs28', 50)" class="f">F</span> <span onmouseout="hideTip(event, 'fs29', 51)" onmouseover="showTip(event, 'fs29', 51)" class="i">M</span> <span onmouseout="hideTip(event, 'fs2', 52)" onmouseover="showTip(event, 'fs2', 52)" class="i">a</span> <span onmouseout="hideTip(event, 'fs6', 53)" onmouseover="showTip(event, 'fs6', 53)" class="i">b</span> <span onmouseout="hideTip(event, 'fs30', 54)" onmouseover="showTip(event, 'fs30', 54)" class="i">m</span> <span class="o">=</span>             
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 55)" onmouseover="showTip(event, 'fs17', 55)" class="i">S</span> <span class="o">=</span> <span class="s">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 56)" onmouseover="showTip(event, 'fs31', 56)" class="f">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 57)" onmouseover="showTip(event, 'fs12', 57)" class="f">p</span> <span onmouseout="hideTip(event, 'fs2', 58)" onmouseover="showTip(event, 'fs2', 58)" class="i">a</span> <span onmouseout="hideTip(event, 'fs6', 59)" onmouseover="showTip(event, 'fs6', 59)" class="i">b</span> <span onmouseout="hideTip(event, 'fs30', 60)" onmouseover="showTip(event, 'fs30', 60)" class="i">m</span> <span onmouseout="hideTip(event, 'fs17', 61)" onmouseover="showTip(event, 'fs17', 61)" class="i">S</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 62)" onmouseover="showTip(event, 'fs32', 62)" class="i">i</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 63)" onmouseover="showTip(event, 'fs1', 63)" class="f">findModInverse</span> <span onmouseout="hideTip(event, 'fs2', 64)" onmouseover="showTip(event, 'fs2', 64)" class="i">a</span> <span onmouseout="hideTip(event, 'fs17', 65)" onmouseover="showTip(event, 'fs17', 65)" class="i">S</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 66)" onmouseover="showTip(event, 'fs25', 66)" class="i">Length</span>
  
  <span class="k">match</span> <span onmouseout="hideTip(event, 'fs29', 67)" onmouseover="showTip(event, 'fs29', 67)" class="i">M</span> <span class="k">with</span>
  | <span class="s">&quot;encrypt&quot;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 68)" onmouseover="showTip(event, 'fs31', 68)" class="f">x</span> ( <span class="o">*</span> ) <span onmouseout="hideTip(event, 'fs2', 69)" onmouseover="showTip(event, 'fs2', 69)" class="i">a</span> ( <span class="o">+</span> ) <span onmouseout="hideTip(event, 'fs6', 70)" onmouseover="showTip(event, 'fs6', 70)" class="i">b</span>
  | <span class="s">&quot;decrypt&quot;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 71)" onmouseover="showTip(event, 'fs31', 71)" class="f">x</span> ( <span class="o">-</span> ) <span onmouseout="hideTip(event, 'fs6', 72)" onmouseover="showTip(event, 'fs6', 72)" class="i">b</span> ( <span class="o">*</span> ) <span onmouseout="hideTip(event, 'fs32', 73)" onmouseover="showTip(event, 'fs32', 73)" class="i">i</span>
  | _       <span class="k">-&gt;</span> <span class="s">&quot;Invalid Mode, modes = encrypt/decrypt&quot;</span>

<span class="c">(* constraints: </span>
<span class="c">  a &lt;&gt; 1, </span>
<span class="c">  b &lt;&gt; 0, </span>
<span class="c">  gcd a 26 = 1,   </span>
<span class="c">  m is uppercase or S is lowercase.</span>
<span class="c">*)</span>

<span onmouseout="hideTip(event, 'fs28', 74)" onmouseover="showTip(event, 'fs28', 74)" class="f">F</span> <span class="s">&quot;encrypt&quot;</span> <span class="n">1</span> <span class="n">2</span> <span class="s">&quot;TEST&quot;</span> <span class="o">=</span> <span class="s">&quot;VGUV&quot;</span>
<span onmouseout="hideTip(event, 'fs28', 75)" onmouseover="showTip(event, 'fs28', 75)" class="f">F</span> <span class="s">&quot;decrypt&quot;</span> <span class="n">1</span> <span class="n">2</span> (<span onmouseout="hideTip(event, 'fs28', 76)" onmouseover="showTip(event, 'fs28', 76)" class="f">F</span> <span class="s">&quot;encrypt&quot;</span> <span class="n">1</span> <span class="n">2</span> <span class="s">&quot;TEST&quot;</span>) <span class="o">=</span> <span class="s">&quot;TEST&quot;</span>
 
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val findModInverse : a:int -&gt; m:int -&gt; int<br /><br />Full name: Script.findModInverse</div>
<div class="tip" id="fs2">val a : int</div>
<div class="tip" id="fs3">val m : int</div>
<div class="tip" id="fs4">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs5">val filter : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.filter</div>
<div class="tip" id="fs6">val b : int</div>
<div class="tip" id="fs7">val head : source:seq&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.Seq.head</div>
<div class="tip" id="fs8">val flip : f:(&#39;a -&gt; &#39;b -&gt; &#39;c) -&gt; a:&#39;b -&gt; b:&#39;a -&gt; &#39;c<br /><br />Full name: Script.flip</div>
<div class="tip" id="fs9">val f : (&#39;a -&gt; &#39;b -&gt; &#39;c)</div>
<div class="tip" id="fs10">val a : &#39;b</div>
<div class="tip" id="fs11">val b : &#39;a</div>
<div class="tip" id="fs12">val p : a:&#39;a -&gt; b:&#39;b -&gt; message:string -&gt; S:string -&gt; f:(int -&gt; &#39;c -&gt; &#39;d) -&gt; d:&#39;c -&gt; f&#39;:(&#39;e -&gt; &#39;d -&gt; int) -&gt; d&#39;:&#39;e -&gt; string<br /><br />Full name: Script.p</div>
<div class="tip" id="fs13">val a : &#39;a</div>
<div class="tip" id="fs14">val b : &#39;b</div>
<div class="tip" id="fs15">val message : string</div>
<div class="tip" id="fs16">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs17">val S : string</div>
<div class="tip" id="fs18">val f : (int -&gt; &#39;c -&gt; &#39;d)</div>
<div class="tip" id="fs19">val d : &#39;c</div>
<div class="tip" id="fs20">val f&#39; : (&#39;e -&gt; &#39;d -&gt; int)</div>
<div class="tip" id="fs21">val d&#39; : &#39;e</div>
<div class="tip" id="fs22">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.map</div>
<div class="tip" id="fs23">val c : char</div>
<div class="tip" id="fs24">System.String.IndexOf(value: string) : int<br />System.String.IndexOf(value: char) : int<br />System.String.IndexOf(value: string, comparisonType: System.StringComparison) : int<br />System.String.IndexOf(value: string, startIndex: int) : int<br />System.String.IndexOf(value: char, startIndex: int) : int<br />System.String.IndexOf(value: string, startIndex: int, comparisonType: System.StringComparison) : int<br />System.String.IndexOf(value: string, startIndex: int, count: int) : int<br />System.String.IndexOf(value: char, startIndex: int, count: int) : int<br />System.String.IndexOf(value: string, startIndex: int, count: int, comparisonType: System.StringComparison) : int</div>
<div class="tip" id="fs25">property System.String.Length: int</div>
<div class="tip" id="fs26">module String<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs27">val concat : sep:string -&gt; strings:seq&lt;string&gt; -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.String.concat</div>
<div class="tip" id="fs28">val F : M:string -&gt; a:int -&gt; b:int -&gt; m:string -&gt; string<br /><br />Full name: Script.F</div>
<div class="tip" id="fs29">val M : string</div>
<div class="tip" id="fs30">val m : string</div>
<div class="tip" id="fs31">val x : ((int -&gt; int -&gt; int) -&gt; int -&gt; (int -&gt; int -&gt; int) -&gt; int -&gt; string)</div>
<div class="tip" id="fs32">val i : int</div>

