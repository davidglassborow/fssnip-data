<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span class="t">RecordTypes</span> <span class="o">=</span>

    <span class="c">/// This example shows how to define a new record type.</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">ContactCard</span> <span class="o">=</span> { <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Name</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">string</span>; <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">Phone</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="t">string</span>; <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">Verified</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">bool</span> }

    <span class="c">/// This example shows how to instantiate a record type.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">contact1</span> <span class="o">=</span>
        { <span class="i">Name</span> <span class="o">=</span> <span class="s">&quot;Alf&quot;</span>
          <span class="i">Phone</span> <span class="o">=</span> <span class="s">&quot;(206) 555-0157&quot;</span>
          <span class="i">Verified</span> <span class="o">=</span> <span class="k">false</span> }

    <span class="c">/// You can also do this on the same line with &#39;;&#39; separators.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">contactOnSameLine</span> <span class="o">=</span>
        { <span class="i">Name</span> <span class="o">=</span> <span class="s">&quot;Alf&quot;</span>
          <span class="i">Phone</span> <span class="o">=</span> <span class="s">&quot;(206) 555-0157&quot;</span>
          <span class="i">Verified</span> <span class="o">=</span> <span class="k">false</span> }

    <span class="c">/// This example shows how to use &quot;copy-and-update&quot; on record values. It creates</span>
    <span class="c">/// a new record value that is a copy of contact1, but has different values for</span>
    <span class="c">/// the &#39;Phone&#39; and &#39;Verified&#39; fields.</span>
    <span class="c">///</span>
    <span class="c">/// To learn more, see: https://docs.microsoft.com/dotnet/fsharp/language-reference/copy-and-update-record-expressions</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">contact2</span> <span class="o">=</span>
        { <span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="i">contact1</span> <span class="k">with</span>
              <span class="i">Phone</span> <span class="o">=</span> <span class="s">&quot;(206) 555-0112&quot;</span>
              <span class="i">Verified</span> <span class="o">=</span> <span class="k">true</span> }

    <span class="c">/// This example shows how to write a function that processes a record value.</span>
    <span class="c">/// It converts a &#39;ContactCard&#39; object to a string.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="f">showContactCard</span> (<span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="i">c</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs1', 14)" onmouseover="showTip(event, 'fs1', 14)" class="t">ContactCard</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="i">c</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 16)" onmouseover="showTip(event, 'fs2', 16)" class="i">Name</span> <span class="o">+</span> <span class="s">&quot; Phone: &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">c</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 18)" onmouseover="showTip(event, 'fs4', 18)" class="i">Phone</span> <span class="o">+</span> (<span class="k">if</span> <span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="f">not</span> <span onmouseout="hideTip(event, 'fs11', 20)" onmouseover="showTip(event, 'fs11', 20)" class="i">c</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 21)" onmouseover="showTip(event, 'fs5', 21)" class="i">Verified</span> <span class="k">then</span> <span class="s">&quot; (unverified)&quot;</span> <span class="k">else</span> <span class="s">&quot;&quot;</span>)

    <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="f">printfn</span> <span class="s">&quot;Alf&#39;s Contact Card: </span><span class="pf">%s</span><span class="s">&quot;</span> (<span onmouseout="hideTip(event, 'fs10', 23)" onmouseover="showTip(event, 'fs10', 23)" class="f">showContactCard</span> <span onmouseout="hideTip(event, 'fs7', 24)" onmouseover="showTip(event, 'fs7', 24)" class="i">contact1</span>)

    <span class="c">/// This is an example of a Record with a member.</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs14', 25)" onmouseover="showTip(event, 'fs14', 25)" class="t">ContactCardAlternate</span> <span class="o">=</span>
        { <span onmouseout="hideTip(event, 'fs15', 26)" onmouseover="showTip(event, 'fs15', 26)" class="i">Name</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 27)" onmouseover="showTip(event, 'fs3', 27)" class="t">string</span>
          <span onmouseout="hideTip(event, 'fs16', 28)" onmouseover="showTip(event, 'fs16', 28)" class="i">Phone</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 29)" onmouseover="showTip(event, 'fs3', 29)" class="t">string</span>
          <span onmouseout="hideTip(event, 'fs17', 30)" onmouseover="showTip(event, 'fs17', 30)" class="i">Address</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs3', 31)" onmouseover="showTip(event, 'fs3', 31)" class="t">string</span>
          <span onmouseout="hideTip(event, 'fs18', 32)" onmouseover="showTip(event, 'fs18', 32)" class="i">Verified</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fs6', 33)" onmouseover="showTip(event, 'fs6', 33)" class="t">bool</span> }

        <span class="c">/// Members can implement object-oriented members.</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs19', 34)" onmouseover="showTip(event, 'fs19', 34)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 35)" onmouseover="showTip(event, 'fs20', 35)" class="i">PrintedContactCard</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs19', 36)" onmouseover="showTip(event, 'fs19', 36)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 37)" onmouseover="showTip(event, 'fs15', 37)" class="i">Name</span> <span class="o">+</span> <span class="s">&quot; Phone: &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs19', 38)" onmouseover="showTip(event, 'fs19', 38)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 39)" onmouseover="showTip(event, 'fs16', 39)" class="i">Phone</span> <span class="o">+</span> (<span class="k">if</span> <span onmouseout="hideTip(event, 'fs12', 40)" onmouseover="showTip(event, 'fs12', 40)" class="f">not</span> <span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 42)" onmouseover="showTip(event, 'fs18', 42)" class="i">Verified</span> <span class="k">then</span> <span class="s">&quot; (unverified)&quot;</span> <span class="k">else</span> <span class="s">&quot;&quot;</span>)
            <span class="o">+</span> <span onmouseout="hideTip(event, 'fs19', 43)" onmouseover="showTip(event, 'fs19', 43)" class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 44)" onmouseover="showTip(event, 'fs17', 44)" class="i">Address</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 45)" onmouseover="showTip(event, 'fs21', 45)" class="i">contactAlternate</span> <span class="o">=</span>
        { <span class="i">Name</span> <span class="o">=</span> <span class="s">&quot;Alf&quot;</span>
          <span class="i">Phone</span> <span class="o">=</span> <span class="s">&quot;(206) 555-0157&quot;</span>
          <span class="i">Verified</span> <span class="o">=</span> <span class="k">false</span>
          <span class="i">Address</span> <span class="o">=</span> <span class="s">&quot;111 Alf Street&quot;</span> }

    <span class="c">// Members are accessed via the &#39;.&#39; operator on an instantiated type.</span>
    <span onmouseout="hideTip(event, 'fs13', 46)" onmouseover="showTip(event, 'fs13', 46)" class="f">printfn</span> <span class="s">&quot;Alf&#39;s alternate contact card is </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs21', 47)" onmouseover="showTip(event, 'fs21', 47)" class="i">contactAlternate</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 48)" onmouseover="showTip(event, 'fs22', 48)" class="i">PrintedContactCard</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">type ContactCard =<br />&#160;&#160;{Name: string;<br />&#160;&#160;&#160;Phone: string;<br />&#160;&#160;&#160;Verified: bool;}<br /><br />Full name: Script.RecordTypes.ContactCard<br /><em><br /><br />&#160;This example shows how to define a new record type.</em></div>
<div class="tip" id="fs2">ContactCard.Name: string</div>
<div class="tip" id="fs3">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs4">ContactCard.Phone: string</div>
<div class="tip" id="fs5">ContactCard.Verified: bool</div>
<div class="tip" id="fs6">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs7">val contact1 : ContactCard<br /><br />Full name: Script.RecordTypes.contact1<br /><em><br /><br />&#160;This example shows how to instantiate a record type.</em></div>
<div class="tip" id="fs8">val contactOnSameLine : ContactCard<br /><br />Full name: Script.RecordTypes.contactOnSameLine<br /><em><br /><br />&#160;You can also do this on the same line with &#39;;&#39; separators.</em></div>
<div class="tip" id="fs9">val contact2 : ContactCard<br /><br />Full name: Script.RecordTypes.contact2<br /><em><br /><br />&#160;This example shows how to use &quot;copy-and-update&quot; on record values. It creates<br />&#160;a new record value that is a copy of contact1, but has different values for<br />&#160;the &#39;Phone&#39; and &#39;Verified&#39; fields.<br /><br />&#160;To learn more, see: https://docs.microsoft.com/dotnet/fsharp/language-reference/copy-and-update-record-expressions</em></div>
<div class="tip" id="fs10">val showContactCard : c:ContactCard -&gt; string<br /><br />Full name: Script.RecordTypes.showContactCard<br /><em><br /><br />&#160;This example shows how to write a function that processes a record value.<br />&#160;It converts a &#39;ContactCard&#39; object to a string.</em></div>
<div class="tip" id="fs11">val c : ContactCard</div>
<div class="tip" id="fs12">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs13">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>
<div class="tip" id="fs14">type ContactCardAlternate =<br />&#160;&#160;{Name: string;<br />&#160;&#160;&#160;Phone: string;<br />&#160;&#160;&#160;Address: string;<br />&#160;&#160;&#160;Verified: bool;}<br />&#160;&#160;member PrintedContactCard : string<br /><br />Full name: Script.RecordTypes.ContactCardAlternate<br /><em><br /><br />&#160;This is an example of a Record with a member.</em></div>
<div class="tip" id="fs15">ContactCardAlternate.Name: string</div>
<div class="tip" id="fs16">ContactCardAlternate.Phone: string</div>
<div class="tip" id="fs17">ContactCardAlternate.Address: string</div>
<div class="tip" id="fs18">ContactCardAlternate.Verified: bool</div>
<div class="tip" id="fs19">val this : ContactCardAlternate</div>
<div class="tip" id="fs20">member ContactCardAlternate.PrintedContactCard : string<br /><br />Full name: Script.RecordTypes.ContactCardAlternate.PrintedContactCard<br /><em><br /><br />&#160;Members can implement object-oriented members.</em></div>
<div class="tip" id="fs21">val contactAlternate : ContactCardAlternate<br /><br />Full name: Script.RecordTypes.contactAlternate</div>
<div class="tip" id="fs22">property ContactCardAlternate.PrintedContactCard: string<br /><em><br /><br />&#160;Members can implement object-oriented members.</em></div>

