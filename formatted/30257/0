<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// Using FSharp.Data</span>
<span class="k">type</span> <span class="t">WalletData</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">Data</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">JsonProvider</span><span class="o">&lt;</span>
        <span class="s">&quot;&quot;&quot;{&quot;unspent_outputs&quot;:[{&quot;value&quot;:9000000000},{&quot;value&quot;:10}]}&quot;&quot;&quot;</span><span class="o">&gt;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="f">getBalance</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">publicKey</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">balance</span> <span class="o">=</span> 
        <span class="k">try</span>
            <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="t">WalletData</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="f">Load</span>(
                <span class="s">&quot;https://blockchain.info/unspent?active=&quot;</span> <span class="o">+</span> 
                <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="i">publicKey</span>)<span class="o">.</span><span class="i">UnspentOutputs</span> 
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="f">sumBy</span>(<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="i">t</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="i">t</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="i">Value</span>)
        <span class="k">with</span> <span class="c">// Can response e.g. &quot;No free outputs to spend&quot;</span>
        | <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 16)" onmouseover="showTip(event, 'fs14', 16)" class="i">Net</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 17)" onmouseover="showTip(event, 'fs15', 17)" class="t">WebException</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs16', 18)" onmouseover="showTip(event, 'fs16', 18)" class="i">ex</span> <span class="k">-&gt;</span> 
            <span class="k">use</span> <span onmouseout="hideTip(event, 'fs17', 19)" onmouseover="showTip(event, 'fs17', 19)" class="i">stream</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 20)" onmouseover="showTip(event, 'fs16', 20)" class="i">ex</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 21)" onmouseover="showTip(event, 'fs18', 21)" class="i">Response</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 22)" onmouseover="showTip(event, 'fs19', 22)" class="f">GetResponseStream</span>()
            <span class="k">use</span> <span onmouseout="hideTip(event, 'fs20', 23)" onmouseover="showTip(event, 'fs20', 23)" class="i">reader</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs13', 24)" onmouseover="showTip(event, 'fs13', 24)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 25)" onmouseover="showTip(event, 'fs21', 25)" class="i">IO</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 26)" onmouseover="showTip(event, 'fs22', 26)" class="t">StreamReader</span>(<span onmouseout="hideTip(event, 'fs17', 27)" onmouseover="showTip(event, 'fs17', 27)" class="i">stream</span>)
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 28)" onmouseover="showTip(event, 'fs23', 28)" class="i">err</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 29)" onmouseover="showTip(event, 'fs20', 29)" class="i">reader</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 30)" onmouseover="showTip(event, 'fs24', 30)" class="f">ReadToEnd</span>()
            <span onmouseout="hideTip(event, 'fs13', 31)" onmouseover="showTip(event, 'fs13', 31)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 32)" onmouseover="showTip(event, 'fs25', 32)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 33)" onmouseover="showTip(event, 'fs26', 33)" class="f">WriteLine</span> <span onmouseout="hideTip(event, 'fs23', 34)" onmouseover="showTip(event, 'fs23', 34)" class="i">err</span>
            <span class="n">0L</span>

    <span class="c">//``balance in BTC``:</span>
    (<span onmouseout="hideTip(event, 'fs13', 35)" onmouseover="showTip(event, 'fs13', 35)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 36)" onmouseover="showTip(event, 'fs27', 36)" class="t">Convert</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 37)" onmouseover="showTip(event, 'fs28', 37)" class="f">ToDecimal</span> <span onmouseout="hideTip(event, 'fs6', 38)" onmouseover="showTip(event, 'fs6', 38)" class="i">balance</span>) <span class="o">/</span> <span class="n">100000000m</span>
    
<span class="c">//Fetch with public Bitcoin address:</span>
<span class="c">//getBalance &quot;19fMhMwxyX6zK9ajPijwzRX7wTcjyunXuz&quot;</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />namespace FSharp<br /><br />--------------------<br />namespace Microsoft.FSharp</div>
<div class="tip" id="fs2">Multiple items<br />namespace FSharp.Data<br /><br />--------------------<br />namespace Microsoft.FSharp.Data</div>
<div class="tip" id="fs3">type JsonProvider<br /><br />Full name: FSharp.Data.JsonProvider<br /><em><br /><br />&lt;summary&gt;Typed representation of a JSON document.&lt;/summary&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;Sample&#39;&gt;Location of a JSON sample file or a string containing a sample JSON document.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;SampleIsList&#39;&gt;If true, sample should be a list of individual samples for the inference.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;RootName&#39;&gt;The name to be used to the root type. Defaults to `Root`.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;Culture&#39;&gt;The culture used for parsing numbers and dates. Defaults to the invariant culture.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;Encoding&#39;&gt;The encoding used to read the sample. You can specify either the character set name or the codepage number. Defaults to UTF8 for files, and to ISO-8859-1 the for HTTP requests, unless `charset` is specified in the `Content-Type` response header.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;ResolutionFolder&#39;&gt;A directory that is used when resolving relative file references (at design time and in hosted execution).&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;EmbeddedResource&#39;&gt;When specified, the type provider first attempts to load the sample from the specified resource <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(e.g. &#39;MyCompany.MyAssembly, resource_name.json&#39;). This is useful when exposing types generated by the type provider.&lt;/param&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;param name=&#39;InferTypesFromValues&#39;&gt;If true, turns on additional type inference from values. <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(e.g. type inference infers string values such as &quot;123&quot; as ints and values constrained to 0 and 1 as booleans.)&lt;/param&gt;</em></div>
<div class="tip" id="fs4">val getBalance : publicKey:string -&gt; decimal<br /><br />Full name: Script.getBalance</div>
<div class="tip" id="fs5">val publicKey : string</div>
<div class="tip" id="fs6">val balance : int64</div>
<div class="tip" id="fs7">type WalletData = FSharp.Data.JsonProvider&lt;...&gt;<br /><br />Full name: Script.WalletData</div>
<div class="tip" id="fs8">FSharp.Data.JsonProvider&lt;...&gt;.Load(uri: string) : FSharp.Data.JsonProvider&lt;...&gt;.Root<br /><em><br /><br />Loads JSON from the specified uri</em><br />FSharp.Data.JsonProvider&lt;...&gt;.Load(reader: System.IO.TextReader) : FSharp.Data.JsonProvider&lt;...&gt;.Root<br /><em><br /><br />Loads JSON from the specified reader</em><br />FSharp.Data.JsonProvider&lt;...&gt;.Load(stream: System.IO.Stream) : FSharp.Data.JsonProvider&lt;...&gt;.Root<br /><em><br /><br />Loads JSON from the specified stream</em></div>
<div class="tip" id="fs9">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs10">val sumBy : projection:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U (requires member ( + ) and member get_Zero)<br /><br />Full name: Microsoft.FSharp.Collections.Array.sumBy</div>
<div class="tip" id="fs11">val t : FSharp.Data.JsonProvider&lt;...&gt;.UnspentOutput</div>
<div class="tip" id="fs12">property FSharp.Data.JsonProvider&lt;...&gt;.UnspentOutput.Value: int64</div>
<div class="tip" id="fs13">namespace System</div>
<div class="tip" id="fs14">namespace System.Net</div>
<div class="tip" id="fs15">Multiple items<br />type WebException =<br />&#160;&#160;inherit InvalidOperationException<br />&#160;&#160;new : unit -&gt; WebException + 4 overloads<br />&#160;&#160;member GetObjectData : serializationInfo:SerializationInfo * streamingContext:StreamingContext -&gt; unit<br />&#160;&#160;member Response : WebResponse<br />&#160;&#160;member Status : WebExceptionStatus<br /><br />Full name: System.Net.WebException<br /><br />--------------------<br />System.Net.WebException() : unit<br />System.Net.WebException(message: string) : unit<br />System.Net.WebException(message: string, innerException: exn) : unit<br />System.Net.WebException(message: string, status: System.Net.WebExceptionStatus) : unit<br />System.Net.WebException(message: string, innerException: exn, status: System.Net.WebExceptionStatus, response: System.Net.WebResponse) : unit</div>
<div class="tip" id="fs16">val ex : System.Net.WebException</div>
<div class="tip" id="fs17">val stream : System.IO.Stream</div>
<div class="tip" id="fs18">property System.Net.WebException.Response: System.Net.WebResponse</div>
<div class="tip" id="fs19">System.Net.WebResponse.GetResponseStream() : System.IO.Stream</div>
<div class="tip" id="fs20">val reader : System.IO.StreamReader</div>
<div class="tip" id="fs21">namespace System.IO</div>
<div class="tip" id="fs22">Multiple items<br />type StreamReader =<br />&#160;&#160;inherit TextReader<br />&#160;&#160;new : stream:Stream -&gt; StreamReader + 9 overloads<br />&#160;&#160;member BaseStream : Stream<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member CurrentEncoding : Encoding<br />&#160;&#160;member DiscardBufferedData : unit -&gt; unit<br />&#160;&#160;member EndOfStream : bool<br />&#160;&#160;member Peek : unit -&gt; int<br />&#160;&#160;member Read : unit -&gt; int + 1 overload<br />&#160;&#160;member ReadLine : unit -&gt; string<br />&#160;&#160;member ReadToEnd : unit -&gt; string<br />&#160;&#160;...<br /><br />Full name: System.IO.StreamReader<br /><br />--------------------<br />System.IO.StreamReader(stream: System.IO.Stream) : unit<br />System.IO.StreamReader(path: string) : unit<br />System.IO.StreamReader(stream: System.IO.Stream, detectEncodingFromByteOrderMarks: bool) : unit<br />System.IO.StreamReader(stream: System.IO.Stream, encoding: System.Text.Encoding) : unit<br />System.IO.StreamReader(path: string, detectEncodingFromByteOrderMarks: bool) : unit<br />System.IO.StreamReader(path: string, encoding: System.Text.Encoding) : unit<br />System.IO.StreamReader(stream: System.IO.Stream, encoding: System.Text.Encoding, detectEncodingFromByteOrderMarks: bool) : unit<br />System.IO.StreamReader(path: string, encoding: System.Text.Encoding, detectEncodingFromByteOrderMarks: bool) : unit<br />System.IO.StreamReader(stream: System.IO.Stream, encoding: System.Text.Encoding, detectEncodingFromByteOrderMarks: bool, bufferSize: int) : unit<br />System.IO.StreamReader(path: string, encoding: System.Text.Encoding, detectEncodingFromByteOrderMarks: bool, bufferSize: int) : unit</div>
<div class="tip" id="fs23">val err : string</div>
<div class="tip" id="fs24">System.IO.StreamReader.ReadToEnd() : string</div>
<div class="tip" id="fs25">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs26">System.Console.WriteLine() : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Console.WriteLine(value: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Console.WriteLine(value: obj) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Console.WriteLine(value: uint64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Console.WriteLine(value: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Console.WriteLine(value: uint32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Console.WriteLine(value: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Console.WriteLine(value: float32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Console.WriteLine(value: float) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Console.WriteLine(value: decimal) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs27">type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 3 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...<br /><br />Full name: System.Convert</div>
<div class="tip" id="fs28">System.Convert.ToDecimal(value: System.DateTime) : decimal<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDecimal(value: bool) : decimal<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDecimal(value: decimal) : decimal<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDecimal(value: string) : decimal<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDecimal(value: float) : decimal<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDecimal(value: float32) : decimal<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDecimal(value: uint64) : decimal<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDecimal(value: int64) : decimal<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDecimal(value: uint32) : decimal<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />System.Convert.ToDecimal(value: int) : decimal<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>

