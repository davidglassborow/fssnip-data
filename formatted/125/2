<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">// Active pattern that can be used to assign </span>
<span class="c">// values to symbols in a pattern</span>
<span class="k">let</span> (|<span class="p">Let</span>|) <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">value</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">input</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">value</span>, <span onmouseout="hideTip(event, 'fs2', 4)" onmouseover="showTip(event, 'fs2', 4)" class="i">input</span>)

<span class="c">// This is useful when writing complex pattern matching</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">flag</span>, <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">num</span> <span class="o">=</span> <span id="fst5" onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7, document.getElementById('fst5'))" class="omitted">(...)</span>
<span class="k">match</span> <span onmouseout="hideTip(event, 'fs3', 8)" onmouseover="showTip(event, 'fs3', 8)" class="i">flag</span>, <span onmouseout="hideTip(event, 'fs4', 9)" onmouseover="showTip(event, 'fs4', 9)" class="i">num</span> <span class="k">with</span>
| <span class="k">true</span>, (<span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="p">Let</span> <span class="s">&quot;one&quot;</span> (<span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="i">str</span>, <span class="n">1</span>) | <span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="p">Let</span> <span class="s">&quot;two&quot;</span> (<span onmouseout="hideTip(event, 'fs7', 13)" onmouseover="showTip(event, 'fs7', 13)" class="i">str</span>, <span class="n">2</span>) | <span onmouseout="hideTip(event, 'fs6', 14)" onmouseover="showTip(event, 'fs6', 14)" class="p">Let</span> <span class="s">&quot;three&quot;</span> (<span onmouseout="hideTip(event, 'fs7', 15)" onmouseover="showTip(event, 'fs7', 15)" class="i">str</span>, <span class="n">3</span>)) <span class="k">-&gt;</span>
    <span class="c">// Called when number is between 1 and 3 and assigns textual </span>
    <span class="c">// representation of the number to &#39;str&#39; (so that we can handle all</span>
    <span class="c">// cases with just a single match clause)</span>
    <span onmouseout="hideTip(event, 'fs8', 16)" onmouseover="showTip(event, 'fs8', 16)" class="f">printfn</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs7', 17)" onmouseover="showTip(event, 'fs7', 17)" class="i">str</span>
| _ <span class="k">-&gt;</span> 
    <span onmouseout="hideTip(event, 'fs8', 18)" onmouseover="showTip(event, 'fs8', 18)" class="f">printfn</span> <span class="s">&quot;Something else&quot;</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val value : &#39;a</div>
<div class="tip" id="fs2">val input : &#39;b</div>
<div class="tip" id="fs3">val flag : bool<br /><br />Full name: Script.flag</div>
<div class="tip" id="fs4">val num : int<br /><br />Full name: Script.num</div>
<div class="tip" id="fs5">true, 0</div>
<div class="tip" id="fs6">active recognizer Let: &#39;a -&gt; &#39;b -&gt; &#39;a * &#39;b<br /><br />Full name: Script.( |Let| )</div>
<div class="tip" id="fs7">val str : string</div>
<div class="tip" id="fs8">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.printfn</div>

