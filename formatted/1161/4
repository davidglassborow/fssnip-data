<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
<span class="l">154: </span>
<span class="l">155: </span>
<span class="l">156: </span>
<span class="l">157: </span>
<span class="l">158: </span>
<span class="l">159: </span>
<span class="l">160: </span>
<span class="l">161: </span>
<span class="l">162: </span>
<span class="l">163: </span>
<span class="l">164: </span>
<span class="l">165: </span>
<span class="l">166: </span>
<span class="l">167: </span>
<span class="l">168: </span>
<span class="l">169: </span>
<span class="l">170: </span>
<span class="l">171: </span>
<span class="l">172: </span>
<span class="l">173: </span>
<span class="l">174: </span>
<span class="l">175: </span>
<span class="l">176: </span>
<span class="l">177: </span>
<span class="l">178: </span>
<span class="l">179: </span>
<span class="l">180: </span>
<span class="l">181: </span>
<span class="l">182: </span>
<span class="l">183: </span>
<span class="l">184: </span>
<span class="l">185: </span>
<span class="l">186: </span>
<span class="l">187: </span>
<span class="l">188: </span>
<span class="l">189: </span>
<span class="l">190: </span>
<span class="l">191: </span>
<span class="l">192: </span>
<span class="l">193: </span>
<span class="l">194: </span>
<span class="l">195: </span>
<span class="l">196: </span>
<span class="l">197: </span>
<span class="l">198: </span>
<span class="l">199: </span>
<span class="l">200: </span>
<span class="l">201: </span>
<span class="l">202: </span>
<span class="l">203: </span>
<span class="l">204: </span>
<span class="l">205: </span>
<span class="l">206: </span>
<span class="l">207: </span>
<span class="l">208: </span>
<span class="l">209: </span>
<span class="l">210: </span>
<span class="l">211: </span>
<span class="l">212: </span>
<span class="l">213: </span>
<span class="l">214: </span>
<span class="l">215: </span>
<span class="l">216: </span>
<span class="l">217: </span>
<span class="l">218: </span>
<span class="l">219: </span>
<span class="l">220: </span>
<span class="l">221: </span>
<span class="l">222: </span>
<span class="l">223: </span>
<span class="l">224: </span>
<span class="l">225: </span>
<span class="l">226: </span>
<span class="l">227: </span>
<span class="l">228: </span>
<span class="l">229: </span>
<span class="l">230: </span>
<span class="l">231: </span>
<span class="l">232: </span>
<span class="l">233: </span>
<span class="l">234: </span>
<span class="l">235: </span>
<span class="l">236: </span>
<span class="l">237: </span>
<span class="l">238: </span>
<span class="l">239: </span>
<span class="l">240: </span>
<span class="l">241: </span>
<span class="l">242: </span>
<span class="l">243: </span>
<span class="l">244: </span>
<span class="l">245: </span>
<span class="l">246: </span>
<span class="l">247: </span>
<span class="l">248: </span>
<span class="l">249: </span>
<span class="l">250: </span>
<span class="l">251: </span>
<span class="l">252: </span>
<span class="l">253: </span>
<span class="l">254: </span>
<span class="l">255: </span>
<span class="l">256: </span>
<span class="l">257: </span>
<span class="l">258: </span>
<span class="l">259: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">LanguageCombinator</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">FParsec</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">System</span>

<span class="k">exception</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">Error</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">string</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="t">Op</span> <span class="o">=</span> 
    | <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="p">Plus</span>
    | <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="p">Minus</span>
    | <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="p">GreaterThan</span>
    | <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="p">LessThan</span>
    | <span onmouseout="hideTip(event, 'fs11', 11)" onmouseover="showTip(event, 'fs11', 11)" class="p">Mult</span>
    | <span onmouseout="hideTip(event, 'fs12', 12)" onmouseover="showTip(event, 'fs12', 12)" class="p">Divide</span>
    | <span onmouseout="hideTip(event, 'fs13', 13)" onmouseover="showTip(event, 'fs13', 13)" class="p">Carrot</span>
       
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs14', 14)" onmouseover="showTip(event, 'fs14', 14)" class="t">Ast</span> <span class="o">=</span>     
    | <span onmouseout="hideTip(event, 'fs15', 15)" onmouseover="showTip(event, 'fs15', 15)" class="p">Statement</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs14', 16)" onmouseover="showTip(event, 'fs14', 16)" class="t">Ast</span>    
    | <span onmouseout="hideTip(event, 'fs16', 17)" onmouseover="showTip(event, 'fs16', 17)" class="p">Expression</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs17', 18)" onmouseover="showTip(event, 'fs17', 18)" class="t">Ex</span>    
    | <span onmouseout="hideTip(event, 'fs18', 19)" onmouseover="showTip(event, 'fs18', 19)" class="p">Function</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 20)" onmouseover="showTip(event, 'fs5', 20)" class="t">string</span> <span onmouseout="hideTip(event, 'fs19', 21)" onmouseover="showTip(event, 'fs19', 21)" class="t">option</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs20', 22)" onmouseover="showTip(event, 'fs20', 22)" class="t">Argument</span> <span onmouseout="hideTip(event, 'fs21', 23)" onmouseover="showTip(event, 'fs21', 23)" class="t">list</span> <span onmouseout="hideTip(event, 'fs19', 24)" onmouseover="showTip(event, 'fs19', 24)" class="t">option</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs14', 25)" onmouseover="showTip(event, 'fs14', 25)" class="t">Ast</span>
    | <span onmouseout="hideTip(event, 'fs22', 26)" onmouseover="showTip(event, 'fs22', 26)" class="p">Scope</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs14', 27)" onmouseover="showTip(event, 'fs14', 27)" class="t">Ast</span> <span onmouseout="hideTip(event, 'fs21', 28)" onmouseover="showTip(event, 'fs21', 28)" class="t">list</span> <span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="t">option</span>
    | <span onmouseout="hideTip(event, 'fs23', 30)" onmouseover="showTip(event, 'fs23', 30)" class="p">Class</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs17', 31)" onmouseover="showTip(event, 'fs17', 31)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs14', 32)" onmouseover="showTip(event, 'fs14', 32)" class="t">Ast</span>
    | <span onmouseout="hideTip(event, 'fs24', 33)" onmouseover="showTip(event, 'fs24', 33)" class="p">Conditional</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs17', 34)" onmouseover="showTip(event, 'fs17', 34)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs14', 35)" onmouseover="showTip(event, 'fs14', 35)" class="t">Ast</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs14', 36)" onmouseover="showTip(event, 'fs14', 36)" class="t">Ast</span> <span onmouseout="hideTip(event, 'fs19', 37)" onmouseover="showTip(event, 'fs19', 37)" class="t">option</span> 
    | <span onmouseout="hideTip(event, 'fs25', 38)" onmouseover="showTip(event, 'fs25', 38)" class="p">WhileLoop</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs17', 39)" onmouseover="showTip(event, 'fs17', 39)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs14', 40)" onmouseover="showTip(event, 'fs14', 40)" class="t">Ast</span>
    | <span onmouseout="hideTip(event, 'fs26', 41)" onmouseover="showTip(event, 'fs26', 41)" class="p">ForLoop</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs14', 42)" onmouseover="showTip(event, 'fs14', 42)" class="t">Ast</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs17', 43)" onmouseover="showTip(event, 'fs17', 43)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs17', 44)" onmouseover="showTip(event, 'fs17', 44)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs14', 45)" onmouseover="showTip(event, 'fs14', 45)" class="t">Ast</span>    
    | <span onmouseout="hideTip(event, 'fs27', 46)" onmouseover="showTip(event, 'fs27', 46)" class="p">Call</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 47)" onmouseover="showTip(event, 'fs5', 47)" class="t">string</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs20', 48)" onmouseover="showTip(event, 'fs20', 48)" class="t">Argument</span> <span onmouseout="hideTip(event, 'fs21', 49)" onmouseover="showTip(event, 'fs21', 49)" class="t">list</span> <span onmouseout="hideTip(event, 'fs19', 50)" onmouseover="showTip(event, 'fs19', 50)" class="t">option</span>
    | <span onmouseout="hideTip(event, 'fs28', 51)" onmouseover="showTip(event, 'fs28', 51)" class="p">Assign</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs17', 52)" onmouseover="showTip(event, 'fs17', 52)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs17', 53)" onmouseover="showTip(event, 'fs17', 53)" class="t">Ex</span>
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs17', 54)" onmouseover="showTip(event, 'fs17', 54)" class="t">Ex</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs29', 55)" onmouseover="showTip(event, 'fs29', 55)" class="p">Single</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs14', 56)" onmouseover="showTip(event, 'fs14', 56)" class="t">Ast</span>
    | <span onmouseout="hideTip(event, 'fs30', 57)" onmouseover="showTip(event, 'fs30', 57)" class="p">Full</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs17', 58)" onmouseover="showTip(event, 'fs17', 58)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs6', 59)" onmouseover="showTip(event, 'fs6', 59)" class="t">Op</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs17', 60)" onmouseover="showTip(event, 'fs17', 60)" class="t">Ex</span>
    | <span onmouseout="hideTip(event, 'fs31', 61)" onmouseover="showTip(event, 'fs31', 61)" class="p">Float</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs32', 62)" onmouseover="showTip(event, 'fs32', 62)" class="t">float</span>
    | <span onmouseout="hideTip(event, 'fs33', 63)" onmouseover="showTip(event, 'fs33', 63)" class="p">Int</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs34', 64)" onmouseover="showTip(event, 'fs34', 64)" class="t">int</span>
    | <span onmouseout="hideTip(event, 'fs35', 65)" onmouseover="showTip(event, 'fs35', 65)" class="p">Literal</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 66)" onmouseover="showTip(event, 'fs5', 66)" class="t">string</span>
    | <span onmouseout="hideTip(event, 'fs36', 67)" onmouseover="showTip(event, 'fs36', 67)" class="p">Variable</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 68)" onmouseover="showTip(event, 'fs5', 68)" class="t">string</span>
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs20', 69)" onmouseover="showTip(event, 'fs20', 69)" class="t">Argument</span> <span class="o">=</span> 
    | <span onmouseout="hideTip(event, 'fs37', 70)" onmouseover="showTip(event, 'fs37', 70)" class="p">Element</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs17', 71)" onmouseover="showTip(event, 'fs17', 71)" class="t">Ex</span>

<span class="c">(* Literals *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 72)" onmouseover="showTip(event, 'fs38', 72)" class="f">semicolon</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 73)" onmouseover="showTip(event, 'fs39', 73)" class="f">skipStringCI</span> <span class="s">&quot;;&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 74)" onmouseover="showTip(event, 'fs40', 74)" class="f">quote</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 75)" onmouseover="showTip(event, 'fs39', 75)" class="f">skipStringCI</span> <span class="s">&quot;</span><span class="e">\&quot;</span><span class="s">&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 76)" onmouseover="showTip(event, 'fs41', 76)" class="f">literal</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 77)" onmouseover="showTip(event, 'fs40', 77)" class="f">quote</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs42', 78)" onmouseover="showTip(event, 'fs42', 78)" class="f">manyCharsTill</span> <span onmouseout="hideTip(event, 'fs43', 79)" onmouseover="showTip(event, 'fs43', 79)" class="f">anyChar</span> <span onmouseout="hideTip(event, 'fs40', 80)" onmouseover="showTip(event, 'fs40', 80)" class="f">quote</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs35', 81)" onmouseover="showTip(event, 'fs35', 81)" class="p">Literal</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 82)" onmouseover="showTip(event, 'fs44', 82)" class="f">floatNum</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs45', 83)" onmouseover="showTip(event, 'fs45', 83)" class="f">pfloat</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs31', 84)" onmouseover="showTip(event, 'fs31', 84)" class="p">Float</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 85)" onmouseover="showTip(event, 'fs46', 85)" class="f">intNum</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs47', 86)" onmouseover="showTip(event, 'fs47', 86)" class="f">pint32</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs33', 87)" onmouseover="showTip(event, 'fs33', 87)" class="p">Int</span>

<span class="c">(* Variables *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 88)" onmouseover="showTip(event, 'fs48', 88)" class="f">variable</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 89)" onmouseover="showTip(event, 'fs49', 89)" class="f">many1Chars</span> (<span onmouseout="hideTip(event, 'fs50', 90)" onmouseover="showTip(event, 'fs50', 90)" class="f">satisfy</span> <span onmouseout="hideTip(event, 'fs51', 91)" onmouseover="showTip(event, 'fs51', 91)" class="f">isAsciiLetter</span>) <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs36', 92)" onmouseover="showTip(event, 'fs36', 92)" class="p">Variable</span>

<span class="c">(* Operators *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs52', 93)" onmouseover="showTip(event, 'fs52', 93)" class="f">plus</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 94)" onmouseover="showTip(event, 'fs53', 94)" class="f">pstring</span> <span class="s">&quot;+&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs7', 95)" onmouseover="showTip(event, 'fs7', 95)" class="p">Plus</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 96)" onmouseover="showTip(event, 'fs54', 96)" class="f">minus</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 97)" onmouseover="showTip(event, 'fs53', 97)" class="f">pstring</span> <span class="s">&quot;-&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs8', 98)" onmouseover="showTip(event, 'fs8', 98)" class="p">Minus</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs55', 99)" onmouseover="showTip(event, 'fs55', 99)" class="f">divide</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 100)" onmouseover="showTip(event, 'fs53', 100)" class="f">pstring</span> <span class="s">&quot;/&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs12', 101)" onmouseover="showTip(event, 'fs12', 101)" class="p">Divide</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 102)" onmouseover="showTip(event, 'fs56', 102)" class="f">mult</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 103)" onmouseover="showTip(event, 'fs53', 103)" class="f">pstring</span> <span class="s">&quot;*&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs11', 104)" onmouseover="showTip(event, 'fs11', 104)" class="p">Mult</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 105)" onmouseover="showTip(event, 'fs57', 105)" class="f">carrot</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 106)" onmouseover="showTip(event, 'fs53', 106)" class="f">pstring</span> <span class="s">&quot;^&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs13', 107)" onmouseover="showTip(event, 'fs13', 107)" class="p">Carrot</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 108)" onmouseover="showTip(event, 'fs58', 108)" class="f">gt</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 109)" onmouseover="showTip(event, 'fs53', 109)" class="f">pstring</span> <span class="s">&quot;&gt;&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs9', 110)" onmouseover="showTip(event, 'fs9', 110)" class="p">GreaterThan</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs59', 111)" onmouseover="showTip(event, 'fs59', 111)" class="f">lt</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 112)" onmouseover="showTip(event, 'fs53', 112)" class="f">pstring</span>  <span class="s">&quot;&lt;&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs10', 113)" onmouseover="showTip(event, 'fs10', 113)" class="p">LessThan</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 114)" onmouseover="showTip(event, 'fs60', 114)" class="f">op</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs61', 115)" onmouseover="showTip(event, 'fs61', 115)" class="f">spaces</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs62', 116)" onmouseover="showTip(event, 'fs62', 116)" class="f">choice</span>[<span onmouseout="hideTip(event, 'fs52', 117)" onmouseover="showTip(event, 'fs52', 117)" class="f">plus</span>;<span onmouseout="hideTip(event, 'fs54', 118)" onmouseover="showTip(event, 'fs54', 118)" class="f">minus</span>;<span onmouseout="hideTip(event, 'fs55', 119)" onmouseover="showTip(event, 'fs55', 119)" class="f">divide</span>;<span onmouseout="hideTip(event, 'fs56', 120)" onmouseover="showTip(event, 'fs56', 120)" class="f">mult</span>;<span onmouseout="hideTip(event, 'fs57', 121)" onmouseover="showTip(event, 'fs57', 121)" class="f">carrot</span>;<span onmouseout="hideTip(event, 'fs58', 122)" onmouseover="showTip(event, 'fs58', 122)" class="f">gt</span>;<span onmouseout="hideTip(event, 'fs59', 123)" onmouseover="showTip(event, 'fs59', 123)" class="f">lt</span>]

<span class="c">(* expressions *)</span>

<span class="c">// create a forward reference </span>
<span class="c">// the expr is what we&#39;ll use in our parser combinators</span>
<span class="c">// the exprImpl we&#39;ll populate with all the recursive options later</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 124)" onmouseover="showTip(event, 'fs63', 124)" class="f">expr</span>, <span onmouseout="hideTip(event, 'fs64', 125)" onmouseover="showTip(event, 'fs64', 125)" class="v">exprImpl</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs65', 126)" onmouseover="showTip(event, 'fs65', 126)" class="f">createParserForwardedToRef</span>()

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs66', 127)" onmouseover="showTip(event, 'fs66', 127)" class="f">expression1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs61', 128)" onmouseover="showTip(event, 'fs61', 128)" class="f">spaces</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">?</span> <span onmouseout="hideTip(event, 'fs62', 129)" onmouseover="showTip(event, 'fs62', 129)" class="f">choice</span>[<span onmouseout="hideTip(event, 'fs44', 130)" onmouseover="showTip(event, 'fs44', 130)" class="f">floatNum</span>;<span onmouseout="hideTip(event, 'fs46', 131)" onmouseover="showTip(event, 'fs46', 131)" class="f">intNum</span>;<span onmouseout="hideTip(event, 'fs41', 132)" onmouseover="showTip(event, 'fs41', 132)" class="f">literal</span>;<span onmouseout="hideTip(event, 'fs48', 133)" onmouseover="showTip(event, 'fs48', 133)" class="f">variable</span>] 

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs67', 134)" onmouseover="showTip(event, 'fs67', 134)" class="f">between</span> <span onmouseout="hideTip(event, 'fs68', 135)" onmouseover="showTip(event, 'fs68', 135)" class="i">a</span> <span onmouseout="hideTip(event, 'fs69', 136)" onmouseover="showTip(event, 'fs69', 136)" class="i">b</span> <span onmouseout="hideTip(event, 'fs70', 137)" onmouseover="showTip(event, 'fs70', 137)" class="f">p</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 138)" onmouseover="showTip(event, 'fs53', 138)" class="f">pstring</span> <span onmouseout="hideTip(event, 'fs68', 139)" onmouseover="showTip(event, 'fs68', 139)" class="i">a</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs70', 140)" onmouseover="showTip(event, 'fs70', 140)" class="f">p</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs53', 141)" onmouseover="showTip(event, 'fs53', 141)" class="f">pstring</span> <span onmouseout="hideTip(event, 'fs69', 142)" onmouseover="showTip(event, 'fs69', 142)" class="i">b</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs71', 143)" onmouseover="showTip(event, 'fs71', 143)" class="f">bracketExpression</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs63', 144)" onmouseover="showTip(event, 'fs63', 144)" class="f">expr</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs67', 145)" onmouseover="showTip(event, 'fs67', 145)" class="f">between</span> <span class="s">&quot;(&quot;</span> <span class="s">&quot;)&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs72', 146)" onmouseover="showTip(event, 'fs72', 146)" class="f">lhExpression</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs62', 147)" onmouseover="showTip(event, 'fs62', 147)" class="f">choice</span>[<span onmouseout="hideTip(event, 'fs66', 148)" onmouseover="showTip(event, 'fs66', 148)" class="f">expression1</span>; <span onmouseout="hideTip(event, 'fs71', 149)" onmouseover="showTip(event, 'fs71', 149)" class="f">bracketExpression</span>]

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs73', 150)" onmouseover="showTip(event, 'fs73', 150)" class="f">expressionOpration</span> <span class="o">=</span>  <span onmouseout="hideTip(event, 'fs72', 151)" onmouseover="showTip(event, 'fs72', 151)" class="f">lhExpression</span>                           <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=?</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs74', 152)" onmouseover="showTip(event, 'fs74', 152)" class="i">operandL</span> <span class="k">-&gt;</span>
                          <span onmouseout="hideTip(event, 'fs60', 153)" onmouseover="showTip(event, 'fs60', 153)" class="f">op</span>                                     <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=?</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs75', 154)" onmouseover="showTip(event, 'fs75', 154)" class="i">operator</span> <span class="k">-&gt;</span>
                          <span onmouseout="hideTip(event, 'fs62', 155)" onmouseover="showTip(event, 'fs62', 155)" class="f">choice</span>[<span onmouseout="hideTip(event, 'fs63', 156)" onmouseover="showTip(event, 'fs63', 156)" class="f">expr</span>;<span onmouseout="hideTip(event, 'fs71', 157)" onmouseover="showTip(event, 'fs71', 157)" class="f">bracketExpression</span>]         <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=?</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs76', 158)" onmouseover="showTip(event, 'fs76', 158)" class="i">operandR</span> <span class="k">-&gt;</span>
                          <span onmouseout="hideTip(event, 'fs77', 159)" onmouseover="showTip(event, 'fs77', 159)" class="f">preturn</span> (<span onmouseout="hideTip(event, 'fs74', 160)" onmouseover="showTip(event, 'fs74', 160)" class="i">operandL</span>, <span onmouseout="hideTip(event, 'fs75', 161)" onmouseover="showTip(event, 'fs75', 161)" class="i">operator</span>, <span onmouseout="hideTip(event, 'fs76', 162)" onmouseover="showTip(event, 'fs76', 162)" class="i">operandR</span>) <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs30', 163)" onmouseover="showTip(event, 'fs30', 163)" class="p">Full</span> 

<span class="k">do</span> <span onmouseout="hideTip(event, 'fs64', 164)" onmouseover="showTip(event, 'fs64', 164)" class="v">exprImpl</span> <span class="o">:=</span> <span onmouseout="hideTip(event, 'fs61', 165)" onmouseover="showTip(event, 'fs61', 165)" class="f">spaces</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs62', 166)" onmouseover="showTip(event, 'fs62', 166)" class="f">choice</span>[<span onmouseout="hideTip(event, 'fs78', 167)" onmouseover="showTip(event, 'fs78', 167)" class="f">attempt</span> <span onmouseout="hideTip(event, 'fs73', 168)" onmouseover="showTip(event, 'fs73', 168)" class="f">expressionOpration</span>;
                                 <span onmouseout="hideTip(event, 'fs78', 169)" onmouseover="showTip(event, 'fs78', 169)" class="f">attempt</span> <span onmouseout="hideTip(event, 'fs71', 170)" onmouseover="showTip(event, 'fs71', 170)" class="f">bracketExpression</span>; 
                                 <span onmouseout="hideTip(event, 'fs66', 171)" onmouseover="showTip(event, 'fs66', 171)" class="f">expression1</span>]

<span class="c">(* Scope *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs79', 172)" onmouseover="showTip(event, 'fs79', 172)" class="f">funcInners</span>, <span onmouseout="hideTip(event, 'fs80', 173)" onmouseover="showTip(event, 'fs80', 173)" class="v">funcInnersImpl</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs65', 174)" onmouseover="showTip(event, 'fs65', 174)" class="f">createParserForwardedToRef</span>()

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs81', 175)" onmouseover="showTip(event, 'fs81', 175)" class="f">scope</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs82', 176)" onmouseover="showTip(event, 'fs82', 176)" class="i">parse</span>{
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 177)" onmouseover="showTip(event, 'fs61', 177)" class="f">spaces</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs39', 178)" onmouseover="showTip(event, 'fs39', 178)" class="f">skipStringCI</span> <span class="s">&quot;{&quot;</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 179)" onmouseover="showTip(event, 'fs61', 179)" class="f">spaces</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs83', 180)" onmouseover="showTip(event, 'fs83', 180)" class="i">text</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs84', 181)" onmouseover="showTip(event, 'fs84', 181)" class="f">opt</span> <span onmouseout="hideTip(event, 'fs79', 182)" onmouseover="showTip(event, 'fs79', 182)" class="f">funcInners</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 183)" onmouseover="showTip(event, 'fs61', 183)" class="f">spaces</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs39', 184)" onmouseover="showTip(event, 'fs39', 184)" class="f">skipStringCI</span> <span class="s">&quot;}&quot;</span>    
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 185)" onmouseover="showTip(event, 'fs61', 185)" class="f">spaces</span>
    <span class="k">return</span> <span onmouseout="hideTip(event, 'fs22', 186)" onmouseover="showTip(event, 'fs22', 186)" class="p">Scope</span>(<span onmouseout="hideTip(event, 'fs83', 187)" onmouseover="showTip(event, 'fs83', 187)" class="i">text</span>)
}

<span class="c">(* Classes *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs85', 188)" onmouseover="showTip(event, 'fs85', 188)" class="f">classItem</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs82', 189)" onmouseover="showTip(event, 'fs82', 189)" class="i">parse</span>{
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs39', 190)" onmouseover="showTip(event, 'fs39', 190)" class="f">skipStringCI</span> <span class="s">&quot;class&quot;</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 191)" onmouseover="showTip(event, 'fs61', 191)" class="f">spaces</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs86', 192)" onmouseover="showTip(event, 'fs86', 192)" class="i">name</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs48', 193)" onmouseover="showTip(event, 'fs48', 193)" class="f">variable</span>    
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs87', 194)" onmouseover="showTip(event, 'fs87', 194)" class="i">classStatements</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs81', 195)" onmouseover="showTip(event, 'fs81', 195)" class="f">scope</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 196)" onmouseover="showTip(event, 'fs61', 196)" class="f">spaces</span>
    <span class="k">return</span> <span onmouseout="hideTip(event, 'fs23', 197)" onmouseover="showTip(event, 'fs23', 197)" class="p">Class</span>(<span onmouseout="hideTip(event, 'fs86', 198)" onmouseover="showTip(event, 'fs86', 198)" class="i">name</span>, <span onmouseout="hideTip(event, 'fs87', 199)" onmouseover="showTip(event, 'fs87', 199)" class="i">classStatements</span>)
}    

<span class="c">(* Functions *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs88', 200)" onmouseover="showTip(event, 'fs88', 200)" class="f">innerArgs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs89', 201)" onmouseover="showTip(event, 'fs89', 201)" class="f">sepEndBy1</span> (<span onmouseout="hideTip(event, 'fs63', 202)" onmouseover="showTip(event, 'fs63', 202)" class="f">expr</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs37', 203)" onmouseover="showTip(event, 'fs37', 203)" class="p">Element</span>) (<span onmouseout="hideTip(event, 'fs53', 204)" onmouseover="showTip(event, 'fs53', 204)" class="f">pstring</span> <span class="s">&quot;,&quot;</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs90', 205)" onmouseover="showTip(event, 'fs90', 205)" class="f">arguments</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs88', 206)" onmouseover="showTip(event, 'fs88', 206)" class="f">innerArgs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs67', 207)" onmouseover="showTip(event, 'fs67', 207)" class="f">between</span> <span class="s">&quot;(&quot;</span> <span class="s">&quot;)&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs91', 208)" onmouseover="showTip(event, 'fs91', 208)" class="f">func</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs82', 209)" onmouseover="showTip(event, 'fs82', 209)" class="i">parse</span> {
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs39', 210)" onmouseover="showTip(event, 'fs39', 210)" class="f">skipStringCI</span> <span class="s">&quot;func&quot;</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 211)" onmouseover="showTip(event, 'fs61', 211)" class="f">spaces</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs92', 212)" onmouseover="showTip(event, 'fs92', 212)" class="i">name</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs84', 213)" onmouseover="showTip(event, 'fs84', 213)" class="f">opt</span> (<span onmouseout="hideTip(event, 'fs49', 214)" onmouseover="showTip(event, 'fs49', 214)" class="f">many1Chars</span> (<span onmouseout="hideTip(event, 'fs50', 215)" onmouseover="showTip(event, 'fs50', 215)" class="f">satisfy</span> <span onmouseout="hideTip(event, 'fs51', 216)" onmouseover="showTip(event, 'fs51', 216)" class="f">isAsciiLetter</span>))
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs93', 217)" onmouseover="showTip(event, 'fs93', 217)" class="i">arguments</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs84', 218)" onmouseover="showTip(event, 'fs84', 218)" class="f">opt</span> <span onmouseout="hideTip(event, 'fs93', 219)" onmouseover="showTip(event, 'fs93', 219)" class="f">arguments</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 220)" onmouseover="showTip(event, 'fs61', 220)" class="f">spaces</span> 
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs39', 221)" onmouseover="showTip(event, 'fs39', 221)" class="f">skipStringCI</span> <span class="s">&quot;-&gt;&quot;</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs94', 222)" onmouseover="showTip(event, 'fs94', 222)" class="i">scope</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs94', 223)" onmouseover="showTip(event, 'fs94', 223)" class="f">scope</span>
    <span class="k">return</span> <span onmouseout="hideTip(event, 'fs18', 224)" onmouseover="showTip(event, 'fs18', 224)" class="p">Function</span>(<span onmouseout="hideTip(event, 'fs92', 225)" onmouseover="showTip(event, 'fs92', 225)" class="i">name</span>, <span onmouseout="hideTip(event, 'fs93', 226)" onmouseover="showTip(event, 'fs93', 226)" class="i">arguments</span>, <span onmouseout="hideTip(event, 'fs94', 227)" onmouseover="showTip(event, 'fs94', 227)" class="i">scope</span>)
}


<span class="c">(* Conditionals *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs95', 228)" onmouseover="showTip(event, 'fs95', 228)" class="f">conditionalParser</span>, <span onmouseout="hideTip(event, 'fs96', 229)" onmouseover="showTip(event, 'fs96', 229)" class="v">conditionalParserImpl</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs65', 230)" onmouseover="showTip(event, 'fs65', 230)" class="f">createParserForwardedToRef</span>()

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs97', 231)" onmouseover="showTip(event, 'fs97', 231)" class="f">ifBlock</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs82', 232)" onmouseover="showTip(event, 'fs82', 232)" class="i">parse</span>{
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs39', 233)" onmouseover="showTip(event, 'fs39', 233)" class="f">skipStringCI</span> <span class="s">&quot;if&quot;</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs98', 234)" onmouseover="showTip(event, 'fs98', 234)" class="i">condition</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs63', 235)" onmouseover="showTip(event, 'fs63', 235)" class="f">expr</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs67', 236)" onmouseover="showTip(event, 'fs67', 236)" class="f">between</span> <span class="s">&quot;(&quot;</span> <span class="s">&quot;)&quot;</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 237)" onmouseover="showTip(event, 'fs61', 237)" class="f">spaces</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs99', 238)" onmouseover="showTip(event, 'fs99', 238)" class="i">onTrue</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs81', 239)" onmouseover="showTip(event, 'fs81', 239)" class="f">scope</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 240)" onmouseover="showTip(event, 'fs61', 240)" class="f">spaces</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs100', 241)" onmouseover="showTip(event, 'fs100', 241)" class="f">elseKeyword</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 242)" onmouseover="showTip(event, 'fs39', 242)" class="f">skipStringCI</span> <span class="s">&quot;else&quot;</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs61', 243)" onmouseover="showTip(event, 'fs61', 243)" class="f">spaces</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs101', 244)" onmouseover="showTip(event, 'fs101', 244)" class="f">elseParse</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs82', 245)" onmouseover="showTip(event, 'fs82', 245)" class="i">parse</span>{
        <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs100', 246)" onmouseover="showTip(event, 'fs100', 246)" class="f">elseKeyword</span>
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs102', 247)" onmouseover="showTip(event, 'fs102', 247)" class="i">onFalse</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs81', 248)" onmouseover="showTip(event, 'fs81', 248)" class="f">scope</span>
        <span class="k">return</span> (<span onmouseout="hideTip(event, 'fs98', 249)" onmouseover="showTip(event, 'fs98', 249)" class="i">condition</span>, <span onmouseout="hideTip(event, 'fs99', 250)" onmouseover="showTip(event, 'fs99', 250)" class="i">onTrue</span>, <span onmouseout="hideTip(event, 'fs103', 251)" onmouseover="showTip(event, 'fs103', 251)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs102', 252)" onmouseover="showTip(event, 'fs102', 252)" class="i">onFalse</span>)) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs24', 253)" onmouseover="showTip(event, 'fs24', 253)" class="p">Conditional</span>
    }

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs104', 254)" onmouseover="showTip(event, 'fs104', 254)" class="f">elseIfParse</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs82', 255)" onmouseover="showTip(event, 'fs82', 255)" class="i">parse</span>{
        <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs100', 256)" onmouseover="showTip(event, 'fs100', 256)" class="f">elseKeyword</span>
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs102', 257)" onmouseover="showTip(event, 'fs102', 257)" class="i">onFalse</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs95', 258)" onmouseover="showTip(event, 'fs95', 258)" class="f">conditionalParser</span>
        <span class="k">return</span> (<span onmouseout="hideTip(event, 'fs98', 259)" onmouseover="showTip(event, 'fs98', 259)" class="i">condition</span>, <span onmouseout="hideTip(event, 'fs99', 260)" onmouseover="showTip(event, 'fs99', 260)" class="i">onTrue</span>, <span onmouseout="hideTip(event, 'fs103', 261)" onmouseover="showTip(event, 'fs103', 261)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs102', 262)" onmouseover="showTip(event, 'fs102', 262)" class="i">onFalse</span>)) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs24', 263)" onmouseover="showTip(event, 'fs24', 263)" class="p">Conditional</span>
    }

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs105', 264)" onmouseover="showTip(event, 'fs105', 264)" class="f">noElseParse</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs82', 265)" onmouseover="showTip(event, 'fs82', 265)" class="i">parse</span>{        
        <span class="k">return</span> (<span onmouseout="hideTip(event, 'fs98', 266)" onmouseover="showTip(event, 'fs98', 266)" class="i">condition</span>, <span onmouseout="hideTip(event, 'fs99', 267)" onmouseover="showTip(event, 'fs99', 267)" class="i">onTrue</span>, <span onmouseout="hideTip(event, 'fs106', 268)" onmouseover="showTip(event, 'fs106', 268)" class="p">None</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs24', 269)" onmouseover="showTip(event, 'fs24', 269)" class="p">Conditional</span>
    }

    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs107', 270)" onmouseover="showTip(event, 'fs107', 270)" class="i">result</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs62', 271)" onmouseover="showTip(event, 'fs62', 271)" class="f">choice</span>[<span onmouseout="hideTip(event, 'fs78', 272)" onmouseover="showTip(event, 'fs78', 272)" class="f">attempt</span> <span onmouseout="hideTip(event, 'fs104', 273)" onmouseover="showTip(event, 'fs104', 273)" class="f">elseIfParse</span>;<span onmouseout="hideTip(event, 'fs101', 274)" onmouseover="showTip(event, 'fs101', 274)" class="f">elseParse</span>;<span onmouseout="hideTip(event, 'fs105', 275)" onmouseover="showTip(event, 'fs105', 275)" class="f">noElseParse</span>]
    <span class="k">return</span> <span onmouseout="hideTip(event, 'fs107', 276)" onmouseover="showTip(event, 'fs107', 276)" class="i">result</span>
}

<span class="k">do</span> <span onmouseout="hideTip(event, 'fs96', 277)" onmouseover="showTip(event, 'fs96', 277)" class="v">conditionalParserImpl</span><span class="o">:=</span> <span onmouseout="hideTip(event, 'fs97', 278)" onmouseover="showTip(event, 'fs97', 278)" class="f">ifBlock</span> 

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs108', 279)" onmouseover="showTip(event, 'fs108', 279)" class="f">conditional</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs97', 280)" onmouseover="showTip(event, 'fs97', 280)" class="f">ifBlock</span> 

<span class="c">(* Assignment *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs109', 281)" onmouseover="showTip(event, 'fs109', 281)" class="f">assign</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs82', 282)" onmouseover="showTip(event, 'fs82', 282)" class="i">parse</span>{
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs110', 283)" onmouseover="showTip(event, 'fs110', 283)" class="i">ex</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs63', 284)" onmouseover="showTip(event, 'fs63', 284)" class="f">expr</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 285)" onmouseover="showTip(event, 'fs61', 285)" class="f">spaces</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs39', 286)" onmouseover="showTip(event, 'fs39', 286)" class="f">skipStringCI</span> <span class="s">&quot;=&quot;</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 287)" onmouseover="showTip(event, 'fs61', 287)" class="f">spaces</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs111', 288)" onmouseover="showTip(event, 'fs111', 288)" class="i">assignEx</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs63', 289)" onmouseover="showTip(event, 'fs63', 289)" class="f">expr</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 290)" onmouseover="showTip(event, 'fs61', 290)" class="f">spaces</span>    
    <span class="k">return</span> (<span onmouseout="hideTip(event, 'fs110', 291)" onmouseover="showTip(event, 'fs110', 291)" class="i">ex</span>, <span onmouseout="hideTip(event, 'fs111', 292)" onmouseover="showTip(event, 'fs111', 292)" class="i">assignEx</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs28', 293)" onmouseover="showTip(event, 'fs28', 293)" class="p">Assign</span>
}

<span class="c">(* Loops *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs112', 294)" onmouseover="showTip(event, 'fs112', 294)" class="f">whileLoop</span> <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs53', 295)" onmouseover="showTip(event, 'fs53', 295)" class="f">pstring</span> <span class="s">&quot;while&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs61', 296)" onmouseover="showTip(event, 'fs61', 296)" class="f">spaces</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> (<span onmouseout="hideTip(event, 'fs63', 297)" onmouseover="showTip(event, 'fs63', 297)" class="f">expr</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs67', 298)" onmouseover="showTip(event, 'fs67', 298)" class="f">between</span> <span class="s">&quot;(&quot;</span> <span class="s">&quot;)&quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs113', 299)" onmouseover="showTip(event, 'fs113', 299)" class="i">predicate</span> <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs81', 300)" onmouseover="showTip(event, 'fs81', 300)" class="f">scope</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs114', 301)" onmouseover="showTip(event, 'fs114', 301)" class="i">body</span> <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs77', 302)" onmouseover="showTip(event, 'fs77', 302)" class="f">preturn</span> (<span onmouseout="hideTip(event, 'fs25', 303)" onmouseover="showTip(event, 'fs25', 303)" class="p">WhileLoop</span>(<span onmouseout="hideTip(event, 'fs113', 304)" onmouseover="showTip(event, 'fs113', 304)" class="i">predicate</span>, <span onmouseout="hideTip(event, 'fs114', 305)" onmouseover="showTip(event, 'fs114', 305)" class="i">body</span>))


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs115', 306)" onmouseover="showTip(event, 'fs115', 306)" class="f">forLoop</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs116', 307)" onmouseover="showTip(event, 'fs116', 307)" class="f">startCondition</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs109', 308)" onmouseover="showTip(event, 'fs109', 308)" class="f">assign</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs53', 309)" onmouseover="showTip(event, 'fs53', 309)" class="f">pstring</span> <span class="s">&quot;;&quot;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs117', 310)" onmouseover="showTip(event, 'fs117', 310)" class="f">predicate</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs63', 311)" onmouseover="showTip(event, 'fs63', 311)" class="f">expr</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs53', 312)" onmouseover="showTip(event, 'fs53', 312)" class="f">pstring</span> <span class="s">&quot;;&quot;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs118', 313)" onmouseover="showTip(event, 'fs118', 313)" class="f">endCondition</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs63', 314)" onmouseover="showTip(event, 'fs63', 314)" class="f">expr</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs119', 315)" onmouseover="showTip(event, 'fs119', 315)" class="f">forKeyword</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 316)" onmouseover="showTip(event, 'fs53', 316)" class="f">pstring</span> <span class="s">&quot;for&quot;</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs61', 317)" onmouseover="showTip(event, 'fs61', 317)" class="f">spaces</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs120', 318)" onmouseover="showTip(event, 'fs120', 318)" class="f">forItems</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs121', 319)" onmouseover="showTip(event, 'fs121', 319)" class="f">tuple3</span> <span onmouseout="hideTip(event, 'fs116', 320)" onmouseover="showTip(event, 'fs116', 320)" class="f">startCondition</span> <span onmouseout="hideTip(event, 'fs117', 321)" onmouseover="showTip(event, 'fs117', 321)" class="f">predicate</span> <span onmouseout="hideTip(event, 'fs118', 322)" onmouseover="showTip(event, 'fs118', 322)" class="f">endCondition</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs67', 323)" onmouseover="showTip(event, 'fs67', 323)" class="f">between</span> <span class="s">&quot;(&quot;</span> <span class="s">&quot;)&quot;</span>

    <span onmouseout="hideTip(event, 'fs119', 324)" onmouseover="showTip(event, 'fs119', 324)" class="f">forKeyword</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs120', 325)" onmouseover="showTip(event, 'fs120', 325)" class="f">forItems</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span onmouseout="hideTip(event, 'fs81', 326)" onmouseover="showTip(event, 'fs81', 326)" class="f">scope</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> ((<span onmouseout="hideTip(event, 'fs122', 327)" onmouseover="showTip(event, 'fs122', 327)" class="i">s</span>, <span onmouseout="hideTip(event, 'fs123', 328)" onmouseover="showTip(event, 'fs123', 328)" class="i">p</span>, <span onmouseout="hideTip(event, 'fs124', 329)" onmouseover="showTip(event, 'fs124', 329)" class="i">e</span>), <span onmouseout="hideTip(event, 'fs125', 330)" onmouseover="showTip(event, 'fs125', 330)" class="i">b</span>) <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs77', 331)" onmouseover="showTip(event, 'fs77', 331)" class="f">preturn</span> (<span onmouseout="hideTip(event, 'fs122', 332)" onmouseover="showTip(event, 'fs122', 332)" class="i">s</span>, <span onmouseout="hideTip(event, 'fs123', 333)" onmouseover="showTip(event, 'fs123', 333)" class="i">p</span>, <span onmouseout="hideTip(event, 'fs124', 334)" onmouseover="showTip(event, 'fs124', 334)" class="i">e</span>, <span onmouseout="hideTip(event, 'fs125', 335)" onmouseover="showTip(event, 'fs125', 335)" class="i">b</span>) <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs26', 336)" onmouseover="showTip(event, 'fs26', 336)" class="p">ForLoop</span>
        

<span class="c">(* Function calls *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs126', 337)" onmouseover="showTip(event, 'fs126', 337)" class="f">call</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs82', 338)" onmouseover="showTip(event, 'fs82', 338)" class="i">parse</span>{
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs127', 339)" onmouseover="showTip(event, 'fs127', 339)" class="i">name</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 340)" onmouseover="showTip(event, 'fs49', 340)" class="f">many1Chars</span> (<span onmouseout="hideTip(event, 'fs50', 341)" onmouseover="showTip(event, 'fs50', 341)" class="f">satisfy</span> <span onmouseout="hideTip(event, 'fs51', 342)" onmouseover="showTip(event, 'fs51', 342)" class="f">isAsciiLetter</span>)
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 343)" onmouseover="showTip(event, 'fs61', 343)" class="f">spaces</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs39', 344)" onmouseover="showTip(event, 'fs39', 344)" class="f">skipStringCI</span> <span class="s">&quot;(&quot;</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs128', 345)" onmouseover="showTip(event, 'fs128', 345)" class="i">args</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs84', 346)" onmouseover="showTip(event, 'fs84', 346)" class="f">opt</span> <span onmouseout="hideTip(event, 'fs88', 347)" onmouseover="showTip(event, 'fs88', 347)" class="f">innerArgs</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 348)" onmouseover="showTip(event, 'fs61', 348)" class="f">spaces</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs39', 349)" onmouseover="showTip(event, 'fs39', 349)" class="f">skipStringCI</span> <span class="s">&quot;)&quot;</span>
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs61', 350)" onmouseover="showTip(event, 'fs61', 350)" class="f">spaces</span>
    <span class="k">return</span> <span onmouseout="hideTip(event, 'fs27', 351)" onmouseover="showTip(event, 'fs27', 351)" class="p">Call</span>(<span onmouseout="hideTip(event, 'fs127', 352)" onmouseover="showTip(event, 'fs127', 352)" class="i">name</span>, <span onmouseout="hideTip(event, 'fs128', 353)" onmouseover="showTip(event, 'fs128', 353)" class="i">args</span>)
}           


<span class="c">(* Statements *)</span>


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs129', 354)" onmouseover="showTip(event, 'fs129', 354)" class="f">delineatedStatement</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs62', 355)" onmouseover="showTip(event, 'fs62', 355)" class="f">choice</span>[
                                 <span onmouseout="hideTip(event, 'fs78', 356)" onmouseover="showTip(event, 'fs78', 356)" class="f">attempt</span> <span onmouseout="hideTip(event, 'fs126', 357)" onmouseover="showTip(event, 'fs126', 357)" class="f">call</span>;
                                 <span onmouseout="hideTip(event, 'fs78', 358)" onmouseover="showTip(event, 'fs78', 358)" class="f">attempt</span> <span onmouseout="hideTip(event, 'fs109', 359)" onmouseover="showTip(event, 'fs109', 359)" class="f">assign</span>;
                                 <span onmouseout="hideTip(event, 'fs63', 360)" onmouseover="showTip(event, 'fs63', 360)" class="f">expr</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs16', 361)" onmouseover="showTip(event, 'fs16', 361)" class="p">Expression</span>
                                ] <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs38', 362)" onmouseover="showTip(event, 'fs38', 362)" class="f">semicolon</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs15', 363)" onmouseover="showTip(event, 'fs15', 363)" class="p">Statement</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs130', 364)" onmouseover="showTip(event, 'fs130', 364)" class="f">statement</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs62', 365)" onmouseover="showTip(event, 'fs62', 365)" class="f">choice</span>[
                        <span onmouseout="hideTip(event, 'fs108', 366)" onmouseover="showTip(event, 'fs108', 366)" class="f">conditional</span>;
                        <span onmouseout="hideTip(event, 'fs112', 367)" onmouseover="showTip(event, 'fs112', 367)" class="f">whileLoop</span>;
                        <span onmouseout="hideTip(event, 'fs115', 368)" onmouseover="showTip(event, 'fs115', 368)" class="f">forLoop</span>;                  
                        <span onmouseout="hideTip(event, 'fs129', 369)" onmouseover="showTip(event, 'fs129', 369)" class="f">delineatedStatement</span>
                     ]
                                           

<span class="c">(* things that can be in functions *)</span>

<span class="k">do</span> <span onmouseout="hideTip(event, 'fs80', 370)" onmouseover="showTip(event, 'fs80', 370)" class="v">funcInnersImpl</span> <span class="o">:=</span> <span onmouseout="hideTip(event, 'fs131', 371)" onmouseover="showTip(event, 'fs131', 371)" class="f">many1</span> (<span onmouseout="hideTip(event, 'fs61', 372)" onmouseover="showTip(event, 'fs61', 372)" class="f">spaces</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">?</span> <span onmouseout="hideTip(event, 'fs62', 373)" onmouseover="showTip(event, 'fs62', 373)" class="f">choice</span> [<span onmouseout="hideTip(event, 'fs81', 374)" onmouseover="showTip(event, 'fs81', 374)" class="f">scope</span>; <span onmouseout="hideTip(event, 'fs91', 375)" onmouseover="showTip(event, 'fs91', 375)" class="f">func</span>; <span onmouseout="hideTip(event, 'fs130', 376)" onmouseover="showTip(event, 'fs130', 376)" class="f">statement</span>])

<span class="c">(* Things can be in the program root *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs132', 377)" onmouseover="showTip(event, 'fs132', 377)" class="f">programLines</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs61', 378)" onmouseover="showTip(event, 'fs61', 378)" class="f">spaces</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs62', 379)" onmouseover="showTip(event, 'fs62', 379)" class="f">choice</span>[
                                        <span onmouseout="hideTip(event, 'fs85', 380)" onmouseover="showTip(event, 'fs85', 380)" class="f">classItem</span>;
                                        <span onmouseout="hideTip(event, 'fs91', 381)" onmouseover="showTip(event, 'fs91', 381)" class="f">func</span>;
                                        <span onmouseout="hideTip(event, 'fs81', 382)" onmouseover="showTip(event, 'fs81', 382)" class="f">scope</span>;
                                        <span onmouseout="hideTip(event, 'fs130', 383)" onmouseover="showTip(event, 'fs130', 383)" class="f">statement</span>
                                    ]

<span class="c">(* The full program *)</span>
                                    
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs133', 384)" onmouseover="showTip(event, 'fs133', 384)" class="f">program</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs134', 385)" onmouseover="showTip(event, 'fs134', 385)" class="f">many</span> <span onmouseout="hideTip(event, 'fs132', 386)" onmouseover="showTip(event, 'fs132', 386)" class="f">programLines</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs135', 387)" onmouseover="showTip(event, 'fs135', 387)" class="f">test</span> <span onmouseout="hideTip(event, 'fs136', 388)" onmouseover="showTip(event, 'fs136', 388)" class="i">input</span> <span class="o">=</span> <span class="k">match</span> <span onmouseout="hideTip(event, 'fs137', 389)" onmouseover="showTip(event, 'fs137', 389)" class="f">run</span> (<span onmouseout="hideTip(event, 'fs133', 390)" onmouseover="showTip(event, 'fs133', 390)" class="f">program</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs138', 391)" onmouseover="showTip(event, 'fs138', 391)" class="f">eof</span>) <span onmouseout="hideTip(event, 'fs136', 392)" onmouseover="showTip(event, 'fs136', 392)" class="i">input</span> <span class="k">with</span>
                    | <span onmouseout="hideTip(event, 'fs139', 393)" onmouseover="showTip(event, 'fs139', 393)" class="p">Success</span>(<span onmouseout="hideTip(event, 'fs140', 394)" onmouseover="showTip(event, 'fs140', 394)" class="i">r</span>,_,_) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs140', 395)" onmouseover="showTip(event, 'fs140', 395)" class="i">r</span>
                    | <span onmouseout="hideTip(event, 'fs141', 396)" onmouseover="showTip(event, 'fs141', 396)" class="p">Failure</span>(<span onmouseout="hideTip(event, 'fs142', 397)" onmouseover="showTip(event, 'fs142', 397)" class="i">r</span>,_,_) <span class="k">-&gt;</span> 
                            <span onmouseout="hideTip(event, 'fs143', 398)" onmouseover="showTip(event, 'fs143', 398)" class="t">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs144', 399)" onmouseover="showTip(event, 'fs144', 399)" class="f">WriteLine</span> <span onmouseout="hideTip(event, 'fs142', 400)" onmouseover="showTip(event, 'fs142', 400)" class="i">r</span>
                            <span onmouseout="hideTip(event, 'fs145', 401)" onmouseover="showTip(event, 'fs145', 401)" class="f">raise</span> (<span onmouseout="hideTip(event, 'fs4', 402)" onmouseover="showTip(event, 'fs4', 402)" class="t">Error</span>(<span onmouseout="hideTip(event, 'fs142', 403)" onmouseover="showTip(event, 'fs142', 403)" class="i">r</span>))
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module LanguageCombinator</div>
<div class="tip" id="fs2">namespace FParsec</div>
<div class="tip" id="fs3">namespace System</div>
<div class="tip" id="fs4">Multiple items<br />exception Error of string<br /><br />Full name: LanguageCombinator.Error<br /><br />--------------------<br />module Error<br /><br />from FParsec</div>
<div class="tip" id="fs5">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs6">type Op =<br />&#160;&#160;| Plus<br />&#160;&#160;| Minus<br />&#160;&#160;| GreaterThan<br />&#160;&#160;| LessThan<br />&#160;&#160;| Mult<br />&#160;&#160;| Divide<br />&#160;&#160;| Carrot<br /><br />Full name: LanguageCombinator.Op</div>
<div class="tip" id="fs7">union case Op.Plus: Op</div>
<div class="tip" id="fs8">union case Op.Minus: Op</div>
<div class="tip" id="fs9">union case Op.GreaterThan: Op</div>
<div class="tip" id="fs10">union case Op.LessThan: Op</div>
<div class="tip" id="fs11">union case Op.Mult: Op</div>
<div class="tip" id="fs12">union case Op.Divide: Op</div>
<div class="tip" id="fs13">union case Op.Carrot: Op</div>
<div class="tip" id="fs14">type Ast =<br />&#160;&#160;| Statement of Ast<br />&#160;&#160;| Expression of Ex<br />&#160;&#160;| Function of string option * Argument list option * Ast<br />&#160;&#160;| Scope of Ast list option<br />&#160;&#160;| Class of Ex * Ast<br />&#160;&#160;| Conditional of Ex * Ast * Ast option<br />&#160;&#160;| WhileLoop of Ex * Ast<br />&#160;&#160;| ForLoop of Ast * Ex * Ex * Ast<br />&#160;&#160;| Call of string * Argument list option<br />&#160;&#160;| Assign of Ex * Ex<br /><br />Full name: LanguageCombinator.Ast</div>
<div class="tip" id="fs15">union case Ast.Statement: Ast -&gt; Ast</div>
<div class="tip" id="fs16">union case Ast.Expression: Ex -&gt; Ast</div>
<div class="tip" id="fs17">type Ex =<br />&#160;&#160;| Single of Ast<br />&#160;&#160;| Full of Ex * Op * Ex<br />&#160;&#160;| Float of float<br />&#160;&#160;| Int of int<br />&#160;&#160;| Literal of string<br />&#160;&#160;| Variable of string<br /><br />Full name: LanguageCombinator.Ex</div>
<div class="tip" id="fs18">union case Ast.Function: string option * Argument list option * Ast -&gt; Ast</div>
<div class="tip" id="fs19">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs20">type Argument = | Element of Ex<br /><br />Full name: LanguageCombinator.Argument</div>
<div class="tip" id="fs21">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs22">union case Ast.Scope: Ast list option -&gt; Ast</div>
<div class="tip" id="fs23">Multiple items<br />union case Ast.Class: Ex * Ast -&gt; Ast<br /><br />--------------------<br />type ClassAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; ClassAttribute<br /><br />Full name: Microsoft.FSharp.Core.ClassAttribute<br /><br />--------------------<br />new : unit -&gt; ClassAttribute</div>
<div class="tip" id="fs24">union case Ast.Conditional: Ex * Ast * Ast option -&gt; Ast</div>
<div class="tip" id="fs25">union case Ast.WhileLoop: Ex * Ast -&gt; Ast</div>
<div class="tip" id="fs26">union case Ast.ForLoop: Ast * Ex * Ex * Ast -&gt; Ast</div>
<div class="tip" id="fs27">union case Ast.Call: string * Argument list option -&gt; Ast</div>
<div class="tip" id="fs28">union case Ast.Assign: Ex * Ex -&gt; Ast</div>
<div class="tip" id="fs29">Multiple items<br />union case Ex.Single: Ast -&gt; Ex<br /><br />--------------------<br />type Single =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 3 overloads<br />&#160;&#160;&#160;&#160;static val MinValue : float32<br />&#160;&#160;&#160;&#160;static val Epsilon : float32<br />&#160;&#160;&#160;&#160;static val MaxValue : float32<br />&#160;&#160;&#160;&#160;static val PositiveInfinity : float32<br />&#160;&#160;&#160;&#160;static val NegativeInfinity : float32<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Single</div>
<div class="tip" id="fs30">union case Ex.Full: Ex * Op * Ex -&gt; Ex</div>
<div class="tip" id="fs31">union case Ex.Float: float -&gt; Ex</div>
<div class="tip" id="fs32">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs33">union case Ex.Int: int -&gt; Ex</div>
<div class="tip" id="fs34">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs35">Multiple items<br />union case Ex.Literal: string -&gt; Ex<br /><br />--------------------<br />type LiteralAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; LiteralAttribute<br /><br />Full name: Microsoft.FSharp.Core.LiteralAttribute<br /><br />--------------------<br />new : unit -&gt; LiteralAttribute</div>
<div class="tip" id="fs36">union case Ex.Variable: string -&gt; Ex</div>
<div class="tip" id="fs37">union case Argument.Element: Ex -&gt; Argument</div>
<div class="tip" id="fs38">val semicolon : Parser&lt;unit,unit&gt;<br /><br />Full name: LanguageCombinator.semicolon</div>
<div class="tip" id="fs39">val skipStringCI : string -&gt; Parser&lt;unit,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.skipStringCI</div>
<div class="tip" id="fs40">val quote : Parser&lt;unit,unit&gt;<br /><br />Full name: LanguageCombinator.quote</div>
<div class="tip" id="fs41">val literal : Parser&lt;Ex,unit&gt;<br /><br />Full name: LanguageCombinator.literal</div>
<div class="tip" id="fs42">val manyCharsTill : Parser&lt;char,&#39;u&gt; -&gt; Parser&lt;&#39;b,&#39;u&gt; -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.manyCharsTill</div>
<div class="tip" id="fs43">val anyChar : Parser&lt;char,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.anyChar</div>
<div class="tip" id="fs44">val floatNum : Parser&lt;Ex,unit&gt;<br /><br />Full name: LanguageCombinator.floatNum</div>
<div class="tip" id="fs45">val pfloat : Parser&lt;float,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.pfloat</div>
<div class="tip" id="fs46">val intNum : Parser&lt;Ex,unit&gt;<br /><br />Full name: LanguageCombinator.intNum</div>
<div class="tip" id="fs47">val pint32 : Parser&lt;int32,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.pint32</div>
<div class="tip" id="fs48">val variable : Parser&lt;Ex,unit&gt;<br /><br />Full name: LanguageCombinator.variable</div>
<div class="tip" id="fs49">val many1Chars : Parser&lt;char,&#39;u&gt; -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.many1Chars</div>
<div class="tip" id="fs50">val satisfy : (char -&gt; bool) -&gt; Parser&lt;char,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.satisfy</div>
<div class="tip" id="fs51">val isAsciiLetter : char -&gt; bool<br /><br />Full name: FParsec.CharParsers.isAsciiLetter</div>
<div class="tip" id="fs52">val plus : Parser&lt;Op,unit&gt;<br /><br />Full name: LanguageCombinator.plus</div>
<div class="tip" id="fs53">val pstring : string -&gt; Parser&lt;string,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.pstring</div>
<div class="tip" id="fs54">val minus : Parser&lt;Op,unit&gt;<br /><br />Full name: LanguageCombinator.minus</div>
<div class="tip" id="fs55">val divide : Parser&lt;Op,unit&gt;<br /><br />Full name: LanguageCombinator.divide</div>
<div class="tip" id="fs56">val mult : Parser&lt;Op,unit&gt;<br /><br />Full name: LanguageCombinator.mult</div>
<div class="tip" id="fs57">val carrot : Parser&lt;Op,unit&gt;<br /><br />Full name: LanguageCombinator.carrot</div>
<div class="tip" id="fs58">val gt : Parser&lt;Op,unit&gt;<br /><br />Full name: LanguageCombinator.gt</div>
<div class="tip" id="fs59">val lt : Parser&lt;Op,unit&gt;<br /><br />Full name: LanguageCombinator.lt</div>
<div class="tip" id="fs60">val op : Parser&lt;Op,unit&gt;<br /><br />Full name: LanguageCombinator.op</div>
<div class="tip" id="fs61">val spaces : Parser&lt;unit,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.spaces</div>
<div class="tip" id="fs62">val choice : seq&lt;Parser&lt;&#39;a,&#39;u&gt;&gt; -&gt; Parser&lt;&#39;a,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.choice</div>
<div class="tip" id="fs63">val expr : Parser&lt;Ex,unit&gt;<br /><br />Full name: LanguageCombinator.expr</div>
<div class="tip" id="fs64">val exprImpl : Parser&lt;Ex,unit&gt; ref<br /><br />Full name: LanguageCombinator.exprImpl</div>
<div class="tip" id="fs65">val createParserForwardedToRef : unit -&gt; Parser&lt;&#39;a,&#39;u&gt; * Parser&lt;&#39;a,&#39;u&gt; ref<br /><br />Full name: FParsec.Primitives.createParserForwardedToRef</div>
<div class="tip" id="fs66">val expression1 : Parser&lt;Ex,unit&gt;<br /><br />Full name: LanguageCombinator.expression1</div>
<div class="tip" id="fs67">val between : a:string -&gt; b:string -&gt; p:Parser&lt;&#39;a,&#39;b&gt; -&gt; Parser&lt;&#39;a,&#39;b&gt;<br /><br />Full name: LanguageCombinator.between</div>
<div class="tip" id="fs68">val a : string</div>
<div class="tip" id="fs69">val b : string</div>
<div class="tip" id="fs70">val p : Parser&lt;&#39;a,&#39;b&gt;</div>
<div class="tip" id="fs71">val bracketExpression : Parser&lt;Ex,unit&gt;<br /><br />Full name: LanguageCombinator.bracketExpression</div>
<div class="tip" id="fs72">val lhExpression : (CharStream&lt;unit&gt; -&gt; Reply&lt;Ex&gt;)<br /><br />Full name: LanguageCombinator.lhExpression</div>
<div class="tip" id="fs73">val expressionOpration : Parser&lt;Ex,unit&gt;<br /><br />Full name: LanguageCombinator.expressionOpration</div>
<div class="tip" id="fs74">val operandL : Ex</div>
<div class="tip" id="fs75">val operator : Op</div>
<div class="tip" id="fs76">val operandR : Ex</div>
<div class="tip" id="fs77">val preturn : &#39;a -&gt; Parser&lt;&#39;a,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.preturn</div>
<div class="tip" id="fs78">val attempt : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;a,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.attempt</div>
<div class="tip" id="fs79">val funcInners : Parser&lt;Ast list,unit&gt;<br /><br />Full name: LanguageCombinator.funcInners</div>
<div class="tip" id="fs80">val funcInnersImpl : Parser&lt;Ast list,unit&gt; ref<br /><br />Full name: LanguageCombinator.funcInnersImpl</div>
<div class="tip" id="fs81">val scope : Parser&lt;Ast,unit&gt;<br /><br />Full name: LanguageCombinator.scope</div>
<div class="tip" id="fs82">val parse : ParserCombinator<br /><br />Full name: FParsec.Primitives.parse</div>
<div class="tip" id="fs83">val text : Ast list option</div>
<div class="tip" id="fs84">val opt : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;a option,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.opt</div>
<div class="tip" id="fs85">val classItem : Parser&lt;Ast,unit&gt;<br /><br />Full name: LanguageCombinator.classItem</div>
<div class="tip" id="fs86">val name : Ex</div>
<div class="tip" id="fs87">val classStatements : Ast</div>
<div class="tip" id="fs88">val innerArgs : Parser&lt;Argument list,unit&gt;<br /><br />Full name: LanguageCombinator.innerArgs</div>
<div class="tip" id="fs89">val sepEndBy1 : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;b,&#39;u&gt; -&gt; Parser&lt;&#39;a list,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.sepEndBy1</div>
<div class="tip" id="fs90">val arguments : Parser&lt;Argument list,unit&gt;<br /><br />Full name: LanguageCombinator.arguments</div>
<div class="tip" id="fs91">val func : Parser&lt;Ast,unit&gt;<br /><br />Full name: LanguageCombinator.func</div>
<div class="tip" id="fs92">val name : string option</div>
<div class="tip" id="fs93">val arguments : Argument list option</div>
<div class="tip" id="fs94">val scope : Ast</div>
<div class="tip" id="fs95">val conditionalParser : Parser&lt;Ast,unit&gt;<br /><br />Full name: LanguageCombinator.conditionalParser</div>
<div class="tip" id="fs96">val conditionalParserImpl : Parser&lt;Ast,unit&gt; ref<br /><br />Full name: LanguageCombinator.conditionalParserImpl</div>
<div class="tip" id="fs97">val ifBlock : Parser&lt;Ast,unit&gt;<br /><br />Full name: LanguageCombinator.ifBlock</div>
<div class="tip" id="fs98">val condition : Ex</div>
<div class="tip" id="fs99">val onTrue : Ast</div>
<div class="tip" id="fs100">val elseKeyword : Parser&lt;unit,unit&gt;</div>
<div class="tip" id="fs101">val elseParse : Parser&lt;Ast,unit&gt;</div>
<div class="tip" id="fs102">val onFalse : Ast</div>
<div class="tip" id="fs103">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs104">val elseIfParse : Parser&lt;Ast,unit&gt;</div>
<div class="tip" id="fs105">val noElseParse : Parser&lt;Ast,unit&gt;</div>
<div class="tip" id="fs106">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs107">val result : Ast</div>
<div class="tip" id="fs108">val conditional : Parser&lt;Ast,unit&gt;<br /><br />Full name: LanguageCombinator.conditional</div>
<div class="tip" id="fs109">val assign : Parser&lt;Ast,unit&gt;<br /><br />Full name: LanguageCombinator.assign</div>
<div class="tip" id="fs110">val ex : Ex</div>
<div class="tip" id="fs111">val assignEx : Ex</div>
<div class="tip" id="fs112">val whileLoop : Parser&lt;Ast,unit&gt;<br /><br />Full name: LanguageCombinator.whileLoop</div>
<div class="tip" id="fs113">val predicate : Ex</div>
<div class="tip" id="fs114">val body : Ast</div>
<div class="tip" id="fs115">val forLoop : Parser&lt;Ast,unit&gt;<br /><br />Full name: LanguageCombinator.forLoop</div>
<div class="tip" id="fs116">val startCondition : Parser&lt;Ast,unit&gt;</div>
<div class="tip" id="fs117">val predicate : Parser&lt;Ex,unit&gt;</div>
<div class="tip" id="fs118">val endCondition : Parser&lt;Ex,unit&gt;</div>
<div class="tip" id="fs119">val forKeyword : Parser&lt;string,unit&gt;</div>
<div class="tip" id="fs120">val forItems : Parser&lt;(Ast * Ex * Ex),unit&gt;</div>
<div class="tip" id="fs121">val tuple3 : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;b,&#39;u&gt; -&gt; Parser&lt;&#39;c,&#39;u&gt; -&gt; Parser&lt;(&#39;a * &#39;b * &#39;c),&#39;u&gt;<br /><br />Full name: FParsec.Primitives.tuple3</div>
<div class="tip" id="fs122">val s : Ast</div>
<div class="tip" id="fs123">val p : Ex</div>
<div class="tip" id="fs124">val e : Ex</div>
<div class="tip" id="fs125">val b : Ast</div>
<div class="tip" id="fs126">val call : Parser&lt;Ast,unit&gt;<br /><br />Full name: LanguageCombinator.call</div>
<div class="tip" id="fs127">val name : string</div>
<div class="tip" id="fs128">val args : Argument list option</div>
<div class="tip" id="fs129">val delineatedStatement : Parser&lt;Ast,unit&gt;<br /><br />Full name: LanguageCombinator.delineatedStatement</div>
<div class="tip" id="fs130">val statement : (CharStream&lt;unit&gt; -&gt; Reply&lt;Ast&gt;)<br /><br />Full name: LanguageCombinator.statement</div>
<div class="tip" id="fs131">val many1 : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;a list,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.many1</div>
<div class="tip" id="fs132">val programLines : Parser&lt;Ast,unit&gt;<br /><br />Full name: LanguageCombinator.programLines</div>
<div class="tip" id="fs133">val program : Parser&lt;Ast list,unit&gt;<br /><br />Full name: LanguageCombinator.program</div>
<div class="tip" id="fs134">val many : Parser&lt;&#39;a,&#39;u&gt; -&gt; Parser&lt;&#39;a list,&#39;u&gt;<br /><br />Full name: FParsec.Primitives.many</div>
<div class="tip" id="fs135">val test : input:string -&gt; Ast list<br /><br />Full name: LanguageCombinator.test</div>
<div class="tip" id="fs136">val input : string</div>
<div class="tip" id="fs137">val run : Parser&lt;&#39;Result,unit&gt; -&gt; string -&gt; ParserResult&lt;&#39;Result,unit&gt;<br /><br />Full name: FParsec.CharParsers.run</div>
<div class="tip" id="fs138">val eof : Parser&lt;unit,&#39;u&gt;<br /><br />Full name: FParsec.CharParsers.eof</div>
<div class="tip" id="fs139">union case ParserResult.Success: &#39;Result * &#39;UserState * Position -&gt; ParserResult&lt;&#39;Result,&#39;UserState&gt;</div>
<div class="tip" id="fs140">val r : Ast list</div>
<div class="tip" id="fs141">union case ParserResult.Failure: string * ParserError * &#39;UserState -&gt; ParserResult&lt;&#39;Result,&#39;UserState&gt;</div>
<div class="tip" id="fs142">val r : string</div>
<div class="tip" id="fs143">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs144">Console.WriteLine() : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: obj) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: decimal) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs145">val raise : exn:Exception -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.raise</div>

