<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
<span class="l">154: </span>
<span class="l">155: </span>
<span class="l">156: </span>
<span class="l">157: </span>
<span class="l">158: </span>
<span class="l">159: </span>
<span class="l">160: </span>
<span class="l">161: </span>
<span class="l">162: </span>
<span class="l">163: </span>
<span class="l">164: </span>
<span class="l">165: </span>
<span class="l">166: </span>
<span class="l">167: </span>
<span class="l">168: </span>
<span class="l">169: </span>
<span class="l">170: </span>
<span class="l">171: </span>
<span class="l">172: </span>
<span class="l">173: </span>
<span class="l">174: </span>
<span class="l">175: </span>
<span class="l">176: </span>
<span class="l">177: </span>
<span class="l">178: </span>
<span class="l">179: </span>
<span class="l">180: </span>
<span class="l">181: </span>
<span class="l">182: </span>
<span class="l">183: </span>
<span class="l">184: </span>
<span class="l">185: </span>
<span class="l">186: </span>
<span class="l">187: </span>
<span class="l">188: </span>
<span class="l">189: </span>
<span class="l">190: </span>
<span class="l">191: </span>
<span class="l">192: </span>
<span class="l">193: </span>
<span class="l">194: </span>
<span class="l">195: </span>
<span class="l">196: </span>
<span class="l">197: </span>
<span class="l">198: </span>
<span class="l">199: </span>
<span class="l">200: </span>
<span class="l">201: </span>
<span class="l">202: </span>
<span class="l">203: </span>
<span class="l">204: </span>
<span class="l">205: </span>
<span class="l">206: </span>
<span class="l">207: </span>
<span class="l">208: </span>
<span class="l">209: </span>
<span class="l">210: </span>
<span class="l">211: </span>
<span class="l">212: </span>
<span class="l">213: </span>
<span class="l">214: </span>
<span class="l">215: </span>
<span class="l">216: </span>
<span class="l">217: </span>
<span class="l">218: </span>
<span class="l">219: </span>
<span class="l">220: </span>
<span class="l">221: </span>
<span class="l">222: </span>
<span class="l">223: </span>
<span class="l">224: </span>
<span class="l">225: </span>
<span class="l">226: </span>
<span class="l">227: </span>
<span class="l">228: </span>
<span class="l">229: </span>
<span class="l">230: </span>
<span class="l">231: </span>
<span class="l">232: </span>
<span class="l">233: </span>
<span class="l">234: </span>
<span class="l">235: </span>
<span class="l">236: </span>
<span class="l">237: </span>
<span class="l">238: </span>
<span class="l">239: </span>
<span class="l">240: </span>
<span class="l">241: </span>
<span class="l">242: </span>
<span class="l">243: </span>
<span class="l">244: </span>
<span class="l">245: </span>
<span class="l">246: </span>
<span class="l">247: </span>
<span class="l">248: </span>
<span class="l">249: </span>
<span class="l">250: </span>
<span class="l">251: </span>
<span class="l">252: </span>
<span class="l">253: </span>
<span class="l">254: </span>
<span class="l">255: </span>
<span class="l">256: </span>
<span class="l">257: </span>
<span class="l">258: </span>
<span class="l">259: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">LanguageCombinator</span>

<span class="k">open</span> <span class="i">FParsec</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>

<span class="k">exception</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">Error</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">string</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">Op</span> <span class="o">=</span> 
    | <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="p">Plus</span>
    | <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="p">Minus</span>
    | <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="p">GreaterThan</span>
    | <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="p">LessThan</span>
    | <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="p">Mult</span>
    | <span onmouseout="hideTip(event, 'fs11', 11)" onmouseover="showTip(event, 'fs11', 11)" class="p">Divide</span>
    | <span onmouseout="hideTip(event, 'fs12', 12)" onmouseover="showTip(event, 'fs12', 12)" class="p">Carrot</span>
       
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs13', 13)" onmouseover="showTip(event, 'fs13', 13)" class="t">Ast</span> <span class="o">=</span>     
    | <span onmouseout="hideTip(event, 'fs14', 14)" onmouseover="showTip(event, 'fs14', 14)" class="p">Statement</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="t">Ast</span>    
    | <span onmouseout="hideTip(event, 'fs15', 16)" onmouseover="showTip(event, 'fs15', 16)" class="p">Expression</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs16', 17)" onmouseover="showTip(event, 'fs16', 17)" class="t">Ex</span>    
    | <span onmouseout="hideTip(event, 'fs17', 18)" onmouseover="showTip(event, 'fs17', 18)" class="p">Function</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs4', 19)" onmouseover="showTip(event, 'fs4', 19)" class="t">string</span> <span onmouseout="hideTip(event, 'fs18', 20)" onmouseover="showTip(event, 'fs18', 20)" class="t">option</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs19', 21)" onmouseover="showTip(event, 'fs19', 21)" class="t">Argument</span> <span onmouseout="hideTip(event, 'fs20', 22)" onmouseover="showTip(event, 'fs20', 22)" class="t">list</span> <span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="t">option</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs13', 24)" onmouseover="showTip(event, 'fs13', 24)" class="t">Ast</span>
    | <span onmouseout="hideTip(event, 'fs21', 25)" onmouseover="showTip(event, 'fs21', 25)" class="p">Scope</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs13', 26)" onmouseover="showTip(event, 'fs13', 26)" class="t">Ast</span> <span onmouseout="hideTip(event, 'fs20', 27)" onmouseover="showTip(event, 'fs20', 27)" class="t">list</span> <span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="t">option</span>
    | <span onmouseout="hideTip(event, 'fs22', 29)" onmouseover="showTip(event, 'fs22', 29)" class="p">Class</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs16', 30)" onmouseover="showTip(event, 'fs16', 30)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs13', 31)" onmouseover="showTip(event, 'fs13', 31)" class="t">Ast</span>
    | <span onmouseout="hideTip(event, 'fs23', 32)" onmouseover="showTip(event, 'fs23', 32)" class="p">Conditional</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs16', 33)" onmouseover="showTip(event, 'fs16', 33)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs13', 34)" onmouseover="showTip(event, 'fs13', 34)" class="t">Ast</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs13', 35)" onmouseover="showTip(event, 'fs13', 35)" class="t">Ast</span> <span onmouseout="hideTip(event, 'fs18', 36)" onmouseover="showTip(event, 'fs18', 36)" class="t">option</span> 
    | <span onmouseout="hideTip(event, 'fs24', 37)" onmouseover="showTip(event, 'fs24', 37)" class="p">WhileLoop</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs16', 38)" onmouseover="showTip(event, 'fs16', 38)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs13', 39)" onmouseover="showTip(event, 'fs13', 39)" class="t">Ast</span>
    | <span onmouseout="hideTip(event, 'fs25', 40)" onmouseover="showTip(event, 'fs25', 40)" class="p">ForLoop</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs13', 41)" onmouseover="showTip(event, 'fs13', 41)" class="t">Ast</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs16', 42)" onmouseover="showTip(event, 'fs16', 42)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs16', 43)" onmouseover="showTip(event, 'fs16', 43)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs13', 44)" onmouseover="showTip(event, 'fs13', 44)" class="t">Ast</span>    
    | <span onmouseout="hideTip(event, 'fs26', 45)" onmouseover="showTip(event, 'fs26', 45)" class="p">Call</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs4', 46)" onmouseover="showTip(event, 'fs4', 46)" class="t">string</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs19', 47)" onmouseover="showTip(event, 'fs19', 47)" class="t">Argument</span> <span onmouseout="hideTip(event, 'fs20', 48)" onmouseover="showTip(event, 'fs20', 48)" class="t">list</span> <span onmouseout="hideTip(event, 'fs18', 49)" onmouseover="showTip(event, 'fs18', 49)" class="t">option</span>
    | <span onmouseout="hideTip(event, 'fs27', 50)" onmouseover="showTip(event, 'fs27', 50)" class="p">Assign</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs16', 51)" onmouseover="showTip(event, 'fs16', 51)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs16', 52)" onmouseover="showTip(event, 'fs16', 52)" class="t">Ex</span>
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs16', 53)" onmouseover="showTip(event, 'fs16', 53)" class="t">Ex</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs28', 54)" onmouseover="showTip(event, 'fs28', 54)" class="p">Single</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs13', 55)" onmouseover="showTip(event, 'fs13', 55)" class="t">Ast</span>
    | <span onmouseout="hideTip(event, 'fs29', 56)" onmouseover="showTip(event, 'fs29', 56)" class="p">Full</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs16', 57)" onmouseover="showTip(event, 'fs16', 57)" class="t">Ex</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs5', 58)" onmouseover="showTip(event, 'fs5', 58)" class="t">Op</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs16', 59)" onmouseover="showTip(event, 'fs16', 59)" class="t">Ex</span>
    | <span onmouseout="hideTip(event, 'fs30', 60)" onmouseover="showTip(event, 'fs30', 60)" class="p">Float</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs31', 61)" onmouseover="showTip(event, 'fs31', 61)" class="t">float</span>
    | <span onmouseout="hideTip(event, 'fs32', 62)" onmouseover="showTip(event, 'fs32', 62)" class="p">Int</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs33', 63)" onmouseover="showTip(event, 'fs33', 63)" class="t">int</span>
    | <span onmouseout="hideTip(event, 'fs34', 64)" onmouseover="showTip(event, 'fs34', 64)" class="p">Literal</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs4', 65)" onmouseover="showTip(event, 'fs4', 65)" class="t">string</span>
    | <span onmouseout="hideTip(event, 'fs35', 66)" onmouseover="showTip(event, 'fs35', 66)" class="p">Variable</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs4', 67)" onmouseover="showTip(event, 'fs4', 67)" class="t">string</span>
<span class="k">and</span> <span onmouseout="hideTip(event, 'fs19', 68)" onmouseover="showTip(event, 'fs19', 68)" class="t">Argument</span> <span class="o">=</span> 
    | <span onmouseout="hideTip(event, 'fs36', 69)" onmouseover="showTip(event, 'fs36', 69)" class="p">Element</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs16', 70)" onmouseover="showTip(event, 'fs16', 70)" class="t">Ex</span>

<span class="c">(* Literals *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 71)" onmouseover="showTip(event, 'fs37', 71)" class="i">semicolon</span> <span class="o">=</span> <span class="i">skipStringCI</span> <span class="s">&quot;;&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 72)" onmouseover="showTip(event, 'fs38', 72)" class="i">quote</span> <span class="o">=</span> <span class="i">skipStringCI</span> <span class="s">&quot;</span><span class="e">\&quot;</span><span class="s">&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 73)" onmouseover="showTip(event, 'fs39', 73)" class="i">literal</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 74)" onmouseover="showTip(event, 'fs38', 74)" class="i">quote</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">manyCharsTill</span> <span class="i">anyChar</span> <span onmouseout="hideTip(event, 'fs38', 75)" onmouseover="showTip(event, 'fs38', 75)" class="i">quote</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs34', 76)" onmouseover="showTip(event, 'fs34', 76)" class="p">Literal</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs40', 77)" onmouseover="showTip(event, 'fs40', 77)" class="i">floatNum</span> <span class="o">=</span> <span class="i">pfloat</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs30', 78)" onmouseover="showTip(event, 'fs30', 78)" class="p">Float</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 79)" onmouseover="showTip(event, 'fs41', 79)" class="i">intNum</span> <span class="o">=</span> <span class="i">pint32</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs32', 80)" onmouseover="showTip(event, 'fs32', 80)" class="p">Int</span>

<span class="c">(* Variables *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 81)" onmouseover="showTip(event, 'fs42', 81)" class="i">variable</span> <span class="o">=</span> <span class="i">many1Chars</span> (<span class="i">satisfy</span> <span class="i">isAsciiLetter</span>) <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs35', 82)" onmouseover="showTip(event, 'fs35', 82)" class="p">Variable</span>

<span class="c">(* Operators *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs43', 83)" onmouseover="showTip(event, 'fs43', 83)" class="i">plus</span> <span class="o">=</span> <span class="i">pstring</span> <span class="s">&quot;+&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs6', 84)" onmouseover="showTip(event, 'fs6', 84)" class="p">Plus</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 85)" onmouseover="showTip(event, 'fs44', 85)" class="i">minus</span> <span class="o">=</span> <span class="i">pstring</span> <span class="s">&quot;-&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs7', 86)" onmouseover="showTip(event, 'fs7', 86)" class="p">Minus</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs45', 87)" onmouseover="showTip(event, 'fs45', 87)" class="i">divide</span> <span class="o">=</span> <span class="i">pstring</span> <span class="s">&quot;/&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs11', 88)" onmouseover="showTip(event, 'fs11', 88)" class="p">Divide</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 89)" onmouseover="showTip(event, 'fs46', 89)" class="i">mult</span> <span class="o">=</span> <span class="i">pstring</span> <span class="s">&quot;*&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs10', 90)" onmouseover="showTip(event, 'fs10', 90)" class="p">Mult</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs47', 91)" onmouseover="showTip(event, 'fs47', 91)" class="i">carrot</span> <span class="o">=</span> <span class="i">pstring</span> <span class="s">&quot;^&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs12', 92)" onmouseover="showTip(event, 'fs12', 92)" class="p">Carrot</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 93)" onmouseover="showTip(event, 'fs48', 93)" class="i">gt</span> <span class="o">=</span> <span class="i">pstring</span> <span class="s">&quot;&gt;&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs8', 94)" onmouseover="showTip(event, 'fs8', 94)" class="p">GreaterThan</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs49', 95)" onmouseover="showTip(event, 'fs49', 95)" class="i">lt</span> <span class="o">=</span> <span class="i">pstring</span>  <span class="s">&quot;&lt;&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">%</span> <span onmouseout="hideTip(event, 'fs9', 96)" onmouseover="showTip(event, 'fs9', 96)" class="p">LessThan</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 97)" onmouseover="showTip(event, 'fs50', 97)" class="i">op</span> <span class="o">=</span> <span class="i">spaces</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">choice</span>[<span onmouseout="hideTip(event, 'fs43', 98)" onmouseover="showTip(event, 'fs43', 98)" class="i">plus</span>;<span onmouseout="hideTip(event, 'fs44', 99)" onmouseover="showTip(event, 'fs44', 99)" class="i">minus</span>;<span onmouseout="hideTip(event, 'fs45', 100)" onmouseover="showTip(event, 'fs45', 100)" class="i">divide</span>;<span onmouseout="hideTip(event, 'fs46', 101)" onmouseover="showTip(event, 'fs46', 101)" class="i">mult</span>;<span onmouseout="hideTip(event, 'fs47', 102)" onmouseover="showTip(event, 'fs47', 102)" class="i">carrot</span>;<span onmouseout="hideTip(event, 'fs48', 103)" onmouseover="showTip(event, 'fs48', 103)" class="i">gt</span>;<span onmouseout="hideTip(event, 'fs49', 104)" onmouseover="showTip(event, 'fs49', 104)" class="i">lt</span>]

<span class="c">(* expressions *)</span>

<span class="c">// create a forward reference </span>
<span class="c">// the expr is what we&#39;ll use in our parser combinators</span>
<span class="c">// the exprImpl we&#39;ll populate with all the recursive options later</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 105)" onmouseover="showTip(event, 'fs51', 105)" class="i">expr</span>, <span onmouseout="hideTip(event, 'fs52', 106)" onmouseover="showTip(event, 'fs52', 106)" class="v">exprImpl</span> <span class="o">=</span> <span class="i">createParserForwardedToRef</span>()

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 107)" onmouseover="showTip(event, 'fs53', 107)" class="i">expression1</span> <span class="o">=</span> <span class="i">spaces</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">?</span> <span class="i">choice</span>[<span onmouseout="hideTip(event, 'fs40', 108)" onmouseover="showTip(event, 'fs40', 108)" class="i">floatNum</span>;<span onmouseout="hideTip(event, 'fs41', 109)" onmouseover="showTip(event, 'fs41', 109)" class="i">intNum</span>;<span onmouseout="hideTip(event, 'fs39', 110)" onmouseover="showTip(event, 'fs39', 110)" class="i">literal</span>;<span onmouseout="hideTip(event, 'fs42', 111)" onmouseover="showTip(event, 'fs42', 111)" class="i">variable</span>] 

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 112)" onmouseover="showTip(event, 'fs54', 112)" class="f">between</span> <span onmouseout="hideTip(event, 'fs55', 113)" onmouseover="showTip(event, 'fs55', 113)" class="i">a</span> <span onmouseout="hideTip(event, 'fs56', 114)" onmouseover="showTip(event, 'fs56', 114)" class="i">b</span> <span onmouseout="hideTip(event, 'fs57', 115)" onmouseover="showTip(event, 'fs57', 115)" class="i">p</span> <span class="o">=</span> <span class="i">pstring</span> <span onmouseout="hideTip(event, 'fs55', 116)" onmouseover="showTip(event, 'fs55', 116)" class="i">a</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs57', 117)" onmouseover="showTip(event, 'fs57', 117)" class="i">p</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">pstring</span> <span onmouseout="hideTip(event, 'fs56', 118)" onmouseover="showTip(event, 'fs56', 118)" class="i">b</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 119)" onmouseover="showTip(event, 'fs58', 119)" class="i">bracketExpression</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 120)" onmouseover="showTip(event, 'fs51', 120)" class="i">expr</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs54', 121)" onmouseover="showTip(event, 'fs54', 121)" class="f">between</span> <span class="s">&quot;(&quot;</span> <span class="s">&quot;)&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs59', 122)" onmouseover="showTip(event, 'fs59', 122)" class="i">lhExpression</span> <span class="o">=</span> <span class="i">choice</span>[<span onmouseout="hideTip(event, 'fs53', 123)" onmouseover="showTip(event, 'fs53', 123)" class="i">expression1</span>; <span onmouseout="hideTip(event, 'fs58', 124)" onmouseover="showTip(event, 'fs58', 124)" class="i">bracketExpression</span>]

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 125)" onmouseover="showTip(event, 'fs60', 125)" class="i">expressionOpration</span> <span class="o">=</span>  <span onmouseout="hideTip(event, 'fs59', 126)" onmouseover="showTip(event, 'fs59', 126)" class="i">lhExpression</span>                           <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=?</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs61', 127)" onmouseover="showTip(event, 'fs61', 127)" class="i">operandL</span> <span class="k">-&gt;</span>
                          <span onmouseout="hideTip(event, 'fs50', 128)" onmouseover="showTip(event, 'fs50', 128)" class="i">op</span>                                     <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=?</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs62', 129)" onmouseover="showTip(event, 'fs62', 129)" class="i">operator</span> <span class="k">-&gt;</span>
                          <span class="i">choice</span>[<span onmouseout="hideTip(event, 'fs51', 130)" onmouseover="showTip(event, 'fs51', 130)" class="i">expr</span>;<span onmouseout="hideTip(event, 'fs58', 131)" onmouseover="showTip(event, 'fs58', 131)" class="i">bracketExpression</span>]         <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=?</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs63', 132)" onmouseover="showTip(event, 'fs63', 132)" class="i">operandR</span> <span class="k">-&gt;</span>
                          <span class="i">preturn</span> (<span onmouseout="hideTip(event, 'fs61', 133)" onmouseover="showTip(event, 'fs61', 133)" class="i">operandL</span>, <span onmouseout="hideTip(event, 'fs62', 134)" onmouseover="showTip(event, 'fs62', 134)" class="i">operator</span>, <span onmouseout="hideTip(event, 'fs63', 135)" onmouseover="showTip(event, 'fs63', 135)" class="i">operandR</span>) <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs29', 136)" onmouseover="showTip(event, 'fs29', 136)" class="p">Full</span> 

<span class="k">do</span> <span onmouseout="hideTip(event, 'fs52', 137)" onmouseover="showTip(event, 'fs52', 137)" class="v">exprImpl</span> <span class="o">:=</span> <span class="i">spaces</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">choice</span>[<span class="i">attempt</span> <span onmouseout="hideTip(event, 'fs60', 138)" onmouseover="showTip(event, 'fs60', 138)" class="i">expressionOpration</span>;
                                 <span class="i">attempt</span> <span onmouseout="hideTip(event, 'fs58', 139)" onmouseover="showTip(event, 'fs58', 139)" class="i">bracketExpression</span>; 
                                 <span onmouseout="hideTip(event, 'fs53', 140)" onmouseover="showTip(event, 'fs53', 140)" class="i">expression1</span>]

<span class="c">(* Scope *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs64', 141)" onmouseover="showTip(event, 'fs64', 141)" class="i">funcInners</span>, <span onmouseout="hideTip(event, 'fs65', 142)" onmouseover="showTip(event, 'fs65', 142)" class="v">funcInnersImpl</span> <span class="o">=</span> <span class="i">createParserForwardedToRef</span>()

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs66', 143)" onmouseover="showTip(event, 'fs66', 143)" class="i">scope</span> <span class="o">=</span> <span class="i">parse</span>{
    <span class="k">do!</span> <span class="i">spaces</span>
    <span class="k">do!</span> <span class="i">skipStringCI</span> <span class="s">&quot;{&quot;</span>
    <span class="k">do!</span> <span class="i">spaces</span>
    <span class="k">let!</span> <span class="i">text</span> <span class="o">=</span> <span class="i">opt</span> <span onmouseout="hideTip(event, 'fs64', 144)" onmouseover="showTip(event, 'fs64', 144)" class="i">funcInners</span>
    <span class="k">do!</span> <span class="i">spaces</span>
    <span class="k">do!</span> <span class="i">skipStringCI</span> <span class="s">&quot;}&quot;</span>    
    <span class="k">do!</span> <span class="i">spaces</span>
    <span class="k">return</span> <span onmouseout="hideTip(event, 'fs21', 145)" onmouseover="showTip(event, 'fs21', 145)" class="i">Scope</span>(<span class="i">text</span>)
}

<span class="c">(* Classes *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs67', 146)" onmouseover="showTip(event, 'fs67', 146)" class="i">classItem</span> <span class="o">=</span> <span class="i">parse</span>{
    <span class="k">do!</span> <span class="i">skipStringCI</span> <span class="s">&quot;class&quot;</span>
    <span class="k">do!</span> <span class="i">spaces</span>
    <span class="k">let!</span> <span class="i">name</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs42', 147)" onmouseover="showTip(event, 'fs42', 147)" class="i">variable</span>    
    <span class="k">let!</span> <span class="i">classStatements</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs66', 148)" onmouseover="showTip(event, 'fs66', 148)" class="i">scope</span>
    <span class="k">do!</span> <span class="i">spaces</span>
    <span class="k">return</span> <span onmouseout="hideTip(event, 'fs22', 149)" onmouseover="showTip(event, 'fs22', 149)" class="i">Class</span>(<span class="i">name</span>, <span class="i">classStatements</span>)
}    

<span class="c">(* Functions *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs68', 150)" onmouseover="showTip(event, 'fs68', 150)" class="i">innerArgs</span> <span class="o">=</span> <span class="i">sepEndBy1</span> (<span onmouseout="hideTip(event, 'fs51', 151)" onmouseover="showTip(event, 'fs51', 151)" class="i">expr</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs36', 152)" onmouseover="showTip(event, 'fs36', 152)" class="i">Element</span>) (<span class="i">pstring</span> <span class="s">&quot;,&quot;</span>)
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs69', 153)" onmouseover="showTip(event, 'fs69', 153)" class="i">arguments</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs68', 154)" onmouseover="showTip(event, 'fs68', 154)" class="i">innerArgs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs54', 155)" onmouseover="showTip(event, 'fs54', 155)" class="f">between</span> <span class="s">&quot;(&quot;</span> <span class="s">&quot;)&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs70', 156)" onmouseover="showTip(event, 'fs70', 156)" class="i">func</span> <span class="o">=</span> <span class="i">parse</span> {
    <span class="k">do!</span> <span class="i">skipStringCI</span> <span class="s">&quot;func&quot;</span>
    <span class="k">do!</span> <span class="i">spaces</span>
    <span class="k">let!</span> <span class="i">name</span> <span class="o">=</span> <span class="i">opt</span> (<span class="i">many1Chars</span> (<span class="i">satisfy</span> <span class="i">isAsciiLetter</span>))
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs69', 157)" onmouseover="showTip(event, 'fs69', 157)" class="i">arguments</span> <span class="o">=</span> <span class="i">opt</span> <span onmouseout="hideTip(event, 'fs69', 158)" onmouseover="showTip(event, 'fs69', 158)" class="i">arguments</span>
    <span class="k">do!</span> <span class="i">spaces</span> 
    <span class="k">do!</span> <span class="i">skipStringCI</span> <span class="s">&quot;-&gt;&quot;</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs66', 159)" onmouseover="showTip(event, 'fs66', 159)" class="i">scope</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs66', 160)" onmouseover="showTip(event, 'fs66', 160)" class="i">scope</span>
    <span class="k">return</span> <span onmouseout="hideTip(event, 'fs17', 161)" onmouseover="showTip(event, 'fs17', 161)" class="i">Function</span>(<span class="i">name</span>, <span onmouseout="hideTip(event, 'fs69', 162)" onmouseover="showTip(event, 'fs69', 162)" class="i">arguments</span>, <span onmouseout="hideTip(event, 'fs66', 163)" onmouseover="showTip(event, 'fs66', 163)" class="i">scope</span>)
}


<span class="c">(* Conditionals *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs71', 164)" onmouseover="showTip(event, 'fs71', 164)" class="i">conditionalParser</span>, <span onmouseout="hideTip(event, 'fs72', 165)" onmouseover="showTip(event, 'fs72', 165)" class="v">conditionalParserImpl</span> <span class="o">=</span> <span class="i">createParserForwardedToRef</span>()

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs73', 166)" onmouseover="showTip(event, 'fs73', 166)" class="i">ifBlock</span> <span class="o">=</span> <span class="i">parse</span>{
    <span class="k">do!</span> <span class="i">skipStringCI</span> <span class="s">&quot;if&quot;</span>
    <span class="k">let!</span> <span class="i">condition</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 167)" onmouseover="showTip(event, 'fs51', 167)" class="i">expr</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs54', 168)" onmouseover="showTip(event, 'fs54', 168)" class="i">between</span> <span class="s">&quot;(&quot;</span> <span class="s">&quot;)&quot;</span>
    <span class="k">do!</span> <span class="i">spaces</span>
    <span class="k">let!</span> <span class="i">onTrue</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs66', 169)" onmouseover="showTip(event, 'fs66', 169)" class="i">scope</span>
    <span class="k">do!</span> <span class="i">spaces</span>

    <span class="k">let</span> <span class="i">elseKeyword</span> <span class="o">=</span> <span class="i">skipStringCI</span> <span class="s">&quot;else&quot;</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">spaces</span>

    <span class="k">let</span> <span class="i">elseParse</span> <span class="o">=</span> <span class="i">parse</span>{
        <span class="k">do!</span> <span class="i">elseKeyword</span>
        <span class="k">let!</span> <span class="i">onFalse</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs66', 170)" onmouseover="showTip(event, 'fs66', 170)" class="i">scope</span>
        <span class="k">return</span> (<span class="i">condition</span>, <span class="i">onTrue</span>, <span onmouseout="hideTip(event, 'fs74', 171)" onmouseover="showTip(event, 'fs74', 171)" class="i">Some</span>(<span class="i">onFalse</span>)) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 172)" onmouseover="showTip(event, 'fs23', 172)" class="i">Conditional</span>
    }

    <span class="k">let</span> <span class="i">elseIfParse</span> <span class="o">=</span> <span class="i">parse</span>{
        <span class="k">do!</span> <span class="i">elseKeyword</span>
        <span class="k">let!</span> <span class="i">onFalse</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs71', 173)" onmouseover="showTip(event, 'fs71', 173)" class="i">conditionalParser</span>
        <span class="k">return</span> (<span class="i">condition</span>, <span class="i">onTrue</span>, <span onmouseout="hideTip(event, 'fs74', 174)" onmouseover="showTip(event, 'fs74', 174)" class="i">Some</span>(<span class="i">onFalse</span>)) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 175)" onmouseover="showTip(event, 'fs23', 175)" class="i">Conditional</span>
    }

    <span class="k">let</span> <span class="i">noElseParse</span> <span class="o">=</span> <span class="i">parse</span>{        
        <span class="k">return</span> (<span class="i">condition</span>, <span class="i">onTrue</span>, <span onmouseout="hideTip(event, 'fs75', 176)" onmouseover="showTip(event, 'fs75', 176)" class="i">None</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 177)" onmouseover="showTip(event, 'fs23', 177)" class="i">Conditional</span>
    }

    <span class="k">let!</span> <span class="i">result</span> <span class="o">=</span> <span class="i">choice</span>[<span class="i">attempt</span> <span class="i">elseIfParse</span>;<span class="i">elseParse</span>;<span class="i">noElseParse</span>]
    <span class="k">return</span> <span class="i">result</span>
}

<span class="k">do</span> <span onmouseout="hideTip(event, 'fs72', 178)" onmouseover="showTip(event, 'fs72', 178)" class="v">conditionalParserImpl</span><span class="o">:=</span> <span onmouseout="hideTip(event, 'fs73', 179)" onmouseover="showTip(event, 'fs73', 179)" class="i">ifBlock</span> 

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs76', 180)" onmouseover="showTip(event, 'fs76', 180)" class="i">conditional</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs73', 181)" onmouseover="showTip(event, 'fs73', 181)" class="i">ifBlock</span> 

<span class="c">(* Assignment *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs77', 182)" onmouseover="showTip(event, 'fs77', 182)" class="i">assign</span> <span class="o">=</span> <span class="i">parse</span>{
    <span class="k">let!</span> <span class="i">ex</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 183)" onmouseover="showTip(event, 'fs51', 183)" class="i">expr</span>
    <span class="k">do!</span> <span class="i">spaces</span>
    <span class="k">do!</span> <span class="i">skipStringCI</span> <span class="s">&quot;=&quot;</span>
    <span class="k">do!</span> <span class="i">spaces</span>
    <span class="k">let!</span> <span class="i">assignEx</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 184)" onmouseover="showTip(event, 'fs51', 184)" class="i">expr</span>
    <span class="k">do!</span> <span class="i">spaces</span>    
    <span class="k">return</span> (<span class="i">ex</span>, <span class="i">assignEx</span>) <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs27', 185)" onmouseover="showTip(event, 'fs27', 185)" class="i">Assign</span>
}

<span class="c">(* Loops *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs78', 186)" onmouseover="showTip(event, 'fs78', 186)" class="i">whileLoop</span> <span class="o">=</span> (<span class="i">pstring</span> <span class="s">&quot;while&quot;</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">spaces</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> (<span onmouseout="hideTip(event, 'fs51', 187)" onmouseover="showTip(event, 'fs51', 187)" class="i">expr</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs54', 188)" onmouseover="showTip(event, 'fs54', 188)" class="f">between</span> <span class="s">&quot;(&quot;</span> <span class="s">&quot;)&quot;</span>) <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs79', 189)" onmouseover="showTip(event, 'fs79', 189)" class="i">predicate</span> <span class="k">-&gt;</span>
                <span onmouseout="hideTip(event, 'fs66', 190)" onmouseover="showTip(event, 'fs66', 190)" class="i">scope</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs80', 191)" onmouseover="showTip(event, 'fs80', 191)" class="i">body</span> <span class="k">-&gt;</span>
                <span class="i">preturn</span> (<span onmouseout="hideTip(event, 'fs24', 192)" onmouseover="showTip(event, 'fs24', 192)" class="i">WhileLoop</span>(<span onmouseout="hideTip(event, 'fs79', 193)" onmouseover="showTip(event, 'fs79', 193)" class="i">predicate</span>, <span onmouseout="hideTip(event, 'fs80', 194)" onmouseover="showTip(event, 'fs80', 194)" class="i">body</span>))


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs81', 195)" onmouseover="showTip(event, 'fs81', 195)" class="i">forLoop</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs82', 196)" onmouseover="showTip(event, 'fs82', 196)" class="i">startCondition</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs77', 197)" onmouseover="showTip(event, 'fs77', 197)" class="i">assign</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">pstring</span> <span class="s">&quot;;&quot;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs83', 198)" onmouseover="showTip(event, 'fs83', 198)" class="i">predicate</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 199)" onmouseover="showTip(event, 'fs51', 199)" class="i">expr</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">pstring</span> <span class="s">&quot;;&quot;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs84', 200)" onmouseover="showTip(event, 'fs84', 200)" class="i">endCondition</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 201)" onmouseover="showTip(event, 'fs51', 201)" class="i">expr</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs85', 202)" onmouseover="showTip(event, 'fs85', 202)" class="i">forKeyword</span> <span class="o">=</span> <span class="i">pstring</span> <span class="s">&quot;for&quot;</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">spaces</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs86', 203)" onmouseover="showTip(event, 'fs86', 203)" class="i">forItems</span> <span class="o">=</span> <span class="i">tuple3</span> <span onmouseout="hideTip(event, 'fs82', 204)" onmouseover="showTip(event, 'fs82', 204)" class="i">startCondition</span> <span onmouseout="hideTip(event, 'fs83', 205)" onmouseover="showTip(event, 'fs83', 205)" class="i">predicate</span> <span onmouseout="hideTip(event, 'fs84', 206)" onmouseover="showTip(event, 'fs84', 206)" class="i">endCondition</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs54', 207)" onmouseover="showTip(event, 'fs54', 207)" class="f">between</span> <span class="s">&quot;(&quot;</span> <span class="s">&quot;)&quot;</span>

    <span onmouseout="hideTip(event, 'fs85', 208)" onmouseover="showTip(event, 'fs85', 208)" class="i">forKeyword</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span onmouseout="hideTip(event, 'fs86', 209)" onmouseover="showTip(event, 'fs86', 209)" class="i">forItems</span> <span class="o">.</span><span class="o">&gt;&gt;.</span> <span onmouseout="hideTip(event, 'fs66', 210)" onmouseover="showTip(event, 'fs66', 210)" class="i">scope</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">=</span> <span class="k">fun</span> ((<span onmouseout="hideTip(event, 'fs87', 211)" onmouseover="showTip(event, 'fs87', 211)" class="i">s</span>, <span onmouseout="hideTip(event, 'fs88', 212)" onmouseover="showTip(event, 'fs88', 212)" class="i">p</span>, <span onmouseout="hideTip(event, 'fs89', 213)" onmouseover="showTip(event, 'fs89', 213)" class="i">e</span>), <span onmouseout="hideTip(event, 'fs56', 214)" onmouseover="showTip(event, 'fs56', 214)" class="i">b</span>) <span class="k">-&gt;</span>
        <span class="i">preturn</span> (<span class="i">s</span>, <span class="i">p</span>, <span class="i">e</span>, <span onmouseout="hideTip(event, 'fs56', 215)" onmouseover="showTip(event, 'fs56', 215)" class="i">b</span>) <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs25', 216)" onmouseover="showTip(event, 'fs25', 216)" class="p">ForLoop</span>
        

<span class="c">(* Function calls *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs90', 217)" onmouseover="showTip(event, 'fs90', 217)" class="i">call</span> <span class="o">=</span> <span class="i">parse</span>{
    <span class="k">let!</span> <span class="i">name</span> <span class="o">=</span> <span class="i">many1Chars</span> (<span class="i">satisfy</span> <span class="i">isAsciiLetter</span>)
    <span class="k">do!</span> <span class="i">spaces</span>
    <span class="k">do!</span> <span class="i">skipStringCI</span> <span class="s">&quot;(&quot;</span>
    <span class="k">let!</span> <span class="i">args</span> <span class="o">=</span> <span class="i">opt</span> <span onmouseout="hideTip(event, 'fs68', 218)" onmouseover="showTip(event, 'fs68', 218)" class="i">innerArgs</span>
    <span class="k">do!</span> <span class="i">spaces</span>
    <span class="k">do!</span> <span class="i">skipStringCI</span> <span class="s">&quot;)&quot;</span>
    <span class="k">do!</span> <span class="i">spaces</span>
    <span class="k">return</span> <span onmouseout="hideTip(event, 'fs26', 219)" onmouseover="showTip(event, 'fs26', 219)" class="i">Call</span>(<span class="i">name</span>, <span class="i">args</span>)
}           


<span class="c">(* Statements *)</span>


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs91', 220)" onmouseover="showTip(event, 'fs91', 220)" class="i">delineatedStatement</span> <span class="o">=</span> <span class="i">choice</span>[
                                 <span class="i">attempt</span> <span onmouseout="hideTip(event, 'fs90', 221)" onmouseover="showTip(event, 'fs90', 221)" class="i">call</span>;
                                 <span class="i">attempt</span> <span onmouseout="hideTip(event, 'fs77', 222)" onmouseover="showTip(event, 'fs77', 222)" class="i">assign</span>;
                                 <span onmouseout="hideTip(event, 'fs51', 223)" onmouseover="showTip(event, 'fs51', 223)" class="i">expr</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs15', 224)" onmouseover="showTip(event, 'fs15', 224)" class="i">Expression</span>
                                ] <span class="o">.</span><span class="o">&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs37', 225)" onmouseover="showTip(event, 'fs37', 225)" class="i">semicolon</span> <span class="o">|&gt;&gt;</span> <span onmouseout="hideTip(event, 'fs14', 226)" onmouseover="showTip(event, 'fs14', 226)" class="p">Statement</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs92', 227)" onmouseover="showTip(event, 'fs92', 227)" class="i">statement</span> <span class="o">=</span> <span class="i">choice</span>[
                        <span onmouseout="hideTip(event, 'fs76', 228)" onmouseover="showTip(event, 'fs76', 228)" class="i">conditional</span>;
                        <span onmouseout="hideTip(event, 'fs78', 229)" onmouseover="showTip(event, 'fs78', 229)" class="i">whileLoop</span>;
                        <span onmouseout="hideTip(event, 'fs81', 230)" onmouseover="showTip(event, 'fs81', 230)" class="i">forLoop</span>;                  
                        <span onmouseout="hideTip(event, 'fs91', 231)" onmouseover="showTip(event, 'fs91', 231)" class="i">delineatedStatement</span>
                     ]
                                           

<span class="c">(* things that can be in functions *)</span>

<span class="k">do</span> <span onmouseout="hideTip(event, 'fs65', 232)" onmouseover="showTip(event, 'fs65', 232)" class="v">funcInnersImpl</span> <span class="o">:=</span> <span class="i">many1</span> (<span class="i">spaces</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">?</span> <span class="i">choice</span> [<span onmouseout="hideTip(event, 'fs66', 233)" onmouseover="showTip(event, 'fs66', 233)" class="i">scope</span>; <span onmouseout="hideTip(event, 'fs70', 234)" onmouseover="showTip(event, 'fs70', 234)" class="i">func</span>; <span onmouseout="hideTip(event, 'fs92', 235)" onmouseover="showTip(event, 'fs92', 235)" class="i">statement</span>])

<span class="c">(* Things can be in the program root *)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs93', 236)" onmouseover="showTip(event, 'fs93', 236)" class="i">programLines</span> <span class="o">=</span> <span class="i">spaces</span> <span class="o">&gt;</span><span class="o">&gt;</span><span class="o">.</span> <span class="i">choice</span>[
                                        <span onmouseout="hideTip(event, 'fs67', 237)" onmouseover="showTip(event, 'fs67', 237)" class="i">classItem</span>;
                                        <span onmouseout="hideTip(event, 'fs70', 238)" onmouseover="showTip(event, 'fs70', 238)" class="i">func</span>;
                                        <span onmouseout="hideTip(event, 'fs66', 239)" onmouseover="showTip(event, 'fs66', 239)" class="i">scope</span>;
                                        <span onmouseout="hideTip(event, 'fs92', 240)" onmouseover="showTip(event, 'fs92', 240)" class="i">statement</span>
                                    ]

<span class="c">(* The full program *)</span>
                                    
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs94', 241)" onmouseover="showTip(event, 'fs94', 241)" class="i">program</span> <span class="o">=</span> <span class="i">many</span> <span onmouseout="hideTip(event, 'fs93', 242)" onmouseover="showTip(event, 'fs93', 242)" class="i">programLines</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs95', 243)" onmouseover="showTip(event, 'fs95', 243)" class="f">test</span> <span onmouseout="hideTip(event, 'fs96', 244)" onmouseover="showTip(event, 'fs96', 244)" class="i">input</span> <span class="o">=</span> <span class="k">match</span> <span class="i">run</span> (<span onmouseout="hideTip(event, 'fs94', 245)" onmouseover="showTip(event, 'fs94', 245)" class="i">program</span> <span class="o">.</span><span class="o">&gt;&gt;</span> <span class="i">eof</span>) <span onmouseout="hideTip(event, 'fs96', 246)" onmouseover="showTip(event, 'fs96', 246)" class="i">input</span> <span class="k">with</span>
                    | <span class="i">Success</span>(<span class="i">r</span>,_,_) <span class="k">-&gt;</span> <span class="i">r</span>
                    | <span onmouseout="hideTip(event, 'fs97', 247)" onmouseover="showTip(event, 'fs97', 247)" class="i">Failure</span>(<span class="i">r</span>,_,_) <span class="k">-&gt;</span> 
                            <span onmouseout="hideTip(event, 'fs98', 248)" onmouseover="showTip(event, 'fs98', 248)" class="i">Console</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs99', 249)" onmouseover="showTip(event, 'fs99', 249)" class="i">WriteLine</span> <span class="i">r</span>
                            <span onmouseout="hideTip(event, 'fs100', 250)" onmouseover="showTip(event, 'fs100', 250)" class="i">raise</span> (<span onmouseout="hideTip(event, 'fs3', 251)" onmouseover="showTip(event, 'fs3', 251)" class="i">Error</span>(<span class="i">r</span>))
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module LanguageCombinator</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">exception Error of string<br /><br />Full name: LanguageCombinator.Error</div>
<div class="tip" id="fs4">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs5">type Op =<br />&#160;&#160;| Plus<br />&#160;&#160;| Minus<br />&#160;&#160;| GreaterThan<br />&#160;&#160;| LessThan<br />&#160;&#160;| Mult<br />&#160;&#160;| Divide<br />&#160;&#160;| Carrot<br /><br />Full name: LanguageCombinator.Op</div>
<div class="tip" id="fs6">union case Op.Plus: Op</div>
<div class="tip" id="fs7">union case Op.Minus: Op</div>
<div class="tip" id="fs8">union case Op.GreaterThan: Op</div>
<div class="tip" id="fs9">union case Op.LessThan: Op</div>
<div class="tip" id="fs10">union case Op.Mult: Op</div>
<div class="tip" id="fs11">union case Op.Divide: Op</div>
<div class="tip" id="fs12">union case Op.Carrot: Op</div>
<div class="tip" id="fs13">type Ast =<br />&#160;&#160;| Statement of Ast<br />&#160;&#160;| Expression of Ex<br />&#160;&#160;| Function of string option * Argument list option * Ast<br />&#160;&#160;| Scope of Ast list option<br />&#160;&#160;| Class of Ex * Ast<br />&#160;&#160;| Conditional of Ex * Ast * Ast option<br />&#160;&#160;| WhileLoop of Ex * Ast<br />&#160;&#160;| ForLoop of Ast * Ex * Ex * Ast<br />&#160;&#160;| Call of string * Argument list option<br />&#160;&#160;| Assign of Ex * Ex<br /><br />Full name: LanguageCombinator.Ast</div>
<div class="tip" id="fs14">union case Ast.Statement: Ast -&gt; Ast</div>
<div class="tip" id="fs15">union case Ast.Expression: Ex -&gt; Ast</div>
<div class="tip" id="fs16">type Ex =<br />&#160;&#160;| Single of Ast<br />&#160;&#160;| Full of Ex * Op * Ex<br />&#160;&#160;| Float of float<br />&#160;&#160;| Int of int<br />&#160;&#160;| Literal of string<br />&#160;&#160;| Variable of string<br /><br />Full name: LanguageCombinator.Ex</div>
<div class="tip" id="fs17">union case Ast.Function: string option * Argument list option * Ast -&gt; Ast</div>
<div class="tip" id="fs18">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs19">type Argument = | Element of Ex<br /><br />Full name: LanguageCombinator.Argument</div>
<div class="tip" id="fs20">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs21">union case Ast.Scope: Ast list option -&gt; Ast</div>
<div class="tip" id="fs22">Multiple items<br />union case Ast.Class: Ex * Ast -&gt; Ast<br /><br />--------------------<br />type ClassAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; ClassAttribute<br /><br />Full name: Microsoft.FSharp.Core.ClassAttribute<br /><br />--------------------<br />new : unit -&gt; ClassAttribute</div>
<div class="tip" id="fs23">union case Ast.Conditional: Ex * Ast * Ast option -&gt; Ast</div>
<div class="tip" id="fs24">union case Ast.WhileLoop: Ex * Ast -&gt; Ast</div>
<div class="tip" id="fs25">union case Ast.ForLoop: Ast * Ex * Ex * Ast -&gt; Ast</div>
<div class="tip" id="fs26">union case Ast.Call: string * Argument list option -&gt; Ast</div>
<div class="tip" id="fs27">union case Ast.Assign: Ex * Ex -&gt; Ast</div>
<div class="tip" id="fs28">Multiple items<br />union case Ex.Single: Ast -&gt; Ex<br /><br />--------------------<br />type Single =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 3 overloads<br />&#160;&#160;&#160;&#160;static val MinValue : float32<br />&#160;&#160;&#160;&#160;static val Epsilon : float32<br />&#160;&#160;&#160;&#160;static val MaxValue : float32<br />&#160;&#160;&#160;&#160;static val PositiveInfinity : float32<br />&#160;&#160;&#160;&#160;static val NegativeInfinity : float32<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Single</div>
<div class="tip" id="fs29">union case Ex.Full: Ex * Op * Ex -&gt; Ex</div>
<div class="tip" id="fs30">union case Ex.Float: float -&gt; Ex</div>
<div class="tip" id="fs31">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs32">union case Ex.Int: int -&gt; Ex</div>
<div class="tip" id="fs33">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs34">Multiple items<br />union case Ex.Literal: string -&gt; Ex<br /><br />--------------------<br />type LiteralAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; LiteralAttribute<br /><br />Full name: Microsoft.FSharp.Core.LiteralAttribute<br /><br />--------------------<br />new : unit -&gt; LiteralAttribute</div>
<div class="tip" id="fs35">union case Ex.Variable: string -&gt; Ex</div>
<div class="tip" id="fs36">union case Argument.Element: Ex -&gt; Argument</div>
<div class="tip" id="fs37">val semicolon : obj<br /><br />Full name: LanguageCombinator.semicolon</div>
<div class="tip" id="fs38">val quote : obj<br /><br />Full name: LanguageCombinator.quote</div>
<div class="tip" id="fs39">val literal : obj<br /><br />Full name: LanguageCombinator.literal</div>
<div class="tip" id="fs40">val floatNum : &#39;_arg3<br /><br />Full name: LanguageCombinator.floatNum</div>
<div class="tip" id="fs41">val intNum : &#39;_arg3<br /><br />Full name: LanguageCombinator.intNum</div>
<div class="tip" id="fs42">val variable : &#39;_arg3<br /><br />Full name: LanguageCombinator.variable</div>
<div class="tip" id="fs43">val plus : &#39;_arg3<br /><br />Full name: LanguageCombinator.plus</div>
<div class="tip" id="fs44">val minus : &#39;_arg3<br /><br />Full name: LanguageCombinator.minus</div>
<div class="tip" id="fs45">val divide : &#39;_arg3<br /><br />Full name: LanguageCombinator.divide</div>
<div class="tip" id="fs46">val mult : &#39;_arg3<br /><br />Full name: LanguageCombinator.mult</div>
<div class="tip" id="fs47">val carrot : &#39;_arg3<br /><br />Full name: LanguageCombinator.carrot</div>
<div class="tip" id="fs48">val gt : &#39;_arg3<br /><br />Full name: LanguageCombinator.gt</div>
<div class="tip" id="fs49">val lt : &#39;_arg3<br /><br />Full name: LanguageCombinator.lt</div>
<div class="tip" id="fs50">val op : &#39;_arg3 (requires member ( &gt;&gt;=? ))<br /><br />Full name: LanguageCombinator.op</div>
<div class="tip" id="fs51">val expr : &#39;a (requires member ( &gt;&gt;. ) and member ( .&gt;&gt; ) and member ( .&gt;&gt; ) and member ( &gt;&gt;. ) and member ( &gt;&gt;. ) and member ( &gt;&gt;= ) and member ( .&gt;&gt;. ) and member ( &gt;&gt;= ) and member ( &gt;&gt;= ))<br /><br />Full name: LanguageCombinator.expr</div>
<div class="tip" id="fs52">val exprImpl : &#39;_arg3 ref<br /><br />Full name: LanguageCombinator.exprImpl</div>
<div class="tip" id="fs53">val expression1 : &#39;_arg3<br /><br />Full name: LanguageCombinator.expression1</div>
<div class="tip" id="fs54">val between : a:&#39;a -&gt; b:&#39;b -&gt; p:&#39;c -&gt; &#39;_arg3 (requires member ( &gt;&gt;. ) and member ( .&gt;&gt; ) and member ( .&gt;&gt; ) and member ( &gt;&gt;. ) and member ( &gt;&gt;. ) and member ( &gt;&gt;= ) and member ( .&gt;&gt;. ) and member ( &gt;&gt;= ) and member ( &gt;&gt;= ))<br /><br />Full name: LanguageCombinator.between</div>
<div class="tip" id="fs55">val a : &#39;a</div>
<div class="tip" id="fs56">val b : &#39;a</div>
<div class="tip" id="fs57">val p : &#39;a (requires member ( &gt;&gt;. ) and member ( .&gt;&gt; ) and member ( .&gt;&gt; ) and member ( &gt;&gt;. ) and member ( &gt;&gt;. ) and member ( &gt;&gt;= ) and member ( .&gt;&gt;. ) and member ( &gt;&gt;= ) and member ( &gt;&gt;= ))</div>
<div class="tip" id="fs58">val bracketExpression : &#39;_arg3 (requires member ( &gt;&gt;. ) and member ( &gt;&gt;. ) and member ( &gt;&gt;= ) and member ( .&gt;&gt;. ) and member ( &gt;&gt;= ) and member ( &gt;&gt;= ))<br /><br />Full name: LanguageCombinator.bracketExpression</div>
<div class="tip" id="fs59">val lhExpression : &#39;a (requires member ( &gt;&gt;=? ))<br /><br />Full name: LanguageCombinator.lhExpression</div>
<div class="tip" id="fs60">val expressionOpration : &#39;_arg3<br /><br />Full name: LanguageCombinator.expressionOpration</div>
<div class="tip" id="fs61">val operandL : &#39;a</div>
<div class="tip" id="fs62">val operator : &#39;a</div>
<div class="tip" id="fs63">val operandR : &#39;a</div>
<div class="tip" id="fs64">val funcInners : &#39;a<br /><br />Full name: LanguageCombinator.funcInners</div>
<div class="tip" id="fs65">val funcInnersImpl : &#39;a ref<br /><br />Full name: LanguageCombinator.funcInnersImpl</div>
<div class="tip" id="fs66">val scope : &#39;a (requires member ( &gt;&gt;= ) and member ( .&gt;&gt;. ) and member ( &gt;&gt;= ))<br /><br />Full name: LanguageCombinator.scope</div>
<div class="tip" id="fs67">val classItem : &#39;a<br /><br />Full name: LanguageCombinator.classItem</div>
<div class="tip" id="fs68">val innerArgs : &#39;a (requires member ( &gt;&gt;. ) and member ( .&gt;&gt; ) and member ( .&gt;&gt; ) and member ( &gt;&gt;. ) and member ( &gt;&gt;. ) and member ( &gt;&gt;= ) and member ( .&gt;&gt;. ) and member ( &gt;&gt;= ) and member ( &gt;&gt;= ))<br /><br />Full name: LanguageCombinator.innerArgs</div>
<div class="tip" id="fs69">val arguments : &#39;_arg3 (requires member ( &gt;&gt;. ) and member ( &gt;&gt;. ) and member ( &gt;&gt;= ) and member ( .&gt;&gt;. ) and member ( &gt;&gt;= ) and member ( &gt;&gt;= ))<br /><br />Full name: LanguageCombinator.arguments</div>
<div class="tip" id="fs70">val func : &#39;a<br /><br />Full name: LanguageCombinator.func</div>
<div class="tip" id="fs71">val conditionalParser : &#39;a<br /><br />Full name: LanguageCombinator.conditionalParser</div>
<div class="tip" id="fs72">val conditionalParserImpl : &#39;a ref<br /><br />Full name: LanguageCombinator.conditionalParserImpl</div>
<div class="tip" id="fs73">val ifBlock : &#39;a<br /><br />Full name: LanguageCombinator.ifBlock</div>
<div class="tip" id="fs74">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs75">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs76">val conditional : &#39;a<br /><br />Full name: LanguageCombinator.conditional</div>
<div class="tip" id="fs77">val assign : &#39;a (requires member ( .&gt;&gt; ))<br /><br />Full name: LanguageCombinator.assign</div>
<div class="tip" id="fs78">val whileLoop : &#39;_arg3<br /><br />Full name: LanguageCombinator.whileLoop</div>
<div class="tip" id="fs79">val predicate : &#39;a</div>
<div class="tip" id="fs80">val body : &#39;a</div>
<div class="tip" id="fs81">val forLoop : &#39;_arg12<br /><br />Full name: LanguageCombinator.forLoop</div>
<div class="tip" id="fs82">val startCondition : &#39;_arg3</div>
<div class="tip" id="fs83">val predicate : &#39;_arg6</div>
<div class="tip" id="fs84">val endCondition : &#39;a (requires member ( &gt;&gt;. ) and member ( .&gt;&gt; ) and member ( .&gt;&gt; ) and member ( &gt;&gt;. ) and member ( &gt;&gt;. ) and member ( &gt;&gt;= ) and member ( .&gt;&gt;. ) and member ( &gt;&gt;= ) and member ( &gt;&gt;= ))</div>
<div class="tip" id="fs85">val forKeyword : &#39;_arg9 (requires member ( &gt;&gt;. ) and member ( &gt;&gt;. ) and member ( &gt;&gt;= ) and member ( .&gt;&gt;. ) and member ( &gt;&gt;= ) and member ( &gt;&gt;= ))</div>
<div class="tip" id="fs86">val forItems : &#39;_arg3 (requires member ( &gt;&gt;. ) and member ( &gt;&gt;. ) and member ( &gt;&gt;= ) and member ( .&gt;&gt;. ) and member ( &gt;&gt;= ) and member ( &gt;&gt;= ))</div>
<div class="tip" id="fs87">val s : &#39;a</div>
<div class="tip" id="fs88">val p : &#39;a</div>
<div class="tip" id="fs89">val e : &#39;a</div>
<div class="tip" id="fs90">val call : &#39;a<br /><br />Full name: LanguageCombinator.call</div>
<div class="tip" id="fs91">val delineatedStatement : obj<br /><br />Full name: LanguageCombinator.delineatedStatement</div>
<div class="tip" id="fs92">val statement : &#39;a<br /><br />Full name: LanguageCombinator.statement</div>
<div class="tip" id="fs93">val programLines : &#39;_arg3<br /><br />Full name: LanguageCombinator.programLines</div>
<div class="tip" id="fs94">val program : &#39;a<br /><br />Full name: LanguageCombinator.program</div>
<div class="tip" id="fs95">val test : input:&#39;a -&gt; &#39;b<br /><br />Full name: LanguageCombinator.test</div>
<div class="tip" id="fs96">val input : &#39;a</div>
<div class="tip" id="fs97">Multiple items<br />val Failure : message:string -&gt; exn<br /><br />Full name: Microsoft.FSharp.Core.Operators.Failure<br /><br />--------------------<br />active recognizer Failure: exn -&gt; string option<br /><br />Full name: Microsoft.FSharp.Core.Operators.( |Failure|_| )</div>
<div class="tip" id="fs98">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...<br /><br />Full name: System.Console</div>
<div class="tip" id="fs99">Console.WriteLine() : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: obj) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: decimal) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs100">val raise : exn:Exception -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.raise</div>

