<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="prep">#r</span> <span class="s">&quot;WindowsBase&quot;</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Diagnostics</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">ComponentModel</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 5)" onmouseover="showTip(event, 'fs1', 5)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">Threading</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 7)" onmouseover="showTip(event, 'fs1', 7)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="i">Threading</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="i">Tasks</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 10)" onmouseover="showTip(event, 'fs1', 10)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="i">Windows</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="i">Threading</span>
<span class="k">open</span> <span class="k">global</span><span class="o">.</span><span class="i">Xunit</span><span class="o">.</span><span class="i">Sdk</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="t">StaCase</span>(<span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">testCase</span>) <span class="o">=</span>
        <span class="c">//attempted translation of https://github.com/xunit/samples.xunit/blob/master/STAExamples/WpfTestCase.cs#L57-L68</span>
        <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="f">RunAsync</span>(<span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="i">diagnosticMessageSink</span>, <span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="i">messageBus</span>, <span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="i">constructorArguments</span>, <span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="i">aggregator</span>, <span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="i">cancellationTokensource</span>) <span class="o">=</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 21)" onmouseover="showTip(event, 'fs16', 21)" class="i">tcs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="i">TaskCompletionSource</span><span class="o">&lt;</span><span class="i">RunSummary</span><span class="o">&gt;</span>()
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="i">thread</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 24)" onmouseover="showTip(event, 'fs19', 24)" class="t">Thread</span>(<span class="k">fun</span> () <span class="k">-&gt;</span>
                <span class="k">try</span>
                    <span onmouseout="hideTip(event, 'fs20', 25)" onmouseover="showTip(event, 'fs20', 25)" class="t">SynchronizationContext</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 26)" onmouseover="showTip(event, 'fs21', 26)" class="f">SetSynchronizationContext</span>(<span onmouseout="hideTip(event, 'fs22', 27)" onmouseover="showTip(event, 'fs22', 27)" class="t">DispatcherSynchronizationContext</span>())
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 28)" onmouseover="showTip(event, 'fs23', 28)" class="i">testCaseTask</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 29)" onmouseover="showTip(event, 'fs9', 29)" class="i">testCase</span><span class="o">.</span><span class="i">RunAsync</span>(<span onmouseout="hideTip(event, 'fs11', 30)" onmouseover="showTip(event, 'fs11', 30)" class="i">diagnosticMessageSink</span>, <span onmouseout="hideTip(event, 'fs12', 31)" onmouseover="showTip(event, 'fs12', 31)" class="i">messageBus</span>, <span onmouseout="hideTip(event, 'fs13', 32)" onmouseover="showTip(event, 'fs13', 32)" class="i">constructorArguments</span>, <span onmouseout="hideTip(event, 'fs14', 33)" onmouseover="showTip(event, 'fs14', 33)" class="i">aggregator</span>, <span onmouseout="hideTip(event, 'fs15', 34)" onmouseover="showTip(event, 'fs15', 34)" class="i">cancellationTokensource</span>)
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 35)" onmouseover="showTip(event, 'fs24', 35)" class="i">frame</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 36)" onmouseover="showTip(event, 'fs25', 36)" class="t">DispatcherFrame</span>()
                    <span class="k">try</span>
                        <span onmouseout="hideTip(event, 'fs23', 37)" onmouseover="showTip(event, 'fs23', 37)" class="i">testCaseTask</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs26', 38)" onmouseover="showTip(event, 'fs26', 38)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 39)" onmouseover="showTip(event, 'fs27', 39)" class="f">AwaitIAsyncResult</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs26', 40)" onmouseover="showTip(event, 'fs26', 40)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 41)" onmouseover="showTip(event, 'fs28', 41)" class="f">Ignore</span>
                    <span class="k">finally</span>
                        <span onmouseout="hideTip(event, 'fs24', 42)" onmouseover="showTip(event, 'fs24', 42)" class="i">frame</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 43)" onmouseover="showTip(event, 'fs29', 43)" class="i">Continue</span> <span class="o">&lt;-</span> <span class="k">false</span>
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs26', 44)" onmouseover="showTip(event, 'fs26', 44)" class="t">Async</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 45)" onmouseover="showTip(event, 'fs30', 45)" class="f">RunSynchronously</span>
                    <span onmouseout="hideTip(event, 'fs31', 46)" onmouseover="showTip(event, 'fs31', 46)" class="t">Dispatcher</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 47)" onmouseover="showTip(event, 'fs32', 47)" class="f">PushFrame</span> <span onmouseout="hideTip(event, 'fs24', 48)" onmouseover="showTip(event, 'fs24', 48)" class="i">frame</span>
                    <span class="i">StaTestCase</span><span class="o">.</span><span class="i">CopyTaskResultFrom</span>(<span onmouseout="hideTip(event, 'fs16', 49)" onmouseover="showTip(event, 'fs16', 49)" class="i">tcs</span>,<span onmouseout="hideTip(event, 'fs23', 50)" onmouseover="showTip(event, 'fs23', 50)" class="i">testCaseTask</span>)

                    <span onmouseout="hideTip(event, 'fs16', 51)" onmouseover="showTip(event, 'fs16', 51)" class="i">tcs</span><span class="o">.</span><span class="i">SetResult</span>(<span onmouseout="hideTip(event, 'fs23', 52)" onmouseover="showTip(event, 'fs23', 52)" class="i">testCaseTask</span><span class="o">.</span><span class="i">Result</span>)
                <span class="k">with</span> <span onmouseout="hideTip(event, 'fs33', 53)" onmouseover="showTip(event, 'fs33', 53)" class="i">ex</span> <span class="k">-&gt;</span>
                    <span onmouseout="hideTip(event, 'fs16', 54)" onmouseover="showTip(event, 'fs16', 54)" class="i">tcs</span><span class="o">.</span><span class="i">SetException</span> <span onmouseout="hideTip(event, 'fs33', 55)" onmouseover="showTip(event, 'fs33', 55)" class="i">ex</span>
            )
            <span onmouseout="hideTip(event, 'fs18', 56)" onmouseover="showTip(event, 'fs18', 56)" class="i">thread</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 57)" onmouseover="showTip(event, 'fs34', 57)" class="f">SetApartmentState</span> <span onmouseout="hideTip(event, 'fs35', 58)" onmouseover="showTip(event, 'fs35', 58)" class="t">ApartmentState</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 59)" onmouseover="showTip(event, 'fs36', 59)" class="i">STA</span>
            <span onmouseout="hideTip(event, 'fs18', 60)" onmouseover="showTip(event, 'fs18', 60)" class="i">thread</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 61)" onmouseover="showTip(event, 'fs37', 61)" class="f">Start</span>()
            <span onmouseout="hideTip(event, 'fs16', 62)" onmouseover="showTip(event, 'fs16', 62)" class="i">tcs</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 63)" onmouseover="showTip(event, 'fs38', 63)" class="i">Task</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Diagnostics</div>
<div class="tip" id="fs3">namespace System.ComponentModel</div>
<div class="tip" id="fs4">namespace System.Threading</div>
<div class="tip" id="fs5">namespace System.Threading.Tasks</div>
<div class="tip" id="fs6">namespace System.Windows</div>
<div class="tip" id="fs7">namespace System.Windows.Threading</div>
<div class="tip" id="fs8">Multiple items<br />type StaCase =<br />&#160;&#160;new : testCase:obj -&gt; StaCase<br />&#160;&#160;member RunAsync : diagnosticMessageSink:&#39;a * messageBus:&#39;b * constructorArguments:&#39;c * aggregator:&#39;d * cancellationTokensource:&#39;e -&gt; &#39;f<br /><br />Full name: Script.StaCase<br /><br />--------------------<br />new : testCase:obj -&gt; StaCase</div>
<div class="tip" id="fs9">val testCase : obj</div>
<div class="tip" id="fs10">member StaCase.RunAsync : diagnosticMessageSink:&#39;a * messageBus:&#39;b * constructorArguments:&#39;c * aggregator:&#39;d * cancellationTokensource:&#39;e -&gt; &#39;f<br /><br />Full name: Script.StaCase.RunAsync</div>
<div class="tip" id="fs11">val diagnosticMessageSink : &#39;a</div>
<div class="tip" id="fs12">val messageBus : &#39;b</div>
<div class="tip" id="fs13">val constructorArguments : &#39;c</div>
<div class="tip" id="fs14">val aggregator : &#39;d</div>
<div class="tip" id="fs15">val cancellationTokensource : &#39;e</div>
<div class="tip" id="fs16">val tcs : obj</div>
<div class="tip" id="fs17">Multiple items<br />type TaskCompletionSource&lt;&#39;TResult&gt; =<br />&#160;&#160;new : unit -&gt; TaskCompletionSource&lt;&#39;TResult&gt; + 3 overloads<br />&#160;&#160;member SetCanceled : unit -&gt; unit<br />&#160;&#160;member SetException : exception:Exception -&gt; unit + 1 overload<br />&#160;&#160;member SetResult : result:&#39;TResult -&gt; unit<br />&#160;&#160;member Task : Task&lt;&#39;TResult&gt;<br />&#160;&#160;member TrySetCanceled : unit -&gt; bool<br />&#160;&#160;member TrySetException : exception:Exception -&gt; bool + 1 overload<br />&#160;&#160;member TrySetResult : result:&#39;TResult -&gt; bool<br /><br />Full name: System.Threading.Tasks.TaskCompletionSource&lt;_&gt;<br /><br />--------------------<br />TaskCompletionSource() : unit<br />TaskCompletionSource(creationOptions: TaskCreationOptions) : unit<br />TaskCompletionSource(state: obj) : unit<br />TaskCompletionSource(state: obj, creationOptions: TaskCreationOptions) : unit</div>
<div class="tip" id="fs18">val thread : Thread</div>
<div class="tip" id="fs19">Multiple items<br />type Thread =<br />&#160;&#160;inherit CriticalFinalizerObject<br />&#160;&#160;new : start:ThreadStart -&gt; Thread + 3 overloads<br />&#160;&#160;member Abort : unit -&gt; unit + 1 overload<br />&#160;&#160;member ApartmentState : ApartmentState with get, set<br />&#160;&#160;member CurrentCulture : CultureInfo with get, set<br />&#160;&#160;member CurrentUICulture : CultureInfo with get, set<br />&#160;&#160;member DisableComObjectEagerCleanup : unit -&gt; unit<br />&#160;&#160;member ExecutionContext : ExecutionContext<br />&#160;&#160;member GetApartmentState : unit -&gt; ApartmentState<br />&#160;&#160;member GetCompressedStack : unit -&gt; CompressedStack<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.Threading.Thread<br /><br />--------------------<br />Thread(start: ThreadStart) : unit<br />Thread(start: ParameterizedThreadStart) : unit<br />Thread(start: ThreadStart, maxStackSize: int) : unit<br />Thread(start: ParameterizedThreadStart, maxStackSize: int) : unit</div>
<div class="tip" id="fs20">Multiple items<br />type SynchronizationContext =<br />&#160;&#160;new : unit -&gt; SynchronizationContext<br />&#160;&#160;member CreateCopy : unit -&gt; SynchronizationContext<br />&#160;&#160;member IsWaitNotificationRequired : unit -&gt; bool<br />&#160;&#160;member OperationCompleted : unit -&gt; unit<br />&#160;&#160;member OperationStarted : unit -&gt; unit<br />&#160;&#160;member Post : d:SendOrPostCallback * state:obj -&gt; unit<br />&#160;&#160;member Send : d:SendOrPostCallback * state:obj -&gt; unit<br />&#160;&#160;member Wait : waitHandles:nativeint[] * waitAll:bool * millisecondsTimeout:int -&gt; int<br />&#160;&#160;static member Current : SynchronizationContext<br />&#160;&#160;static member SetSynchronizationContext : syncContext:SynchronizationContext -&gt; unit<br /><br />Full name: System.Threading.SynchronizationContext<br /><br />--------------------<br />SynchronizationContext() : unit</div>
<div class="tip" id="fs21">SynchronizationContext.SetSynchronizationContext(syncContext: SynchronizationContext) : unit</div>
<div class="tip" id="fs22">Multiple items<br />type DispatcherSynchronizationContext =<br />&#160;&#160;inherit SynchronizationContext<br />&#160;&#160;new : unit -&gt; DispatcherSynchronizationContext + 1 overload<br />&#160;&#160;member CreateCopy : unit -&gt; SynchronizationContext<br />&#160;&#160;member Post : d:SendOrPostCallback * state:obj -&gt; unit<br />&#160;&#160;member Send : d:SendOrPostCallback * state:obj -&gt; unit<br />&#160;&#160;member Wait : waitHandles:nativeint[] * waitAll:bool * millisecondsTimeout:int -&gt; int<br /><br />Full name: System.Windows.Threading.DispatcherSynchronizationContext<br /><br />--------------------<br />DispatcherSynchronizationContext() : unit<br />DispatcherSynchronizationContext(dispatcher: Dispatcher) : unit</div>
<div class="tip" id="fs23">val testCaseTask : System.IAsyncResult</div>
<div class="tip" id="fs24">val frame : DispatcherFrame</div>
<div class="tip" id="fs25">Multiple items<br />type DispatcherFrame =<br />&#160;&#160;inherit DispatcherObject<br />&#160;&#160;new : unit -&gt; DispatcherFrame + 1 overload<br />&#160;&#160;member Continue : bool with get, set<br /><br />Full name: System.Windows.Threading.DispatcherFrame<br /><br />--------------------<br />DispatcherFrame() : unit<br />DispatcherFrame(exitWhenRequested: bool) : unit</div>
<div class="tip" id="fs26">Multiple items<br />type Async<br />static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member AwaitTask : task:Task -&gt; Async&lt;unit&gt;<br />static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />static member CancelDefaultToken : unit -&gt; unit<br />static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg:&#39;Arg1 * beginAction:(&#39;Arg1 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * beginAction:(&#39;Arg1 * &#39;Arg2 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromBeginEnd : arg1:&#39;Arg1 * arg2:&#39;Arg2 * arg3:&#39;Arg3 * beginAction:(&#39;Arg1 * &#39;Arg2 * &#39;Arg3 * AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member FromContinuations : callback:((&#39;T -&gt; unit) * (exn -&gt; unit) * (OperationCanceledException -&gt; unit) -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;<br />static member OnCancel : interruption:(unit -&gt; unit) -&gt; Async&lt;IDisposable&gt;<br />static member Parallel : computations:seq&lt;Async&lt;&#39;T&gt;&gt; -&gt; Async&lt;&#39;T []&gt;<br />static member RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T<br />static member Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;<br />static member Start : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:CancellationToken -&gt; Task&lt;&#39;T&gt;<br />static member StartChild : computation:Async&lt;&#39;T&gt; * ?millisecondsTimeout:int -&gt; Async&lt;Async&lt;&#39;T&gt;&gt;<br />static member StartChildAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions -&gt; Async&lt;Task&lt;&#39;T&gt;&gt;<br />static member StartImmediate : computation:Async&lt;unit&gt; * ?cancellationToken:CancellationToken -&gt; unit<br />static member StartWithContinuations : computation:Async&lt;&#39;T&gt; * continuation:(&#39;T -&gt; unit) * exceptionContinuation:(exn -&gt; unit) * cancellationContinuation:(OperationCanceledException -&gt; unit) * ?cancellationToken:CancellationToken -&gt; unit<br />static member SwitchToContext : syncContext:SynchronizationContext -&gt; Async&lt;unit&gt;<br />static member SwitchToNewThread : unit -&gt; Async&lt;unit&gt;<br />static member SwitchToThreadPool : unit -&gt; Async&lt;unit&gt;<br />static member TryCancelled : computation:Async&lt;&#39;T&gt; * compensation:(OperationCanceledException -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />static member CancellationToken : Async&lt;CancellationToken&gt;<br />static member DefaultCancellationToken : CancellationToken<br /><br />Full name: Microsoft.FSharp.Control.Async<br /><br />--------------------<br />type Async&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Control.Async&lt;_&gt;</div>
<div class="tip" id="fs27">static member Async.AwaitIAsyncResult : iar:System.IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;</div>
<div class="tip" id="fs28">static member Async.Ignore : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs29">property DispatcherFrame.Continue: bool</div>
<div class="tip" id="fs30">static member Async.RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:CancellationToken -&gt; &#39;T</div>
<div class="tip" id="fs31">type Dispatcher =<br />&#160;&#160;member BeginInvoke : priority:DispatcherPriority * method:Delegate -&gt; DispatcherOperation + 4 overloads<br />&#160;&#160;member BeginInvokeShutdown : priority:DispatcherPriority -&gt; unit<br />&#160;&#160;member CheckAccess : unit -&gt; bool<br />&#160;&#160;member DisableProcessing : unit -&gt; DispatcherProcessingDisabled<br />&#160;&#160;member HasShutdownFinished : bool<br />&#160;&#160;member HasShutdownStarted : bool<br />&#160;&#160;member Hooks : DispatcherHooks<br />&#160;&#160;member Invoke : priority:DispatcherPriority * method:Delegate -&gt; obj + 9 overloads<br />&#160;&#160;member InvokeShutdown : unit -&gt; unit<br />&#160;&#160;member Thread : Thread<br />&#160;&#160;...<br /><br />Full name: System.Windows.Threading.Dispatcher</div>
<div class="tip" id="fs32">Dispatcher.PushFrame(frame: DispatcherFrame) : unit</div>
<div class="tip" id="fs33">val ex : exn</div>
<div class="tip" id="fs34">Thread.SetApartmentState(state: ApartmentState) : unit</div>
<div class="tip" id="fs35">type ApartmentState =<br />&#160;&#160;| STA = 0<br />&#160;&#160;| MTA = 1<br />&#160;&#160;| Unknown = 2<br /><br />Full name: System.Threading.ApartmentState</div>
<div class="tip" id="fs36">field ApartmentState.STA = 0</div>
<div class="tip" id="fs37">Thread.Start() : unit<br />Thread.Start(parameter: obj) : unit</div>
<div class="tip" id="fs38">Multiple items<br />type Task =<br />&#160;&#160;new : action:Action -&gt; Task + 7 overloads<br />&#160;&#160;member AsyncState : obj<br />&#160;&#160;member ContinueWith : continuationAction:Action&lt;Task&gt; -&gt; Task + 9 overloads<br />&#160;&#160;member CreationOptions : TaskCreationOptions<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member Exception : AggregateException<br />&#160;&#160;member Id : int<br />&#160;&#160;member IsCanceled : bool<br />&#160;&#160;member IsCompleted : bool<br />&#160;&#160;member IsFaulted : bool<br />&#160;&#160;...<br /><br />Full name: System.Threading.Tasks.Task<br /><br />--------------------<br />type Task&lt;&#39;TResult&gt; =<br />&#160;&#160;inherit Task<br />&#160;&#160;new : function:Func&lt;&#39;TResult&gt; -&gt; Task&lt;&#39;TResult&gt; + 7 overloads<br />&#160;&#160;member ContinueWith : continuationAction:Action&lt;Task&lt;&#39;TResult&gt;&gt; -&gt; Task + 9 overloads<br />&#160;&#160;member Result : &#39;TResult with get, set<br />&#160;&#160;static member Factory : TaskFactory&lt;&#39;TResult&gt;<br /><br />Full name: System.Threading.Tasks.Task&lt;_&gt;<br /><br />--------------------<br />Task(action: System.Action) : unit<br />Task(action: System.Action, cancellationToken: CancellationToken) : unit<br />Task(action: System.Action, creationOptions: TaskCreationOptions) : unit<br />Task(action: System.Action&lt;obj&gt;, state: obj) : unit<br />Task(action: System.Action, cancellationToken: CancellationToken, creationOptions: TaskCreationOptions) : unit<br />Task(action: System.Action&lt;obj&gt;, state: obj, cancellationToken: CancellationToken) : unit<br />Task(action: System.Action&lt;obj&gt;, state: obj, creationOptions: TaskCreationOptions) : unit<br />Task(action: System.Action&lt;obj&gt;, state: obj, cancellationToken: CancellationToken, creationOptions: TaskCreationOptions) : unit<br /><br />--------------------<br />Task(function: System.Func&lt;&#39;TResult&gt;) : unit<br />Task(function: System.Func&lt;&#39;TResult&gt;, cancellationToken: CancellationToken) : unit<br />Task(function: System.Func&lt;&#39;TResult&gt;, creationOptions: TaskCreationOptions) : unit<br />Task(function: System.Func&lt;obj,&#39;TResult&gt;, state: obj) : unit<br />Task(function: System.Func&lt;&#39;TResult&gt;, cancellationToken: CancellationToken, creationOptions: TaskCreationOptions) : unit<br />Task(function: System.Func&lt;obj,&#39;TResult&gt;, state: obj, cancellationToken: CancellationToken) : unit<br />Task(function: System.Func&lt;obj,&#39;TResult&gt;, state: obj, creationOptions: TaskCreationOptions) : unit<br />Task(function: System.Func&lt;obj,&#39;TResult&gt;, state: obj, cancellationToken: CancellationToken, creationOptions: TaskCreationOptions) : unit</div>

