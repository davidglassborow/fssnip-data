<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp">[&lt;<span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">RequireQualifiedAccess</span>&gt;]
<span class="k">module</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="t">Array</span> <span class="o">=</span>
    [&lt;<span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="t">RequireQualifiedAccess</span>&gt;]
    <span class="k">module</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="t">Parallel</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="f">filter</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="f">predicate</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">array</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">array</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs2', 9)" onmouseover="showTip(event, 'fs2', 9)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="t">Parallel</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="f">choose</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="i">x</span> <span class="k">-&gt;</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs5', 13)" onmouseover="showTip(event, 'fs5', 13)" class="f">predicate</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">x</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs9', 16)" onmouseover="showTip(event, 'fs9', 16)" class="i">x</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="p">None</span>)

<span class="k">module</span> <span class="t">NumericLiteralG</span> <span class="o">=</span>
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="f">FromZero</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="t">LanguagePrimitives</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="i">GenericZero</span>
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="f">FromOne</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="t">LanguagePrimitives</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="i">GenericOne</span>

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="f">isNumPalindrome</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="i">number</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 26)" onmouseover="showTip(event, 'fs19', 26)" class="i">ten</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 27)" onmouseover="showTip(event, 'fs20', 27)" class="i">two</span> <span class="o">=</span> <span class="n">1G</span> <span class="o">+</span> <span class="n">1G</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 28)" onmouseover="showTip(event, 'fs21', 28)" class="i">three</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 29)" onmouseover="showTip(event, 'fs20', 29)" class="i">two</span> <span class="o">+</span> <span class="n">1G</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 30)" onmouseover="showTip(event, 'fs22', 30)" class="i">five</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="i">three</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs20', 32)" onmouseover="showTip(event, 'fs20', 32)" class="i">two</span>
        <span onmouseout="hideTip(event, 'fs22', 33)" onmouseover="showTip(event, 'fs22', 33)" class="i">five</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs22', 34)" onmouseover="showTip(event, 'fs22', 34)" class="i">five</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 35)" onmouseover="showTip(event, 'fs23', 35)" class="i">hundred</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs19', 36)" onmouseover="showTip(event, 'fs19', 36)" class="i">ten</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs19', 37)" onmouseover="showTip(event, 'fs19', 37)" class="i">ten</span>

    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs24', 38)" onmouseover="showTip(event, 'fs24', 38)" class="f">findHighDiv</span> <span onmouseout="hideTip(event, 'fs25', 39)" onmouseover="showTip(event, 'fs25', 39)" class="i">div</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 40)" onmouseover="showTip(event, 'fs26', 40)" class="i">div&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 41)" onmouseover="showTip(event, 'fs25', 41)" class="i">div</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs19', 42)" onmouseover="showTip(event, 'fs19', 42)" class="i">ten</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs18', 43)" onmouseover="showTip(event, 'fs18', 43)" class="i">number</span> <span class="o">/</span> <span onmouseout="hideTip(event, 'fs26', 44)" onmouseover="showTip(event, 'fs26', 44)" class="i">div&#39;</span> <span class="k">with</span>
          | <span onmouseout="hideTip(event, 'fs27', 45)" onmouseover="showTip(event, 'fs27', 45)" class="i">x</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs27', 46)" onmouseover="showTip(event, 'fs27', 46)" class="i">x</span> <span class="o">=</span> <span class="n">0G</span>    <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 47)" onmouseover="showTip(event, 'fs25', 47)" class="i">div</span>
          | _                <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs24', 48)" onmouseover="showTip(event, 'fs24', 48)" class="f">findHighDiv</span> <span onmouseout="hideTip(event, 'fs26', 49)" onmouseover="showTip(event, 'fs26', 49)" class="i">div&#39;</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs28', 50)" onmouseover="showTip(event, 'fs28', 50)" class="f">impl</span> <span onmouseout="hideTip(event, 'fs29', 51)" onmouseover="showTip(event, 'fs29', 51)" class="i">n</span> <span class="o">=</span> <span class="k">function</span>
      | <span onmouseout="hideTip(event, 'fs30', 52)" onmouseover="showTip(event, 'fs30', 52)" class="i">x</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs30', 53)" onmouseover="showTip(event, 'fs30', 53)" class="i">x</span> <span class="o">=</span> <span class="n">0G</span>    <span class="k">-&gt;</span> <span class="k">true</span>
      | <span onmouseout="hideTip(event, 'fs25', 54)" onmouseover="showTip(event, 'fs25', 54)" class="i">div</span>              <span class="k">-&gt;</span> <span class="k">match</span> <span onmouseout="hideTip(event, 'fs29', 55)" onmouseover="showTip(event, 'fs29', 55)" class="i">n</span> <span class="o">/</span> <span onmouseout="hideTip(event, 'fs25', 56)" onmouseover="showTip(event, 'fs25', 56)" class="i">div</span>, <span onmouseout="hideTip(event, 'fs29', 57)" onmouseover="showTip(event, 'fs29', 57)" class="i">n</span> <span class="o">%</span> <span onmouseout="hideTip(event, 'fs19', 58)" onmouseover="showTip(event, 'fs19', 58)" class="i">ten</span> <span class="k">with</span>
                              | <span onmouseout="hideTip(event, 'fs31', 59)" onmouseover="showTip(event, 'fs31', 59)" class="i">a</span>, <span onmouseout="hideTip(event, 'fs32', 60)" onmouseover="showTip(event, 'fs32', 60)" class="i">b</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs31', 61)" onmouseover="showTip(event, 'fs31', 61)" class="i">a</span> <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs32', 62)" onmouseover="showTip(event, 'fs32', 62)" class="i">b</span> <span class="k">-&gt;</span> <span class="k">false</span>
                              | _                <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs28', 63)" onmouseover="showTip(event, 'fs28', 63)" class="f">impl</span> (<span onmouseout="hideTip(event, 'fs29', 64)" onmouseover="showTip(event, 'fs29', 64)" class="i">n</span> <span class="o">%</span> <span onmouseout="hideTip(event, 'fs25', 65)" onmouseover="showTip(event, 'fs25', 65)" class="i">div</span> <span class="o">/</span> <span onmouseout="hideTip(event, 'fs19', 66)" onmouseover="showTip(event, 'fs19', 66)" class="i">ten</span>) (<span onmouseout="hideTip(event, 'fs25', 67)" onmouseover="showTip(event, 'fs25', 67)" class="i">div</span> <span class="o">/</span> <span onmouseout="hideTip(event, 'fs23', 68)" onmouseover="showTip(event, 'fs23', 68)" class="i">hundred</span>)
    <span onmouseout="hideTip(event, 'fs28', 69)" onmouseover="showTip(event, 'fs28', 69)" class="f">impl</span> <span onmouseout="hideTip(event, 'fs18', 70)" onmouseover="showTip(event, 'fs18', 70)" class="i">number</span> (<span onmouseout="hideTip(event, 'fs24', 71)" onmouseover="showTip(event, 'fs24', 71)" class="f">findHighDiv</span> <span class="n">1G</span>)

<span class="k">do</span>
    <span onmouseout="hideTip(event, 'fs33', 72)" onmouseover="showTip(event, 'fs33', 72)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 73)" onmouseover="showTip(event, 'fs34', 73)" class="t">Parallel</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 74)" onmouseover="showTip(event, 'fs35', 74)" class="f">init</span> <span class="n">900</span> ((<span class="o">+</span>) <span class="n">100</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs36', 75)" onmouseover="showTip(event, 'fs36', 75)" class="i">n</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs33', 76)" onmouseover="showTip(event, 'fs33', 76)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 77)" onmouseover="showTip(event, 'fs37', 77)" class="f">init</span> (<span class="n">1000</span> <span class="o">-</span> <span onmouseout="hideTip(event, 'fs36', 78)" onmouseover="showTip(event, 'fs36', 78)" class="i">n</span>) ((<span class="o">+</span>) <span onmouseout="hideTip(event, 'fs36', 79)" onmouseover="showTip(event, 'fs36', 79)" class="i">n</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span class="o">(*)</span> <span onmouseout="hideTip(event, 'fs36', 80)" onmouseover="showTip(event, 'fs36', 80)" class="i">n</span>))
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs33', 81)" onmouseover="showTip(event, 'fs33', 81)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs38', 82)" onmouseover="showTip(event, 'fs38', 82)" class="f">concat</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs33', 83)" onmouseover="showTip(event, 'fs33', 83)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 84)" onmouseover="showTip(event, 'fs34', 84)" class="t">Parallel</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 85)" onmouseover="showTip(event, 'fs4', 85)" class="f">filter</span> <span onmouseout="hideTip(event, 'fs17', 86)" onmouseover="showTip(event, 'fs17', 86)" class="f">isNumPalindrome</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs33', 87)" onmouseover="showTip(event, 'fs33', 87)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 88)" onmouseover="showTip(event, 'fs39', 88)" class="f">max</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs40', 89)" onmouseover="showTip(event, 'fs40', 89)" class="i">stdout</span><span class="o">.</span><span class="f">WriteLine</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />type RequireQualifiedAccessAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; RequireQualifiedAccessAttribute<br /><br />Full name: Microsoft.FSharp.Core.RequireQualifiedAccessAttribute<br /><br />--------------------<br />new : unit -&gt; RequireQualifiedAccessAttribute</div>
<div class="tip" id="fs2">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs3">module Parallel<br /><br />from Script.Array</div>
<div class="tip" id="fs4">val filter : predicate:(&#39;a -&gt; bool) -&gt; array:&#39;a [] -&gt; &#39;a []<br /><br />Full name: Script.Array.Parallel.filter</div>
<div class="tip" id="fs5">val predicate : (&#39;a -&gt; bool)</div>
<div class="tip" id="fs6">Multiple items<br />val array : &#39;a []<br /><br />--------------------<br />type &#39;T array = &#39;T []<br /><br />Full name: Microsoft.FSharp.Core.array&lt;_&gt;</div>
<div class="tip" id="fs7">module Parallel<br /><br />from Microsoft.FSharp.Collections.ArrayModule</div>
<div class="tip" id="fs8">val choose : chooser:(&#39;T -&gt; &#39;U option) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.ArrayModule.Parallel.choose</div>
<div class="tip" id="fs9">val x : &#39;a</div>
<div class="tip" id="fs10">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs11">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs12">val FromZero : unit -&gt; &#39;a (requires member get_Zero)<br /><br />Full name: Script.NumericLiteralG.FromZero</div>
<div class="tip" id="fs13">module LanguagePrimitives<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs14">val GenericZero&lt;&#39;T (requires member get_Zero)&gt; : &#39;T (requires member get_Zero)<br /><br />Full name: Microsoft.FSharp.Core.LanguagePrimitives.GenericZero</div>
<div class="tip" id="fs15">val FromOne : unit -&gt; &#39;a (requires member get_One)<br /><br />Full name: Script.NumericLiteralG.FromOne</div>
<div class="tip" id="fs16">val GenericOne&lt;&#39;T (requires member get_One)&gt; : &#39;T (requires member get_One)<br /><br />Full name: Microsoft.FSharp.Core.LanguagePrimitives.GenericOne</div>
<div class="tip" id="fs17">val isNumPalindrome : number:&#39;a -&gt; bool (requires member ( / ) and member ( % ) and member ( % ) and member get_One and member ( / ) and member get_Zero and member ( * ) and equality and member ( * ) and member ( / ) and member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One and member get_Zero and equality)<br /><br />Full name: Script.isNumPalindrome</div>
<div class="tip" id="fs18">val number : &#39;a (requires member ( / ) and member ( % ) and member ( % ) and member get_One and member ( / ) and member get_Zero and member ( * ) and equality and member ( * ) and member ( / ) and member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One and member get_Zero and equality)</div>
<div class="tip" id="fs19">val ten : &#39;d (requires member ( * ) and member ( * ) and member ( % ) and member ( / ) and member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One and member ( / ) and member get_One and member get_Zero and member ( % ) and member ( / ) and equality and member get_Zero and equality)</div>
<div class="tip" id="fs20">val two : &#39;g (requires member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One and member ( + ) and member ( * ) and member ( * ) and member ( % ) and member ( / ) and member ( / ) and member get_One and member get_Zero and member ( % ) and member ( / ) and equality and member get_Zero and equality)</div>
<div class="tip" id="fs21">val three : &#39;f (requires member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One and member ( + ) and member ( * ) and member ( * ) and member ( % ) and member ( / ) and member ( / ) and member get_One and member get_Zero and member ( % ) and member ( / ) and equality and member get_Zero and equality)</div>
<div class="tip" id="fs22">val five : &#39;e (requires member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One and member ( * ) and member ( * ) and member ( % ) and member ( / ) and member ( / ) and member get_One and member get_Zero and member ( % ) and member ( / ) and equality and member get_Zero and equality)</div>
<div class="tip" id="fs23">val hundred : &#39;c (requires member ( / ) and member ( * ) and member ( * ) and member ( % ) and member ( / ) and member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One and member get_One and member get_Zero and member ( % ) and member ( / ) and equality and member get_Zero and equality)</div>
<div class="tip" id="fs24">val findHighDiv : (&#39;b -&gt; &#39;b) (requires member get_One and member ( / ) and member get_Zero and member ( % ) and member ( / ) and member ( * ) and equality and member ( * ) and member ( % ) and member ( / ) and member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One and member get_Zero and equality)</div>
<div class="tip" id="fs25">val div : &#39;b (requires member get_One and member ( / ) and member get_Zero and member ( % ) and member ( / ) and member ( * ) and equality and member ( * ) and member ( % ) and member ( / ) and member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One and member get_Zero and equality)</div>
<div class="tip" id="fs26">val div&#39; : &#39;b (requires member get_One and member ( / ) and member get_Zero and member ( % ) and member ( / ) and member ( * ) and equality and member ( * ) and member ( % ) and member ( / ) and member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One and member get_Zero and equality)</div>
<div class="tip" id="fs27">val x : &#39;k (requires member get_Zero and equality and member ( / ) and member ( % ) and member ( % ) and member get_One and member ( / ) and member get_Zero and member ( * ) and equality and member ( * ) and member ( / ) and member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One)</div>
<div class="tip" id="fs28">val impl : (&#39;a -&gt; &#39;b -&gt; bool) (requires member ( / ) and member ( % ) and member ( % ) and member get_One and member ( / ) and member get_Zero and member ( * ) and equality and member ( * ) and member ( / ) and member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One and member get_Zero and equality)</div>
<div class="tip" id="fs29">val n : &#39;a (requires member ( / ) and member ( % ) and member ( % ) and member get_One and member ( / ) and member get_Zero and member ( * ) and equality and member ( * ) and member ( / ) and member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One and member get_Zero and equality)</div>
<div class="tip" id="fs30">val x : &#39;b (requires member get_One and member ( / ) and member get_Zero and member ( % ) and member ( / ) and member ( * ) and equality and member ( * ) and member ( % ) and member ( / ) and member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One and member get_Zero and equality)</div>
<div class="tip" id="fs31">val a : &#39;k (requires member get_Zero and equality and member ( / ) and member ( % ) and member ( % ) and member get_One and member ( / ) and member get_Zero and member ( * ) and equality and member ( * ) and member ( / ) and member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One)</div>
<div class="tip" id="fs32">val b : &#39;k (requires member get_Zero and equality and member ( / ) and member ( % ) and member ( % ) and member get_One and member ( / ) and member get_Zero and member ( * ) and equality and member ( * ) and member ( / ) and member ( + ) and member ( + ) and member ( + ) and member get_One and member ( + ) and member get_One and member get_One)</div>
<div class="tip" id="fs33">Multiple items<br />module Array<br /><br />from Script<br /><br />--------------------<br />module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs34">Multiple items<br />module Parallel<br /><br />from Script.Array<br /><br />--------------------<br />module Parallel<br /><br />from Microsoft.FSharp.Collections.ArrayModule</div>
<div class="tip" id="fs35">val init : count:int -&gt; initializer:(int -&gt; &#39;T) -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.ArrayModule.Parallel.init</div>
<div class="tip" id="fs36">val n : int</div>
<div class="tip" id="fs37">val init : count:int -&gt; initializer:(int -&gt; &#39;T) -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.init</div>
<div class="tip" id="fs38">val concat : arrays:seq&lt;&#39;T []&gt; -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.concat</div>
<div class="tip" id="fs39">val max : array:&#39;T [] -&gt; &#39;T (requires comparison)<br /><br />Full name: Microsoft.FSharp.Collections.Array.max</div>
<div class="tip" id="fs40">val stdout&lt;&#39;T&gt; : System.IO.TextWriter<br /><br />Full name: Microsoft.FSharp.Core.Operators.stdout</div>

