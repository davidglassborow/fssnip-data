<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">/// Given a two sequences and a comparator function, find the pairs of items for </span>
<span class="c">/// which the comparator returns true</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="f">findPairs</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="f">compare</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">seqT</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">seqU</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">seq</span> {
            <span class="k">for</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">t</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="i">seqT</span> <span class="k">do</span>
                <span class="k">for</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">u</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs4', 9)" onmouseover="showTip(event, 'fs4', 9)" class="i">seqU</span> <span class="k">do</span>
                    <span class="k">if</span> (<span onmouseout="hideTip(event, 'fs2', 10)" onmouseover="showTip(event, 'fs2', 10)" class="f">compare</span> <span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="i">t</span> <span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="i">u</span>) <span class="k">then</span>
                        <span class="k">yield</span> (<span onmouseout="hideTip(event, 'fs6', 13)" onmouseover="showTip(event, 'fs6', 13)" class="i">t</span>, <span onmouseout="hideTip(event, 'fs7', 14)" onmouseover="showTip(event, 'fs7', 14)" class="i">u</span>)
    }

<span class="c">/// Given a two sequences and a comparator function, find the first pair of items </span>
<span class="c">/// for which the comparator returns true</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="f">tryFindFirstPair</span> <span onmouseout="hideTip(event, 'fs2', 16)" onmouseover="showTip(event, 'fs2', 16)" class="f">compare</span> <span onmouseout="hideTip(event, 'fs3', 17)" onmouseover="showTip(event, 'fs3', 17)" class="i">seqT</span> <span onmouseout="hideTip(event, 'fs4', 18)" onmouseover="showTip(event, 'fs4', 18)" class="i">seqU</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 19)" onmouseover="showTip(event, 'fs9', 19)" class="i">matches</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 20)" onmouseover="showTip(event, 'fs1', 20)" class="f">findPairs</span> <span onmouseout="hideTip(event, 'fs2', 21)" onmouseover="showTip(event, 'fs2', 21)" class="f">compare</span> <span onmouseout="hideTip(event, 'fs3', 22)" onmouseover="showTip(event, 'fs3', 22)" class="i">seqT</span> <span onmouseout="hideTip(event, 'fs4', 23)" onmouseover="showTip(event, 'fs4', 23)" class="i">seqU</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs10', 24)" onmouseover="showTip(event, 'fs10', 24)" class="f">not</span> (<span onmouseout="hideTip(event, 'fs11', 25)" onmouseover="showTip(event, 'fs11', 25)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 26)" onmouseover="showTip(event, 'fs12', 26)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs9', 27)" onmouseover="showTip(event, 'fs9', 27)" class="i">matches</span>) <span class="k">then</span>
        <span onmouseout="hideTip(event, 'fs13', 28)" onmouseover="showTip(event, 'fs13', 28)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs11', 29)" onmouseover="showTip(event, 'fs11', 29)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 30)" onmouseover="showTip(event, 'fs14', 30)" class="f">nth</span> <span class="n">0</span> <span onmouseout="hideTip(event, 'fs9', 31)" onmouseover="showTip(event, 'fs9', 31)" class="i">matches</span>)
    <span class="k">else</span>
        <span onmouseout="hideTip(event, 'fs15', 32)" onmouseover="showTip(event, 'fs15', 32)" class="p">None</span>

<span class="c">//// A quick demo to generate lists of rhyming words:</span>

<span class="c">/// Reverse a string (from TomasP):</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 33)" onmouseover="showTip(event, 'fs16', 33)" class="f">reverse</span> (<span onmouseout="hideTip(event, 'fs17', 34)" onmouseover="showTip(event, 'fs17', 34)" class="i">s</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs18', 35)" onmouseover="showTip(event, 'fs18', 35)" class="t">string</span>) <span class="o">=</span>
  <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs19', 36)" onmouseover="showTip(event, 'fs19', 36)" class="f">reverseAux</span> <span onmouseout="hideTip(event, 'fs20', 37)" onmouseover="showTip(event, 'fs20', 37)" class="i">idx</span> <span onmouseout="hideTip(event, 'fs21', 38)" onmouseover="showTip(event, 'fs21', 38)" class="i">acc</span> <span class="o">=</span>
    <span class="k">if</span> (<span onmouseout="hideTip(event, 'fs20', 39)" onmouseover="showTip(event, 'fs20', 39)" class="i">idx</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 40)" onmouseover="showTip(event, 'fs17', 40)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 41)" onmouseover="showTip(event, 'fs22', 41)" class="i">Length</span>) <span class="k">then</span> <span onmouseout="hideTip(event, 'fs21', 42)" onmouseover="showTip(event, 'fs21', 42)" class="i">acc</span>
    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs19', 43)" onmouseover="showTip(event, 'fs19', 43)" class="f">reverseAux</span> (<span onmouseout="hideTip(event, 'fs20', 44)" onmouseover="showTip(event, 'fs20', 44)" class="i">idx</span><span class="o">+</span><span class="n">1</span>) ((<span onmouseout="hideTip(event, 'fs17', 45)" onmouseover="showTip(event, 'fs17', 45)" class="i">s</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs20', 46)" onmouseover="showTip(event, 'fs20', 46)" class="i">idx</span>])<span class="o">::</span><span onmouseout="hideTip(event, 'fs21', 47)" onmouseover="showTip(event, 'fs21', 47)" class="i">acc</span>)
  <span class="k">new</span> <span onmouseout="hideTip(event, 'fs18', 48)" onmouseover="showTip(event, 'fs18', 48)" class="t">string</span>(<span onmouseout="hideTip(event, 'fs23', 49)" onmouseover="showTip(event, 'fs23', 49)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 50)" onmouseover="showTip(event, 'fs24', 50)" class="f">ofList</span> (<span onmouseout="hideTip(event, 'fs19', 51)" onmouseover="showTip(event, 'fs19', 51)" class="f">reverseAux</span> <span class="n">0</span> []))

<span class="c">/// A crude way to work out the last syllable for a word:</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 52)" onmouseover="showTip(event, 'fs25', 52)" class="f">lastSyllable</span> <span onmouseout="hideTip(event, 'fs26', 53)" onmouseover="showTip(event, 'fs26', 53)" class="i">word</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 54)" onmouseover="showTip(event, 'fs27', 54)" class="i">vowels</span> <span class="o">=</span> [|<span class="s">&#39;a&#39;</span>;<span class="s">&#39;e&#39;</span>;<span class="s">&#39;i&#39;</span>;<span class="s">&#39;o&#39;</span>;<span class="s">&#39;u&#39;</span>;<span class="s">&#39;y&#39;</span>|]
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 55)" onmouseover="showTip(event, 'fs28', 55)" class="i">wordRev</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 56)" onmouseover="showTip(event, 'fs16', 56)" class="f">reverse</span> <span onmouseout="hideTip(event, 'fs26', 57)" onmouseover="showTip(event, 'fs26', 57)" class="i">word</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 58)" onmouseover="showTip(event, 'fs29', 58)" class="i">vowelPos</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 59)" onmouseover="showTip(event, 'fs28', 59)" class="i">wordRev</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 60)" onmouseover="showTip(event, 'fs30', 60)" class="f">IndexOfAny</span>(<span onmouseout="hideTip(event, 'fs27', 61)" onmouseover="showTip(event, 'fs27', 61)" class="i">vowels</span>, <span class="n">1</span>)
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 62)" onmouseover="showTip(event, 'fs31', 62)" class="i">lastSylRev</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 63)" onmouseover="showTip(event, 'fs28', 63)" class="i">wordRev</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 64)" onmouseover="showTip(event, 'fs32', 64)" class="f">Substring</span>(<span class="n">0</span>, <span onmouseout="hideTip(event, 'fs29', 65)" onmouseover="showTip(event, 'fs29', 65)" class="i">vowelPos</span><span class="o">+</span><span class="n">1</span>)
    <span onmouseout="hideTip(event, 'fs16', 66)" onmouseover="showTip(event, 'fs16', 66)" class="f">reverse</span> <span onmouseout="hideTip(event, 'fs31', 67)" onmouseover="showTip(event, 'fs31', 67)" class="i">lastSylRev</span>

<span class="c">/// Return true when words might rhyme based on their final syllables being </span>
<span class="c">/// the same</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 68)" onmouseover="showTip(event, 'fs33', 68)" class="f">mightRhyme</span> <span onmouseout="hideTip(event, 'fs34', 69)" onmouseover="showTip(event, 'fs34', 69)" class="i">wordA</span> <span onmouseout="hideTip(event, 'fs35', 70)" onmouseover="showTip(event, 'fs35', 70)" class="i">wordB</span> <span class="o">=</span>
    (<span onmouseout="hideTip(event, 'fs34', 71)" onmouseover="showTip(event, 'fs34', 71)" class="i">wordA</span> <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs35', 72)" onmouseover="showTip(event, 'fs35', 72)" class="i">wordB</span>) <span class="o">&amp;&amp;</span> (<span onmouseout="hideTip(event, 'fs25', 73)" onmouseover="showTip(event, 'fs25', 73)" class="f">lastSyllable</span> <span onmouseout="hideTip(event, 'fs34', 74)" onmouseover="showTip(event, 'fs34', 74)" class="i">wordA</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 75)" onmouseover="showTip(event, 'fs25', 75)" class="f">lastSyllable</span> <span onmouseout="hideTip(event, 'fs35', 76)" onmouseover="showTip(event, 'fs35', 76)" class="i">wordB</span>)

<span class="c">/// Two steams of words, some of which might rhyme</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 77)" onmouseover="showTip(event, 'fs36', 77)" class="i">words1</span> <span class="o">=</span> [<span class="s">&quot;orange&quot;</span>; <span class="s">&quot;purple&quot;</span>; <span class="s">&quot;hubble&quot;</span>; <span class="s">&quot;indicative&quot;</span>; <span class="s">&quot;mandatory&quot;</span>]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 78)" onmouseover="showTip(event, 'fs37', 78)" class="i">words2</span> <span class="o">=</span> [<span class="s">&quot;hurple&quot;</span>; <span class="s">&quot;rhubarb&quot;</span>; <span class="s">&quot;tory&quot;</span>; <span class="s">&quot;bubble&quot;</span>]

<span class="c">/// Find the rhymes</span>
<span onmouseout="hideTip(event, 'fs1', 79)" onmouseover="showTip(event, 'fs1', 79)" class="f">findPairs</span> <span onmouseout="hideTip(event, 'fs33', 80)" onmouseover="showTip(event, 'fs33', 80)" class="f">mightRhyme</span> <span onmouseout="hideTip(event, 'fs36', 81)" onmouseover="showTip(event, 'fs36', 81)" class="i">words1</span> <span onmouseout="hideTip(event, 'fs37', 82)" onmouseover="showTip(event, 'fs37', 82)" class="i">words2</span>

<span class="c">// Output: seq [(&quot;purple&quot;, &quot;hurple&quot;); (&quot;hubble&quot;, &quot;bubble&quot;); (&quot;mandatory&quot;, &quot;tory&quot;)]</span>

<span class="c">/// Find the rhymes in a single stream of words:</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 83)" onmouseover="showTip(event, 'fs38', 83)" class="i">wordsAll</span> <span class="o">=</span> [<span class="s">&quot;orange&quot;</span>; <span class="s">&quot;purple&quot;</span>; <span class="s">&quot;hubble&quot;</span>; <span class="s">&quot;indicative&quot;</span>; <span class="s">&quot;mandatory&quot;</span>; <span class="s">&quot;hurple&quot;</span>; <span class="s">&quot;rhubarb&quot;</span>; <span class="s">&quot;tory&quot;</span>; <span class="s">&quot;bubble&quot;</span>]
<span onmouseout="hideTip(event, 'fs1', 84)" onmouseover="showTip(event, 'fs1', 84)" class="f">findPairs</span> <span onmouseout="hideTip(event, 'fs33', 85)" onmouseover="showTip(event, 'fs33', 85)" class="f">mightRhyme</span> <span onmouseout="hideTip(event, 'fs38', 86)" onmouseover="showTip(event, 'fs38', 86)" class="i">wordsAll</span> <span onmouseout="hideTip(event, 'fs38', 87)" onmouseover="showTip(event, 'fs38', 87)" class="i">wordsAll</span>

<span class="c">// Output: seq</span>
<span class="c">//    [(&quot;purple&quot;, &quot;hurple&quot;); (&quot;hubble&quot;, &quot;bubble&quot;); (&quot;mandatory&quot;, &quot;tory&quot;);</span>
<span class="c">//     (&quot;hurple&quot;, &quot;purple&quot;); ...]</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">val findPairs : compare:(&#39;a -&gt; &#39;b -&gt; bool) -&gt; seqT:seq&lt;&#39;a&gt; -&gt; seqU:seq&lt;&#39;b&gt; -&gt; seq&lt;&#39;a * &#39;b&gt;<br /><br />Full name: Script.findPairs<br /><em><br /><br />&#160;Given a two sequences and a comparator function, find the pairs of items for <br />&#160;which the comparator returns true</em></div>
<div class="tip" id="fs2">val compare : (&#39;a -&gt; &#39;b -&gt; bool)</div>
<div class="tip" id="fs3">val seqT : seq&lt;&#39;a&gt;</div>
<div class="tip" id="fs4">val seqU : seq&lt;&#39;b&gt;</div>
<div class="tip" id="fs5">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = System.Collections.Generic.IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs6">val t : &#39;a</div>
<div class="tip" id="fs7">val u : &#39;b</div>
<div class="tip" id="fs8">val tryFindFirstPair : compare:(&#39;a -&gt; &#39;b -&gt; bool) -&gt; seqT:seq&lt;&#39;a&gt; -&gt; seqU:seq&lt;&#39;b&gt; -&gt; (&#39;a * &#39;b) option<br /><br />Full name: Script.tryFindFirstPair<br /><em><br /><br />&#160;Given a two sequences and a comparator function, find the first pair of items <br />&#160;for which the comparator returns true</em></div>
<div class="tip" id="fs9">val matches : seq&lt;&#39;a * &#39;b&gt;</div>
<div class="tip" id="fs10">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs11">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs12">val isEmpty : source:seq&lt;&#39;T&gt; -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.Seq.isEmpty</div>
<div class="tip" id="fs13">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs14">val nth : index:int -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.Seq.nth</div>
<div class="tip" id="fs15">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs16">val reverse : s:string -&gt; string<br /><br />Full name: Script.reverse<br /><em><br /><br />&#160;Reverse a string (from TomasP):</em></div>
<div class="tip" id="fs17">val s : string</div>
<div class="tip" id="fs18">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs19">val reverseAux : (int -&gt; char list -&gt; char list)</div>
<div class="tip" id="fs20">val idx : int</div>
<div class="tip" id="fs21">val acc : char list</div>
<div class="tip" id="fs22">property System.String.Length: int</div>
<div class="tip" id="fs23">module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs24">val ofList : list:&#39;T list -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.Array.ofList</div>
<div class="tip" id="fs25">val lastSyllable : word:string -&gt; string<br /><br />Full name: Script.lastSyllable<br /><em><br /><br />&#160;A crude way to work out the last syllable for a word:</em></div>
<div class="tip" id="fs26">val word : string</div>
<div class="tip" id="fs27">val vowels : char []</div>
<div class="tip" id="fs28">val wordRev : string</div>
<div class="tip" id="fs29">val vowelPos : int</div>
<div class="tip" id="fs30">System.String.IndexOfAny(anyOf: char []) : int<br />System.String.IndexOfAny(anyOf: char [], startIndex: int) : int<br />System.String.IndexOfAny(anyOf: char [], startIndex: int, count: int) : int</div>
<div class="tip" id="fs31">val lastSylRev : string</div>
<div class="tip" id="fs32">System.String.Substring(startIndex: int) : string<br />System.String.Substring(startIndex: int, length: int) : string</div>
<div class="tip" id="fs33">val mightRhyme : wordA:string -&gt; wordB:string -&gt; bool<br /><br />Full name: Script.mightRhyme<br /><em><br /><br />&#160;Return true when words might rhyme based on their final syllables being <br />&#160;the same</em></div>
<div class="tip" id="fs34">val wordA : string</div>
<div class="tip" id="fs35">val wordB : string</div>
<div class="tip" id="fs36">val words1 : string list<br /><br />Full name: Script.words1<br /><em><br /><br />&#160;Two steams of words, some of which might rhyme</em></div>
<div class="tip" id="fs37">val words2 : string list<br /><br />Full name: Script.words2</div>
<div class="tip" id="fs38">val wordsAll : string list<br /><br />Full name: Script.wordsAll<br /><em><br /><br />&#160;Find the rhymes<br />&#160;Find the rhymes in a single stream of words:</em></div>

