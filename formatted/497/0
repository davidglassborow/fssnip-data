<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">//This relies on the &quot;FSharp.PowerPack.Metadata.dll&quot; from the F# powerpack.</span>
<span class="c">//This code will not run inside F# interactive as is requires a compiled F#  </span>
<span class="c">//assembly to retrieve metadata.</span>

<span class="prep">#r</span> <span class="s">&quot;FSharp.PowerPack.Metadata.dll&quot;</span>

    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Diagnostics</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">Reflection</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 6)" onmouseover="showTip(event, 'fs1', 6)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="i">Runtime</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="i">Serialization</span>

    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="i">FSharp</span><span class="o">.</span><span class="i">Metadata</span>
    <span class="k">open</span> <span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="i">Reflection</span>

    <span class="k">module</span> <span class="t">FSharpEntity</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="f">fromCurrentSite</span> () <span class="o">=</span> 
            <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="f">getSite</span> (<span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="i">frames</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="t">StackFrame</span> <span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="t">list</span>) <span class="o">=</span>
                <span class="k">match</span> <span onmouseout="hideTip(event, 'fs11', 19)" onmouseover="showTip(event, 'fs11', 19)" class="i">frames</span> <span class="k">with</span>
                | [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="f">failwith</span> <span class="s">&quot;Unable to get site!&quot;</span>
                | <span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="i">sf</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="i">sfl</span> <span class="k">-&gt;</span> 
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 23)" onmouseover="showTip(event, 'fs17', 23)" class="i">mb</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 24)" onmouseover="showTip(event, 'fs15', 24)" class="i">sf</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="f">GetMethod</span> ()
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs17', 26)" onmouseover="showTip(event, 'fs17', 26)" class="i">mb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 27)" onmouseover="showTip(event, 'fs19', 27)" class="i">Name</span> <span class="o">&lt;&gt;</span> <span class="s">&quot;.cctor&quot;</span> <span class="o">&amp;&amp;</span>  <span onmouseout="hideTip(event, 'fs20', 28)" onmouseover="showTip(event, 'fs20', 28)" class="t">FSharpType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs21', 29)" onmouseover="showTip(event, 'fs21', 29)" class="f">IsFunction</span> (<span onmouseout="hideTip(event, 'fs17', 30)" onmouseover="showTip(event, 'fs17', 30)" class="i">mb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 31)" onmouseover="showTip(event, 'fs22', 31)" class="i">DeclaringType</span>) <span class="o">=</span> <span class="k">false</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs17', 32)" onmouseover="showTip(event, 'fs17', 32)" class="i">mb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 33)" onmouseover="showTip(event, 'fs22', 33)" class="i">DeclaringType</span>
                    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs10', 34)" onmouseover="showTip(event, 'fs10', 34)" class="f">getSite</span> (<span onmouseout="hideTip(event, 'fs16', 35)" onmouseover="showTip(event, 'fs16', 35)" class="i">sfl</span>)

            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 36)" onmouseover="showTip(event, 'fs23', 36)" class="i">st</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs24', 37)" onmouseover="showTip(event, 'fs24', 37)" class="t">StackTrace</span> (<span class="n">1</span>, <span class="k">true</span>)
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 38)" onmouseover="showTip(event, 'fs11', 38)" class="i">frames</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 39)" onmouseover="showTip(event, 'fs23', 39)" class="i">st</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 40)" onmouseover="showTip(event, 'fs25', 40)" class="f">GetFrames</span> () <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs26', 41)" onmouseover="showTip(event, 'fs26', 41)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 42)" onmouseover="showTip(event, 'fs27', 42)" class="f">toList</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 43)" onmouseover="showTip(event, 'fs28', 43)" class="i">site</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 44)" onmouseover="showTip(event, 'fs10', 44)" class="f">getSite</span> (<span onmouseout="hideTip(event, 'fs11', 45)" onmouseover="showTip(event, 'fs11', 45)" class="i">frames</span>)
            <span class="i">FSharpEntity</span><span class="o">.</span><span class="i">FromType</span> (<span onmouseout="hideTip(event, 'fs28', 46)" onmouseover="showTip(event, 'fs28', 46)" class="i">site</span>)

<span class="c">//Usage </span>
    <span class="k">module</span> <span onmouseout="hideTip(event, 'fs29', 47)" onmouseover="showTip(event, 'fs29', 47)" class="t">Test</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 48)" onmouseover="showTip(event, 'fs30', 48)" class="f">getCallingEntity</span> () <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs31', 49)" onmouseover="showTip(event, 'fs31', 49)" class="t">FSharpEntity</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 50)" onmouseover="showTip(event, 'fs9', 50)" class="f">fromCurrentSite</span> ()

        
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Diagnostics</div>
<div class="tip" id="fs3">namespace System.Reflection</div>
<div class="tip" id="fs4">namespace System.Runtime</div>
<div class="tip" id="fs5">namespace System.Runtime.Serialization</div>
<div class="tip" id="fs6">namespace Microsoft</div>
<div class="tip" id="fs7">namespace Microsoft.FSharp</div>
<div class="tip" id="fs8">namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs9">val fromCurrentSite : unit -&gt; &#39;a<br /><br />Full name: Script.FSharpEntity.fromCurrentSite</div>
<div class="tip" id="fs10">val getSite : (StackFrame list -&gt; Type)</div>
<div class="tip" id="fs11">val frames : StackFrame list</div>
<div class="tip" id="fs12">Multiple items<br />type StackFrame =<br />&#160;&#160;new : unit -&gt; StackFrame + 5 overloads<br />&#160;&#160;member GetFileColumnNumber : unit -&gt; int<br />&#160;&#160;member GetFileLineNumber : unit -&gt; int<br />&#160;&#160;member GetFileName : unit -&gt; string<br />&#160;&#160;member GetILOffset : unit -&gt; int<br />&#160;&#160;member GetMethod : unit -&gt; MethodBase<br />&#160;&#160;member GetNativeOffset : unit -&gt; int<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;static val OFFSET_UNKNOWN : int<br /><br />Full name: System.Diagnostics.StackFrame<br /><br />--------------------<br />StackFrame() : unit<br />StackFrame(fNeedFileInfo: bool) : unit<br />StackFrame(skipFrames: int) : unit<br />StackFrame(skipFrames: int, fNeedFileInfo: bool) : unit<br />StackFrame(fileName: string, lineNumber: int) : unit<br />StackFrame(fileName: string, lineNumber: int, colNumber: int) : unit</div>
<div class="tip" id="fs13">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs14">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs15">val sf : StackFrame</div>
<div class="tip" id="fs16">val sfl : StackFrame list</div>
<div class="tip" id="fs17">val mb : MethodBase</div>
<div class="tip" id="fs18">StackFrame.GetMethod() : MethodBase</div>
<div class="tip" id="fs19">property MemberInfo.Name: string</div>
<div class="tip" id="fs20">type FSharpType =<br />&#160;&#160;static member GetExceptionFields : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetFunctionElements : functionType:Type -&gt; Type * Type<br />&#160;&#160;static member GetRecordFields : recordType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetTupleElements : tupleType:Type -&gt; Type []<br />&#160;&#160;static member GetUnionCases : unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo []<br />&#160;&#160;static member IsExceptionRepresentation : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsFunction : typ:Type -&gt; bool<br />&#160;&#160;static member IsModule : typ:Type -&gt; bool<br />&#160;&#160;static member IsRecord : typ:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsTuple : typ:Type -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpType</div>
<div class="tip" id="fs21">static member FSharpType.IsFunction : typ:Type -&gt; bool</div>
<div class="tip" id="fs22">property MemberInfo.DeclaringType: Type</div>
<div class="tip" id="fs23">val st : StackTrace</div>
<div class="tip" id="fs24">Multiple items<br />type StackTrace =<br />&#160;&#160;new : unit -&gt; StackTrace + 9 overloads<br />&#160;&#160;member FrameCount : int<br />&#160;&#160;member GetFrame : index:int -&gt; StackFrame<br />&#160;&#160;member GetFrames : unit -&gt; StackFrame[]<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;static val METHODS_TO_SKIP : int<br /><br />Full name: System.Diagnostics.StackTrace<br /><br />--------------------<br />StackTrace() : unit<br />StackTrace(fNeedFileInfo: bool) : unit<br />StackTrace(skipFrames: int) : unit<br />StackTrace(e: exn) : unit<br />StackTrace(frame: StackFrame) : unit<br />StackTrace(skipFrames: int, fNeedFileInfo: bool) : unit<br />StackTrace(e: exn, fNeedFileInfo: bool) : unit<br />StackTrace(e: exn, skipFrames: int) : unit<br />StackTrace(targetThread: Threading.Thread, needFileInfo: bool) : unit<br />StackTrace(e: exn, skipFrames: int, fNeedFileInfo: bool) : unit</div>
<div class="tip" id="fs25">StackTrace.GetFrames() : StackFrame []</div>
<div class="tip" id="fs26">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...<br /><br />Full name: System.Array</div>
<div class="tip" id="fs27">val toList : array:&#39;T [] -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.Array.toList</div>
<div class="tip" id="fs28">val site : Type</div>
<div class="tip" id="fs29">module Test<br /><br />from Script</div>
<div class="tip" id="fs30">val getCallingEntity : unit -&gt; &#39;a<br /><br />Full name: Script.Test.getCallingEntity</div>
<div class="tip" id="fs31">module FSharpEntity<br /><br />from Script</div>

