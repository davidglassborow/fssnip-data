<h2><a name="Definition-of-a-polynom" class="anchor" href="#Definition-of-a-polynom">Definition of a polynom</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">/// a Polynom is just a list of coefficients</span>
<span class="c">/// mind that [a; b; c] correspondents to a*X^0 + b*X^1 + c*X^2</span>
<span class="k">type</span> <span class="t">Polynom</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span class="o">=</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">list</span>
</code></pre></td>
</tr>
</table>
<h2><a name="Polynom-homomorphisms" class="anchor" href="#Polynom-homomorphisms">Polynom homomorphisms</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span class="t">Polynoms</span> <span class="o">=</span>
    
    <span class="c">/// use the power of inline and List.fold to implement a simple polynom eval function for generic polynoms</span>
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="f">Eval</span> (<span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="i">p</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="t">Polynom</span>) (<span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">v</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">b</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs3', 6)" onmouseover="showTip(event, 'fs3', 6)" class="i">p</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="f">fold</span> (<span class="k">fun</span> (<span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="i">x</span>, <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">sum</span>) <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="i">coeff</span> <span class="k">-&gt;</span> 
                        (<span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="i">x</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs5', 13)" onmouseover="showTip(event, 'fs5', 13)" class="i">v</span>), (<span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="i">sum</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="i">x</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="i">coeff</span>)) 
                       (<span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="i">Core</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="t">LanguagePrimitives</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="i">GenericOne</span>, <span onmouseout="hideTip(event, 'fs11', 22)" onmouseover="showTip(event, 'fs11', 22)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 23)" onmouseover="showTip(event, 'fs12', 23)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs13', 24)" onmouseover="showTip(event, 'fs13', 24)" class="i">Core</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 25)" onmouseover="showTip(event, 'fs14', 25)" class="t">LanguagePrimitives</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="i">GenericZero</span>)
          <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs17', 27)" onmouseover="showTip(event, 'fs17', 27)" class="f">snd</span>

    <span class="c">/// returns a the polynom-function for a polynom</span>
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="f">CreatePolynomFunction</span> <span onmouseout="hideTip(event, 'fs3', 29)" onmouseover="showTip(event, 'fs3', 29)" class="i">p</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 30)" onmouseover="showTip(event, 'fs2', 30)" class="f">Eval</span> <span onmouseout="hideTip(event, 'fs3', 31)" onmouseover="showTip(event, 'fs3', 31)" class="i">p</span>

    <span class="c">/// returns a function that evaluates every given Polynom p at the point v</span>
    <span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs19', 32)" onmouseover="showTip(event, 'fs19', 32)" class="f">EvalHom</span> <span onmouseout="hideTip(event, 'fs20', 33)" onmouseover="showTip(event, 'fs20', 33)" class="i">v</span> <span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs21', 34)" onmouseover="showTip(event, 'fs21', 34)" class="i">p</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs2', 35)" onmouseover="showTip(event, 'fs2', 35)" class="f">Eval</span> <span onmouseout="hideTip(event, 'fs21', 36)" onmouseover="showTip(event, 'fs21', 36)" class="i">p</span> <span onmouseout="hideTip(event, 'fs20', 37)" onmouseover="showTip(event, 'fs20', 37)" class="i">v</span>
</code></pre></td>
</tr>
</table>
<h2><a name="Some-samples-with-float" class="anchor" href="#Some-samples-with-float">Some samples with float</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs22', 38)" onmouseover="showTip(event, 'fs22', 38)" class="t">Samples</span> <span class="o">=</span>
    
    <span class="c">// define a simple Polynom</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 39)" onmouseover="showTip(event, 'fs23', 39)" class="i">P</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs4', 40)" onmouseover="showTip(event, 'fs4', 40)" class="t">Polynom</span><span class="o">&lt;</span>_<span class="o">&gt;</span> <span class="o">=</span> [<span class="n">4.0</span>; <span class="n">1.0</span>; <span class="n">2.0</span>] <span class="c">// 2.0*X^2 + X + 4.0</span>

    <span class="c">// create the polynomfunction and get some values</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 41)" onmouseover="showTip(event, 'fs24', 41)" class="f">p</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 42)" onmouseover="showTip(event, 'fs25', 42)" class="t">Polynoms</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 43)" onmouseover="showTip(event, 'fs18', 43)" class="f">CreatePolynomFunction</span> <span onmouseout="hideTip(event, 'fs23', 44)" onmouseover="showTip(event, 'fs23', 44)" class="i">P</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 45)" onmouseover="showTip(event, 'fs26', 45)" class="i">c0</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 46)" onmouseover="showTip(event, 'fs24', 46)" class="f">p</span> <span class="n">0.0</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 47)" onmouseover="showTip(event, 'fs27', 47)" class="i">c1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 48)" onmouseover="showTip(event, 'fs24', 48)" class="f">p</span> <span class="n">1.0</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs28', 49)" onmouseover="showTip(event, 'fs28', 49)" class="i">c2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 50)" onmouseover="showTip(event, 'fs24', 50)" class="f">p</span> <span class="n">2.0</span>

    <span class="c">// play with the EvalHom</span>
    <span class="c">// check the &quot;get the coefficient for X^0&quot;-Hom</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 51)" onmouseover="showTip(event, 'fs29', 51)" class="f">c0hom</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 52)" onmouseover="showTip(event, 'fs25', 52)" class="t">Polynoms</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 53)" onmouseover="showTip(event, 'fs19', 53)" class="f">EvalHom</span> <span class="n">0.0</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 54)" onmouseover="showTip(event, 'fs30', 54)" class="i">c0&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 55)" onmouseover="showTip(event, 'fs29', 55)" class="f">c0hom</span> <span onmouseout="hideTip(event, 'fs23', 56)" onmouseover="showTip(event, 'fs23', 56)" class="i">P</span>
    <span onmouseout="hideTip(event, 'fs31', 57)" onmouseover="showTip(event, 'fs31', 57)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 58)" onmouseover="showTip(event, 'fs32', 58)" class="i">Diagnostics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 59)" onmouseover="showTip(event, 'fs33', 59)" class="t">Debug</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 60)" onmouseover="showTip(event, 'fs34', 60)" class="f">Assert</span>((<span onmouseout="hideTip(event, 'fs26', 61)" onmouseover="showTip(event, 'fs26', 61)" class="i">c0</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs30', 62)" onmouseover="showTip(event, 'fs30', 62)" class="i">c0&#39;</span>))

    <span class="c">// get the sum of all coefficients (nice trick - evaluate at 1)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 63)" onmouseover="showTip(event, 'fs35', 63)" class="f">coeffSum</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs25', 64)" onmouseover="showTip(event, 'fs25', 64)" class="t">Polynoms</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 65)" onmouseover="showTip(event, 'fs19', 65)" class="f">EvalHom</span> <span class="n">1.0</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 66)" onmouseover="showTip(event, 'fs36', 66)" class="i">c1&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs35', 67)" onmouseover="showTip(event, 'fs35', 67)" class="f">coeffSum</span> <span onmouseout="hideTip(event, 'fs23', 68)" onmouseover="showTip(event, 'fs23', 68)" class="i">P</span>
    <span onmouseout="hideTip(event, 'fs31', 69)" onmouseover="showTip(event, 'fs31', 69)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 70)" onmouseover="showTip(event, 'fs32', 70)" class="i">Diagnostics</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 71)" onmouseover="showTip(event, 'fs33', 71)" class="t">Debug</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 72)" onmouseover="showTip(event, 'fs34', 72)" class="f">Assert</span>((<span onmouseout="hideTip(event, 'fs27', 73)" onmouseover="showTip(event, 'fs27', 73)" class="i">c1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs36', 74)" onmouseover="showTip(event, 'fs36', 74)" class="i">c1&#39;</span>))
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs2">val Eval : p:Polynom&lt;&#39;a&gt; -&gt; v:&#39;b -&gt; &#39;c (requires member ( * ) and member ( * ) and member get_One and member ( + ) and member get_Zero)<br /><br />Full name: Script.Polynoms.Eval<br /><em><br /><br />&#160;use the power of inline and List.fold to implement a simple polynom eval function for generic polynoms</em></div>
<div class="tip" id="fs3">val p : Polynom&lt;&#39;a&gt; (requires member ( * ) and member ( * ) and member get_One and member ( + ) and member get_Zero)</div>
<div class="tip" id="fs4">type Polynom&lt;&#39;a&gt; = &#39;a list<br /><br />Full name: Script.Polynom&lt;_&gt;<br /><em><br /><br />&#160;a Polynom is just a list of coefficients<br />&#160;mind that [a; b; c] correspondents to a*X^0 + b*X^1 + c*X^2</em></div>
<div class="tip" id="fs5">val v : &#39;b (requires member ( * ) and member ( * ) and member get_One and member ( + ) and member get_Zero)</div>
<div class="tip" id="fs6">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs7">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; list:&#39;T list -&gt; &#39;State<br /><br />Full name: Microsoft.FSharp.Collections.List.fold</div>
<div class="tip" id="fs8">val x : &#39;a (requires member ( * ) and member ( * ) and member get_One and member ( + ) and member get_Zero)</div>
<div class="tip" id="fs9">val sum : &#39;c (requires member ( + ) and member get_Zero and member ( * ) and member ( * ) and member get_One)</div>
<div class="tip" id="fs10">val coeff : &#39;a (requires member ( * ) and member ( * ) and member get_One and member ( + ) and member get_Zero)</div>
<div class="tip" id="fs11">namespace Microsoft</div>
<div class="tip" id="fs12">namespace Microsoft.FSharp</div>
<div class="tip" id="fs13">namespace Microsoft.FSharp.Core</div>
<div class="tip" id="fs14">module LanguagePrimitives<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs15">val GenericOne&lt;&#39;T (requires member get_One)&gt; : &#39;T (requires member get_One)<br /><br />Full name: Microsoft.FSharp.Core.LanguagePrimitives.GenericOne</div>
<div class="tip" id="fs16">val GenericZero&lt;&#39;T (requires member get_Zero)&gt; : &#39;T (requires member get_Zero)<br /><br />Full name: Microsoft.FSharp.Core.LanguagePrimitives.GenericZero</div>
<div class="tip" id="fs17">val snd : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T2<br /><br />Full name: Microsoft.FSharp.Core.Operators.snd</div>
<div class="tip" id="fs18">val CreatePolynomFunction : p:Polynom&lt;&#39;a&gt; -&gt; (&#39;c -&gt; &#39;e) (requires member ( * ) and member ( * ) and member get_One and member ( + ) and member get_Zero)<br /><br />Full name: Script.Polynoms.CreatePolynomFunction<br /><em><br /><br />&#160;returns a the polynom-function for a polynom</em></div>
<div class="tip" id="fs19">val EvalHom : v:&#39;a -&gt; p:Polynom&lt;&#39;c&gt; -&gt; &#39;e (requires member ( * ) and member ( * ) and member get_One and member ( + ) and member get_Zero)<br /><br />Full name: Script.Polynoms.EvalHom<br /><em><br /><br />&#160;returns a function that evaluates every given Polynom p at the point v</em></div>
<div class="tip" id="fs20">val v : &#39;a (requires member ( * ) and member ( * ) and member get_One and member ( + ) and member get_Zero)</div>
<div class="tip" id="fs21">val p : Polynom&lt;&#39;c&gt; (requires member ( * ) and member ( * ) and member get_One and member ( + ) and member get_Zero)</div>
<div class="tip" id="fs22">module Samples<br /><br />from Script</div>
<div class="tip" id="fs23">val P : Polynom&lt;float&gt;<br /><br />Full name: Script.Samples.P</div>
<div class="tip" id="fs24">val p : (float -&gt; float)<br /><br />Full name: Script.Samples.p</div>
<div class="tip" id="fs25">module Polynoms<br /><br />from Script</div>
<div class="tip" id="fs26">val c0 : float<br /><br />Full name: Script.Samples.c0</div>
<div class="tip" id="fs27">val c1 : float<br /><br />Full name: Script.Samples.c1</div>
<div class="tip" id="fs28">val c2 : float<br /><br />Full name: Script.Samples.c2</div>
<div class="tip" id="fs29">val c0hom : (Polynom&lt;float&gt; -&gt; float)<br /><br />Full name: Script.Samples.c0hom</div>
<div class="tip" id="fs30">val c0&#39; : float<br /><br />Full name: Script.Samples.c0&#39;</div>
<div class="tip" id="fs31">namespace System</div>
<div class="tip" id="fs32">namespace System.Diagnostics</div>
<div class="tip" id="fs33">type Debug =<br />&#160;&#160;static member Assert : condition:bool -&gt; unit + 3 overloads<br />&#160;&#160;static member AutoFlush : bool with get, set<br />&#160;&#160;static member Close : unit -&gt; unit<br />&#160;&#160;static member Fail : message:string -&gt; unit + 1 overload<br />&#160;&#160;static member Flush : unit -&gt; unit<br />&#160;&#160;static member Indent : unit -&gt; unit<br />&#160;&#160;static member IndentLevel : int with get, set<br />&#160;&#160;static member IndentSize : int with get, set<br />&#160;&#160;static member Listeners : TraceListenerCollection<br />&#160;&#160;static member Print : message:string -&gt; unit + 1 overload<br />&#160;&#160;...<br /><br />Full name: System.Diagnostics.Debug</div>
<div class="tip" id="fs34">System.Diagnostics.Debug.Assert(condition: bool) : unit<br />System.Diagnostics.Debug.Assert(condition: bool, message: string) : unit<br />System.Diagnostics.Debug.Assert(condition: bool, message: string, detailMessage: string) : unit<br />System.Diagnostics.Debug.Assert(condition: bool, message: string, detailMessageFormat: string, [&lt;System.ParamArray&gt;] args: obj []) : unit</div>
<div class="tip" id="fs35">val coeffSum : (Polynom&lt;float&gt; -&gt; float)<br /><br />Full name: Script.Samples.coeffSum</div>
<div class="tip" id="fs36">val c1&#39; : float<br /><br />Full name: Script.Samples.c1&#39;</div>

