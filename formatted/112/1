<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
<span class="l">74: </span>
<span class="l">75: </span>
<span class="l">76: </span>
<span class="l">77: </span>
<span class="l">78: </span>
<span class="l">79: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Collections</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 4)" onmouseover="showTip(event, 'fs2', 4)" class="i">Collections</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">Generic</span>

<span class="c">// LazyList dataType + Monoid Structure</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="t">LazyList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span>   <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="p">Empty</span>
                    | <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="p">Cons</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">T</span> <span class="o">*</span> (<span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="t">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 10)" onmouseover="showTip(event, 'fs4', 10)" class="t">LazyList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>)
                    | <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="p">Delay</span> <span class="k">of</span> (<span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="t">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 13)" onmouseover="showTip(event, 'fs4', 13)" class="t">LazyList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>)
                    | <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="p">Combine</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs4', 15)" onmouseover="showTip(event, 'fs4', 15)" class="t">LazyList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs4', 16)" onmouseover="showTip(event, 'fs4', 16)" class="t">LazyList</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">with</span>
        <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs10', 17)" onmouseover="showTip(event, 'fs10', 17)" class="t">IEnumerable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">with</span>
            <span class="k">member</span> <span onmouseout="hideTip(event, 'fs11', 18)" onmouseover="showTip(event, 'fs11', 18)" class="i">self</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="f">GetEnumerator</span>() <span class="o">=</span>
                <span class="c">// tail-recursive enumeration </span>
                <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="f">toSeq</span> <span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="i">stack</span> <span class="o">=</span> 
                    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs14', 22)" onmouseover="showTip(event, 'fs14', 22)" class="i">stack</span> <span class="k">with</span>
                    | [] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 23)" onmouseover="showTip(event, 'fs15', 23)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 24)" onmouseover="showTip(event, 'fs16', 24)" class="i">empty</span>
                    | <span onmouseout="hideTip(event, 'fs17', 25)" onmouseover="showTip(event, 'fs17', 25)" class="i">head</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs18', 26)" onmouseover="showTip(event, 'fs18', 26)" class="i">tail</span> <span class="k">-&gt;</span>
                        <span class="k">match</span> <span class="i">head</span> <span class="k">with</span>
                        | <span onmouseout="hideTip(event, 'fs5', 27)" onmouseover="showTip(event, 'fs5', 27)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 28)" onmouseover="showTip(event, 'fs13', 28)" class="f">toSeq</span> <span onmouseout="hideTip(event, 'fs18', 29)" onmouseover="showTip(event, 'fs18', 29)" class="i">tail</span>
                        | <span onmouseout="hideTip(event, 'fs6', 30)" onmouseover="showTip(event, 'fs6', 30)" class="p">Cons</span> (<span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="i">value</span>, <span onmouseout="hideTip(event, 'fs20', 32)" onmouseover="showTip(event, 'fs20', 32)" class="f">rest</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 33)" onmouseover="showTip(event, 'fs21', 33)" class="i">seq</span> { <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs19', 34)" onmouseover="showTip(event, 'fs19', 34)" class="i">value</span>; <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs13', 35)" onmouseover="showTip(event, 'fs13', 35)" class="f">toSeq</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs20', 36)" onmouseover="showTip(event, 'fs20', 36)" class="f">rest</span> () <span class="o">::</span> <span onmouseout="hideTip(event, 'fs18', 37)" onmouseover="showTip(event, 'fs18', 37)" class="i">tail</span> }
                        | <span onmouseout="hideTip(event, 'fs8', 38)" onmouseover="showTip(event, 'fs8', 38)" class="p">Delay</span> <span onmouseout="hideTip(event, 'fs22', 39)" onmouseover="showTip(event, 'fs22', 39)" class="f">f</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 40)" onmouseover="showTip(event, 'fs13', 40)" class="f">toSeq</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs22', 41)" onmouseover="showTip(event, 'fs22', 41)" class="f">f</span> () <span class="o">::</span> <span onmouseout="hideTip(event, 'fs18', 42)" onmouseover="showTip(event, 'fs18', 42)" class="i">tail</span>
                        | <span onmouseout="hideTip(event, 'fs9', 43)" onmouseover="showTip(event, 'fs9', 43)" class="p">Combine</span> (<span onmouseout="hideTip(event, 'fs23', 44)" onmouseover="showTip(event, 'fs23', 44)" class="i">first</span>, <span onmouseout="hideTip(event, 'fs24', 45)" onmouseover="showTip(event, 'fs24', 45)" class="i">second</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 46)" onmouseover="showTip(event, 'fs13', 46)" class="f">toSeq</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs23', 47)" onmouseover="showTip(event, 'fs23', 47)" class="i">first</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs24', 48)" onmouseover="showTip(event, 'fs24', 48)" class="i">second</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs18', 49)" onmouseover="showTip(event, 'fs18', 49)" class="i">tail</span>
                (<span onmouseout="hideTip(event, 'fs13', 50)" onmouseover="showTip(event, 'fs13', 50)" class="f">toSeq</span> [<span onmouseout="hideTip(event, 'fs11', 51)" onmouseover="showTip(event, 'fs11', 51)" class="i">self</span>])<span class="o">.</span><span class="f">GetEnumerator</span>() 
        <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs10', 52)" onmouseover="showTip(event, 'fs10', 52)" class="t">IEnumerable</span> <span class="k">with</span> 
            <span class="k">member</span> <span onmouseout="hideTip(event, 'fs11', 53)" onmouseover="showTip(event, 'fs11', 53)" class="i">self</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs25', 54)" onmouseover="showTip(event, 'fs25', 54)" class="f">GetEnumerator</span>() <span class="o">=</span> (<span onmouseout="hideTip(event, 'fs11', 55)" onmouseover="showTip(event, 'fs11', 55)" class="i">self</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs10', 56)" onmouseover="showTip(event, 'fs10', 56)" class="t">IEnumerable</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>)<span class="o">.</span><span class="f">GetEnumerator</span>() <span class="o">:&gt;</span> _ 

<span class="c">// Monoid Comprehension</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs26', 57)" onmouseover="showTip(event, 'fs26', 57)" class="t">LazyListBuilder</span>() <span class="o">=</span> 
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs27', 58)" onmouseover="showTip(event, 'fs27', 58)" class="i">self</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 59)" onmouseover="showTip(event, 'fs28', 59)" class="f">Yield</span> <span onmouseout="hideTip(event, 'fs29', 60)" onmouseover="showTip(event, 'fs29', 60)" class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 61)" onmouseover="showTip(event, 'fs6', 61)" class="p">Cons</span> (<span onmouseout="hideTip(event, 'fs29', 62)" onmouseover="showTip(event, 'fs29', 62)" class="i">value</span>, <span class="k">fun</span> () <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 63)" onmouseover="showTip(event, 'fs5', 63)" class="p">Empty</span>)
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs27', 64)" onmouseover="showTip(event, 'fs27', 64)" class="i">self</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 65)" onmouseover="showTip(event, 'fs30', 65)" class="f">YieldFrom</span> <span onmouseout="hideTip(event, 'fs31', 66)" onmouseover="showTip(event, 'fs31', 66)" class="i">value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs31', 67)" onmouseover="showTip(event, 'fs31', 67)" class="i">value</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs27', 68)" onmouseover="showTip(event, 'fs27', 68)" class="i">self</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 69)" onmouseover="showTip(event, 'fs32', 69)" class="f">Combine</span>(<span onmouseout="hideTip(event, 'fs33', 70)" onmouseover="showTip(event, 'fs33', 70)" class="i">first</span>, <span onmouseout="hideTip(event, 'fs34', 71)" onmouseover="showTip(event, 'fs34', 71)" class="i">second</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 72)" onmouseover="showTip(event, 'fs9', 72)" class="p">Combine</span> (<span onmouseout="hideTip(event, 'fs33', 73)" onmouseover="showTip(event, 'fs33', 73)" class="i">first</span>, <span onmouseout="hideTip(event, 'fs34', 74)" onmouseover="showTip(event, 'fs34', 74)" class="i">second</span>) 
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs27', 75)" onmouseover="showTip(event, 'fs27', 75)" class="i">self</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 76)" onmouseover="showTip(event, 'fs35', 76)" class="f">Delay</span> <span onmouseout="hideTip(event, 'fs36', 77)" onmouseover="showTip(event, 'fs36', 77)" class="f">f</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 78)" onmouseover="showTip(event, 'fs8', 78)" class="p">Delay</span> <span onmouseout="hideTip(event, 'fs36', 79)" onmouseover="showTip(event, 'fs36', 79)" class="f">f</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs27', 80)" onmouseover="showTip(event, 'fs27', 80)" class="i">self</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 81)" onmouseover="showTip(event, 'fs37', 81)" class="f">Zero</span>() <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 82)" onmouseover="showTip(event, 'fs5', 82)" class="p">Empty</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 83)" onmouseover="showTip(event, 'fs38', 83)" class="i">lazyList</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs26', 84)" onmouseover="showTip(event, 'fs26', 84)" class="t">LazyListBuilder</span>()


<span class="c">// Example</span>
<span class="prep">#time</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs39', 85)" onmouseover="showTip(event, 'fs39', 85)" class="t">Tree</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 86)" onmouseover="showTip(event, 'fs40', 86)" class="p">Empty</span> | <span onmouseout="hideTip(event, 'fs41', 87)" onmouseover="showTip(event, 'fs41', 87)" class="p">Branch</span> <span class="k">of</span> <span class="o">&#39;</span><span class="i">T</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs39', 88)" onmouseover="showTip(event, 'fs39', 88)" class="t">Tree</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs39', 89)" onmouseover="showTip(event, 'fs39', 89)" class="t">Tree</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>

<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs42', 90)" onmouseover="showTip(event, 'fs42', 90)" class="f">createBalancedTree</span> <span onmouseout="hideTip(event, 'fs43', 91)" onmouseover="showTip(event, 'fs43', 91)" class="i">n</span> <span class="o">=</span> 
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs43', 92)" onmouseover="showTip(event, 'fs43', 92)" class="i">n</span> <span class="o">&lt;=</span> <span class="n">0</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs40', 93)" onmouseover="showTip(event, 'fs40', 93)" class="p">Empty</span>
    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs41', 94)" onmouseover="showTip(event, 'fs41', 94)" class="p">Branch</span> (<span onmouseout="hideTip(event, 'fs43', 95)" onmouseover="showTip(event, 'fs43', 95)" class="i">n</span>, <span onmouseout="hideTip(event, 'fs42', 96)" onmouseover="showTip(event, 'fs42', 96)" class="f">createBalancedTree</span> (<span onmouseout="hideTip(event, 'fs43', 97)" onmouseover="showTip(event, 'fs43', 97)" class="i">n</span> <span class="o">-</span> <span class="n">1</span>), <span onmouseout="hideTip(event, 'fs42', 98)" onmouseover="showTip(event, 'fs42', 98)" class="f">createBalancedTree</span> (<span onmouseout="hideTip(event, 'fs43', 99)" onmouseover="showTip(event, 'fs43', 99)" class="i">n</span> <span class="o">-</span> <span class="n">1</span>))

<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs44', 100)" onmouseover="showTip(event, 'fs44', 100)" class="f">createLeftSpinedTree</span> <span onmouseout="hideTip(event, 'fs43', 101)" onmouseover="showTip(event, 'fs43', 101)" class="i">n</span> <span onmouseout="hideTip(event, 'fs45', 102)" onmouseover="showTip(event, 'fs45', 102)" class="i">acc</span> <span class="o">=</span> 
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs43', 103)" onmouseover="showTip(event, 'fs43', 103)" class="i">n</span> <span class="o">&lt;=</span> <span class="n">0</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs45', 104)" onmouseover="showTip(event, 'fs45', 104)" class="i">acc</span>
    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs44', 105)" onmouseover="showTip(event, 'fs44', 105)" class="f">createLeftSpinedTree</span> (<span onmouseout="hideTip(event, 'fs43', 106)" onmouseover="showTip(event, 'fs43', 106)" class="i">n</span> <span class="o">-</span> <span class="n">1</span>) (<span onmouseout="hideTip(event, 'fs41', 107)" onmouseover="showTip(event, 'fs41', 107)" class="p">Branch</span> (<span onmouseout="hideTip(event, 'fs43', 108)" onmouseover="showTip(event, 'fs43', 108)" class="i">n</span>, <span onmouseout="hideTip(event, 'fs45', 109)" onmouseover="showTip(event, 'fs45', 109)" class="i">acc</span>, <span onmouseout="hideTip(event, 'fs40', 110)" onmouseover="showTip(event, 'fs40', 110)" class="p">Empty</span>))

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs46', 111)" onmouseover="showTip(event, 'fs46', 111)" class="i">tree</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs42', 112)" onmouseover="showTip(event, 'fs42', 112)" class="f">createBalancedTree</span> <span class="n">20</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs47', 113)" onmouseover="showTip(event, 'fs47', 113)" class="i">leftSpinedTree</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs44', 114)" onmouseover="showTip(event, 'fs44', 114)" class="f">createLeftSpinedTree</span> <span class="n">100000</span> <span onmouseout="hideTip(event, 'fs40', 115)" onmouseover="showTip(event, 'fs40', 115)" class="p">Empty</span>

<span class="c">// Seq test</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs48', 116)" onmouseover="showTip(event, 'fs48', 116)" class="f">flattenToSeq</span> <span onmouseout="hideTip(event, 'fs49', 117)" onmouseover="showTip(event, 'fs49', 117)" class="i">tree</span> <span class="o">=</span>
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs49', 118)" onmouseover="showTip(event, 'fs49', 118)" class="i">tree</span> <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs40', 119)" onmouseover="showTip(event, 'fs40', 119)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 120)" onmouseover="showTip(event, 'fs15', 120)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs16', 121)" onmouseover="showTip(event, 'fs16', 121)" class="i">empty</span>
    | <span onmouseout="hideTip(event, 'fs41', 122)" onmouseover="showTip(event, 'fs41', 122)" class="p">Branch</span> (<span onmouseout="hideTip(event, 'fs19', 123)" onmouseover="showTip(event, 'fs19', 123)" class="i">value</span>, <span onmouseout="hideTip(event, 'fs50', 124)" onmouseover="showTip(event, 'fs50', 124)" class="i">left</span>, <span onmouseout="hideTip(event, 'fs51', 125)" onmouseover="showTip(event, 'fs51', 125)" class="i">right</span>) <span class="k">-&gt;</span> 
        <span onmouseout="hideTip(event, 'fs21', 126)" onmouseover="showTip(event, 'fs21', 126)" class="i">seq</span> { <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs19', 127)" onmouseover="showTip(event, 'fs19', 127)" class="i">value</span>; <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs48', 128)" onmouseover="showTip(event, 'fs48', 128)" class="f">flattenToSeq</span> <span onmouseout="hideTip(event, 'fs50', 129)" onmouseover="showTip(event, 'fs50', 129)" class="i">left</span>; <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs48', 130)" onmouseover="showTip(event, 'fs48', 130)" class="f">flattenToSeq</span> <span onmouseout="hideTip(event, 'fs51', 131)" onmouseover="showTip(event, 'fs51', 131)" class="i">right</span> }

<span onmouseout="hideTip(event, 'fs49', 132)" onmouseover="showTip(event, 'fs49', 132)" class="i">tree</span>
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs48', 133)" onmouseover="showTip(event, 'fs48', 133)" class="f">flattenToSeq</span>
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 134)" onmouseover="showTip(event, 'fs15', 134)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 135)" onmouseover="showTip(event, 'fs52', 135)" class="f">length</span> <span class="c">// check time</span>

<span onmouseout="hideTip(event, 'fs47', 136)" onmouseover="showTip(event, 'fs47', 136)" class="i">leftSpinedTree</span>
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs48', 137)" onmouseover="showTip(event, 'fs48', 137)" class="f">flattenToSeq</span>
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 138)" onmouseover="showTip(event, 'fs15', 138)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 139)" onmouseover="showTip(event, 'fs52', 139)" class="f">length</span> <span class="c">// stack-overflow</span>

<span class="c">// LazyList test</span>
<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs53', 140)" onmouseover="showTip(event, 'fs53', 140)" class="f">flattenToLazyList</span> <span onmouseout="hideTip(event, 'fs49', 141)" onmouseover="showTip(event, 'fs49', 141)" class="i">tree</span> <span class="o">=</span>
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs49', 142)" onmouseover="showTip(event, 'fs49', 142)" class="i">tree</span> <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs40', 143)" onmouseover="showTip(event, 'fs40', 143)" class="p">Empty</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs4', 144)" onmouseover="showTip(event, 'fs4', 144)" class="t">LazyList</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 145)" onmouseover="showTip(event, 'fs5', 145)" class="p">Empty</span> 
    | <span onmouseout="hideTip(event, 'fs41', 146)" onmouseover="showTip(event, 'fs41', 146)" class="p">Branch</span> (<span onmouseout="hideTip(event, 'fs19', 147)" onmouseover="showTip(event, 'fs19', 147)" class="i">value</span>, <span onmouseout="hideTip(event, 'fs50', 148)" onmouseover="showTip(event, 'fs50', 148)" class="i">left</span>, <span onmouseout="hideTip(event, 'fs51', 149)" onmouseover="showTip(event, 'fs51', 149)" class="i">right</span>) <span class="k">-&gt;</span> 
        <span onmouseout="hideTip(event, 'fs38', 150)" onmouseover="showTip(event, 'fs38', 150)" class="i">lazyList</span> { <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs19', 151)" onmouseover="showTip(event, 'fs19', 151)" class="i">value</span>; <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs53', 152)" onmouseover="showTip(event, 'fs53', 152)" class="f">flattenToLazyList</span> <span onmouseout="hideTip(event, 'fs50', 153)" onmouseover="showTip(event, 'fs50', 153)" class="i">left</span>; <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs53', 154)" onmouseover="showTip(event, 'fs53', 154)" class="f">flattenToLazyList</span> <span onmouseout="hideTip(event, 'fs51', 155)" onmouseover="showTip(event, 'fs51', 155)" class="i">right</span> }

<span onmouseout="hideTip(event, 'fs49', 156)" onmouseover="showTip(event, 'fs49', 156)" class="i">tree</span>
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs53', 157)" onmouseover="showTip(event, 'fs53', 157)" class="f">flattenToLazyList</span>
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 158)" onmouseover="showTip(event, 'fs15', 158)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 159)" onmouseover="showTip(event, 'fs52', 159)" class="f">length</span> <span class="c">// check time</span>

<span onmouseout="hideTip(event, 'fs47', 160)" onmouseover="showTip(event, 'fs47', 160)" class="i">leftSpinedTree</span>
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs53', 161)" onmouseover="showTip(event, 'fs53', 161)" class="f">flattenToLazyList</span>
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 162)" onmouseover="showTip(event, 'fs15', 162)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs52', 163)" onmouseover="showTip(event, 'fs52', 163)" class="f">length</span> <span class="c">// check time</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Collections</div>
<div class="tip" id="fs3">namespace System.Collections.Generic</div>
<div class="tip" id="fs4">type LazyList&lt;&#39;T&gt; =<br />&#160;&#160;| Empty<br />&#160;&#160;| Cons of &#39;T * (unit -&gt; LazyList&lt;&#39;T&gt;)<br />&#160;&#160;| Delay of (unit -&gt; LazyList&lt;&#39;T&gt;)<br />&#160;&#160;| Combine of LazyList&lt;&#39;T&gt; * LazyList&lt;&#39;T&gt;<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Script.LazyList&lt;_&gt;</div>
<div class="tip" id="fs5">union case LazyList.Empty: LazyList&lt;&#39;T&gt;</div>
<div class="tip" id="fs6">union case LazyList.Cons: &#39;T * (unit -&gt; LazyList&lt;&#39;T&gt;) -&gt; LazyList&lt;&#39;T&gt;</div>
<div class="tip" id="fs7">type unit = Unit<br /><br />Full name: Microsoft.FSharp.Core.unit</div>
<div class="tip" id="fs8">union case LazyList.Delay: (unit -&gt; LazyList&lt;&#39;T&gt;) -&gt; LazyList&lt;&#39;T&gt;</div>
<div class="tip" id="fs9">union case LazyList.Combine: LazyList&lt;&#39;T&gt; * LazyList&lt;&#39;T&gt; -&gt; LazyList&lt;&#39;T&gt;</div>
<div class="tip" id="fs10">Multiple items<br />type IEnumerable =<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br /><br />Full name: System.Collections.IEnumerable<br /><br />--------------------<br />type IEnumerable&lt;&#39;T&gt; =<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator&lt;&#39;T&gt;<br /><br />Full name: System.Collections.Generic.IEnumerable&lt;_&gt;</div>
<div class="tip" id="fs11">val self : LazyList&lt;&#39;T&gt;</div>
<div class="tip" id="fs12">override LazyList.GetEnumerator : unit -&gt; IEnumerator&lt;&#39;T&gt;<br /><br />Full name: Script.LazyList`1.GetEnumerator</div>
<div class="tip" id="fs13">val toSeq : (LazyList&lt;&#39;a&gt; list -&gt; seq&lt;&#39;a&gt;)</div>
<div class="tip" id="fs14">val stack : LazyList&lt;&#39;a&gt; list</div>
<div class="tip" id="fs15">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs16">val empty&lt;&#39;T&gt; : seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.Seq.empty</div>
<div class="tip" id="fs17">val head : LazyList&lt;&#39;a&gt;</div>
<div class="tip" id="fs18">val tail : LazyList&lt;&#39;a&gt; list</div>
<div class="tip" id="fs19">val value : &#39;a</div>
<div class="tip" id="fs20">val rest : (unit -&gt; LazyList&lt;&#39;a&gt;)</div>
<div class="tip" id="fs21">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.Operators.seq<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = IEnumerable&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.seq&lt;_&gt;</div>
<div class="tip" id="fs22">val f : (unit -&gt; LazyList&lt;&#39;a&gt;)</div>
<div class="tip" id="fs23">val first : LazyList&lt;&#39;a&gt;</div>
<div class="tip" id="fs24">val second : LazyList&lt;&#39;a&gt;</div>
<div class="tip" id="fs25">override LazyList.GetEnumerator : unit -&gt; IEnumerator<br /><br />Full name: Script.LazyList`1.GetEnumerator</div>
<div class="tip" id="fs26">Multiple items<br />type LazyListBuilder =<br />&#160;&#160;new : unit -&gt; LazyListBuilder<br />&#160;&#160;member Combine : first:LazyList&lt;&#39;c&gt; * second:LazyList&lt;&#39;c&gt; -&gt; LazyList&lt;&#39;c&gt;<br />&#160;&#160;member Delay : f:(unit -&gt; LazyList&lt;&#39;b&gt;) -&gt; LazyList&lt;&#39;b&gt;<br />&#160;&#160;member Yield : value:&#39;e -&gt; LazyList&lt;&#39;e&gt;<br />&#160;&#160;member YieldFrom : value:&#39;d -&gt; &#39;d<br />&#160;&#160;member Zero : unit -&gt; LazyList&lt;&#39;a&gt;<br /><br />Full name: Script.LazyListBuilder<br /><br />--------------------<br />new : unit -&gt; LazyListBuilder</div>
<div class="tip" id="fs27">val self : LazyListBuilder</div>
<div class="tip" id="fs28">member LazyListBuilder.Yield : value:&#39;e -&gt; LazyList&lt;&#39;e&gt;<br /><br />Full name: Script.LazyListBuilder.Yield</div>
<div class="tip" id="fs29">val value : &#39;e</div>
<div class="tip" id="fs30">member LazyListBuilder.YieldFrom : value:&#39;d -&gt; &#39;d<br /><br />Full name: Script.LazyListBuilder.YieldFrom</div>
<div class="tip" id="fs31">val value : &#39;d</div>
<div class="tip" id="fs32">member LazyListBuilder.Combine : first:LazyList&lt;&#39;c&gt; * second:LazyList&lt;&#39;c&gt; -&gt; LazyList&lt;&#39;c&gt;<br /><br />Full name: Script.LazyListBuilder.Combine</div>
<div class="tip" id="fs33">val first : LazyList&lt;&#39;c&gt;</div>
<div class="tip" id="fs34">val second : LazyList&lt;&#39;c&gt;</div>
<div class="tip" id="fs35">member LazyListBuilder.Delay : f:(unit -&gt; LazyList&lt;&#39;b&gt;) -&gt; LazyList&lt;&#39;b&gt;<br /><br />Full name: Script.LazyListBuilder.Delay</div>
<div class="tip" id="fs36">val f : (unit -&gt; LazyList&lt;&#39;b&gt;)</div>
<div class="tip" id="fs37">member LazyListBuilder.Zero : unit -&gt; LazyList&lt;&#39;a&gt;<br /><br />Full name: Script.LazyListBuilder.Zero</div>
<div class="tip" id="fs38">val lazyList : LazyListBuilder<br /><br />Full name: Script.lazyList</div>
<div class="tip" id="fs39">type Tree&lt;&#39;T&gt; =<br />&#160;&#160;| Empty<br />&#160;&#160;| Branch of &#39;T * Tree&lt;&#39;T&gt; * Tree&lt;&#39;T&gt;<br /><br />Full name: Script.Tree&lt;_&gt;</div>
<div class="tip" id="fs40">union case Tree.Empty: Tree&lt;&#39;T&gt;</div>
<div class="tip" id="fs41">union case Tree.Branch: &#39;T * Tree&lt;&#39;T&gt; * Tree&lt;&#39;T&gt; -&gt; Tree&lt;&#39;T&gt;</div>
<div class="tip" id="fs42">val createBalancedTree : n:int -&gt; Tree&lt;int&gt;<br /><br />Full name: Script.createBalancedTree</div>
<div class="tip" id="fs43">val n : int</div>
<div class="tip" id="fs44">val createLeftSpinedTree : n:int -&gt; acc:Tree&lt;int&gt; -&gt; Tree&lt;int&gt;<br /><br />Full name: Script.createLeftSpinedTree</div>
<div class="tip" id="fs45">val acc : Tree&lt;int&gt;</div>
<div class="tip" id="fs46">val tree : Tree&lt;int&gt;<br /><br />Full name: Script.tree</div>
<div class="tip" id="fs47">val leftSpinedTree : Tree&lt;int&gt;<br /><br />Full name: Script.leftSpinedTree</div>
<div class="tip" id="fs48">val flattenToSeq : tree:Tree&lt;&#39;a&gt; -&gt; seq&lt;&#39;a&gt;<br /><br />Full name: Script.flattenToSeq</div>
<div class="tip" id="fs49">val tree : Tree&lt;&#39;a&gt;</div>
<div class="tip" id="fs50">val left : Tree&lt;&#39;a&gt;</div>
<div class="tip" id="fs51">val right : Tree&lt;&#39;a&gt;</div>
<div class="tip" id="fs52">val length : source:seq&lt;&#39;T&gt; -&gt; int<br /><br />Full name: Microsoft.FSharp.Collections.Seq.length</div>
<div class="tip" id="fs53">val flattenToLazyList : tree:Tree&lt;&#39;a&gt; -&gt; LazyList&lt;&#39;a&gt;<br /><br />Full name: Script.flattenToLazyList</div>

