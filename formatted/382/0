<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">namespace</span> <span class="i">Newtonsoft</span><span class="o">.</span><span class="i">Json</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">FSharp</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Reflection</span>
<span class="k">open</span> <span class="i">Newtonsoft</span><span class="o">.</span><span class="i">Json</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">System</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="t">TupleConverter</span>() <span class="o">=</span>
  <span class="k">inherit</span> <span class="i">JsonConverter</span>()

  <span class="k">override</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">CanRead</span>  <span class="o">=</span> <span class="k">true</span>
  <span class="k">override</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">CanWrite</span> <span class="o">=</span> <span class="k">true</span>
  
  <span class="k">override</span> <span class="i">__</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="f">CanConvert</span>(<span class="i">vType</span>) <span class="o">=</span> <span class="i">vType</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="i">FSharpType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="i">IsTuple</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace Microsoft.FSharp</div>
<div class="tip" id="fs2">namespace Microsoft</div>
<div class="tip" id="fs3">namespace Microsoft.FSharp.Reflection</div>
<div class="tip" id="fs4">namespace System</div>
<div class="tip" id="fs5">Multiple items<br />type TupleConverter =<br />&#160;&#160;inherit obj<br />&#160;&#160;new : unit -&gt; TupleConverter<br />&#160;&#160;override CanConvert : vType:&#39;a -&gt; &#39;b<br />&#160;&#160;override CanRead : &#39;a<br />&#160;&#160;override CanWrite : &#39;a<br /><br />Full name: Newtonsoft.Json.FSharp.TupleConverter<br /><br />--------------------<br />new : unit -&gt; TupleConverter</div>
<div class="tip" id="fs6">override TupleConverter.CanRead : &#39;a<br /><br />Full name: Newtonsoft.Json.FSharp.TupleConverter.CanRead</div>
<div class="tip" id="fs7">override TupleConverter.CanWrite : &#39;a<br /><br />Full name: Newtonsoft.Json.FSharp.TupleConverter.CanWrite</div>
<div class="tip" id="fs8">override TupleConverter.CanConvert : vType:&#39;a -&gt; &#39;b<br /><br />Full name: Newtonsoft.Json.FSharp.TupleConverter.CanConvert</div>
<div class="tip" id="fs9">type FSharpType =<br />&#160;&#160;static member GetExceptionFields : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetFunctionElements : functionType:Type -&gt; Type * Type<br />&#160;&#160;static member GetRecordFields : recordType:Type * ?bindingFlags:BindingFlags -&gt; PropertyInfo []<br />&#160;&#160;static member GetTupleElements : tupleType:Type -&gt; Type []<br />&#160;&#160;static member GetUnionCases : unionType:Type * ?bindingFlags:BindingFlags -&gt; UnionCaseInfo []<br />&#160;&#160;static member IsExceptionRepresentation : exceptionType:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsFunction : typ:Type -&gt; bool<br />&#160;&#160;static member IsModule : typ:Type -&gt; bool<br />&#160;&#160;static member IsRecord : typ:Type * ?bindingFlags:BindingFlags -&gt; bool<br />&#160;&#160;static member IsTuple : typ:Type -&gt; bool<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Reflection.FSharpType</div>
<div class="tip" id="fs10">static member FSharpType.IsTuple : typ:Type -&gt; bool</div>

