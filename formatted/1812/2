<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">CsvSchema</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">System</span>

<span class="k">module</span> <span class="t">TypeDetermination</span> <span class="o">=</span>
        <span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">TypeWrapper</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="p">None</span> | <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="p">Nullable</span> | <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="p">Option</span>

        <span class="c">//https://github.com/fsharp/FSharp.Data/blob/master/src/Csv/CsvInference.fs</span>
        <span class="k">let</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="i">nameToType</span> <span class="o">=</span>
          [<span class="s">&quot;int&quot;</span> ,           (<span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="t">int</span><span class="o">&gt;</span>     , <span onmouseout="hideTip(event, 'fs3', 10)" onmouseover="showTip(event, 'fs3', 10)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 11)" onmouseover="showTip(event, 'fs4', 11)" class="p">None</span>    )
           <span class="s">&quot;int64&quot;</span>,          (<span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="t">int64</span><span class="o">&gt;</span>   , <span onmouseout="hideTip(event, 'fs3', 14)" onmouseover="showTip(event, 'fs3', 14)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 15)" onmouseover="showTip(event, 'fs4', 15)" class="p">None</span>    )
           <span class="s">&quot;bool&quot;</span>,           (<span onmouseout="hideTip(event, 'fs8', 16)" onmouseover="showTip(event, 'fs8', 16)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="t">bool</span><span class="o">&gt;</span>    , <span onmouseout="hideTip(event, 'fs3', 18)" onmouseover="showTip(event, 'fs3', 18)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 19)" onmouseover="showTip(event, 'fs4', 19)" class="p">None</span>    )
           <span class="s">&quot;float&quot;</span>,          (<span onmouseout="hideTip(event, 'fs8', 20)" onmouseover="showTip(event, 'fs8', 20)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="t">float</span><span class="o">&gt;</span>   , <span onmouseout="hideTip(event, 'fs3', 22)" onmouseover="showTip(event, 'fs3', 22)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 23)" onmouseover="showTip(event, 'fs4', 23)" class="p">None</span>    )
           <span class="s">&quot;decimal&quot;</span>,        (<span onmouseout="hideTip(event, 'fs8', 24)" onmouseover="showTip(event, 'fs8', 24)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs13', 25)" onmouseover="showTip(event, 'fs13', 25)" class="t">decimal</span><span class="o">&gt;</span> , <span onmouseout="hideTip(event, 'fs3', 26)" onmouseover="showTip(event, 'fs3', 26)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 27)" onmouseover="showTip(event, 'fs4', 27)" class="p">None</span>    )
           <span class="s">&quot;date&quot;</span>,           (<span onmouseout="hideTip(event, 'fs8', 28)" onmouseover="showTip(event, 'fs8', 28)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs14', 29)" onmouseover="showTip(event, 'fs14', 29)" class="t">DateTime</span><span class="o">&gt;</span>, <span onmouseout="hideTip(event, 'fs3', 30)" onmouseover="showTip(event, 'fs3', 30)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 31)" onmouseover="showTip(event, 'fs4', 31)" class="p">None</span>    )
           <span class="s">&quot;guid&quot;</span>,           (<span onmouseout="hideTip(event, 'fs8', 32)" onmouseover="showTip(event, 'fs8', 32)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs15', 33)" onmouseover="showTip(event, 'fs15', 33)" class="t">Guid</span><span class="o">&gt;</span>    , <span onmouseout="hideTip(event, 'fs3', 34)" onmouseover="showTip(event, 'fs3', 34)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 35)" onmouseover="showTip(event, 'fs4', 35)" class="p">None</span>    )
           <span class="s">&quot;string&quot;</span>,         (<span onmouseout="hideTip(event, 'fs8', 36)" onmouseover="showTip(event, 'fs8', 36)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs16', 37)" onmouseover="showTip(event, 'fs16', 37)" class="t">String</span><span class="o">&gt;</span>  , <span onmouseout="hideTip(event, 'fs3', 38)" onmouseover="showTip(event, 'fs3', 38)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs4', 39)" onmouseover="showTip(event, 'fs4', 39)" class="p">None</span>    )
           <span class="s">&quot;int?&quot;</span>,           (<span onmouseout="hideTip(event, 'fs8', 40)" onmouseover="showTip(event, 'fs8', 40)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs9', 41)" onmouseover="showTip(event, 'fs9', 41)" class="t">int</span><span class="o">&gt;</span>     , <span onmouseout="hideTip(event, 'fs3', 42)" onmouseover="showTip(event, 'fs3', 42)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 43)" onmouseover="showTip(event, 'fs17', 43)" class="p">Nullable</span>)
           <span class="s">&quot;int64?&quot;</span>,         (<span onmouseout="hideTip(event, 'fs8', 44)" onmouseover="showTip(event, 'fs8', 44)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs10', 45)" onmouseover="showTip(event, 'fs10', 45)" class="t">int64</span><span class="o">&gt;</span>   , <span onmouseout="hideTip(event, 'fs3', 46)" onmouseover="showTip(event, 'fs3', 46)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 47)" onmouseover="showTip(event, 'fs17', 47)" class="p">Nullable</span>)
           <span class="s">&quot;bool?&quot;</span>,          (<span onmouseout="hideTip(event, 'fs8', 48)" onmouseover="showTip(event, 'fs8', 48)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 49)" onmouseover="showTip(event, 'fs11', 49)" class="t">bool</span><span class="o">&gt;</span>    , <span onmouseout="hideTip(event, 'fs3', 50)" onmouseover="showTip(event, 'fs3', 50)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 51)" onmouseover="showTip(event, 'fs17', 51)" class="p">Nullable</span>)
           <span class="s">&quot;float?&quot;</span>,         (<span onmouseout="hideTip(event, 'fs8', 52)" onmouseover="showTip(event, 'fs8', 52)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs12', 53)" onmouseover="showTip(event, 'fs12', 53)" class="t">float</span><span class="o">&gt;</span>   , <span onmouseout="hideTip(event, 'fs3', 54)" onmouseover="showTip(event, 'fs3', 54)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 55)" onmouseover="showTip(event, 'fs17', 55)" class="p">Nullable</span>)
           <span class="s">&quot;decimal?&quot;</span>,       (<span onmouseout="hideTip(event, 'fs8', 56)" onmouseover="showTip(event, 'fs8', 56)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs13', 57)" onmouseover="showTip(event, 'fs13', 57)" class="t">decimal</span><span class="o">&gt;</span> , <span onmouseout="hideTip(event, 'fs3', 58)" onmouseover="showTip(event, 'fs3', 58)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 59)" onmouseover="showTip(event, 'fs17', 59)" class="p">Nullable</span>)
           <span class="s">&quot;date?&quot;</span>,          (<span onmouseout="hideTip(event, 'fs8', 60)" onmouseover="showTip(event, 'fs8', 60)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs14', 61)" onmouseover="showTip(event, 'fs14', 61)" class="t">DateTime</span><span class="o">&gt;</span>, <span onmouseout="hideTip(event, 'fs3', 62)" onmouseover="showTip(event, 'fs3', 62)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 63)" onmouseover="showTip(event, 'fs17', 63)" class="p">Nullable</span>)
           <span class="s">&quot;guid?&quot;</span>,          (<span onmouseout="hideTip(event, 'fs8', 64)" onmouseover="showTip(event, 'fs8', 64)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs15', 65)" onmouseover="showTip(event, 'fs15', 65)" class="t">Guid</span><span class="o">&gt;</span>    , <span onmouseout="hideTip(event, 'fs3', 66)" onmouseover="showTip(event, 'fs3', 66)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs17', 67)" onmouseover="showTip(event, 'fs17', 67)" class="p">Nullable</span>)
           <span class="s">&quot;int option&quot;</span>,     (<span onmouseout="hideTip(event, 'fs8', 68)" onmouseover="showTip(event, 'fs8', 68)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs9', 69)" onmouseover="showTip(event, 'fs9', 69)" class="t">int</span><span class="o">&gt;</span>     , <span onmouseout="hideTip(event, 'fs3', 70)" onmouseover="showTip(event, 'fs3', 70)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 71)" onmouseover="showTip(event, 'fs18', 71)" class="p">Option</span>  )
           <span class="s">&quot;int64 option&quot;</span>,   (<span onmouseout="hideTip(event, 'fs8', 72)" onmouseover="showTip(event, 'fs8', 72)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs10', 73)" onmouseover="showTip(event, 'fs10', 73)" class="t">int64</span><span class="o">&gt;</span>   , <span onmouseout="hideTip(event, 'fs3', 74)" onmouseover="showTip(event, 'fs3', 74)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 75)" onmouseover="showTip(event, 'fs18', 75)" class="p">Option</span>  )
           <span class="s">&quot;bool option&quot;</span>,    (<span onmouseout="hideTip(event, 'fs8', 76)" onmouseover="showTip(event, 'fs8', 76)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 77)" onmouseover="showTip(event, 'fs11', 77)" class="t">bool</span><span class="o">&gt;</span>    , <span onmouseout="hideTip(event, 'fs3', 78)" onmouseover="showTip(event, 'fs3', 78)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 79)" onmouseover="showTip(event, 'fs18', 79)" class="p">Option</span>  )
           <span class="s">&quot;float option&quot;</span>,   (<span onmouseout="hideTip(event, 'fs8', 80)" onmouseover="showTip(event, 'fs8', 80)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs12', 81)" onmouseover="showTip(event, 'fs12', 81)" class="t">float</span><span class="o">&gt;</span>   , <span onmouseout="hideTip(event, 'fs3', 82)" onmouseover="showTip(event, 'fs3', 82)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 83)" onmouseover="showTip(event, 'fs18', 83)" class="p">Option</span>  )
           <span class="s">&quot;decimal option&quot;</span>, (<span onmouseout="hideTip(event, 'fs8', 84)" onmouseover="showTip(event, 'fs8', 84)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs13', 85)" onmouseover="showTip(event, 'fs13', 85)" class="t">decimal</span><span class="o">&gt;</span> , <span onmouseout="hideTip(event, 'fs3', 86)" onmouseover="showTip(event, 'fs3', 86)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 87)" onmouseover="showTip(event, 'fs18', 87)" class="p">Option</span>  )
           <span class="s">&quot;date option&quot;</span>,    (<span onmouseout="hideTip(event, 'fs8', 88)" onmouseover="showTip(event, 'fs8', 88)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs14', 89)" onmouseover="showTip(event, 'fs14', 89)" class="t">DateTime</span><span class="o">&gt;</span>, <span onmouseout="hideTip(event, 'fs3', 90)" onmouseover="showTip(event, 'fs3', 90)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 91)" onmouseover="showTip(event, 'fs18', 91)" class="p">Option</span>  )
           <span class="s">&quot;guid option&quot;</span>,    (<span onmouseout="hideTip(event, 'fs8', 92)" onmouseover="showTip(event, 'fs8', 92)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs15', 93)" onmouseover="showTip(event, 'fs15', 93)" class="t">Guid</span><span class="o">&gt;</span>    , <span onmouseout="hideTip(event, 'fs3', 94)" onmouseover="showTip(event, 'fs3', 94)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 95)" onmouseover="showTip(event, 'fs18', 95)" class="p">Option</span>  )
           <span class="s">&quot;string option&quot;</span>,  (<span onmouseout="hideTip(event, 'fs8', 96)" onmouseover="showTip(event, 'fs8', 96)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs19', 97)" onmouseover="showTip(event, 'fs19', 97)" class="t">string</span><span class="o">&gt;</span>  , <span onmouseout="hideTip(event, 'fs3', 98)" onmouseover="showTip(event, 'fs3', 98)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs18', 99)" onmouseover="showTip(event, 'fs18', 99)" class="p">Option</span>  )]
          <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs20', 100)" onmouseover="showTip(event, 'fs20', 100)" class="f">dict</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 101)" onmouseover="showTip(event, 'fs21', 101)" class="f">determinType</span> <span onmouseout="hideTip(event, 'fs22', 102)" onmouseover="showTip(event, 'fs22', 102)" class="i">s</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 103)" onmouseover="showTip(event, 'fs7', 103)" class="i">nameToType</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs22', 104)" onmouseover="showTip(event, 'fs22', 104)" class="i">s</span>]

<span class="k">module</span> <span class="t">Parsing</span> <span class="o">=</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 105)" onmouseover="showTip(event, 'fs23', 105)" class="f">take</span> <span onmouseout="hideTip(event, 'fs24', 106)" onmouseover="showTip(event, 'fs24', 106)" class="i">i</span> <span onmouseout="hideTip(event, 'fs25', 107)" onmouseover="showTip(event, 'fs25', 107)" class="f">f</span> (<span onmouseout="hideTip(event, 'fs22', 108)" onmouseover="showTip(event, 'fs22', 108)" class="i">s</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs19', 109)" onmouseover="showTip(event, 'fs19', 109)" class="t">string</span>) <span class="o">=</span> 
        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs26', 110)" onmouseover="showTip(event, 'fs26', 110)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs24', 111)" onmouseover="showTip(event, 'fs24', 111)" class="i">i</span> <span onmouseout="hideTip(event, 'fs27', 112)" onmouseover="showTip(event, 'fs27', 112)" class="i">acc</span> <span class="o">=</span>
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs24', 113)" onmouseover="showTip(event, 'fs24', 113)" class="i">i</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs22', 114)" onmouseover="showTip(event, 'fs22', 114)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 115)" onmouseover="showTip(event, 'fs28', 115)" class="i">Length</span> <span class="k">then</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 116)" onmouseover="showTip(event, 'fs29', 116)" class="i">c</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 117)" onmouseover="showTip(event, 'fs22', 117)" class="i">s</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs24', 118)" onmouseover="showTip(event, 'fs24', 118)" class="i">i</span>]
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs25', 119)" onmouseover="showTip(event, 'fs25', 119)" class="f">f</span> <span onmouseout="hideTip(event, 'fs29', 120)" onmouseover="showTip(event, 'fs29', 120)" class="i">c</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs26', 121)" onmouseover="showTip(event, 'fs26', 121)" class="f">loop</span> (<span onmouseout="hideTip(event, 'fs24', 122)" onmouseover="showTip(event, 'fs24', 122)" class="i">i</span><span class="o">+</span><span class="n">1</span>) (<span onmouseout="hideTip(event, 'fs29', 123)" onmouseover="showTip(event, 'fs29', 123)" class="i">c</span><span class="o">::</span><span onmouseout="hideTip(event, 'fs27', 124)" onmouseover="showTip(event, 'fs27', 124)" class="i">acc</span>)
                <span class="k">else</span> <span onmouseout="hideTip(event, 'fs16', 125)" onmouseover="showTip(event, 'fs16', 125)" class="t">String</span>(<span onmouseout="hideTip(event, 'fs27', 126)" onmouseover="showTip(event, 'fs27', 126)" class="i">acc</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 127)" onmouseover="showTip(event, 'fs30', 127)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 128)" onmouseover="showTip(event, 'fs31', 128)" class="f">rev</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 129)" onmouseover="showTip(event, 'fs30', 129)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 130)" onmouseover="showTip(event, 'fs32', 130)" class="f">toArray</span>),(<span onmouseout="hideTip(event, 'fs24', 131)" onmouseover="showTip(event, 'fs24', 131)" class="i">i</span>,<span onmouseout="hideTip(event, 'fs22', 132)" onmouseover="showTip(event, 'fs22', 132)" class="i">s</span>)
            <span class="k">else</span> <span onmouseout="hideTip(event, 'fs16', 133)" onmouseover="showTip(event, 'fs16', 133)" class="t">String</span>(<span onmouseout="hideTip(event, 'fs27', 134)" onmouseover="showTip(event, 'fs27', 134)" class="i">acc</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 135)" onmouseover="showTip(event, 'fs30', 135)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 136)" onmouseover="showTip(event, 'fs31', 136)" class="f">rev</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 137)" onmouseover="showTip(event, 'fs30', 137)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 138)" onmouseover="showTip(event, 'fs32', 138)" class="f">toArray</span>),(<span onmouseout="hideTip(event, 'fs24', 139)" onmouseover="showTip(event, 'fs24', 139)" class="i">i</span>,<span onmouseout="hideTip(event, 'fs22', 140)" onmouseover="showTip(event, 'fs22', 140)" class="i">s</span>)
        <span onmouseout="hideTip(event, 'fs26', 141)" onmouseover="showTip(event, 'fs26', 141)" class="f">loop</span> <span onmouseout="hideTip(event, 'fs24', 142)" onmouseover="showTip(event, 'fs24', 142)" class="i">i</span> []

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 143)" onmouseover="showTip(event, 'fs33', 143)" class="f">isTokenChar</span> <span onmouseout="hideTip(event, 'fs29', 144)" onmouseover="showTip(event, 'fs29', 144)" class="i">c</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 145)" onmouseover="showTip(event, 'fs34', 145)" class="t">Char</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 146)" onmouseover="showTip(event, 'fs35', 146)" class="f">IsLetterOrDigit</span> (<span onmouseout="hideTip(event, 'fs29', 147)" onmouseover="showTip(event, 'fs29', 147)" class="i">c</span>) <span class="o">||</span> <span onmouseout="hideTip(event, 'fs29', 148)" onmouseover="showTip(event, 'fs29', 148)" class="i">c</span> <span class="o">=</span> <span class="s">&#39;_&#39;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 149)" onmouseover="showTip(event, 'fs36', 149)" class="f">isWhitespace</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 150)" onmouseover="showTip(event, 'fs34', 150)" class="t">Char</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 151)" onmouseover="showTip(event, 'fs37', 151)" class="f">IsWhiteSpace</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 152)" onmouseover="showTip(event, 'fs38', 152)" class="f">isNotQuote</span> <span class="o">=</span> <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs29', 153)" onmouseover="showTip(event, 'fs29', 153)" class="i">c</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs29', 154)" onmouseover="showTip(event, 'fs29', 154)" class="i">c</span> <span class="o">&lt;&gt;</span> <span class="s">&#39;&quot;&#39;</span>

    <span class="k">let</span> (|<span onmouseout="hideTip(event, 'fs34', 155)" onmouseover="showTip(event, 'fs34', 155)" class="p">Char</span>|_|) <span onmouseout="hideTip(event, 'fs29', 156)" onmouseover="showTip(event, 'fs29', 156)" class="i">c</span> (<span onmouseout="hideTip(event, 'fs24', 157)" onmouseover="showTip(event, 'fs24', 157)" class="i">i</span>,<span onmouseout="hideTip(event, 'fs22', 158)" onmouseover="showTip(event, 'fs22', 158)" class="i">s</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs19', 159)" onmouseover="showTip(event, 'fs19', 159)" class="t">string</span>)  <span class="o">=</span> 
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs24', 160)" onmouseover="showTip(event, 'fs24', 160)" class="i">i</span> <span class="o">&lt;</span> <span onmouseout="hideTip(event, 'fs22', 161)" onmouseover="showTip(event, 'fs22', 161)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 162)" onmouseover="showTip(event, 'fs28', 162)" class="i">Length</span> <span class="k">then</span> 
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs22', 163)" onmouseover="showTip(event, 'fs22', 163)" class="i">s</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs24', 164)" onmouseover="showTip(event, 'fs24', 164)" class="i">i</span>] <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 165)" onmouseover="showTip(event, 'fs29', 165)" class="i">c</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs39', 166)" onmouseover="showTip(event, 'fs39', 166)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs24', 167)" onmouseover="showTip(event, 'fs24', 167)" class="i">i</span><span class="o">+</span><span class="n">1</span>,<span onmouseout="hideTip(event, 'fs22', 168)" onmouseover="showTip(event, 'fs22', 168)" class="i">s</span>) <span class="k">else</span> <span onmouseout="hideTip(event, 'fs40', 169)" onmouseover="showTip(event, 'fs40', 169)" class="p">None</span> 
        <span class="k">else</span> <span onmouseout="hideTip(event, 'fs40', 170)" onmouseover="showTip(event, 'fs40', 170)" class="p">None</span>

    <span class="k">let</span> (|<span class="p">Comma</span>|_|)         <span class="o">=</span> <span class="f">(</span>|<span onmouseout="hideTip(event, 'fs41', 171)" onmouseover="showTip(event, 'fs41', 171)" class="i">Char</span>|_|) <span class="s">&#39;,&#39;</span>
    <span class="k">let</span> (|<span class="p">QuestionMark</span>|_|)  <span class="o">=</span> <span class="f">(</span>|<span onmouseout="hideTip(event, 'fs41', 172)" onmouseover="showTip(event, 'fs41', 172)" class="i">Char</span>|_|) <span class="s">&#39;?&#39;</span>
    <span class="k">let</span> (|<span class="p">LP</span>|_|)            <span class="o">=</span> <span class="f">(</span>|<span onmouseout="hideTip(event, 'fs41', 173)" onmouseover="showTip(event, 'fs41', 173)" class="i">Char</span>|_|) <span class="s">&#39;(&#39;</span>
    <span class="k">let</span> (|<span class="p">RP</span>|_|)            <span class="o">=</span> <span class="f">(</span>|<span onmouseout="hideTip(event, 'fs41', 174)" onmouseover="showTip(event, 'fs41', 174)" class="i">Char</span>|_|) <span class="s">&#39;)&#39;</span>
    <span class="k">let</span> (|<span class="p">Quote</span>|_|)         <span class="o">=</span> <span class="f">(</span>|<span onmouseout="hideTip(event, 'fs41', 175)" onmouseover="showTip(event, 'fs41', 175)" class="i">Char</span>|_|) <span class="s">&#39;&quot;&#39;</span>

    <span class="k">let</span> (|<span class="p">WS</span>|) (<span onmouseout="hideTip(event, 'fs24', 176)" onmouseover="showTip(event, 'fs24', 176)" class="i">i</span>,<span onmouseout="hideTip(event, 'fs22', 177)" onmouseover="showTip(event, 'fs22', 177)" class="i">s</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 178)" onmouseover="showTip(event, 'fs22', 178)" class="i">s</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 179)" onmouseover="showTip(event, 'fs23', 179)" class="f">take</span> <span onmouseout="hideTip(event, 'fs24', 180)" onmouseover="showTip(event, 'fs24', 180)" class="i">i</span> <span onmouseout="hideTip(event, 'fs36', 181)" onmouseover="showTip(event, 'fs36', 181)" class="f">isWhitespace</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs42', 182)" onmouseover="showTip(event, 'fs42', 182)" class="f">snd</span>
    <span class="k">let</span> (|<span class="p">TillEndQuote</span>|) (<span onmouseout="hideTip(event, 'fs24', 183)" onmouseover="showTip(event, 'fs24', 183)" class="i">i</span>,<span onmouseout="hideTip(event, 'fs22', 184)" onmouseover="showTip(event, 'fs22', 184)" class="i">s</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 185)" onmouseover="showTip(event, 'fs22', 185)" class="i">s</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 186)" onmouseover="showTip(event, 'fs23', 186)" class="f">take</span> <span onmouseout="hideTip(event, 'fs24', 187)" onmouseover="showTip(event, 'fs24', 187)" class="i">i</span> <span onmouseout="hideTip(event, 'fs38', 188)" onmouseover="showTip(event, 'fs38', 188)" class="f">isNotQuote</span>
    <span class="k">let</span> (|<span class="p">Eof</span>|_|) (<span onmouseout="hideTip(event, 'fs24', 189)" onmouseover="showTip(event, 'fs24', 189)" class="i">i</span>,<span onmouseout="hideTip(event, 'fs22', 190)" onmouseover="showTip(event, 'fs22', 190)" class="i">s</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs19', 191)" onmouseover="showTip(event, 'fs19', 191)" class="t">string</span>) <span class="o">=</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs24', 192)" onmouseover="showTip(event, 'fs24', 192)" class="i">i</span><span class="o">&gt;</span><span class="o">=</span><span onmouseout="hideTip(event, 'fs22', 193)" onmouseover="showTip(event, 'fs22', 193)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs28', 194)" onmouseover="showTip(event, 'fs28', 194)" class="i">Length</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs39', 195)" onmouseover="showTip(event, 'fs39', 195)" class="p">Some</span>(<span onmouseout="hideTip(event, 'fs24', 196)" onmouseover="showTip(event, 'fs24', 196)" class="i">i</span>) <span class="k">else</span> <span onmouseout="hideTip(event, 'fs40', 197)" onmouseover="showTip(event, 'fs40', 197)" class="p">None</span>

    <span class="k">let</span> (|<span class="p">Token</span>|_|) <span class="o">=</span> <span class="k">function</span>
        |  <span onmouseout="hideTip(event, 'fs43', 198)" onmouseover="showTip(event, 'fs43', 198)" class="p">Eof</span> _<span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs40', 199)" onmouseover="showTip(event, 'fs40', 199)" class="p">None</span> 
        | (<span onmouseout="hideTip(event, 'fs24', 200)" onmouseover="showTip(event, 'fs24', 200)" class="i">i</span>,<span onmouseout="hideTip(event, 'fs22', 201)" onmouseover="showTip(event, 'fs22', 201)" class="i">s</span>) <span class="k">when</span>  <span onmouseout="hideTip(event, 'fs33', 202)" onmouseover="showTip(event, 'fs33', 202)" class="f">isTokenChar</span> <span onmouseout="hideTip(event, 'fs22', 203)" onmouseover="showTip(event, 'fs22', 203)" class="i">s</span><span class="o">.</span>[<span onmouseout="hideTip(event, 'fs24', 204)" onmouseover="showTip(event, 'fs24', 204)" class="i">i</span>] <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs22', 205)" onmouseover="showTip(event, 'fs22', 205)" class="i">s</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 206)" onmouseover="showTip(event, 'fs23', 206)" class="f">take</span> <span onmouseout="hideTip(event, 'fs24', 207)" onmouseover="showTip(event, 'fs24', 207)" class="i">i</span> <span onmouseout="hideTip(event, 'fs33', 208)" onmouseover="showTip(event, 'fs33', 208)" class="f">isTokenChar</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs39', 209)" onmouseover="showTip(event, 'fs39', 209)" class="p">Some</span> 
        | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs40', 210)" onmouseover="showTip(event, 'fs40', 210)" class="p">None</span>

    <span class="k">let</span> (|<span onmouseout="hideTip(event, 'fs44', 211)" onmouseover="showTip(event, 'fs44', 211)" class="p">Option</span>|_|) <span class="o">=</span> <span class="k">function</span> <span onmouseout="hideTip(event, 'fs45', 212)" onmouseover="showTip(event, 'fs45', 212)" class="p">Token</span> (<span class="s">&quot;option&quot;</span>, <span onmouseout="hideTip(event, 'fs46', 213)" onmouseover="showTip(event, 'fs46', 213)" class="i">rest</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs39', 214)" onmouseover="showTip(event, 'fs39', 214)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs46', 215)" onmouseover="showTip(event, 'fs46', 215)" class="i">rest</span> | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs40', 216)" onmouseover="showTip(event, 'fs40', 216)" class="p">None</span>

    <span class="k">let</span> (|<span class="p">DataType</span>|) <span class="o">=</span> <span class="k">function</span>
        | <span onmouseout="hideTip(event, 'fs47', 217)" onmouseover="showTip(event, 'fs47', 217)" class="p">WS</span> (<span onmouseout="hideTip(event, 'fs45', 218)" onmouseover="showTip(event, 'fs45', 218)" class="p">Token</span> (<span onmouseout="hideTip(event, 'fs48', 219)" onmouseover="showTip(event, 'fs48', 219)" class="i">n</span>, <span onmouseout="hideTip(event, 'fs47', 220)" onmouseover="showTip(event, 'fs47', 220)" class="p">WS</span> (<span onmouseout="hideTip(event, 'fs49', 221)" onmouseover="showTip(event, 'fs49', 221)" class="p">QuestionMark</span> <span onmouseout="hideTip(event, 'fs46', 222)" onmouseover="showTip(event, 'fs46', 222)" class="i">rest</span>)))     <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs50', 223)" onmouseover="showTip(event, 'fs50', 223)" class="t">TypeDetermination</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 224)" onmouseover="showTip(event, 'fs51', 224)" class="f">determinType</span> (<span onmouseout="hideTip(event, 'fs48', 225)" onmouseover="showTip(event, 'fs48', 225)" class="i">n</span><span class="o">+</span><span class="s">&quot;?&quot;</span>), <span onmouseout="hideTip(event, 'fs46', 226)" onmouseover="showTip(event, 'fs46', 226)" class="i">rest</span>
        | <span onmouseout="hideTip(event, 'fs47', 227)" onmouseover="showTip(event, 'fs47', 227)" class="p">WS</span> (<span onmouseout="hideTip(event, 'fs45', 228)" onmouseover="showTip(event, 'fs45', 228)" class="p">Token</span> (<span onmouseout="hideTip(event, 'fs48', 229)" onmouseover="showTip(event, 'fs48', 229)" class="i">n</span>, <span onmouseout="hideTip(event, 'fs47', 230)" onmouseover="showTip(event, 'fs47', 230)" class="p">WS</span> (<span onmouseout="hideTip(event, 'fs52', 231)" onmouseover="showTip(event, 'fs52', 231)" class="p">Option</span> <span onmouseout="hideTip(event, 'fs46', 232)" onmouseover="showTip(event, 'fs46', 232)" class="i">rest</span>)))           <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs50', 233)" onmouseover="showTip(event, 'fs50', 233)" class="t">TypeDetermination</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 234)" onmouseover="showTip(event, 'fs51', 234)" class="f">determinType</span> (<span onmouseout="hideTip(event, 'fs48', 235)" onmouseover="showTip(event, 'fs48', 235)" class="i">n</span><span class="o">+</span><span class="s">&quot; option&quot;</span>), <span onmouseout="hideTip(event, 'fs46', 236)" onmouseover="showTip(event, 'fs46', 236)" class="i">rest</span>
        | <span onmouseout="hideTip(event, 'fs47', 237)" onmouseover="showTip(event, 'fs47', 237)" class="p">WS</span> (<span onmouseout="hideTip(event, 'fs45', 238)" onmouseover="showTip(event, 'fs45', 238)" class="p">Token</span> (<span onmouseout="hideTip(event, 'fs48', 239)" onmouseover="showTip(event, 'fs48', 239)" class="i">n</span>, <span onmouseout="hideTip(event, 'fs46', 240)" onmouseover="showTip(event, 'fs46', 240)" class="i">rest</span>))                       <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs50', 241)" onmouseover="showTip(event, 'fs50', 241)" class="t">TypeDetermination</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs51', 242)" onmouseover="showTip(event, 'fs51', 242)" class="f">determinType</span> (<span onmouseout="hideTip(event, 'fs48', 243)" onmouseover="showTip(event, 'fs48', 243)" class="i">n</span><span class="o">+</span><span class="s">&quot; option&quot;</span>), <span onmouseout="hideTip(event, 'fs46', 244)" onmouseover="showTip(event, 'fs46', 244)" class="i">rest</span>
        | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs53', 245)" onmouseover="showTip(event, 'fs53', 245)" class="f">failwith</span> <span class="s">&quot;expected datatype&quot;</span>

    <span class="k">let</span> (|<span class="p">Name</span>|_|) <span class="o">=</span> <span class="k">function</span>
        | <span onmouseout="hideTip(event, 'fs47', 246)" onmouseover="showTip(event, 'fs47', 246)" class="p">WS</span> (<span onmouseout="hideTip(event, 'fs54', 247)" onmouseover="showTip(event, 'fs54', 247)" class="p">Quote</span> (<span onmouseout="hideTip(event, 'fs55', 248)" onmouseover="showTip(event, 'fs55', 248)" class="p">TillEndQuote</span> (<span onmouseout="hideTip(event, 'fs48', 249)" onmouseover="showTip(event, 'fs48', 249)" class="i">n</span>, <span onmouseout="hideTip(event, 'fs54', 250)" onmouseover="showTip(event, 'fs54', 250)" class="p">Quote</span>(<span onmouseout="hideTip(event, 'fs46', 251)" onmouseover="showTip(event, 'fs46', 251)" class="i">rest</span>)))) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs39', 252)" onmouseover="showTip(event, 'fs39', 252)" class="p">Some</span> (<span onmouseout="hideTip(event, 'fs48', 253)" onmouseover="showTip(event, 'fs48', 253)" class="i">n</span>,<span onmouseout="hideTip(event, 'fs46', 254)" onmouseover="showTip(event, 'fs46', 254)" class="i">rest</span>)
        | <span onmouseout="hideTip(event, 'fs47', 255)" onmouseover="showTip(event, 'fs47', 255)" class="p">WS</span> (<span onmouseout="hideTip(event, 'fs45', 256)" onmouseover="showTip(event, 'fs45', 256)" class="p">Token</span> (<span onmouseout="hideTip(event, 'fs48', 257)" onmouseover="showTip(event, 'fs48', 257)" class="i">n</span>, <span onmouseout="hideTip(event, 'fs46', 258)" onmouseover="showTip(event, 'fs46', 258)" class="i">rest</span>))                       <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs39', 259)" onmouseover="showTip(event, 'fs39', 259)" class="p">Some</span> (<span onmouseout="hideTip(event, 'fs48', 260)" onmouseover="showTip(event, 'fs48', 260)" class="i">n</span>,<span onmouseout="hideTip(event, 'fs46', 261)" onmouseover="showTip(event, 'fs46', 261)" class="i">rest</span>)
        | _                                          <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs40', 262)" onmouseover="showTip(event, 'fs40', 262)" class="p">None</span>

    <span class="k">let</span> <span class="k">rec</span> (|<span class="p">Schema</span>|) <span onmouseout="hideTip(event, 'fs56', 263)" onmouseover="showTip(event, 'fs56', 263)" class="i">acc</span> <span class="o">=</span> <span class="k">function</span>
        | <span onmouseout="hideTip(event, 'fs43', 264)" onmouseover="showTip(event, 'fs43', 264)" class="p">Eof</span> _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs56', 265)" onmouseover="showTip(event, 'fs56', 265)" class="i">acc</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs30', 266)" onmouseover="showTip(event, 'fs30', 266)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 267)" onmouseover="showTip(event, 'fs31', 267)" class="f">rev</span>
        | <span onmouseout="hideTip(event, 'fs57', 268)" onmouseover="showTip(event, 'fs57', 268)" class="p">Name</span> (<span onmouseout="hideTip(event, 'fs58', 269)" onmouseover="showTip(event, 'fs58', 269)" class="i">name</span>, <span onmouseout="hideTip(event, 'fs47', 270)" onmouseover="showTip(event, 'fs47', 270)" class="p">WS</span> (<span onmouseout="hideTip(event, 'fs59', 271)" onmouseover="showTip(event, 'fs59', 271)" class="p">LP</span> ( <span onmouseout="hideTip(event, 'fs47', 272)" onmouseover="showTip(event, 'fs47', 272)" class="p">WS</span> (<span onmouseout="hideTip(event, 'fs60', 273)" onmouseover="showTip(event, 'fs60', 273)" class="p">DataType</span> (<span onmouseout="hideTip(event, 'fs61', 274)" onmouseover="showTip(event, 'fs61', 274)" class="i">dt</span>, <span onmouseout="hideTip(event, 'fs62', 275)" onmouseover="showTip(event, 'fs62', 275)" class="p">RP</span>(<span onmouseout="hideTip(event, 'fs46', 276)" onmouseover="showTip(event, 'fs46', 276)" class="i">rest</span>)))))) <span class="k">-&gt;</span> <span class="f">(</span>|<span onmouseout="hideTip(event, 'fs63', 277)" onmouseover="showTip(event, 'fs63', 277)" class="i">Schema</span>|) ((<span onmouseout="hideTip(event, 'fs58', 278)" onmouseover="showTip(event, 'fs58', 278)" class="i">name</span>,<span onmouseout="hideTip(event, 'fs61', 279)" onmouseover="showTip(event, 'fs61', 279)" class="i">dt</span>)<span class="o">::</span><span onmouseout="hideTip(event, 'fs56', 280)" onmouseover="showTip(event, 'fs56', 280)" class="i">acc</span>) <span onmouseout="hideTip(event, 'fs46', 281)" onmouseover="showTip(event, 'fs46', 281)" class="i">rest</span>
        | <span onmouseout="hideTip(event, 'fs57', 282)" onmouseover="showTip(event, 'fs57', 282)" class="p">Name</span> (<span onmouseout="hideTip(event, 'fs58', 283)" onmouseover="showTip(event, 'fs58', 283)" class="i">name</span>, <span onmouseout="hideTip(event, 'fs46', 284)" onmouseover="showTip(event, 'fs46', 284)" class="i">rest</span>) <span class="k">-&gt;</span> <span class="f">(</span>|<span onmouseout="hideTip(event, 'fs63', 285)" onmouseover="showTip(event, 'fs63', 285)" class="i">Schema</span>|) ((<span onmouseout="hideTip(event, 'fs58', 286)" onmouseover="showTip(event, 'fs58', 286)" class="i">name</span>,(<span onmouseout="hideTip(event, 'fs8', 287)" onmouseover="showTip(event, 'fs8', 287)" class="i">typeof</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs19', 288)" onmouseover="showTip(event, 'fs19', 288)" class="t">string</span><span class="o">&gt;</span>,<span onmouseout="hideTip(event, 'fs50', 289)" onmouseover="showTip(event, 'fs50', 289)" class="t">TypeDetermination</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 290)" onmouseover="showTip(event, 'fs3', 290)" class="t">TypeWrapper</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs64', 291)" onmouseover="showTip(event, 'fs64', 291)" class="p">None</span>))<span class="o">::</span><span onmouseout="hideTip(event, 'fs56', 292)" onmouseover="showTip(event, 'fs56', 292)" class="i">acc</span>) <span onmouseout="hideTip(event, 'fs46', 293)" onmouseover="showTip(event, 'fs46', 293)" class="i">rest</span>
        | <span onmouseout="hideTip(event, 'fs65', 294)" onmouseover="showTip(event, 'fs65', 294)" class="p">Comma</span> <span onmouseout="hideTip(event, 'fs46', 295)" onmouseover="showTip(event, 'fs46', 295)" class="i">rest</span> <span class="k">-&gt;</span> <span class="f">(</span>|<span onmouseout="hideTip(event, 'fs63', 296)" onmouseover="showTip(event, 'fs63', 296)" class="i">Schema</span>|) <span onmouseout="hideTip(event, 'fs56', 297)" onmouseover="showTip(event, 'fs56', 297)" class="i">acc</span> <span onmouseout="hideTip(event, 'fs46', 298)" onmouseover="showTip(event, 'fs46', 298)" class="i">rest</span> 
        | <span onmouseout="hideTip(event, 'fs47', 299)" onmouseover="showTip(event, 'fs47', 299)" class="p">WS</span> <span onmouseout="hideTip(event, 'fs46', 300)" onmouseover="showTip(event, 'fs46', 300)" class="i">rest</span> <span class="k">-&gt;</span> <span class="f">(</span>|<span onmouseout="hideTip(event, 'fs63', 301)" onmouseover="showTip(event, 'fs63', 301)" class="i">Schema</span>|) <span onmouseout="hideTip(event, 'fs56', 302)" onmouseover="showTip(event, 'fs56', 302)" class="i">acc</span> <span onmouseout="hideTip(event, 'fs46', 303)" onmouseover="showTip(event, 'fs46', 303)" class="i">rest</span> 
        | <span onmouseout="hideTip(event, 'fs66', 304)" onmouseover="showTip(event, 'fs66', 304)" class="i">x</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs67', 305)" onmouseover="showTip(event, 'fs67', 305)" class="f">failwithf</span> <span class="s">&quot;Unable to parse at </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs66', 306)" onmouseover="showTip(event, 'fs66', 306)" class="i">x</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs68', 307)" onmouseover="showTip(event, 'fs68', 307)" class="f">parseSchema</span> <span onmouseout="hideTip(event, 'fs22', 308)" onmouseover="showTip(event, 'fs22', 308)" class="i">s</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs69', 309)" onmouseover="showTip(event, 'fs69', 309)" class="t">Parsing</span><span class="o">.</span><span class="f">(</span>|<span class="i">Schema</span>|) [] (<span class="n">0</span>,<span onmouseout="hideTip(event, 'fs22', 310)" onmouseover="showTip(event, 'fs22', 310)" class="i">s</span>)

<span class="c">(*</span>
<span class="c">[&lt;Literal&gt;]</span>
<span class="c">let scma = &quot;&quot;&quot;</span>
<span class="c">&quot;f1 field&quot; (int),&quot;f2&quot; (int),&quot;f3&quot;,&quot;f4&quot; (int),&quot;f5&quot; (date),&quot;f6&quot; (int?),&quot;f7&quot;,&quot;f8&quot;,&quot;f9&quot;(int?),&quot;f10&quot;, f11 (float option)</span>
<span class="c">&quot;&quot;&quot;</span>
<span class="c">parseSchema scma</span>

<span class="c">*)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module CsvSchema</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">type TypeWrapper =<br />&#160;&#160;| None<br />&#160;&#160;| Nullable<br />&#160;&#160;| Option<br /><br />Full name: CsvSchema.TypeDetermination.TypeWrapper</div>
<div class="tip" id="fs4">union case TypeWrapper.None: TypeWrapper</div>
<div class="tip" id="fs5">Multiple items<br />union case TypeWrapper.Nullable: TypeWrapper<br /><br />--------------------<br />type Nullable =<br />&#160;&#160;static member Compare&lt;&#39;T&gt; : n1:Nullable&lt;&#39;T&gt; * n2:Nullable&lt;&#39;T&gt; -&gt; int<br />&#160;&#160;static member Equals&lt;&#39;T&gt; : n1:Nullable&lt;&#39;T&gt; * n2:Nullable&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;static member GetUnderlyingType : nullableType:Type -&gt; Type<br /><br />Full name: System.Nullable<br /><br />--------------------<br />type Nullable&lt;&#39;T (requires default constructor and value type and &#39;T :&gt; ValueType)&gt; =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : value:&#39;T -&gt; Nullable&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;member Equals : other:obj -&gt; bool<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetValueOrDefault : unit -&gt; &#39;T + 1 overload<br />&#160;&#160;&#160;&#160;member HasValue : bool<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;&#160;&#160;member Value : &#39;T<br />&#160;&#160;end<br /><br />Full name: System.Nullable&lt;_&gt;<br /><br />--------------------<br />Nullable()<br />Nullable(value: &#39;T) : unit</div>
<div class="tip" id="fs6">Multiple items<br />union case TypeWrapper.Option: TypeWrapper<br /><br />--------------------<br />module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs7">val private nameToType : Collections.Generic.IDictionary&lt;string,(Type * TypeWrapper)&gt;<br /><br />Full name: CsvSchema.TypeDetermination.nameToType</div>
<div class="tip" id="fs8">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs9">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs10">Multiple items<br />val int64 : value:&#39;T -&gt; int64 (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int64<br /><br />--------------------<br />type int64 = Int64<br /><br />Full name: Microsoft.FSharp.Core.int64<br /><br />--------------------<br />type int64&lt;&#39;Measure&gt; = int64<br /><br />Full name: Microsoft.FSharp.Core.int64&lt;_&gt;</div>
<div class="tip" id="fs11">type bool = Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs12">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs13">Multiple items<br />val decimal : value:&#39;T -&gt; decimal (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.decimal<br /><br />--------------------<br />type decimal = Decimal<br /><br />Full name: Microsoft.FSharp.Core.decimal<br /><br />--------------------<br />type decimal&lt;&#39;Measure&gt; = decimal<br /><br />Full name: Microsoft.FSharp.Core.decimal&lt;_&gt;</div>
<div class="tip" id="fs14">Multiple items<br />type DateTime =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : ticks:int64 -&gt; DateTime + 10 overloads<br />&#160;&#160;&#160;&#160;member Add : value:TimeSpan -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddDays : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddHours : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMilliseconds : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMinutes : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMonths : months:int -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddSeconds : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddTicks : value:int64 -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddYears : value:int -&gt; DateTime<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.DateTime<br /><br />--------------------<br />DateTime()<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(ticks: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(ticks: int64, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, calendar: Globalization.Calendar) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, calendar: Globalization.Calendar) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int, kind: DateTimeKind) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs15">Multiple items<br />type Guid =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : b:byte[] -&gt; Guid + 4 overloads<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : o:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member ToByteArray : unit -&gt; byte[]<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 2 overloads<br />&#160;&#160;&#160;&#160;static val Empty : Guid<br />&#160;&#160;&#160;&#160;static member NewGuid : unit -&gt; Guid<br />&#160;&#160;&#160;&#160;static member Parse : input:string -&gt; Guid<br />&#160;&#160;&#160;&#160;static member ParseExact : input:string * format:string -&gt; Guid<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Guid<br /><br />--------------------<br />Guid()<br />Guid(b: byte []) : unit<br />Guid(g: string) : unit<br />Guid(a: int, b: int16, c: int16, d: byte []) : unit<br />Guid(a: uint32, b: uint16, c: uint16, d: byte, e: byte, f: byte, g: byte, h: byte, i: byte, j: byte, k: byte) : unit<br />Guid(a: int, b: int16, c: int16, d: byte, e: byte, f: byte, g: byte, h: byte, i: byte, j: byte, k: byte) : unit</div>
<div class="tip" id="fs16">Multiple items<br />type String =<br />&#160;&#160;new : value:char -&gt; string + 7 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 2 overloads<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;...<br /><br />Full name: System.String<br /><br />--------------------<br />String(value: nativeptr&lt;char&gt;) : unit<br />String(value: nativeptr&lt;sbyte&gt;) : unit<br />String(value: char []) : unit<br />String(c: char, count: int) : unit<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : unit<br />String(value: char [], startIndex: int, length: int) : unit<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : unit</div>
<div class="tip" id="fs17">union case TypeWrapper.Nullable: TypeWrapper</div>
<div class="tip" id="fs18">union case TypeWrapper.Option: TypeWrapper</div>
<div class="tip" id="fs19">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs20">val dict : keyValuePairs:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Collections.Generic.IDictionary&lt;&#39;Key,&#39;Value&gt; (requires equality)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.dict</div>
<div class="tip" id="fs21">val determinType : s:string -&gt; Type * TypeWrapper<br /><br />Full name: CsvSchema.TypeDetermination.determinType</div>
<div class="tip" id="fs22">val s : string</div>
<div class="tip" id="fs23">val take : i:int -&gt; f:(char -&gt; bool) -&gt; s:string -&gt; String * (int * string)<br /><br />Full name: CsvSchema.Parsing.take</div>
<div class="tip" id="fs24">val i : int</div>
<div class="tip" id="fs25">val f : (char -&gt; bool)</div>
<div class="tip" id="fs26">val loop : (int -&gt; char list -&gt; String * (int * string))</div>
<div class="tip" id="fs27">val acc : char list</div>
<div class="tip" id="fs28">property String.Length: int</div>
<div class="tip" id="fs29">val c : char</div>
<div class="tip" id="fs30">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs31">val rev : list:&#39;T list -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.rev</div>
<div class="tip" id="fs32">val toArray : list:&#39;T list -&gt; &#39;T []<br /><br />Full name: Microsoft.FSharp.Collections.List.toArray</div>
<div class="tip" id="fs33">val isTokenChar : c:char -&gt; bool<br /><br />Full name: CsvSchema.Parsing.isTokenChar</div>
<div class="tip" id="fs34">type Char =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 1 overload<br />&#160;&#160;&#160;&#160;static val MaxValue : char<br />&#160;&#160;&#160;&#160;static val MinValue : char<br />&#160;&#160;&#160;&#160;static member ConvertFromUtf32 : utf32:int -&gt; string<br />&#160;&#160;&#160;&#160;static member ConvertToUtf32 : highSurrogate:char * lowSurrogate:char -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;static member GetNumericValue : c:char -&gt; float + 1 overload<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Char</div>
<div class="tip" id="fs35">Char.IsLetterOrDigit(c: char) : bool<br />Char.IsLetterOrDigit(s: string, index: int) : bool</div>
<div class="tip" id="fs36">val isWhitespace : arg00:char -&gt; bool<br /><br />Full name: CsvSchema.Parsing.isWhitespace</div>
<div class="tip" id="fs37">Char.IsWhiteSpace(c: char) : bool<br />Char.IsWhiteSpace(s: string, index: int) : bool</div>
<div class="tip" id="fs38">val isNotQuote : c:char -&gt; bool<br /><br />Full name: CsvSchema.Parsing.isNotQuote</div>
<div class="tip" id="fs39">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs40">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs41">Multiple items<br />active recognizer Char: char -&gt; int * string -&gt; (int * string) option<br /><br />Full name: CsvSchema.Parsing.( |Char|_| )<br /><br />--------------------<br />type Char =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 1 overload<br />&#160;&#160;&#160;&#160;static val MaxValue : char<br />&#160;&#160;&#160;&#160;static val MinValue : char<br />&#160;&#160;&#160;&#160;static member ConvertFromUtf32 : utf32:int -&gt; string<br />&#160;&#160;&#160;&#160;static member ConvertToUtf32 : highSurrogate:char * lowSurrogate:char -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;static member GetNumericValue : c:char -&gt; float + 1 overload<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Char</div>
<div class="tip" id="fs42">val snd : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T2<br /><br />Full name: Microsoft.FSharp.Core.Operators.snd</div>
<div class="tip" id="fs43">active recognizer Eof: int * string -&gt; int option<br /><br />Full name: CsvSchema.Parsing.( |Eof|_| )</div>
<div class="tip" id="fs44">module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs45">active recognizer Token: int * string -&gt; (String * (int * string)) option<br /><br />Full name: CsvSchema.Parsing.( |Token|_| )</div>
<div class="tip" id="fs46">val rest : int * string</div>
<div class="tip" id="fs47">active recognizer WS: int * string -&gt; int * string<br /><br />Full name: CsvSchema.Parsing.( |WS| )</div>
<div class="tip" id="fs48">val n : String</div>
<div class="tip" id="fs49">active recognizer QuestionMark: int * string -&gt; (int * string) option<br /><br />Full name: CsvSchema.Parsing.( |QuestionMark|_| )</div>
<div class="tip" id="fs50">module TypeDetermination<br /><br />from CsvSchema</div>
<div class="tip" id="fs51">val determinType : s:string -&gt; Type * TypeDetermination.TypeWrapper<br /><br />Full name: CsvSchema.TypeDetermination.determinType</div>
<div class="tip" id="fs52">Multiple items<br />active recognizer Option: int * string -&gt; (int * string) option<br /><br />Full name: CsvSchema.Parsing.( |Option|_| )<br /><br />--------------------<br />module Option<br /><br />from Microsoft.FSharp.Core</div>
<div class="tip" id="fs53">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs54">active recognizer Quote: int * string -&gt; (int * string) option<br /><br />Full name: CsvSchema.Parsing.( |Quote|_| )</div>
<div class="tip" id="fs55">active recognizer TillEndQuote: int * string -&gt; String * (int * string)<br /><br />Full name: CsvSchema.Parsing.( |TillEndQuote| )</div>
<div class="tip" id="fs56">val acc : (String * (Type * TypeDetermination.TypeWrapper)) list</div>
<div class="tip" id="fs57">active recognizer Name: int * string -&gt; (String * (int * string)) option<br /><br />Full name: CsvSchema.Parsing.( |Name|_| )</div>
<div class="tip" id="fs58">val name : String</div>
<div class="tip" id="fs59">active recognizer LP: int * string -&gt; (int * string) option<br /><br />Full name: CsvSchema.Parsing.( |LP|_| )</div>
<div class="tip" id="fs60">active recognizer DataType: int * string -&gt; (Type * TypeDetermination.TypeWrapper) * (int * string)<br /><br />Full name: CsvSchema.Parsing.( |DataType| )</div>
<div class="tip" id="fs61">val dt : Type * TypeDetermination.TypeWrapper</div>
<div class="tip" id="fs62">active recognizer RP: int * string -&gt; (int * string) option<br /><br />Full name: CsvSchema.Parsing.( |RP|_| )</div>
<div class="tip" id="fs63">active recognizer Schema: (String * (Type * TypeDetermination.TypeWrapper)) list -&gt; int * string -&gt; (String * (Type * TypeDetermination.TypeWrapper)) list<br /><br />Full name: CsvSchema.Parsing.( |Schema| )</div>
<div class="tip" id="fs64">union case TypeDetermination.TypeWrapper.None: TypeDetermination.TypeWrapper</div>
<div class="tip" id="fs65">active recognizer Comma: int * string -&gt; (int * string) option<br /><br />Full name: CsvSchema.Parsing.( |Comma|_| )</div>
<div class="tip" id="fs66">val x : int * string</div>
<div class="tip" id="fs67">val failwithf : format:Printf.StringFormat&lt;&#39;T,&#39;Result&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.failwithf</div>
<div class="tip" id="fs68">val parseSchema : s:string -&gt; (String * (Type * TypeDetermination.TypeWrapper)) list<br /><br />Full name: CsvSchema.parseSchema</div>
<div class="tip" id="fs69">module Parsing<br /><br />from CsvSchema</div>

