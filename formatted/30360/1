<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
<span class="l">154: </span>
<span class="l">155: </span>
<span class="l">156: </span>
<span class="l">157: </span>
<span class="l">158: </span>
<span class="l">159: </span>
<span class="l">160: </span>
<span class="l">161: </span>
<span class="l">162: </span>
<span class="l">163: </span>
<span class="l">164: </span>
<span class="l">165: </span>
<span class="l">166: </span>
<span class="l">167: </span>
<span class="l">168: </span>
<span class="l">169: </span>
<span class="l">170: </span>
<span class="l">171: </span>
<span class="l">172: </span>
<span class="l">173: </span>
<span class="l">174: </span>
<span class="l">175: </span>
<span class="l">176: </span>
<span class="l">177: </span>
<span class="l">178: </span>
<span class="l">179: </span>
<span class="l">180: </span>
<span class="l">181: </span>
<span class="l">182: </span>
<span class="l">183: </span>
<span class="l">184: </span>
<span class="l">185: </span>
<span class="l">186: </span>
<span class="l">187: </span>
<span class="l">188: </span>
<span class="l">189: </span>
<span class="l">190: </span>
<span class="l">191: </span>
<span class="l">192: </span>
<span class="l">193: </span>
<span class="l">194: </span>
<span class="l">195: </span>
<span class="l">196: </span>
<span class="l">197: </span>
<span class="l">198: </span>
<span class="l">199: </span>
<span class="l">200: </span>
<span class="l">201: </span>
<span class="l">202: </span>
<span class="l">203: </span>
<span class="l">204: </span>
<span class="l">205: </span>
<span class="l">206: </span>
<span class="l">207: </span>
<span class="l">208: </span>
<span class="l">209: </span>
<span class="l">210: </span>
<span class="l">211: </span>
<span class="l">212: </span>
<span class="l">213: </span>
<span class="l">214: </span>
<span class="l">215: </span>
<span class="l">216: </span>
<span class="l">217: </span>
<span class="l">218: </span>
<span class="l">219: </span>
<span class="l">220: </span>
<span class="l">221: </span>
<span class="l">222: </span>
<span class="l">223: </span>
<span class="l">224: </span>
<span class="l">225: </span>
<span class="l">226: </span>
<span class="l">227: </span>
<span class="l">228: </span>
<span class="l">229: </span>
<span class="l">230: </span>
<span class="l">231: </span>
<span class="l">232: </span>
<span class="l">233: </span>
<span class="l">234: </span>
<span class="l">235: </span>
<span class="l">236: </span>
<span class="l">237: </span>
<span class="l">238: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Quotations</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 4)" onmouseover="showTip(event, 'fs2', 4)" class="i">Quotations</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="i">Evaluator</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="i">Swensen</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="i">Unquote</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="i">TypeShape</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="i">TypeShape_StagingExtensions</span>

<span class="c">// Rank-2 encoding of staged hashcode generator</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="t">StagedHashCodeGenerator</span> <span class="o">=</span>
    <span class="k">abstract</span> <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="f">Generate</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="t">Expr</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="t">int</span><span class="o">&gt;</span>

<span class="c">// Variation of the Y combinator for generic staged hashode generators</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="f">Y</span> <span class="o">:</span> (<span onmouseout="hideTip(event, 'fs8', 16)" onmouseover="showTip(event, 'fs8', 16)" class="t">StagedHashCodeGenerator</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs8', 17)" onmouseover="showTip(event, 'fs8', 17)" class="t">StagedHashCodeGenerator</span>) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs8', 18)" onmouseover="showTip(event, 'fs8', 18)" class="t">StagedHashCodeGenerator</span> <span class="o">=</span>
    <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="f">F</span> <span class="k">-&gt;</span>
        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs14', 20)" onmouseover="showTip(event, 'fs14', 20)" class="f">aux</span> (<span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="i">stack</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="t">Var</span> <span onmouseout="hideTip(event, 'fs17', 23)" onmouseover="showTip(event, 'fs17', 23)" class="t">list</span>) (<span onmouseout="hideTip(event, 'fs18', 24)" onmouseover="showTip(event, 'fs18', 24)" class="i">e</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 25)" onmouseover="showTip(event, 'fs10', 25)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 26)" onmouseover="showTip(event, 'fs10', 26)" class="t">Expr</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 27)" onmouseover="showTip(event, 'fs11', 27)" class="t">int</span><span class="o">&gt;</span> <span class="o">=</span>
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs15', 28)" onmouseover="showTip(event, 'fs15', 28)" class="i">stack</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs20', 30)" onmouseover="showTip(event, 'fs20', 30)" class="f">tryFind</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="i">v</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs21', 32)" onmouseover="showTip(event, 'fs21', 32)" class="i">v</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 33)" onmouseover="showTip(event, 'fs22', 33)" class="i">Type</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 34)" onmouseover="showTip(event, 'fs23', 34)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 35)" onmouseover="showTip(event, 'fs11', 35)" class="t">int</span><span class="o">&gt;</span>) <span class="k">with</span>
            | <span onmouseout="hideTip(event, 'fs24', 36)" onmouseover="showTip(event, 'fs24', 36)" class="p">None</span> <span class="k">-&gt;</span>
                <span class="c">// first time this type occurs in the stack, push fresh function variable</span>
                <span class="c">// into stack and perform staged computation</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 37)" onmouseover="showTip(event, 'fs25', 37)" class="i">selfVar</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 38)" onmouseover="showTip(event, 'fs16', 38)" class="t">Var</span>(<span class="s">&quot;func&quot;</span>, <span onmouseout="hideTip(event, 'fs23', 39)" onmouseover="showTip(event, 'fs23', 39)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 40)" onmouseover="showTip(event, 'fs11', 40)" class="t">int</span><span class="o">&gt;</span>)
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 41)" onmouseover="showTip(event, 'fs26', 41)" class="i">tVar</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 42)" onmouseover="showTip(event, 'fs16', 42)" class="t">Var</span>(<span class="s">&quot;t&quot;</span>, <span onmouseout="hideTip(event, 'fs23', 43)" onmouseover="showTip(event, 'fs23', 43)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>)
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 44)" onmouseover="showTip(event, 'fs27', 44)" class="i">nestedGen</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 45)" onmouseover="showTip(event, 'fs28', 45)" class="f">mkRecursiveGen</span> (<span onmouseout="hideTip(event, 'fs25', 46)" onmouseover="showTip(event, 'fs25', 46)" class="i">selfVar</span> <span class="o">::</span> <span onmouseout="hideTip(event, 'fs15', 47)" onmouseover="showTip(event, 'fs15', 47)" class="i">stack</span>)

                <span class="c">// generate the staged body for the given type</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 48)" onmouseover="showTip(event, 'fs29', 48)" class="i">body</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 49)" onmouseover="showTip(event, 'fs27', 49)" class="i">nestedGen</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 50)" onmouseover="showTip(event, 'fs30', 50)" class="f">Generate</span> (<span onmouseout="hideTip(event, 'fs10', 51)" onmouseover="showTip(event, 'fs10', 51)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 52)" onmouseover="showTip(event, 'fs31', 52)" class="f">Cast</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs10', 53)" onmouseover="showTip(event, 'fs10', 53)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 54)" onmouseover="showTip(event, 'fs32', 54)" class="f">Var</span> <span onmouseout="hideTip(event, 'fs26', 55)" onmouseover="showTip(event, 'fs26', 55)" class="i">tVar</span>))

                <span class="c">// check whether type has been called recursively in the staged expression tree</span>
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs29', 56)" onmouseover="showTip(event, 'fs29', 56)" class="i">body</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs33', 57)" onmouseover="showTip(event, 'fs33', 57)" class="f">GetFreeVars</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs34', 58)" onmouseover="showTip(event, 'fs34', 58)" class="t">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs35', 59)" onmouseover="showTip(event, 'fs35', 59)" class="f">exists</span> ((<span class="o">=</span>) <span onmouseout="hideTip(event, 'fs25', 60)" onmouseover="showTip(event, 'fs25', 60)" class="i">selfVar</span>) <span class="k">then</span>
                    <span class="c">// we are looking at a recursive type, wrap body inside a recursive function declaration</span>
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 61)" onmouseover="showTip(event, 'fs36', 61)" class="i">lambda</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 62)" onmouseover="showTip(event, 'fs10', 62)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs37', 63)" onmouseover="showTip(event, 'fs37', 63)" class="f">Lambda</span>(<span onmouseout="hideTip(event, 'fs26', 64)" onmouseover="showTip(event, 'fs26', 64)" class="i">tVar</span>, <span onmouseout="hideTip(event, 'fs29', 65)" onmouseover="showTip(event, 'fs29', 65)" class="i">body</span>)
                    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 66)" onmouseover="showTip(event, 'fs38', 66)" class="i">recExpr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 67)" onmouseover="showTip(event, 'fs10', 67)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 68)" onmouseover="showTip(event, 'fs31', 68)" class="f">Cast</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 69)" onmouseover="showTip(event, 'fs11', 69)" class="t">int</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs10', 70)" onmouseover="showTip(event, 'fs10', 70)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs39', 71)" onmouseover="showTip(event, 'fs39', 71)" class="f">LetRecursive</span>([<span onmouseout="hideTip(event, 'fs25', 72)" onmouseover="showTip(event, 'fs25', 72)" class="i">selfVar</span>, <span onmouseout="hideTip(event, 'fs36', 73)" onmouseover="showTip(event, 'fs36', 73)" class="i">lambda</span>], <span onmouseout="hideTip(event, 'fs10', 74)" onmouseover="showTip(event, 'fs10', 74)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 75)" onmouseover="showTip(event, 'fs32', 75)" class="f">Var</span> <span onmouseout="hideTip(event, 'fs25', 76)" onmouseover="showTip(event, 'fs25', 76)" class="i">selfVar</span>))
                    &lt;@ (<span class="o">%</span><span onmouseout="hideTip(event, 'fs38', 77)" onmouseover="showTip(event, 'fs38', 77)" class="i">recExpr</span>) <span class="o">%</span><span onmouseout="hideTip(event, 'fs18', 78)" onmouseover="showTip(event, 'fs18', 78)" class="i">e</span> @&gt;
                <span class="k">else</span>
                    <span class="c">// not a recursive type, just replace input variable with input expression</span>
                    <span onmouseout="hideTip(event, 'fs10', 79)" onmouseover="showTip(event, 'fs10', 79)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 80)" onmouseover="showTip(event, 'fs31', 80)" class="f">Cast</span><span class="o">&lt;</span>_<span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs29', 81)" onmouseover="showTip(event, 'fs29', 81)" class="i">body</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs40', 82)" onmouseover="showTip(event, 'fs40', 82)" class="f">Substitute</span>(<span class="k">function</span> <span onmouseout="hideTip(event, 'fs21', 83)" onmouseover="showTip(event, 'fs21', 83)" class="i">v</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs21', 84)" onmouseover="showTip(event, 'fs21', 84)" class="i">v</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs26', 85)" onmouseover="showTip(event, 'fs26', 85)" class="i">tVar</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs41', 86)" onmouseover="showTip(event, 'fs41', 86)" class="p">Some</span> (<span onmouseout="hideTip(event, 'fs18', 87)" onmouseover="showTip(event, 'fs18', 87)" class="i">e</span> <span class="o">:&gt;</span> _) | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs24', 88)" onmouseover="showTip(event, 'fs24', 88)" class="p">None</span>))

            | <span onmouseout="hideTip(event, 'fs41', 89)" onmouseover="showTip(event, 'fs41', 89)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs42', 90)" onmouseover="showTip(event, 'fs42', 90)" class="i">self</span> <span class="k">-&gt;</span>
                <span class="c">// we are already inside a recursive call, just invoke the recursive function argument</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs43', 91)" onmouseover="showTip(event, 'fs43', 91)" class="i">selfExpr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 92)" onmouseover="showTip(event, 'fs10', 92)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 93)" onmouseover="showTip(event, 'fs31', 93)" class="f">Cast</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 94)" onmouseover="showTip(event, 'fs11', 94)" class="t">int</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs10', 95)" onmouseover="showTip(event, 'fs10', 95)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 96)" onmouseover="showTip(event, 'fs32', 96)" class="f">Var</span> <span onmouseout="hideTip(event, 'fs42', 97)" onmouseover="showTip(event, 'fs42', 97)" class="i">self</span>)
                &lt;@ (<span class="o">%</span><span onmouseout="hideTip(event, 'fs43', 98)" onmouseover="showTip(event, 'fs43', 98)" class="i">selfExpr</span>) <span class="o">%</span><span onmouseout="hideTip(event, 'fs18', 99)" onmouseover="showTip(event, 'fs18', 99)" class="i">e</span> @&gt;

        <span class="k">and</span> <span onmouseout="hideTip(event, 'fs28', 100)" onmouseover="showTip(event, 'fs28', 100)" class="f">mkRecursiveGen</span> <span onmouseout="hideTip(event, 'fs15', 101)" onmouseover="showTip(event, 'fs15', 101)" class="i">stack</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 102)" onmouseover="showTip(event, 'fs8', 102)" class="t">StagedHashCodeGenerator</span> <span class="o">=</span> 
            <span onmouseout="hideTip(event, 'fs13', 103)" onmouseover="showTip(event, 'fs13', 103)" class="f">F</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs8', 104)" onmouseover="showTip(event, 'fs8', 104)" class="t">StagedHashCodeGenerator</span> <span class="k">with</span> <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span class="f">Generate</span> <span onmouseout="hideTip(event, 'fs44', 105)" onmouseover="showTip(event, 'fs44', 105)" class="i">e</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 106)" onmouseover="showTip(event, 'fs14', 106)" class="f">aux</span> <span onmouseout="hideTip(event, 'fs15', 107)" onmouseover="showTip(event, 'fs15', 107)" class="i">stack</span> <span onmouseout="hideTip(event, 'fs44', 108)" onmouseover="showTip(event, 'fs44', 108)" class="i">e</span> }

        <span onmouseout="hideTip(event, 'fs28', 109)" onmouseover="showTip(event, 'fs28', 109)" class="f">mkRecursiveGen</span> []

<span class="c">// The generic program itself</span>

<span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs45', 110)" onmouseover="showTip(event, 'fs45', 110)" class="f">mkStagedHasher</span>() <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs12', 111)" onmouseover="showTip(event, 'fs12', 111)" class="f">Y</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs46', 112)" onmouseover="showTip(event, 'fs46', 112)" class="i">self</span> <span class="k">-&gt;</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs8', 113)" onmouseover="showTip(event, 'fs8', 113)" class="t">StagedHashCodeGenerator</span> <span class="k">with</span> <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span class="f">Generate</span> <span onmouseout="hideTip(event, 'fs47', 114)" onmouseover="showTip(event, 'fs47', 114)" class="i">expr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs48', 115)" onmouseover="showTip(event, 'fs48', 115)" class="f">mkStagedHasherAux</span> <span onmouseout="hideTip(event, 'fs46', 116)" onmouseover="showTip(event, 'fs46', 116)" class="i">self</span> <span onmouseout="hideTip(event, 'fs47', 117)" onmouseover="showTip(event, 'fs47', 117)" class="i">expr</span> })

<span class="k">and</span> <span class="k">private</span> <span onmouseout="hideTip(event, 'fs48', 118)" onmouseover="showTip(event, 'fs48', 118)" class="f">mkStagedHasherAux</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> (<span onmouseout="hideTip(event, 'fs46', 119)" onmouseover="showTip(event, 'fs46', 119)" class="i">self</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs8', 120)" onmouseover="showTip(event, 'fs8', 120)" class="t">StagedHashCodeGenerator</span>) (<span onmouseout="hideTip(event, 'fs49', 121)" onmouseover="showTip(event, 'fs49', 121)" class="i">expr</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 122)" onmouseover="showTip(event, 'fs10', 122)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>) <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 123)" onmouseover="showTip(event, 'fs10', 123)" class="t">Expr</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 124)" onmouseover="showTip(event, 'fs11', 124)" class="t">int</span><span class="o">&gt;</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 125)" onmouseover="showTip(event, 'fs50', 125)" class="f">unwrap</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 126)" onmouseover="showTip(event, 'fs51', 126)" class="f">unbox</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs10', 127)" onmouseover="showTip(event, 'fs10', 127)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs49', 128)" onmouseover="showTip(event, 'fs49', 128)" class="i">expr</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs52', 129)" onmouseover="showTip(event, 'fs52', 129)" class="f">genHash</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 130)" onmouseover="showTip(event, 'fs10', 130)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 131)" onmouseover="showTip(event, 'fs53', 131)" class="f">lam</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs18', 132)" onmouseover="showTip(event, 'fs18', 132)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs46', 133)" onmouseover="showTip(event, 'fs46', 133)" class="i">self</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 134)" onmouseover="showTip(event, 'fs30', 134)" class="f">Generate</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs18', 135)" onmouseover="showTip(event, 'fs18', 135)" class="i">e</span>)

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 136)" onmouseover="showTip(event, 'fs54', 136)" class="f">combineHash</span> (<span onmouseout="hideTip(event, 'fs55', 137)" onmouseover="showTip(event, 'fs55', 137)" class="i">h1</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 138)" onmouseover="showTip(event, 'fs10', 138)" class="t">Expr</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 139)" onmouseover="showTip(event, 'fs11', 139)" class="t">int</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs56', 140)" onmouseover="showTip(event, 'fs56', 140)" class="i">h2</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 141)" onmouseover="showTip(event, 'fs10', 141)" class="t">Expr</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 142)" onmouseover="showTip(event, 'fs11', 142)" class="t">int</span><span class="o">&gt;</span>) <span class="o">=</span>
        &lt;@ <span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 143)" onmouseover="showTip(event, 'fs57', 143)" class="i">h1</span> <span class="o">=</span> <span class="o">%</span><span onmouseout="hideTip(event, 'fs57', 144)" onmouseover="showTip(event, 'fs57', 144)" class="i">h1</span> <span class="k">in</span> <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 145)" onmouseover="showTip(event, 'fs58', 145)" class="i">h2</span> <span class="o">=</span> <span class="o">%</span><span onmouseout="hideTip(event, 'fs58', 146)" onmouseover="showTip(event, 'fs58', 146)" class="i">h2</span> <span class="k">in</span> ((<span onmouseout="hideTip(event, 'fs57', 147)" onmouseover="showTip(event, 'fs57', 147)" class="i">h1</span> <span class="o">&lt;&lt;&lt;</span> <span class="n">5</span>) <span class="o">+</span> <span onmouseout="hideTip(event, 'fs57', 148)" onmouseover="showTip(event, 'fs57', 148)" class="i">h1</span>) <span class="o">|||</span> <span onmouseout="hideTip(event, 'fs58', 149)" onmouseover="showTip(event, 'fs58', 149)" class="i">h2</span> @&gt;

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs59', 150)" onmouseover="showTip(event, 'fs59', 150)" class="f">stageMemberHash</span> (<span onmouseout="hideTip(event, 'fs60', 151)" onmouseover="showTip(event, 'fs60', 151)" class="i">shape</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs61', 152)" onmouseover="showTip(event, 'fs61', 152)" class="t">IShapeMember</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">DeclaringType</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs62', 153)" onmouseover="showTip(event, 'fs62', 153)" class="i">dExpr</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 154)" onmouseover="showTip(event, 'fs10', 154)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">DeclaringType</span><span class="o">&gt;</span>) <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs60', 155)" onmouseover="showTip(event, 'fs60', 155)" class="i">shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs63', 156)" onmouseover="showTip(event, 'fs63', 156)" class="f">Accept</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs64', 157)" onmouseover="showTip(event, 'fs64', 157)" class="t">IMemberVisitor</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">DeclaringType</span>, <span onmouseout="hideTip(event, 'fs10', 158)" onmouseover="showTip(event, 'fs10', 158)" class="t">Expr</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 159)" onmouseover="showTip(event, 'fs11', 159)" class="t">int</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="k">with</span>
            <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span class="f">Visit</span> (<span onmouseout="hideTip(event, 'fs65', 160)" onmouseover="showTip(event, 'fs65', 160)" class="i">shape</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs66', 161)" onmouseover="showTip(event, 'fs66', 161)" class="t">ShapeMember</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">DeclaringType</span>, <span class="o">&#39;</span><span class="i">FieldType</span><span class="o">&gt;</span>) <span class="o">=</span>
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs67', 162)" onmouseover="showTip(event, 'fs67', 162)" class="i">fExpr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs65', 163)" onmouseover="showTip(event, 'fs65', 163)" class="i">shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs68', 164)" onmouseover="showTip(event, 'fs68', 164)" class="f">ProjectExpr</span> <span onmouseout="hideTip(event, 'fs62', 165)" onmouseover="showTip(event, 'fs62', 165)" class="i">dExpr</span>
                <span onmouseout="hideTip(event, 'fs46', 166)" onmouseover="showTip(event, 'fs46', 166)" class="i">self</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs30', 167)" onmouseover="showTip(event, 'fs30', 167)" class="f">Generate</span> <span onmouseout="hideTip(event, 'fs67', 168)" onmouseover="showTip(event, 'fs67', 168)" class="i">fExpr</span> }

    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs69', 169)" onmouseover="showTip(event, 'fs69', 169)" class="i">shapeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs70', 170)" onmouseover="showTip(event, 'fs70', 170)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs71', 171)" onmouseover="showTip(event, 'fs71', 171)" class="p">Unit</span> <span class="k">-&gt;</span> &lt;@ <span class="n">0</span> @&gt;
    | <span onmouseout="hideTip(event, 'fs70', 172)" onmouseover="showTip(event, 'fs70', 172)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs72', 173)" onmouseover="showTip(event, 'fs72', 173)" class="p">Bool</span> <span class="k">-&gt;</span> &lt;@ <span class="k">if</span> (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs50', 174)" onmouseover="showTip(event, 'fs50', 174)" class="f">unwrap</span>() ) <span class="k">then</span> <span class="n">1</span> <span class="k">else</span> <span class="n">0</span> @&gt;
    | <span onmouseout="hideTip(event, 'fs70', 175)" onmouseover="showTip(event, 'fs70', 175)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs73', 176)" onmouseover="showTip(event, 'fs73', 176)" class="p">Int32</span> <span class="k">-&gt;</span> &lt;@ (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs50', 177)" onmouseover="showTip(event, 'fs50', 177)" class="f">unwrap</span>()) @&gt;
    | <span onmouseout="hideTip(event, 'fs70', 178)" onmouseover="showTip(event, 'fs70', 178)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs74', 179)" onmouseover="showTip(event, 'fs74', 179)" class="p">Double</span> <span class="k">-&gt;</span> &lt;@ <span onmouseout="hideTip(event, 'fs75', 180)" onmouseover="showTip(event, 'fs75', 180)" class="f">hash</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs76', 181)" onmouseover="showTip(event, 'fs76', 181)" class="t">double</span><span class="o">&gt;</span> (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs50', 182)" onmouseover="showTip(event, 'fs50', 182)" class="f">unwrap</span>()) @&gt;
    | <span onmouseout="hideTip(event, 'fs70', 183)" onmouseover="showTip(event, 'fs70', 183)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs77', 184)" onmouseover="showTip(event, 'fs77', 184)" class="p">String</span> <span class="k">-&gt;</span> &lt;@ <span onmouseout="hideTip(event, 'fs75', 185)" onmouseover="showTip(event, 'fs75', 185)" class="f">hash</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs78', 186)" onmouseover="showTip(event, 'fs78', 186)" class="t">string</span><span class="o">&gt;</span> (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs50', 187)" onmouseover="showTip(event, 'fs50', 187)" class="f">unwrap</span>()) @&gt;
    | <span onmouseout="hideTip(event, 'fs70', 188)" onmouseover="showTip(event, 'fs70', 188)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs79', 189)" onmouseover="showTip(event, 'fs79', 189)" class="p">Array</span> <span onmouseout="hideTip(event, 'fs80', 190)" onmouseover="showTip(event, 'fs80', 190)" class="i">s</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs80', 191)" onmouseover="showTip(event, 'fs80', 191)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs81', 192)" onmouseover="showTip(event, 'fs81', 192)" class="i">Rank</span> <span class="o">=</span> <span class="n">1</span> <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs80', 193)" onmouseover="showTip(event, 'fs80', 193)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs82', 194)" onmouseover="showTip(event, 'fs82', 194)" class="f">Accept</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs83', 195)" onmouseover="showTip(event, 'fs83', 195)" class="t">IArrayVisitor</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs10', 196)" onmouseover="showTip(event, 'fs10', 196)" class="t">Expr</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 197)" onmouseover="showTip(event, 'fs11', 197)" class="t">int</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="k">with</span>
            <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span class="f">Visit</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span> _ <span class="o">=</span>
                &lt;@
                    <span class="k">match</span> (<span class="o">%</span> (<span onmouseout="hideTip(event, 'fs50', 198)" onmouseover="showTip(event, 'fs50', 198)" class="f">unwrap</span>() <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 199)" onmouseover="showTip(event, 'fs10', 199)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span>[]<span class="o">&gt;</span>)) <span class="k">with</span>
                    | <span class="k">null</span> <span class="k">-&gt;</span> <span class="n">0</span>
                    | <span onmouseout="hideTip(event, 'fs84', 200)" onmouseover="showTip(event, 'fs84', 200)" class="i">ts</span> <span class="k">-&gt;</span>
                        <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs85', 201)" onmouseover="showTip(event, 'fs85', 201)" class="v">agg</span> <span class="o">=</span> <span class="n">0</span>
                        <span class="k">for</span> <span onmouseout="hideTip(event, 'fs86', 202)" onmouseover="showTip(event, 'fs86', 202)" class="i">t</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs84', 203)" onmouseover="showTip(event, 'fs84', 203)" class="i">ts</span> <span class="k">do</span>
                            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs87', 204)" onmouseover="showTip(event, 'fs87', 204)" class="i">th</span> <span class="o">=</span> (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs52', 205)" onmouseover="showTip(event, 'fs52', 205)" class="f">genHash</span>() ) <span onmouseout="hideTip(event, 'fs86', 206)" onmouseover="showTip(event, 'fs86', 206)" class="i">t</span>
                            <span onmouseout="hideTip(event, 'fs85', 207)" onmouseover="showTip(event, 'fs85', 207)" class="i">agg</span> <span class="o">&lt;-</span> (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs10', 208)" onmouseover="showTip(event, 'fs10', 208)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs88', 209)" onmouseover="showTip(event, 'fs88', 209)" class="f">lam2</span> <span onmouseout="hideTip(event, 'fs54', 210)" onmouseover="showTip(event, 'fs54', 210)" class="f">combineHash</span>) <span onmouseout="hideTip(event, 'fs85', 211)" onmouseover="showTip(event, 'fs85', 211)" class="v">agg</span> <span onmouseout="hideTip(event, 'fs87', 212)" onmouseover="showTip(event, 'fs87', 212)" class="i">th</span>
                        <span onmouseout="hideTip(event, 'fs85', 213)" onmouseover="showTip(event, 'fs85', 213)" class="i">agg</span>
                @&gt; }

    | <span onmouseout="hideTip(event, 'fs70', 214)" onmouseover="showTip(event, 'fs70', 214)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs89', 215)" onmouseover="showTip(event, 'fs89', 215)" class="p">FSharpOption</span> <span onmouseout="hideTip(event, 'fs90', 216)" onmouseover="showTip(event, 'fs90', 216)" class="i">s</span> <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs90', 217)" onmouseover="showTip(event, 'fs90', 217)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs91', 218)" onmouseover="showTip(event, 'fs91', 218)" class="f">Accept</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs92', 219)" onmouseover="showTip(event, 'fs92', 219)" class="t">IFSharpOptionVisitor</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs10', 220)" onmouseover="showTip(event, 'fs10', 220)" class="t">Expr</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 221)" onmouseover="showTip(event, 'fs11', 221)" class="t">int</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="k">with</span>
            <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span class="f">Visit</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span> () <span class="o">=</span>
                &lt;@
                    <span class="k">match</span> (<span class="o">%</span> (<span onmouseout="hideTip(event, 'fs50', 222)" onmouseover="showTip(event, 'fs50', 222)" class="f">unwrap</span>() <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 223)" onmouseover="showTip(event, 'fs10', 223)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span> <span onmouseout="hideTip(event, 'fs93', 224)" onmouseover="showTip(event, 'fs93', 224)" class="t">option</span><span class="o">&gt;</span>)) <span class="k">with</span>
                    | <span onmouseout="hideTip(event, 'fs24', 225)" onmouseover="showTip(event, 'fs24', 225)" class="p">None</span> <span class="k">-&gt;</span> <span class="n">0</span>
                    | <span onmouseout="hideTip(event, 'fs41', 226)" onmouseover="showTip(event, 'fs41', 226)" class="p">Some</span> <span onmouseout="hideTip(event, 'fs86', 227)" onmouseover="showTip(event, 'fs86', 227)" class="i">t</span> <span class="k">-&gt;</span> 
                        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs87', 228)" onmouseover="showTip(event, 'fs87', 228)" class="i">th</span> <span class="o">=</span> (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs52', 229)" onmouseover="showTip(event, 'fs52', 229)" class="f">genHash</span>() ) <span onmouseout="hideTip(event, 'fs86', 230)" onmouseover="showTip(event, 'fs86', 230)" class="i">t</span>
                        (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs10', 231)" onmouseover="showTip(event, 'fs10', 231)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs88', 232)" onmouseover="showTip(event, 'fs88', 232)" class="f">lam2</span> <span onmouseout="hideTip(event, 'fs54', 233)" onmouseover="showTip(event, 'fs54', 233)" class="f">combineHash</span>) <span class="n">1</span> <span onmouseout="hideTip(event, 'fs87', 234)" onmouseover="showTip(event, 'fs87', 234)" class="i">th</span>
                @&gt; }

    | <span onmouseout="hideTip(event, 'fs70', 235)" onmouseover="showTip(event, 'fs70', 235)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs94', 236)" onmouseover="showTip(event, 'fs94', 236)" class="p">FSharpList</span> <span onmouseout="hideTip(event, 'fs95', 237)" onmouseover="showTip(event, 'fs95', 237)" class="i">s</span> <span class="k">-&gt;</span>
        <span onmouseout="hideTip(event, 'fs95', 238)" onmouseover="showTip(event, 'fs95', 238)" class="i">s</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs96', 239)" onmouseover="showTip(event, 'fs96', 239)" class="f">Accept</span> { <span class="k">new</span> <span onmouseout="hideTip(event, 'fs97', 240)" onmouseover="showTip(event, 'fs97', 240)" class="t">IFSharpListVisitor</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs10', 241)" onmouseover="showTip(event, 'fs10', 241)" class="t">Expr</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 242)" onmouseover="showTip(event, 'fs11', 242)" class="t">int</span><span class="o">&gt;</span><span class="o">&gt;</span> <span class="k">with</span>
            <span class="k">member</span> <span class="i">__</span><span class="o">.</span><span class="f">Visit</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span><span class="o">&gt;</span> () <span class="o">=</span>
                &lt;@
                    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs85', 243)" onmouseover="showTip(event, 'fs85', 243)" class="v">agg</span> <span class="o">=</span> <span class="n">0</span>
                    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs98', 244)" onmouseover="showTip(event, 'fs98', 244)" class="v">ts</span> <span class="o">=</span> (<span class="o">%</span> (<span onmouseout="hideTip(event, 'fs50', 245)" onmouseover="showTip(event, 'fs50', 245)" class="f">unwrap</span>() <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 246)" onmouseover="showTip(event, 'fs10', 246)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">t</span> <span onmouseout="hideTip(event, 'fs17', 247)" onmouseover="showTip(event, 'fs17', 247)" class="t">list</span><span class="o">&gt;</span>))
                    <span class="k">while</span> <span onmouseout="hideTip(event, 'fs99', 248)" onmouseover="showTip(event, 'fs99', 248)" class="f">not</span>(<span onmouseout="hideTip(event, 'fs19', 249)" onmouseover="showTip(event, 'fs19', 249)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs100', 250)" onmouseover="showTip(event, 'fs100', 250)" class="f">isEmpty</span> <span onmouseout="hideTip(event, 'fs98', 251)" onmouseover="showTip(event, 'fs98', 251)" class="v">ts</span>) <span class="k">do</span>
                        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs87', 252)" onmouseover="showTip(event, 'fs87', 252)" class="i">th</span> <span class="o">=</span> (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs52', 253)" onmouseover="showTip(event, 'fs52', 253)" class="f">genHash</span>() ) (<span onmouseout="hideTip(event, 'fs19', 254)" onmouseover="showTip(event, 'fs19', 254)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs101', 255)" onmouseover="showTip(event, 'fs101', 255)" class="f">head</span> <span onmouseout="hideTip(event, 'fs98', 256)" onmouseover="showTip(event, 'fs98', 256)" class="v">ts</span>)
                        <span onmouseout="hideTip(event, 'fs85', 257)" onmouseover="showTip(event, 'fs85', 257)" class="i">agg</span> <span class="o">&lt;-</span> (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs10', 258)" onmouseover="showTip(event, 'fs10', 258)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs88', 259)" onmouseover="showTip(event, 'fs88', 259)" class="f">lam2</span> <span onmouseout="hideTip(event, 'fs54', 260)" onmouseover="showTip(event, 'fs54', 260)" class="f">combineHash</span>) <span onmouseout="hideTip(event, 'fs85', 261)" onmouseover="showTip(event, 'fs85', 261)" class="v">agg</span> <span onmouseout="hideTip(event, 'fs87', 262)" onmouseover="showTip(event, 'fs87', 262)" class="i">th</span>
                        <span onmouseout="hideTip(event, 'fs98', 263)" onmouseover="showTip(event, 'fs98', 263)" class="i">ts</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fs19', 264)" onmouseover="showTip(event, 'fs19', 264)" class="t">List</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs102', 265)" onmouseover="showTip(event, 'fs102', 265)" class="f">tail</span> <span onmouseout="hideTip(event, 'fs98', 266)" onmouseover="showTip(event, 'fs98', 266)" class="v">ts</span>

                    <span onmouseout="hideTip(event, 'fs85', 267)" onmouseover="showTip(event, 'fs85', 267)" class="i">agg</span>
                @&gt; }

    | <span onmouseout="hideTip(event, 'fs70', 268)" onmouseover="showTip(event, 'fs70', 268)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs103', 269)" onmouseover="showTip(event, 'fs103', 269)" class="p">Tuple</span> (<span class="o">:?</span> <span onmouseout="hideTip(event, 'fs104', 270)" onmouseover="showTip(event, 'fs104', 270)" class="t">ShapeTuple</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs105', 271)" onmouseover="showTip(event, 'fs105', 271)" class="i">shape</span>) <span class="k">-&gt;</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs106', 272)" onmouseover="showTip(event, 'fs106', 272)" class="f">mkElementHasher</span> <span onmouseout="hideTip(event, 'fs107', 273)" onmouseover="showTip(event, 'fs107', 273)" class="i">tuple</span> <span class="o">=</span>
                <span onmouseout="hideTip(event, 'fs105', 274)" onmouseover="showTip(event, 'fs105', 274)" class="i">shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs108', 275)" onmouseover="showTip(event, 'fs108', 275)" class="i">Elements</span>
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs109', 276)" onmouseover="showTip(event, 'fs109', 276)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 277)" onmouseover="showTip(event, 'fs110', 277)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs111', 278)" onmouseover="showTip(event, 'fs111', 278)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs59', 279)" onmouseover="showTip(event, 'fs59', 279)" class="f">stageMemberHash</span> <span onmouseout="hideTip(event, 'fs111', 280)" onmouseover="showTip(event, 'fs111', 280)" class="i">e</span> <span onmouseout="hideTip(event, 'fs107', 281)" onmouseover="showTip(event, 'fs107', 281)" class="i">tuple</span>)
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs109', 282)" onmouseover="showTip(event, 'fs109', 282)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 283)" onmouseover="showTip(event, 'fs110', 283)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs112', 284)" onmouseover="showTip(event, 'fs112', 284)" class="i">eh</span> <span onmouseout="hideTip(event, 'fs113', 285)" onmouseover="showTip(event, 'fs113', 285)" class="i">agg</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs54', 286)" onmouseover="showTip(event, 'fs54', 286)" class="f">combineHash</span> <span onmouseout="hideTip(event, 'fs112', 287)" onmouseover="showTip(event, 'fs112', 287)" class="i">eh</span> <span onmouseout="hideTip(event, 'fs113', 288)" onmouseover="showTip(event, 'fs113', 288)" class="i">agg</span>)
                <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 289)" onmouseover="showTip(event, 'fs10', 289)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs114', 290)" onmouseover="showTip(event, 'fs114', 290)" class="f">update</span> (<span class="s">&quot;agg&quot;</span>, &lt;@ <span class="n">0</span> @&gt;)

            &lt;@
                <span class="k">let</span> <span onmouseout="hideTip(event, 'fs115', 291)" onmouseover="showTip(event, 'fs115', 291)" class="i">tuple</span> <span class="o">=</span> <span class="o">%</span><span onmouseout="hideTip(event, 'fs49', 292)" onmouseover="showTip(event, 'fs49', 292)" class="i">expr</span>
                (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs10', 293)" onmouseover="showTip(event, 'fs10', 293)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 294)" onmouseover="showTip(event, 'fs53', 294)" class="f">lam</span> <span onmouseout="hideTip(event, 'fs106', 295)" onmouseover="showTip(event, 'fs106', 295)" class="f">mkElementHasher</span>) <span onmouseout="hideTip(event, 'fs115', 296)" onmouseover="showTip(event, 'fs115', 296)" class="i">tuple</span>
            @&gt;

    | <span onmouseout="hideTip(event, 'fs70', 297)" onmouseover="showTip(event, 'fs70', 297)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs116', 298)" onmouseover="showTip(event, 'fs116', 298)" class="p">FSharpRecord</span> (<span class="o">:?</span> <span onmouseout="hideTip(event, 'fs117', 299)" onmouseover="showTip(event, 'fs117', 299)" class="t">ShapeFSharpRecord</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs118', 300)" onmouseover="showTip(event, 'fs118', 300)" class="i">shape</span>) <span class="k">-&gt;</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs119', 301)" onmouseover="showTip(event, 'fs119', 301)" class="f">mkFieldHasher</span> <span onmouseout="hideTip(event, 'fs120', 302)" onmouseover="showTip(event, 'fs120', 302)" class="i">record</span> <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs118', 303)" onmouseover="showTip(event, 'fs118', 303)" class="i">shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs121', 304)" onmouseover="showTip(event, 'fs121', 304)" class="i">Fields</span>
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs109', 305)" onmouseover="showTip(event, 'fs109', 305)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 306)" onmouseover="showTip(event, 'fs110', 306)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs111', 307)" onmouseover="showTip(event, 'fs111', 307)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs59', 308)" onmouseover="showTip(event, 'fs59', 308)" class="f">stageMemberHash</span> <span onmouseout="hideTip(event, 'fs111', 309)" onmouseover="showTip(event, 'fs111', 309)" class="i">e</span> <span onmouseout="hideTip(event, 'fs120', 310)" onmouseover="showTip(event, 'fs120', 310)" class="i">record</span>)
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs109', 311)" onmouseover="showTip(event, 'fs109', 311)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 312)" onmouseover="showTip(event, 'fs110', 312)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs112', 313)" onmouseover="showTip(event, 'fs112', 313)" class="i">eh</span> <span onmouseout="hideTip(event, 'fs113', 314)" onmouseover="showTip(event, 'fs113', 314)" class="i">agg</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs54', 315)" onmouseover="showTip(event, 'fs54', 315)" class="f">combineHash</span> <span onmouseout="hideTip(event, 'fs112', 316)" onmouseover="showTip(event, 'fs112', 316)" class="i">eh</span> <span onmouseout="hideTip(event, 'fs113', 317)" onmouseover="showTip(event, 'fs113', 317)" class="i">agg</span>)
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 318)" onmouseover="showTip(event, 'fs10', 318)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs114', 319)" onmouseover="showTip(event, 'fs114', 319)" class="f">update</span> (<span class="s">&quot;agg&quot;</span>, &lt;@ <span class="n">0</span> @&gt;)
                    
        &lt;@
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs122', 320)" onmouseover="showTip(event, 'fs122', 320)" class="i">record</span> <span class="o">=</span> <span class="o">%</span><span onmouseout="hideTip(event, 'fs49', 321)" onmouseover="showTip(event, 'fs49', 321)" class="i">expr</span>
            (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs10', 322)" onmouseover="showTip(event, 'fs10', 322)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 323)" onmouseover="showTip(event, 'fs53', 323)" class="f">lam</span> <span onmouseout="hideTip(event, 'fs119', 324)" onmouseover="showTip(event, 'fs119', 324)" class="f">mkFieldHasher</span>) <span onmouseout="hideTip(event, 'fs122', 325)" onmouseover="showTip(event, 'fs122', 325)" class="i">record</span>
        @&gt;

    | <span onmouseout="hideTip(event, 'fs70', 326)" onmouseover="showTip(event, 'fs70', 326)" class="t">Shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs123', 327)" onmouseover="showTip(event, 'fs123', 327)" class="p">FSharpUnion</span> (<span class="o">:?</span> <span onmouseout="hideTip(event, 'fs124', 328)" onmouseover="showTip(event, 'fs124', 328)" class="t">ShapeFSharpUnion</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs125', 329)" onmouseover="showTip(event, 'fs125', 329)" class="i">shape</span>) <span class="k">-&gt;</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs126', 330)" onmouseover="showTip(event, 'fs126', 330)" class="f">stageUnionCaseHasher</span> 
            (<span onmouseout="hideTip(event, 'fs127', 331)" onmouseover="showTip(event, 'fs127', 331)" class="i">union</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 332)" onmouseover="showTip(event, 'fs10', 332)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs128', 333)" onmouseover="showTip(event, 'fs128', 333)" class="i">tag</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 334)" onmouseover="showTip(event, 'fs10', 334)" class="t">Expr</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 335)" onmouseover="showTip(event, 'fs11', 335)" class="t">int</span><span class="o">&gt;</span>)
            (<span onmouseout="hideTip(event, 'fs129', 336)" onmouseover="showTip(event, 'fs129', 336)" class="i">case</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs130', 337)" onmouseover="showTip(event, 'fs130', 337)" class="t">ShapeFSharpUnionCase</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>) <span class="o">=</span>
            
            <span onmouseout="hideTip(event, 'fs129', 338)" onmouseover="showTip(event, 'fs129', 338)" class="i">case</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs131', 339)" onmouseover="showTip(event, 'fs131', 339)" class="i">Fields</span>
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs109', 340)" onmouseover="showTip(event, 'fs109', 340)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 341)" onmouseover="showTip(event, 'fs110', 341)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs132', 342)" onmouseover="showTip(event, 'fs132', 342)" class="i">c</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs59', 343)" onmouseover="showTip(event, 'fs59', 343)" class="f">stageMemberHash</span> <span onmouseout="hideTip(event, 'fs132', 344)" onmouseover="showTip(event, 'fs132', 344)" class="i">c</span> <span onmouseout="hideTip(event, 'fs127', 345)" onmouseover="showTip(event, 'fs127', 345)" class="i">union</span>)
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs109', 346)" onmouseover="showTip(event, 'fs109', 346)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 347)" onmouseover="showTip(event, 'fs110', 347)" class="f">map</span> (<span class="k">fun</span> <span onmouseout="hideTip(event, 'fs133', 348)" onmouseover="showTip(event, 'fs133', 348)" class="i">fh</span> <span onmouseout="hideTip(event, 'fs113', 349)" onmouseover="showTip(event, 'fs113', 349)" class="i">agg</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs54', 350)" onmouseover="showTip(event, 'fs54', 350)" class="f">combineHash</span> <span onmouseout="hideTip(event, 'fs133', 351)" onmouseover="showTip(event, 'fs133', 351)" class="i">fh</span> <span onmouseout="hideTip(event, 'fs113', 352)" onmouseover="showTip(event, 'fs113', 352)" class="i">agg</span>)
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 353)" onmouseover="showTip(event, 'fs10', 353)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs114', 354)" onmouseover="showTip(event, 'fs114', 354)" class="f">update</span> (<span class="s">&quot;agg&quot;</span>, <span onmouseout="hideTip(event, 'fs128', 355)" onmouseover="showTip(event, 'fs128', 355)" class="i">tag</span>)

        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs134', 356)" onmouseover="showTip(event, 'fs134', 356)" class="f">stageUnionCaseHashers</span> (<span onmouseout="hideTip(event, 'fs135', 357)" onmouseover="showTip(event, 'fs135', 357)" class="i">u</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 358)" onmouseover="showTip(event, 'fs10', 358)" class="t">Expr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>) (<span onmouseout="hideTip(event, 'fs128', 359)" onmouseover="showTip(event, 'fs128', 359)" class="i">tag</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs10', 360)" onmouseover="showTip(event, 'fs10', 360)" class="t">Expr</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 361)" onmouseover="showTip(event, 'fs11', 361)" class="t">int</span><span class="o">&gt;</span>) <span class="o">=</span>
            <span onmouseout="hideTip(event, 'fs125', 362)" onmouseover="showTip(event, 'fs125', 362)" class="i">shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs136', 363)" onmouseover="showTip(event, 'fs136', 363)" class="i">UnionCases</span>
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs109', 364)" onmouseover="showTip(event, 'fs109', 364)" class="t">Array</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs110', 365)" onmouseover="showTip(event, 'fs110', 365)" class="f">map</span> (<span onmouseout="hideTip(event, 'fs126', 366)" onmouseover="showTip(event, 'fs126', 366)" class="f">stageUnionCaseHasher</span> <span onmouseout="hideTip(event, 'fs135', 367)" onmouseover="showTip(event, 'fs135', 367)" class="i">u</span> <span onmouseout="hideTip(event, 'fs128', 368)" onmouseover="showTip(event, 'fs128', 368)" class="i">tag</span>)
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 369)" onmouseover="showTip(event, 'fs10', 369)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs137', 370)" onmouseover="showTip(event, 'fs137', 370)" class="f">switch</span> <span onmouseout="hideTip(event, 'fs128', 371)" onmouseover="showTip(event, 'fs128', 371)" class="i">tag</span>

        &lt;@
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs138', 372)" onmouseover="showTip(event, 'fs138', 372)" class="i">union</span> <span class="o">=</span> <span class="o">%</span><span onmouseout="hideTip(event, 'fs49', 373)" onmouseover="showTip(event, 'fs49', 373)" class="i">expr</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs139', 374)" onmouseover="showTip(event, 'fs139', 374)" class="i">tag</span> <span class="o">=</span> (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs10', 375)" onmouseover="showTip(event, 'fs10', 375)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 376)" onmouseover="showTip(event, 'fs53', 376)" class="f">lam</span> <span onmouseout="hideTip(event, 'fs125', 377)" onmouseover="showTip(event, 'fs125', 377)" class="i">shape</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs140', 378)" onmouseover="showTip(event, 'fs140', 378)" class="f">GetTagExpr</span>) <span onmouseout="hideTip(event, 'fs138', 379)" onmouseover="showTip(event, 'fs138', 379)" class="i">union</span>
            (<span class="o">%</span> <span onmouseout="hideTip(event, 'fs10', 380)" onmouseover="showTip(event, 'fs10', 380)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs88', 381)" onmouseover="showTip(event, 'fs88', 381)" class="f">lam2</span> <span onmouseout="hideTip(event, 'fs134', 382)" onmouseover="showTip(event, 'fs134', 382)" class="f">stageUnionCaseHashers</span>) <span onmouseout="hideTip(event, 'fs138', 383)" onmouseover="showTip(event, 'fs138', 383)" class="i">union</span> <span onmouseout="hideTip(event, 'fs139', 384)" onmouseover="showTip(event, 'fs139', 384)" class="i">tag</span>  
        @&gt;

    | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs141', 385)" onmouseover="showTip(event, 'fs141', 385)" class="f">failwithf</span> <span class="s">&quot;Unsupported shape </span><span class="pf">%O</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs23', 386)" onmouseover="showTip(event, 'fs23', 386)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>



<span class="c">// Compilation code</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs142', 387)" onmouseover="showTip(event, 'fs142', 387)" class="f">mkHashCodeExpr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> () <span class="o">=</span>
    <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs143', 388)" onmouseover="showTip(event, 'fs143', 388)" class="i">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs45', 389)" onmouseover="showTip(event, 'fs45', 389)" class="f">mkStagedHasher</span>()<span class="o">.</span><span class="f">Generate</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs143', 390)" onmouseover="showTip(event, 'fs143', 390)" class="i">e</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 391)" onmouseover="showTip(event, 'fs10', 391)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs53', 392)" onmouseover="showTip(event, 'fs53', 392)" class="f">lam</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs10', 393)" onmouseover="showTip(event, 'fs10', 393)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs144', 394)" onmouseover="showTip(event, 'fs144', 394)" class="f">cleanup</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs145', 395)" onmouseover="showTip(event, 'fs145', 395)" class="f">mkHasher</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs142', 396)" onmouseover="showTip(event, 'fs142', 396)" class="f">mkHashCodeExpr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs146', 397)" onmouseover="showTip(event, 'fs146', 397)" class="t">QuotationEvaluator</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs147', 398)" onmouseover="showTip(event, 'fs147', 398)" class="f">Evaluate</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs148', 399)" onmouseover="showTip(event, 'fs148', 399)" class="f">decompileHasher</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span> () <span class="o">=</span> <span onmouseout="hideTip(event, 'fs142', 400)" onmouseover="showTip(event, 'fs142', 400)" class="f">mkHashCodeExpr</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span><span class="o">&gt;</span>() <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs149', 401)" onmouseover="showTip(event, 'fs149', 401)" class="f">decompile</span>


<span class="c">// examples</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs150', 402)" onmouseover="showTip(event, 'fs150', 402)" class="f">hasher1</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs145', 403)" onmouseover="showTip(event, 'fs145', 403)" class="f">mkHasher</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 404)" onmouseover="showTip(event, 'fs11', 404)" class="t">int</span> <span onmouseout="hideTip(event, 'fs17', 405)" onmouseover="showTip(event, 'fs17', 405)" class="t">list</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs78', 406)" onmouseover="showTip(event, 'fs78', 406)" class="t">string</span> <span onmouseout="hideTip(event, 'fs93', 407)" onmouseover="showTip(event, 'fs93', 407)" class="t">option</span><span class="o">&gt;</span>()

<span onmouseout="hideTip(event, 'fs150', 408)" onmouseover="showTip(event, 'fs150', 408)" class="f">hasher1</span> ([<span class="n">1</span> <span class="o">..</span> <span class="n">100</span>], <span onmouseout="hideTip(event, 'fs41', 409)" onmouseover="showTip(event, 'fs41', 409)" class="p">Some</span> <span class="s">&quot;42&quot;</span>)

<span onmouseout="hideTip(event, 'fs148', 410)" onmouseover="showTip(event, 'fs148', 410)" class="f">decompileHasher</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 411)" onmouseover="showTip(event, 'fs11', 411)" class="t">int</span> <span class="o">*</span> (<span onmouseout="hideTip(event, 'fs78', 412)" onmouseover="showTip(event, 'fs78', 412)" class="t">string</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs151', 413)" onmouseover="showTip(event, 'fs151', 413)" class="t">bool</span>)<span class="o">&gt;</span>()
<span class="c">//fun t -&gt; </span>
<span class="c">//    let mutable agg = 0 </span>
<span class="c">//    agg &lt;- let h1 = t.m_Item1 in (h1 &lt;&lt;&lt; 5) + h1 ||| agg</span>
<span class="c">//    agg &lt;- </span>
<span class="c">//        let h1 = </span>
<span class="c">//            let tuple = t.m_Item2 </span>
<span class="c">//            let mutable agg = 0 </span>
<span class="c">//            agg &lt;- let h1 = hash tuple.m_Item1 in (h1 &lt;&lt;&lt; 5) + h1 ||| agg</span>
<span class="c">//            agg &lt;- let h1 = if tuple.m_Item2 then 1 else 0 in (h1 &lt;&lt;&lt; 5) + h1 ||| agg</span>
<span class="c">//            agg </span>
<span class="c">//        (h1 &lt;&lt;&lt; 5) + h1 ||| agg </span>
<span class="c">//    agg</span>
   
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs152', 414)" onmouseover="showTip(event, 'fs152', 414)" class="t">Foo</span> <span class="o">=</span> { <span onmouseout="hideTip(event, 'fs153', 415)" onmouseover="showTip(event, 'fs153', 415)" class="i">A</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs11', 416)" onmouseover="showTip(event, 'fs11', 416)" class="t">int</span> ; <span onmouseout="hideTip(event, 'fs154', 417)" onmouseover="showTip(event, 'fs154', 417)" class="i">B</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs78', 418)" onmouseover="showTip(event, 'fs78', 418)" class="t">string</span> }

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs155', 419)" onmouseover="showTip(event, 'fs155', 419)" class="t">Bar</span> <span class="o">=</span>
    | <span onmouseout="hideTip(event, 'fs156', 420)" onmouseover="showTip(event, 'fs156', 420)" class="p">UA</span>
    | <span onmouseout="hideTip(event, 'fs157', 421)" onmouseover="showTip(event, 'fs157', 421)" class="p">UB</span> <span class="k">of</span> <span class="i">foo</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs78', 422)" onmouseover="showTip(event, 'fs78', 422)" class="t">string</span>
    | <span onmouseout="hideTip(event, 'fs158', 423)" onmouseover="showTip(event, 'fs158', 423)" class="p">UC</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs152', 424)" onmouseover="showTip(event, 'fs152', 424)" class="t">Foo</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs159', 425)" onmouseover="showTip(event, 'fs159', 425)" class="f">hasher2</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs145', 426)" onmouseover="showTip(event, 'fs145', 426)" class="f">mkHasher</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs155', 427)" onmouseover="showTip(event, 'fs155', 427)" class="t">Bar</span> <span onmouseout="hideTip(event, 'fs17', 428)" onmouseover="showTip(event, 'fs17', 428)" class="t">list</span><span class="o">&gt;</span>()

<span onmouseout="hideTip(event, 'fs159', 429)" onmouseover="showTip(event, 'fs159', 429)" class="f">hasher2</span> [<span onmouseout="hideTip(event, 'fs156', 430)" onmouseover="showTip(event, 'fs156', 430)" class="p">UA</span> ; <span onmouseout="hideTip(event, 'fs158', 431)" onmouseover="showTip(event, 'fs158', 431)" class="p">UC</span> { <span onmouseout="hideTip(event, 'fs153', 432)" onmouseover="showTip(event, 'fs153', 432)" class="i">A</span> <span class="o">=</span> <span class="n">12</span> ; <span onmouseout="hideTip(event, 'fs154', 433)" onmouseover="showTip(event, 'fs154', 433)" class="i">B</span> <span class="o">=</span> <span class="s">&quot;test&quot;</span> }; <span onmouseout="hideTip(event, 'fs157', 434)" onmouseover="showTip(event, 'fs157', 434)" class="p">UB</span> <span class="s">&quot;string&quot;</span> ]

<span onmouseout="hideTip(event, 'fs148', 435)" onmouseover="showTip(event, 'fs148', 435)" class="f">decompileHasher</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs155', 436)" onmouseover="showTip(event, 'fs155', 436)" class="t">Bar</span><span class="o">&gt;</span>()
<span class="c">//fun t -&gt; </span>
<span class="c">//    let tag = t.Tag </span>
<span class="c">//    if tag = 0 then tag </span>
<span class="c">//    elif tag = 1 then </span>
<span class="c">//        let mutable agg = tag </span>
<span class="c">//        agg &lt;- let h1 = hash t._foo in (h1 &lt;&lt;&lt; 5) + h1 ||| agg</span>
<span class="c">//        agg </span>
<span class="c">//    elif tag = 2 then </span>
<span class="c">//        let mutable agg = tag </span>
<span class="c">//        agg &lt;- </span>
<span class="c">//            let h1 = </span>
<span class="c">//                let record = t.item </span>
<span class="c">//                let mutable agg = 0 </span>
<span class="c">//                agg &lt;- let h1 = record.A@ in (h1 &lt;&lt;&lt; 5) + h1 ||| agg</span>
<span class="c">//                agg &lt;- let h1 = record.B@.GetHashCode() in (h1 &lt;&lt;&lt; 5) + h1 ||| agg</span>
<span class="c">//                agg </span>
<span class="c">//            (h1 &lt;&lt;&lt; 5) + h1 ||| agg</span>
<span class="c">//        agg </span>
<span class="c">//    else invalidOp &quot;invalid tag&quot;</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs160', 437)" onmouseover="showTip(event, 'fs160', 437)" class="t">P</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs161', 438)" onmouseover="showTip(event, 'fs161', 438)" class="p">Z</span> | <span onmouseout="hideTip(event, 'fs162', 439)" onmouseover="showTip(event, 'fs162', 439)" class="p">S</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs160', 440)" onmouseover="showTip(event, 'fs160', 440)" class="t">P</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs163', 441)" onmouseover="showTip(event, 'fs163', 441)" class="f">hasher3</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs145', 442)" onmouseover="showTip(event, 'fs145', 442)" class="f">mkHasher</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs160', 443)" onmouseover="showTip(event, 'fs160', 443)" class="t">P</span><span class="o">&gt;</span>()

<span onmouseout="hideTip(event, 'fs163', 444)" onmouseover="showTip(event, 'fs163', 444)" class="f">hasher3</span> (<span onmouseout="hideTip(event, 'fs162', 445)" onmouseover="showTip(event, 'fs162', 445)" class="p">S</span> (<span onmouseout="hideTip(event, 'fs162', 446)" onmouseover="showTip(event, 'fs162', 446)" class="p">S</span> (<span onmouseout="hideTip(event, 'fs162', 447)" onmouseover="showTip(event, 'fs162', 447)" class="p">S</span> (<span onmouseout="hideTip(event, 'fs162', 448)" onmouseover="showTip(event, 'fs162', 448)" class="p">S</span> (<span onmouseout="hideTip(event, 'fs162', 449)" onmouseover="showTip(event, 'fs162', 449)" class="p">S</span> <span onmouseout="hideTip(event, 'fs161', 450)" onmouseover="showTip(event, 'fs161', 450)" class="p">Z</span>)))))

<span onmouseout="hideTip(event, 'fs148', 451)" onmouseover="showTip(event, 'fs148', 451)" class="f">decompileHasher</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs160', 452)" onmouseover="showTip(event, 'fs160', 452)" class="t">P</span><span class="o">&gt;</span> ()
<span class="c">//fun t -&gt; </span>
<span class="c">//    let rec func t = </span>
<span class="c">//        let tag = t.Tag </span>
<span class="c">//        if tag = 0 then tag </span>
<span class="c">//        elif tag = 1 then </span>
<span class="c">//            let mutable agg = tag </span>
<span class="c">//            agg &lt;- let h1 = func t.item in (h1 &lt;&lt;&lt; 5) + h1 ||| agg</span>
<span class="c">//            agg </span>
<span class="c">//        else invalidOp &quot;invalid tag&quot;</span>
<span class="c">//</span>
<span class="c">//    func t</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />namespace FSharp<br /><br />--------------------<br />namespace Microsoft.FSharp</div>
<div class="tip" id="fs2">Multiple items<br />namespace FSharp.Quotations<br /><br />--------------------<br />namespace Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs3">namespace FSharp.Quotations.Evaluator</div>
<div class="tip" id="fs4">namespace Swensen</div>
<div class="tip" id="fs5">namespace Swensen.Unquote</div>
<div class="tip" id="fs6">module TypeShape</div>
<div class="tip" id="fs7">module TypeShape_StagingExtensions</div>
<div class="tip" id="fs8">type StagedHashCodeGenerator =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member Generate : Expr&lt;&#39;T&gt; -&gt; Expr&lt;int&gt;<br />&#160;&#160;end<br /><br />Full name: Script.StagedHashCodeGenerator</div>
<div class="tip" id="fs9">abstract member StagedHashCodeGenerator.Generate : Expr&lt;&#39;T&gt; -&gt; Expr&lt;int&gt;<br /><br />Full name: Script.StagedHashCodeGenerator.Generate</div>
<div class="tip" id="fs10">Multiple items<br />module Expr<br /><br />from TypeShape_StagingExtensions<br /><br />--------------------<br />type Expr =<br />&#160;&#160;override Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetFreeVars : unit -&gt; seq&lt;Var&gt;<br />&#160;&#160;member Substitute : substitution:(Var -&gt; Expr option) -&gt; Expr<br />&#160;&#160;member ToString : full:bool -&gt; string<br />&#160;&#160;member CustomAttributes : Expr list<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member AddressOf : target:Expr -&gt; Expr<br />&#160;&#160;static member AddressSet : target:Expr * value:Expr -&gt; Expr<br />&#160;&#160;static member Application : functionExpr:Expr * argument:Expr -&gt; Expr<br />&#160;&#160;static member Applications : functionExpr:Expr * arguments:Expr list list -&gt; Expr<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Quotations.Expr<br /><br />--------------------<br />type Expr&lt;&#39;T&gt; =<br />&#160;&#160;inherit Expr<br />&#160;&#160;member Raw : Expr<br /><br />Full name: Microsoft.FSharp.Quotations.Expr&lt;_&gt;</div>
<div class="tip" id="fs11">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs12">val Y : F:(StagedHashCodeGenerator -&gt; StagedHashCodeGenerator) -&gt; StagedHashCodeGenerator<br /><br />Full name: Script.Y</div>
<div class="tip" id="fs13">val F : (StagedHashCodeGenerator -&gt; StagedHashCodeGenerator)</div>
<div class="tip" id="fs14">val aux : (Var list -&gt; Expr&lt;&#39;a&gt; -&gt; Expr&lt;int&gt;)</div>
<div class="tip" id="fs15">val stack : Var list</div>
<div class="tip" id="fs16">Multiple items<br />type Var =<br />&#160;&#160;interface IComparable<br />&#160;&#160;new : name:string * typ:Type * ?isMutable:bool -&gt; Var<br />&#160;&#160;member IsMutable : bool<br />&#160;&#160;member Name : string<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member Global : name:string * typ:Type -&gt; Var<br /><br />Full name: Microsoft.FSharp.Quotations.Var<br /><br />--------------------<br />new : name:string * typ:System.Type * ?isMutable:bool -&gt; Var</div>
<div class="tip" id="fs17">type &#39;T list = List&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;</div>
<div class="tip" id="fs18">val e : Expr&lt;&#39;a&gt;</div>
<div class="tip" id="fs19">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;member Head : &#39;T<br />&#160;&#160;member IsEmpty : bool<br />&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;member Length : int<br />&#160;&#160;member Tail : &#39;T list<br />&#160;&#160;static member Cons : head:&#39;T * tail:&#39;T list -&gt; &#39;T list<br />&#160;&#160;static member Empty : &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List&lt;_&gt;</div>
<div class="tip" id="fs20">val tryFind : predicate:(&#39;T -&gt; bool) -&gt; list:&#39;T list -&gt; &#39;T option<br /><br />Full name: Microsoft.FSharp.Collections.List.tryFind</div>
<div class="tip" id="fs21">val v : Var</div>
<div class="tip" id="fs22">property Var.Type: System.Type</div>
<div class="tip" id="fs23">val typeof&lt;&#39;T&gt; : System.Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs24">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs25">val selfVar : Var</div>
<div class="tip" id="fs26">val tVar : Var</div>
<div class="tip" id="fs27">val nestedGen : StagedHashCodeGenerator</div>
<div class="tip" id="fs28">val mkRecursiveGen : (Var list -&gt; StagedHashCodeGenerator)</div>
<div class="tip" id="fs29">val body : Expr&lt;int&gt;</div>
<div class="tip" id="fs30">abstract member StagedHashCodeGenerator.Generate : Expr&lt;&#39;T&gt; -&gt; Expr&lt;int&gt;</div>
<div class="tip" id="fs31">static member Expr.Cast : source:Expr -&gt; Expr&lt;&#39;T&gt;</div>
<div class="tip" id="fs32">static member Expr.Var : variable:Var -&gt; Expr</div>
<div class="tip" id="fs33">member Expr.GetFreeVars : unit -&gt; seq&lt;Var&gt;</div>
<div class="tip" id="fs34">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs35">val exists : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.Seq.exists</div>
<div class="tip" id="fs36">val lambda : Expr</div>
<div class="tip" id="fs37">static member Expr.Lambda : parameter:Var * body:Expr -&gt; Expr</div>
<div class="tip" id="fs38">val recExpr : Expr&lt;(&#39;a -&gt; int)&gt;</div>
<div class="tip" id="fs39">static member Expr.LetRecursive : bindings:(Var * Expr) list * body:Expr -&gt; Expr</div>
<div class="tip" id="fs40">member Expr.Substitute : substitution:(Var -&gt; Expr option) -&gt; Expr</div>
<div class="tip" id="fs41">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs42">val self : Var</div>
<div class="tip" id="fs43">val selfExpr : Expr&lt;(&#39;a -&gt; int)&gt;</div>
<div class="tip" id="fs44">val e : Expr&lt;&#39;b&gt;</div>
<div class="tip" id="fs45">val mkStagedHasher : unit -&gt; StagedHashCodeGenerator<br /><br />Full name: Script.mkStagedHasher</div>
<div class="tip" id="fs46">val self : StagedHashCodeGenerator</div>
<div class="tip" id="fs47">val expr : Expr&lt;&#39;a&gt;</div>
<div class="tip" id="fs48">val private mkStagedHasherAux : self:StagedHashCodeGenerator -&gt; expr:Expr&lt;&#39;T&gt; -&gt; Expr&lt;int&gt;<br /><br />Full name: Script.mkStagedHasherAux</div>
<div class="tip" id="fs49">val expr : Expr&lt;&#39;T&gt;</div>
<div class="tip" id="fs50">val unwrap : (unit -&gt; Expr&lt;&#39;a&gt;)</div>
<div class="tip" id="fs51">val unbox : value:obj -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.unbox</div>
<div class="tip" id="fs52">val genHash : (unit -&gt; Expr&lt;(&#39;a -&gt; int)&gt;)</div>
<div class="tip" id="fs53">val lam : f:(Expr&lt;&#39;T&gt; -&gt; Expr&lt;&#39;S&gt;) -&gt; Expr&lt;(&#39;T -&gt; &#39;S)&gt;<br /><br />Full name: TypeShape_StagingExtensions.Expr.lam</div>
<div class="tip" id="fs54">val combineHash : (Expr&lt;int&gt; -&gt; Expr&lt;int&gt; -&gt; Expr&lt;int&gt;)</div>
<div class="tip" id="fs55">val h1 : Expr&lt;int&gt;</div>
<div class="tip" id="fs56">val h2 : Expr&lt;int&gt;</div>
<div class="tip" id="fs57">val h1 : int</div>
<div class="tip" id="fs58">val h2 : int</div>
<div class="tip" id="fs59">val stageMemberHash : (IShapeMember&lt;&#39;DeclaringType&gt; -&gt; Expr&lt;&#39;DeclaringType&gt; -&gt; Expr&lt;int&gt;)</div>
<div class="tip" id="fs60">val shape : IShapeMember&lt;&#39;DeclaringType&gt;</div>
<div class="tip" id="fs61">Multiple items<br />type IShapeMember =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member IsPublic : bool<br />&#160;&#160;&#160;&#160;abstract member IsStructMember : bool<br />&#160;&#160;&#160;&#160;abstract member Label : string<br />&#160;&#160;&#160;&#160;abstract member Member : TypeShape<br />&#160;&#160;&#160;&#160;abstract member MemberInfo : MemberInfo<br />&#160;&#160;end<br /><br />Full name: TypeShape.IShapeMember<br /><br />--------------------<br />type IShapeMember&lt;&#39;DeclaringType&gt; =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;inherit IShapeMember<br />&#160;&#160;&#160;&#160;abstract member Accept : IMemberVisitor&lt;&#39;DeclaringType,&#39;R&gt; -&gt; &#39;R<br />&#160;&#160;end<br /><br />Full name: TypeShape.IShapeMember&lt;_&gt;</div>
<div class="tip" id="fs62">val dExpr : Expr&lt;&#39;DeclaringType&gt;</div>
<div class="tip" id="fs63">abstract member IShapeMember.Accept : IMemberVisitor&lt;&#39;DeclaringType,&#39;R&gt; -&gt; &#39;R</div>
<div class="tip" id="fs64">type IMemberVisitor&lt;&#39;DeclaringType,&#39;R&gt; =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member Visit : ShapeMember&lt;&#39;DeclaringType,&#39;MemberType&gt; -&gt; &#39;R<br />&#160;&#160;end<br /><br />Full name: TypeShape.IMemberVisitor&lt;_,_&gt;</div>
<div class="tip" id="fs65">val shape : ShapeMember&lt;&#39;DeclaringType,&#39;a&gt;</div>
<div class="tip" id="fs66">type ShapeMember&lt;&#39;DeclaringType,&#39;MemberType&gt; =<br />&#160;&#160;interface IShapeMember&lt;&#39;DeclaringType&gt;<br />&#160;&#160;private new : label:string * memberInfo:MemberInfo * path:MemberInfo [] -&gt; ShapeMember&lt;&#39;DeclaringType,&#39;MemberType&gt;<br />&#160;&#160;member Project : instance:&#39;DeclaringType -&gt; &#39;MemberType<br />&#160;&#160;member ProjectExpr : instance:Expr&lt;&#39;DeclaringType&gt; -&gt; Expr&lt;&#39;MemberType&gt;<br />&#160;&#160;member IsPublic : bool<br />&#160;&#160;member IsStructMember : bool<br />&#160;&#160;member Label : string<br />&#160;&#160;member MemberInfo : MemberInfo<br /><br />Full name: TypeShape.ShapeMember&lt;_,_&gt;</div>
<div class="tip" id="fs67">val fExpr : Expr&lt;&#39;a&gt;</div>
<div class="tip" id="fs68">member ShapeMember.ProjectExpr : instance:Expr&lt;&#39;DeclaringType&gt; -&gt; Expr&lt;&#39;MemberType&gt;</div>
<div class="tip" id="fs69">val shapeof&lt;&#39;T&gt; : TypeShape<br /><br />Full name: TypeShape.shapeof</div>
<div class="tip" id="fs70">module Shape<br /><br />from TypeShape</div>
<div class="tip" id="fs71">active recognizer Unit: TypeShape -&gt; unit option<br /><br />Full name: TypeShape.Shape.( |Unit|_| )</div>
<div class="tip" id="fs72">active recognizer Bool: TypeShape -&gt; unit option<br /><br />Full name: TypeShape.Shape.( |Bool|_| )</div>
<div class="tip" id="fs73">active recognizer Int32: TypeShape -&gt; unit option<br /><br />Full name: TypeShape.Shape.( |Int32|_| )</div>
<div class="tip" id="fs74">active recognizer Double: TypeShape -&gt; unit option<br /><br />Full name: TypeShape.Shape.( |Double|_| )</div>
<div class="tip" id="fs75">val hash : obj:&#39;T -&gt; int (requires equality)<br /><br />Full name: Microsoft.FSharp.Core.Operators.hash</div>
<div class="tip" id="fs76">Multiple items<br />val double : value:&#39;T -&gt; double (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.double<br /><br />--------------------<br />type double = System.Double<br /><br />Full name: Microsoft.FSharp.Core.double</div>
<div class="tip" id="fs77">active recognizer String: TypeShape -&gt; unit option<br /><br />Full name: TypeShape.Shape.( |String|_| )</div>
<div class="tip" id="fs78">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs79">active recognizer Array: TypeShape -&gt; IShapeArray option<br /><br />Full name: TypeShape.Shape.( |Array|_| )</div>
<div class="tip" id="fs80">val s : IShapeArray</div>
<div class="tip" id="fs81">property IShapeArray.Rank: int</div>
<div class="tip" id="fs82">abstract member IShapeArray.Accept : IArrayVisitor&lt;&#39;R&gt; -&gt; &#39;R</div>
<div class="tip" id="fs83">type IArrayVisitor&lt;&#39;R&gt; =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member Visit : rank:int -&gt; &#39;R<br />&#160;&#160;end<br /><br />Full name: TypeShape.IArrayVisitor&lt;_&gt;</div>
<div class="tip" id="fs84">val ts : &#39;t []</div>
<div class="tip" id="fs85">val mutable agg : int</div>
<div class="tip" id="fs86">val t : &#39;t</div>
<div class="tip" id="fs87">val th : int</div>
<div class="tip" id="fs88">val lam2 : f:(Expr&lt;&#39;T1&gt; -&gt; Expr&lt;&#39;T2&gt; -&gt; Expr&lt;&#39;S&gt;) -&gt; Expr&lt;(&#39;T1 -&gt; &#39;T2 -&gt; &#39;S)&gt;<br /><br />Full name: TypeShape_StagingExtensions.Expr.lam2</div>
<div class="tip" id="fs89">active recognizer FSharpOption: TypeShape -&gt; IShapeFSharpOption option<br /><br />Full name: TypeShape.Shape.( |FSharpOption|_| )</div>
<div class="tip" id="fs90">val s : IShapeFSharpOption</div>
<div class="tip" id="fs91">abstract member IShapeFSharpOption.Accept : IFSharpOptionVisitor&lt;&#39;R&gt; -&gt; &#39;R</div>
<div class="tip" id="fs92">type IFSharpOptionVisitor&lt;&#39;R&gt; =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member Visit : unit -&gt; &#39;R<br />&#160;&#160;end<br /><br />Full name: TypeShape.IFSharpOptionVisitor&lt;_&gt;</div>
<div class="tip" id="fs93">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs94">active recognizer FSharpList: TypeShape -&gt; IShapeFSharpList option<br /><br />Full name: TypeShape.Shape.( |FSharpList|_| )</div>
<div class="tip" id="fs95">val s : IShapeFSharpList</div>
<div class="tip" id="fs96">abstract member IShapeFSharpList.Accept : IFSharpListVisitor&lt;&#39;R&gt; -&gt; &#39;R</div>
<div class="tip" id="fs97">type IFSharpListVisitor&lt;&#39;R&gt; =<br />&#160;&#160;interface<br />&#160;&#160;&#160;&#160;abstract member Visit : unit -&gt; &#39;R<br />&#160;&#160;end<br /><br />Full name: TypeShape.IFSharpListVisitor&lt;_&gt;</div>
<div class="tip" id="fs98">val mutable ts : &#39;t list</div>
<div class="tip" id="fs99">val not : value:bool -&gt; bool<br /><br />Full name: Microsoft.FSharp.Core.Operators.not</div>
<div class="tip" id="fs100">val isEmpty : list:&#39;T list -&gt; bool<br /><br />Full name: Microsoft.FSharp.Collections.List.isEmpty</div>
<div class="tip" id="fs101">val head : list:&#39;T list -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Collections.List.head</div>
<div class="tip" id="fs102">val tail : list:&#39;T list -&gt; &#39;T list<br /><br />Full name: Microsoft.FSharp.Collections.List.tail</div>
<div class="tip" id="fs103">active recognizer Tuple: TypeShape -&gt; IShapeTuple option<br /><br />Full name: TypeShape.Shape.( |Tuple|_| )</div>
<div class="tip" id="fs104">type ShapeTuple&lt;&#39;Tuple&gt; =<br />&#160;&#160;interface IShapeTuple<br />&#160;&#160;private new : unit -&gt; ShapeTuple&lt;&#39;Tuple&gt;<br />&#160;&#160;member CreateUninitialized : unit -&gt; &#39;Tuple<br />&#160;&#160;member CreateUninitializedExpr : unit -&gt; Expr&lt;&#39;Tuple&gt;<br />&#160;&#160;member Elements : IShapeWriteMember&lt;&#39;Tuple&gt; []<br />&#160;&#160;member IsStructTuple : bool<br /><br />Full name: TypeShape.ShapeTuple&lt;_&gt;</div>
<div class="tip" id="fs105">val shape : ShapeTuple&lt;&#39;T&gt;</div>
<div class="tip" id="fs106">val mkElementHasher : (Expr&lt;&#39;T&gt; -&gt; Expr&lt;int&gt;)</div>
<div class="tip" id="fs107">val tuple : Expr&lt;&#39;T&gt;</div>
<div class="tip" id="fs108">property ShapeTuple.Elements: IShapeWriteMember&lt;&#39;T&gt; []</div>
<div class="tip" id="fs109">Multiple items<br />union case TypeShapeInfo.Array: element: System.Type * rank: int -&gt; TypeShapeInfo<br /><br />--------------------<br />module Array<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs110">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []<br /><br />Full name: Microsoft.FSharp.Collections.Array.map</div>
<div class="tip" id="fs111">val e : IShapeWriteMember&lt;&#39;T&gt;</div>
<div class="tip" id="fs112">val eh : Expr&lt;int&gt;</div>
<div class="tip" id="fs113">val agg : Expr&lt;int&gt;</div>
<div class="tip" id="fs114">val update : varName:string * init:Expr&lt;&#39;T&gt; -&gt; comps:(Expr&lt;&#39;T&gt; -&gt; Expr&lt;&#39;T&gt;) [] -&gt; Expr&lt;&#39;T&gt;<br /><br />Full name: TypeShape_StagingExtensions.Expr.update</div>
<div class="tip" id="fs115">val tuple : &#39;T</div>
<div class="tip" id="fs116">active recognizer FSharpRecord: TypeShape -&gt; IShapeFSharpRecord option<br /><br />Full name: TypeShape.Shape.( |FSharpRecord|_| )</div>
<div class="tip" id="fs117">type ShapeFSharpRecord&lt;&#39;Record&gt; =<br />&#160;&#160;interface IShapeFSharpRecord<br />&#160;&#160;private new : unit -&gt; ShapeFSharpRecord&lt;&#39;Record&gt;<br />&#160;&#160;member CreateUninitialized : unit -&gt; &#39;Record<br />&#160;&#160;member CreateUninitializedExpr : unit -&gt; Expr&lt;&#39;Record&gt;<br />&#160;&#160;member Fields : IShapeWriteMember&lt;&#39;Record&gt; []<br />&#160;&#160;member IsStructRecord : bool<br /><br />Full name: TypeShape.ShapeFSharpRecord&lt;_&gt;</div>
<div class="tip" id="fs118">val shape : ShapeFSharpRecord&lt;&#39;T&gt;</div>
<div class="tip" id="fs119">val mkFieldHasher : (Expr&lt;&#39;T&gt; -&gt; Expr&lt;int&gt;)</div>
<div class="tip" id="fs120">val record : Expr&lt;&#39;T&gt;</div>
<div class="tip" id="fs121">property ShapeFSharpRecord.Fields: IShapeWriteMember&lt;&#39;T&gt; []</div>
<div class="tip" id="fs122">val record : &#39;T</div>
<div class="tip" id="fs123">active recognizer FSharpUnion: TypeShape -&gt; IShapeFSharpUnion option<br /><br />Full name: TypeShape.Shape.( |FSharpUnion|_| )</div>
<div class="tip" id="fs124">type ShapeFSharpUnion&lt;&#39;U&gt; =<br />&#160;&#160;interface IShapeFSharpUnion<br />&#160;&#160;private new : unit -&gt; ShapeFSharpUnion&lt;&#39;U&gt;<br />&#160;&#160;member GetTag : caseName:string -&gt; int<br />&#160;&#160;member GetTag : union:&#39;U -&gt; int<br />&#160;&#160;member GetTagExpr : union:Expr&lt;&#39;U&gt; -&gt; Expr&lt;int&gt;<br />&#160;&#160;member IsStructUnion : bool<br />&#160;&#160;member UnionCases : ShapeFSharpUnionCase&lt;&#39;U&gt; []<br /><br />Full name: TypeShape.ShapeFSharpUnion&lt;_&gt;</div>
<div class="tip" id="fs125">val shape : ShapeFSharpUnion&lt;&#39;T&gt;</div>
<div class="tip" id="fs126">val stageUnionCaseHasher : (Expr&lt;&#39;T&gt; -&gt; Expr&lt;int&gt; -&gt; ShapeFSharpUnionCase&lt;&#39;T&gt; -&gt; Expr&lt;int&gt;)</div>
<div class="tip" id="fs127">val union : Expr&lt;&#39;T&gt;</div>
<div class="tip" id="fs128">val tag : Expr&lt;int&gt;</div>
<div class="tip" id="fs129">val case : ShapeFSharpUnionCase&lt;&#39;T&gt;</div>
<div class="tip" id="fs130">type ShapeFSharpUnionCase&lt;&#39;Union&gt; =<br />&#160;&#160;interface IShapeFSharpUnionCase<br />&#160;&#160;private new : uci:UnionCaseInfo -&gt; ShapeFSharpUnionCase&lt;&#39;Union&gt;<br />&#160;&#160;member CreateUninitialized : unit -&gt; &#39;Union<br />&#160;&#160;member CreateUninitializedExpr : unit -&gt; Expr&lt;&#39;Union&gt;<br />&#160;&#160;member CaseInfo : UnionCaseInfo<br />&#160;&#160;member Fields : IShapeWriteMember&lt;&#39;Union&gt; []<br /><br />Full name: TypeShape.ShapeFSharpUnionCase&lt;_&gt;</div>
<div class="tip" id="fs131">property ShapeFSharpUnionCase.Fields: IShapeWriteMember&lt;&#39;T&gt; []</div>
<div class="tip" id="fs132">val c : IShapeWriteMember&lt;&#39;T&gt;</div>
<div class="tip" id="fs133">val fh : Expr&lt;int&gt;</div>
<div class="tip" id="fs134">val stageUnionCaseHashers : (Expr&lt;&#39;T&gt; -&gt; Expr&lt;int&gt; -&gt; Expr&lt;int&gt;)</div>
<div class="tip" id="fs135">val u : Expr&lt;&#39;T&gt;</div>
<div class="tip" id="fs136">property ShapeFSharpUnion.UnionCases: ShapeFSharpUnionCase&lt;&#39;T&gt; []</div>
<div class="tip" id="fs137">val switch : tag:Expr&lt;int&gt; -&gt; cases:Expr&lt;&#39;T&gt; [] -&gt; Expr&lt;&#39;T&gt;<br /><br />Full name: TypeShape_StagingExtensions.Expr.switch</div>
<div class="tip" id="fs138">val union : &#39;T</div>
<div class="tip" id="fs139">val tag : int</div>
<div class="tip" id="fs140">member ShapeFSharpUnion.GetTagExpr : union:Expr&lt;&#39;U&gt; -&gt; Expr&lt;int&gt;</div>
<div class="tip" id="fs141">val failwithf : format:Printf.StringFormat&lt;&#39;T,&#39;Result&gt; -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.ExtraTopLevelOperators.failwithf</div>
<div class="tip" id="fs142">val mkHashCodeExpr : unit -&gt; Expr&lt;(&#39;T -&gt; int)&gt;<br /><br />Full name: Script.mkHashCodeExpr</div>
<div class="tip" id="fs143">val e : Expr&lt;&#39;T&gt;</div>
<div class="tip" id="fs144">val cleanup : expr:Expr&lt;&#39;T&gt; -&gt; Expr&lt;&#39;T&gt;<br /><br />Full name: TypeShape_StagingExtensions.Expr.cleanup</div>
<div class="tip" id="fs145">val mkHasher : unit -&gt; (&#39;T -&gt; int)<br /><br />Full name: Script.mkHasher</div>
<div class="tip" id="fs146">type QuotationEvaluator<br />static member CompileUntyped : Expr -&gt; obj<br />static member Evaluate : Expr&lt;&#39;T&gt; -&gt; &#39;T<br />static member EvaluateUntyped : Expr -&gt; obj<br />static member private EvaluateUntypedUsingQueryApproximations : Expr -&gt; obj<br />static member ToLinqExpression : Expr -&gt; Expression<br /><br />Full name: FSharp.Quotations.Evaluator.QuotationEvaluator</div>
<div class="tip" id="fs147">static member QuotationEvaluator.Evaluate : Expr&lt;&#39;T&gt; -&gt; &#39;T</div>
<div class="tip" id="fs148">val decompileHasher&lt;&#39;T&gt; : unit -&gt; string<br /><br />Full name: Script.decompileHasher</div>
<div class="tip" id="fs149">val decompile : expr:Expr -&gt; string<br /><br />Full name: Swensen.Unquote.Operators.decompile</div>
<div class="tip" id="fs150">val hasher1 : (int list * string option -&gt; int)<br /><br />Full name: Script.hasher1</div>
<div class="tip" id="fs151">type bool = System.Boolean<br /><br />Full name: Microsoft.FSharp.Core.bool</div>
<div class="tip" id="fs152">type Foo =<br />&#160;&#160;{A: int;<br />&#160;&#160;&#160;B: string;}<br /><br />Full name: Script.Foo</div>
<div class="tip" id="fs153">Foo.A: int</div>
<div class="tip" id="fs154">Foo.B: string</div>
<div class="tip" id="fs155">type Bar =<br />&#160;&#160;| UA<br />&#160;&#160;| UB of foo: string<br />&#160;&#160;| UC of Foo<br /><br />Full name: Script.Bar</div>
<div class="tip" id="fs156">union case Bar.UA: Bar</div>
<div class="tip" id="fs157">union case Bar.UB: foo: string -&gt; Bar</div>
<div class="tip" id="fs158">union case Bar.UC: Foo -&gt; Bar</div>
<div class="tip" id="fs159">val hasher2 : (Bar list -&gt; int)<br /><br />Full name: Script.hasher2</div>
<div class="tip" id="fs160">type P =<br />&#160;&#160;| Z<br />&#160;&#160;| S of P<br /><br />Full name: Script.P</div>
<div class="tip" id="fs161">union case P.Z: P</div>
<div class="tip" id="fs162">union case P.S: P -&gt; P</div>
<div class="tip" id="fs163">val hasher3 : (P -&gt; int)<br /><br />Full name: Script.hasher3</div>

