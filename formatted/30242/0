<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="i">Expressions</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="i">Quotations</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="i">Quotations</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="i">Patterns</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs4', 12)" onmouseover="showTip(event, 'fs4', 12)" class="i">Microsoft</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs5', 13)" onmouseover="showTip(event, 'fs5', 13)" class="i">FSharp</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="i">Linq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="i">RuntimeHelpers</span>

<span class="c">//references</span>
<span class="c">//http://www.fssnip.net/n1</span>
<span class="c">//http://www.fssnip.net/bx/title/Expanding-quotations</span>
<span class="c">//http://www.fssnip.net/ts/title/F-lambda-to-C-LINQ-Expression</span>

<span class="c">//I really hate using reflection, lets compile expressions</span>
<span class="c">//to read field, that&#39;s much better.</span>

<span class="k">let</span> (| <span class="i">QuotedProperty</span> |) ( <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="i">quoteExpr</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="t">Func</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">T</span>, <span class="o">&#39;</span><span class="i">R</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs12', 18)" onmouseover="showTip(event, 'fs12', 18)" class="t">Expr</span> ) <span class="o">=</span>
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs10', 19)" onmouseover="showTip(event, 'fs10', 19)" class="i">quoteExpr</span> <span class="k">with</span>
    | <span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="p">NewDelegate</span> ( <span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="i">dtype</span>, <span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="i">args</span>, <span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="p">PropertyGet</span> ( <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="i">expr</span>, <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="i">pi</span>, <span onmouseout="hideTip(event, 'fs19', 26)" onmouseover="showTip(event, 'fs19', 26)" class="i">body</span> ) ) <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs18', 27)" onmouseover="showTip(event, 'fs18', 27)" class="i">pi</span>
    | _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 28)" onmouseover="showTip(event, 'fs20', 28)" class="f">failwith</span> <span class="s">&quot;invalid expression&quot;</span>

<span class="c">//Create a quoted expression from a type and a property info.</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 29)" onmouseover="showTip(event, 'fs21', 29)" class="f">quotedProperty</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">I</span>, <span class="o">&#39;</span><span class="i">O</span><span class="o">&gt;</span> <span onmouseout="hideTip(event, 'fs22', 30)" onmouseover="showTip(event, 'fs22', 30)" class="i">propertyName</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 31)" onmouseover="showTip(event, 'fs23', 31)" class="i">objectType</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 32)" onmouseover="showTip(event, 'fs24', 32)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">I</span><span class="o">&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 33)" onmouseover="showTip(event, 'fs25', 33)" class="i">propertyType</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 34)" onmouseover="showTip(event, 'fs24', 34)" class="i">typeof</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">O</span><span class="o">&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 35)" onmouseover="showTip(event, 'fs18', 35)" class="i">pi</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 36)" onmouseover="showTip(event, 'fs23', 36)" class="i">objectType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 37)" onmouseover="showTip(event, 'fs26', 37)" class="f">GetProperty</span> <span onmouseout="hideTip(event, 'fs22', 38)" onmouseover="showTip(event, 'fs22', 38)" class="i">propertyName</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 39)" onmouseover="showTip(event, 'fs27', 39)" class="i">var</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs28', 40)" onmouseover="showTip(event, 'fs28', 40)" class="t">Var</span> ( <span onmouseout="hideTip(event, 'fs23', 41)" onmouseover="showTip(event, 'fs23', 41)" class="i">objectType</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs29', 42)" onmouseover="showTip(event, 'fs29', 42)" class="i">Name</span>, <span onmouseout="hideTip(event, 'fs23', 43)" onmouseover="showTip(event, 'fs23', 43)" class="i">objectType</span> )
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 44)" onmouseover="showTip(event, 'fs30', 44)" class="i">p</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 45)" onmouseover="showTip(event, 'fs12', 45)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs31', 46)" onmouseover="showTip(event, 'fs31', 46)" class="f">PropertyGet</span> ( <span onmouseout="hideTip(event, 'fs12', 47)" onmouseover="showTip(event, 'fs12', 47)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs32', 48)" onmouseover="showTip(event, 'fs32', 48)" class="f">Var</span> <span onmouseout="hideTip(event, 'fs27', 49)" onmouseover="showTip(event, 'fs27', 49)" class="i">var</span>, <span onmouseout="hideTip(event, 'fs18', 50)" onmouseover="showTip(event, 'fs18', 50)" class="i">pi</span> )
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 51)" onmouseover="showTip(event, 'fs33', 51)" class="i">l</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 52)" onmouseover="showTip(event, 'fs12', 52)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs34', 53)" onmouseover="showTip(event, 'fs34', 53)" class="f">Lambda</span> ( <span onmouseout="hideTip(event, 'fs27', 54)" onmouseover="showTip(event, 'fs27', 54)" class="i">var</span>, <span onmouseout="hideTip(event, 'fs30', 55)" onmouseover="showTip(event, 'fs30', 55)" class="i">p</span> )
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 56)" onmouseover="showTip(event, 'fs35', 56)" class="i">castExpr</span> <span class="o">:</span> (<span class="o">&#39;</span><span class="i">I</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">O</span>) <span onmouseout="hideTip(event, 'fs12', 57)" onmouseover="showTip(event, 'fs12', 57)" class="t">Expr</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 58)" onmouseover="showTip(event, 'fs33', 58)" class="i">l</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs12', 59)" onmouseover="showTip(event, 'fs12', 59)" class="t">Expr</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs36', 60)" onmouseover="showTip(event, 'fs36', 60)" class="f">Cast</span>
    <span onmouseout="hideTip(event, 'fs35', 61)" onmouseover="showTip(event, 'fs35', 61)" class="i">castExpr</span>
    
<span class="c">//Convert some quoted expression into a linq expression.</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 62)" onmouseover="showTip(event, 'fs37', 62)" class="f">toLinq</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">I</span>,<span class="o">&#39;</span><span class="i">O</span><span class="o">&gt;</span> ( <span onmouseout="hideTip(event, 'fs38', 63)" onmouseover="showTip(event, 'fs38', 63)" class="i">expr</span> <span class="o">:</span> (<span class="o">&#39;</span><span class="i">I</span> <span class="k">-&gt;</span> <span class="o">&#39;</span><span class="i">O</span>) <span onmouseout="hideTip(event, 'fs12', 64)" onmouseover="showTip(event, 'fs12', 64)" class="t">Expr</span> ) <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 65)" onmouseover="showTip(event, 'fs39', 65)" class="i">linq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs40', 66)" onmouseover="showTip(event, 'fs40', 66)" class="t">LeafExpressionConverter</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs41', 67)" onmouseover="showTip(event, 'fs41', 67)" class="f">QuotationToExpression</span> <span onmouseout="hideTip(event, 'fs38', 68)" onmouseover="showTip(event, 'fs38', 68)" class="i">expr</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 69)" onmouseover="showTip(event, 'fs42', 69)" class="i">call</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs39', 70)" onmouseover="showTip(event, 'fs39', 70)" class="i">linq</span> <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs43', 71)" onmouseover="showTip(event, 'fs43', 71)" class="t">MethodCallExpression</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 72)" onmouseover="showTip(event, 'fs44', 72)" class="i">lambda</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs42', 73)" onmouseover="showTip(event, 'fs42', 73)" class="i">call</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs45', 74)" onmouseover="showTip(event, 'fs45', 74)" class="i">Arguments</span><span class="o">.</span>[<span class="n">0</span>] <span class="o">:?&gt;</span> <span onmouseout="hideTip(event, 'fs46', 75)" onmouseover="showTip(event, 'fs46', 75)" class="t">LambdaExpression</span>
    <span onmouseout="hideTip(event, 'fs47', 76)" onmouseover="showTip(event, 'fs47', 76)" class="t">Expression</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs48', 77)" onmouseover="showTip(event, 'fs48', 77)" class="f">Lambda</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs11', 78)" onmouseover="showTip(event, 'fs11', 78)" class="t">Func</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">I</span>,<span class="o">&#39;</span><span class="i">O</span><span class="o">&gt;</span><span class="o">&gt;</span> ( <span onmouseout="hideTip(event, 'fs44', 79)" onmouseover="showTip(event, 'fs44', 79)" class="i">lambda</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs49', 80)" onmouseover="showTip(event, 'fs49', 80)" class="i">Body</span>, <span onmouseout="hideTip(event, 'fs44', 81)" onmouseover="showTip(event, 'fs44', 81)" class="i">lambda</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs50', 82)" onmouseover="showTip(event, 'fs50', 82)" class="i">Parameters</span> )
    
<span class="c">//Compile and execute a linq expression.</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 83)" onmouseover="showTip(event, 'fs51', 83)" class="f">runExpr</span> <span onmouseout="hideTip(event, 'fs52', 84)" onmouseover="showTip(event, 'fs52', 84)" class="i">expr</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs53', 85)" onmouseover="showTip(event, 'fs53', 85)" class="i">lq</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs52', 86)" onmouseover="showTip(event, 'fs52', 86)" class="i">expr</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs37', 87)" onmouseover="showTip(event, 'fs37', 87)" class="f">toLinq</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 88)" onmouseover="showTip(event, 'fs54', 88)" class="i">f</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 89)" onmouseover="showTip(event, 'fs53', 89)" class="i">lq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs55', 90)" onmouseover="showTip(event, 'fs55', 90)" class="f">Compile</span>()
    <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs56', 91)" onmouseover="showTip(event, 'fs56', 91)" class="i">i</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs54', 92)" onmouseover="showTip(event, 'fs54', 92)" class="i">f</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs57', 93)" onmouseover="showTip(event, 'fs57', 93)" class="f">Invoke</span> <span onmouseout="hideTip(event, 'fs56', 94)" onmouseover="showTip(event, 'fs56', 94)" class="i">i</span>

<span class="c">//Some testing</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs58', 95)" onmouseover="showTip(event, 'fs58', 95)" class="t">X</span> <span class="o">=</span> { <span onmouseout="hideTip(event, 'fs59', 96)" onmouseover="showTip(event, 'fs59', 96)" class="i">a</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs60', 97)" onmouseover="showTip(event, 'fs60', 97)" class="t">int</span>; <span onmouseout="hideTip(event, 'fs61', 98)" onmouseover="showTip(event, 'fs61', 98)" class="i">b</span> <span class="o">:</span> <span onmouseout="hideTip(event, 'fs62', 99)" onmouseover="showTip(event, 'fs62', 99)" class="t">float</span> }

[&lt;<span onmouseout="hideTip(event, 'fs63', 100)" onmouseover="showTip(event, 'fs63', 100)" class="t">EntryPoint</span>&gt;]
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs64', 101)" onmouseover="showTip(event, 'fs64', 101)" class="f">main</span> <span onmouseout="hideTip(event, 'fs65', 102)" onmouseover="showTip(event, 'fs65', 102)" class="i">argv</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs66', 103)" onmouseover="showTip(event, 'fs66', 103)" class="i">propA</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 104)" onmouseover="showTip(event, 'fs21', 104)" class="f">quotedProperty</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs58', 105)" onmouseover="showTip(event, 'fs58', 105)" class="t">X</span>, <span onmouseout="hideTip(event, 'fs60', 106)" onmouseover="showTip(event, 'fs60', 106)" class="t">int</span><span class="o">&gt;</span> <span class="s">&quot;a&quot;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs67', 107)" onmouseover="showTip(event, 'fs67', 107)" class="i">propB</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 108)" onmouseover="showTip(event, 'fs21', 108)" class="f">quotedProperty</span><span class="o">&lt;</span><span onmouseout="hideTip(event, 'fs58', 109)" onmouseover="showTip(event, 'fs58', 109)" class="t">X</span>, <span onmouseout="hideTip(event, 'fs62', 110)" onmouseover="showTip(event, 'fs62', 110)" class="t">float</span><span class="o">&gt;</span> <span class="s">&quot;b&quot;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs68', 111)" onmouseover="showTip(event, 'fs68', 111)" class="f">getA</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs66', 112)" onmouseover="showTip(event, 'fs66', 112)" class="i">propA</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs51', 113)" onmouseover="showTip(event, 'fs51', 113)" class="f">runExpr</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs69', 114)" onmouseover="showTip(event, 'fs69', 114)" class="f">getB</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs67', 115)" onmouseover="showTip(event, 'fs67', 115)" class="i">propB</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs51', 116)" onmouseover="showTip(event, 'fs51', 116)" class="f">runExpr</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs70', 117)" onmouseover="showTip(event, 'fs70', 117)" class="i">obj</span> <span class="o">=</span> { <span onmouseout="hideTip(event, 'fs58', 118)" onmouseover="showTip(event, 'fs58', 118)" class="t">X</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs59', 119)" onmouseover="showTip(event, 'fs59', 119)" class="i">a</span> <span class="o">=</span> <span class="n">2</span>; <span onmouseout="hideTip(event, 'fs61', 120)" onmouseover="showTip(event, 'fs61', 120)" class="i">b</span> <span class="o">=</span> <span class="n">0.666</span> }

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs71', 121)" onmouseover="showTip(event, 'fs71', 121)" class="i">a</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs68', 122)" onmouseover="showTip(event, 'fs68', 122)" class="f">getA</span> <span onmouseout="hideTip(event, 'fs70', 123)" onmouseover="showTip(event, 'fs70', 123)" class="i">obj</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs72', 124)" onmouseover="showTip(event, 'fs72', 124)" class="i">b</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs69', 125)" onmouseover="showTip(event, 'fs69', 125)" class="f">getB</span> <span onmouseout="hideTip(event, 'fs70', 126)" onmouseover="showTip(event, 'fs70', 126)" class="i">obj</span> 

    <span class="n">0</span> <span class="c">// return an integer exit code</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Linq</div>
<div class="tip" id="fs3">namespace System.Linq.Expressions</div>
<div class="tip" id="fs4">namespace Microsoft</div>
<div class="tip" id="fs5">namespace Microsoft.FSharp</div>
<div class="tip" id="fs6">namespace Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs7">module Patterns<br /><br />from Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs8">namespace Microsoft.FSharp.Linq</div>
<div class="tip" id="fs9">namespace Microsoft.FSharp.Linq.RuntimeHelpers</div>
<div class="tip" id="fs10">val quoteExpr : Expr&lt;Func&lt;&#39;T,&#39;R&gt;&gt;</div>
<div class="tip" id="fs11">Multiple items<br />type Func&lt;&#39;TResult&gt; =<br />&#160;&#160;delegate of unit -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;<br /><br />--------------------<br />type Func&lt;&#39;T1,&#39;T2,&#39;T3,&#39;T4,&#39;T5,&#39;T6,&#39;T7,&#39;T8,&#39;T9,&#39;T10,&#39;T11,&#39;T12,&#39;T13,&#39;T14,&#39;T15,&#39;T16,&#39;TResult&gt; =<br />&#160;&#160;delegate of &#39;T1 * &#39;T2 * &#39;T3 * &#39;T4 * &#39;T5 * &#39;T6 * &#39;T7 * &#39;T8 * &#39;T9 * &#39;T10 * &#39;T11 * &#39;T12 * &#39;T13 * &#39;T14 * &#39;T15 * &#39;T16 -&gt; &#39;TResult<br /><br />Full name: System.Func&lt;_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_&gt;</div>
<div class="tip" id="fs12">Multiple items<br />type Expr =<br />&#160;&#160;override Equals : obj:obj -&gt; bool<br />&#160;&#160;member GetFreeVars : unit -&gt; seq&lt;Var&gt;<br />&#160;&#160;member Substitute : substitution:(Var -&gt; Expr option) -&gt; Expr<br />&#160;&#160;member ToString : full:bool -&gt; string<br />&#160;&#160;member CustomAttributes : Expr list<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member AddressOf : target:Expr -&gt; Expr<br />&#160;&#160;static member AddressSet : target:Expr * value:Expr -&gt; Expr<br />&#160;&#160;static member Application : functionExpr:Expr * argument:Expr -&gt; Expr<br />&#160;&#160;static member Applications : functionExpr:Expr * arguments:Expr list list -&gt; Expr<br />&#160;&#160;...<br /><br />Full name: Microsoft.FSharp.Quotations.Expr<br /><br />--------------------<br />type Expr&lt;&#39;T&gt; =<br />&#160;&#160;inherit Expr<br />&#160;&#160;member Raw : Expr<br /><br />Full name: Microsoft.FSharp.Quotations.Expr&lt;_&gt;</div>
<div class="tip" id="fs13">active recognizer NewDelegate: Expr -&gt; (Type * Var list * Expr) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |NewDelegate|_| )</div>
<div class="tip" id="fs14">val dtype : Type</div>
<div class="tip" id="fs15">val args : Var list</div>
<div class="tip" id="fs16">active recognizer PropertyGet: Expr -&gt; (Expr option * Reflection.PropertyInfo * Expr list) option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |PropertyGet|_| )</div>
<div class="tip" id="fs17">val expr : Expr option</div>
<div class="tip" id="fs18">val pi : Reflection.PropertyInfo</div>
<div class="tip" id="fs19">val body : Expr list</div>
<div class="tip" id="fs20">val failwith : message:string -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.failwith</div>
<div class="tip" id="fs21">val quotedProperty : propertyName:string -&gt; Expr&lt;(&#39;I -&gt; &#39;O)&gt;<br /><br />Full name: Script.quotedProperty</div>
<div class="tip" id="fs22">val propertyName : string</div>
<div class="tip" id="fs23">val objectType : Type</div>
<div class="tip" id="fs24">val typeof&lt;&#39;T&gt; : Type<br /><br />Full name: Microsoft.FSharp.Core.Operators.typeof</div>
<div class="tip" id="fs25">val propertyType : Type</div>
<div class="tip" id="fs26">Type.GetProperty(name: string) : Reflection.PropertyInfo<br />Type.GetProperty(name: string, returnType: Type) : Reflection.PropertyInfo<br />Type.GetProperty(name: string, types: Type []) : Reflection.PropertyInfo<br />Type.GetProperty(name: string, bindingAttr: Reflection.BindingFlags) : Reflection.PropertyInfo<br />Type.GetProperty(name: string, returnType: Type, types: Type []) : Reflection.PropertyInfo<br />Type.GetProperty(name: string, returnType: Type, types: Type [], modifiers: Reflection.ParameterModifier []) : Reflection.PropertyInfo<br />Type.GetProperty(name: string, bindingAttr: Reflection.BindingFlags, binder: Reflection.Binder, returnType: Type, types: Type [], modifiers: Reflection.ParameterModifier []) : Reflection.PropertyInfo</div>
<div class="tip" id="fs27">val var : Var</div>
<div class="tip" id="fs28">Multiple items<br />active recognizer Var: Expr -&gt; Var option<br /><br />Full name: Microsoft.FSharp.Quotations.Patterns.( |Var|_| )<br /><br />--------------------<br />type Var =<br />&#160;&#160;interface IComparable<br />&#160;&#160;new : name:string * typ:Type * ?isMutable:bool -&gt; Var<br />&#160;&#160;member IsMutable : bool<br />&#160;&#160;member Name : string<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member Global : name:string * typ:Type -&gt; Var<br /><br />Full name: Microsoft.FSharp.Quotations.Var<br /><br />--------------------<br />new : name:string * typ:Type * ?isMutable:bool -&gt; Var</div>
<div class="tip" id="fs29">property Reflection.MemberInfo.Name: string</div>
<div class="tip" id="fs30">val p : Expr</div>
<div class="tip" id="fs31">static member Expr.PropertyGet : property:Reflection.PropertyInfo * ?indexerArgs:Expr list -&gt; Expr<br />static member Expr.PropertyGet : obj:Expr * property:Reflection.PropertyInfo * ?indexerArgs:Expr list -&gt; Expr</div>
<div class="tip" id="fs32">static member Expr.Var : variable:Var -&gt; Expr</div>
<div class="tip" id="fs33">val l : Expr</div>
<div class="tip" id="fs34">static member Expr.Lambda : parameter:Var * body:Expr -&gt; Expr</div>
<div class="tip" id="fs35">val castExpr : Expr&lt;(&#39;I -&gt; &#39;O)&gt;</div>
<div class="tip" id="fs36">static member Expr.Cast : source:Expr -&gt; Expr&lt;&#39;T&gt;</div>
<div class="tip" id="fs37">val toLinq : expr:Expr&lt;(&#39;I -&gt; &#39;O)&gt; -&gt; Expression&lt;Func&lt;&#39;I,&#39;O&gt;&gt;<br /><br />Full name: Script.toLinq</div>
<div class="tip" id="fs38">val expr : Expr&lt;(&#39;I -&gt; &#39;O)&gt;</div>
<div class="tip" id="fs39">val linq : Expression</div>
<div class="tip" id="fs40">module LeafExpressionConverter<br /><br />from Microsoft.FSharp.Linq.RuntimeHelpers</div>
<div class="tip" id="fs41">val QuotationToExpression : Expr -&gt; Expression<br /><br />Full name: Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.QuotationToExpression</div>
<div class="tip" id="fs42">val call : MethodCallExpression</div>
<div class="tip" id="fs43">type MethodCallExpression =<br />&#160;&#160;inherit Expression<br />&#160;&#160;member Arguments : ReadOnlyCollection&lt;Expression&gt;<br />&#160;&#160;member Method : MethodInfo<br />&#160;&#160;member NodeType : ExpressionType<br />&#160;&#160;member Object : Expression<br />&#160;&#160;member Type : Type<br />&#160;&#160;member Update : object:Expression * arguments:IEnumerable&lt;Expression&gt; -&gt; MethodCallExpression<br /><br />Full name: System.Linq.Expressions.MethodCallExpression</div>
<div class="tip" id="fs44">val lambda : LambdaExpression</div>
<div class="tip" id="fs45">property MethodCallExpression.Arguments: Collections.ObjectModel.ReadOnlyCollection&lt;Expression&gt;</div>
<div class="tip" id="fs46">type LambdaExpression =<br />&#160;&#160;inherit Expression<br />&#160;&#160;member Body : Expression<br />&#160;&#160;member Compile : unit -&gt; Delegate + 1 overload<br />&#160;&#160;member CompileToMethod : method:MethodBuilder -&gt; unit + 1 overload<br />&#160;&#160;member Name : string<br />&#160;&#160;member NodeType : ExpressionType<br />&#160;&#160;member Parameters : ReadOnlyCollection&lt;ParameterExpression&gt;<br />&#160;&#160;member ReturnType : Type<br />&#160;&#160;member TailCall : bool<br />&#160;&#160;member Type : Type<br /><br />Full name: System.Linq.Expressions.LambdaExpression</div>
<div class="tip" id="fs47">Multiple items<br />type Expression =<br />&#160;&#160;member CanReduce : bool<br />&#160;&#160;member NodeType : ExpressionType<br />&#160;&#160;member Reduce : unit -&gt; Expression<br />&#160;&#160;member ReduceAndCheck : unit -&gt; Expression<br />&#160;&#160;member ReduceExtensions : unit -&gt; Expression<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;member Type : Type<br />&#160;&#160;static member Add : left:Expression * right:Expression -&gt; BinaryExpression + 1 overload<br />&#160;&#160;static member AddAssign : left:Expression * right:Expression -&gt; BinaryExpression + 2 overloads<br />&#160;&#160;static member AddAssignChecked : left:Expression * right:Expression -&gt; BinaryExpression + 2 overloads<br />&#160;&#160;...<br /><br />Full name: System.Linq.Expressions.Expression<br /><br />--------------------<br />type Expression&lt;&#39;TDelegate&gt; =<br />&#160;&#160;inherit LambdaExpression<br />&#160;&#160;member Compile : unit -&gt; &#39;TDelegate + 1 overload<br />&#160;&#160;member Update : body:Expression * parameters:IEnumerable&lt;ParameterExpression&gt; -&gt; Expression&lt;&#39;TDelegate&gt;<br /><br />Full name: System.Linq.Expressions.Expression&lt;_&gt;</div>
<div class="tip" id="fs48">Expression.Lambda(body: Expression, parameters: Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(body: Expression, [&lt;ParamArray&gt;] parameters: ParameterExpression []) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda&lt;&#39;TDelegate&gt;(body: Expression, parameters: Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : Expression&lt;&#39;TDelegate&gt;<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda&lt;&#39;TDelegate&gt;(body: Expression, [&lt;ParamArray&gt;] parameters: ParameterExpression []) : Expression&lt;&#39;TDelegate&gt;<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(body: Expression, name: string, parameters: Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(delegateType: Type, body: Expression, parameters: Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(delegateType: Type, body: Expression, [&lt;ParamArray&gt;] parameters: ParameterExpression []) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(body: Expression, tailCall: bool, parameters: Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda(body: Expression, tailCall: bool, [&lt;ParamArray&gt;] parameters: ParameterExpression []) : LambdaExpression<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Expression.Lambda&lt;&#39;TDelegate&gt;(body: Expression, name: string, parameters: Collections.Generic.IEnumerable&lt;ParameterExpression&gt;) : Expression&lt;&#39;TDelegate&gt;<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs49">property LambdaExpression.Body: Expression</div>
<div class="tip" id="fs50">property LambdaExpression.Parameters: Collections.ObjectModel.ReadOnlyCollection&lt;ParameterExpression&gt;</div>
<div class="tip" id="fs51">val runExpr : expr:Expr&lt;(&#39;a -&gt; &#39;b)&gt; -&gt; (&#39;a -&gt; &#39;b)<br /><br />Full name: Script.runExpr</div>
<div class="tip" id="fs52">val expr : Expr&lt;(&#39;a -&gt; &#39;b)&gt;</div>
<div class="tip" id="fs53">val lq : Expression&lt;Func&lt;&#39;a,&#39;b&gt;&gt;</div>
<div class="tip" id="fs54">val f : Func&lt;&#39;a,&#39;b&gt;</div>
<div class="tip" id="fs55">Expression.Compile() : Func&lt;&#39;a,&#39;b&gt;<br />Expression.Compile(debugInfoGenerator: Runtime.CompilerServices.DebugInfoGenerator) : Func&lt;&#39;a,&#39;b&gt;</div>
<div class="tip" id="fs56">val i : &#39;a</div>
<div class="tip" id="fs57">Func.Invoke(arg: &#39;a) : &#39;b</div>
<div class="tip" id="fs58">type X =<br />&#160;&#160;{a: int;<br />&#160;&#160;&#160;b: float;}<br /><br />Full name: Script.X</div>
<div class="tip" id="fs59">X.a: int</div>
<div class="tip" id="fs60">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;</div>
<div class="tip" id="fs61">X.b: float</div>
<div class="tip" id="fs62">Multiple items<br />val float : value:&#39;T -&gt; float (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.float<br /><br />--------------------<br />type float = Double<br /><br />Full name: Microsoft.FSharp.Core.float<br /><br />--------------------<br />type float&lt;&#39;Measure&gt; = float<br /><br />Full name: Microsoft.FSharp.Core.float&lt;_&gt;</div>
<div class="tip" id="fs63">Multiple items<br />type EntryPointAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; EntryPointAttribute<br /><br />Full name: Microsoft.FSharp.Core.EntryPointAttribute<br /><br />--------------------<br />new : unit -&gt; EntryPointAttribute</div>
<div class="tip" id="fs64">val main : argv:string [] -&gt; int<br /><br />Full name: Script.main</div>
<div class="tip" id="fs65">val argv : string []</div>
<div class="tip" id="fs66">val propA : Expr&lt;(X -&gt; int)&gt;</div>
<div class="tip" id="fs67">val propB : Expr&lt;(X -&gt; float)&gt;</div>
<div class="tip" id="fs68">val getA : (X -&gt; int)</div>
<div class="tip" id="fs69">val getB : (X -&gt; float)</div>
<div class="tip" id="fs70">Multiple items<br />val obj : X<br /><br />--------------------<br />type obj = Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs71">val a : int</div>
<div class="tip" id="fs72">val b : float</div>

