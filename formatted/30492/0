<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">//For the following snippet to work it requires a ConverterBase which is provided in this snippet http://fssnip.net/62 from a different author.</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="t">DiscriminatedUnionTypeConverterGeneric</span><span class="o">&lt;</span><span class="o">&#39;</span><span class="i">a</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">defaultOnError</span> <span class="o">:</span> <span class="o">&#39;</span><span class="i">a</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="t">option</span>) <span class="o">=</span>
    <span class="k">inherit</span> <span class="i">ConverterBase</span>()
    <span class="k">let</span> <span class="i">convertFunc</span> <span class="o">=</span> <span class="k">fun</span> (<span class="i">v</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">obj</span>) _ _ _ <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="i">box</span> (<span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">string</span> <span class="i">v</span>)
    <span class="k">let</span> <span class="i">convertBackFunc</span> <span class="o">=</span> <span class="k">fun</span> (<span class="i">v</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="i">obj</span>) _ _ _ <span class="k">-&gt;</span>
        <span class="k">if</span> ((<span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="i">unbox</span> <span class="i">v</span>)<span class="o">.</span><span class="i">GetType</span>()<span class="o">.</span><span class="i">Name</span> <span class="o">=</span> <span class="s">&quot;String&quot;</span>) <span class="o">&amp;&amp;</span> <span class="i">defaultOnError</span><span class="o">.</span><span class="i">IsSome</span>
        <span class="k">then</span> <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="i">box</span> <span class="i">defaultOnError</span><span class="o">.</span><span class="i">Value</span>
        <span class="k">else</span> <span class="i">v</span>
    <span class="k">override</span> <span class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="i">Convert</span> <span class="o">=</span> <span class="i">convertFunc</span> 
    <span class="k">override</span> <span class="i">this</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="i">ConvertBack</span> <span class="o">=</span> <span class="i">convertBackFunc</span>


<span class="k">type</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="t">DiscriminatedUnionTypeConverter</span>() <span class="o">=</span>
    <span class="k">inherit</span> <span onmouseout="hideTip(event, 'fs1', 13)" onmouseover="showTip(event, 'fs1', 13)" class="t">DiscriminatedUnionTypeConverterGeneric</span><span class="o">&lt;</span><span class="i">ConverterBase</span><span class="o">&gt;</span>(<span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="i">None</span>)

<span class="c">//Usage:</span>
<span class="c">// Either use the DiscriminatedUnionTypeConverter, or create your own with a default option for when a wrong union case is provided to the converter like so:</span>

<span class="c">//type ExampleDiscriminatedUnionTypeConverter() =</span>
<span class="c">//    inherit DiscriminatedUnionTypeConverterGeneric&lt;ExampleDiscriminatedUnion&gt;(Some ExampleDiscriminatedUnion.CarCase)</span>

<span class="c">// In this case if a wrong union case is provided the convertBackFunc will provide the defaultOnError value.</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />type DiscriminatedUnionTypeConverterGeneric&lt;&#39;a&gt; =<br />&#160;&#160;inherit obj<br />&#160;&#160;new : defaultOnError:&#39;a option -&gt; DiscriminatedUnionTypeConverterGeneric&lt;&#39;a&gt;<br />&#160;&#160;override Convert : &#39;b<br />&#160;&#160;override ConvertBack : &#39;b<br /><br />Full name: Script.DiscriminatedUnionTypeConverterGeneric&lt;_&gt;<br /><br />--------------------<br />new : defaultOnError:&#39;a option -&gt; DiscriminatedUnionTypeConverterGeneric&lt;&#39;a&gt;</div>
<div class="tip" id="fs2">val defaultOnError : &#39;a option</div>
<div class="tip" id="fs3">type &#39;T option = Option&lt;&#39;T&gt;<br /><br />Full name: Microsoft.FSharp.Core.option&lt;_&gt;</div>
<div class="tip" id="fs4">type obj = System.Object<br /><br />Full name: Microsoft.FSharp.Core.obj</div>
<div class="tip" id="fs5">val box : value:&#39;T -&gt; obj<br /><br />Full name: Microsoft.FSharp.Core.Operators.box</div>
<div class="tip" id="fs6">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br />type string = System.String<br /><br />Full name: Microsoft.FSharp.Core.string</div>
<div class="tip" id="fs7">val unbox : value:obj -&gt; &#39;T<br /><br />Full name: Microsoft.FSharp.Core.Operators.unbox</div>
<div class="tip" id="fs8">override DiscriminatedUnionTypeConverterGeneric.Convert : &#39;b<br /><br />Full name: Script.DiscriminatedUnionTypeConverterGeneric`1.Convert</div>
<div class="tip" id="fs9">override DiscriminatedUnionTypeConverterGeneric.ConvertBack : &#39;b<br /><br />Full name: Script.DiscriminatedUnionTypeConverterGeneric`1.ConvertBack</div>
<div class="tip" id="fs10">Multiple items<br />type DiscriminatedUnionTypeConverter =<br />&#160;&#160;inherit obj<br />&#160;&#160;new : unit -&gt; DiscriminatedUnionTypeConverter<br /><br />Full name: Script.DiscriminatedUnionTypeConverter<br /><br />--------------------<br />new : unit -&gt; DiscriminatedUnionTypeConverter</div>
<div class="tip" id="fs11">union case Option.None: Option&lt;&#39;T&gt;</div>

