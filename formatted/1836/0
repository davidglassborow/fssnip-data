<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="prep">#if</span> <span class="i">INTERACTIVE</span>
<span class="inactive">#r</span><span class="inactive"> </span><span class="inactive">&quot;System.Drawing.dll&quot;</span>
<span class="prep">#endif</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="i">Drawing</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="f">drawTo</span> (<span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="i">image</span><span class="o">:</span><span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="t">Bitmap</span>) <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="i">n</span> (<span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="i">dx</span>,<span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="i">dy</span>) <span class="o">=</span>
   <span class="k">for</span> <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="i">y</span> <span class="o">=</span> <span class="n">0</span> <span class="k">to</span> <span class="n">4</span> <span class="k">do</span>
      <span class="k">for</span> <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="i">x</span> <span class="o">=</span> <span class="n">0</span> <span class="k">to</span> <span class="n">4</span> <span class="k">do</span>
         <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 11)" onmouseover="showTip(event, 'fs11', 11)" class="i">bit</span> <span class="o">=</span> [|<span class="n">0</span>;<span class="n">5</span>;<span class="n">10</span>;<span class="n">5</span>;<span class="n">0</span>|]<span class="o">.</span>[<span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="i">x</span>] <span class="o">+</span> <span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="i">y</span>
         <span class="k">if</span> <span onmouseout="hideTip(event, 'fs6', 14)" onmouseover="showTip(event, 'fs6', 14)" class="i">n</span> <span class="o">&amp;&amp;&amp;</span> (<span class="n">1</span> <span class="o">&lt;&lt;&lt;</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="i">bit</span>) <span class="o">&lt;&gt;</span> <span class="n">0</span>
         <span class="k">then</span> <span onmouseout="hideTip(event, 'fs4', 16)" onmouseover="showTip(event, 'fs4', 16)" class="i">image</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="f">SetPixel</span>(<span onmouseout="hideTip(event, 'fs10', 18)" onmouseover="showTip(event, 'fs10', 18)" class="i">x</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs7', 19)" onmouseover="showTip(event, 'fs7', 19)" class="i">dx</span>,<span onmouseout="hideTip(event, 'fs9', 20)" onmouseover="showTip(event, 'fs9', 20)" class="i">y</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs8', 21)" onmouseover="showTip(event, 'fs8', 21)" class="i">dy</span>, <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="t">Color</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="i">Black</span>)

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 24)" onmouseover="showTip(event, 'fs15', 24)" class="f">generate</span> (<span onmouseout="hideTip(event, 'fs16', 25)" onmouseover="showTip(event, 'fs16', 25)" class="i">cols</span>,<span onmouseout="hideTip(event, 'fs17', 26)" onmouseover="showTip(event, 'fs17', 26)" class="i">rows</span>) <span class="o">=</span>
   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 27)" onmouseover="showTip(event, 'fs18', 27)" class="i">rnd</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 28)" onmouseover="showTip(event, 'fs1', 28)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="t">Random</span>()
   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 30)" onmouseover="showTip(event, 'fs20', 30)" class="i">width</span>, <span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="i">height</span> <span class="o">=</span> <span class="n">7</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs16', 32)" onmouseover="showTip(event, 'fs16', 32)" class="i">cols</span>, <span class="n">7</span> <span class="o">*</span> <span onmouseout="hideTip(event, 'fs17', 33)" onmouseover="showTip(event, 'fs17', 33)" class="i">rows</span>
   <span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 34)" onmouseover="showTip(event, 'fs4', 34)" class="i">image</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs5', 35)" onmouseover="showTip(event, 'fs5', 35)" class="t">Bitmap</span>(<span onmouseout="hideTip(event, 'fs20', 36)" onmouseover="showTip(event, 'fs20', 36)" class="i">width</span>, <span onmouseout="hideTip(event, 'fs21', 37)" onmouseover="showTip(event, 'fs21', 37)" class="i">height</span>)   
   <span class="k">for</span> <span onmouseout="hideTip(event, 'fs9', 38)" onmouseover="showTip(event, 'fs9', 38)" class="i">y</span> <span class="o">=</span> <span class="n">0</span> <span class="k">to</span> <span onmouseout="hideTip(event, 'fs17', 39)" onmouseover="showTip(event, 'fs17', 39)" class="i">rows</span><span class="o">-</span><span class="n">1</span> <span class="k">do</span>
      <span class="k">for</span> <span onmouseout="hideTip(event, 'fs10', 40)" onmouseover="showTip(event, 'fs10', 40)" class="i">x</span> <span class="o">=</span> <span class="n">0</span> <span class="k">to</span> <span onmouseout="hideTip(event, 'fs16', 41)" onmouseover="showTip(event, 'fs16', 41)" class="i">cols</span><span class="o">-</span><span class="n">1</span> <span class="k">do</span>
         <span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 42)" onmouseover="showTip(event, 'fs6', 42)" class="i">n</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 43)" onmouseover="showTip(event, 'fs18', 43)" class="i">rnd</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs22', 44)" onmouseover="showTip(event, 'fs22', 44)" class="f">Next</span>()
         <span onmouseout="hideTip(event, 'fs3', 45)" onmouseover="showTip(event, 'fs3', 45)" class="f">drawTo</span> <span onmouseout="hideTip(event, 'fs4', 46)" onmouseover="showTip(event, 'fs4', 46)" class="i">image</span> <span onmouseout="hideTip(event, 'fs6', 47)" onmouseover="showTip(event, 'fs6', 47)" class="i">n</span> (<span class="n">7</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs10', 48)" onmouseover="showTip(event, 'fs10', 48)" class="i">x</span><span class="o">+</span><span class="n">1</span>, <span class="n">7</span><span class="o">*</span><span onmouseout="hideTip(event, 'fs9', 49)" onmouseover="showTip(event, 'fs9', 49)" class="i">y</span><span class="o">+</span><span class="n">1</span>)
   <span onmouseout="hideTip(event, 'fs4', 50)" onmouseover="showTip(event, 'fs4', 50)" class="i">image</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 51)" onmouseover="showTip(event, 'fs23', 51)" class="i">sheet</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 52)" onmouseover="showTip(event, 'fs15', 52)" class="f">generate</span> (<span class="n">80</span>,<span class="n">60</span>)
<span onmouseout="hideTip(event, 'fs23', 53)" onmouseover="showTip(event, 'fs23', 53)" class="i">sheet</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs24', 54)" onmouseover="showTip(event, 'fs24', 54)" class="f">Save</span>(<span class="s">&quot;invaders.png&quot;</span>, <span onmouseout="hideTip(event, 'fs25', 55)" onmouseover="showTip(event, 'fs25', 55)" class="i">Imaging</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs26', 56)" onmouseover="showTip(event, 'fs26', 56)" class="t">ImageFormat</span><span class="o">.</span><span onmouseout="hideTip(event, 'fs27', 57)" onmouseover="showTip(event, 'fs27', 57)" class="i">Png</span>)
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Drawing</div>
<div class="tip" id="fs3">val drawTo : image:Bitmap -&gt; n:int -&gt; dx:int * dy:int -&gt; unit<br /><br />Full name: Script.drawTo</div>
<div class="tip" id="fs4">val image : Bitmap</div>
<div class="tip" id="fs5">Multiple items<br />type Bitmap =<br />&#160;&#160;inherit Image<br />&#160;&#160;new : filename:string -&gt; Bitmap + 11 overloads<br />&#160;&#160;member Clone : rect:Rectangle * format:PixelFormat -&gt; Bitmap + 1 overload<br />&#160;&#160;member GetHbitmap : unit -&gt; nativeint + 1 overload<br />&#160;&#160;member GetHicon : unit -&gt; nativeint<br />&#160;&#160;member GetPixel : x:int * y:int -&gt; Color<br />&#160;&#160;member LockBits : rect:Rectangle * flags:ImageLockMode * format:PixelFormat -&gt; BitmapData + 1 overload<br />&#160;&#160;member MakeTransparent : unit -&gt; unit + 1 overload<br />&#160;&#160;member SetPixel : x:int * y:int * color:Color -&gt; unit<br />&#160;&#160;member SetResolution : xDpi:float32 * yDpi:float32 -&gt; unit<br />&#160;&#160;member UnlockBits : bitmapdata:BitmapData -&gt; unit<br />&#160;&#160;...<br /><br />Full name: System.Drawing.Bitmap<br /><br />--------------------<br />Bitmap(filename: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(stream: System.IO.Stream) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(original: Image) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(filename: string, useIcm: bool) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(type: System.Type, resource: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(stream: System.IO.Stream, useIcm: bool) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(width: int, height: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(original: Image, newSize: Size) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(width: int, height: int, format: Imaging.PixelFormat) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Bitmap(width: int, height: int, g: Graphics) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs6">val n : int</div>
<div class="tip" id="fs7">val dx : int</div>
<div class="tip" id="fs8">val dy : int</div>
<div class="tip" id="fs9">val y : int</div>
<div class="tip" id="fs10">val x : int</div>
<div class="tip" id="fs11">val bit : int</div>
<div class="tip" id="fs12">Bitmap.SetPixel(x: int, y: int, color: Color) : unit</div>
<div class="tip" id="fs13">type Color =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member A : byte<br />&#160;&#160;&#160;&#160;member B : byte<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool<br />&#160;&#160;&#160;&#160;member G : byte<br />&#160;&#160;&#160;&#160;member GetBrightness : unit -&gt; float32<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetHue : unit -&gt; float32<br />&#160;&#160;&#160;&#160;member GetSaturation : unit -&gt; float32<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;member IsKnownColor : bool<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />Full name: System.Drawing.Color</div>
<div class="tip" id="fs14">property Color.Black: Color</div>
<div class="tip" id="fs15">val generate : cols:int * rows:int -&gt; Bitmap<br /><br />Full name: Script.generate</div>
<div class="tip" id="fs16">val cols : int</div>
<div class="tip" id="fs17">val rows : int</div>
<div class="tip" id="fs18">val rnd : System.Random</div>
<div class="tip" id="fs19">Multiple items<br />type Random =<br />&#160;&#160;new : unit -&gt; Random + 1 overload<br />&#160;&#160;member Next : unit -&gt; int + 2 overloads<br />&#160;&#160;member NextBytes : buffer:byte[] -&gt; unit<br />&#160;&#160;member NextDouble : unit -&gt; float<br /><br />Full name: System.Random<br /><br />--------------------<br />System.Random() : unit<br />System.Random(Seed: int) : unit</div>
<div class="tip" id="fs20">val width : int</div>
<div class="tip" id="fs21">val height : int</div>
<div class="tip" id="fs22">System.Random.Next() : int<br />System.Random.Next(maxValue: int) : int<br />System.Random.Next(minValue: int, maxValue: int) : int</div>
<div class="tip" id="fs23">val sheet : Bitmap<br /><br />Full name: Script.sheet</div>
<div class="tip" id="fs24">Image.Save(filename: string) : unit<br />Image.Save(stream: System.IO.Stream, format: Imaging.ImageFormat) : unit<br />Image.Save(filename: string, format: Imaging.ImageFormat) : unit<br />Image.Save(stream: System.IO.Stream, encoder: Imaging.ImageCodecInfo, encoderParams: Imaging.EncoderParameters) : unit<br />Image.Save(filename: string, encoder: Imaging.ImageCodecInfo, encoderParams: Imaging.EncoderParameters) : unit</div>
<div class="tip" id="fs25">namespace System.Drawing.Imaging</div>
<div class="tip" id="fs26">Multiple items<br />type ImageFormat =<br />&#160;&#160;new : guid:Guid -&gt; ImageFormat<br />&#160;&#160;member Equals : o:obj -&gt; bool<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member Guid : Guid<br />&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;static member Bmp : ImageFormat<br />&#160;&#160;static member Emf : ImageFormat<br />&#160;&#160;static member Exif : ImageFormat<br />&#160;&#160;static member Gif : ImageFormat<br />&#160;&#160;static member Icon : ImageFormat<br />&#160;&#160;...<br /><br />Full name: System.Drawing.Imaging.ImageFormat<br /><br />--------------------<br />Imaging.ImageFormat(guid: System.Guid) : unit</div>
<div class="tip" id="fs27">property Imaging.ImageFormat.Png: Imaging.ImageFormat</div>

