module Komik

open System
open FSharp.Core
open System.IO
open System.Net
open System.Threading.Tasks
open FSharp.Data
open System.Drawing

type Card =
  { SetName : string
    Name : string
    Number : int
    Text : Option<string>
  }

type CardSet = JsonProvider<"http://mtgjson.com/json/OGW.json">
type SetCodes = JsonProvider<"http://mtgjson.com/json/SetCodes.json">

let Set (name : string) =
  CardSet.Load
    ( "http://mtgjson.com/json/"
    + name
    + ".json"
    )

let GetData (location : string) =
  use wc = new WebClient()
  wc.DownloadData(location)

let ImageUrl (card : Card) =
  String.Format
    ( @"http://magiccards.info/scans/en/{0}/{1}.jpg"
    , card.SetName.ToLower
    , card.Number
    )

let CardId (card : Card) =
  String.Format
    ( @"{0}_{1}"
    , card.SetName
    , card.Number
    )

let ImageName (card : Card) = String.Format(@"./{0}.jpg", CardId(card))

let GetCards (name : string) =
  let set = Set name
  set.Cards |> Array.map
    ( fun c ->
      { SetName = set.Code
      ; Name = c.Name
      ; Number = c.Number
      ; Text = c.Text
      }
    )

let GetImageUrls (cards : Card[]) =
  cards |> Array.map ImageUrl

let GetBitmaps (imageUrls : string[]) =
  imageUrls |> Array.map GetData |> Array.map
    ( fun i ->
      use m = new MemoryStream(i)
      use b = new Bitmap(m)
      b
    )

let Safe (cards : Card[]) =
  let bitmaps = GetBitmaps <| GetImageUrls cards
  bitmaps |> Array.zip cards |> Array.map (fun (c, b) -> b.Save (ImageName c)) |> ignore

[<EntryPoint>]
let main argv =
  let cards = GetCards "OGW"
  Safe cards
  0 // return an integer exit code
