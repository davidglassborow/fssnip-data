    /// intersperses the value c into the elements of the sequence s after every n elements of s
    /// e.g. intersperse -1 4 (seq{1..10}) will generate {1; 2; 3; 4; -1; 5; 6; 7; 8; -1; 9; 10;}
    let rec intersperse c n s = match Seq.isEmpty s with
                                | true -> s
                                | false ->  seq {let list = Seq.truncate n s |> Seq.toList
                                                 let length = List.length list
                                                 yield! list
                                                 if length >= n then
                                                    yield c
                                                    let rest = Seq.skip length s
                                                    yield! intersperse c n rest
                                                }
