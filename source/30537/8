open System.Linq.Expressions
open System.Linq
open System

type ExprBuilder() =
    member __.ReturnFrom(f: Expression<Func<_,_>>) = f
    member __.Return(x) = __.ReturnFrom(fun _ -> x)
let expr = ExprBuilder()

let predicate = expr { return true }
let selector = expr { return! fun x -> 2 * (1 + x) }

let a = [|1; 2; 3|].AsQueryable().Select(selector).Where(predicate)